Orodja , zaenkrat še v testni fazi , omogočajo avtomatsko opisovanje vsebine dokumentov , iskanje z iskalnimi zahtevami v naravnem jeziku in rangiranje zadetkov po izračunani relevantnosti .
Iskalnik se zaveda stanja poizvedbe , zato lahko iskalec z iskanjem s povratno zanko postopno izboljšuje kvaliteto iskanja .
Svetovni splet ( WWW ) je pomemben tudi kot vir informacij , uporabnih pri raziskovalnem in razvojnem delu .
Digitalne knjižnice v današnji rudimentarni obliki le deloma rešujejo problem obilice nepreverjenih dokumentov na Internetu .
Raziskati želimo ( a ) možnosti gradnje baze z avtomatsko zgrajenimi vsebinskimi opisi nestrukturiranih in strukturiranih dokumentov , ( b ) razviti iskalnik , namenjen preiskovanju baze z iskalnimi zahtevami v naravnem jeziku , in ( c ) z metodami strojnega učenja zgraditi uporabniške profile z opisom uporabnikovih informacijskih potreb , v obliki , ki bi omogočala avtomatizirano iskanje relevantnih dokumentov na Svetovnem spletu .
Velika večina naravoslovnih dokumentov pri nas je v slovenščini ali angleščini , zato smo se v jezikovno odvisnih postopkih gradnje baze dokumentov in iskalnika omejili na ta jezika .
Dinamična narava in obseg informacijskih virov na Internetu praktično onemogoča opisovanje vsebine dokumentov s ključnimi besedami ali deskriptorji , ki bi jih določal informacijski strokovnjak .
Pri gradnji baze uporabljamo vse tri korake za dokumente v obeh jezikih , vendar tu opisujemo le postopke za slovenščino .
Za avtomatsko indeksiranje angleških dokumentov smo uporabili metode , pogosto opisane v strokovni literaturi [ 1 ] .
Izjema so besede , ki jih imenujemo blokirane .
Gre za predstavnike nekaterih besednih vrst , kot so predlogi , prislovi , zaimki ipd.
V seznamu blokiranih besed za slovenščino je trenutno blizu 1600 besed in besednih oblik .
Besede , ki jih najdemo v tem seznamu izključimo iz nadaljnje obdelave .
Tudi krnjenje ( stemming ) je jezikovno-odvisen postopek in od njega je v največji meri odvisna kvaliteta avtomatskega indeksiranja in , posledično , kvaliteta iskanja .
Krnjenje je še posebej pomembno pri avtomatskem indeksiranju besedil v jezikih z bogato morfologijo , kakršna je tudi slovenščina .
Oba sta temeljila na obsežnih seznamih končnic .
5276 končnic v seznamu je razdelil na osem skupin , vsako s svojim načinom krnjenja .
Poleg enostavnega ujemanja in pravila o najmanjši dolžini krna je moralo končno zaporedje znakov v krnu ustrezati določenemu vzorcu , značilnemu za skupino , v katero je sodila končnica .
Algoritem je uporabljal tudi pravila o popravljanju krnov in pravila o izjemah .
Ko smo ga preizkusili pri krnjenju slovenskih medicinskih besedil , se je izkazalo tudi , da je manj primeren za strokovni medicinski jezik , v katerem so zelo pogoste tujke in poslovenjeni izrazi , temelječi na grški ali latinski osnovi .
V okviru projekta smo razvili nov , poenostavljen algoritem za krnjenje slovenskih besedil .
Pri analizi rezultatov krnjenja s Popovičevim algoritmom smo ugotovili , da gre največji del primerov premočnega krnjenja na račun brisanja soglasnikov na koncu krnov .
Novi algoritem za krnjenje je dvostopenjski in uporablja dva seznama končnic .
Drugi korak poteka v zanki , ki zaporedoma pretvarja končne soglasniške pare .
Osnovni razmislek je preprost : ( a ) pogostejša ko je beseda v dokumentu , pomembnejša je vsebina , ki jo beseda zastopa , in ( b ) redkeje ko se beseda pojavlja v bazi , bolj loči dokumente , v katerih je prisotna , od ostalih v bazi .
Pomemben vpliv na frekvenco besede v dokumentu ima seveda dolžina dokumenta , kar je treba upoštevati pri računanju njene povedne moči .
Neizogibna lastnost Interneta je dinamičnost , zato je pogostnost besednega krna v bazi nemogoče določiti med postopkom avtomatskega indeksiranja .
Do dokumentov , ki jih indeksiramo ( zaenkrat članki v obeh revijah in bibliografski zapisi ) , programi za indeksiranje dostopajo preko Spleta , zato lahko frekvence besed dopolnimo tudi z informacijami , implicitno vsebovanimi v oznakah HTML .
Vsaj načeloma je za vsebino dokumenta manj pomembna beseda , ki jo najdemo v običajnem besedilu , od tiste , ki je poudarjena , ta pa spet manj od besede , ki izvira iz enega od naslovov .
Po vsakem iskanju iskalec ponovi pregledovanje najbolje uvrščenih dokumentov in označi relevantne , tako da se drugi in tretji korak zanke ponavljata , dokler so na vrhu seznama še pozitivne spremembe , ali pa iskalec ne odneha .
Jedro postopka je reformulacija iskalne zahteve .
Lingua franca spletnih strani je angleščina , čeprav nekateri iskalniki zmorejo tudi postopke za zelo omejeno število drugih velikih jezikov .
Menimo , da naš iskalnik lahko vsaj deloma zapolni to praznino .
V prihodnosti načeloma lahko odpade vsebinska omejitev , kajti večina postopkov , ki smo jih razvili je vsebinsko neodvisna .
Zavedamo se , da dobrega iskanja ni mogoče opraviti v enem koraku , zato smo velik del pozornosti posvetili sposobnosti iskalnika , da se zaveda identitete iskalca in trenutnega stanja poizvedbe .
Iz primerov dokumentov , ki so označeni kot relevantni ali nerelevantni , z metodami za strojno učenje zgradimo model , ki ga lahko uporabimo za ocenjevanje relevantnosti drugih dokumentov .
Posamezna informacijska potreba lahko v grobem ustreza iskalni zahtevi , razlika je v tem , da nam zahteve ni treba formulirati eksplicitno temveč za to lahko uporabimo primere relevantnih in nerelevantnih dokumentov .
Strojno učenje so za učenje relevantnosti dokumentov na Spletu uporabili v okviru projekta WebWatcher [ 7 ] , za modeliranje informacijskih potreb posameznega uporabnika pa v okviru projekta Personal WebWatcher [ 8 ] .
Kljub številnim raziskavam uporabe strojnega učenja v tovrstne namene nismo zasledili uporabe strojnega učenja za obravnavo dokumentov v slovenščini .
Vsako od iskalnih zahtev obravnavamo kot posebno informacijsko potrebo in učni problem , kjer je vsak od dokumentov v zbirki primer : pozitiven , če je relevanten za podano iskalno zahtevo in negativen , če ni .
Zbirka vsebuje 335 izvlečkov v angleščini ter njihove slovenske prevode .
Za razliko od sistemov za atributno strojno učenje , ki uporabljajo predstavitev dokumentov s fiksno dolžino , sistemi za učenje relacij lahko uporabijo manj restriktivne oz. bolj bogate predstavitve .
Sistem TILDE generira logična odločitvena drevesa , ki jih v danem primeru lahko prevedemo na urejene sezname pravil .
Pomen drevesa je naslednji : " če v dokumentu nastopa beseda ulcer potem je dokument relevanten .
Dokumenten je tudi relevanten če v njem beseda ulcer ne nastopa , vendar nastopa beseda ulkusa , sicer je pa dokument nerelevanten .
" Pri zahtevi 14 , ki se glasi : " Kirurško ( operativno ) zdravljenje zlomov kosti " oz. " Surgical ( operative ) treatment of bone fractures " se TILDE nauči drevesa z naslednjim pomenom : " Dokument je relevanten , če v njemu nastopa kakšna od besed fracture , zlome , calcaneal , zlomih ali zlomov " .
Drevo napačno klasificira štiri relevantne dokumente kot nerelevantne in en relevanten dokument kot nerelevanten .
Oglejmo si še zahtevo št. 31 , ki se glasi : " Uporaba ultrazvoka v diagnostiki " oz. " Use of ultrasound in diagnosis " .
Iz primerov za to zahtevo ( od 770 je 22 relevantnih dokumentov , 11 v slovenščini in 11 v angleščini ) , TILDE generira drevo s pomenim : " Dokument je relevanten , če v njemu nastopa kakšna od besed ultrazvočni , sonography , ultrazvokom , ultrasound , echocardio-graphic , ehokardiografija , hoechst , laser , ali ultrazvočno , sicer je nerelevanten .
Pri drevesu za zahtevo št. 14 se pojavi več besed , ki izvirajo iz besede zlom ( zlome , zlomih , zlomov ) .
Pri drevesu za zahtevo št. 31 pa se pojavi več besed , ki izvirajo iz besede ultrazvok ( ultrazvočni , ultrazvokom , ultrazvočno ) .
Pri uporabi predstavitve dokumentov s krni dobimo pri iskalni zahtevi 14 drevo s pomenom : " Dokument je relevanten , če v njemu nastopa krn zlom ali krn calcaneu .
Sicer pogledamo če v dokumentu nastopa krn fractur : če nastopa in v dokumentu ni ne krna bas ne krna manag , je dokument relevanten .
Pri iskalni zahtevi 31 se TILDE nauči drevesa s pomenom : " Dokument je relevanten , če v njemu nastopa kakšen od krnov ultrazvoč , digit , ultrasound , echocardiograph , sonogra-phi , ehokardiograf , ali lh .
" Drevo s krni napačno klasificira dva nerelevantna dokumenta kot relevantna .
Poleg tega noben od relevantnih dokumentov ni bil klasificiran kot nerelevanten ( kar ni bilo primer pri drevesih z besedami ) .
Med najočitnejšimi pomanjkljivostmi sta dokaj okoren uporabniški vmesnik in slabo pregledna predstavitev rezultatov iskanja , predvsem pa počasnost , kar določa prioritetne naloge .
Pri učenju relevantnosti dokumentov iz primerov z metodami strojnega učenja bi kazalo raziskati možnosti vključevanja postopka učenja v iskanje s povratno zanko .
Standardizirani računališki zapis jezikovnih podatkov poveča njihovo uporabnost , saj spodbudi večnamenskost in izmenljivost podatkov ter poveča njihovo trajnost .
V članku argumentiram koristnost standardizacije , nato pa se osredotočim na standard ISO SGML ( Standard Generalised Markup Language ) ter z njim povezane standarde in pobude .
Pri pripravi besedila za tiskalnik je to npr. jezik PostScript in njegov naslednik PDF , oboje proizvod podjetja Adobe .
Pri avtorskih besedilih je precej uveljavljen zapis RTF podjetja Microsoft Corporation , v zadnjem času pa se že samoumevno izmenjuje besedila , zapisana kar v eni zadnjih verzij urejevalnika Word .
Posebno zadnja možnost zastrašuje s tesno povezanostjo besedila in orodja , s katerim je to nastalo .
V zadnjem desetletju se je na področju jezikovnih tehnologij namreč uveljavilo prepričanje , da so besedila , shranjena na računalnikih , vredna tudi mimo programja , ki nad njimi deluje .
Premik k zbiranju in obravnavi jezikovnih virov se je zgodil predvsem na področju računalniškega jezikoslovja oz. jezikovnih tehnologij , pa tudi pri podjetjih , ki imajo opravka z velikimi količinami besedil .
Industrijski standardi imajo namreč pomanjkljivost , da so v lasti podjetja , ki ima nad njimi tudi kontrolo ; podjetju je prepuščeno , ali javno objavi specifikacije svojega zapisa , kako in kdaj specifikacije spremeni in ali se drži svojih lastnih specifikacij v orodjih , ki jih ponuja .
Zaradi pomembnosti omrežja WWW ( svetovnega spleta ) se zato tu na kratko dotaknem tudi zapisov HTML ( Hypertext Markup Language ) in XML ( eXtensible Markup Language ) .
V 4. poglavju orišem predlog standarda ISO MARTIF ( Machine Readable Terminology Interchange Format ) in pobude TMX ( Translation Memory eXchange ) .
Opisno označeni podatki imajo to prednost , da vsebujejo informacije v bolj prečiščeni obliki in jih je zato lažje izmenjavati med ljudmi oz. aplikacijami .
Takšen pristop omogoča široko uporabo standarda , saj tako lahko pokriva dokumente z izrazito različno strukturo .
V tujini vedno več podjetij , ki imajo opravka z velikimi količinami besedil , prehaja na zapis SGML ; obstaja tudi že kar nekaj podjetij , ki se ukvarjajo izključno s SGML , bodisi z izdelovanjem programske opreme ali pa , pogosteje , z omogočanjem končnim uporabnikom , da preidejo na ta standard .
V Sloveniji poleg raziskovalnih projektov ( npr. MULTEXT-East , [ 3 ] ) verjetno prve začenjajo z uporabo SGML založbe ; tako sta npr. pri DZS v izdelavi angleško-slovenski slovar in korpus slovenskega jezika , ki sta oba zapisana v skladu s SGML .
Čeprav je bila prva inačica HTML DTD narejena kot aplikacija standarda SGML in so take tudi vse ostale , ki jih je objavil konzorcij W3C [ 14 ] , so izdelovalniki brkljalnikov ( prvi Netscape ) kaj hitro prekršili določila v DTD .
Ker se uporaba omrežja WWW vse bolj širi , nenazadnje kot sredstvo informiranja znotraj organizacij ( intranet ) , se kažejo tudi pomanjkljivosti jezika HTML .
Zaradi zapletenosti standarda SGML in zaradi vse večjega pomena mrežne izmenjave podatkov bo verjetno v prihodnosti XML postal osnova za množico izvedenih standardov in pobud za zapis različnih zvrsti jezikovnih podatkov .
TEI P3 loči več vrst oznak ; nekatere so obvezne v vseh s TEI skladnih dokumentih ( npr. glava dokumenta ) , od drugih lahko za naš konkreten projekt izberemo po eno ( npr. proza ali slovar ) , tretje , ki predstavljajo interpretacijo besedila ( npr. skladenjska analiza ) , pa lahko dodajamo na to osnovo .
Kot vidimo , posebej še če smo seznanjeni s TEI , je v geselskem članku za drugo sopomenko besede a zapisano geslo skupaj z dvema izgovorjavama , pripada pa besedni vrsti article .
Ima eno prevodno enoto , ki vsebuje uporabo tega prevoda in prevedeno geslo .
Za naše črke so , kot se vidi iz zgornjega primer , uporabljene entitete SGML , in sicer nabor znakov ISO 8879:1986 / / ENTITIES Added Latin 2 / / EN. Na TEI se dandanes že samoumevno sklicujejo projekti , ki ustvarjajo jezikovne vire , predvsem korpuse .
Šestjezični korpus MULTEXT-East [ 3 ] vsebuje okoli 300.000 besed v slovenskem jeziku : domače leposlovje ( ' Galjot ' , D.Jančar ) , časopisne članke ( Dnevnik ) ter prevedeno leposlovje ( ' 1984 ' , G.Orwell , v prevodu A.Puhar ) .
Korpus je označen po CES ( Corpus Encoding Specification ) , ki je TEI prirejen za opis korpusov , namenjenih izmenjavi in zbranih za namene jezikovnih tehnologij .
Korpus projekta TELRI , ki je zapisan v TEI , obsega Platonovo ' Republiko ' v dvajsetih jezikih , med njimi tudi slovenskem ( besedilo so digitalizirali na Inštitutu za slovenski jezik , ZRC SAZU ) .
Nadaljnji primer uporabe TEI pri nas pa je nastajajoči korpus FIDA [ 11 ] .
Prevajanje terminologije v slovenščino in iz nje je namreč pogosto pereča točka prevajalskega postopka , obenem pa v Sloveniji obstaja precej delnih in različno računalniško zapisanih terminoloških slovarčkov .
Ponudba terminoloških baz v standardiziranem formatu pa tudi olajša ponovno uporabo takih virov za druge programe jezikovnih tehnologij .
V zadnjem času postajajo programi s pomnilnikom prevodov aktualno pomagalo prevajalcem tudi za slovenski jezik , predvsem pri prevajalskem oddelku Službe Vlade RS za evropske zadeve [ 8 ] .
Del TMX , ki je že izdelan , zajema specifikacijo formata vrhnjih elementov , ki opisujejo dokument kot celoto ( glava dokumenta ) ter formata vnosov , tj. prevodnih enot .
Prevedba med raznimi tipi dokumentov pa je olajšana s tem , ker je vsem skupen SGML kot osnovni standard .
Največji težava pri izdelavi TMX predstavlja želja po ohranitvi formatiranja in označitev pomnilnikov prevodov , ki izhajajo iz konkretnih orodij , s katerimi je bil pomnilnik narejen ( npr. RTF ) , in sožitju teh oznak z oznakami , definiranimi s standardom .
Tudi večjezikovnost dokumentov prinaša težave .
Kot se že vidi iz uporabe XML ( raje kot SGML ) , je tudi tu TMX zazrt v prihodnost : za predstavitev naborov znakov predpisuje TMX uporabo Unicode ( ISO 10646 ) , ki je opisno sicer izredno močen , ga pa trenutno podpira še zelo malo orodij .
Področje standardizacije je izredno široko in obsega tudi načine zapisa govornih podatkov , obstajajo pa tudi ( še ) bolj jezikovno odvisne pobude , kot je npr. zapis oblikoslovnih oznak v leksikonih in korpusih .
Za razliko od angleških oznak MULTEXT-East so oznake ZRC berljive v slovenskem jeziku , krajše , pa tudi bolj v skladu s slovensko slovnico .
Čeprav je pri vseh v članku omenjenih standardizacijskih pobudah večjezičnost v ospredju , pa ostaja metajezik zapisov angleški , kot se vidi tudi na primerih zapisov HTML , TEI in TMX .
Ker njihovo združevanje in izmenjava omogočata razvoj jezikovnih tehnologij , te pa spodbujajo uporabo nacionalnih jezikov , zastopa to stališče Evropska unija , lahko pa bi jo tudi slovenska vlada .
Kjer pa so standardi šele v nastajanju , lahko udeležba slovenskih predstavnikov v ustreznih delovnih skupinah tudi vpliva na končno obliko standardov , posebej še tam , kjer drugače ne bi upoštevali posebnosti slovenskega jezika .
Prihodnost bo pa pokazala , v kolikšni meri bodo opisani standardi k nam tudi res prodrli .
Članek predstavi projekt in opiše zvrstnost ter zgradbo korpusa FIDA .
Že nekaj let se je na marsikaterem področju dejavnosti , povezanih z raziskovanjem in opisovanjem slovenskega jezika , vse očitneje kazala potreba po dovolj obsežnem , reprezentativnem in dostopnem korpusu , ki bi zagotavljal objektiviziran pogled na jezik in omogočal uporabo sodobne računalniške tehnologije tako pri temeljnih jezikoslovnih in drugih raziskavah kot pri razvijanju najrazličnejših programskih orodij za obdelavo besedil , predvsem v tistih delih , kjer morajo biti prilagojeni posameznemu naravnemu jeziku .
Po drugi strani pa je postalo očitno , da zaradi kompleksnosti naloge izdelava korpusa ne more biti stvar enega samega partnerja , temveč nujno zahteva tesno sodelovanje med strokami in ustanovami .
Poleg tega projekt združuje , kar zlasti za humanistični prostor v Sloveniji ni tako pogosto , znanstvenoraziskovalni ustanovi in kapitalski družbi .
Da bi bile informacije relevantne , je potrebno zagotoviti dovolj veliko količino raznovrstnih besedil , tako da korpus predstavlja uravnoteženo reprezentativno elektronsko besedilno zbirko .
Za lažje zagotavljanje uravnoteženosti je celotni korpus notranje hierarhiziran v podkorpuse , npr. časopisnih besedil , ki imajo lahko različne komponente , npr. Delo .
Vendar se v zalogi besedil FIDA shranjujejo tudi transkribcije govora , npr. parlamentarne razprave , z ambicijo oblikovati tudi podkorpus govornih besedil .
Tako je eden od parametrov doseganja reprezentativnosti velikost korpusa ; ta naj bi s svojim obsegom zagotovil dovolj veliko količino jezikovnih podatkov .
Velikost korpusov danes narašča zelo hitro , saj je ob vzpostavljeni dinamiki pritoka besedil v korpus vse lažje zagotoviti veliko količino besedil .
Ker je pomembno merilo avtentičnosti tudi morebitni jezikovni poseg v avtorsko besedilo ( 5 ( , v slovenskem primeru npr. lektorski , je v glavo dokumenta , če ta podatek obstaja , vključen tudi podatek o lektoriranju .
Vsako besedilo , vključeno v korpus FIDA pa je opredeljeno tudi glede na taksonomijo , definirano v glavi celotnega korpusa FIDA .
V zalogi besedil FIDA se zbirajo in shranjuje elektronska besedila v izvirni obliki , torej taka , kot jih za korpus pridobimo od različnih besedilodajalcev .
Z vsakim besedilodajalcem je podpisana enotna pogodba o odstopu besedil v elektronski obliki , ki zagotavlja avtorjem oz. imetnikom avtorske pravice nad besedilom vse pravice , hkrati pa ureja načine , na katere lahko projekt razpolaga z besedili za vse potrebne nadaljnje obdelave in formatiranja .
Načela zajemanja v zalogo besedil FIDA so deloma prekrivna z načeli drugih korpusov podobnega obsega , deloma pa so bila oblikovana tudi dodatna načela , npr. načelo regionalne uravnoteženosti pri tiskanih medijih .
Samo zajemanje besedil ni količinsko restriktivno , saj je cilj zbrati čim več besedil ( kar je v slovenskem prostoru zaradi še ne dovolj razvite kulture elektronskega shranjevanja in arhiviranja besedil težje , kot je bilo na začetku projekta pričakovano ) .
Iz zaloge besedil se s postopki elektronske obdelave pridobi enoten format besedil , ki šele standardizirano zapisana tvorijo korpus FIDA .
Količinska razmerja med različnimi besedili so v izhodišču odvisna predvsem od recepcije različnih besedil , pa tudi besedilne produkcije ( 1 , 4 ( .
Predvsem z vidika recepcije se za doseganje reprezentativnosti oblikujejo parametri glede na jezikovno zvrst , besedilno vrsto , žanrsko pripadnost , medij , v katerem se pojavljajo , ipd.
Za določanje razmerij med besedili posameznih jezikovnih zvrsti in besedilnih vrst se upošteva razpoložljive podatke o branosti , npr. podatki Mediane , pa tudi ankete , oblikovane posebej za ta namen ; ankete branosti so kriterij npr. tudi pri določanju količine besedil posameznih literarnih zvrsti v okviru umetnostnih besedil ( poezije , proze , dramatike ) , pri tem pa so upoštevani tudi podatki o knjižnični izposoji .
Uporaba TEI ima prednost v mednarodni primerljivosti zapisa , njena slabost za ( pretežno ) slovenski korpus pa je , da izhajajo imena oznak iz angleškega jezika .
Začetna parametrizacija TEI P3 za potrebe korpusa FIDA je podobna definiciji tipa dokumentov TEIlite ( ' lahki TEI ' , [ 9 ] ) .
Definicija tipa FIDA zajema štiri module TEI : TEI.prose ( leposlovje ) , TEI.linking ( navzkrižne povezave ) , TEI.analysis ( osnovni elementi jezikovne analize ) in TEI.figures ( slikovni elementi ) .
Nadalje vsebuje definicija tipa dokumenta FIDA še parametrizacijo posameznih elementov TEI , predvsem tistih iz glave besedila .
Tu so nam bila za vodilo priporočila CES ( Corpus Encoding Specification ) , ki smo jih pred tem uporabljali za slovenski korpus v projektu MULTEXT-East [ 7 ] .
Definicija tipa dokumenta FIDA določa oznake , ki se nato uporabljajo pri zapisu korpusa .
Glava TEI oz. FIDA vsebuje štiri vrhnje elemente .
V opisu zapisa glave celotnega korpusa je tudi definirana taksonomija korpusa FIDA .
V glavi korpusa FIDA so definirani identifikatorji jezikov , v glavi besedil pa , kam spada besedilo v taksonomiji korpusa FIDA .
Končno vsebuje glava še opis sprememb < revisionDesc > , ki beleži spremembe v korpusu oz. besedilu .
Celoten korpus FIDA je sestavljen iz glave in besedil .
Vsako besedilo ima spet svojo glavo ter telo < body > , v katerem je zapisano besedilo samo .
Telesa korpusa so pri pretvorbi iz originalnega zapisa besedila očiščena originalnih ( npr. RTF ) oznak , neASCII znaki pa bodo zapisani kot standardne entitete SGML ( npr. ' & ccaron ; ' za č ) .
Tu se bo označilo povedi , < s > , in besede , < w > , ki pa skozi vrednost atributa lahko zajemajo tudi oblikoslovne značilnosti besede v besedilu .
S tem se pridružujemo jezikoslovnim težnjam v svetu , ki so od konca 60-ih let temeljito spremenile pogled na jezik .
Veliko evropskih jezikov je že zajetih v besedilne korpuse in tuje izkušnje jasno izpričujejo , kako spodbudno to vpliva na razvoj uporabnega jezikoslovja , npr. slovaropisja v vseh oblikah ( sodobnejši in dostopnejši eno - in več - jezikovni slovarji , terminološki slovarji in drugi jezikovni priročniki ) , poučevanja jezika ( učbeniki in učni pripomočki ) in jezikovne tehnologije ( črkovalniki , slovnični pregledovalniki , govorni vmesniki ) , hkrati pa tudi na razvoj teoretičnih pogledov na jezik in komunikacijo .
Taksonomija FIDA .
V članku opisujemo različne postopke in meritve , ki smo jih udejanili oz. izvedli pri razvoju sintetizatorja govora za slovenski jezik .
Sintetizator govora smo uporabili za podajanje odgovorov v samodejnem odzivniku za poizvedovanje o letalskih informacijah .
Nato za vsak glas napovemo njegovo trajanje , za zveneči glas pa še višino osnovnega tona , na kateri naj bo glas izgovorjen .
Sledi preoblikovanje in povezovanje kratkih , vnaprej posnetih delov govornega signala , pri čemer se upoštevata želeno trajanje in višina ( zvenečih ) glasov .
Sistemi za pretvorbo besedila v govor omogočajo posredovanje informacij , kot so teletekst , elektronska pošta , faksi in druga besedila , brez potrebe po njihovi vidni predstavitvi , kar je še zlasti uporabno za slepe in slabovidne osebe .
S. Weilguny je , podobno kot pred njim Hribar , besedilo pretvoril v fonetični prepis , mu na preprost način priredil prozodične parametre in ga posredoval dvema formantnima sintetizatorjema , razvitima za angleški jezik [ Weilguny93 ] .
Razvili so tudi model za napovedovanje slovenske stavčne intonacije in model za napovedovanje trajanja premorov [ Dobnikar97 ] .
V Laboratoriju za umetno zaznavanje na Fakulteti za elektrotehniko v Ljubljani smo pričeli z delom na razvoju sintetizatorja govora v letu 1994.
Sintetizator govora smo uporabili za podajanje odgovorov v samodejnem odzivniku za poizvedovanje o letalskih informacijah [ Ipšić97 ] .
Sistem za sintezo slovenskega govora smo zasnovali modularno [ Gros97a ] , glej sliko 1.
Sam postopek sinteze govornega signala temelji na lepljenju osnovnih govornih enot s pomočjo algoritma TD-PSOLA [ Moulines90 ] .
Predvajanje digitalnega zapisa govornega signala poteka preko zvočne kartice računalnika .
V nadaljevanju opisujemo delovanje posameznih modulov sistema in način pridobivanja baze difonov .
Članek sklenemo z rezultati preskusa razumljivosti in naravnosti sintetiziranega govora .
Vhod v sintetizator govora predstavlja poljubno besedilo v slovenskem jeziku , zapisano v ASCII formatu .
Rezultat predobdelave je besedilo , zapisano kot zaporedje ločil in besed s črkovnimi grafemi .
Pretvorba vhodnega besedila v fonetični prepis besedila .
Izgovorjavo besede najprej iščemo v slovarju pogostih izgovorjav .
Do slovarja pogostih izgovorjav smo prišli s statistično analizo obsežne zbirke slovenskih besedil .
Mesto naglasa je določeno za vsako besedo posebej in se ga naučimo hkrati z učenjem jezika in besed .
Ta pravila smo uporabili za samodejno določanje mesta naglasa v besedi .
S temi pravili smo določili najbolj verjetno naglasno mesto v besedi .
Samodejna pretvorba besed v fonetični prepis .
Pravila smo ponovno optimizirali na slovarju pogostih izgovorjav .
Pri določanju izgovorjave besed smo upoštevali tudi koartikulacijske vplive na stikih med besedami .
Postopek nastavljanja prozodičnih parametrov se deli na dva poglavitna koraka : napovedovanje trajanja za posamezni glas in napovedovanje osnovne frekvence za zveneče glasove .
Za nastavljanje trajanja govornih enot za slovenski jezik smo uporabili dvostopenjski pristop kontrole trajanja [ Epitropakis93c ] na naslednji način : - govornim enotam v trajanju enega takta priredimo inherentne ali intrinzične dolžine , ki jih dobimo kot vsoto intrinzičnih dolžin glasov , vsebovanih v taktu ; - ko se takti vključujejo v večje govorne enote ( fraze , stavke ) , se skrajšujejo ali podaljšujejo , v skladu z zahtevami višjenivojskih prozodičnih pojavov , in privzamejo ekstrinzično dolžino .
Pri tem je potrebno upoštevati , da se vsi glasovi znotraj takta ne skrajšujejo oz. podaljšujejo v enaki meri .
Modela za določanje intrinzičnih dolžin glasov in ekstrinzičnih dolžin taktov temeljita na rezultatih , ki smo jih dobili z meritvami trajanj glasov v izbranih ločeno izgovorjenih besedah in tudi na tekočem govoru za prvi model , in na rezultatih meritev trajanja taktov na tekočem branem govoru za drugi model .
Nastavljanje intrinzičnega trajanja glasov poteka na naslednji način .
Sprva se nastavijo začetne vrednosti , ki so enake vrednostim , ki smo jih dobili pri merjenju trajanja in osnovne frekvence naglašenih in nenaglašenih samoglasnikov ter zvenečih soglasnikov izbranega govorca , podobno kot v [ Srebot88 ] .
Tako se na primer podaljšajo naglašeni zlogi z akutnim naglasom ter skrajšajo naglašeni zlogi s cirkumfleksnim naglasom .
Ekstrinzično trajanje glasov .
Da bi v sintetičnem govoru vsaj delno ustvarili vtis kvaziritmičnega menjavanja naglašenih in nenaglašenih zlogov , smo besedam oz. taktom z večjim številom zlogov priredili krajše trajanje .
Za pravilno upoštevanje rezultatov modeliranja trajanja različnih govornih enot iz obeh modelov smo razvili tri postopke , ki intrinzično dolžino takta , določeno z vsoto intrinzičnih dolžin posameznih glasov v taktu , prilagodijo zahtevani ekstrinzični dolžini , in pri tem vzpostavijo pravilna razmerja med trajanji posameznih glasov znotraj takta .
Dobljene vrednosti ekstrinzičnega trajanja glasov pri normalni hitrosti govora smo primerjali s trajanji istoležnih glasov v naravnem govoru na testni bazi , ki je obsegala 172 stavkov .
Še boljše ujemanje naravnega in napovedanega trajanja glasov se je pokazalo pri naglašenih samoglasnikih , kjer je povprečna vrednost absolutne razlike med trajanjem glasov pri naravnem govoru in med trajanjem glasov , napovedanim z metodo translacije , znašala le 8 ms .
Standardna deviacija napovedenega trajanja od naravnega trajanja glasov je bila 15.4 ms , za naglašene samoglasnike le 13.2 ms .
Po podatkih iz [ Huggins71 ] leži tako odstopanje še pod mejo najmanjše zazanavne spremembe trajanja ( angl. JND ali just noticeable difference ) v tekočem govoru .
Oblikovanje besednega naglasa poteka v petih korakih : - nastavljanje začetnih vrednosti osnovnih frekvenc , - nastavljanje skoka pri tonemskem naglasu , - omejitev skokov , - interpolacija vmesnih vrednosti osnovne frekvence in - razgibavanje osnovnih frekvenc .
Pri nastavljanju začetnih vrednosti samoglasnikov smo , v skladu s [ Srebot88 , str. 33-39 ] , upoštevali naslednje dejavnike : - inherentno višino samoglasnika , - položaj zloga , v katerem se samoglasnik nahaja : začetni , končni , sredinski , - odprtost zloga : odprt ali zaprt in - naglašenost zloga : naglašen , ponaglasni , prednaglasni .
Sprva taktu priredimo vrsto naglasa .
Nastavljanju tonemskega naglasa besed smo posvetili večjo pozornost kot oblikovanju stavčne intonacije .
Vrsto intonacijskega vzorca , ki ga priredimo posamezni frazi , določamo na podlagi ločila na koncu fraze .
Če se v stavku nahaja vprašalnica iz zbirke , je težišče na tej vprašalnici , sicer težišče postavimo na naglašeni zlog zadnje besede oz. takta v frazi .
SINTEZA GOVORA Z ZDRUŽEVANJEM OSNOVNIH GOVORNIH ENOT .
Na vhodu modula se preberejo podatki o zaporedju glasov , ki ga želimo sintetizirati , skupaj z želenimi vrednostmi osnovne frekvence in časa trajanja za posamezen glas .
Bazo difonov smo ročno označili : določili smo sredino prehoda med glasovoma znotraj difona , na zvenečih delih signala pa smo postavili značke osnovne frekvence .
Celotno bazo smo normirali na glasnost , tako da se na mestu zlepka srečata dela signala z enako glasnostjo .
Da bi ugotovili kakovost , naravnost in možnost uporabe umetno sintetiziranega govora , smo v Laboratoriju za umetno zaznavanje pripravili preskus sintetizatorja govora , na katerem je sodelovalo 21 poslušalcev v starostnem razponu med 19 in 45 leti ; 10 poslušalcev je bilo ženskega spola in 11 moškega spola ; tretjina poslušalcev je imela srednjo izobrazbo , dve tretjini visoko .
Vsakokrat je pri njem sodelovalo 5 ali 6 poslušalcev .
Preskus kakovosti sintetizatorja govora za slovenski jezik smo razdelili na tri dele : - ocenjevanje primernosti sintetizatorja govora za uporabo v samodejnem odzivniku za posredovanje letalskih informacij , - primerjava kakovosti sintetičnega govora s pošumljenim naravnim govorom , - opisne ocene kakovosti sintetiziranega govora .
Prvi del preskusa je pokazal , da je sintetični govor poslušalcem razumljiv .
Poslušalce smo povprašali , ali se jim zdi , da bi bil sintetizator govora v tej obliki primeren za samodejno podajanje informacij po telefonu .
Več kot dve tretjini poslušalcev sta menili , da bi bil primeren , manj kot ena tretjina je menila , da ne bi bil primeren .
Kar nekaj poslušalcev , ki so obkrožili ' ne ' , je po preskusu neuradno pripomnilo , da so tako oceno dali predvsem zato , ker se jim zdi neprimerno , da bi stroji ljudem odvzemali delovna mesta , in ne zato , ker bi se jim zdela kakovost sintetiziranega govora prenizka .
V tretjem delu testa so poslušalci ocenjevali različne nastavitve parametrov sintetizatorja govora .
Kakovost končnega sintetiziranega govora je odvisna od vseh modulov v sistemu .
Preskus naravnosti in razumljivosti je pokazal , da je umetno sintetiziran govor primeren za poslušanje .
Take zbirke besedil postajajo danes vse bolj nepogrešljiv vir podatkov v jezikoslovju .
V zadnjem času so taki korpusi že standardno shranjeni na računalnikih : ti nam izredno hitro in kompleksno pomagajo obvladovati ogromne količine besedil in jih tudi učinkoviteje izkoriščati .
Snovalci Fide [ 4 ] , prvega referenčnega korpusa v slovenskem jeziku , pravijo , da je osnovni namen korpusov omogočanje temeljitega vpogleda v jezik na najrazličnejših ravneh in področjih ; tako jih lahko s pridom uporabljamo v jezikoslovju , v humanističnih in družboslovnih vedah in celo v informatiki in matematiki .
Obdelave računalniških korpusov so bile aktualne in priljubljene že v petdesetih in šestdesetih letih , nato pa so zaradi pretvorbeno-tvorbene slovnice Noama Chomskega in njegovih vplivnih teorij doživele skoraj popolni zaton .
S širjenjem računalniških korpusov se je pojavila tudi potreba po razvrstitvi in ovrednotenju besedilnih zbirk .
Tako so besedila vključena v korpus glede na jezikovno zvrst , besedilno vrsto , žanrsko pripadnost , medij , v katerem se je neko besedilo pojavilo , ipd. ( Gorjanc [ 2 ] ) .
Uporablja se predvsem kot osnova za pisanje slovnic , slovarjev , tezavrov in drugih jezikovnih referenčnih materialov .
Gre za projekt , v katerem sodelujejo Filozofska fakulteta Univerze v Ljubljani , Institut Jožef Stefan , založba DZS in podjetje Amebis .
Zastarela besedila sproti spravljajo v arhivih , nova besedila , dostopna v računalniško berljivih oblikah , pa dodajajo ; - vzorčne : taki korpusi niso sestavljeni iz celotnih besedil , ampak iz fragmentov , ki so približno enako dolgi ( t.j. fragmenti v Brownovem korpusu ameriške angleščine vsebujejo okrog 2000 besed ) ; - primerljive in - vzporedne .
Uporaba večjezičnih besedilnih korpusov bi nam lahko v veliki meri olajšala delo , saj bi nam pokazala pragmatično rabo besed v enem ali več jezikih , s tem pa empirično podkrepila naše domneve o neki besedi oziroma besedni zvezi in njenih prevodih .
Predlaga , da kriteriju za tipičnost dodajo tudi , kdo je prevajal posamezna besedila ( profesionalni prevajalci ali amaterji , samostojni / člani prevajalske agencije , je prevod iz / v materni jezik , itd. ) .
Tudi glede zvrsti bi bilo potrebno dodati , da je prevod lahko drugačnega žanra kot besedilo v izvirniku , kar bi seveda vplivalo na razvrstitev v dvo - ali večjezičnih korpusih .
Tako lahko torej besedilne korpuse spet delimo na ( povzeto po Baker [ 11 ] ) : 1. vzporedne 2. večjezične 3. primerljive a ) Vzporedni korpusi - gre za zbirke besedil , sestavljene iz besedil v izvirnem jeziku in njihovih prevodov v tujem jeziku .
Tak tip korpusa postaja vse bolj nepogrešljiv ne le pri prevajanju samem , ampak tudi kot orodje pri programih za poučevanje prevajanja in pri učenju jezikov s pomočjo jezikovnih tehnologij .
Verjetno bodo koristili tudi pri izboljšavah sistemov za strojno prevajanje , saj naj bi se stroji ' učili ' iz takšnih korpusov .
Največji porabniki vzporednih korpusov so Združeni narodi , Nato , Evropska unija in nekatere države , ki imajo dva uradna jezika , npr. Kanada ( Canadian Hansard Corpora [ 12 ] ) .
V večjezičnih korpusih so lahko identificirani tudi termini oziroma njihovi prevodi , bodisi besede ali fraze .
Bakerjeva [ 11 ] pravi , da so sestavljeni iz dveh posameznih ločenih zbirk besedil v istem jeziku : eno zbirko sestavljajo besedila v izvirnem jeziku , medtem ko je druga zbirka prevodov v ta jezik iz enega ali več drugih jezikov .
Korpus prevodov mora biti reprezentativen ne le glede na avtorje besedil ampak tudi na prevajalce , ki so besedila prevajali .
Tako bi lahko primerjali različne prevode nekega besedila v enem samem jeziku .
Glavna funkcija vzporednih korpusov pa je ugotavljanje prevodnih norm v specifičnih kontekstih , in odkrivanje metod in rešitev , h katerim se zatekajo profesionalni prevajalci .
MULTEXT-East zajema šest srednje - in vzhodnoevropskih jezikov : bolgarski , češki , estonski , madžarski , romunski in slovenski , in je nadaljevanje projekta MULTEXT , ki je zajemal šest jezikov Evropske unije : angleščine , francoščine , nemščine , italijanščine , španščine in nizozemščine , pozneje pa je bil dodan še švedski korpus .
Za pregledovanje označenih besedilnih korpusov lahko uporabljamo vrsto programov .
Primer 1 nam kaže pojavitev besede mulatjera ( več o tem v Erjavec [ 3 ] ) .
Način pregledovanja je podoben kot pri KWIC , obstajajo pa tudi programi , ki avtomatsko izberejo kolokacije .
Nekateri konkordančni programi pokažejo cele stavke ali pa celo odlomke .
Pri vzporednih korpusih je prikaz v dveh poravnanih KWIC oknih .
Tako , na primer , iskanje vseh pojavitev neke besede , katere prevod se ne pojavi v prevodu stavka , v katerem se beseda nahaja , hitro pokaže na idiomatske uporabe te besede .
Ta konkordančnik omogoča avtomatsko primerjavo besedil in njihovih prevodov v deset evropskih jezikov .
Glavni cilj projekta je bil razvoj konkordančnega programa , ki je zgrajen na osnovi operacijskega sistema Windows , in predstavitev možnosti za eksperimentiranje z njim .
Precej konkordančnih programov dostopnih tudi na trgu .
V naslednjih poglavjih bom orisala pomen in koristnost korpusov v prevodoslovju .
Bakerjeva [ 18 ] trdi , da bo resnični preobrat v prevajalskih študijah pravzaprav nastopil kot neposredna posledica dostopa do velikih korpusov izvirnih in prevedenih besedil ter razvoja ne le specifičnih metod ampak tudi orodij za uporabo korpusov na načine , ki so najprimernejši za potrebe prevajanja .
Čeprav je koristnost besedilnih korpusov za potrebe prevodoslovja nesporna in je bilo o tem napisanih veliko teoretičnih razprav , je do njihove praktične uporabe za iskanje boljših prevodnih ustreznic in odkrivanje specifičnih struktur nekega jezika še dolga pot .
Uporaba vzporednih in primerljivih besedilnih korpusov v prevodoslovju postaja ena najnovejših metod , ki korpuse uveljavlja kot koristno orodje tudi pri poučevanju bodočih prevajalcev .
Marsikje konkordančni programi predstavljajo obvezni del poučevanja bodočih prevajalcev ( Maia , Barlow , King [ 16 ] ) in upamo lahko , da bo v bližnji prihodnosti tako tudi pri nas .
Omogoča nam torej primerjavo ne le dveh jezikov ( IJ in CJ ) oziroma besedil in njunih jezikovnih struktur , ampak tudi prevode s prostim tvorjenjem besedil v istem jeziku .
Primarna funkcija vzporednih korpusov pa je ugotavljanje prevodnih norm v specifičnih kontekstih in odkrivanje metod in rešitev , h katerim se zatekajo profesionalni prevajalci , ko skušajo premagati težave , s katerimi se srečujejo pri prevajanju nekega besedila .
MULTEX-East in TELRI sta dober začetek .
Ti projekti so nedvomno spodbuda za nadaljnje delo na tem področju , predvsem kar zadeva dvo - ali večjezične besedilne korpuse , ki bi se jih dalo koristno uporabljati v prevodoslovju .
Večjezične korpuse vzporednih in primerljivih besedil bi namreč lahko s pridom uporabljali na več področjih , predvsem pa pri ugotavljanju prevodne ustreznosti .
Zbirko programov spremljajo navodila , ki vsebujejo nasvete s področja internacionalizacije in lokalizacije .
Nasveti s primeri se praviloma nanašajo na prosto programje in na bolj razširjene komercialno dostopne izdelke , pri čemer so rešitve sistematično ponujene predvsem za različne operacijske sisteme in za bolj razširjene urejevalnike besedil .
Poleg tega navodila vsebujejo tudi informacije , specifične za slovenski kulturni prostor , na primer o pravilnem pisanju številk z decimalno vejico in o tem , kako so predpisani prazniki v Republiki Sloveniji .
Navodila so opremljena z značilnimi primeri .
Računalniška tehnologija je tradicionalno zelo angleško naravnana in do pred kratkim še ni sistematično upoštevala lokalnih značilnosti v kulturnih okoljih , v katerih se je uporabljala .
Žal takšno vsiljevanje povzroča uporabnikom težave , brž ko se srečajo različne uporabljene tehnologije , kar gotovo ne olajšuje dela z računalniškimi orodji in komunikacije med uporabniki .
Primer velike raznolikosti je kar najosnovnejše opravilo , ki ga mora izvajati urejevalnik besedil .
Univerzalni urejevalnik mora vsaj upoštevati , da odvisno od okolja ljudje pišejo v mnogih pisavah , v različnih smereh , pri čemer uporabljajo specifične načine vnosa znakov .
Takšna prizadevanja po prilagojevanju proste programske opreme so tudi v Sloveniji pokazala nekaj rezultatov [ 1-2 ] .
Da bi jih zbrali na enem mestu in omogočili prost dostop do njih , je skupina za raziskovanje naravnih jezikov na Odseku za inteligentne sisteme na Institutu Jožef Stefan omogočila uporabo strežnika nl.ijs.si s programsko opremo Apache .
Na njem je izključno s prostovoljnim delom nastala domača stran z imenom GNUsl .
GNU je ozko povezan z idejo prostih programov , zato najprej pojasnimo ta pojem [ 6 ] .
Uporabnik dobi namreč samo prevedeno kodo , izvorne pa ne .
Še več , pravzaprav niti prevedene kode ne sme deliti , saj mu kot končnemu uporabniku pogodba dovoljuje le , da ga shrani na disk in uporablja .
Del plačila bo pri tem ostal v trgovini , del ga založnik porabi za kritje svojih stroškov , del ga običajno nameni podpori avtorjem programja na plošči .
Vodilo pri projektu GNU je bilo zagotoviti , da čisto vsi uporabniki prejmejo programje pod enakimi pogoji .
Idejo strnemo z besedami : vsakdo , ki razširja programje v spremenjeni ali nespremenjeni obliki , mora z njim vred razširjati tudi vse pravice in svoboščine , ki jih je sam prejel , vključno s pravico do nadaljnjega razširjanja in spreminjanja .
Copyleft je splošni koncept .
Njegova izvedba v obliki dovoljenja za razširjanje in razmnoževanje je GNU General Public License , ali na kratko GPL , katere izvod je priložen vsakemu programu iz projekta GNU .
Od začetka leta 1997 do sredine leta 1998 je bilo zabeleženih skupno 75.000 dostopov .
Prevladujejo uporabniki iz domene.si , ki jim sledijo sorazmerno pogosto uporabniki iz pretežno ameriške domene.com in nato iz domene.net .
Trenutna strojna oprema , na kateri teče Trubar , žal ne dopušča množične uporabe tega servisa .
Taka zbirka besednih oblik je nastala v okviru projekta MULTEXT-East [ 5 ] in obsega približno 200.000 besednih oblik , kar je sicer majhen delež od približno 3.300.000 besednih oblik [ 4 ] , generiranih iz korenov SSKJ .
Za potrebe slovenskega jezika je bilo potrebno programu ispell navesti , kako so kodirane pisave , s katerimi so zapisani slovenski znaki , in katera priponska pravila naj uporablja , da baza z besednimi oblikami ne bi bila prevelika .
Pri slovenskem jeziku imamo na voljo več baz besednih oblik : bazo z ročno preverjenimi knjižnimi besedami in bazo z nepreverjenimi besednimi oblikami .
Če želimo preveriti pravilnost le ene besede , potem ni potrebno podati imena datoteke , pač pa jo zapišemo v polje String .
Neznane besede se na strežniku shranjujejo in so po ročnem pregledu dodane v osnovno bazo besed .
Zahtevnejši uporabniki lahko izbirajo dodatne možnosti , med njimi način urejenosti besed v izpisu , dolžino besed , ki so vselej pravilne , možnost , da so sestavljene besede vselej pravilne in možnost preproste statistične obdelave besedila .
GNUsl ponuja tudi obsežno zbirko navodil , kako prilagodimo nekatera računalniška orodja slovenskemu jeziku .
Navodila so pod naslovom Slovenščina in računalniki dostopna na slovenski spletni strani http://nl.ijs.si/GNUsl/tex/tslovene/slolang/slolang.html [ 9 ] Uvodoma so našteti standardizirani in nekateri specifični kodni nabori , ki se uporabljajo v povezavi s slovenskim jezikom .
Svetuje se , da v medsebojnem pisnem sporazumevanju v elektronski obliki , kjerkoli je to le mogoče , uporabljamo kodni nabor ISO-8859-2 , ki ob času pričujočega pisanja velja za priporočeno izbiro .
Kako na raznovrstih operacijskih sistemih uporabljamo slovenske znake , je navedeno za večino razširjenih sodobnih sistemov : MS-DOS , Windows 3.x , Windows 95 , Windows 95 OEM Service Release 2 , Windows CE , Windows NT , IBM OS / 2 Warp , Linux , HP-UX 9.05 , HP-UX 10.01 , SUN Solaris 2.x , SunOS 4.1.x , Apple Macintosh in VAX / VMS .
Rešitev je priporočena povsod tam , kjer uporabniki pri delu uporabljajo tipkovnico z neslovenskim razporedom .
Kot alternativni predlog je ponujena rešitev za vnos šumnikov s tipkovnico , na kateri ni posebnih tipk za šumnike in te vnašamo s sočasnim pritiskom na tipko ALT in nato na tipko za ustrezni sičnik .
Pri tem običajno na račun vnosa šumnikov izgubimo kakšno drugo funkcionalnost in je zato ta način vnosa šumnikov manj priljubljen .
Ta urejevalnik je že prerasel ozke okvire osnovnega namena , za katerega je bil napisan , in vse bolj predstavlja integrirano okolje , v katerem uporabnik preživi večino časa pred zaslonom .
Emacs je vsekakor sodoben sistem , ki omogoča preprosto uporabo različnih pisav in jezikovnih orodij , prevsem pa ga je mogoče poljubno prilagojevati , spreminjati in razširjati , kar cenijo raziskovalci s posebnimi zahtevami .
Kako raznovrstne pisave hkrati podpira , je prikazano na sliki 2.
Z njim v zvezi spregovorimo o slovenskih delilnih vzorcih in o orodjih za avtomatsko indeksiranju besed .
Z nabori znakov je seveda tesno povezano vprašanje pretvorb med njimi .
Prav tu opažamo , da se tako v uradnih elektronskih pismih državnih institucij kot v osebnih pismih in na elektronskih straneh , objavljenih bodisi na inter - ali intranetu , ne držimo priporočil in standardov , kar prav gotovo ne olajšuje in pospešuje uporabe teh tehnologij .
Sledijo pravila , kako so v Sloveniji uzakonjeni prazniki in dela prosti dnevi ter kako program gcal , ponovno iz projekta GNU , pripravimo , da jih upošteva .
Zbirka navodil se zaključuje z informacijami o nekaterih geografskih točkah v Sloveniji , kar koristi , če želimo izračunavati od zemljepisnega položaja odvisne dogodke , na primer astronomske pojave , in pri satelitski sinhronizaciji računalnikov .
V stopnjujočem redu zahtevnosti si te želje po prosti dostopnosti sledijo : - program , ki za poljubno slovensko besedo določi njeno osnovno obliko , - program , ki pri podani lemi tvori vse njene morfološke oblike , - orodje za avtomatsko indeksiranje slovenskih besedil , - obsežen in verificiran morfološko-sintaktični slovar , - obsežen in verificiran slovar vseh slovenskih besednih oblik , - Slovar slovenskega knjižnega jezika ( SSKJ ) v elektronski obliki , - tezaver slovenskega jezika v elektronski obliki , - program za preverjanje skladenjske pravilnosti , - večjezične slovarje za slovenski jezik v elektronski obliki , - program za razpoznavanje govora , - slovensko govoreči vmesnik med računalnikom in človekom .
V projektu GNU so začeli z internacionalizacijo in posledično lokalizacijo programja v letu 1995 [ 11 ] .
V času pisanja tega prispevka je podprta lokalizacija v projektu GNU na naslednjih nivojih : - Sistemska knjižnica GNU za programski jezik C , glibc , podpira lokalizacijo na način , določen s priporočilom POSIX.2 [ 12-13 ] .
- Zbirka orodij za pomoč pri prevajanju katalogov sporočil v programih , pisanih v programskem jeziku C , GNU gettext .
Za primer slovenščine je bilo to delo že opravljeno v Laboratoriju za odprte sisteme in mreže na Institutu Jožef Stefan .
Zadnja kategorija , LC _ MESSAGES , pa določa način dialoga med računalnikom in uporabnikom .
Vsako od sporočil v katalogu je treba prevesti v vsakega od podprtih jezikov .
Trenutno stanje podprtosti ponazarja tabela 1.
Slovenski prevodi so , enako kot prevodi v druge jezike , delo prostovoljnih skupin prevajalcev , ki jih koordinira François Pinard z Univerze v Montrealu .
GNUsl predstavlja poizkus , kako bi pregledali , združili in ocenili delo , ki je bilo doslej opravljeno na področju jezikovnih tehnologij za podporo slovenskemu jeziki in katerega rezultati so prosto dostopni , ter kako bi smotrno porazdelili napore , da se vloženo delo ne bi po nepotrebnem pomnoževalo .
Tabela podprtosti za programske pakete iz projekta GNU .
GOVORJENA BESEDILA IN KORPUS SLOVENSKEGA JEZIKA .
Govorjena besedila so v slovenskem prostoru malo raziskana , kar je predvsem posledica značilnosti te vrste besedil .
Na podlagi pilotne analize otroškega govora bomo ob obravnavi osebnih deiksisov , to je izrazov s kazalno vlogo , skušali pokazati razliko med govorjenimi in zapisanimi besedili in s tem utemeljiti potrebo po načrtovanem zbiranju govorjenih besedil in njihovo vključitev v korpus slovenskega jezika .
GOVORJENA BESEDILA IN KORPUS SLOVENSKEGA JEZIKA .
Govorjena besedila so bila v zgodovini jezikoslovnega raziskovanja jezika ves čas nekoliko zapostavljena .
Vzrok takemu stanju gre iskati v naravi prenosnika , to je govora , in v razvoju tehnike , ki podpira zbiranje gradiva .
Za pogovor so značilni prekrivajoči se govor , ponavljanje , premori , zapolnjevalci vrzeli , napačni starti , samokorekture .
Vse te značilnosti so kazalci kognitivnega procesa na različnih ravneh , in sicer od načrtovanja teme pogovora do iskanja besed in strukturiranja izrekov .
S stališča novejših pristopov h govorjenemu diskurzu je pomanjkljivost Searlovega in Griceovega pristopa v tem , da se ukvarjata ločeno s pomenom , ki ga je govorec hotel izraziti , in s poslušalčevim razumevanjem .
Korak naprej je najprej pomenilo snemanje z magnetofonom ( ob tem si je raziskovalec še vedno moral zapisovati opombe o nejezikovnem sobesedilu in okoliščinah , ki so spremljale govorno dejanje ) , nato pa snemanje s kamero .
Raziskovalci so se znašli pred vprašanjem , kaj in kako prepisati s traku .
Govorjena besedila predstavljajo večino besedil v komunikacijskih procesih , tako v spontanih situacijah kot tudi v vnaprej načrtovanih , na primer medijih .
Za primer si oglejmo razlike med rabo osebnih deiksisov ali izrazov s kazalno vlogo v govorjenih in zapisanih besedilih .
Teorije o razumevanju jezika , med njimi N. Chomsky s pretvorbno slovnico , so ostale na razlagalnem pristopu misli in mišljenja , ki predpostavlja pomen " egocentričnega " subjekta .
Pri tej želji , razjasniti pomen jezika v kontekstu , je študij deiktičnih izrazov ena od najbolj obetajočih poti .
Razumemo jih lahko le z referenco na situacijo , v kateri so bili uporabljeni .
Mednje pa se uvrščajo tudi izrazi spoštovanja , ki označujejo status ali položaj osebe , ki se nanjo obračamo .
Slovnična kategorija osebe je odvisna od predstav o udeleženskih vlogah in njihove gramatikalizacije v posameznih jezikih .
Veliko jezikov ( med njimi tudi slovenščina ) jih v določenih sklonih sploh ne izraža ( v imenovalniku je osebni zaimek v slovenščini v nepoudarjenih položajih izpuščen , in sicer tako prvoosebni , kot drugoosebni in tretjeosebni ) , ker je informacija o osebi izražena v glagolski končnici .
V tem procesu jim odrasli lahko pomagamo , lahko pa jim stvari otežujemo tudi na tak način , da v svojem govoru deiksisov ne uporabljamo pravilno .
Tako moramo recimo ločevati med govorcem in virom izreka , sprejemnikom in ciljem , poslušalcem ali opazovalcem in naslovnikom ali ciljem .
Primer iz gradiva bo pokazal , s katerimi sredstvi otroci , stari približno dve leti in pol , izražajo osebo .
Vlogo osebnih deiksisov opravljajo osebni zaimek za prvo osebo ednine jaz , ki ga otrok izreče tudi v imenovalniku , kjer je sicer v slovenščini v nepoudarjenih položajih ničta kategorija .
Še v isti vlogi ga potem v dveh naslednjih izrekih izpusti , vendar je referenca na naslovnika izražena v glagolski končnici .
Neustrezno slovnično sredstvo , ki ga uporabi , je v njenem govoru pogosto , je pa posledica govornega zgleda iz okolja .
Isti način vzpostavljanja reference z govorcem kasneje v isti propozicijski sekvenci uporabi še nekajkrat .
Poimenovanj referentov z izrazi , ki nimajo lastne posebne reference , je v govorjenih besedilih več kot v zapisanih , ker je v prvih informacija dopolnjena še z nejezikovnimi sredstvi .
Govorjena besedila se zaradi narave komunikacijskega procesa , v katerem nastajajo , razlikujejo od zapisanih besedil .
Poleg jezikovnih sredstev na njihovo razumevanje v veliki meri vplivajo tudi nejezikovna sredstva , predvsem kontekst .
Vključevanje govorjenih besedil v korpus slovenskega jezika bi pomenilo prvi korak v njihovo intenzivnejše raziskovanje , hkrati pa bi omogočalo tudi premišljen način načrtovanja jezika v različnih govornih položajih , predvsem v javnih formalnih govornih položajih , na primer medijih .
Popolno sliko je tako zapisovanje nudilo tudi zato , ker so poleg govora zapisovali še okoliščine in sobesedilo , v katerem so se vršila govorna dejanja .
PROBLEMATIKA PREVAJANJA ZAKONODAJE EVROPSKE UNIJE .
Prevajanje zakonodaje Evropske unije v slovenščino ter slovenske zakonodaje v enega izmed jezikov EU ( glede na dosedanjo prakso je to angleščina ) pomeni enega največjih prevajalskih projektov zadnjih let v Sloveniji .
Skupaj približno 160 000 strani besedil bi moralo biti prevedeno do leta 2003 , ko naj bi Slovenija predvidoma postala polnopravna članica Evropske unije .
Obvladovanje takšne količine prevajanja zahteva veliko število usposobljenih prevajalcev , premišljeno organizacijo dela , koordinacijo med prevajalci , uporabo enotnega izrazja , spremljanje prevoda od naročila do končnega izdelka , večkratno pregledovanje prevoda , lektoriranje in strokovno redakcijo .
Mednje spadajo različni slovarji v elektronski obliki , črkovalniki , tezavri , CD-romi , program za pomoč pri popravljanju besedil , programi za urejanje terminologije in programi s pomnilnikom prevodov .
Že daljnega leta 1958 je Svet , danes znan kot Svet EU , uveljavil svojo prvo uredbo , v kateri je določeno , da so uradni jeziki držav članic uradni jeziki Skupnosti in hkrati delovni jeziki vseh ustanov Skupnosti .
Ko bo Slovenija postala polnopravna članica EU , bo tudi slovenščina postala uradni jezik v Bruslju , zakonodaja EU pa za državo Slovenijo in njene državljane zavezujoča .
Največja naloga pa nas čaka v obdobju pred pridružitvijo , predvidoma leta 2003.
Do takrat je treba prevesti približno 100 000 strani uradnih dokumentov , kolikor jih je bilo napisano od nastanka Evropske skupnosti za premog in jeklo ( 1951 ) do danes .
Poleg tega posamezni organi EU na leto izdajo približno 5000 strani novih dokumentov , ki jih je tudi treba prevesti .
Število strani slovenske zakonodaje , ki mora biti prevedena , je ocenjeno na 60 000 strani [ 1 ] .
Evropska zakonodaja se večinoma prevaja iz angleščine , vendar pa je zaradi natančnosti terminologije izvirnik potrebno pogledati tudi v francoskem ali nemškem jeziku .
Razlog za tako odločitev je povsem praktičen - največ je prevajalcev za angleški jezik , hkrati pa pregled usklajenosti obeh zakonodaj poteka v angleščini .
Tako delo zahteva veliko število usposobljenih prevajalcev in dobro organizacijo , ki vključuje koordinacijo med prevajalci , pregled nad že prevedenimi dokumenti , spremljanje prevoda od naročila do končnega izdelka , strokovno redakcijo , lektoriranje in urejanje terminologije .
Prevajanje je organizirano v Prevajalskem oddelku v okviru Službe Vlade RS za evropske zadeve ( v nadaljevanju SVEZ ) .
Septembra se bodo v SVEZ zaposlili novi prevajalci , pravnika-redaktorja , lektor in terminolog , tako da bo tim skupaj štel 35 zaposlenih .
Poleg redno zaposlenih bodo še vedno prevajali tudi zunanji sodelavci .
Sledila bo predstavitev uporabe teh orodij v Prevajalskem oddelku SVEZ , pogojev za njihovo nadaljnjo uporabo in njihova dejanska uporabnost .
Za učinkovito izvajanje tako velikega prevajalskega projekta , kot je prevajanje evropske in slovenske zakonodaje , je pomembno natančno računalniško spremljanje delovnega poteka in dostop do prevodov za vse , ki jih bodo potrebovali pri pripravah za vstop RS v EU .
Prevod se opremi z zaporedno številko , vrsto in področjem dokumenta , datumom naročila , rokom , s polnimi podatki o naročniku , z referenčno številko ( za evropsko zakonodajo je to t. i. številka CELEX , za slovensko pa SOP - slovenska oznaka predpisa ) , s polnim naslovom dokumenta , z izhodiščnim in ciljnim jezikom , s številom strani ali računalniških znakov , z avtorjem dokumenta , s priskrbovalcem , tj. organom , ki je za prevod zadolžen , s predvidenim prevajalcem , lektorjem in redaktorjem ter s stopnjo zanesljivosti prevoda .
Sekundarna zakonodaja se nanaša na najrazličnejša področja Evropske unije , najobsežnejša pa je na področju notranjega trga in kmetijske politike .
- slovenska zakonodaja , ki jo je potrebno prilagoditi zakonodaji EU .
Pri tem je treba upoštevati , da se bo en dokument v postopku usklajevanja prevajal večkrat - od osnutka do končne različice .
- ostali dokumenti ( Državni program za prevzem pravnega reda EU s sprotnim spreminjanjem in dopolnjevanjem , predpristopna strategija , programi PHARE itd. ) Celotni delovni potek prevajanja je razdeljen na več faz .
V prvi fazi se prevajani dokument predhodno obdela in opremi z referenčnim gradivom .
Pogoj za kakršnokoli delo s pomnilnikom prevodov je izvirnik v elektronski obliki .
Zakonodaje EU ni težko dobiti v tej obliki , saj so vsi pravni viri shranjeni v bazi CELEX , ki je dostopna na CD-romu , z uporabniškim geslom pa tudi preko interneta .
Izbrani prevajalec v Prevajalskem oddelku SVEZ ali resornem organu oziroma zunanji sodelavec dobi po možnosti dokument v elektronski obliki in ustrezno referenčno literaturo .
Ker Prevajalski oddelek še ni v celoti vzpostavljen , se dokumenti prevajajo preko Prevajalsko-lektorske službe pri Uradu predsednika Vlade RS z zunanjimi prevajalci .
Bolje kaže od septembra 1998 dalje , ko se bodo zaposlili novi prevajalci , pravniki-redaktorji , lektor in terminolog , ogromne količine besedil pa bodo še vedno pomagali prevajati zunanji sodelavci .
Z vzpostavitvijo informacijsko-dokumentacijske centra za podporo pri vključevanju Slovenije v Evropsko unijo bodo olajšani tudi dostopi do baz podatkov , medsebojne povezave , evidentiranje prevodov in vodenje terminološke baze .
V Prevajalskem oddelku v SVEZ delamo v okolju Word for Windows 95 in uporabljamo jezikovna orodja za urejanje besedil , ki so na razpolago v oknih .
Urejevalnik besedil bi bil vsekakor izkoriščen bolje , če bi prevajalci poznali vse možnosti , ki jih ponuja .
Ena od potreb je izobraževanje za prevajalce , kjer bi se seznanili s tistimi operacijami , ki jih urejevalnik besedil lahko olajša ( upravljanje z dolgimi besedili , ustvarjanje lastnega slovarčka ) .
Pomnilnik prevodov lahko polnimo med samim prevajanjem v urejevalniku Word ali z že prevedenimi besedili .
V tem primeru morata biti besedili v izvornem in ciljnem jeziku poravnani .
Možnost , da prevajalec dobi predlog za segment , ki ga prevaja , je odvisna predvsem od količine podatkov , shranjenih v pomnilniku prevodov in od ponavljanja posameznih segmentov v prevajanem dokumentu .
Tudi v Bruslju , kjer prevajalska služba šteje preko 1000 prevajalcev , se TWB uporablja poskusno .
Pravni dokumenti EU so organizirani po področjih ( kmetijstvo , carina , okolje , promet ...
Vsak dokument prevzame del iz prejšnjega dokumenta oziroma se nanj nanaša .
V najboljšem primeru , ko se prevajalec " nahaja na vrhu drevesa " , je možnost zadetkov podobnih ali enakih segmentov sedemdeset odstotna .
Za shranjevanje v pomnilnik prevodov so seveda primerna le zelo kvalitetna besedila , ki so šla skozi strokovno in jezikovno redakcijo in kjer je preverjena enotna raba izrazja .
V Prevajalskem oddelku od aprila 1998 poteka poskusno delo s TWB .
Šele ko bo vzpostavljeno notranje omrežje med prevajalci , bodo lahko začeli intenzivneje polniti bazo s prevodi .
Poleg tega je treba upoštevati še druge razloge , ki otežujejo uporabo programa .
Prevajalci komaj sproti strežejo zahtevam po prevodih .
Problem predstavljajo tudi tabele .
Na začetku , ko pomnilnik še ne vsebuje veliko prevodov , je delati z njim zamudneje kot " navadno " prevajanje z morebitnim iskanjem po že narejenih podobnih prevodih .
Šele po tej fazi bi bilo prevajalčevo delo občutno olajšano .
Posamezen dokument se bo prevajal večkrat - od osnutka in vmesnih preverjanj do končne različice .
Za uporabo iz pomnilnika bo zadoščal le prvi prevod , ki bo pri nadaljnjem spreminjanju in dopolnjevanju prevajalcu nudil prevedene rešitve .
Preden bo steklo delo s TWB bodo prevajalci uporabljali navodila in vzorce za prevajanje pravnih dokumentov Evropske unije , ki bodo na voljo septembra v angleškem , francoskem in slovenskem jeziku .
V Prevajalskem oddelku , tako kot s Translator's Workbench , poteka poskusno delo tudi s programom Multi Term 95 , ki deluje v okolju Okna .
Ko bo ta vzpostavljena , bodo prevajalci lahko iskali in vpisovali izraze .
V pogovorni vrstici samo izberemo izvorni in ciljni jezik ter vpišemo iskani izraz .
V Prevajalskem oddelku smo začeli delati na podlagi glosarja Bele knjige o notranjem trgu , ki ga je v obliki MT z angleškimi , francoskimi in nemškimi izrazi dala Terminološka enota pri Evropski komisiji ( 1650 vpisov ) .
Žal so priganjajoči prevajalski roki in pomanjkanje časa glavni razlog za počasno uvajanje dela s prevajalskim orodjem TWB .
Po drugi strani so jezikovni viri specifični in hkrati pomemben temelj za razvoj prevajalskih programov .
Čeprav moramo slednjim ( tudi razvojno ) posvečati pozornost , je na področju jezikovnih tehnologij dolgoročno treba dati poudarek ustvarjanju jezikovnih zbirk : oblikovanju slovenskega nacionalnega korpusa , dvo - oz. večjezičnih korpusov s slovenščino in sorodnih baz ( npr. splošnih in specialnih slovarjev ) .
V primeru TM je programski del sistem , ki omogoča delo z bazo in išče skladne segmente , jezikovni pa dvo - ali večjezični poravnani korpus .
Takšno dihotomno obravnavanje je uporabno , ker olajšuje razmislek o tovrstnih računalniških pripomočkih v zvezi s posameznim - v okviru tokratne razprave slovenskim - jezikom .
Zanimanje za razvoj takšnih pripomočkov je odvisno predvsem od komercialnih in političnih potreb , možnosti za razvoj pa od znanja ( znanstveno-raziskovalnih možnosti ) .
Zdaj takšno zanimanje - v prvi vrsti politično - obstaja , eksplicitno izraženo s strani Evropske unije ( zaradi iminentne pridružitve in s tem potrebnega dela , zlasti na področju zakonodaje ) in ZDA ( zaradi geopolitičnega položaja Slovenije ) [ 5 ] .
Ustanovitev Prevajalske službe za evropske zadeve pri slovenski vladi je verjetno znak podobnega zanimanja ali vsaj potrebe tudi doma .
Takšne okoliščine so priložnost , da dobimo ustrezna orodja za slovenski jezik - in pri tem izkoristimo lastno znanje , ne le uporabimo drugod razvite izdelke .
Ob kratkoročnih moramo razmisliti tudi o dolgoročnih - zlasti če se zavedamo , da so tisti sistemi za MT , ki pomenijo kakovost , plod dolgotrajnega ( desetletnega ) dela , in da tudi prevodni pomnilniki , ki so v primerjavi z njimi preprosti , niso nastali v letu ali dveh .
To pa pomeni , da mora biti prednostna naloga dolgoročnega razvoja računalniških orodij za slovenščino oblikovanje korpusov .
Kako zagotoviti korpuse ?
Sicer pa se v odgovor ( seveda ob ureditvi avtorskih pravic ) ponujajo tri točke : - Oblikovanje Slovenskega nacionalnega korpusa po zgledu takšnih že obstoječih .
To bo verjetno zahtevnejše , vendar bi lahko izhodišče pomenili prevodi pravnih besedil , ki bodo nastajali med pridruževanjem Evropski uniji .
Potencialni viri so še drugi dokumenti , ki jih morajo npr. tuja podjetja zagotoviti v slovenščini , ali določeni založniški projekti .
- Nekoliko na meji konteksta korpusov , vendar vseeno pomembne v okviru jezikovnih tehnologij , so strokovne terminološke zbirke , glosarji in podobne baze .
Podatki o takšnih zbirkah naj bi se stekali npr. v NUK in bili objavljeni na spletu ali bili dostopni prek COBISS , po drugi strani pa bi veljalo avtorje spodbuditi , naj jih pripravljajo upoštevaje uveljavljen format , ki bo omogočil njihovo integracijo v prevajalska orodja .
Nedvomno imajo jezikovne tehnologije - z računalniškim in računalniško podprtim prevajanjem kot pomembnima komponentama - veliko vlogo v informacijski družbi , saj olajšujejo pretok informacij in jih uporabniku zagotavljajo v njegovem jeziku .
GOVORNA POIZVEDOVANJA V čEŠčINI , NEMŠčINI , SLOVAŠčINI IN SLOVENŠčINI .
V članku predstavljamo mednarodni projekt SQEL ( Spoken Queries in European Languages ) in posebej opisujemo dosežke raziskovalne skupine na Fakulteti za elektrotehniko v okviru tega projekta .
Že od začetka razvoja računalnikov v drugi polovici tega stoletja si raziskovalci prizadevajo , da bi se s strojem oziroma računalnikom sporazumevali kot z ljudmi – z govorom .
Na tržišču se že pojavljajo sistemi za narekovanje besedil za » velike « jezike , kot so angleščina , francoščina in nemščina , ki jih je mogoče uporabljati na osebnih računalnikih .
Ti so od jezika neodvisni in uporabnik sam določi » zvoke « - besede , ki jih bo sistem razpoznaval .
Uporabnost samodejnega razpoznavanja , razumevanja in tvorjenja govora je zelo raznovrstna , na primer : - Prostoročno upravljanje s stroji in računalniki , brez uporabe tipkovnice , miške , ipd.
- Uvedba samodejnih sistemov za govorno poizvedovanje prek telefona .
Opise nekaterih takih sistemov najdemo v [ 1 , 2 , 3 ] .
Uporaba omenjanih samodejnih postopkov je v marsičem odvisna od jezika , v katerem bo potekalo sporazumevanje .
Nobenega dvoma ni , da se bo uporaba jezikovnih tehnologij , med katere se ti postopki uvrščajo , s časom vse bolj uveljavila in bo marsikje poenostavila in pocenila dostop do informacij kakor tudi nekatere proizvodne industrijske postopke .
Pričujoči prispevek govori o rezultatih dela na tem področju na mednarodnem projektu , pri katerem je sodelovala tudi raziskovalna skupina iz Slovenije .
Letos 24. aprila se je z znanstvenim delovnim srečanjem v okviru mednarodne konference Artificial Intelligence in Industry - AIII'98 [ 4 ] v Stari Lesni na Slovaškem končalo delo na mednarodnem triletnem projektu Spoken Queries in European Languages ( SQEL – Govorjena poizvedovanja v evropskih jezikih ) iz sklopa projektov Copernicus , ki jih denarno podpira Evropska skupnost .
Na projektu so kot partnerji sodelovali raziskovalci iz češke , Nemčije , Slovaške in Slovenije .
Slovenijo je na tem projektu predstavljala raziskovalna skupina šestih raziskovalcev pod vodstvom prof. Nikole Pavešića iz Laboratorija za umetno zaznavanje na Fakulteti za elektrotehniko Univerze v Ljubljani .
Cilj projekta je bil razviti samodejni sistem za posredovanje informacij preko telefona , ki bo zmožen iz klicalčevega govora sprva ugotoviti , v katerem jeziku bo potekal pogovor in nato z njim voditi razgovor na vsebinsko omejenem področju poizvedovanj o letalskih oziroma železniških povezavah .
Tak sistem mora biti sposoben : - ugotoviti , v katerem izmed štirih možnih jezikov ( češki , nemški , slovaški , slovenski ) je klicalec nagovoril sistem ; - razpoznati govor v omenjenih štirih jezikih ; - ugotoviti namen klicalčevega poizvedovanja ; - poiskati želene informacije v podatkovni zbirki informacijskega sistema ; - postaviti morebitna vprašanja pri nepopolnih , slabo izraženih ali nepravilno razpoznanih zahtevah klicalca ; - tvoriti odgovore v obliki govornega sporočila v jeziku , ki ga govori klicalec .
Projekt so vodili nemški sodelavci iz Univerze Friderika – Aleksandra Erlangen – Nürnberg iz Oddelka za razpoznavanje vzorcev ( Lehrstuhl für Mustererkennung ) pod vodstvom prof. Heinricha Niemanna .
Ta skupina je med sodelovanjem na predhodnih projektih že razvila delujoč sistem EVAR ( Erkennen – Verstehen – Antworten – Rückfragen ) za govorno telefonsko poizvedovanje o železniških povezavah v nemškem jeziku [ 1 ] .
Raziskovalci iz slovanskih govornih področij so sisteme za svoje jezike zasnovali po obstoječem nemškem sistemu in razvili ustrezne manjkajoče komponente za svoj jezik [ 5 , 6 , 7 , 8 ] .
Prav tako je bilo potrebno razvijati postopke za samodejno tvorjenje govora za podajanje informacij .
Zasnovati smo morali osnovni podsistem za razpoznavanje jezika , ki lahko dovolj hitro - že na podlagi nekaj izgovorjenih besed – ugotovi , za kateri jezik gre [ 9 ] .
Večjezični eksperimentalni sistem , ki deluje in je trenutno vzpostavljen le v Nemčiji - po telefonu ( št. 0049 9131 16287 ) , bo po nekaterih prilagoditvah dostopen zopet v začetku jeseni - še preboleva nekatere otroške bolezni .
Struktura večjezikovnega sistema za govorna poizvedovanja Prav tako se je med preizkušanjem na Slovaškem pokazalo , da razpoznavalnik jezika ne deluje dobro , ko klicalec uporablja mobilni telefon , za kar je krivo specifično razmerje signala in šuma in oblika motenj , ki pri taki povezavi nastanejo in na katere sistem ni bil naučen .
Pričakujemo , da bomo večjezični sistem v kratkem vzpostavili tudi v Ljubljani , kjer bo na voljo za preizkušanje tudi klicalcem iz Slovenije .
Prav tako že več let formalno in neformalno sodelujemo z Oddelkom za razpoznavanje vzorcev na Univerzi Erlangen – Nürnberg preko skupnih projektov , izmenjav raziskovalcev , znanstvenih srečanj in skupnih objav .
Tako je bila vloga za skupni projekt pri Evropski skupnosti in delo na tem projektu nekako logično nadaljevanje skupnih prizadevanj .
Za tematsko omejeno področje dialoga pa potrebujemo tudi posebej izbran govor , ki se nanaša na izbrano področje uporabe .
Gre za vprašanja o obstoju določene letalske povezave , letalskem prevozniku , času prihoda in odhoda ter trajanju poleta .
V laboratorijskem okolju smo s petdeset govorci prek telefona in neposredno v računalnik v digitalni obliki posneli govorno zbirko 8850 stavkov , kar predstavlja približno 28 ur govora .
Zbirko smo dopolnili s seznamom izgovorjenih stavkov , leksikonom uporabljenih besed , ki je vseboval fonetični prepis besed in njihove skladenjske in pomenske opise , ter z nekaterimi podatki o govorcih in njihovem načinu govora [ 11 ] .
Ker gre tu za fonetično označeno zbirko podatkov , je na njej možno proučevati tudi fonetične lastnosti slovenskega govorjenega jezika in dialektov govorcev .
Prav to zbirko podatkov smo s pridom uporabili za določanje nekaterih prozodičnih karakteristik slovenskega govora , kar smo potrebovali pri izgradnji podsistema za samodejno tvorjenje govora [ 12 , 13 ] .
Posebno pozornost smo posvetili izbiri množice osnovnih govornih enot za razpoznavanje slovenščine ter izbiri postopkov za določanje značilnosti slovenskega govora , na katerih temelji kasnejše razpoznavanje .
Ker je bil problem razumevanja govora tematsko močno omejen , smo se te naloge lotili z ugotavljanjem manjšega števila pomenskih kategorij , kot so kraj prihoda , kraj odhoda , letalski prevoznik , časovni izrazi , potrditve in uvodne ter zaključne izjave .
Pomemben izvirni prispevek naše skupine na tem projektu predstavlja tudi podsistem za samodejno tvorjenje slovenskega govora , ki smo ga zasnovali tako na široko , da predstavlja zaključeno celoto [ 19 ] .
Tak sistem je na primer zelo uporaben za branje vidno prizadetim osebam in sploh vedno , ko uporabnik ne more prejemati informacij v pisni obliki .
Sistem smo v skladu z mednarodnimi standardi s tega področja ovrednotili in predstavili domači in tuji strokovni javnosti .
Triletno delo na skupnem projektu je zaključeno , seveda pa se delo na tem področju pri nas in na tujem nadaljuje .
Članek opisuje formante slovenskih samoglasniških fonemov naglašenih i-ja , ozkega in širokega e-ja , a-ja , ozkega in širokega o-ja in u-ja , polglasnika in nenaglašenih i-ja , e-ja , a-ja , o-ja in u-ja .
Na osnovi FFT analize s spektralnim analizatorjem Bruel & Kjaer 2148 je avtorica analizirala izgovor vokalov enajstih oseb ženskega spola na osnovi prebrane predložene liste besed : poleg določitve višine posameznih formantov prihaja do izraza pomen akustične in ne grafične klasifikacije vokalov .
Govorjena besedila so v slovenskem prostoru malo raziskana , kar je predvsem posledica značilnosti te vrste besedil .
Sodobni računalniški programi in oprema ( tako računalniška kot tehnična - akustična ) danes omogočajo in nudijo vsekakor natančnejšo analizo od klasične sonagrafske analize , in to predvsem zaradi razvoja tehničnih sredstev , možnosti digitaliziranja govornega signala .
Spektralne analize slovenskih vokalov sem se kljub že opravljenim meritvam v preteklosti lotila predvsem zaradi primerjalne študije slovenskih in italijanskih vokalov govorcev iz Slovenije in Slovencev s Tržaškega - Zamejcev , tako da so vrednosti formantov slovenščine osrednjega slovenskega prostora stranski produkt širše analize slovenskih samoglasnikov v sklopu triletnega raziskovalnega projekta , ki ga finansira MZT " Kvalitativna analiza govora posebnih skupin ljudi " .
Temu cilju je bila podrejena tudi metodologija raziskovanja ( tako testni material kot analiza podatkov ) : ni šlo za analizo samo slovenskih fonemov v vseh pozicijah in v povezavi z vsemi slovenskimi fonemi .
S spektralno analizo sem posnela izgovor 11 ženskih osebkov iz osrednjega slovenskega jezikovnega prostora , in sicer po predloženi listi besednih sklopov .
Druga klasifikacija pa je razvrstitev avtorice Srebot-Rejec , ki trdi , da na vokalizem vpliva veliko faktorjev ( inherentnih in zunanjih ) , tako da lahko slovenske samoglasnike delimo binarno : naglašeni vokali so dolgi , nenaglašeni so kratki .
Petek ( Petek , 1996 , str. 136 ) je hipotezo o povezanosti med dolžino in naglašenostjo vokala s svojim raziskovalnim delom na področju akustike in fonetike pred kratkim zopet potrdil ; izjema bi lahko bil po njegovem mnenju le naglašeni a , ki bi lahko imel dolgo in kratko varianto naglašenega fonema .
Bukalni formanti ( F2 ) so odraz ustne in nosne votline , faringalni ( F1 ) pa grlne ( Vujnović , 1990 , str. 21 ) .
Iz vidika identifikacije posameznega glasu je najpomembnejši drugi formant .
Njegova položaj in oblika ( ki se zelo spreminjata od glasa do glasa , zelo pa sta stabilna pri določenem glasu tako pri ženskah kot pri moških ) določuje svojstvo glasu ( Vujnović , 1990 , str. 22 ) .
Vedno je treba upoštevati njegovo " vedenje " v povezavi z ostalimi ( Vujnović , 1990 , str. 22 ) .
Zato samoglasniški sistem razumemo dobesedno kot sistem , v katerem je vsak član v odvisnosti ( v horizontalnem in vertikalnem smislu ) tako od svoje pozicije kot tudi od pozicije drugih članov sistema .
Avtor navaja srednje vrednosti izgovora treh govorcev ( dva moška in ena ženska ) prvih treh formantov naglašenih slovenskih samoglasnikov ( Petek , 1996 , str. 134 ) ( tabela 1 ) ; govorci so izgovorili serijo besed z dolgimi in serijo besed s kratkimi naglašenimi samoglasniki ( po tradicionalni slovnici ) .
Hipoteza : a. formanti slovenskega jezika so premo sorazmerni z dolžino artikulacije ( F2 ) - od sprednjih do zadnjih vokalov od zgoraj dol - in obratno sorazmerni z višino artikulacije ( F1 ) ; b. formanti so indikator akustične kvalitete vokala in ne grafične podobe Metode dela .
Z računalniškimi programi sem izrezala le osrednji del vsakega vokala , tako da tranzienti niso imeli na frekvenco nikakršnega vpliva .
Formantno vrednost sem na osnovi spektralne slike odčitovala ročno na osnovi najvišjega vrha spektralne slike fonema ( graf s Hz v odvisnosti od dB ) .
Vsaka pika predstavlja eno meritev in enega govorca .
Osnovni ton ( graf 1 ) pogojuje anatomska , fiziološka struktura , določata pa ga tudi tako spol govorca kot tudi mesto , ki ga ta fonem zaseda v besedi .
Vsak vokal ima tudi njemu lastno inherentno višino , ki je v določeni meri neodvisna od zunanjih faktorjev .
Pri testiranih osebah se osnovni ton giblje od približno 150 Hz do približno 300 Hz in je v vrednostih razpršen oz. variabilen .
Graf 1 : Osnovni ton vokalov slovenskega jezika Prvi formant ( graf 2 ) je veliko bolj zanimiv ; je kazatelj osi visoko - nizko .
Viša se s premikanjem artikulacije vokala v spodnji del ustne votline , niža pa se s premikanjem izreke v zgornji del ustne votline .
Graf 2 : Prvi formant vokalov slovenskega jezika Drugi formant ( graf 3 ) je kazatelj relacije spredaj - zadaj .
Oba i-ja in ozki e so frekvenco 2500 - 3000Hz najvišji ( tvorijo najbolj sprednje foneme ) , srednji nenaglašeni e je nižji od širokega e-ja , oba a-ja sta enaka ( srednje visoka - 1500 Hz ) , od širokega do ozkega o-ja se frekvence znižujejo ( okoli 1000 Hz ) , naglašeni u pa je ekvivalenten nenaglašenemu o-ju , nenaglašeni u pa širokemu o-ju in nenaglašenemu a-ju ; podobno frekvenco ima tudi polglasnik .
Samoglasniški sistem : pri govorkah ( graf 6 , tabele 2 , 3 ) je nulti formant linearen .
Četrti formant je pri prvih treh vokalih odsoten ; začne pa se pri nenaglašenem e-ju ravno na isti frekvenci kot tretji formant pri omenjenih vokalih , nato se do nenaglašenega u-ja rahlo niža , pri polglasniku pa zviša .
Razvidno je razhajanje med formantnimi vrednostmi Petkovih meritev in mojih meritev : vzrok temu so najbrž različen spol govorcev ( pri Petku dva moška , ena ženska , pri pričujoči raziskavi enajst žensk ) , različna metodologija ( pri Petku Kay-Elemetrics , pri tej raziskavi Bruel & Kjaer 2148 ) in različen testni material , ki lahko v določeni meri tudi vpliva na višino samoglasnika ( pri Petku izolirane besede , pri tej raziskavi besede - različne od Petkovih - umeščene v stavke ) .
Razmerja med formanti so namreč bolj stabilne vrednosti kot pa same absolutne frekvence .
Graf 6 : Samoglasniški sistem slovenskega jezika Opažamo torej očitno akustično - artikulacijsko kategorizacijo fonemov : naglašeni i , nenaglašeni i in ozki naglašeni e spadajo v eno skupino ( sprednji in visoki vokali ) , nenaglašeni e je relativno samostojen , od širokega naglašenega e-ja do nenaglašenega u-ja tvorita F1 in F2 nekakšno lijakasto obliko .
Kot problem , ki še čaka na rešitev , pa so izpostavljeni problemi standardiziranega kodiranja pismenk , ki so jih uvedli slovenski slovničarji s prve polovice 19. stoletja .
črke in drugi znaki so v računalniku predstavljeni s številčno vrednostjo ali kodo .
Običajna rešitev je vpeljava prireditvene tabele .
Veliki črki A tako ustreza neka koda , veliki črki B neka druga koda , in tako dalje .
Male črke imajo spet svoje kode , prav tako števke , ločila in drugi znaki .
Izmenjavo informacij olajša , če vsi uporabljamo enako prireditveno tabelo , oziroma isti kodirani nabor znakov .
Kodirani nabori znakov so zato standardizirani , za usklajevanje standardov pa skrbijo standardizacijska telesa na državni in mednarodni ravni .
Zadržimo se ob trenutnem stanju in pokomentiramo nered , ki vlada na področju kodiranja naših znakov .
Že takrat so se kazale omejitve sedembitnega nabora znakov , saj v besedilu ni bilo možno kombinirati besedila v dveh različnih jezikih , npr. nemško in francosko .
Devetdeseta so prinesla pravo poplavo kodnih razporedov .
Vsi trije nabori so res vsebovali vse potrebne znake za pisanje v ciljnih jezikih , vendar na različnih mestih v tabeli .
Če pošljemo elektronski dopis ali objavimo stran na svetovnem spletu , je potrebno , da lahko naslovnik napisano tudi prebere , in to ne glede na to , kakšno strojno ali programsko opremo uporablja .
V elektronski pošti in elektronskih novicah ( USENET ) prevladuje prečrkovanje z uporabo črk C , S in Z namesto č , Š in Ž. Na spletnih straneh pa so razmere pestrejše .
Precej strežnikov uporablja vmesnike CGI ( Common Gateway Interface ) , ki na strani strežnika prečrkujejo iz enega kodnega nabora v drugega .
Oba najpogostejša spletna brskalnika , Netscape Navigator / Communicator in Microsoft Internet Explorer , podpirata kodni nabor ISO 8859-2 tudi v okoljih , ki naravno uporabljajo drug nabor znakov ( npr. Microsoft Windows ) , če le strani v glavi MIME ( Multipurpose Internet Mail Extensions ) pravilno označujejo uporabljeni kodirani nabor znakov .
Način dela z vmesniki na strežniški strani je zato slabša rešitev , saj po nepotrebnem obremenjuje strežnik , takšnih navidez » dinamičnih « spletnih strani mrežni medpomnilniki ( angl. cache ) navadno ne shranjujejo , s čimer dodatno obremenjujemo tudi omrežje [ 5 , 6 ] , in ne nazadnje so tudi oznake virov ( URL , Universal Resource Locator ) daljše in manj pregledne .
Moteče je tudi , da večina njih kot privzeti kodni nabor postavlja Windows-1250 namesto ISO 88592.
Obrazložitev , da se s tem prilagajajo uporabnikom , ki zvečine uporabljajo opremo Microsoft , ne zdrži več , vse odkar oba popularnejša brskalnika tudi v tem okolju brez težav bereta strani , zapisane v skladu s kodnim naborom ISO 88592.
Ni izključeno , da je tovrstni nered na slovenskem delu interneta tudi posledica ignorantskega odnosa Urada za standardizacijo in meroslovje pri Ministrstvu za znanost in tehnologijo do tega medija .
Naslovna stran , http://www.usm.mzt.si/ , se v času pisanja tega prispevka kiti s cvetkami , kot je ponujen izbor kodnega nabora z oznako » 437 [ Slovenski jezik ( VMS ) ] « , prek katere pridemo do strani , kodirane v skladu s kodnim naborom JUS I.B1.002 , vendar pa brez značke MIME o uporabljenem naboru znakov ( te pravzaprav nima nobena stran na omenjenem strežniku ) , kar implicira kodni nabor ISO 8859-1.
V zadnjih letih se začenja uveljavljati kodirani nabor znakov ISO 10646 [ 7 ] .
Naloga se je zaenkrat pokazala kot vendarle prezahtevna , in delovna skupina za njegovo pripravo se je osredotočila na prvo » stran « , to je prvih 65536 znakov , ter uskladila svoje delovanje s konzorcijem Unicode , ki se je istočasno loteval podobne naloge .
Več programskih hiš poskuša standardu olajšati pot v prakso tako , da daje prosto na razpolago pisave , kodirane v tem kodnem naboru , kot npr. Bitstream s svojo pisavo Cyberbit [ 9 ] .
Družba Microsoft , ki je pred nekaj leti s svojim operacijskim sistemom Windows NT napravila pionirske korake pri uporabi tega nabora , je medtem sicer napravila korak nazaj , medtem ko so pisave iz družine Lucida , ki so jih prilagali k Windows NT , kodirale 1451 pismenk , uporabljajo njihove novejše pisave ( sicer brezplačno dostopne prek interneta [ 10 ] ) nekoliko okrnjen » hišni « nabor WGL4 ( Windows Glyph List ) , latinično-cirilično-grško podmnožico nabora ISO 10646 s 652 kodiranimi pismenkami .
Kodirani nabor znakov ISO 10646 ima lepe izglede , da se v resnici uveljavi kot globalni nabor znakov .
Sodobno slovenščino ta kodni nabor povsem pokrije ; tudi samoglasnike z razločevalnimi znamenji ( ostrivec , krativec in cirkumfleks ) , s katerimi so v osembitnih naborih težave .
Glede na to , da je verjetno največja potreba po njih ravno pri nas , bi bilo na mestu , da se čimprej osnuje skupina strokovnjakov , ki naj pregleda , katere pismenke so samo tipografske izpeljanke že kodiranih pismenk , katere pa so v resnici izvirne , ter pripravi predlog za vključitev teh v standardni kodirani nabor znakov ISO 10646.
Prečrkovanje gre lahko avtomatično : odposlano elektronsko pošto program avtomatično predela tako , da namesto črke č v sporočilu stoji niz = C8 , program na prejemnikovi strani pa izvede obrnjeno konverzijo .
Sistem za elektronsko stavljenje LaTeX na primer opiše črko č z nizom \ v { C } ( večina piscev sicer raje uporablja krajši makroukaz " C ali pa celo uporablja kar osembitne znake za vnos ) .
Grafični jezik za opis strani PostScript za isto črko uporabi niz / Ccaron .
Označena besedila zato lahko vsebujejo le znake ASCII , zato pa SGML vsebuje splošen mehanizem za nadomeščanje nizov pri procesiranju dokumenta , ki je uporaben tudi za prečrkovanje .
entitete SGML , ki naj se ob procesiranju nadomestijo , lahko definiramo sami , v standardu pa so tudi že definirana opisna imena za širok nabor znakov ; za zapis črke č je to npr. & Ccaron ; , ki se nahaja v tabeli entitet z uradno oznako ISO 8879:1986// ENTITIES Added Latin 2 / / EN. V tem standardu je npr. tudi zapisan sedemjezični korpus projekta MULTEXT-East [ 14 ] .
Razmeroma malo razpoložljivih mest v kodni tabeli je pač inherentna slabost osembitnih naborov znakov .
Ta standard nam ponuja možnost , da poskrbimo tudi za doslej zapostavljane pismenke slovenskih slovničarjev iz prve polovice 19. stoletja .
Metelčica je v prvem stolpcu .
Stran iz predgovora z razlago novih črk .
Za učitelja tujih jezikov je lahko internet dobrodošlo dopolnilo , s katerim je mogoče popestriti pouk , predvsem pa je neizčrpen vir gradiv .
) Res pa je tudi , da je uporaba interneta pri pouku precej bolj zapletena kot uporaba drugih virov , na primer revij , knjig , kaset itd. , saj učitelj potrebuje nekaj računalniškega znanja , poleg tega pa mora vsaj približno poznati in razumeti organizacijo svetovnega spleta in delovanje interneta .
NAČINI UPORABE INTERNETA .
Načinov , na katere lahko v pouk tujih jezikov vključujemo internet , je več : lahko služi kot vir gradiv , kot sredstvo za komunikacijo , kot vir programov za izdelavo gradiv za računalniško učenje in kot posrednik za trženje pouka tujih jezikov .
Klasičen primer je izmenjava nalog in povratnih informacij med učitelji in učenci , seveda pa lahko komunikacija poteka tudi med učenci in učenci ali učitelji in učitelji .
Učenci vanje pišejo svoja razmišljanja o različnih temah , učitelj pa jim odgovarja in jim hkrati daje povratne informacije o ustreznosti in pravilnosti jezika .
Študentje so imeli možnost , da dobijo boljšo oceno za sodelovanje , če so z učiteljem zunaj pouka komunicirali prek elektronske pošte .
Komunikacijo je začel učitelj s splošnim vprašanjem , ki ga je poslal vsem v razredu , kasneje pa je dopisovanje postalo bolj prilagojeno posamezniku .
Prostovoljna komunikacija prek elektronske pošte je bila mnogo bolj spontana od običajnega pisanja v dialoške dnevnike .
Za pouk tujega jezika je pomembno dejstvo , da je jezik , ki ga uporabljamo za komuniciranje prek elektronske pošte , zelo specifičen : čeprav gre za pisni jezik , se v njem pojavljajo elementi govorjenega jezika .
Zato so zaenkrat mnogo pogostejše preproste virtualne šole , ki jih sestavljajo informacije s spletnih strani , klepetalnica ( chat room ) , v kateri se učitelji in učenci srečujejo , in elektronska pošta , po kateri izmenjujejo naloge in povratne informacije .
Problem pri uporabi virtualnih šol za pouk tujega jezika je odsotnost osebnega stika ; ustno izražanje , slušno razumevanje in fonetika so sestavni deli učenja , za katere virtualne šole brez audio stika ne pridejo v poštev .
V današnjih virtualnih šolah torej lahko potekajo le nekateri deli pouka tujega jezika , z izpopolnjevanjem tehnologije pa se odpirajo nove možnosti .
Ta gradiva so – nekatera zastonj , druga s plačilom – dostopna na raznih straneh , raztresenih po vseh koncih svetovnega spleta , ki so med seboj slabo povezane .
do interaktivnih programov , s pomočjo katerih je mogoče testirati znanje ( podobni se dobijo na CD-romih ) , ali računalniških iger , ki so namenjene izboljšanju jezikovnega znanja .
Skupna lastnost teh gradiv je , da so bila izdelana za pouk oziroma učenje tujih jezikov .
Največji problem gradiv , ki so namenjena učenju tujega jezika , je v tem , da so večinoma kratka in med seboj nepovezana .
Na internetu so učiteljem na voljo programi ( pogosto z navodili ) za izdelavo interaktivnih učnih gradiv " po meri " .
Možnost preverjanja znanja prek interneta , predvsem pa testi , ki jih program popravi sam , so za učitelja nadvse vabljiva možnost , čeprav gre seveda lahko le za teste zaprtega tipa .
Forumi , namenjeni učencem , so poleg tega koristni še zato , ker jim omogočajo komunikacijo v tujem jeziku .
Problem ocenjevanja kvalitete bi bilo treba v prihodnosti nekako rešiti , kajti šele potem bo mogoče te možnosti zares dobro izkoristiti .
Med učnimi pripomočki , ki so v elektronski obliki na voljo prek interneta , so najpomembnejši eno - in dvojezični slovarji , tezavri ter besedilni korpusi , s katerimi si lahko pomagajo učitelji in učenci .
Avtentična gradiva .
Poleg vseh naštetih načinov vključevanja interneta v pouk tujega jezika je verjetno najpomembnejša oblika uporaba interneta samega .
Velikanska količina podatkov , ki nam je na voljo , sicer ni namenjena učenju tujega jezika , lahko pa jo za to uporabimo ( to velja zlasti za pouk angleščine ) .
( Pogoste so npr. tipkarske napake , avtor morda sam ni domači govorec angleščine itd. ) Za učitelje so najbolj uporabne spletne strani raznih televizijskih družb , časopisov , strani s tematiko filmov , glasbe itd. , mogoče pa je najti in uporabiti kar koli , le časa za iskanje je treba imeti dovolj .
Eastman [ 2 ] meni , da so le avtentična gradiva vredna učiteljevega časa , med tem ko so strani , namenjene pouku tujega jezika , zaenkrat še tako šibke in slabo organizirane , da je bolje , da se jih učitelji izogibajo , ker porabijo preveč časa za iskanje , le redko pa najdejo kaj res uporabnega .
Avtentična gradiva , ki jih je mogoče dobiti prek interneta , so podobna katerim koli drugim avtentičnim gradivom , s to razliko , da so dostopna v elektronski obliki in je zato učitelju prihranjeno pretipkavanje , če se odloči , da jih bo preoblikoval v vaje .
Poseben problem predstavljajo avtorske pravice , ki so na internetu nadvse kočljiva tema , saj imajo različne države različne zakone , če imajo to sploh urejeno .
Fidelman meni , da je vprašanje avtorskih pravic na internetu lepo razrešljivo , saj je na skoraj vsaki spletni strani tudi avtorjev elektronski naslov in ga lahko takoj vprašamo za dovoljenje .
Uvajanje novih tehnologij pri pouku ima dobre in slabe strani ; internet pri tem ni izjema .
Najbolj moteče slabe strani uporabe interneta pri pouku tujega jezika so : - pouk , ki poteka izključno prek interneta , povsem izloči osebni stik , ki je pri nekaterih delih učenja jezika nujen ; - informacije , ki so na voljo prek interneta , so preobširne in včasih je med njimi zelo težko izbrati zares relevantne podatke .
Ob tem se pojavlja tudi problem točnosti informacij , ki so na voljo ; - če učenci sami brskajo po svetovnem spletu , učitelj nikoli ne more predvideti , na kaj bodo naleteli , kar je lahko zelo problematično ; - računalniško ocenjevanje je možno samo pri testih zaprtega tipa ; - problem tehnologije ni zanemarljiv : nemogoče je predvideti tehnične zaplete ; - struktura svetovnega spleta je povsem neobvladljiva in brskanje po njem je pogosto nadvse dolgotrajno .
Poleg tega je internet mogoče uporabljati interaktivno : za računalniško učenje tujih jezikov in za medosebno komunikacijo .
Posebej so izpostavljeni črkovalnik , delilnik , besedna analiza , tezaver , korpus , elektronski slovarji , strojno podprto prevajanje in sinteza govora .
Sem sodita predvsem črkovalnik in delilnik , na pravo uporabnost pa čakata še tezaver in slovnični modul .
Ker si je množico sodobnih naprav in sistemov praktično nemogoče zamišljati brez teh tehnologij , del energije vlagamo tudi na ta področja .
Njegovi osnovni funkciji sta preverjanje , ali beseda v slovarju obstaja ali ne , in dajanje nasvetov .
Ker tako preverjanje zahteva preveč dragocenega časa , si je potrebno pomagati z določenimi algoritmi in triki , ki iskanje pohitrijo , predvsem pa omogočijo kvalitetne zadetke .
Seveda pa je pri vsem najpomembnejša vsebina oz. število in kvaliteta vsebovanih besednih oblik , ki jih slovar vsebuje .
Dnevno dodajamo nove besede oz. besedne oblike .
Tako lahko z nekajkrat manjšim številom pravilno izbranih besed dosežemo celo boljše rezultate preverjanja kot s slovarjem , ki vsebuje precej več besed , ki pa niso selektivno dodane .
Frekvenca besednih oblik v besedilih je namreč zelo različna .
Poleg izbire besed je zelo pomembna tudi njihova pravilnost .
Za kvaliteto črkovalnika je torej zelo pomemben postopek vnašanja novih besed , ki smo ga razdelili v tri osnovne faze : - Zbiranje novih besed , večinoma iz besedil ( korpus ) , iz katerih dobimo abecedno in frekvenčno urejen spisek " neznanih " besednih oblik oz. besed .
Ta spisek trenutno vsebuje več kot 300.000 osnovnih besed oz. preko 1.000.000 besednih oblik , možnih kandidatov za vnos v slovar črkovalnika ; - Izbor najpogostejših besed iz spiska neznanih besed , ki jih še ni v slovarju ; - Preverjanje besed preko Pravopisa in Slovarja slovenskega knjižnega jezika ter vnos preko posebej prirejenega programa v vseh njenih pojavnih ( pregibnih / morfoloških ) oblikah v slovar .
Delilnik je drugi jezikovni modul , ki je običajno sestavni del različnih urejevalnikov .
Glavni problem deljenja ( zlogovanja ) slovenskih besed so pravzaprav ohlapna pravila v pravopisu , ki način deljenja v večini primerov prepuščajo " akustičnemu občutku " posameznika .
Vsekakor med Slovenci prevladuje mnenje , da je " pravilno " deljenje potrebno in da deljenje na poljubno izbranem mestu ni v redu .
Na osnovi raziskave , v kateri je sodelovalo večje število " jezikovno usposobljenih " posameznikov , smo izdelali algoritem , ki poleg pravopisno predpisanih pravil upošteva tudi fonetične kriterije deljenja .
Tak primer je npr. beseda » nastaviti « , ki jo lahko delimo kot » na-sta-vi-ti « ali pa » nas-ta-vi-ti « .
Seveda ima delilnik tudi slabosti in napake , ki jih na osnovi odkritih napačnih deljenj sproti popravljamo , bodisi v samem algoritmu , bodisi v dodatnem slovarju , ki ga lahko program uporablja .
Tako lahko isto funkcijo poleg uporabe v modulu za deljenje uporabimo tudi v drugih programih , npr. pri sintezi govora , kjer je od števila zlogov odvisna tudi hitrost izgovorjave določene besede .
Delilnik deluje kot vgrajeni modul v slovenskem Microsoft Word 7 , 8 in 9 za Windows , v pripravi oz. razvoju pa je še dodatni modul za Corel WordPerfect .
Izvaja se s pomočjo slovarja in posebnih funkcij , katerih glavna naloga je odkrivanje nekaterih slovničnih napak v besedilu .
spol:moški število:ednina sklon:imenovalnik - Generator pregibnih besednih oblik ( sklanjanje , spreganje ) - modul , ki za določeno osnovno besedo generira vse njene besedne oblike ; Jaka - Vrsta imena : osebno ime - Spol : moški - Svojilni pridevnik : Jakov - Sklanjatev : 1052 /.../
Slovarski del vsebuje preko 42.000 morfološko opisanih osnovnih besed , iz katerih lahko ustvarimo preko 1.500.000 različnih pomenskih oblik .
Vsebina opisa neke besede je odvisna od besedne vrste .
Tudi tukaj je zato zelo pomemben postopek gradnje slovarja , ki ima naslednje faze : - Zbiranje novih besed , večinoma iz besedil ( korpus ) , iz katerih dobimo abecedno in frekvenčno urejen spisek " neznanih " besed .
Ta spisek trenutno vsebuje več kot 300.000 osnovnih besed , možnih kandidatov za vnos v slovar ; - Izbor najpogostejših besed iz spiska neznanih besed , ki jih še ni v slovarju ; - Preverjanje besed preko Pravopisa in Slovarja slovenskega knjižnega jezika ter vnos preko posebej prirejenega programa v slovar .
Posamične module besedne analize s pridom uporabljamo tudi pri razvoju drugih programov s področja jezikovnih tehnologij , kot sta npr. program za strojno ( podprto ) prevajanje in sinteza govora .
Ker je osnova za polnjenje slovarja s temi informacijami zadosti velika količina pravilnih stavkov ( povedi ) , je prvi pogoj za uspešen razvoj stavčne analize tudi ustrezen korpus , zato smo se tega dela lotili najprej .
Kot osnovo smo vzeli slovar sinonimov , ki je vgrajen v programu BesAna .
Legenda : 0 - samostalnik 1 - razno 2 - glagol 3 - pridevnik 4 - protipomenka 5 - referenčna beseda Ker obstoječa struktura tezavra v Wordu ni primerljiva s » pravimi « tezavri v drugih jezikih , smo se lotili razvoja novega tezavra na povsem novih temeljih .
Kot osnovo smo vzeli standard ISO-2788 .
Tezaver po tej specifikaciji npr. uporabljajo programi za iskanje po besedilnih bazah podjetja Oracle .
Tako lahko npr. dodatno opišemo povezavo med besedama » natakar « in » natakarica « , ki sicer ne bi bila možna .
Ta čas bi seveda lahko tudi ustrezno skrajšali , če bi bilo v njegov razvoj vključeno večje število ljudi , kar pa je odvisno tudi od interesa zunanjih partnerjev .
Za potrebe lastnega razvoja besedne in stavčne analize smo pred leti razvili sistem ABIS , ki je skrbel za vnos in hranjenje besedil ter njihovo avtomatsko obdelavo .
Tako zbrani korpus je vseboval preko 15 milijonov obdelanih besed .
S skupnimi močmi gradimo doslej največjo zbirko slovenskih besedil , pri čemer sodeluje tudi veliko število drugih založb in založniških hiš , ustanov in podjetij ter drugih , ki prispevajo svoja ( objavljena ) besedila .
Sodelovali smo tudi pri gradnji večjezikovnega korpusa v okviru Copernicus projekta MULTEXT-EAST [ 6 ] , ki nam bo služil predvsem pri razvoju sistema za strojno ( podprto ) prevajanje .
Tudi novi sistem ASP32 je razvit tako , da lahko z enim programom uporabljamo več slovarjev , pri čemer je omogočena hkratnost uporabe , ter večja povezljivost med različnimi slovarji na eni strani , ter programom ASP32 in drugimi programi ( npr. urejevalniki besedil ) na drugi .
Tak prevod je sicer še vedno bolj podoben » indijanščini « , vendar nekomu , ki izvornega jezika niti malo ne razume , posreduje vsaj toliko informacij , da lahko oceni , o čem besedilo pravzaprav govori in ali ga je potrebno pravilno prevesti .
Že tak sistem , ki ga ima večina ostalih evropskih jezikov , je lahko koristno orodje , ki nam prihrani veliko časa in truda .
Naslednji koraki za nadgradnjo programa Presis bodo v vedno večji meri upoštevali slovnično zgradbo obeh jezikov .
Ker se je v času naše odločitve z razpoznavo govora ukvarjalo že več skupin , smo se odločili za sintezo govora , ki je bila odrinjena na stranski tir .
Tako se je razvoj na tem področju skoraj za dve leti povsem ustavil .
Šele v zadnjem času spet povečujemo število ur , namenjeno razvoju sinteze govora .
Glede na stanje izpred desetih let se je v tem času marsikaj spremenilo .
Poleg osnovnih jezikovnih modulov , ki so postali že naša vsakdanjost , se je precej premaknilo tudi na bolj zahtevnih področjih .
Še vedno pa za nas ostaja odprt problem , ki nam onemogoča intenzivnejše raziskovalno in razvojno delo , ki ga druge raziskovalne skupine na fakultetah in inštitutih nimajo .
Sistem temelji na združevanju osnovnih govornih enot s pomočjo algoritma TD-PSOLA , ki smo ga dopolnili z linearno interpolacijo s spremenljivim številom interpoliranih period .
Z razvojem in vse večjo uporabo računalniške tehnologije se je začela kazati čedalje večja potreba po sistemih , ki omogočajo komunikacijo med človekom in strojem v naravnem jeziku .
Za to so potrebni tako sistemi za razpoznavanje in razumevanje govora , kakor tudi sistemi za sintezo govora .
Trenutni razvoj je prišel že tako daleč , da so takšni sistemi uporabni tudi v praksi .
V Sloveniji se trenutno ukvarjata s sintezo govora predvsem dve raziskovalni skupini : Odsek za inteligentne sisteme ( vodja prof. dr. Ivan Bratko ) , ki deluje v okviru Institututa Jožef Stefan v Ljubljani in Laboratorij za umetno zaznavanje ( vodja prof. dr. Nikola Pavešić ) na Fakulteti za elektrotehniko v Ljubljani .
Na Institutu Jožef Stefan je 1993. leta S. Weilguny izdelal sistem za izgovorjavo izoliranih slovenskih besed [ 1 ] .
Leta 1995 je bil zasnovan nov sintetizator slovenskega govora , sposoben samodejnega pretvarjanja poljubnih slovenskih besedil v govor [ 4 , 5 , 6 , 7 ] .
Razvoj podobnega sistema poteka vzporedno tudi na Fakulteti za elektrotehniko v Ljubljani [ 8 , 9 ] .
Sistem STTS – Slovenian Text-to-Speech System ( http://zlatoust.ijs.si/stts/stts.htm ) je zasnovan modularno [ 5 , 6 ] , kar omogoča enostavno popravljanje posameznih delov sistema , ki so povsem neodvisni drug od drugega .
Kot zadnji nastopa modul za združevanje osnovnih govornih enot , katerega rezultat je digitalni zapis umetnega govora , ki ga predvajamo preko zvočne kartice računalnika .
V fazi predobdelave vhodnega besedila najprej pretvorimo različne formate besedila v ASCII zapis .
Nato odstranimo vse odvečne simbole , zapišemo okrajšave v njihovi polni obliki , cifre razvijemo v števnike ter poiščemo pomen raznim ostalim zapisom in znakom ( datumi , ure , ideogrami ) .
Opisani postopki se izvajajo poved za povedjo .
Slovarje najbolj pogostih besed smo razdelili na več podslovarjev : števniki , lastna imena , akronimi , kolokacije , splošne besede ( najobsežnejši del ) , besede iz danega področja uporabe ( v našem primeru je to zaposlovanje oz. prosta delovna mesta ; slika 2 ) [ 7 ] .
Pri nastavljanju naglasnega mesta besed si pomagamo še s seznami naglašenih in nenaglašenih enot [ 7 , 9 ] .
Glede na to , da je za slovenski jezik značilno prosto mesto naglasa , ki se ga naučimo hkrati z učenjem jezika in besed , je to vse prej kot enostavno opravilo .
Ta del zato trenutno predstavlja najšibkejšo točko našega sistema .
Sintetizirani govor , pri katerem so upoštevane le srednje vrednosti osnovne frekvence in trajanja posameznih glasov , zveni močno nenaravno [ 9 ] .
Ko se besede vključujejo v večje govorne enote , se skrajšujejo ali podaljšujejo v skladu z zahtevami višjenivojskih prozodičnih pojavov .
Pri tem upoštevamo različne parametre , kot so položaj besede v frazi , izbrano hitrost govora in dolžino besede , izraženo s številom zlogov v besedi [ 7 , 9 ] .
Nad globalni potek osnovnega tona je dodana lokalna komponenta , ki je definirana za poudarjene besede oz. naglašene zloge v intonacijskem segmentu [ 13 ] .
Slika 3 : Rezultat modeliranja osnovne frekvence za stavek : " Kje je hodil toliko časa ?
Ker so prehodi med posameznimi fonemi skoraj vedno postopni in se govorni signal zvezno spreminja [ 2 ] , je bilo potrebno za simuliranje naravnega poteka osnovnega tona poiskati zvezne funkcije brez nenadnih sprememb ali nezveznosti na stikih med posameznimi fonemi .
Za globalno komponento smo izbrali eksponentno funkcijo , za lokalne komponente pa kosinusne funkcije ( slika 3 ) [ 2 , 13 ] .
Baza difonov V posneti bazi osnovnih enot se nahaja 1155 difonov ( ločimo med 33 različnimi glasovi ) [ 5 , 6 ] .
Razčlenjevanje in označevanje difonov je potekalo ročno , kar je precej dolgotrajen postopek [ 7 ] .
Sinteza umetnega govora Za združevanje osnovnih govornih enot smo izbrali algoritem TD-PSOLA [ 14 ] , ki smo ga dopolnili z linearno interpolacijo s spremenljivim številom interpoliranih period [ 16 ] .
Algoritem TD-PSOLA je hiter in zagotavlja visoko kakovost sintetiziranega govora [ 15 ] .
Opisani sistem za sintezo slovenskega govora smo uporabili v zaposlovalnem agentu EMA ( http : / / www-ai.ijs.si / ~ ema / ) [ 7 , 18 ] , ki posreduje informacije , vezane na zaposlovanje prek interneta ( slika 4 ) .
Sistem za sintezo slovenskega govora smo uporabili v najbolj obiskanem modulu , ki posreduje informacije o prostih delovnih mestih v Sloveniji .
Besedilo , ki ga sintetiziramo , je deloma omejeno ( npr. vrsta poklica ) , deloma neomejeno ( npr. naslov ) .
Pri preizkusu kakovosti sintetiziranega govora je sodelovalo 11 poslušalcev v starostnem razponu med 22 in 53 leti .
Poslušalcem smo predvajali 54 besed in jih prosili , da na pripravljene pole zapišejo vse , kar so slišali .
Razumljivost izoliranih besed pri prvem testu je znašala 94.6 % , kar je primerljivo s podobnimi sintetizatorji v svetu [ 7 ] .
Nekaj več težav je bilo le pri razumevanju imena in naslova podjetja oziroma organizacije , ki nudi zaposlitev ( slika 5 ) [ 7 ] .
ZAKLJUČEK .
Modularna zgradba sistema omogoča njegovo enostavno popravljanje in dograjevanje .
Preizkus sistema je pokazal , da je tako dobljeni umetni govor dovolj razumljiv in povsem primeren za uporabo .
Sistem smo uporabili v zaposlovalnem agentu EMA in sicer v njegovem najbolj obiskanem modulu , ki posreduje informacije o prostih delovnih mestih v Sloveniji .
Odstotek pravilno razpoznanih delov besedila .
Odstotki pravilno prepoznanih delov obvestil o prostih delovnih mestih .
PROGRAMI S POMNILNIKOM PREVODOV S STALIŠČA MOREBITNEGA UPORABNIKA .
Med številnimi računalniškimi tehnologijami in orodji , ki jih imajo prevajalci danes na voljo , so programi s pomnilnikom prevodov ( Translation Memory Software ) zagotovo eden najpomembnejših premikov zadnjega desetletja , za slovenski prostor pa so zaradi svoje jezikovno neodvisne zasnove še posebej zanimivi .
Neposredna posledica vseh teh sprememb je hitro zastaranje informacij , kar s seboj prinaša vse hitrejšo produkcijo novih ali posodobljenih besedil , ter z njo potrebo po njihovem prevajanju .
Vloga uporabnika je večinoma omejena na predpripravo besedila , npr. prevajanje v t.i. nadzorovani jezik ( controlled language ) , in popravo rezultatov .
Za slovenski jezik širše uporabnih strojnih prevajalnikov še nimamo .
PROGRAMI S POMNILNIKOM PREVODOV .
Pomnilnik prevodov temelji na podatkovni zbirki dvo - ali večjezičnih paralelnih prevodnih enot , ki so prevajalcu med prevajanjem hitro in avtomatično dosegljive .
Program besedilo razdeli na segmente oziroma prevodne enote ( navadno stavke , lahko pa tudi manjše odseke ) , prevajalec pa se pomika od enote do enote in v ciljna polja vnaša prevode .
Glede na dejstvo , da pomnilnik prevodov nima lastnih leksikonov in orodij za morfosintaktično analizo ter deluje na jezikovno neodvisnem principu , je ugotavljanje podobnosti oziroma meglenosti omejeno na strogo formalno podobnost , ali drugače povedano , čim več besed v novi enoti se ujema z enoto v pomnilniku , tem višji je odstotek podobnosti .
Pomenske podobnosti program seveda na zazna , tako da je podobnost spodnjih stavkov sodeč po Tradosovem Workbenchu manjša od 30 odstotkov , kar je spodnja meja zaznavanja meglenosti : Kadar polnimo rezervoar , likalnik ne sme biti priključen na električno omrežje .
Odstotek ujemanja je tako odvisen predvsem od dveh dejavnikov , in sicer števila besed , ki se v obeh enotah ujemajo , in besednega reda le-teh ( več o razpoznavanju meglenih zadetkov u101 ) .
Po naših opažanjih program kot podobne razpoznava večino besed , ki se razlikujejo zgolj v eni črki ( npr. beseda / besed - 75% podobnost ) , pri dveh ali več različnih črkah pa so rezultati odvisni od dolžine besede ( ugovor / ugovorov - 63% , priimek / priimka - 63% , gumb / gumbom - 0% , ime / imena - 0% ).
Program s pomnilnikom prevodov je lahko integriran v urejevalnik besedil ( Word , WordPerfect ) , lahko pa ima lastno delovno namizje , v katerega uvozimo dokument , ki ga želimo prevesti .
Terminološko banko lahko ustvarimo pred pričetkom prevajanja v skladu z značilnostmi prevajalskega projekta , za podlago pa nam pri tem lahko služi že obstoječa enojezična banka , ki ji dodamo prevodne ustreznice ciljnega jezika .
Prepoznavanje terminov v okviru programa s pomnilnikom prevodov poteka samodejno , prav tako je lahko samodejno tudi vnašanje njihovih prevodov v ciljno besedilo .
Pri večjih uporabnikih ( npr. Evropska unija ) imajo terminološke banke standardizirano hierarhično strukturo , ki je priporočena tudi vsem uporabnikom , ki se na novo vključujejo v evropski sistem jezikovnih virov ( glej tudi ( 7 ( ) .
Prevajanje s pomočjo pomnilnika prevodov in terminološke banke temelji na predpostavki , da se v določenih vrstah besedil stavki , povedi , besedne zveze in posamezni izrazi v bolj ali manj nespremenjeni obliki ponavljajo .
Čim višji je faktor ponavljanja , tem bolj je s pomočjo tovrstnih orodij mogoče skrajšati čas prevajanja .
V kontekstu računalniško podprtega prevajanja govorimo predvsem o tehničnih in strokovnih besedilih , za katera na splošno velja , da vsebujejo strokovno terminologijo in da je - vsaj pri nekaterih besedilnih vrstah - ponavljanje določenih besednih zvez in stavčnih struktur zaželeno in nujno zaradi strokovne natančnosti pri rabi jezika , ki omogoča lažje in boljše razumevanje .
Tehnična in strokovna besedila pa zajemajo celo družino besedilnih vrst , ki na različnih ravneh kažejo specifične značilnosti : - na morfosintaktični ravni ( npr. težnja k dolgim ali kratkih povedim , nominalizaciji ali verbalizaciji , tvorjenju pretežno podrednih ali prirednih zloženih povedi , raba pasiva in nadomestnih brezosebnih oblik , posebnosti pri rabi ločil ) , - na leksikološki ravni ( npr. raba tujk ali izposojenk ter način pisave le-teh , raba domačih strokovnih izrazov ter težnja k sestavljenkam , prirednim ali podrednim besednim zvezam , raba posebnih znakov , simbolov in kratic ) , - na nadjezikovni ravni ( npr. tipografske in formalne značilnosti ) .
Ta se lahko v določenem besedilu ali besedilni vrsti kaže na različne načine , zato v nadaljevanju predlagamo razdelitev besedil na več skupin glede na tip ponavljanja , iz katerega posledično izhaja tudi presoja najbolj primernega postopka za njegovo prevajanje : - terminološko ponavljajoča besedila , ki vsebujejo veliko strokovnih izrazov , a malo utečenih stavčnih struktur in fraz .
Pri takih besedilih je pomnilnik prevodov dragocen , pokažejo pa se tudi razlike med programi glede na kakovost in hitrost iskanja meglenih zadetkov .
- identično ponavljajoča - to so besedila , pri katerih se določene prevodne enote ponavljajo vselej v enaki obliki .
Taka besedila so na primer vložni listki pri zdravilih , pa tudi nekatera besedila v poslovni korespondenci ( ponudbe , ceniki , računi , dobavna pisma itd. ) .
Prevajanje revidiranih dokumentov Pomnilnik prevodov zagotavlja seveda še najboljše rezultate pri prevajanju novejših različic besedil , ki smo jih prevedli že kdaj prej .
V gospodarstvu in industriji se razmeroma redko na tržišče uvaja povsem nove proizvode in storitve , mnogo pogosteje gre za sodobnejše , izboljšane modele ali različice že obstoječega produkta .
Primerjava starih različic besedila z novo je zamudno opravilo , s katerim se pisci navadno ne ukvarjajo , ampak gre posodobljeno besedilo pogosto v celoti ponovno v prevajanje .
Prevajanje je le ena od faz v celotnem procesu izdelave , obdelave in objave besedil , zato se poleg tega oblikujejo celo smernice za optimizacijo same produkcije besedil , ki bi bila tako tudi bolj urezana po meri programov s pomnilnikom prevodov ( 1 ( .
Upoštevati moramo tudi povprečno dolžino prevodnih enot , kajti pri krajših enotah je možnost , da bo sistem našel megleni zadetek , bistveno večja .
Nenazadnje pa je pomemben dejavnik tudi obseg prevajalskega projekta , od katerega je med drugim odvisno , ali se bo začetna časovna in finančna investicija v program s pomnilnikom prevodov splačala .
Uporabniški profili Glede na visoko ceno programov s pomnilnikom prevodov in na specifične lastnosti prevajalskih projektov oz. besedil , ki pogojujejo uporabnost teh orodij , lahko uporabnike v grobem omejimo na večja podjetja z mednarodno dejavnostjo in državne institucije .
Pri drugi skupini uporabnikov gre predvsem za zakonodajo , vojaške zadeve in nekatera druga področja .
Za razliko od pomnilnikov prevodov pa so terminološke banke kot dopolnilo elektronskim slovarjem in drugim računalniškim jezikovnim virom dragoceno orodje za vse , ki se resno ukvarjajo s prevajanjem , torej tudi za manjša podjetja , tiskovne agencije , prevajalske agencije in samostojne prevajalce .
Učinkovitost in doslednost izrazja Poglavitna prednost programa s pomnilnikom prevodov je torej možnost hitrejšega , cenejšega in učinkovitejšega prevajanja repetitivnega besedilnega gradiva , pri čemer je učinkovitost odvisna od zgoraj navedenih dejavnikov , ki uporabnost tega orodja precej omejujejo .
Tovrstna reciklaža obstoječih prevodov ima za neposredno posledico večjo konsekventnost tako na ravni strokovnih terminov kot tudi na širši ravni besednih zvez in skladnje .
Tu se pojavi vprašanje , v kolikšni meri je ta posledica dobrodošla , kajti tako prevedena besedila morda dolgoročno vodijo v razvoj nekakšnega post-nadzorovanega jezika , " TM-jezika " , ki ima poleg terminološke enotnosti - ta je nujna in potrebna - tudi na ostalih ravneh strogo in enolično obliko , npr. s kratkimi stavki in omejenim številom skladenjskih vzorcev , to pa že prinaša temeljno spreminjanje doslej uveljavljenega stila v posameznih besedilnih zvrsteh .
Izkušnje kažejo , da prevajalci v okviru dane besedilne zvrsti , s katero so določene tudi stilne značilnosti in stopnja preciznosti izražanja , radi izrabljajo vse izrazne variacije , ki jih jezik nudi , uporabniki prevodov pa taka besedila tudi raje berejo .
Dolgoročno gledano lahko pomnilnik prevodov postane tudi del večjega ( dvo - ali večjezičnega ) korpusa , ki lahko služi različnim namenom , bodisi kot vir vzorčnih besedil , kadar nas zanimajo lastnosti določene besedilne vrste v izhodiščnem in ciljnem jeziku , katerih poznavanje je ključno za kakovostno prevajanje v funkcionalno-komunikativnem pomenu , bodisi kot vir gradiva za primerjalno in kontrastivno jezikoslovje , vzporedni korpusi pa so pomembni tudi pri nadaljnjem razvoju prevajalskih tehnologij ( npr. sistema za strojno prevajanje ) .
V praksi pa se poleg težav tehnične narave pojavi še vprašanje avtorskih pravic , ki pogosto preprečuje , da bi ti jezikovni viri postali splošno razpoložljivi .
Pri tem vprašanju , ki še zdaleč ni rešeno , namreč prevajalci zastopajo stališče , da je pomnilnik prevodov " stranski produkt " dela , ki ga opravljajo , zato pripada njim , naročnik prevoda pa po drugi strani lahko trdi , da je pomnilnik prevodov " stranski produkt " prevoda , ki ga je naročil , zato naj se vse podatkovne zbirke izročijo naročniku skupaj s prevodom .
Kjer je splošna dostopnost takih podatkovnih zbirk v skladu z interesi avtorjev , seveda ni težav .
Tako je na internetu na voljo nekaj terminoloških bank z izrazoslovjem v zvezi z Evropsko unijo , kar ni presenetljivo , saj je to oblika promocije , hkrati pa je v njenem interesu , da se besedila o EU in njenih organih ustrezno prevajajo .
Od aprila 1998 je na novem strežniku EU ( http://europa.eu.int/eur-lex ) mogoče prebirati uradni list EU in vrsto drugih dokumentov , do poletja pa bodo na voljo vsi veljavni zakonski akti .
Vsi dokumenti so prevedeni v vseh enajst uradnih jezikov EU .
V bodoče bo torej potrebno kaj storiti tudi v tej smeri , pri čemer bi bil najenostavnejši - pa tudi najbolj radikalen - ukrep , da v tem primeru naročnik krije stroške skeniranja in obdelave z OCR-programom oziroma pretipkavanja .
V zadnjem času pa se pojavlja težnja po združevanju orodij za strojno prevajanje in pomnilnikov prevodov .
Pomnilniki prevodov so navadno omejeni na določeni prevajalski projekt , kar pomeni , da jih ustvarjamo in uporabljamo v okviru tega projekta .
Le majhno število podjetij ima zaposlene lastne prevajalce , druga si pomagajo z naročanjem prevodov pri samostojnih prevajalcih ali agencijah .
Med slovenskimi podjetji je uporabnikov - kolikor nam je znano - še zelo malo , glede na omenjene dejavnike in visoko ceno teh programov pa bo uporaba verjetno tudi v prihodnje ostala omejena na posamezna večja podjetja .
Kako se pri nas za različne uporabnike dolgoročno obnesejo pomnilniki prevodov , se bo jasno pokazalo šele v bodočnosti , razvoj prevajalskih tehnologij pa bo brez dvoma prinesel tudi vse boljše in zmogljivejše programe .
Vprašanje je le , ali bodo ti urezani bolj po meri naročnikov ali prevajalcev .
Razkrivanje pravil , ki uravnavajo notranjo organiziranost govorne verige in medglasovnih prehodov , je ključni raziskovalni cilj sodobne eksperimentalne fonetike , ki se ukvarja z univerzalnim vidikom členjenja kot bistvenega govornega problema .
V smislu ponazoritve prožnih postopkov pri zaznavi neidealno tvorjenih glasov in njihovih sklopov bomo spregovorili o akustični stabilnosti glasovnih jeder v govorni verigi .
Za natančnejše razumevanje stvarnosti v človeškem govoru je namreč bistveno vprašanje , kakšna je narava te stabilnosti .
Če v francoski govorni verigi pur namesto zaprtega sprednjega labialnega samoglasniškega fonema / y / nastopi / u / , ki ima drugačno le mesto artikulacije , dobimo pour , novo govorno verigo korenito spremenjenega pomena , obe besedi skupaj pa fonološka terminologija [ 2 ] imenuje minimalni par .
Formalizirani opisi fonemske invariantnosti so , kot že rečeno , lahko le posledica sintetičnega in abstraktnega opisovanja tipičnih [ 3 ] govornih pojavnosti , ki omogočajo najbolj splošno prepoznavanje različnosti in edinstvenosti posameznih izvedenih nosilcev ali spreminjevalcev pomena , namreč glasov , zlogov , leksemov , stavčnih tvorb ali besedil .
Če bi bil zasopel ali če bi maloprej popil velik kozarec mrzle pijače , bi izgovorjeno spet zanesljivo zvenelo drugače .
Akustični stroj , ki operira z absolutnimi parametralnimi vrednostmi , ne bi nikdar razpoznal , da se povprečnemu človeku , ki je navajen , da imajo ljudje imena različna od njihovih priimkov , zdi nenavadno , če ugotovi , da je nekomu naprimer ime Franc in da se tudi piše Franc .
Iz tehnično pridobljenih rezultatov bi bilo moč skleniti , da gre , absolutno vzeto , za dve običajno različni besedi , od katerih je ena ime in druga priimek .
Prav lahko se namreč zgodi , da sta v določeni situaciji dve možni izjavi snovno ( torej glasovno ) popolnoma različni , vendar bo soudeležencu iz širšega konteksta komunikacije nedvomno jasno , da jima govorec podeljuje isti namen in pomen .
« S sluzjo napolnjeni nosni votlini prehlajenemu onemogočata popolno uresničitev nosnega soglasnika / m / in če hoče kljub tej oviri izvesti nosni dvoustničnik , se mu bo na tem mestu artikulacije najverjetneje posrečilo tvoriti le ustni zapornik [ b ] .
A mati bo v skladu s poznavanjem trenutne govorne situacije vedela , da se ji otrok ni zahvalil z besedami » Hvala , baba « in mu bo po običaju odvrnila : » Prosim .
[ 4 ] Nekatere lastnosti te situacije kažejo tudi na to , da v komunikaciji pomembno vlogo igra tudi zavestna ali nezavedna pričakovanost in predvidljivost natančno določenega govornega sporočila v natančno določenih okoliščinah sporočanja .
Dokaze za to je mogoče poiskati tudi v primerih skrajno oteženih okoliščin komunikacije .
Pri zobozdravniku , ko se govor zdi skorajda nemogoč , lahko na njegovo vprašanje , če kaj boli , sicer odgovorimo z rahlim prikimavanjem ali odkimavanjem , vendar se bomo neverbalnemu sporočanju izognili , če čutimo , da sveder v tistem trenutku vrta po našem zobu .
V realizirani govorni verigi noben glas [ a ] nima idealnih lastnosti fonema / a / , kakršnega opisuje fonologija določenega jezikovnega sistema , namreč skrajno odprtega srednjega samoglasnika , in njegova izvedba , kakor smo videli , ni odvisna samo od glasovnega okolja .
Vprašanje strojne zaznave človeškega govora je v kontekstu govornih tehnologij nujno praktično vprašanje , ki zadeva možnosti aplikacije .
Najbrž je kompleksno iskanje » univerzalnih « , vsem uporabnikom koda skupnih značilnosti govora v prostoru in času nekega jezika pot do splošne javne uporabnosti tehnologije razpoznavanja govora .
Zadrega je seveda v tem , da v razmišljanju o teh » univerzalnostih « prej ko slej prihajamo do vsebinsko ( glasovno , substancialno ) okleščenih in formaliziranih tvorb , ki naj bi reflektirale čim manj ( osebno ali regionalno ) zaznamovan in tem bolj nevtralen govor , pri čemer spet ni več daleč do idealizacije jezika in govora .
Ob posameznih zgledih iskanja pokaže na prednosti in nekatere slabosti obstoječih rešitev pri gradnji Korpusa slovenskega jezika FIDA in pri možnostih iskanj , ki jih ponuja Amebisov spletni iskalnik ASP32 .
Korpusi so v jezikoslovne raziskave vnesli dinamiko metodoloških pristopov ; velika količina raznovrstnih podatkov nas nenehno potiska v iskanje možnosti njihove obdelave in pridobivanje novih spoznanj o dejanski rabi jezika .
Orodja za korpusno analizo .
Korpusi predstavljajo strukturirane zaloge besedil , ki so sicer dragocen vir raznovrstnih jezikovnih podatkov , vendar so za njihovo analizo potrebna posebna orodja , ki nam omogočajo dostop do korpusnih podatkov , njihovo urejanje in hranjenje .
Najpopularnejša sta prav prva dva izmed naštetih ; z možnostmi , ki jih ponujata , sta za uporabnika zelo prijazna programa za osnovno analizo besedilnih zbirk , pri čemer konkordančnik Wordsmith omogoča bistveno več obdelav rezultatov iskanj .
Dostopnih orodij je danes vse več , tistim , ki delujejo v okolju DOS , pa se vse bolj pridružujejo programi za okensko okolje .
Vsi , ki uporabljamo elektronske slovarje DZS , program že poznamo , seveda pa je za analizo korpusa posebej prilagojen ; poleg osnovnih iskanj omogoča tudi urejanje rezultatov in njihovo statistično obdelavo Iskanja z Amebisovim ASP32 .
Pri konkordančnkiu ASP32 v osnovi lahko izbiramo dva tipa iskanja , t. i. enostavno in razširjeno .
Iskanje po korpusu je seveda odvisno od samih korpusnih podatkov : nelematizirani in oblikoslovno neoznačeni korpusi omogočajo bistveno manj tipov iskanj oziroma zahtevajo pri morfološko bogatih jezikih veliko večjo iznajdljivost .
Slika 1 : Maska enovrstičnega iskanja z ASP32 z razlago osnovnih vrst iskanja .
Lematizacija in oblikoslovno označevanje sta pri morfološko bogatih jezikih izredno zahtevna , zato je v prvi fazi pri tem precej težav .
V korpusu FIDA je besedam velikokrat pripisana dvojna lema , zaradi izključno avtomatskega oblikoslovnega označevanja pa še večkrat variantni MSD-ji ; šele disambiguacija bo tovrstne probleme v večji meri odpravila .
Delno problem dvojne leme pri iskanju rešuje notranji ne , s katerim izključimo iz nabora lem tisto , ki naj pri analizi odpade .
Sicer pa je pri besednih oblikah , ki imajo več možnih lem , disambiguacijo mogoče » zasilno « opraviti že s statističnimi metodami .
Avtomatsko oblikoslovno označevanje je za slovenščino še vedno problematično .
V zadnjih letih je bilo narejenih nekaj pomembnih korakov , tako na področju preskušanja obstoječih programov za oblikoslovno označevanje kot pri razvoju lastnih tehnologij , vendar zaradi prekrivnosti besednih oblik različnih morfosintaktičnih kategorij to še zdaleč ni zadovoljivo rešeno ( Džeroski , Erjavec 1998 ; Zupan 1999 ) .
Kot je iz zgornjega zgleda razvidno , je pri avtomatskem oblikoslovnem označevanju variantnost MSD-jev še vedno tako velika , da bo za jezikoslovno izrabo tovrstnih podatkov v naslednjih korakih nujna disambiguacija .
Glede na iskano besedo ali iskalni niz se nam kot rezultat iskanja izpišejo konkordance iskane besede oz. iskalnega niza , tj. seznama vseh pojavitev iskanega niza v korpusu s svojim minimalnim besedilnim okoljem .
Desno so šifre s povezavami ( a ) v levem stolpcu na podatke iz glave besedila zadetka , ( b ) v desnem stolpcu na razširjeno besedilno okolje obsega odstavka Razširjeno iskanje .
Pri enostavnem iskanju so bili vsi iskalni pogoji vezani na besedila korpusa FIDA ; razširjeno iskanje pa nam omogoča tudi izbiro iskalnega pogoja glede na podatke v glavi posameznega besedila , in sicer iskanje po določenih besedilih glede na ( a ) taksonomije korpusa FIDA ( zvrst , prenosnik , lektorirano ) in ( b ) bibliografske podatke iz osrednjega slovenskega bibliotečnega sistema COBISS v formatu Comarc ; posebej je omogočeno iskanje glede na ( c ) letnico izida besedila .
Obdelava rezultatov .
Pogostnost je sicer pomemben podatek , vendar nam ne daje prave slike o medsebojni odvisnosti jedrne besede in njenih kolokatov , torej kolikokrat se ob jedrni besedi pojavi določena beseda glede na njeno pogostnost v korpusu sploh .
Konkordančnik ASP32 pri statistični analizi poleg abecednega seznama besed ob jedrni besedi ali nizu besed in seznama besed po pogostnosti omogoča tudi izpis rezultatov MI in MI3 .
3 Rezultat je vezan na področje informacijskih znanosti , izračunan je glede na par besed ali katerikoli par iskalnega niza v korpusu , poda pa verjetnost , da se bosta dve besedi pojavili v korpusu skupaj ali narazen oz. da se bosta elementa pojavila v določenem iskalnem polju ( Biber , Conrad , Reppen 1998 : 265 ) .
Prvih dvajset kolokatov besede borza glede na rezultat MI nam izpostavi predvsem v korpusu enkratno , v našem primeru so to velikokrat tipkarske napake , kar hkrati pomeni , da izpostavi slabosti korpusa oz. kaže na kvaliteto elektronski besedilnih virov .
Rezultat MI pač poleg relevantnih rezultatov glede vzajemnosti izpostavi tudi vse enkratno ; če je enkratno vezano na nekvaliteten vir , potem so rezultati , kot je to v našem primeru , za jezikoslovno obdelavo nerelevantni .
Gre za dejstvo , da v veliko primerih prav zaradi neupoštevanja pogostnosti pojavitve korpusnega elementa v korpusu sploh ni ustrezen za merjenje vzajemne odvisnosti dveh korpusnih elementov , samo enkratna pojavnost korpusnih elementov enega ob drugem rezultat popači , tako da rezultat MI ni primeren , ko gre za nizko pogostnost pojavitve določenega elementa v koprusu ( Manning , Schütze 1999 ) .
Kot neke vrste korekcija rezultata MI se pojavlja rezultat MI3 , izračunan po naslednji formuli /.../ kjer pomenijo a število sopojavitev določene sekvence , b število pojavitev prvega elementa brez drugega in c število pojavitev drugega elementa brez prvega .
Za besedo pred zadetkom tako dobimo za slovenščino relevantne podatke , saj so to večinoma vrstni pridevniki , ki z jedrno besedo tvorijo stalno besedno zvezo .
Če izvzamemo izlastnoimenske vrstne pridevnike na - ski in jih primerjamo s podatki o tovrstnih stalnih besednih zvezah v Slovarju slovenskega knjižnega jezika ( SSKJ ) ne glede na to , kje v slovarju se besedna zveza pojavi , lahko ugotovimo , da se je glede na spremembe v slovenski družbi in posledično slovenskem jeziku pomensko polje zelo razširilo : /.../
Avtomatsko zajemanje stalnih besednih zvez z desnim dopolnilom in vseh več kot dvobesednih stalnih besednih zvez je bistveno bolj zahtevno ; desne predložne so avtomatično več kot dvobesedne in prav te predstavljajo že večji problem .
Korpus FIDA s konkordančnikom ASP32 bo dostopen za delavce , sodelavce in študente projektnih partnerjev , tj. Filozofske fakultete Univerze v Ljubljani , Instituta Jožef Stefan , DZS d. d. in podjetja Amebis d. o. o. Dostop bo možen prek interneta : na spletni strani http://www.fida.net bodo vsi zainteresirani lahko zaprosili za individualno geslo .
Vsi drugi , ki bi želeli uporabljati korpus v raziskovalne ali pedagoške namene , se bodo za dostop do korpusa lahko dogovarjali z lastnikoma avtorskih pravic korpusa , tj. založbo DZS d. d. in podjetjem Amebis d. o. o. ; projektnima partnerjema , ki sta zagotovila celotno finančno konstrukcijo projekta .
V članku smo prikazali nekatere možnosti uporabe Korpusa slovenskega jezika FIDA s pomočjo spletnega iskalnika ASP32 .
Z veliko količino jezikovnih podatkov v korpusih za slovenski jezik se postopoma srečujemo šele v zadnjem času .
Uporaba statističnih metod ter drugih metodoloških postopkov v jezikoslovni korpusni analizi je bolj ali manj na samem začetku ; šele srečevanje s posameznimi problemi bo postopoma pripeljalo do uporabe ustreznih metodoloških pristopov in oblikovalo morebiti tudi nove , primerne jezikovnim virom za slovenščino .
Del standardno označenega besedila iz Korpusa slovenskega jezika FIDA .
Rezultati MI – 1 jedrne besede borza v Korpusu slovenskega jezika FIDA .
Seznam kolokatov – 1 jedrne besede borza v korpusu FIDA , in sicer prvih dvajset glede na rezultat MI , ki se v celotnem korpusu pojavijo vsaj 100-krat .
Pridevniki kot kolokati neposredno pred besedo borza glede na rezultat MI3 v korpusu FIDA .
Primerjava besednih zvez z jedrno besedo borza z vrstnim pridevnikom v SSKJ in najpogostnejših vrstnih pridevnikov ob besedi borza v korpusu FIDA .
V končno obliko Korpusa slovenskega jezika FIDA je iz zaloge besedil FIDA , v kateri je bilo zbranih 60.416 besedil v skupnem obsegu 161.794.040 besed , uvrščenih 29.177 besedil skupnega obsega 103.499.373 besed .
Zaloga besedil se bo sproti dopolnjevala , tako da bo za nadaljevanje gradnje korpusa nenehno na voljo aktualno besedilno gradivo .
Več o Korpusu slovenskega jezika FIDA v člankih Erjavec , Gorjanc , Stabej ( 1998 ) in Gorjanc ( 1999 ) .
Poleg rezultata MI se variantno za iste namene uporablja tudi rezultat Z , za primerjavo dveh različnih elementov ob jedrnem je zanimiv rezultat T ( Biber , Conrad , Reppen 1998 ) .
Enačaj pred besedo pomeni , da beseda v korpusu nima svoje leme , podatek se tako nanaša samo na to besedno obliko .
V desnem stolpcu je podatek o absolunem številu pojavitev besede ( ali besedne oblike pri nelematiziranih ) v korpusu , v levem je število pojavitev iste besede ob jedrni besedi .
Tako vrstni pridevniki z obrazilom - ni kot kakovostni z obrazilom - en imajo v korpusu FIDA enotno lemo - en , saj trenutno ni mogoče avtomatično prepoznati pomena pridevnika .
Izvedli smo statistično analizo visokonivojskih prozodičnih značilk ( srednja vrednost poteka F0 , razpon F0 , srednja vrednost poteka energije , trajanje besed …).
Osnovno harmonsko frekvenco govornega signala smo izmerili s pomočjo laringografa .
Primerjava rezultatov analize parametrov emocij za izolirane besede je pokazala , da obstaja v tem primeru precejšnja podobnost prozodičnih značilnosti za slovenski in angleški jezik .
Današnji sintetizatorji govora so že dosegli visoko stopnjo razumljivosti .
Da bi zmanjšali monotonost sintetiziranega govora je smotrno vključiti tudi vplive emocij , ki se pojavijo pri naravnem govoru .
Pri govorni komunikaciji med ljudmi imajo veliko vlogo tudi emocije izražene v govoru .
Za emocijo veselja je značilno povečanje srednje vrednosti poteka F0 , razpona poteka F0 , spremenljivost poteka F0 in povečanje srednje vrednosti jakosti .
Spremeljivost poteka osnovne harmonske frekvence je tudi zelo majhna .
( Pittam & Scherer , 1992 ) Scherer in Pittam sta nakazala , da je povečanje srednje vrednosti poteka F0 , razpon F0 , spremeljivost F0 in povečanje srednje vrednosti intenzitete in energije visokih frekvenc posledica razburjenja govorca .
Vse zgoraj omenjene raziskave so bile izvedene za angleški jezik .
Cilj izvedene raziskave je analiza parametrov emocij v slovenskem govoru in njihova primerjava s parametri za angleški govor .
Slovensko bazo emocionalnega govora sestavljajo posnetki dveh profesionalnih igralcev ( moški in ženska ) .
Bazo tako sestavlja govor posnet v šestih emocijonalnih stanjih in dveh nevtralnih .
Emocije so naštete v tabeli 1.
Pri oceni emocij potrebujemo referenco .
Počasen stil govora je umirjen govor in služi kot referenca emocijam z nizko stopnjo razburjenosti ( žalost in gnus ) .
V tabeli 2 je podan podrobni opis korpusa stavkov baze emocionalnega govora .
100 stavkov je kontekstno nepovezanih , od tega je 20 kratkih stavkov , 60 srednje dolgih stavkov in 20 dolgih stavkov .
Zadnjih 55 stavkov je kontekstno povezanih in so različnih dolžin .
Kratki stavki vsebujejo pet do osem besed , srednje dolgi stavki vsebujejo devet do trinajst besed in dolgi štirinajst do osemnajst besed .
Poleg govornega signala smo posneli tudi signal laringografa .
Baza je bila posneta v studiju Centra za jezikovne tehnologije na Fakulteti za elektrotehniko računalništvo in informatiko s studijskim mikrofonom AKG 3000B in laringografom Portable Laryngograph proizvajalca Laryngograph Ltd .
Frekvenca vzorčenja je znašala 48KHz ob 16 bitni kvantizaciji .
Snemanje smo ponovili v razmiku 14 dni z namenom ocenitev konsistentnosti posnetih emocij v govoru .
Kot nizkonivojske značilke smo definirali intonacijo , ritem in jakost .
Visokonivojske značilke smo izračunali iz nizkonivojskih značilk s pomočjo statističnih metod .
Značilko za jakost smo predstavili kot potek energije .
Iz značilk za intonacijo smo izračunali naslednje visokonivojske značilke : srednjo vrednost poteka F0 , standardno deviacijo poteka F0 , minimalno vrednost poteka F0 , maksimalno vredost poteka F0 , razpon poteka F0 , srednjo vrednost poteka nF0 , standardno deviacijo poteka FF0 , minimalno vrednost poteka FF0 , maksimalno vrednost poteka FF0 in razpon poteka pF0 .
Analizo nizkonivojskih in visokonivojskih značilk smo izvedli za govor vseh šestih emocij in obeh nevtralnih stilov .
Izolirane besede predstavljajo števke , številke in fonetično uravnotežene besede .
Dobljene rezultate visokonivojskih značilk smo predstavili v grafih in tako skušali oceniti vplive emocij na izgovarjavo .
Pri tem smo predstavili le osem visokonivojskih značilk , ki najbolj nazorno prikazujejo značilnosti posameznih emocij in za katere lahko ugotovimo , da različne emocije v govoru najbolje razlikujejo med seboj .
Primerjave angleških in slovenskih prozodičnih značilnosti govora ni pokazala velikega odstopanja med parametri posnetih emocij .
Gnus se v vseh visokonivojskih značilkah ne razlikuje veliko od nevtralnega stila govora .
Edina večja razlika med njima je v trajanju besed .
Pri gnusu je dolžina besed bistveno večja od nevtralnega govora ( slika 1.H ) .
Ima povečano srednjo vrednost poteka F0 , standardno deviacijo poteka F0 , razpon poteka F0 in srednjo vrednost poteka nF0 .
Strah se od drugih emocij razlikuje predvsem po srednji vrednosti poteka odvoda energije , ki je zelo povečan .
Prozodične visokonivojske značilke za presenečenje so zelo podobne jezi in strahu .
Največja razlika med strahom in jezo ter presenečenjem je v srednji vrednosti poteka F0 , kjer ima presenečenje največjo vrednost .
Največja razlika je opazna v trajanju besed , kakor smo tudi pričakovali .
Iz opravljene analize emocionalnega govora lahko sklepamo , da ima slovenski jezik na nivoju izgovarjave izoliranih besed v določenih emocionalih stanjih podobne značilnosti kot angleški jezik .
Dobljeni rezultati kažejo na podobnost značilk za jezo , strah , veselje in nevtralni govor .
Rezultati analize potrjujejo dejstvo , da človek pri prepoznavanju emocij iz govora uporablja tudi prozodične značilnosti govora .
Številka stavka Vsebina korpusa 1 do 15 Izolirane besede ( števke in številke ) 16 do 35 Izolirane besede ( fonetično bogate besede ) 36 do 55 Stavki ( kratki – 17 trdilnih , 3 vprašalni ) 56 do 115 Stavki ( srednji – 53 trdilnih , 7 vprašalnih ) 116 do 135 Stavki ( dolgi – 20 trdilnih , 0 vprašalnih ) 136 do 190.
DELO je namenjeno najširšemu krogu bralcev in je zato v njegovem besedilu vsaj implicitno skrit odgovor , koliko je povprečen prebivalec naše dežele izpostavljen internetnim podatkom , med katerimi so najbolj otipljivi naslovi spletnih strani in elektronski poštni naslovi posameznikov in ustanov ter podjetij .
Teh naslovov v časopisu ni tako veliko , kot bi domneval kdo , ki se ukvarja z jezikovnimi tehnologijami in se pri svojem delu vsak dan sreča vsaj z nekaj deset takimi naslovi , še vedno pa toliko , da utegnejo biti rezultati obdelave zanimivi .
Prispevek se nanaša na gradivo iz dnevnika DELO ( od ponedeljka do sobote ) , del katerega , kak dan več , kak dan manj , navadno približno dve tretjini , je v elektronski obliki po elektronski pošti dostopen predvsem slepim in slabovidnim , poleg tega pa še nekaterim raziskovalcem besedilnih korpusov , med drugim tudi piscu teh vrstic .
Števila povedi in besed so približna ( stanje 22. 7. 2000 ) : vsaka nova obdelava gradiva odkrije kaj takega , kar je treba popraviti in se potem spremenijo tudi sumarni podatki , vendar ne bistveno .
Leto 2000 je po količini skromnejše od prvih polovic prejšnjih let predvsem zaradi tega , ker je letos žal izpadlo precej sobotnih prilog .
Kako obravnavani skupini naslovov poiskati v časopisnem besedilu je le na prvi pogled videti preprosto ; naslovi spletnih strani npr. imajo v splošnem obliko način _ dostopa : / / [ uporabnik @ ] računalnik [ : vrata ] / [ imenik [ / imenik ] / datoteka ] ( Peterlin , 2000 ) .
Dejansko se naslovi spletnih strani v opazovanem gradivu skoraj vedno začnejo z nizom : http : / / ( le v enem primeru s https : / / ali gopher : , z ftp : tudi v le treh primerih ) , elektronski poštni naslovi pa vsebujejo at-znak ( @ , pogovorno tudi afna , viseča opica , a v srajčki in podobno ) .
Žal navedeno velja le za zadnje naslove , spletni naslovi pa so dostikrat navedeni samo delno , brez niza http : / / spredaj ali , kadar jih je v povedi več , samo del , ki je različen od zadnjega prej zapisanega naslova .
Tako je treba , če naj bo raziskava kolikor toliko verodostojna , najprej zajeti vse nize znakov , ki vsebujejo zaporedji " < x > / < x > " oziroma " < x > .
< x > " , kjer je < x > črka angleške abecede ali številka ali tilda (~ za /).
Univerzalnega algoritma , s katerim bi bilo mogoče med njimi iskane naslove strojno poiskati , avtor žal ni našel .
V abecedno urejenem seznamu so sicer res bile večje sklenjene skupine naslovov , npr. vseh , ki se začnejo na http : / / ali www , in nizov , ki naslovi očitno niso ( najpogostejši so navedeni v tabeli 2 ) , bilo je pa tudi veliko napak ( predvsem nepotrebnih presledkov ) , ki so bile popravljene .
V prvem seznamu prevladujejo pravi spletni naslovi ( http : / / , 1286 ) ali nebistveno skrajšani ( ki se začnejo na www , 500 ) in elektronski poštni naslovi ( 96 ) , je pa avtor vanj vključil tudi precej drugih imen , v nadaljnjem bodo skupaj z naslovi označena kot pikasta imena , ki imajo zelo jasno povezavo z internetom .
Lepša oznaka bi bila morda imena s pikami , a je dolga in okorna , izraz pikčast pa v nasprotju s pikast pomeni nekoga ali nekaj , kar je bolj posejano s pikami kot pikast ( SSKJ , 1994 ) .
Očiten pa je vrh ob koncu poletja in zgodaj jeseni lanskega leta .
V tabeli 5 so navedeni najpogostejši sestavni deli pikastih imen , vsi ki so dosegli frekvenco vsaj 10.
Pri izdelavi tabele so bile velike črke spremenjene v male , odvrženi pa vsi posebni znaki razen podčrtaja in pomišljaja .
V zadnji tabeli , tabeli 6 , so prikazane vse končnice ( 46 ) prvih delov spletnih naslovov - kadar ima jedro naslova vsaj eno poševno črto , je to zadnje ime pred njo , kadar je nima , pa zadnje ime v naslovu .
Nedvomno bi bili zanimivi tudi rezultati raziskave , ki bi zajela vsa tovrstna imena , ki v določenem časovnem obdobju , npr. mesecu dni , potujejo preko večjega vozliščnega računalnika na slovenskem delu svetovnega spleta .
V prihodnosti pa bi bila nujna tudi izdelava algoritma za prepoznavanje spletnih naslovov , elektronskih poštnih naslovov in drugih pikastih imen .
Histogram porazdelitve po mesecih , 1998-2000 , 100% je celota .
V članku predstavljamo zasnovo sistema za avtomatsko pridobivanje in obdelavo besedil .
Sistem omogoča iskanje domačih strani na internetu in pridobivanje ustreznih besedil .
Proces gradnje jezikovnih virov je pri tem sestavljen iz dveh delov .
V drugem delu pa ekspert s pomočjo različnih programskih orodij analizira sezname in ustrezno dopolni besedilne korpuse ter druge obstoječe jezikovne vire .
Definirani sistem zmanjšuje obseg potrebnega ekspertnega dela in tako pohitri in poceni gradnjo pisnih jezikovnih virov .
Te v zadnjih letih še posebej intenzivno razvijajo v državah evropske unije , saj predstavljajo osnovno infrastrukturo za razvoj sistemov jezikovnih tehnologij , ki bodo omogočili preseganje jezikovnih pregrad v sodobni Evropi .
Označene baze izgovarjav in fonetični slovarji predstavljajo glavne govorne jezikovne vire pri razvoju sistemov avtomatskega razpoznavanja govora – za modeliranje na akustičnem nivoju .
Besedilne korpuse uporabljamo predvsem za jezikovno modeliranje pri avtomatskem razpoznavanju govora in sistemih avtomatske sinteze govora .
Pri slednjih uporabljamo pri izvajanju grafemsko-fonemske transkripcije tudi fonetične slovarje .
V slovenskem prostoru se je obsežnejši razvoj jezikovnih virov za potrebe področja jezikovnih tehnologij pričel v devetdesetih letih .
Med raziskovalnimi in univerzitetnimi ustanovami se v Ljubljani z izgradnjo jezikovnih virov ukvarjajo predvsem na Fakulteti za elektrotehniko ( bazi izgovarjav Gopolis , Luz ) ( Gros , 2000 ) ( Dobrišek , 1998 ) , Inštitutu Jožef Stefan ( projekt Multext , korpus FIDA ) ( Erjavec , 1998 ) ( Erjavec , 1998a ) , Filozofski fakulteti in SAZU ( SSKJ ) .
Pri tem je vsak govorec izgovoril v poprečju 200 stavkov , 80 izoliranih besed , številske nize in abecedo , 21 govorcev je prebralo 400 stavkov , 20 pa še odlomek iz izbranega teksta , s katerim so simulirali nalogo narekovanja ( Kačič , 2000 ) .
Slovar vsebuje imena in priimke , imena ulic , podjetij , ustanov in krajev .
Baza je uravnotežena glede na vrsto kriterijev , kot so : spol , starost , narečno področje , izobrazba in snemalno okolje .
V okviru aktivnosti SpeechDat Task Force ( projekt COST 249 – Continuous Speech Recognition over the telephone ) sodelujejo raziskovalci s FERI pri raziskavah na področju večjezičnega razpoznavanja govora ( trenutno potekajo raziskave za 5 jezikov ) , kjer kot osnova služijo baze SpeechDat II ( Johansen , 2000 ) , ( Lindberg 2000 ) .
Ob koncu leta 1999 je v sodelovanju s podjetjem Telekom Slovenija stekel projekt snemanja baze izgovarjav PoliDat .
Cilj projekta je posneti bazo izgovarjav telefonske kvalitete za 1000 govorcev ob uporabi ISDN telefonskega omrežja in 1000 govorcev preko GSM telefonskega omrežja .
V aprilu leta 2000 so bile posnete baze izgovarjav emocionalnega govora za slovenski in angleški jezik .
Korpus baze izgovarjav slovenskega jezika vključuje 190 izoliranih besed in stavkov .
Za angleški jezik so bazo na enak način posneli trije govorci in ena govorka .
Korpus baze vključuje 186 izoliranih besed in stavkov .
Celotna velikost korpusa pa je trenutno 32 milijonov besed .
Pri označevanju korpusa je uporabljan SGML standard .
Besedilni korpus je bil dosedaj uporabljen predvsem pri razvoju jezikovnih modelov pri sistemih avtomatskega razpoznavanja slovenskega govora ( Sepesy Maučec , 1998 ) .
Tudi pri označevanju korpusov so nekoliko bolj upoštevane zahteve , ki izhajajo iz potreb razvoja sistemov govorne tehnologije .
Pri razvoju sistemov procesiranja naravnega jezika predstavljajo predvsem pisni jezikovni viri osnovo uspešnemu razvoju .
Z razvojem interneta pa je dosegljivost različnih besedil postala mnogo enostavnejša .
Uporaba interneta kot vira besedil pa omogoča izgradnjo sistema , s katerim lahko avtomatiziramo postopek pridobivanja besedil , njihovega prečiščevanja ( predprocesiranja ) in delno tudi analize ter samodejnega generiranja različnih virov .
Na ta način lahko v precejšnji meri zmanjšamo potrebni obseg ekspertnega dela , saj je to nujno le v zadnji fazi - fazi preverjanja pravilnosti zapisa , ugotavljanju pravopisnih napak in obravnavi novih enot v različnih virih ( npr. fonetični in morfološki slovar , slovar lastnih imen , slovar okrajšav in kratic ) .
Sistem omogoča avtomatsko pridobivanje besedil z interneta , njihovo prečiščevanje , izgradnjo različnih pisnih jezikovnih virov in pripravo le-teh za preverjanje , ki ga v zadnji fazi opravijo eksperti .
Sistem za avtomatsko pridobivanje in obdelavo besedil sestavlja množica orodij , ki omogočajo iskanje ustreznih dokumentov na internetu , njihovo predprocesiranje , analizo ter tvorjenje različnih seznamov besed in korpusov .
Poglavitna naloga sistema je omogočiti čim hitrejše kreiranje in preverjanje pisnih jezikovnih virov ob čim manjšem vložku potrebnega ekspertnega dela .
Glavni moduli sistema so : iskalnik besedil , modul predprocesiranja besedil in pretvorbe besedil v ASCII tekst , razčlenjevalnik besedila in modul generiranja in označevanja korpusov besedil .
Slednja dva modula generirata sezname enot , ki jih v nadaljevanju preveri ekspert s pomočjo ustreznih programskih orodij ter jih doda obstoječim pisnim jezikovnim virom .
Slika 1 : Sistem za avtomatsko pridobivanje in obdelavo besedil Sistem tako omogoča ob gradnji besedilnega korpusa tudi dopolnjevanje drugih pisnih jezikovnih virov , kot so : slovar lastnih imen , fonetični slovar , slovar okrajšav in kratic ter morfološki slovar .
Pri prvi iskalnik besedil išče ustrezna besedila na domačih straneh različnih ustanov , ki periodično objavljajo nove dokumente .
Tu je način prijavljanja na domače strani in povzemanje besedil prilagojen organizaciji domačih strani in direktorijski strukturi , ki je pri tem uporabljena .
Vendar je v tem primeru pridobivanje dokumentov omejeno le na manjše število virov .
Druga možnost je definiranje seznama ključnih besed ( tematik ) in uporaba iskalnikov spletnih strani .
Iskanje besedil je v tem primeru bolj zapleteno .
dokumente , ki vsebujejo definirane ključne besede .
Po dobljenem seznamu dokumentov , ki ga generira iskalnik , mora sistem dokumente iz seznama poiskati in jih razčleniti .
Če so primerni , jih posreduje modulu predprocesiranja teksta .
Pri tem mora sistem s pomočjo identifikacije jezika zagotoviti , da je obravnavani dokument napisan v slovenskem jeziku .
Hkrati mora ažurirati bazo www naslovov in ime dokumenta , da ne bo večkrat analiziral isti dokument .
Takšne zahteve so prisotne pri gradnji sistemov govorne tehnologije ( sistemi govornega dialoga , narekovalni sistemi ) za posamezne aplikacijske domene ( pravo , medicina , ekonomija ) , ko moramo zagotoviti ustrezne jezikovne modele .
V trenutno delujoči izvedbi iskalnika besedila le-ta vsakodnevno ob vnaprej določenem času avtomatsko poišče dokumente na vnaprej določenih naslovih domačih strani .
Iskanje besedil s pomočjo seznama ključnih besed je trenutno še v fazi razvoja .
Trenutno izvedeni modul podpira formate vhodnih besedil : html , pdf in ASCII .
Pri analizi uporablja morfološki leksikon , slovar lastnih imen ( trenutno slovar Onomastica ) in slovar okrajšav in kratic .
Ob primerjanju vsebin omenjenih virov generira sezname enot , ki jih v razpoložljivih virih še ni ( morfološkem slovarju , slovarju lastnih imen in slovarju okrajšav in kratic ) .
Z ozirom na vnaprej določen časovni razpored lahko sistem samodejno išče dokumente na posameznih www naslovih in sicer dnevno , tedensko , mesečno …
Naloga eksperta je , da s pomočjo različnih programskih orodij pregleda generirane sezname besed in jih uvrstiti v obstoječe jezikovne vire .
Tako z uporabo programskega orodja morf ( Rojc , 2000 ) obdela generirani seznam neznanih besed in pri tem ugotavlja ali so besede v seznamu napačno zapisane ( posledica tipkarske napake v obravnavanem viru ) ali pa dejansko predstavljajo besedo , ki še ni vsebovana v morfološkem slovarju .
V tem primeru oblikoslovno označi besede , to med drugim vključuje tudi označevanje naglasa , zlogovanje in fonetično transkripcijo , ter besedo zapiše v morfološki in fonetični slovar .
Podobno postopa pri analizi seznama lastnih imen , le da tu delo zajema le preverjanje pravilnosti zapisa imena ( izločitev možnosti pravopisnih napak ) , izvedbo fonetične transkripcije in zapis v obstoječi slovar lastnih imen in fonetični slovar .
Pri analizi neznanih zapisov številk ( na primer , različne oblike zapisov datumov , denarnih zneskov in drugih številskih vrednosti ) najprej preveri smiselnost posameznega zapisa in nato zapise združi v skupine podobnih zapisov .
Vloga besedilnih korpusov pri izboljševanju jezikovne kompetence .
Nato so na kratko predstavljene možnosti , prednosti in lastnosti uporabe jezikovnih korpusov v razredu .
Nazadnje so naštete še nekatere težave , ki spremljajo njihovo uporabo pri pouku jezika .
Številni priročniki , npr. slovarji , tezavri , slovnice in drugi , so danes izdelani na podlagi jezikovnih zbirk .
Analiza besedil s pomočjo korpusa je lahko v pomoč pri sestavi učnega programa , saj obravnavanje resničnih besedil prispeva zelo dragocene podatke , npr. o tipu besedil , s katerimi se bodo študenti srečevali , ali o vrstah jezika , ki bi jih morali spoznavati ( Biber in sod. , 1998 ) .
Tudi pri strukturiranju gradiva za jezikovni pouk so korpusi izredno koristni , saj se snovalcem programa ni treba več zanašati le na svojo intuicijo o tem , katera slovnična vprašanja bi bilo treba obravnavati ali katere besede s posameznega besediščnega polja bi kazalo vključiti na določeni stopnji .
Med tistimi , ki vsaj približno vejo , kako bi lahko korpuse uporabljali , se nekateri bojijo , da gre za zelo kompleksne in tehnološko zahtevne pripomočke , za katere je treba imeti ogromno računalniškega znanja , ki ga sami ne premorejo .
Pri delu s korpusom je učenec mnogo bolj avtonomen in prevzema del odgovornosti za posredovanje znanja .
Primerljivi korpusi , ki so večjezikovni , omogočajo primerjavo dveh ali več jezikov oziroma besedil in njihovih jezikovnih struktur , enojezikovni pa omogočajo primerjavo prevodov s prostim tvorjenjem besedil v istem jeziku .
Načini uporabe pri jezikovnem pouku .
Poleg tipa besedilnega korpusa je treba izbrati še način uporabe , pri čemer je potrebno upoštevati stopnjo jezikovnega znanja učencev pa tudi katere spretnosti bo aktivnost razvijala .
Čeprav je kompleksno in samostojno iskanje po korpusu primernejše za učence z višjo stopnjo jezikovnega znanja , je mogoče nekatere preprostejše vaje prilagoditi tudi učencem z nižjo stopnjo .
Osnovni namen uporabe korpusa pri jezikovnem pouku je jasen : v korpusu lahko opazujemo jezikovne značilnosti in resnično rabo besed .
Tognini Bonelli ( 2000 ) kot pomembno spremembo , ki jo v metodologijo poučevanja vnaša korpusna lingvistika , navaja možnost samostojnega tvorjenja pravil .
Pravila , ki jih navajajo pedagoške slovnice , so problematična z več vidikov : včasih so netočna in zavajajoča , pogosto so zelo abstraktna , kar lahko pomeni , da so za učenca manj razumljiva ( Tognini Bonneli , 2000 ) .
Primeri so izbrani tako , da pravila podpirajo , v praksi pa učenci pogosto naletijo tudi na primere , ki se ne skladajo s tistimi v pedagoških slovnicah .
Delo s korpusom omogoča izpeljevanje lastnih zaključkov na podlagi resničnih primerov , induktivno izpeljevanje zaključkov o jezikovnih dejstvih pa je dragoceno s stališča motivacije .
Mnogo učinkovitejše je kombiniranje že znanih učnih pripomočkov s korpusom besedil .
Abstraktno pravilo se lahko ob primerih iz korpusa konkretizira ali pa učenci ob delu s korpusom sami poskusijo komentirati jezikovna dejstva in jih dopolnjevati s pravili , ki jih ponujajo že klasični pripomočki .
Kot primer3 lahko vzamemo zaimka each in every , ki ju angleške pedagoške slovnice ( npr. Murphy ( 1995 : 180 ) ) zaradi podobnega pomena prepoznavajo kot potencialno težaven par .
V razredu lahko razliko konkretiziramo že z uporabo omejenega korpusa predstavitvene različice The Bank of English na internetu .
Pregled primerov nam pokaže , da se obe besedi lahko vežeta z day , vendar sobesedilo v predstavitveni različici The Bank of English na internetu ni dovolj široko , da bi ugotovili , ali sta besedi v tej rabi sinonima ali ne , zato sva za primerjavo pogledali še primere v BNC .
Tu nam iskanje besednih zvez every day in each day da veliko primerov z nekoliko širšim sobesedilom , iz katerih je bolje razvidno , koliko sta besedi sinonima .
Po drugi strani pa v BNC najdemo tudi primere , kjer je razlika manj očitna oziroma je morda sploh ni .
Izpeljevanje lastnih zaključkov .
Kot primer si lahko ogledamo razlikovanje med problematičnima besednima zvezama in the beginning in at the beginning .
V razredu je torej korpus idealno orodje za iskanje odgovora na to vprašanje .
/.../
Pri pouku jezika , ki ni učiteljev materni jezik , hitro postane jasno , da to dvoje ne zadostuje vedno .
Korpus pogosto vsebuje nepregledana besedila , v teh pa lahko najdemo tudi čudne primere , tipkarske napake , včasih lahko kje manjka kakšna beseda , itd.
Posebna težava uporabe korpusov je potrebna oprema .
Brez učilnice , opremljene z računalniki , povezave z internetom ( oziroma možnosti uporabe CD-roma ) in dostopa do orodij , s katerimi iščemo po korpusu , korpusov ne moremo uporabljati – v Sloveniji so takšni pogoji pri pouku jezika na voljo le redko kje .
Največ jezikovnih korpusov je za angleški jezik in prav zaradi tega so najširše dostopni .
Prav zaradi takih razmer so vsi navedeni primeri angleški .
Zaključek .
Verjetno je najlažji način , kako takšni jezikovni viri lahko zaživijo , uvajanje njihove uporabe v primerne visokošolske študije ter s popularizacijo celotnega področja jezikovnih tehnologij .
Prav tako je treba upoštevati , da je delo s korpusom v razredu specifično , učitelj in učenci pa se razlikujejo od drugih uporabnikov .
Uporaba korpusa se kombinira s klasičnimi priročniki in z drugimi viri , vendar je dragocena , ker učencem omogoča , da postanejo pri učenju bolj avtonomni .
Velika vrednost dela s korpusom je njegova prilagodljivost : daje podatke o problemih , ki so v tistem trenutku aktualni , daje podatke o jeziku za tista vprašanja , ki jih slovnica ali slovar nista predvidela kot problem .
Taki problemi , torej leksiko-gramatikalni , kolokacijski itd. , se namreč zaradi sorazmerno preprostih postopkov obravnavanja zdijo trenutno najuporabnejši za korpusno podprt jezikovni pouk .
To seveda ne pomeni , da besediloslovne analize računalniških korpusov v pedagoške namene niso mogoče , trenutno se sicer najpogosteje uporabljajo pri izdelavi učnih programov , v prihodnosti pa lahko prav tako postanejo del jezikovnega pouka .
Podobna uporaba je seveda možna tudi pri poučevanju maternega jezika .
IJS-ELAN je dober začetek , vendar vsebuje le omejeno število različnih besedilnih tipov .
Vsi primeri so ilustrativni in navedeni z namenom , da pokažejo , kako lahko učenci pridobljeno jezikovno znanje preverjajo in dopolnjujejo v praksi .
Govorna baza ŠTEVKE in raziskave robustnosti sistemov za razpoznavanje govora .
Posebna pozornost je posvečena povečevanju robustnosti tovrstnih sistemov in s tem tudi večje uspešnosti v realnih pogojih delovanja .
Pri tem smo poskušali koristno uporabiti nekatera spoznanja o človekovem slušnem zaznavanju , še posebej tista , ki so tesno povezana s človekovo robustnostjo pri razpoznavanju govora ; ta je zaenkrat za avtomatske sisteme še nedosegljiva .
Pri razvoju sistemov za razpoznavanje govora ( v nadaljevanju SRG ) so ustrezne govorne baze nepogrešljive .
V slovenskem prostoru so te še posebej redke , kar lahko predstavlja dokaj resno oviro pri raziskovalnem delu na tem področju .
Kot tak v novejšem času sicer ni posebej zanimiv za praktično uporabo , je pa zaradi enostavne zasnove zelo primeren za nekatere temeljne raziskave robustnosti , ki smo jih in jih še opravljamo .
Drugi razpoznavalnik , ki nastaja na osnovi govorne baze ŠTEVKE , pa je razpoznavalnik poljubno dolgega zaporedja števk ( " 0 " do " 9 " ) .
V prihodnje nameravamo bazo ŠTEVKE še dopolniti z bolj spontanimi izgovorjavami ; prav spontanost je namreč eden tistih pomembnih atributov sodobnih govornih baz , ki ŠTEVKAM še najbolj primanjkuje .
V nadaljevanju sta podrobneje predstavljena še dva sistema za razpoznavanje govora in v povezavi s prvim še nekatere izboljšave ter rezultati praktičnih testiranj njegove uspešnosti oziroma robustnosti .
Zajemanje in priprava .
Govorna baza je bila zajeta2 v letih 1992-1993 v - takrat še - Mikroračunalniškem laboratoriju Fakultete za elektrotehniko in računalništvo .
Vsak izbran govorec je v naključnem vrstnem redu izgovoril 13 besed ( števke od " 0 " do " 9 " ter besede " ja " , " ne " in " stop " ) .
V govorni bazi so dokaj sorazmerno zastopani govorci obeh spolov , vseh starosti , stopenj izobrazbe in večjih narečnih skupin .
To pomeni , da ima njihov posnetek neko posebnost , ki je lahko vezana na motnje , napake pri zajemu ali govorčeve posebnosti oziroma njegovo večje odstopanje pri izgovorjavi .
Glavna posebnost govorne baze ŠTEVKE je večje število govorcev ( 780 ) z vseh področij Slovenije .
To pomeni , da je v izgovorjavah dokaj dobro zajeta tudi vsa raznolikost našega jezikovnega prostora , še posebej raznolikost narečnih skupin .
Prav zaradi omenjenih posebnosti in raznovrstnih pogojev snemanja3 je baza poleg razpoznavanja zanimiva tudi za raziskave na drugih področjih govornih tehnologij , kot so npr. razpoznavanje govorcev , vpliv telefonskega kanala na prenašan govorni signal in še nekatere druge .
Med osnovne omejitve baze ŠTEVKE sodi majhen slovar ( 13 besed ) in relativna nespontanost govorcev .
Kar precej sistemov za razpoznavanje govora ima pri vključitvi v realno okolje delovanja nemalo problemov s svojo uspešnostjo .
Njihov razvoj poteka na osnovi govornih baz , ki pa so le boljši ali slabši " posnetek " realnih razmer .
V primeru izrazitega ujemanja govorne baze z realnimi pogoji je teh problemov precej manj .
Seveda pa to pomeni kar precejšnjo omejitev ( SRG dosegajo načrtovano uspešnost le v enakih pogojih ) , kar lahko povzroči potrebo po specifičnih govornih bazah za različne aplikacije .
Zato je vse bolj pomembna lastnost sodobnih SRG poleg uspešnosti tudi robustnost , ki zagotavlja primerno uspešnost tudi v drugačnih pogojih , ki niso bili izrazito prisotni v govorni bazi .
Tako smo uspešnost sistemov merili na treh oziroma v enem primeru štirih skupinah testnih množic : - " čist signal " - nespremenjena testna množica .
- " Aditivne motnje " - 6 testnih množic , ki smo jih dobili , ko smo osnovni testni množici dodajali naslednje aditivne motnje8 : - govor skupine ljudi v ozadju , - hrup v pilotski kabini bojnega letala , - hrup v tovarni , - hrup v osebnem avtomobilu , - roza šum , - beli šum .
- " Aditivne motnje + konvolutivni vpliv " – 6 testnih množic , ki smo jih dobili z dodatnim nizkoprepustnim9 filtriranjem testnih množic iz prejšnje skupine .
V učni množici se je nahajalo 200 govorcev , v testni in validacijski pa po 100 govorcev , ki niso bili hkrati tudi v učni množici .
V osnovnem sistemu so bile uporabljene standardne MFCC značilke z dodano energijo okvirja in delta značilkami prvega reda – skupaj 26 značilk za vsak okvir .
Uspešnost sistema je v nadaljevanju izražena z odstotkom pravilno razpoznanih besed .
V najenostavnejšem primeru razpoznavanja ločenih besed kot končni izid izberemo besedo , kateri ustreza akustični model z najvišjo mero podobnosti .
V novejšem času smo prav zaradi enostavnosti sistema na njem izvedli kar nekaj raziskav na področju uvajanja nekaterih lastnosti človekovega slušnega zaznavanja z željo , da jih preizkusimo v praksi in z njimi povečamo njegovo robustnost .
V nadaljevanju poglavja so predstavljeni izsledki raziskav skupaj z rezultati meritev robustnosti dobljenih sistemov .
Uvajanje izbranih lastnosti človekovega slušnega zaznavanja .
Obstoječi osnovni sistem smo modificirali v treh določenih detajlih tako v fazi parametrizacije kot tudi v fazi razpoznavanja .
Kar nekaj raziskav potrjuje dejstvo , da je človekov sluh neobčutljiv na zmerne fazne popačitve govornega signala .
Zato smo v fazi parametrizacije najbolj pogosto uporabljano okensko funkcijo ( t.i. Hammingovo okno ) nadomestili s tistimi , ki imajo na račun sicer večjih faznih popačitev10 , ki jih vnašajo v govorni signal , boljše druge lastnosti – predvsem amplitudni odziv .
Praktično uspešnost tako izboljšanih SRG oziroma robustnost smo izmerili na prej opisanih skupinah testnih množic .
Za primerjavo robustnosti v tabeli 1 smo izbrali osnovni sistem z dodanim RASTA filtrom ( opisan v 3.1.2 ) , ki uporablja v fazi parametrizacije Hammingovo okno , in enak sistem z nesimetričnim oknom , ki je med vsemi preizkušenimi pokazal največjo robustnost .
Transformacije signalov značilk .
Opisani lastnosti je mogoče enostavno in časovno nezahtevno implementirati tudi v SRG .
Pri tem je potrebno dodati še to , da lahko model časovnega maskiranja in RASTA filter uporabimo za delo v realnem času .
V zadnjem času pa se vse bolj uveljavlja tudi posplošitev omenjene teze – t.i. večtokovna paradigma ( slika 2 ) .
Praktični poskusi pokažejo , da je tak sistem uspešen in v pogojih frekvenčno omejenih motenj robusten že pri uporabi enostavnih metod zlivanja , kot sta npr. seštevanje delnih izidov ali " večinski " sistem .
Zaradi obstoječih omejitev14 smo realizirali večpasovni sistem ( slika 3 ) tako , da smo večpasovni pristop uveljavili na osnovnem sistemu z normalizacijo značilk , ki je po rezultatih v tabeli 2 najbolj robusten .
Razpoznavanje zaporedij števk .
Sistem pravilno razpozna 96.55% besed , kar je za sistem v razvoju dokaj vzpodbuden rezultat .
Predstavljeni so bili rezultati nekaterih raziskav na področju razpoznavanja govora z majhnim slovarjem .
Primerjava robustnosti " konvencionalnega " in " večpasovnega " pristopa pri osnovnem sistemu z normalizacijo v primeru pasovnih motenj .
Primerjava robustnosti " večpasovnega " in " konvencionalnega " pristopa pri osnovnem sistemu z normalizacijo v primeru frekvenčno neomejenih motenj .
Osnovni sistem + normalizacija " Večpasovni " osnovni sistem + normalizacija čist signal 97,77 90,38 Aditivne motnje 80,49 56,27 Aditivne motnje + konvolutivni vpliv .
V prvi fazi bo KGB zajel predvsem govor v medijih .
Vse bolj prevladujoči empirični pogled na raziskovanje jezika in iz tega izhajajoče jeziko ( slo ) vne aplikacije terjajo obsežno in dobro oblikovano infrastrukturo jezikovnih virov .
Iz zgodovine opisnih in normodajnih jezikoslovnih pristopov večine standardnih jezikov se da razbrati dolgo kulturno in statusno prevlado jezika pisnih besedil .
Prestižna pisna besedila ( sprva religiozna , nato dolgo časa umetniška ) so bila temelj za opis in normiranje standardnega jezika .
Govorjeni jezik je pravzaprav šele z razvojem elektronskih medijev ( radio in televizija ) postajal prestižnejši in deloma tudi normotvoren ; toda prav zaradi zagotavljanja prestižnosti oz. legitimnosti je medijski govor pomenil sprva predvsem oralizacijo pisnih besedil .
Govorjeni jezik zaznamujejo lastnosti , v marsičem temeljno drugačne od jezika pisnih besedil .
Empirični pristopi k raziskovanju jezika so seveda najrazličnejših vrst .
Toda razvoj korpusnega jezikoslovja je v empirično perspektivo vnesel za razumevanje jezika in sporazumevanja nasploh izredno dragoceno dimenzijo avtentičnosti opazovanega gradiva .
Zbiranje in urejanje korpusnih jezikovnih virov torej načeloma v ničemer ne vpliva na nastanek izhodiščnega gradiva .
Tak pristop k oblikovanju jezikovnih virov , ki je v marsičem diametralno nasproten intuitivnemu jezikoslovnemu opazovanju ( temeljno pa se razlikuje tudi od načrtovanih in v idealnem okolju oblikovanih ( analognih in digitaliziranih ) govornih zbirk za potrebe jezikovnih , predvsem govornih tehnologij ) , pomeni nujen pogoj za kvalitativni preskok v analizi jezika .
Toda smisel KGB se vendarle izpolni samo s pogojem , da je referenčen , saj bi tako dopolnil korpus Fida in v slovenskem prostoru zagotovil kvalitetni minimum referenčnosti jezikovnih virov .
Toda KGB bi bil tudi v bistveno manj idealnem obsegu izjemno uporaben .
Premislek o zajemu besedil za KGB je torej zaznamovan po eni strani s potrebami referenčnosti in uravnoteženosti , torej z vprašanji zvrstnosti , po drugi strani pa z metodološko in tehnološko izvedljivostjo in nenazadnje tudi s finančnimi in pravnimi vprašanji .
Lažje pa je tudi načrtovanje reprezentativnosti po različnih kriterijih , saj je mogoče za načrt zajema uporabiti npr. programske sheme medijskih hiš .
Šele po uspešno opravljeni prvi fazi ( ki bi prinesla poleg rezultatov tudi potrebne izkušnje in znanje ) bi se delo nadaljevalo z zajemom in transkripcijo spontanega nejavnega govora .
Za drugo fazo bi bila potrebna bistveno bolj kompleksna tipologija zajema govornih položajev ( predvsem po socioloških in pragmatičnih , pa tudi po tematskih in drugih vidikih ) , pa tudi sama metodologija zajema in transkripcija bosta precej zahtevnejši .
Medijski govor je torej v obeh navedenih položajih govor , ki naj bo kar najzvestejši priblizek idealnim govornim izvedbam ( idealna intenca ) , ob čemer se jasno zastavlja vprašanje govorne norme , njenega opisa in predlogov za njeno morebitno redefinicijo .
Kot element individualnih izvedb namreč hkrati pričajo o absolutni neidealnosti realiziranih govornih tvorb in s svojo spontanostjo potrjujejo smisel zasnove korpusa govorjenih besedil za slovenski jezik .
S stališča besediščne , oblikoslovne , skladenjske in besedilne analize je seveda od javnih govorjenih besedil najbolj zanimiv prosti govor ( brez pisne predloge ) , saj se najbolj razlikuje od jezika pisnih besedil .
Zajeto govorno gradivo mora biti posneto na nosilce zvočnega signala , ki so najlažje uporabni za takojšnjo računalniško aplikacijo .
Zajeto govorno gradivo mora biti sproti označeno in arhivirano po vnaprej izdelanih in standardiziranih načelih .
KGB ima v glavnem dva jasno opredeljena cilja : korpus je v prvi vrsti sestavljen iz zbirke zvočnih signalov ( posnetih govorjenih besedil ) , ki jih je za raznovrstne obdelave ( analize ) kajpak treba transkribirati .
Gre za jezikoslovno področje , ki je v slovenskem prostoru razmeroma novo , njegova snov pa izrazito nezadostno raziskana .
Poglavitni problem izpopolnjene izvedbe KGB je torej tehnologija transkripcije govornega gradiva .
Idealno izvedena tehnologija simbolnega razpoznavanja govornega akustičnega signala bi omogočila avtomatičen transfer akustične vsebine v grafično obliko , z drugimi besedami , idealen razpoznavalnik govora in pretvarjalnik v pisno obliko bi skrajno ekonomiziral transkripcijo zvočnega gradiva KGB .
Dokler ni vsaj okvirno jasno , kako bo oblikovanje KGB potekalo ( torej do prvih pravih preskusov snemanja , transkripcije in računalniške obdelave ) , najbrž tudi še nima smisla govoriti o sami velikosti korpusa .
Seveda se pri vsakem projektu postavlja vprašanje interesa , znanja , zmožnosti in časa sodelujočih ter vprašanje denarja .
Del projektne vsebine je bilo tudi oblikovanje načel za gradnjo govornega korpusa v slovenščini .
Projekt je bil – kot skoraj vsi projekti s področja humanistike – brez obrazložitve zavrnjen .
Izkušnja korpusa Fida kaže , da je za nemoteno in učinkovito delo dobrodošlo sodelovanje med raziskovalnimi in kapitalskimi partnerji .
Razvoj multimedijskega večjezičnega sistema za učenje in vadbo pravilnega izgovora govorno in slušno prizadetih otrok .
Razvoj sistema poteka v okviru raziskovalnega projekta SPECO programa INCO - Copernicus .
Osnovni namen projekta je razvoj sistema za učenje in vadbo , ki bo pomagal slušno in govorno prizadetim otrokom , da bodo sposobni nadzorovati in izboljšati lastno izgovarjavo .
Sistem pomaga otrokom tako , da lahko ti istočasno primerjajo slikovno predlogo normalne referenčne izgovorjave z lastno .
Glavni del programa predstavlja splošni jezikovno neodvisni sistem za učenje govora , drugi modul je urejevalnik baze .
Sistem bo v osnovi razvit za štiri evropske jezike .
Pri slušno prizadetih se poleg slušne prizadetosti še mnogokrat pojavi nemost , ker zaradi prizadetega sluha in pomanjkanja povratne informacije , oseba ne zna pravilno uporabljati govornih organov .
To navadno ni zaradi tega , ker bi bili njihovi govorni organi poškodovani ali pa niso zmožni izgovarjave glasov , ampak zaradi tega , ker svojih govornih organov sploh ne znajo uporabiti .
Možgani kontrolirajo govorne organe govorca .
Ena izmed osnovnih zahtev za vpis govorno in slušno prizadetih otrok v osnovno in nadaljnje izobraževanje je nedvomno razvoj pravilne izgovarjave in sposobnost razumevanja govora .
Terapevt daje pacientu navodila , kako uporabljati govorne organe v procesu produkcije glasu .
S SPECO projektom želimo namesto tradicionalne procesno orientirane metode učenja ponuditi predmetno orientirano metodo učenja tudi slušno prizadetim otrokom ( Vicsi , 1999 , Öster , 1999 ) .
Razvoj govorne tehnologije omogoča računalniško obdelavo izgovarjave in neposredno primerjavo glasovne izgovarjave s slikovnim prikazom le-te .
Sistem je zasnovan tako , da procesira izgovorjene glasove in slikovno prikaže vsebino te izgovarjave .
Sistem je zasnovan na osnovi najnovejših tehnologij , vendar sledi korakom tradicionalnega učenja govora .
Celotni sistem je zasnovan modularno .
Glavni del sistema predstavlja splošni jezikovno neodvisni sistem za učenje govora .
Drugi modul je jezikovno neodvisen urejevalnik baze podatkov .
Sledi akustično procesiranje govora .
Metoda procesiranja je jezikovno neodvisna in je vgrajena v urejevalnik baze .
Opisan sistem se razlikuje od sistemov za učenje izgovarjave , ki so narejeni na osnovi sistemov razpoznavanja govora .
Cilj predstavljenega multimedijskega sistema je pomoč in vodenje pacienta skozi proces izgovarjave od začetne slabe izgovarjave , preko vmesnih popravljanj , do pravilne izgovarjave .
S pomočjo urejevalnika baze lahko ustvarjamo slovarje z različnim naborom besed za različne jezike in različne govorne težave .
Za vsak jezik so urejeni posebni slovarji izgovarjav , ki vsebujejo izbrane glasovne zveze , besede in stavke .
Sistem je zasnovan tako , da lahko slovarji za posamezni jezik vsebujejo izgovarjave od osnovnih glasov do kompleksnih stavkov .
Sistem je sestavljen iz dveh modulov : prvi modul je namenjen učenju pripornikov in zapornikov , drugi učenju vokalov .
S pomočjo uporabe organov vida poskušamo predstaviti pravilno izgovarjavo , vendar ob slikovni informaciji sistem podaja tudi avdio informacijo sinhronizirano s slikovno .
Izhod modela je takoimenovani kohleogram .
Kohleogram prikazuje spreminjanje spektralnih značilnosti govora v odvisnosti od časa .
Sistem izračuna parametre , ki so pomembni za kvaliteto izgovarjave : sprememba glasnosti po času , sprememba kohleograma po času , razlike v hitrosti izgovarjav , določitev osnovnih harmonskih komponent ( Vicsi , 1981 ) .
Potekajo tudi raziskave na področju normalizacije govora , ki bi omogočile uporabo starejšim otrokom in mladini ( Ogner , 1999 ) .
Akustično procesiranje je izvedeno s preprostim avditornim modelom , ki upošteva najpomembnejše značilnosti sluha v frekvenčni domeni , poznanih predvsem iz teorije psihoakustike ( Zwicker , 1982 ) .
Model uporablja 20 ozkopasovnih filtrov , ki pokrivajo območje od 80 Hz do 8 kHz .
Filtri imajo asimptotični nagib za čim natančnejše posnemanje karakteristike človeškega ušesa .
Na sliki 2 je prikazan osnovni zaslon programa , kjer uporabnik izbere predgovorne vaje , vaje učenja vokalov , ali vaje učenja pripornikov in zapornikov .
Slika 2 : Osnovni zaslon programa z izbiro vaj Učenje in vadba sta izvedena v obliki igre , kjer otrok s kontrolo svoje izgovarjave poskuša doseči čim boljšo oceno .
Kot merilo uspešnosti opravljene vaje je uporabljena rastoča rožica - bolj uspešna je izgovarjava , večja in lepša je rožica .
Zato je celoten proces učenja zasnovan tako , da vodi uporabnika od osnovnih začetnih predgovornih vaj , preko enostavnih izgovarjav izoliranih fonemov , do besed z različnimi položaji fonemov , in na koncu do krajših stavkov in minimalnih parov .
Primer predgovornih vaj je prikazan na sliki 3 - pri tem otrok vadi kontrolo glasnosti .
S spreminjanjem glasnosti svojega glasu mora nadzorovati premikanje žoge – cilj je pripeljati žogo skozi odprtine v jabolku , ko žoga potuje od leve strani zaslona proti desni .
Za pomoč terapevtu pri razlagi oblikovanja govornih organov za pravilne izgovarjave posameznih glasov , so v programu na voljo tudi slike artikulacije za posamezne glasove .
Slika 4 : Slika izgovarjave glasu / ž / Na slikah so podrobno predstavljeni položaji govornih organov pri izgovarjavi posameznih glasov .
Na sliki 4 je prikazan primer artikulacije glasu / ž / .
Ko pacient obvlada osnovne vaje za kontrolo govornih organov , sledijo vaje izgovarjave posameznih glasov .
Slika 5 prikazuje primer vadbe izgovarjave glasu / z / .
Sledijo vaje izgovarjave besed ( slika 5 ) - pri konzonantih so izbrane takšne besede , da lahko uporabnik vadi izgovarjavo fonema na začetku , na sredini in na koncu besede .
Pri vokalih pa lahko vadi v besedah z enim in več samoglasniki v besedi .
Vsaka slika je predstavljena z jasnimi slikovnimi prikazi pomena besede tako , da tudi otroci , ki ne znajo brati , lahko sami ugotovijo pomen besede in se ob tem tudi učijo branja črk .
Za pomoč pri pravilni izgovarjavi besed je na kohleogramu ob spektralnem prikazu izgovorjene besede , prikazana še slika v ozadju .
Ta slika določa območje spektra fonema , ki ga uporabnik vadi .
S prikazom slike v ozadju omogočimo , da uporabnik sam ugotovi , kako naj interpretira kohleogram , oziroma kateri del kohleograma je pomemben za učenje in pravilno izgovarjavo posameznega fonema – lahko sam določi napačno izgovarjavo fonema in jo skuša popraviti .
Za uspešno vadbo določenega glasa mora uporabnik s svojo izgovarjavo fonema pokriti določen del slike , ali pa mora nek del slike ostati nepokrit .
Uporaba podobnega sistema za nemški in madžarski jezik , ki je služil kot osnova razvoju opisanega sistema , je v praksi pokazala , da je moč z njegovo pomočjo doseči hitrejše učenje pravilnega izgovora in tudi boljšo kvaliteto v primerjavi s klasičnimi metodami učenja .
Vaje izgovarjav posameznih glasov .
Pravilnost razpoznavanja se v procesu avtomatskega razpoznavanja govora občutno zmanjša , kadarkoli je prisoten šum .
Uporaba tehnike predprocesiranja govora predstavlja eno od možnosti za zmanjšanje vpliva šuma na uspešnost razpoznavanja .
Problem pogrešanih značilk se pojavi , ko je govorni segment filtriran , prekinjan ali maskiran s šumom .
Dosežena uspešnost razpoznavanja slovenske telefonske baze SpeechDat II je bila pri opravljenih testih za 23% boljša od klasičnih metod predprocesiranja govora .
Področje avtomatskega razpoznavanja govora postaja z razvojem računalništva vse pomembnejše , zato se v tovrstne raziskave vlaga čedalje več sredstev .
Problem avtomatskega razpoznavanja govora je interdisciplinarne narave , saj zajema različna področja družboslovnih ( fonetika , lingvistika , ...
Pri avtomatskem razpoznavanju govora signal najprej spremenimo v stroju razumljivo obliko .
Ker avtomatsko razpoznavanje govora izvajamo na digitalnih računalnikih , govor najprej filtriramo ( da zagotovimo izpolnjevanje Nyquistovega kriterija ) in nato vzorčimo z ustrezno frekvenco ( 8-16 kHz ) ter kvantiziramo na določeno število diskretnih nivojev ( 256 , 1024 ali 65536 , kar ustreza 8 , 10 ali 16 bitni kvantizaciji ) .
Zaradi časovnega spreminjanja značilnosti govora digitaliziran signal razdelimo v manjše odseke , za katere predpostavimo konstantne značilnosti .
Velikost oziroma dolžina okna znaša običajno od 25 do 50 ms , kar zagotavlja določeno stacionarnost značilnosti signala v oknu , saj za normalni govor velja , da ne nastopijo večje spremembe v signalu od približno 30 do 50 ms .
Faza izločanja značilk ima dva namena .
Primarni namen je , da skušamo odpraviti razlike med posameznimi govorci .
Sekundarni pomen imajo same metode , ki jih uporabljamo za izločanje značilk , saj zmanjšajo količino podatkov , potrebnih za nadaljnje procesiranje govora .
Postopek izločanja značilk ima v procesu avtomatskega razpoznavanja govora velik pomen in zelo vpliva na uspešnost sistemov avtomatskega razpoznavanja govora .
Od metod izločanja značilk zahtevamo naslednje lastnosti : - jasno morajo razlikovati različne segmente govornega signala , - izločiti morajo le informacijo , potrebno za razpoznavanje oziroma razumevanje govora , - ne smejo razlikovati enakih segmentov govornega signala , ki so jih izgovorili različni govorci .
V praksi pa je problem veliko bolj pereč , saj metode za izločanje značilk govora , ki jih trenutno uporabljajo v svetu , ne izpolnjujejo v celoti nobenega od zgoraj naštetih pogojev .
Težave pri obstoječih metodah za izločanje značilk so naslednje : - razlikovanje posameznih različnih segmentov govornega signala ni zmeraj natančno , zato lahko pride do prekrivanja značilnih vektorjev različnih segmentov govornega signala , - značilni vektorji enakih segmentov govornega signala različnih govorcev se lahko med seboj razlikujejo , - značilni vektorji različnih segmentov govornega signala različnih govorcev se lahko prekrivajo .
Pri avtomatskem razpoznavanju govora lahko neugodni akustični pogoji povzročijo popačenje ene ali več komponent pri vhodnih vektorskih značilkah .
Ljudje lahko razpoznavamo govor z običajno pojavljajočimi se motnjami , ki jih povzročajo senca glave ali šumi v okolju .
Problem zmanjšanja kakovosti avtomatskega razpoznavanja govora v prisotnosti dodanega šuma raziskujejo že več let .
Pri običajni metodi avtomatskega razpoznavanja govora najprej izračunamo značilni vektor za signal , ki vsebuje tako govor kot šum .
Dele signala , ki so vsebovali šum , smo izločili iz signala .
Tako smo za signale , ki so vsebovali govor , izračunali vektorje značilk , ki smo jih imenovali prisotne značilke .
Za dele signala , ki smo jih izločili zaradi prisotnosti šuma , vektorjev značilk nismo izračunali , zato smo jih imenovali pogrešane značilke .
Nato smo vektor značilk , ki temelji samo na prisotnih značilkah , uporabili za avtomatsko razpoznavanje govora z modeliranjem govora s prikritimi modeli Markova .
Problem pogrešanih značilk se pojavi , ko je govorni segment filtriran , prekinjan ali maskiran s šumom .
Večina raziskovalcev predpostavlja , da signal , ki je maskiran s šumom , poslabša pravilnost avtomatskega razpoznavanja govora .
Zato raziskovalci ( Lippmann & Carlson , 1997 ; El-Maliki & Drygajlo , 1999 ) z raznimi metodami določijo , kateri deli govornega signala so maskirani s šumom in kateri ne .
Za nadaljnje delo uporabljamo samo prisotne značilke , torej avtomatsko razpoznavanje govora temelji samo na prisotnih značilkah .
V prvem koraku smo detektirali šum s količino energije v govornem signalu .
Za odseke govornega signala , ki so vsebovali majhno količino energije , smo predpostavili , da vsebujejo šum .
Tako smo odseke s šumom odstranili iz govornega signala .
Za del signala , ki je vseboval samo govor , smo izračunali mel kepstralne vektorje značilk z dodatkom koeficientov energije ter prvega in drugega odvoda značilk ( MFCC _ E _ D _ A ) .
Slika 1 : Postopek izločanja govornega signala , ki je maskiran s šumom .
Kot smo zapisali že v predhodnem poglavju , smo segmente govornega signala , v katerih se nahaja šum , določili s pomočjo energije , izmerjene v posameznem segmentu .
Količino energije , izmerjene v posameznih segmentih , smo detektirali na dva načina .
Za nadaljnje delo smo uporabili le signal , ki je zadostil naslednji enačbi : /.../ pri tem je Esamp izmerjena energija v dolžini 10 ms in Enoise izmerjena energija v dolžini 100 ms na začetku govornega signala .
Pri tej metodi smo iz nadaljnjega postopka izločili segmente signala , ki vsebujejo manj oz. enako energije , kot jo vsebuje segment , za katerega smo predpostavili , da je šumen .
( 4 ) Pri drugi metodi smo iz nadaljnjega postopka izločili segmente signala , ki vsebujejo manj oz. enako energije , kot jo vsebuje šumen segment pomnožen z določenim faktorjem .
Kakšen faktor je izbran , je odvisno od razmerja med energijo celotnega signala in energijo šumnega segmenta , kar je razvidno iz enačbe ( 3 ) .
Baza TIDIGITS ( Leonard & Doddington , 1991 ) je studijska in vsebuje nize števk v ameriški angleščini .
Za učenje in testiranje smo uporabili dvakrat po 1242 govorcev .
Posnetkom smo dodali dvajset različnih šumov , ki smo jih predhodno izločili iz slovenske baze SpeechDat II. Izbrali smo šest razmerij signal šum med 16 dB in – 4 dB .
Šum smo dodali na takšen način , da bi se najbolj približali razmeram , ki so prisotne v bazi SpeechDat II. Na sliki 2 so prikazani primeri posnetkov , ki smo jih uporabljali pri testih z bazo TIDIGITS .
Slovenska baza SpeechDat II ( Kaiser & Kačič , 1997 ) je bila posneta preko telefonskega omrežja .
K slovenski bazi SpeechDat II nismo dodali dodatnih šumov , saj ima baza že sama po sebi razmerje signal šum 25 dB .
Na sliki 3 so prikazani primeri posnetkov , ki smo jih uporabljali pri testih s slovensko bazo SpeechDat II. Slika 3.a ) prikazuje originalni signal iz baze , slika 3.b ) predstavlja signal , ki smo ga dobili po izvedbi predprocesiranja s prvo metodo , in slika 3.c ) signal , ki smo ga dobili po izvedbi predprocesiranja z drugo metodo .
Uspešnost razpoznavanja smo določili z enačbo : /.../ pri tem je H število pravilno razpoznanih besed , I število vrinjenih besed in N število vseh besed , ki so bile uporabljene pri testu .
Uspešnost razpoznavanja pri bazi TIDIGITS je 99,08% v primeru , ko ni dodanega šuma .
S slike 4 je razvidno , da se uspešnost razpoznavanja zmanjšuje , kakor hitro se zmanjšuje razmerje signal šum .
Zaželeno je , da bi bila uspešnost razpoznavanja čim dalj časa na visokem nivoju ob zmanjševanju razmerja signal šum .
Oznaki mono in tri na sliki 5 predstavljata monofone in trifone z eno Gaussovo porazdelitveno verjetnostno funkcijo .
Obe metodi doprineseta k boljši uspešnosti razpoznavanja besed .
Druga metoda še posebej doprinese k uspešnosti razpoznavanja besed , ko uporabljamo monofone z eno Gaussovo porazdelitveno verjetnostno funkcijo .
Deli signala , ki so maskirani s šumom , pokvarijo uspešnost razpoznavanja govora .
Šumni deli signala vsebujejo značilke , ki smo jih imenovali pogrešane .
Pri raziskavi smo uporabili dve metodi za detektiranje pogrešanih značilk v šumnem okolju .
Del govornega signala , ki je vseboval šum , smo iz nadaljnjih raziskav odstranili .
Kot so pokazali rezultati , je druga metoda prinesla boljše rezultate , vendar je njen problem v tem , da je ne moremo uporabiti pri avtomatskem razpoznavanju govora , ki bi potekalo v realnem času .
V prihodnosti želimo narediti teste na celotni slovenski bazi SpeechDat II , tako da bi dobili rezultate , ki bi nam pokazali , kako uspešni sta metodi v razmerah , ki ponazarjajo resnično govorno okolje .
.
V članku bomo predstavili izdelavo razpoznavalnika tekočega govora neodvisnega govorca z velikim slovarjem besed za ameriško angleščino .
Sistem razpoznavalnika govora smo zasnovali na osnovi zveznih prikritih modelov Markova .
Po obdelavi učne baze smo začeli z učenjem modelov monofonov , ki smo jih kasneje razširili na trifone .
Modele trifonov smo razširili na dva nabora trifonov .
Dobljeni rezultati so primerljivi z rezultati dobljenimi na testu v organizaciji ameriške vladne agencije ARPA .
Področje uporabe razpoznavanja govora se vedno bolj širi iz laboratorijev v prakso .
Sistemi za razpoznavanje govora se uporabljajo v telefoniji , računalništvu , nudenju informacij ...
V zadnjih letih je bil dosežen velik napredek pri razvoju teh sistemov , obstaja pa še veliko možnosti za nadaljnje raziskovanje in izboljšave .
Baze govora , ki so bile v preteklosti uporabljene za razvoj sistemov razpoznavanja tekočega govora , so bile posebej narejene v ta namen .
Izbran je bil korpus tekstov , ki so ga nato različni govorci prebrali največkrat v studijskem okolju ali ob uporabi telefona .
Namen uporabe takšnih posnetkov je izboljšati robustnost razpoznavalnikov tekočega govora , saj je govor v takšni bazi v primerjavi s klasično bazo precej bolj raznolik in posnet v zelo različnih okoljih .
Takšen razpoznavalnik govora je možno uporabljati tudi za podnaslavljanje televizijskih oddaj , kar je bilo v obliki pomoči gluhim osebam izvedeno na Japonskem ( Imai , 2000 ) .
Pri izgradnji v članku predstavljenega sistema razpoznavanja tekočega govora neodvisnega govorca z velikim slovarjem besed smo uporabili bazo angleškega govora Broadcast News 1996 , ki vsebuje posnetke enajstih različnih ameriških televizijskih in radijskih postaj .
Akustični modeli so bili narejeni z zveznimi prikritimi modeli Markova , jezikovni modeli pa so N-gramski .
Za izdelavo akustičnih modelov smo uporabili orodje HTK na HP delovnih postajah z operacijskim sistemom HP-UX .
Rezultate in njihov komentar podajamo v četrtem razdelku .
Na področju razpoznavanja govora ločimo med dvema osnovnima pristopoma v načinu uporabe razpoznavalnikov .
V prvem primeru sistem deluje za odvisnega govorca .
To pomeni , da mora vsak uporabnik prilagoditi razpoznavalnik na značilnosti svojega glasu in način branja .
Takšen sistem je lahko tudi osnova za sistem razpoznavanja govora z odvisnim govorcem , seveda pa je potrebno izvesti adaptacijo na govorca .
Najtežja naloga na področju avtomatskega razpoznavanja govora je razpoznavanje tekočega govora neodvisnega govorca z velikim slovarjem besed .
Takšen sistem omogoča razpoznavanje stavkov , ne da bi bili med besedami potrebni presledki .
V slovarju besed takšnega razpoznavalnika je več kot 1.000 besed , ponavadi celo več kot 20.000.
Besede , ki je v slovarju ni , razpoznavalnik seveda ne more razpoznati .
Osnovna ideja delovanje razpoznavalnika je , da sistem naučimo na določeni bazi govora , ki vsebuje posnetke , za katere pričakujemo , da so dovolj podobni tistim , ki jih želimo razpoznavati ( Jelinek , 1997 ) .
Pri pristopu z uporabo prikritih modelov Markova ( PMM ) je osnovna zgradba razpoznavalnika prikazana na sliki 1 ( Young , 1995 ) .
Parametrizirani govorni signal je označen z Y , zaporedje besed je označeno z W. Kot vidimo na sliki 1 govorni signal najprej parametriziramo v vektor značilk Y v katerem so shranjene vse informacije o govornem signalu .
Vektorje značilk potrebujemo za nadaljnjo obdelavo govora .
Pri tem s pomočjo slovarja besed tvorimo možne kombinacije zaporedja besed W. Postopek , kjer bi stalno upoštevali vse možne kombinacije , bi bil prezahteven , zato manj verjetne možne stavke stalno opuščamo .
Na nivoju akustičnega modeliranja se izkaže , da so rezultati boljši , če pri uporabi modelov fonemov upoštevamo tudi kontekst v katerem se ti nahajajo .
Drugi pristop daje boljše rezultate , saj je v modelih upoštevan tudi učinek koartikulacije , vendar je takšen postopek zaradi večjega števila možnih trifonov računsko zahtevnejši .
Na področju tekočega govora dosežemo najboljše rezultate s trigramskimi ali štirigramskimi jezikovnimi modeli ( Pallet , et.al .
Produkt ocene akustičnega in jezikovnega modela da najbolj verjetno hipotezo o stavku , ki je bil izgovorjen .
Prikrite modele Markova , ki jih poleg nevronskih mrež najpogosteje uporabljamo v takšnih sistemih , moramo pred uporabo naučiti z uporabo ustrezne baze izgovarjav .
Pri uporabi baze posnetkov televizijskih in radijskih oddaj za učenje je vključen tako spontani , kot brani govor .
Zaradi različnih javljanj s terena so posnetki v bazi posneti v različnih akustičnih okoljih .
Frekvenca vzorčenja teh posnetkov je bila s pomočjo DAT-linka znižana na 16kHz .
Ker razpoznavalnika govora ne moremo učiti s stereo posnetki , je bil uporabljen samo levi kanal , ki je bil ob 16 bitni kvantizaciji zapisan v PCM obliki .
Datotekam so dodali glave za program Sphere , nakar so bile shranjene na CD-ROM .
Nekatere oddaje vsebujejo tudi dele pogovorov v živo , kjer se prepletata govora dveh ali več govorcev .
Takšni kategoriji posnetkov sta zelo težavni za razpoznavanje govora , zato smo takšne posnetke izločili iz baze posnetkov .
Na podlagi teh kriterijev je bilo iz baze izločenih 41,3% posnetkov .
Posnetke oddaj smo segmentirali v dele , ki niso bili daljši od 30 sekund , znotraj enega posnetka pa so bili akustični pogoji nespremenjeni ( en govorec , enaka kvaliteta posnetka , ...
Govor smo nato ob uporabi Hammingovega okna pretvorili v vektorje značilk , ki jih je sestavljalo 12 kepstralnih koeficientov in energija ( Young , 1997 ) .
V vektorju značilk je bilo tako 39 elementov .
Zaradi učne baze s posnetki različne kvalitete smo uporabili normalizacijo kepstralnih koeficientov .
K temu tekstu smo dodali pet kopij ortografskega zapisa posnetkov iz učne baze .
Dodali smo tudi poseben model " sil " , ki označuje začetek in konec stavka , ter model " sp " , ki označuje premor med dvema besedama .
Za večjo odpornost sistema na šum v posnetkih smo model " sp " vezali na model " sil " ( Young , 1997 ) .
V nasprotju s pričakovanji se je pri testiranju modelov izkazalo , da so rezultati s temi modeli slabši , kot s prvotnimi .
Težava pri učenju s trifoni je , da se kar nekaj trifonov v učni bazi pojavi samo enkrat ali dvakrat .
Pri tem postopku na osnovi fonetičnih razredov , v katere sodi posamični fonem , poiščemo akustično podobne foneme , katerih stanja združimo .
Drugi nabor trifonov , ki je bil naučen s to učno bazo , je vseboval vse možne kombinacije monofonov , saj ni znan vrstni red besed pri razpoznavanju .
Sedaj smo ob prehodnem učenju modelov , v koraku po dva , povečali število porazdelitev verjetnosti do števila 32.
Za izgradnjo jezikovnih modelov smo uporabili orodje CMU-SLM Toolkit V2.0 ( Clarkson , 1997 ) .
Pri uporabi jezikovnih modelov za razpoznavanje govora se v testnem naboru stavkov pojavijo zaporedja besed , ki jih v učni bazi ni bilo .
Do tega je prišlo zaradi dejstva , da smo zaradi velikosti trigramskih modelov , pri njihovi izdelavi uporabili nekoliko drugačne parametre , kot pri gradnji bigramskih jezikovnih modelov .
Razpoznavanje s trigramskimi jezikovnimi modeli je sicer računsko zahtevnejše kot v primeru uporabe bigramskih modelov , vendar praviloma daje boljše rezultate ( Graff , 1997 ) .
Referenčna baza , ki smo jo uporabili za testiranje razpoznavalnika , je vsebovala 565 različnih stavkov .
Napako razpoznavanja besed izračunamo kot : , ( 1 ) pri tem je S število zamenjanih besed , D število izbrisanih besed , I število vrinjenih besed in N število vseh besed .
Takšen sistem je deloval hitreje in tako omogočal lažje eksperimentiranje .
To izboljšanje je bilo pričakovano , saj lahko s trigramskimi jezikovnimi modeli bolj natančno modeliramo stavke v tekočem govoru .
Pri uporabi medbesednih trifonov in bigramskega jezikovnega modela je prav tako prišlo do izboljšanja rezultata za 2,8% v primerjavi z enakimi notranjebesednimi trifoni .
Do izboljšanja rezultata z medbesednimi trifoni je prišlo zaradi dejstva , da so takšni trifoni zmožni boljše modelirati vplive koartikulacije v tekočem govoru .
Pri velikosti slovarja 10.000 besed je v testnih posnetkih kar 23% besed , ki jih ni bilo v slovarju .
Rezultate razpoznavanja za slovar z 32.000 besedami podaja tabela 3.
Z uporabo večjega slovarja besed pri bigramskem jezikovnem modelu je prišlo do majhnega izboljšanja rezultatov .
Pri uporabi medbesednih trifonov s trigramskim jezikovnim modelom in slovarjem velikim 32.000 besed smo dosegli najboljše rezultate .
Slaba stran najboljše kombinacije uporabljene za razpoznavanje je , da je takšen sistem časovno najbolj zahteven , poleg tega pa zahteva tudi računalnike z veliko količino prostega spomina .
1997 ) in je služil za primerjavo rezultatov je bil najboljši sistem z WER 27,8% , najslabši sistem pa je dosegel rezultat 54,8% .
Primerjava naših rezultatov pokaže , da so doseženi rezultati primerljivi s tistimi , ki so bili doseženi na testu ARPEe .
Predstavljen je bil sistem za razpoznavanje tekočega angleškega govora z velikim slovarjem besed .
Doseženi rezultati so primerljivi z rezultati doseženimi na testu ARPEe .
Glavna možna izboljšava sistema bi bila uporaba ločenih akustičnih modelov za posamezna okolja iz katerih so posnetki .
Podatki o velikosti in lastnostih uporabljenih jezikovnih modelov .
Rezultati razpoznavanja za slovar 10.000 besed ( PMM – prik .
Rezultati razpoznavanja za slovar 32.000 besed z medbesednimi trifoni ( PMM – prik .
Takšni sistemi so lahko primerni za uporabo na področju večjezične sinteze govora .
Razvito orodje SEDLIS je moč vključiti v sintetizator govora , razvit pa je bil tudi grafični vmesnik , ki omogoča preizkušanje sistema .
Naprave so zmožne komunicirati z uporabnikom s pomočjo razpoznavanja govora , rezultate pa mu posredovati s pomočjo sinteze govora .
Da bi takšen sistem lahko pravilno deloval , mora vedeti v katerem jeziku je napisano besedilo iz katerega mora tvoriti govorni signal .
Pri tem je nujna uporaba sistema za identifikacijo jezika iz besedila .
Dober primer področja uporabe takšnega večjezičnega sistema za sintezo govora bi bil sistem , ki bi omogočal uporabniku , da bi preko telefona lahko poslušal elektronsko pošto , ki jo je sprejel .
Na področju identifikacije jezika iz besedila je bilo razvitih že kar nekaj različnih sistemov , ki razločujejo jezike na osnovi kategorij , ki jih bomo opisali v drugem razdelku .
V članku bomo predstavili sistem SEDLIS ( SL-ES-DE Language Identification System ) , ki je namenjen identifikaciji jezika iz danega besedila .
Trenutni rezultati delovanja sistema SEDLIS so predstavljeni v četrtem razdelku , ki mu v petem razdelku sledi zaključek .
Tudi v primeru , da je ena beseda skupna več jezikom , prihaja do razlik v kontekstu , v katerem beseda nastopi .
- Morfologija : način tvorjenja besed , slovarji besed in koreni besed so različni za posamezni jezik .
Naštete razlike med jeziki in njihove kombinacije služijo današnjim sistemom identifikacije jezika kot osnova za delovanje .
Prvi dve kategoriji se več uporabljata v primeru , ko moramo identificirati jezik na osnovi analize govornega signala .
Ta način ugotavljanja jezika pride do izraza pri večjezičnem razpoznavanju govora , kjer na primer identifikator jezika najprej identificira jezik in nato aktivira razpoznavalnik govora za ta jezik .
Drugi dve kategoriji ločevanja jezikov sta primernejši za identifikacijo jezika iz besedil .
Cilj sistema , ki je bil razvit , je identifikacija jezika iz danega besedila .
Pri tem smo se odločili , da bomo kot osnovo uporabili pogostost pojavljanja zaporedja treh črk ( trigram ) v besedilu in identifikacijo izvedli s pomočjo trigramskega jezikovnega modela ( Jelinek , 1997 ) .
Glavno področje uporabe jezikovnih modelov je predvsem razpoznavanje govora , kjer jih uporabljamo za ugotavljanje verjetnosti nastopa besed .
Pri takšnem pristopu se pojavi težava , saj se lahko v besedilu , za katerega želimo ugotoviti jezik , pojavi zaporedje treh črk , ki ga ni bilo v učnem besedilu .
Tudi omenjeni sistem TextCat deluje na podobni osnovi kot naš sistem , vendar jezik identificira na osnovi vsote razdalj med N-grami črk v učnem in testnem profilu N-gramov , ki je bil narejen na osnovi besedila .
Za izdelavo in preverjanje sistema smo uporabili baze SpeechDat ( II ) ( Kaiser in Kačič , 1998 ) za slovenski , španski in nemški jezik .
Te baze so sicer namenjene akustičnemu procesiranju govora , vendar je preverjanje pokazalo , da vsebujejo tudi dovolj veliko besedilo za modeliranje jezika .
Različnost v zasnovah večjezičnih baz , ki so bile uporabljane v preteklosti za izgradnjo identifikatorjev jezika , je oteževala primerjavo posameznih sistemov med seboj .
Glede na veliko število jezikov ( Höge et.al .
Ker je bil naš cilj modeliranje pogostosti pojavljanja črk v besedilu , smo iz baze SpeechDat ( II ) uporabili nabor fonetično uravnoteženih stavkov , ki so bili izbrani s pomočjo skripte projekta COST249 " SpeechDat Task Force " ( Johansen et.al .
Prav tako smo iz besedila izločili vse velike črke , saj bi to poslabšalo modeliranje jezika .
Osnovni podatki o uporabljenem naboru stavkov so podani v tabeli 1.
V vsakem stavku smo uporabili posebna simbola , ki označujeta začetek in konec stavka .
Pri izdelavi jezikovnega modela smo kot posebno črko upoštevali tudi presledek med dvema besedama .
S tem smo v jezikovnem modelu upoštevali tudi način tvorjenja stavkov v posamičnem jeziku .
Celotni sistem smo razvili na delovnih postajah HP-UNIX , vendar ga je možno z manjšimi prilagoditvami prenesti v okolje Windows .
Sistemu smo za boljšo predstavitev delovanja dodali grafični vmesnik , razvit v skriptnem jeziku Tk. Na urejenem in preverjenem učnem besedilu smo najprej s pomočjo orodja CMU-SLM zgradili trigramske jezikovne modele .
Podatke o dobljenih trigramskih jezikovnih modelih podaja tabela 2.
Najmanjše število bigramov in trigramov je v slovenskem jeziku , kar je posledica dejstva , da je v slovenskem jeziku tudi najmanj črk .
Glede na dejstvo , da je perpleksnost jezikovnega modela za slovenski jezik za eno tretjino večja od perpleksnosti ostalih dveh jezikovnih modelov , je možno na osnovi izkušenj iz uporabe jezikovnih modelov pri razpoznavanju govora predpostaviti , da bo rezultat identifikacije jezika za slovenski jezik najslabši .
Tako pripravljene jezikovne modele smo vključili v sistem .
Zgradbo sistema na najvišjem nivoju prikazuje slika 1 : Del za predprocesiranje izloči iz vhodnega besedila stavek in ga spremeni v obliko , ki jo uporablja sistem , tako da stavku doda oznako za začetek in konec stavka , ter vse presledke spremeni v ustrezni model .
Zaporedje trigramov črk potuje v vse tri trigramske jezikovne modele , ki delujejo vzporedno .
Jezik jezikovnega modela , ki je dal največjo verjetnost je prepoznan kot pravilni rezultat .
Takšna zasnova sistema omogoča pravilno identifikacijo jezika za posamične stavke tudi v primeru , ko je v enem besedilu uporabljenih več različnih jezikov .
Za lažjo in boljšo komunikacijo s sistemom smo razvili tudi grafični vmesnik , ki ga kaže slika 2.
Grafični vmesnik omogoča prepoznavanje jezika samo za posamični stavek .
Pravilen rezultat je prikazan tako , da se osvetli jezik , v katerem je vnešeni stavek , kot lahko vidimo na sliki 2.
Sistem je pravilno prepoznal , da je stavek " Kateri jezik je to ?
" zapisan v slovenskem jeziku .
Na začetku razvoja sistema SEDLIS smo iz učne baze izločili dva nabora stavkov , ki smo jih uporabili za preverjanje delovanja sistema .
Rezultate identifikacije jezika s prvim testnim naborom stavkov podaja tabela 3.
To je posledica dejstva , da iz takšnih stavkov jezikovni model dobi majhno število trigramov , na osnovi katerih lahko poda oceno o jeziku , v katerem je vnešeni stavek .
V primeru , da bi uspeli izboljšati delovanje sistema SEDLIS tudi za kratke stavke ( posamezne besede ) , ga bi bilo možno uporabiti tudi znotraj enojezičnega slovenskega sintetizatorja govora .
V takšnem sistemu bi SEDLIS na nivoju analize besedila preverjal jezik posamezne besede .
V primeru , ko se znotraj slovenskega stavka nahaja beseda v tujem jeziku , na primer lastno ime , se lahko za takšno besedo uporabijo drugačna pravila tvorjenja fonetičnega zapisa .
Te rezultate podaja tabela 4.
Iz tega lahko sklepamo , da so modeli za vse tri jezike dovolj dobro naučeni .
Uspešnost sistema bi bilo moč izboljšati tako , da bi povečali število stavkov v bazah besedil , ki smo jih uporabili za učenje jezikovnih modelov sistema SEDLIS .
V prihodnje načrtujemo razširitev sistema na večje število jezikov ( angleški jezik ) , vendar bo pri tem potrebno upoštevati tudi ali je jezik s stališča sinteze govora sploh smiselno vključiti .
Celotni sistem bo prenešen v HTML okolje na medmrežje , kjer bo javno dostopen za preizkušanje .
Število unigramov , bigramov in trigramov za posamični jezik , izračunana je tudi perpleksnost modela .
Sistem SEDLIS je pravilno prepoznal , da je vnešeni stavek v slovenskem jeziku .
Rezultati delovanja sistema SEDLIS za razpoznavanje slovenskega ( SL ) , španskega ( ES ) in nemškega ( DE ) jezika .
Rezultati identifikacije 153 stavkov v slovenskem jeziku ( slovenski ( SL ) , španski ( ES ) in nemški ( DE ) jezik ) .
V članku so opisani cilji in naloge projekta PoliDat .
Baza je razdeljena v dva dela : govor posnet preko mobilnega telefonskega omrežja in govor posnet preko fiksne telefonske linije .
V bližnji prihodnosti bo prodor jezikovnih tehnologij najbolj opazen na področju telekomunikacij , kjer že obstaja široko tržišče različnih proizvodov in storitev .
Pri tem je vrednost tržišča , ki zajema telefonske storitve – te bodo v bližnji prihodnosti delno ali popolnoma avtomatizirane z uporabo sodobnih sistemov jezikovnih tehnologij , v Evropi že danes več milijard eurov na leto .
V zadnjih nekaj letih smo priča pravi poplavi različnih projektov , katerih naloga je zasnova baz izgovarjav .
Zastavljeni projekti so posledica novih dosežkov na področju avtomatskega razpoznavanja govora in od tod izhajajočih novih potreb .
Trendi razvoja jezikovnih tehnologij gredo zelo hitro tudi v smeri mobilne telefonije .
Žal je proces izgradnje jezikovne infrastrukture v veliki meri zaobšel države srednje in vzhodne Evrope , ki bodo ta zaostanek same le s težavo nadomestile .
V Sloveniji se z izgradnjo baz izgovarjav ukvarjajo predvsem na Fakulteti za elektrotehniko , računalništvo in informatiko v Mariboru in Fakulteti za elektrotehniko v Ljubljani .
Na slednji so doslej zgradili bazo izgovarjav Gopolis ( Dobrišek , 1998 ) in Luz ( Gros , 2000 ) .
Na Fakulteti za elektrotehniko , računalništvo in informatiko bazo SNABI ( Kačič , 2000 ) in SpeechDat II za slovenski jezik ( Kaiser , 1997 ) .
Izgradnja baze izgovarjav PoliDat za mobilno in fiksno telefonsko omrežje poteka v sodelovanju med Fakulteto za elektrotehniko , računalništvo in informatiko ( v delo so vključeni : Center za jezikovne tehnologije , Laboratorij za digitalno procesiranje signalov in Laboratorij za digitalne in informacijske sisteme ) , Centrom za interdisciplinarne in multidisciplinarne raziskave in študije Univerze v Mariboru ter podjetjem Telekom Slovenije .
Pri izgradnji baze Polidat želimo v čim večji meri zadostili priporočilom in kriterijem , ki so bili definirani v okviru evropskega projekta SpeechDat II ( Senia 1997a , 1997b , 1997c ) .
Skupno bo v času snemanja baze za vsak del baze ( mobilna , fiksna ) izbranih 1400 govorcev , izmed katerih bo 1000 govorcev uporabljenih za definiranje končne baze izgovarjav .
Tako kot narečno področje ima tudi spol govorca pomemben vpliv na ustrezno reprezentativnost baze , saj ženske v primerjavi z moškimi govorijo v povprečju z višjim tonom ( višina in jakost ) .
Opažene so razlike med starostnimi skupinami pri uporabi besed in skladnji , ki pa so opazne le pri spontanem govoru .
Ob tem smo upoštevali priporočila projekta Speechdat II , da naj vsako izbrano narečno področje zajema najmanj 1% populacije prebivalstva v državi .
Število govorcev iz posameznega področja je določeno glede na število prebivalcev v danem področju .
Kriterij izobrazbene strukture klicalcev smo razčlenili na naslednje kategorije : osnovna šola , poklicna šola , srednja šola , višja šola , visoka šola , magisterij in doktorat .
Pri snemanju govora je okolje , v katerem se je nahajal govorec v času snemanja , pomemben faktor .
Ker je namen baze PoliDat čim bolje odraziti realne razmere , so lahko klici opravljeni iz poljubnega okolja : - telefonska govorilnica , - dom , - pisarna , - tovarna , - javni prostor ( letališče , železniška postaja , gostinski lokal ) , - cesta , - vozilo , - ostalo .
Skupni okvir definiranega korpusa predpisuje število in obseg posameznih enot , ki jih morajo vsebovati korpusi za posamezna jezikovna področja .
Predpisani vsebinski okvir za baze posameznih jezikov vsebuje : izolirane števke , zaporedja števk , naravna števila , denarne zneske , črkovane besede , uro , datum , odgovore da / ne , imena mest , najpogostejše ukaze pri posameznih aplikacijah , fraze , ki vsebujejo ukaze pri posameznih aplikacijah in fonetično uravnotežene stavke ( F. Senia , 1997c ) .
Ker je baza v osnovi sestavljena iz dveh delov , mobilnega in fiksnega , smo uporabili isti korpus pri snemanju za klice preko mobilnega telefona kot tudi za klice preko vrvičnega telefona .
Uporabljeni korpus zajema 900 fonetično uravnoteženih stavkov različnih dolžin , 42 aplikacijskih besed ( besede , ki bodo predvidoma uporabljane v različnih aplikacijah sistemov telefonskega govornega dialoga ) , 1500 fonetično uravnoteženih besed , števke in 150 številskih nizov – številke kreditnih kartic , 150 številskih nizov – telefonske številke in 100 različnih denarnih zneskov .
Tabela 2 prikazuje opis vsebine klicev .
Posnet govor sestavlja pretežno brani tekst z vnaprej pripravljene predloge , ki jo dobi vsak govorec pred snemanjem , pa tudi spontan govor - na primer odgovor klicalca na vprašanja o klicalčevem letu rojstva , o trenutni uri itd.
Fonetične transkripcije besed v slovarju so bile tvorjene s pomočjo programskega orodja za avtomatsko grafemsko-fonemsko pretvorbo ( Rojc , 2000 ) , nato pa še ročno pregledane .
Transkripcije so zapisane z naborom fonetičnih simbolov SAMPA za slovenski jezik ( Dobrišek , 1996 ) .
Govorni strežnik je nameščen v Laboratoriju za digitalno procesiranje signalov .
Uporabljena frekvenca vzorčenja je 8kHz , ob 8 – bitni kvantizaciji in a-law kodiranju .
Označevanje posnetkov se opravlja s PoliDatLabel programskim orodjem , izdelanim na Univerzi v Mariboru .
Orodje je bilo posebej razvito za označevanje baze PoliDat .
Označevanje poteka v dveh fazah .
Posneti govorni material je zapisan v posebni drevesni strukturi baze , ki je definirana upoštevajoč možnost čim hitrejšega branja s CD-ROMa , na katerem bo baza tudi zapisana .
Izgradnja baze PoliDat pomeni pomemben prispevek k prizadevanjem slovenskih raziskovalcev za uvajanje sistemov govornih tehnologij za slovenski jezik v sodobna komunikacijska omrežja in kar je še pomembneje , ohranja stik z najnovejšim razvojem na tem , tudi za slovenski narod , zelo pomembnem področju .
Trenutno namreč skupaj z bazo SpeechDat II za slovenski jezik predstavlja edino mednarodno primerljivo bazo izgovarjav za slovenski jezik , ki bo zadostila priporočilom in kriterijem gradnje baz izgovarjav , ki so bili definirani v okviru projekta SpeechDat II. To je še toliko bolj pomembno zato , ker je razvoj sodobnih sistemov govornih tehnologij mogoč le ob ustrezni infrastrukturi , ki jo predstavljajo predvsem baze izgovarjav , korpusi in slovarji .
S pomočjo tega analizatorja gradimo del podatkovne baze sistema za podajanje vremenskih napovedi .
V Laboratoriju za umetno zaznavanje , sisteme in kibernetiko smo si zastavili nalogo izdelati sistem za dialog za podajanje vremenskih napovedi .
Po zgledu podobnih sistemov , kot je Jupiter ( Zue et al. , 2000 ) , so vir podatkov za podatkovno bazo , ki bo sestavni del sistema za podajanje vremenskih napovedi , internetne strani Hidrometeorološkega zavoda Agencije RS za okolje .
Del podatkov o vremenu je na internetnih straneh podan v tekstovni obliki .
Kaj pomeni , da računalnik razume naravni jezik , kot je slovenščina , angleščina , nemščina , ...
S pojmom razumeti ne mislimo , da bo računalnik razmišljal tako kot razmišlja človek .
Tekstovno podani podatki pogosto vsebujejo veliko podrobnejše informacije kot pa uporabnika zanimajo .
Da bo sistem za podajanje informacij sposoben ponuditi le zahtevano informacijo in uporabnika ne bo dolgočasil z dolgimi monologi , mora biti podatkovna baza sistema ustrezno zgrajena .
Tina najprej vsaki povedi vremenske napovedi priredi ustrezne semantične kategorije ter zaporedni indeks .
Podatkovno bazo sistema Jupiter sestavljajo semantičnim kategorijam prirejeni seznami indeksov tistih povedi , ki jim je analizator Tina priredil določeno semantično kategorijo .
Osnova semantičnega analizatorja za tematsko omejeno področje vremenska napoved in obeti za Slovenijo je slovar , ki je rezultat 3-mesečnega snemanja podatkov na internetnih straneh .
Tabela 1 vsebuje primere vnosov v slovar .
Besede , ki ne nosijo pomembne semantične informacije , pa smo že na nivoju slovarja izločili .
Besede iz tematsko omejenega področja vremenska napoved in obeti za Slovenijo lahko predstavimo s 15 semantičnimi tipi .
Te semantične tipe lahko razdelimo na časovne semantične tipe , na krajevne semantične , na semantične tipe s ključno informacijo , nadopolnilne semantične tipe ter na semantične tipe relativni izraz , ključna beseda in nepomembna informacija .
Razdelitev semantičnih tipov je prikazana v tabeli 2.
Semantični tip ključna beseda je pomemben predvsem zato , ker poleg semantičnih tipov s ključno informacijo najbolj zanesljivo določa pomen povedi .
Semantični tip nepomembna informacija združuje kategorije , ki za razumevanje besedila niso ključnega pomena in jih lahko izločimo že na nivoju slovarja .
Vhod v analizator je seznam besedilnih delov , kiso v besedilu ločeni s pikami ali vejicami .
Naš cilj je posameznemu besedilnemu delu določiti pomen in pri vremenskih napovedih se izkaže , da lahko besedilne dele pomensko razdelimo na vreme , veter in temperaturo .
V podatkovno bazo pa zapisujemo podatke o vremenu , vetru in temperaturi za določene kraje ( pokrajine , deli Slovenije , lege ) ob določenem času ( dan , del dneva ) .
Pomen posameznih besedilnih delov semantični analizator določi s pomočjo vnaprej definiranih predlog , to je točkovanih seznamov semantičnih kategorij in tipov .
Podoben pristop je bil uporabljen pri pomenski analizi stavkov v sistemu za podajanje informacij o letalskih poletih ( Pepelnjak , 1996 ; Pepelnjak et al. , 1996 ) .
Vrednost posamezne predloge predstavlja seštevek točk , ki so pripisane posameznim semantičnim kategorijam in tipom besed , ki besedilni del sestavljajo .
Zaradi pomena besedilnih delov , ki sestavljajo vremenske napovedi , smo definirali tri osnovne predloge : VREME , VETER in TEMPERATURA .
Besedilne dele , ki ne nosijo pomembne informacije pa pripišemo dodatni četri predlogi NEPOMEMBNA INFORMACIJA .
V bazi vremenskih napovedi besedilni deli vsebujejo največ dva različna pomena .
Za predstavljen semantični analizator je namreč pomembno , da analizira besedilne dele , ki vsebujejo samo informacije o vremenu , samo informacije o vetru ali pa samo informacije o temperaturi .
Edini priredni veznik , ki se je pojavil v bazi vseh povedi in pred katerim v povedi ni vejice , je veznik in .
Semantični analizator vremenskih napovedi izvede analizo v šestih korakih : 1. korak : PRIREJANJE SEMANTIčNIH KATEGORIJ IN TIPOV .
Vsakemu besedilnemu delu iz seznama na vhodu priredi ustrezne semantične kategorije in semantične tipe .
To naredi na osnovi slovarja , v katerem sta dodatna informacija k vsaki besedi tudi njena semantična kategorija in semantični tip .
Analizator priredi temu stavku naslednje semantične kategorije : CJjutriCL , CJprimorskaCL , CJsončnoCL , CJtoploCL .
2. korak : OBDELAVA SEMANTIčNIH KATEGORIJ IN TIPOV .
V drugem koraku semantični analizator nekatera zaporedja semantičnih kategorij in tipov združi , nekatera zaporedja pa preoblikuje .
Obdelava kategorij in tipov pa je potrebna tudi v nekaterih primerih , ko v besedilnem delu relativni izraz ne nastopa .
V tabeli 3 so primeri takšne obdelave semantičnih kategorij in tipov .
Vnaprej so definirane tri predloge : VREME , VETER in TEMPERATURA.Točke kategorij in tipov , ki predlogo določajo , smo določili eksperimentalno .
Dodatna četrta predloga NEPOMEMBNA INFORMACIJA omogoča , da besedilne dele , ki ne nosijo za podatkovno bazo pomembne informacije , izpustimo .
Analizator besedilni del pripiše predlogi nepomembna informacija , če največje število točk , ki ga besedilni del dobi glede na tri osnovne predloge , ne doseže vnaprej določenega praga .
Primer predloge je na sliki 1. 4. korak : DODATNO RAZCEPLJANJE BESEDILNIH DELOV.Včetrtem koraku poteka analiza besedilnih delov , ki vsebujejo veznik in .
Tak besedilni del analizator razdeli na dva dela , razpolovi ga na mestu veznika in .
V soboto in nedeljo bo sončno in poletno vroče .
Nadaljevalo se bo sončno in vroče poletno vreme .
Ključna informacija v izhodni predlogi besedilnega dela , ki ga analizator pripiše predlogi vreme , je na primer vreme .
Izhodne predloge so tri : VREME , VETER in TEMPERATURA .
Iz drugega primera izhodne predloge vidimo , da nekateri besedilni deli ne nosijo vse informacije , ki jo potrebujemo za zapis v podatkovno bazo .
V primeru manjka krajevna informacija , časovna pa ni popolna .
Prvi besedilni del v seznamu vhodnih besedilnih delov ima vnaprej določeno časovno in krajevno informacijo , namreč Slovenija - danes podnevi , če seveda sam besedilni del ne vsebuje drugačnih krajevnih ali časovnih informacij .
Besedo nato pa nadomesti z naslednjo časovno enoto , to je naslednjim dnem ali naslednjim delom dneva .
Šele sedaj je besedilni del z izhodno predlogo tako opisan , da ga lahko zapišemo v podatkovno bazo .
Čas je natanko določen z dnevom in delom dneva , kraj pa je natanko določen s pokrajino , lego ali stranjo neba .
Besedilni deli s pomenom vreme vsebujejo še opis vremena , besedilni deli s pomenom veter še opis vetra , besedilni deli s pomenom temperatura pa še opis temperature .
Analizator pripiše obema besedilnima deloma pomen vreme .
Prvi besedilni del ( V torek bo na Primorskem delno jasno in suho ) analizator dodatno ne razcepi , čeprav vsebuje veznik in .
To pa zato , ker obema deloma pripiše enak pomen , namreč pomen vreme .
Ta besedilni del vsebuje vse potrebne podatke za napolnitev predloge ( časovno in krajevno informacijo ter informacijo o vremenu ) , zato predloge ni potrebno dodatno dopolnjevati .
Zaradi tega je dopolnjevanje predloge tega besedilnega dela potrebno .
Predobdelava besedila Seznam besedilnih delov Prirejanje semantičnih kategorij in tipov Ujemanje besedilnih delov s predlogami Obdelava semantičnih kategorij in tipov Seznam izhodnih predlog Dopolnjevanje izhodnih predlog Generiranje izhodnih predlog Dodatno razcepljanje besedilnih delov /.../
Zaradi tega v krajevno informacijo predloge zapiše vse pokrajine , ki jih prejšnja predloga ne vsebuje .
Predstavljen semantični analizator vremenskih napovedi je trenutno še v fazi testiranja in izboljševanja .
Za uspešno analizo vremenskih napovedi skozi vse leto je pomembno , da bo baza Vremenske napovedi in obeti za Slovenijo , na podlagi katere gradimo semantični analizator , pokrivala vse letne čase .
Naslednji korak bo rezultate analizatorja zapisati v podatkovno bazo , ki bo vir informacij sistema za podajanje vremenskih napovedi .
Načrtujemo , da bo to zbiranje potekalo s pomočjo Wizard-of-Oz tehnike ( Dahlbäck et al. , 1993 ) oziroma eksperimenta , ki ga imenujemo čarovnik iz Oza .
V teh eksperimentih človek misli , da se pogovarja s strojem , v resnici pa za računalnikom sedi človek - čarovnik ali wizard , katerega odgovori so posredovani s sintetiziranim govorom .
Tako lahko že pred konstrukcijo sistema simuliramo dialog med človekom in računalnikom .
SEMANTIčNI TIPI S KLJUČNO INFORMACIJO .
OSTALI SEMANTIČNI TIPI .
Primeri obdelave semantičnih kategorij in tipov .
Pridobivanje govorne zbirke za korpusni sintetizator govora Phonectic .
V članku opisujemo snovanje in ustvarjanje govorne zbirke za korpusno sintezo slovenskega govora .
Sprva smo izvedli frekvenčno analizo pogostosti pojavljanja glasovnih sklopov za slovenski jezik nad obsežnim vhodnim besedilom , ki smo ga pretvorili v fonetični prepis .
S hitrim razvojem računalniške tehnologije se je zmožnost razvoja sistemov , ki omogočajo komunikacijo med človekom in strojem v naravnem jeziku , močno povečala .
V modernem času je razvoj govornih tehnologij , predvsem to velja za sintezo in prepoznavanje govora , doživel izjemen razcvet in v vsakdanjem življenju se že uporabljajo raznovrstne rešitve s tega področja – v samodejnih informacijskih centrih , v govornih portalih , za glasovno prebiranje elektronske pošte .
Na tržišču je kar nekaj solidnih sintetizatorjev govora , nekaj med njimi jih podpira tudi slovenski jezik .
Razvoj in raziskave s področja sinteze slovenskega govora se odvijajo na Fakulteti za elektrotehniko Univerze v Ljubljani ( Gros , 1997 ; Vesnicer et al. , 2001 ) , na Inštitutu Jožef Stefan ( Šef , 2001 ) , na Fakulteti za elektrotehniko , računalništvo in informatiko na Univerzi v Mariboru ( Rojc et al. , 1999 ; Rojc et al. , 2000 ) ter v podjetju Masterpoint iz Ljubljane ( Gros et al. , 2001 ) .
V nadaljevanju opisujemo postopek zasnove in realizacije nove , kvalitetne zbirke osnovnih govornih enot , ki je potrebna za delovanje korpusnega sintetizatorja govora za slovenski jezik Phonectic .
Phonectic ( poznan tudi pod imenom Mp-Synth , verzija 3.0 ) razvija podjetje Masterpoint , v raziskavah slovenskega govorjenega jezika pa tesno sodeluje z Laboratorijem za umetno zaznavanje , sisteme in kibernetiko na Fakulteti za elektrotehniko Univerze v Ljubljani .
Za korpusno sintezo govora potrebujemo glasovno zbirko , ki vsebuje posnete osnovne enote govora ( Conkie , 1999 ; Conkie et al. , 2000 ) .
Kvaliteta na ta način sintetiziranega govora je v precejšnji meri odvisna od kvalitetno posnete govorne zbirke ( Beutnagel et al , 1999 ) .
Najkvalitetnejši govor bi pridobili iz zbirke , kjer bi bile posnete vse možne besede in besedne zveze , ki se pojavljajo v slovenskem jeziku , v vseh možnih kontekstih in besednih zvezah .
Za sintezo govornega signala bi v govorni zbirki samo poiskali ustrezno frazo in jo brez spreminjanja njenih prozodičnih lastnosti uporabili .
Takšne zbirke v praksi obstajajo in zadoščajo za zadovoljivo kvaliteto sinteze govora .
Pri sintezi v taki zbirki poiščemo ustrezen alofon , mu spremenimo prozodične lastnosti in ga uporabimo .
V splošnem velja , da je sintetizirani govor kvalitetnejši , če uporabljamo za sintezo daljše osnovne segmente s čim manj spremembami prozodičnih parametrov ( Kopeček , 2001 ; Yi , 1998 ) .
Število segmentov povečuje tudi želja po minimalnih spremembah prozodičnih parametrov , saj te vnašajo popačenja v sintetizirani govor .
Pri tem imamo enako zaporedje fonemov posneto večkrat , z različnimi prozodičnimi lastnostmi , kar posledično zopet pomeni obširnejšo glasovno zbirko .
Zasnovo zbirke za korpusno sintezo govora lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v nadaljevanju članka : - izbira besedila , potrebnega za snemanje govorne zbirke , - snemanje govornega gradiva , - segmentacija in označevanje govornega gradiva .
Pri načrtovanju vsebine glasovne zbirke za novi sintetizator slovenskega govora smo precejšnjo pozornost posvetili prav izbiri optimalnega besedila .
Daljše besedilo namreč pomeni zamudnejše snemanje , predvsem pa se poveča težavnost segmentacije in označevanja obsežnega posnetega govornega gradiva .
Besedilo za snemanje smo izbirali iz obsežne zbirke slovenskih besedil , ki so pokrivala različne zvrsti , kot so dnevni časopisi , revije , leposlovje .
Fonetični prepis besedila smo izvedli z modulom za grafemsko fonemsko pretvorbo sintetizatorja Phonectic ( Gros et al. , 2001 ) .
Večina dosedaj izvedenih analiz pogostosti zaporedij glasov v slovenskem jeziku je bila izvedena nad grafemskim zapisom ter se je ukvarjala z zaporedji grafemov .
Nad fonetičnim prepisom besedila smo izvedli frekvenčno analizo pojavljanja glasovnih nizov - alofonov , difonov , trifonov in štirifonov .
S tem smo dobili vpogled v pogostost pojavljanja posameznih sklopov alofonov v slovenskem govorjenem jeziku .
Kot zanimivost v sliki 1 predstavljamo rezultate frekvenčne analize slovenskih alofonov .
Sklopi trifonov in štirifonov krepko pripomorejo h kakovostno sintetiziranemu besedilu , saj je potrebno manj lepljenj , kar v končni fazi privede do manj vnesenih popačenj .
Zato smo razvili poseben algoritem za optimalno izbiro povedi in s tem tudi minimizacijo obsega govorne zbirke ( Mihelič , 2002 ) .
Vsem povedim smo določili ceno , in sicer na podlagi bogatosti z glasovnimi skupinami , ki smo jih potrebovali .
Štirifonom , ki jih v govorni zbirki še nismo imeli in jih je trenutno obravnavana poved vsebovala , smo predpisali najvišjo ceno , trifonom nižjo in difonom najnižjo .
Posamezne vrednosti smo sešteli in dobili skupno ceno .
Da ne bi vedno izbrali najdaljše povedi iz korpusa ( taka ima namreč statistično gledano največjo možnost , da vsebuje največ ustreznih glasovnih skupin ) , smo cene normirali s številom alofonov v povedi .
Celoten postopek smo ponavljali v zanki , dokler nismo z izbiro povedi pokrili prav vseh želenih glasovnih zvez .
Algoritem za optimalno izbiro povedi je izbral razmeroma maloštevilčno skupino povedi , bogatih z vsemi različnimi glasovnimi skupinami , ki smo jih zahtevali .
Vendar smo poleg teh pridobili še vrsto drugih glasovnih skupin , ki niso bile navedene v zahtevah .
Zaradi časovne zahtevnosti optimizacije nismo izvedli .
Začetne nabore uteži smo določili iz predhodnih izkušenj ob razvijanju sintetizatorja slovenskega govora .
Opisani način izbire povedi , primernih za uvrstitev v glasovno zbirko , se je izkazal za zelo učinkovitega in uporabnega .
Te povedi smo uporabili kot besedilo pri snemanju govorne zbirke .
Podoben algoritem za izbiro povedi so razvili na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru ( Rojc et al. , 2000 ) .
Posamezne zbirke se uporabijo za nadaljnjo obdelavo .
Vsakemu glasovnemu nizu določi pogostost pojavljanja v vsaki od 4 majhnih zbirk .
Izloči povedi , ki vsebujejo podvojene glasovne nize .
- Rezultat : Končni rezultat predstavlja zbirka s 1200 povedmi , ki vsebuje vsa glasovna zaporedja iz večje zbirke .
Postopek za optimalno izbiro povedi – sintetizator govora Phonectic : - Velikost uporabljene zbirke besedil : 3.2 milijona besed , ~200,000 povedi , v fonetičnem prepisu ~17.3 milijonov glasov .
- Cilj : Zbirka z vsemi izbranimi glasovnimi nizi , vsemi kombinacijami difonov in najpogostejšimi trifoni ter štirifoni .
Zbirka naj ima kar najmanjši obseg .
Postopek ponavljaj , dokler besedilo zbirke ne vsebuje vseh želenih glasovnih nizov .
- Rezultat : Končni rezultat predstavlja zreducirana zbirka povedi ( izhodiščno število povedi je bilo 200 , 000 ) .
Povprečna dolžina povedi v zbirki rahlo presega šest besed oz. 34.4 alofonov .
Prav tako je naša govorna zbirka bogatejša , saj sestoji iz večjega števila različnih glasovnih nizov , pri tem da vključuje vse najbolj pogoste .
Objektivno primerjavo uspešnosti obeh postopkov bi lahko dobili le z obdelavo iste vhodne zbirke slovenskih povedi .
Zelo pomembno je namreč , da govorec skozi vse besedilo govori na enak način , z enakim glasom , z enako intonacijo , skratka z enakimi parametri govora .
Snemanje besedila po kosih v daljšem časovnem obdobju ni priporočljivo , saj se govorcu lahko glas zaradi različnih zunanjih ( vreme , drugačne nastavitve pri snemanju , spremenjen spekter in intenziteta motenj iz okolice ) ali notranjih ( razpoloženje , bolezen ) vzrokov spremeni , govorna zbirka pa ni v celoti posneta , kar oteži kvalitetno sintezo govora .
Snemanje govornega gradiva je potekalo ob prisotnosti izkušenega snemalnega operaterja z namenom , da bi preprečili neustrezne izgovorjave besed in napake pri snemanju govora .
Govorni zbirki je bilo potrebno dodati še oznake o začetku ter koncu posameznih glasov oziroma fonemov ter oznake osnovne periode .
Za fonetične prepise posnetega govornega gradiva smo uporabili 36 različnih alofonskih oznak .
S postopkom vsiljenega prileganja posnetkov govora z grafi modelov glasov , ki so bili določeni iz fonetičnih prepisov izgovorjenih različic besed , smo si močno olajšali dolgotrajno in zamudno ročno označevanje glasov ( Dobrišek , 2001 ) .
Za ročno pregledovanje in označevanje govorne zbirke ter popravljanje oznak smo v Masterpointu razvili poseben računalniški uporabniški vmesnik - SIGMARK , ki omogoča prikaz in spreminjanje posnetih govornih signalov in izbranih akustičnih značilk ter poslušanje poljubnih odsekov signala ( slika 4 ) .
Orodje SIGMARK omogoča sočasni prikaz časovne in kratkočasovne frekvenčne karakteristike signala , kar močno olajša preverjanje in popravljanje mej med glasovi in oznak za glasove .
Druga prednost orodja SIGMARK je samodejno in konsistentno postavljanje značk osnovne periode .
Obseg govorne zbirke .
Končna govorna zbirka za korpusno sintezo govora vsebuje 297 različnih povedi s 1814 besedami ter vsemi potrebnimi difoni oziroma trifoni , ki smo jih izolirali ( pridobili ) iz logatomov .
Vse povedi v korpusu smo opremili s kanoničnimi fonetičnimi prepisi .
Po delih zbirke je podano še število vseh besed , število različnih besed in število glasov .
Pri snovanju govorne zbirke za korpusno sintezo govora smo izvedli frekvenčno analizo pogostosti pojavljanja glasovnih sklopov za slovenski jezik nad obsežnim vhodnim besedilom .
Z bistveno manjšo začetno zbirko besedil nam je uspelo ustvariti štirikrat krajše besedilo , kot je to uspelo konkurenčnemu postopku .
Končni rezultat , govorna zbirka za korpusno sintezo govora z vsemi potrebnimi oznakami , dobro služi svojemu namenu .
Sintetizator Phonectic se že nekaj časa uporablja tudi v komercialne namene .
V razvoju je že naslednja verzija sintetizatorja slovenskega govora , ki bo vključevala algoritem za odpravo spektralnih nezveznosti na mestih lepljenja glasovnih nizov .
Dodali bomo tudi izpopolnjeni algoritem za izbiro najprimernejšega govornega segmenta iz glasovne zbirke ter algoritem za iskanje optimalnega mesta lepljenja znotraj glasu .
alofoni zastopanost alofonov v zbirki besedil < - Desc _ sp > Slika 1 : < Desc _ sp > Prikaz frekvence zastopanosti alofonov v zbirki povedi , alofoni si sledijo v abecednem vrstnem redu .
Prikaz frekvence pojavljanja 50 najbolj pogostih trifonov v zbirki povedi .
pogostost pojavljanja v besedilu kumulativni sestevek število pojavljanj trifonov v zbirki besedil vsota pojavljanj vseh trifonov trifoni .
Prva skupina oznak predstavlja potek osnovne frekvence signala , druga skupina oznak so ročno popravljene oznake mej med glasovi , tretja skupina pa prikazuje samodejno določene oznake mej med glasovi .
Obseg govorne zbirke za korpusno sintezo slovenskega govora .
Sistem temelji na zbirki orodij EGYPT , ki je namenjena obdelavi dvojezičnih vzporednih korpusov za strojno prevajanje .
V članku predstavimo statistične osnove sistema , zbirko orodij EGYPT in našo implementacijo prevajalnika .
Sistem smo učili najprej neposredno na besedah ( besednih oblikah ) v korpusu , nato pa smo jih , za slovenski jezik , nadomestili z besednimi lemami , s čimer smo se želeli izogniti problemu redkih podatkov .
Izvedeno je bilo osnovno vrednotenje sistema , tako za model z besednimi oblikami , kot za tistega z lemami .
Zapletene matematične osnove , temelj SMT , so prav tako odvrnile marsikaterega raziskovalca .
Že od nekdaj je poskušal človek opisati jezik s pomočjo pravil , prvi primeri segajo vsaj 2000 let nazaj .
Pri opisovanju večine naravnih jezikov s strogimi pravili pa se pojavijo razni problemi : sistemi imajo majhno pokritje , majhno toleranco za napake in nove oblike , in so dostikrat počasni .
Glavna metoda za iskanje takšnih vzorcev je štetje raznovrstnih objektov in odkrivanje statističnih zakonitosti domene , npr. prevajanja .
SMT je osnovan na parametričnih statističnih modelih , podmnožica teh modelov je bila uporabljena tudi pri snovanju našega sistema .
Zbiranje dovolj velikih in pravilnih podatkovnih baz učnih primerov , v našem primeru postavljanje dovolj velikih in primernih dvojezičnih vzporednih korpusov je dolgotrajno opravilo .
V razdelku 2. predstavimo matematično ozadje statističnega strojnega prevajanja , v razdelku 3. opišemo programsko opremo , ki implementira SMT , in kako smo naučili slovensko-angleškega modela ; razdelek 4 opiše poskus poboljšanja sistema , z uporaba lem v dvojezičnem korpusu ; razdelek 5 ovrednoti sistem po dveh različnih metodah ; in razdelek 6 poda zaključke in načrte za nadaljnje delo .
Sistem temelji na osnovi parametričnih statističnih modelov ; prikažemo jih v tem razdelku .
Vzemimo par slovenske in angleške povedi s ;; e , ki sta ena prevod druge .
Čeprav direktno prevajanje besed ne prinaša dovolj dobrih prevodov , pa vseeno obstaja določena povezava med posameznimi besedami v obeh povedih .
Primer povezav si lahko ogledamo na sliki 2.
Formalna definicija poravnave : Niz parov s ;; e , kjer vsak par predstavlja povezavo med j-to besedo s ( slovenska beseda ) ter i-to besedo e ( angleška beseda ) .
Statistično strojno prevajanje sicer še ni doseglo rezultatov , ki bi omogočali izdelavo komercialnega ( uporabnega ) prevajalnega sistema , pa vendar so v začetku devetdesetih pri IBM zaključili s projektom , ki je obrodil kar nepričakovano dobre rezultate .
Temeljil je na avtomatični statistični analizi dvojezičnih besedil , rezultati in zaključki so opisani v ( Brown et al. , 1993 ) .
Angleška poved je prepotovala šumni komunikacijski kanal z zanimivo lastnostjo , da vsako angleško poved prevede v slovensko .
Osnovna ideja sistema Candide je , da lahko eksperimentalno določimo lastnosti našega " kanala " in jih lahko zapišemo s pomočjo matematičnih pravil .
S P ( ejs ) zapišemo verjetnost , da je bila e izvorna angleška poved , ki je služila za sestavo slovenske povedi s. Pri dani slovenski povedi s postane naš problem , problem avtomatskega prevajanja , iskanje angleške povedi , ki maksimira P ( ejs ) .
Torej iščemo : ^ e = argmaxP ( ejs ) ( 1 ) Z uporabo Bayesove formule dobimo : ^ e = argmaxP ( ejs ) = argmaxP ( sje ) P ( e ) ( 2 ) S P ( sje ) zapišemo verjetnost da dobimo s kot izhod , če je e vhod našega prevajalnega kanala .
Funkcijo bomo poimenovali prevajalni model ( translation model ) .
P ( e ) predstavlja apriorno verjetnost , da se je poved e pojavila na vhodu prevajalnega kanala , to funkcijo poimenujemo jezikovni model ( language model ) .
Obe funkciji neodvisno porajata rezultata za kandidata za angleški prevod e. Prevajalni model zagotavlja , da besede povedi e izražajo vsebino zapisano v s , jezikovni model zagotavlja , da je e res poved .
Prvi uvaja v teorijo verjetnostnih modelov , drugi prikazuje shemo dekodiranja , tretji načrta osnove modeliranja jezika ter zadnji , najpomembnejši , prikazuje prevajalne modele razvite v okviru projekta Candide .
Opisan je še dodatni prevajalni model HMM , ki ni del osnovnega sistema , razvitega pri IBM .
S c označimo telo podatkov , ki jih modeliramo , Q pa vektor parametrov .
Iskanje Q je primer optimizacije z omejitvami , omejitve so definirane z modelom , iščemo Q , ki določa maksimum funkcije .
Pogosto iščemo več kot le verjetnostni model opazovanih podatkov c.Iščemo možno skrito statistiko h , kije odvisna od c , in je ne moremo direktno določiti .
h je v splošnem podmnožica H ( vse dovoljene statistike ) .
V takih primerih najprej postavimo parametrični model P ( c ;; h ) , nato postavimo vektor Q tako , da dobimo maksimalno podobnost : X c P ( c ) ( 3 ) Najenostavnejši prevajalni model bi sestavili kot enostavno prevajanje slovenskih besed v angleške .
Takšno prevajanje le slabo odraža prevode iz realnega sveta , besedni red se spreminja , med prevodom se porajajo besede in besedne zveze ter nekatere tudi izginjajo .
Tako bomo postavili ogromno parametrično enačbo P ( sje ) za model prevajanja .
Parametrično enačbo bomo postavili tudi za model jezika P ( e ) ( 4 ) EM postopek bomo opravili na angleškem besedilu ( postavili bomo verjetnosti pojavljanja vseh besed ) .
Iskanje angleških besed , ki maksimirajo enačbo ( 9 ) , brez omejitev , torej preiskovanje celotnega prostora angleški besed je prehud problem za še tako dobre računalnike .
Naj bo e niz angleških besed e 1 : : : e l Model jezika ponuja verjetnost , da e predstavlja slovnično in semantično pravilno tvorjeno poved .
Kot primer vzemimo velikost besednjaka 10000 besed , kar je zelo majhna številka za vsak naravni jezik ter velikost fraz 10 ( k = 10 ) .
Sistem Candide uporablja model trigram , model trojk .
Največje število trigramov v učnem korpusu je le jcj ( če bi se vsak trigram pojavil le enkrat ) , število vseh možnih trigramov pa je r ; 1 , ki je še vedno veliko večje število za vsak primerno velik besednjak .
Model trojk ne omogoča upoštevanja semantičnih in sintaktičnih odvisnosti med besedami , ki so oddaljene za več kot dve mesti ( ne sodijo v isto trojko ) .
Ta razdelek opisuje elemente prevajalnega modela ( translation model ) P ( sje ) .
Sistem Candide uporablja dva prevajalna modela in sicer že opisani model , ki temelji na EM-učenju ter model največje entropije ( maximum-entropy model ) .
Modeli so poimenovani z osnovnimi lastnostmi ter tudi s popularno različico imena , ki se je med uporabniki veliko bolje prijela ( IBM-1 , ...
Parameter tega modela je t ( s i je i ) , verjetnost , da se določena slovenska beseda ( s i ) prevede v angleško ( e i ).
Z iterativnim izvajanjem algoritma spreminjamo verjetnosti za posamezne besede ( večamo pogojno verjetnost , če zasledimo obe besedi v dveh vzporednih povedih ) .
Ta model določa lego angleške besede v dvojezičnem korpusu , ki predstavlja prevod izbrane besede s iz slovenske vzporedne povedi .
Vse besede , ki se porajajo brez osnov v drugem jeziku , označimo z vrednostjo lokalne poravnave null , nastajajo iz " ničte " besede v izvornem jeziku .
Formalno zapišemo to verjetnost s tremi spremenljivkami : P ( a j jj ;; m ;; l ) ( 5 ) Formula predstavlja verjetnost , da je mesto j v slovenski povedi dolžine m poravnano z lego a j v neki angleški povedi dolžine l , ki je prevod prej opisane slovenske povedi .
Plodnost , fertility ( IBM-3 ) .
Nov model odpravlja pomanjkljivost s pomočjo parametrov , ki temeljijo na razredu besede s. Vse besede s iz slovenskega besednjaka ter vse besede e iz angleškega razvrstimo v razrede ( naša različica je omejena na 50 razredov ) .
Poravnava brez nesmislov , non-deficient alignment ( IBM-5 ) .
Na primer dve besedi lahko z enako verjetnostjo ležita na istem mestu v prevodu , besede ležijo pred začetkom in po koncu povedi .
Zadnji model takšne nesmisle odkrije in odstrani .
Programska oprema in učenje modela .
Nadaljevanje prinaša prikaz trenutno najbolj obetajoče in vsesplošno priznane zbirke orodij za rokovanje z dvojezičnimi , vzporednimi korpusi : Egypt .
Zbirka je nastala kot rezultat poletne delavnice na John Hopkins University .
Nekatera orodja so bila kasneje še dopolnjena in popravljena , uporabljajo tudi dodatne prevajalne modele , ki so opisani .
S pomočjo predstavljene zbirke orodij je bil postavljen sistem za prevajanje besedil iz slovenščine v angleščino .
Sestavljena naj bo iz orodij za pripravo korpusov , orodij za dvojezično učenje ( postavitev parametričnih modelov ) ter orodij za takojšnje dekodiranje tekstov .
GIZA .
Osnovna različica , napisana na delavnici , uporablja samo modele IBM-1 , 2 , 3 , poznejše različice pa prinašajo implementacijo modelov IBM - 4 , IBM-5 ter , z novim imenom GIZA + + , še dodatnega modela , ki nadomešča osnovni IBM-2 , HMM - skriti Markovski model .
Ostala enostavna orodja .
Za enostavno povezovanje vseh sklopov sistema smo razvili skupek lastnih orodij .
RemoveSGMLMarks prevede korpus iz TEI oblike s SGML zapisi v prosto nanizane povedi ločene z novimi vrsticami .
Ta zapis bere orodje za pripravo korpusa Whittle .
Kot parametre sprejme ime vhodne ter ime izhodne datoteke .
Med parametri navedemo metodo ( simple ter translation ) ter ime vhodne datoteke .
Kot vhod sprejme tudi prevode s standardnega vhoda ( STDIN ) .
Vhodna datoteka je zgrajena iz referenčnih ter ocenjevanih prevodov .
Rezultat je niz ocen za vsak par referenčni / ocenjevani prevod .
EvaluateTranslations skripta sestavi referenčne prevode testnih primerov ter prevode namenjene ocenjevanju ( nove prevode ) .
Povedi so zapisane vsaka v svoji vrstici , istoležne povedi so prevod iz enega v drugi jezika in obratno .
Jezikovni modeli nastajajo s pomočjo zbirke orodij za obdelavo besedil ter postavljanje jezikovnih modelov CMU Cambridge language modelling toolkit version 2 , ki zgradijo jezikovni model angleškega jezika na osnovi angleškega dela korpusa .
Prevajalni modeli nastajajo s pomočjo orodij zbirke Egypt .
Ta zapis je podan v obliki dveh osnovnih tipov datotek , prva vsebuje vse besede razporejene po frekvenci pojavljanj v korpusu .
Besede so zapisane kot naravna števila , najpogosteje uporabljane besede imajo manjše število , ki jih opisuje .
Prevajalni moduli ter jezikovni modul postavljajo zbirko tabel za preslikavo med slovensko ter angleško povedjo , predstavljajo tabele , ki jih uporablja dekoder pri sestavi prevodov .
Slika 3 predstavlja prehod učnega dela korpusa prek vseh modulov učnega sistema , izhod predhodnega modula je vhod naslednjega .
Vhodni korpus Whittle predela v obliko primerno za obdelavo s programom GIZA++ .
Izhod predhodnega modela je vhod za naslednji model , izhod zadnjega modela je naučen sistem .
Naučeni modeli so osnova za iskanje pravilnih prevodov vhodnih slovenskih povedi .
Vhodne povedi sprejema prek nastavljivih TCP / IP vrat , na istem naslovu se po poizvedbi nahaja tudi odgovor ( angleški prevod vhodne povedi ) .
Do prevajalnega sistema lahko dostopamo prek skripte napisane v programskem jeziku perl ali prek spletnega vmesnika .
Spletni vmesnik omogoča enostavno uporabo prevajalnega sistema praktično vsem uporabnikom , saj je dostop do strežnika s praktično vsakim spletnim brskalnikom .
V okviru našega sistema smo implementirali tudi avtomatsko testiranja po metodi SA / TA opisani v razdelku 5.
Prevajalni modul se sprehodi prek vseh primerov ter prevede slovenske povedi na novem sistemu .
Skupaj z izvornimi angleškimi povedmi iz korpusa sestavi spisek parov referenčna poved / prevedena poved ter ta spisek ponudi kot vhod modulu ta računanje urejevalne razdalje TestEditDistance .
Slednji izpiše ocene kakovosti prevodov za vsak par .
Osnovni model je bil razširjen z uporabo lem .
Z redukcijo besednih oblik na leme smo želeli omiliti problem redkih podatkov ( scarce data problem ) ; z večanjem korpusa se veča število podatkov , veča pa se tudi osnovni prostor pregledovanja .
Naša hipoteza je predvidevala , da bo sprememba korpusa ugodno vplivala na kakovost prevodov .
Pri učenju sistema smo uporabili lematizirane slovenske povedi ter osnovne angleške povedi .
Tako naučen sistem naj bi bil bolj odporen na sklanjanja in pregibanja v slovenskem jeziku , ki so v angleščini manj uporabljana .
Postavili smo nov sistem ( ponovno učenje na novem , popravljenem korpusu ) ter izvedli enaka testiranja kot pri osnovnem strežniku .
V strojnem učenju se pojavlja ravno toliko metod za vrednotenje sistemov prevajanja , kot je samih metod učenja ( učenja strojnega prevajanja ) .
Tolikšno število metod izvira Slika 3 : prikaz prehoda učnih primerov pri učenju prevajalnih modelov iz dejstva , da se strokovnjaki le slabo strinjajo kaj sploh je dober prevod , kaj šele kaj je dobra mera za ocenitev prevoda .
Vrednotenje MT sistemov je postalo samo zase dovolj močno področje razvoja MT , zaenkrat pa rezultatov , ki ne bi zbujali valov polemik , še ni .
Naša naloga pri izbiri metod je bila zapletena , še posebej z osnovo našega sistema , ki je vezan na slovenski jezik s svojimi posebnostmi in slabo raziskanostjo .
Avtomatska metoda se še nadalje loči na dve podrazličici , ki pa se razlikujeta le v upoštevanju ene količine .
SA / TA , enostavna natančnost , natančnost preslikav ( Alshawi et al. , 2000 ) in ( Vogel et al. , 1995 ) : Za vsak prevod izračunamo urejevalno razdaljo ( edit distance ) , tj. število vrinjenih , brisanih ali zamenjanih besed , med vrednotenim ter referenčnim prevodom .
Uporabili smo dve različni izvedenki te osnovne metode po ( Alshawi et al. , 2000 ) : SA , simple accuracy , enostavna natančnost SA = 1 ; ( I + D + S ) = R ( 6 ) Kjer je I število vrinjenih besed ( Inserted ) , D število brisanih ( Deleted ) , S število zamenjanih besed ( Substituted ) in R dolžina referenčne povedi ( Reference length ) .
TA , translation accuracy , natančnost preslikav SA = 1 ; ( I 0 + D 0 + S + T ) = R ( 7 ) Kjer je I ' število vrinjenih besed ( Inserted ) , D ' število brisanih ( Deleted ) , S število zamenjanih besed ( Substituted ) , R dolžina referenčne povedi ( Reference length ) , če upoštevamo še število premeščanj T ( Transposition ) .
Po ( Alshawi et al. , 2000 ) je natančnost preslikav bolj primerna mera za opisovanje preslikav , saj pravilne besede na napačnih mestih štejejo kot ena sama napaka in ne kot dve ( brisanje besede ter vrivanje na pravo mesto ) .
Za preverjanje kakovosti ocenjevanja je uvedena še posebna skupina referenčnih prevodov , ki se prav tako razvrščajo v razrede .
Metodi sta bili še dodatno testirani s pomočjo zbirke prevodov ( ročni prevodi testne množice ) .
Ta množica prevodov je bila postavljena kot ideal in njena ocena predstavlja oceno h kateri stremimo .
Testna množica je bila ocenjena z metodo SA / TA s koeficientom 2,82 oziroma s 36,84 odstotki .
( 36,84% predstavlja 100% ) Dodatno normaliziranje smo uporabili s pomočjo ročnega ocenjevanja testne množice prevodov .
Testna množica je bila ocenjena z metodo SSER s koeficientom 4,48 oziroma s 87 odstotki .
Pri testiranju je bila pri avtomatski metodi uporabljena metoda desetkratnega prečnega preverjanja ( tenfold cross validation ) .
Testiranje s pomočjo opisanih metod se izvaja s testnimi primeri na naučenih modelih .
Postopek se ponovi še devetkrat , tako so vsi primeri korpusa prisotni tako v testni kot v učni množici .
Metoda SSER , ki zahteva prisotnost eksperta , bi bila za celotno desetkratno prečno preverjanje preveč zamudna .
Rezultati so razdeljeni na preverjanje kakovosti prevajanja osnovnih algoritmov ter izboljšane različice .
Testiranje je bilo izvajano s pomočjo testnih primerov , ki niso del učnega korpusa .
Isti testni primeri so bili uporabljeni za oba sistema , navadnega ter sistema , ki uporablja leme .
Testiranje je potekalo v dveh stopnjah , najprej testiranje kakovosti prevodov osnovnega sistema , v nadaljevanju pa še testiranje novega sistema .
Rezultati so med seboj primerljivi , same metode pa niso primerljive z metodami ostalih avtorjev .
Rezultati vrednotenja sistema z uporabo lem .
Zavedati se moramo , da je uporaba sistema z lemami veliko bolj zahtevna , saj sistem vhodne povedi najprej lematizira ter jih nato preda prevajalniku .
Sistem z uporabo lem ni brez pomanjkljivosti .
Pri pretvarjanju osnovnih oblik v leme izgubimo veliko informacij , ki bi jih med prevajanjem potrebovali , kot so čas , spol ...
Potrebujemo ločevanje pozitivnimi ter negativnimi lastnostmi nove metode .
Prenos orodij na slovensko-angleški prevajalnik je bil uspešen , algoritmi pa se obnašajo v okviru pričakovanj .
Pri pretvarjanju osnovnih oblik v leme izgubimo veliko informacij , ki bi jih med prevajanjem potrebovali , kot so čas , spol ...
Poleg uporabe lem za dograditev sistema se poraja kot najočitnejša možnost uporaba slovensko – angleškega slovarja , s čimer bi zmanjšali število neznanih besed v prevodih .
primerjava ocen osnovnega sistema , sistema z lemami ter testne množice prevodov ; primerjava je bila izvedena z obema metodama dodane so popravljene vrednosti z popravkom glede na rezultate ocen testnih prevodov .
Sinteza govora z uporabo prikritih Markovovih modelov .
Osnovo za pridobivanje značilk , s katerimi učimo modele , predstavlja vir – filter model govora .
Vektor značilk tako sestavimo iz dveh delov .
Prvi del opisuje govorni trakt , drugi del pa vzbujanje .
Vhod v postopek sinteze predstavlja niz fonemov s pripadajočimi trajanji in poteki osnovne frekvence .
Če vektor značilk razširimo še z dinamičnimi značilkami , dobimo gladke prehode med posameznimi glasovi .
Čeprav so sistemi za sintezo govora ( angl. text-to-speech systems ) že dosegli visoko stopnjo razumljivosti sintetiziranega govora , jim še večjo uveljavitev v vsakdanjih aplikacijah preprečuje predvsem to , da je sintetiziran govor še vedno precej nenaraven .
Za sintezo govora obstajajo tri glavne metode .
To je tudi razumljivo , saj je težko tako kompleksen proces kot je tvorjenje govora natančno zajeti z zbirko enostavnih pravil .
V zadnjem času se korak k večji naravnosti govora poskuša storiti s posplošitvijo tega postopka tako , da sistem primerne govorne enote izbira dinamično ( v času sinteze ) iz večje govorne zbirke .
Največji problem tega postopka predstavlja izbira kriterijske funkcije , s pomočjo katere se sistem odloča o primernosti posameznih enot .
Za razliko od prejšnjega postopka skušamo v tem primeru govor zajeti v parametrični obliki .
S parametričnim opisom dosežemo v smislu zgoščevanja informacije bolj kompaktno predstavitev govorne zbirke in hkrati večjo fleksibilnost v smislu spreminjanja prozodičnih lastnosti govora ( trajanje in potek osnovne frekvence ) .
V tem delu želimo izkoristiti dobre lastnosti vir – filter modela govora in hkrati doseči večjo naravnost sintetiziranega govora .
Enako kot pri razpoznavanju govora želimo v fazi učenja govor modelirati s pomočjo prikritih Markovovih modelov ( PMM ) , razlika pa je v tem , da želimo sedaj iz naučenih modelov znati generirati govor .
V drugem delu je predstavljen vir – filter model govora , ki se pogosto uporablja pri kodiranju govora , nam pa bo služil za generiranje značilk , s katerimi bomo učili PMM-je .
V tretjem delu je podan postopek generiranja parametrov govornega signala iz naučenih PMM-jev .
Osnovna ideja pri vir – filter modelu govora je , da želimo govorni signal ločeno opisati s časovno spremenljivo prenosno funkcijo govornega trakta C0B4DEBND8B5 in pa z vzbujanjem , ki ta govorni signal generira ( slika 1 ) .
Prenosno funkcijo govornega trakta lahko opišemo na večnačinov .
Predstavitev govornega trakta s koeficienti linearnega napovedovanja .
Ko izračunamo te koeficiente , lahko vzbujanje govornega trakta poiščemo z inverznim filtriranjem govornega signala .
Iz dobljenih parametrov za vzbujanje in prenosno funkcijo govornega trakta bi lahko spet enostavno tvorili govorni signal tako , da bi v odvisnosti od parametra , ki predstavlja osnovno frekvenco vzbujanja , preklapljali med šumnim generatorjem in generatorjem vlakov impulzov , kar bi predstavljalo vzbujanje za filter , ki smo ga opisali z LPC koeficienti .
Določeni glasovi nastanejo namreč s kombinacijo obeh načinov vzbujanja .
Pri generiranju govora pa na podlagi te analize ločeno spustimo obe vrsti vzbujanja skozi ustrezne pasovne filtre , izhoda iz teh filtrov pa seštejemo .
Tako v primeru , da imamo govorni signal vzorčen s 16 kHz , frekvenčno področje razdelimo na pet delov ( 0 – 1000 , 1000 – 2000 , 4000 – 6000 in 6000 – 8000 Hz ) , za katere jakost zvenečnosti določimo z uporabo normaliziranih korelacijskih koeficientov v okolici osnovne periode .
Korelacijski koeficient pri zamiku D8 je definiran kot CRB4D8B5 BP C8 C6A0BD D2BPBC D7B4D2B5D7B4D2B7D8B5 D5 C8 C6A0BD D2BPBC D7B4D2B5D7B4D2B5 C8 C6A0BD D2BPBC D7B4D2B7 D8B5D7B4D2B7D8B5 BN ( 2 ) kjer je D7B4D2B5 vrednost n – tega vzorca govornega signala , N pa dolžina okna .
Drugačen način opisa govornega trakta dosežemo s koeficienti melodičnega kepstra ( MFCC ) , ki se zelo pogosto uporabljajo v namene razpoznavanja govora , kjer je potrebno za uspešno učenje razpoznavalnikov iz govora izluščiti le tisto informacijo , ki prispeva k večji zanesljivosti razpoznavanja .
Postopek tvorjenja parametrov govornega signala iz prikritih Markovovih modelov .
Pri razpoznavanju govora želimo na podlagi vhodnega niza vektorjev značilk poiskati najbolj verjetno pot skozi graf PMM-jev , kar storimo z Viterbijevim algoritmom .
Denimo , da želimo sintetizirati besedo primer , kar pomeni , da opisani postopek prejme niz alofonov p , r , i , m , e : , r. Na podlagi tega niza povežemo osnovne PMM modele posameznih alofonov v verigo in dobimo sestavljeni PMM model AL , iz katerega želimo poiskati najbolj verjeten niz vektorjev značilk CMDC , ki ga lahko ta model generira .
Prehodi med posameznimi vektorji pa predstavljajo nezveznosti , tako da na tak način dobimo precej nezvezen govor .
Maksimum izraza 8 sedaj poiščemo tako , da postavimo /.../ kar prevedemo na reševanje sistema linearnih enačb , ki v splošnem za rešitev zahteva /.../ operacij .
Zbirka obsega pet različnih govorcev , od tega so štirje govorci in ena govorka .
Pri razpoznavanju govora se lahko odločimo za od govorca neodvisno ali za od govorca odvisno razpoznavanje .
V prvem primeru v učni bazi zajamemo posnetke le enega govorca , v drugem primeru pa želimo zajeti čim večje število različnih govorcev .
Obe možnosti imamo na voljo tudi pri sintezi , vendar se zdi bolj smiselno , da se osredotočimo le na tistega govorca , katerega glas želimo uporabiti pri sintezi .
Učna množica je tako obsegala okrog 500 stavkov s skupno dolžino 40 minut .
Učenje prikritih Markovovih modelov smo izvedli z orodjem HTK ( Young et al. , 2002 ) .
Dimenzija vektorja značilk je bila 40 , od tega smo prenosno funkcijo govornega trakta opisali z 21 koeficienti melodičnega kepstra , ostalih 19 značilk pa smo uporabili za opis vzbujanja .
Značilke smo računali na vsakih 5 ms .
Opisani postopek sinteze govora s pomočjo prikritih Markovovih modelov nima funkcionalnosti celotnega sistema za pretvorbo teksta v govor ( angl. text-to-speech , TTS ) , ampak predstavlja le zadnji modul takega sistema .
Predpostavljamo torej , da je nekdo že predhodno opravil analizo vhodnega teksta , grafemsko-fonemsko pretvorbo in oblikoval željeno prozodijo ( trajanje in potek osnovne frekvence posameznih fonemov ) sintetiziranega govora , ki vsak zase predstavljajo zelo zahtevne probleme ( Gros , 2000 ) .
Ena izmed ključnih značilnosti opisanega postopka je tudi ta , da ni od jezika odvisen , če zanemarimo dejstvo , da moramo govorno zbirko pač posneti v jeziku , ki ga želimo sintetizirati .
To pomeni , da lahko enak postopek apliciramo na poljuben jezik .
Pomembna prednost pred ostalimi postopki za sintezo govora je še , da je postopek gradnje novega glasu popolnoma avtomatiziran , saj je praktično ekvivalenten učnemu delu postopka pri razpoznavanju govora s PMM-ji .
Še posebej pa se ta prednost izkaže v primerjavi s korpusno sintezo , kjer imamo opravka z velikimi govornimi zbirkami .
Modeliranje govora s PMM-ji predstavlja namreč učinkovito kompaktno parametrizacijo govorne zbirke .
Velikost modelov , iz katerih tvorimo govor , namreč ni odvisna od velikosti govorne zbirke , iz katere te modele učimo , temveč je odvisna le od strukture modelov , za katero se odločimo .
V času sinteze mora biti prisotna celotna zbirka , ki lahko tako v nekomprimirani obliki zavzame tudi po več sto MB ( ena ura govora zavzame pri frekvenci vzorčenja 16 kHz in kvantizaciji 16 bit / vzorec približno 110 MB prostora na disku oz. v pomnilniku ) .
S tega stališča se zdi , da so sistemi korpusne sinteze govora mogoče bolj primerni za večje strežniške sisteme , medtem ko bi bili lahko sistemi za sintezo govora , ki temeljijo na prikritih Markovovih modelih , uporabni tudi za vgrajene ( angl. embedded ) sisteme , ki imajo ponavadi precej omejena sistemska sredstva .
Opisan postopek sinteze govora je še v zgodnji fazi razvoja in kot tak še ni primeren za direktno uporabo v kakšni aplikaciji .
Vhod v postopek v najboljšem primeru predstavlja niz simbolov , ki ustrezajo posameznim glasovom , s pripadajočimi časi trajanja in potekom osnovne frekvence .
Če informacije o času trajanja ali o poteku osnovne frekvence nimamo , lahko postopek še vedno tvori govor z " zglajenim " ( v primeru dinamičnih značilk ) povprečnim časom trajanja in povprečno osnovno frekvenco posameznih fonemov .
Povprečno dolžino trajanja lahko izračunamo na podlagi podatka , kako dolgo ostane PMM v povprečju znotraj določenega stanja , kar izračunamo s sledečo enačbo , /.../ kjer je /.../ verjetnost , da model ostane v stanju CX. Na sliki 3 sta kot primer prikazana spektrograma originalnega posnetka in sintetiziranega govora .
Osnovo za pridobivanje značilk , ki jih uporabimo za učenje PMM-jev , predstavlja vir – filter model govora .
Opravili smo tudi že nekaj začetnih poizkusov , ki kažejo na to , da sintetiziran govor dokaj dobro posnema glas govorca , s katerim smo sistem učili .
Zaenkrat kvaliteta umetno tvorjenega govora z opisanim postopkom še ni primerljiva z ostalimi uveljavljenimi postopki za sintezo govora .
Izboljšano kakovost sintetiziranega govora bomo poskušali doseči predvsem z vpeljavo kontekstno odvisnih modelov ( difoni , trifoni ) .
Pogledali bomo še , kako na kvaliteto sintetiziranega govora vplivajo različne strukture PMM modelov ( število stanj na model , model s preskoki , model brez preskokov med stanji , število mešanic funkcij gostot verjetnosti na stanje , diagonalne kovariančne , nediagonalne kovariančne matrike , hitrost računanja značilk ) .
Nenazadnje pa bo potrebno opraviti še tudi bolj obširno evaluacijo kvalitete sintetiziranega govora .
Stikalo preklaplja med generatorjem šuma ( nezveneči glasovi ) in generatorjem impulzov ( zveneči glasovi ) .
V okviru tega prispevka s sintezo mislimo na generiranje govornega signala ( angl. waveform generation ) , kar predstavlja le enega izmed problemov pri sintezi govora iz teksta .
Pripomočki na spletu za prevajalce zakonodaje EU .
Del prevajalcev je zaposlen v službi Vlade RS za evropske zadeve , večina prevajalcev pa dela pogodbeno .
Prevajalci , ki jih zaposluje država , imajo na voljo sodobne prevajalske pripomočke podjetja Trados , zunanji prevajalci pa so glede tega bistveno slabše opremljeni .
Tam so prevajalcem na voljo v dveh oblikah : kot slovar in korpus , pri čemer je slovar povezan s korpusom .
Pri tem nastaja več težav : pojavljajo se novi izrazi , obstoječi splošni slovarji ( npr. Veliki angleško-slovenski in Veliki slovensko-angleški slovar ) so pomanjkljivi in zastareli , v novejših pravnih slovarjih ( npr. Pravni slovensko-angleški prevajalski slovar , Pravni terminološki slovar , Slovenski pravni leksikon ) terminologija še ni povsem usklajena ( Velkaverh , 2001 ) , terminologija posameznih strok pa je razdrobljena v množici malih terminoloških slovarjev ( na spletu npr. ( Željko , 2002 ) ) .
V prevajalskem oddelku dela 25 prevajalcev , dve terminologinji in tri lektorice , poleg njih pri prevajanju pogodbeno sodeluje približno 150 prevajalcev ( samostojnih in tistih , ki delajo prek prevajalskih agencij ) .
Programi podjetja Trados so bili izbrani , ker jih uporabljajo tudi druge članice EU in kandidatke za članice , nakup za prevajalce , zaposlene v SVEZ-u , pa je financirala EU .
Večje težave so z zunanjimi prevajalci .
V zadnjem letu omogoča delo s Tradosovimi bazami tudi brezplačen program Wordfast ( http://www.champollion.net/ ), a je ta program še v razvoju .
Rešitev za prevajalce , zaposlene na SVEZ-u , je opisana v ( Krstič , 1999 ) in ( Krstič in Belc , 1999 ) , v tem prispevku pa bom opisal lastne rešitve , ki smo jih razvili za pomoč zunanjim prevajalcem .
Leta 2000 , ko smo začeli s prenosom podatkov na internet , je podjetje Trados nudilo prenos terminologije na splet , a je ta program deloval le na strežnikih , ki so tekli na operacijskem sistemu Windows NT ( ta omejitev je veljala tudi leta 2002 , glejte ( Trados , 2002 ) ) .
Tekom let se je ta izbira izkazala kot zanesljiva , stabilna in varna in je nismo želeli spreminjati samo zaradi terminološke zbirke , ki v celotni ponudbi podatkov državne uprave predstavlja razmeroma majhen delež – to pa je pomenilo , da bomo morali rešitev razviti sami .
Programe za izvedbo te rešitve smo napisali v programskem jeziku perl , uporabljamo pa tudi nekatere programe operacijskega sistema unix .
Prenos terminologije na internet .
Program ( MultiTerm , 2002 ) ima podatke urejene v lastni bazi , če pa želimo te podatke obdelovati po svoje , jih lahko izvozimo v tekstni obliki , ki je že prirejena za nadaljnjo obdelavo : v vsaki vrstici je navedeno ime parametra med znakoma "<" in ">" ter vrednost tega parametra .
Različni vpisi imajo lahko različne parametre , obvezna sta le dva : zaporedna številka vpisa ( ki jo dodeli program MultiTerm ob vnosu novega podatka ) in beseda ali pojem v enem jeziku ( z oznako jezika ) , zadeva pa ima smisel šele , če je naveden prevod te besede vsaj v enem jeziku ( z oznako jezika ) .
) , pri enem vpisu se nekateri podatki lahko ponavljajo ( npr. če za besedo v enem jeziku obstaja več različnih prevedkov v drugi jezik ) in nekatera polja so medsebojno povezana ( npr. komentarjev je lahko več , vsak pa se nanaša na polje pred njim ) .
Spletni uporabniški vmesnik je sestavljen iz treh delov ( slika 1 ) : v zgornjem delu je vedno dostopen opis slovarja , navodila za iskanje , preklop med slovenskim in angleškim uporabniškim vmesnikom ter preklop med terminologijo in korpusom ; levo vpisujemo iskano besedo in označimo jezik , kot rezultat pa dobimo seznam zadetkov , sortiran po abecedi in ko kliknemo enega od zadetkov , se vsi podatki o določenem vpisu izpišejo v desnem okviru .
Za večjo preglednost so prevodi v štirih najpomembnejših jezikih napisani v štirih različnih barvah in jih tako prevajalec hitreje najde med množico drugih ( praviloma manj pomembnih ) podatkov .
Pretvorba pomnilnikov prevodov v dvojezični korpus in prenos na internet .
To je program s pomnilnikom prevodov ( Vintar , 1999 ; Željko , 2000 ) , ki mu kot uporabniški vmesnik služi urejevalnik besedil MS Word : ko prevajalec začne prevajati , dobi v okvirju prevodno enoto ( običajno je to stavek ) izvornega besedila , v naslednji okvir pa napiše prevod .
Prevajalec se potem odloči , ali bo obdržal prevod iz baze , ga morda popravil ali začel prevajati čisto od začetka .
Pomnilnik prevodov je uporaben z dveh vidikov : če se besedila ponavljajo , gre prevajanje hitreje ( kar je uporabno npr. pri spremembah obstoječe zakonodaje ) , poleg tega pa je v pomnilniku prevodov skrito veliko uporabne terminologije , ki je v terminološki zbirki morda ni .
Tudi bazo programa Translator's WorkBench lahko pretvorimo v besedilno obliko .
Za naše potrebe sta najpomembnejši vrstici z oznakama < Seg L = UKE > in < Seg L = EUR > : v prvi je prevodna enota v angleščini , v drugi pa je njen prevod v slovenščino .
Posamezni pomnilniki prevodov so ločeni po področjih in vsako področje je shranjeno v svoji datoteki .
Avgusta 2002 so bila na voljo naslednja področja : finance , kmetijstvo , okolje , primarna zakonodaja EU in transport .
Uporabniški vmesnik je podoben kot prej ( slika 2 ) : zgoraj je stalni del z enako navigacijo kot pri Evrotermu , na levi uporabnik določi iskalne pogoje in izbere način izpisa , desno pa se izpišejo rezultati .
Iskanje je možno omejiti na posamezno področje , lahko pa iščemo po vseh bazah .
Izpis je lahko dvojezičen ( v tem primeru dobimo celotno prevodno enoto v izvirniku in prevodu ) ali enojezičen ( v tem primeru dobimo v izpisu samo okoli 50 znakov levo in desno od iskanega pojma ) .
Enojezični izpis ( slika 3 ) je v bistvu konkordančnik in je koristen takrat , ko prevajalec sicer pozna pomen določenega pojma , a ga ob tem zanimajo druge posebnosti uporabe , ki iz slovarja ali jezikovnih priročnikov niso razvidne ( ta podatek je posebej koristen pri prevajanju v tuj jezik ) .
V SVEZ-ovi terminološki zbirki se občasno pod enim vpisom pojavlja več besed v enem ali drugem jeziku – taka sta npr. izraza facility ali sustainable ( v obeh primerih imamo za en izraz v angleščini kar štiri izraze v slovenščini ) .
Pri tem dostikrat ne gre za sinonime , temveč je vsak izraz primeren le v določenem sobesedilu .
Prevajalec , ki mu je neko področje novo , pa nima občutka za izbiro pravega izraza .
V slovarjih v knjižni obliki je ob večpomenskih izrazih navedenih nekaj praktičnih primerov , v našem slovarju pa si lahko pomagamo kar s korpusom : pri podrobnem izpisu podatkov o določenem izrazu v programu Evroterm je besede v angleščini in slovenščini možno klikniti ; ob tem dobimo na ekran rezultat iskanja dotične besede po celotnem korpusu , z navedbo področja , v katerem se je pojavila najdena beseda .
Najnovejše podatke s SVEZ-ovega lokalnega omrežja prenesemo na splet približno enkrat mesečno .
V terminološki bazi je bilo septembra 2002 več kot 26.000 vpisov , v korpusu pa okoli 4 milijone besed .
Ob takih in podobnih rešitvah se je seveda treba zavedati , da so te vredne toliko , kolikor jih ljudje uporabljajo v praksi .
Statistika dostopov kaže , da so spletne strani Evroterma ( med vsemi stranmi državnih ustanov ) , med tistimi , pri katerih število obiskov najhitreje raste : v zadnjem letu se je mesečno število dostopov povečalo približno za trikrat , skupno pa je bilo v zadnjem letu več kot 230.000 poizvedb v slovarju ( podrobnosti so na naslovu : http://sigov1.sigov.si/evroterm/stat.html ); na lestvici dostopov do vseh strani na strežniku www.gov.si ( podrobnosti so na : http://sigov1.sigov.si/stat.html ) pa je bila septembra 2002 najbolj obiskana stran Evroterma na 5. mestu ( pred njo so bile datoteke Ministrstva za zunanje zadeve in Državnega zbora ; vseh datotek na strežniku je okoli 50.000 ) .
K temu rezultatu je nekaj verjetno prispevalo tudi dejstvo , da je DZS leta 2002 umaknil spletno različico Velikega angleško-slovenskega slovarja in je zato Evroterm trenutno najobsežnejši spletni slovar , ki vključuje slovenščino .
Ti rezultati ponovno potrjujejo mnogokrat napisano in izrečeno trditev , da ljudje na spletu iščejo predvsem konkretno uporabno vsebino , ki je na spletnih straneh državnih ustanov , kljub množici podatkov in slik , žal , obupno primanjkuje .
Služba Vlade RS za evropske zadeve največje koristi pričakuje pri poenotenju terminologije , če bodo te podatke dosledno uporabljali njihovi zunanji sodelavci – prevajalci zakonodaje EU .
Uspešnost napovedovanja prozodičnih mej z arhitekturo klasifikacije napak samodejno-asociativnih nevronskih mrež .
Podatkovno vodeni pristopi omogočajo samodejno izločitev prozodične informacije iz primerne besedilne zbirke naravnega govora .
Če je napovedovanje simbolične prozodije uspešno , je to pomemben korak k izboljšanju naravnosti sintetiziranega govora .
Rezultati uspešnosti napovedovanja izpostavljajo učinkovitost metode označevanja besedilne zbirke , saj smo dosegli dobre rezultate napovedovanja prozodičnih mej že s prepolovljenim obsegom besedilne zbirke ( 600 povedi ) .
S strukturo AAC smo dosegli uspešnost napovedovanja 89,9 %.
Najmanjše enote v tej hierarhiji predstavljajo interne komponente zlogov ( npr. glasovi ) , največje enote pa so segmenti ( npr. stavki , povedi , odstavki ) ( Selkirk , 1984 , Hayes , 1995 ) .
Pojem simbolične prozodije povezujemo z nadsegmentnimi prozodičnimi lastnostmi .
Tekoči govor strukturirajo v prozodične fraze , jakostne izrazitosti v povedi in intonacijsko glavo .
Visokokakovostno sintezo govora pogojuje ustrezno modeliranje prozodije za določanje strukture prozodičnih fraz , identifikacijo jakostnih izrazitosti v frazah in določanje trajanja posameznih fonemov ( Vereecken et al. , 1998 ) .
Postopki podatkovno vodenih pristopov modeliranja simbolične prozodije , ki predstavljajo enega ključnih gradnikov sodobnih sistemov TTS , pogojujejo ustrezno besedilno zbirko .
Proces označevanja besedilne zbirke je izjemno obsežen in zahteva specifično ekspertno znanje označevalcev , hkrati pa pogojuje nekonsistentnost pri označevanju ( velikokrat je za označevanje obsežne besedilne zbirke potrebnih več ekspertov ) .
Nenazadnje je proces ročnega označevanja skrajno zamuden in drag , kar predstavlja oviro pri hitri adaptaciji sistema TTS na prozodične značilnosti govorca oz. specifičen jezik .
Povedi , ki obsegajo med 15 in 25 besed je izolirano interpretiral profesionalni radijski napovedovalec .
VERB za glagole 3.
PREP za predloge 9.
Za brano angleščino pokrivajo sintaktično-prozodične meje zgolj 65 % prozodičnih mej ( Flach , 1999 ) .
Nabor značnic za označevanje prozodičnih mej .
Kot poudarjeno frazo smo označili skupino besed , od katerih nosi vsaj ena primarni naglas ( normalno naglašena beseda ) .
Z B9 smo zaenkrat označili vse prozodične meje , ki niso označene z B3 , B2 ali B0 .
Besedilno zbirko smo označili v dveh korakih .
Za napovedovanje simbolične prozodije so razširjeni različni pristopi napovedovanja , npr. nevronske mreže , prikriti modeli Markova , binarna odločitvena drevesa ( Black , 1997 , Fackrell , 1999 ) .
V novejših poskusih napovedovanja prozodičnih značnic ( MUller , 2000 ) pa je zaznaven trend uporabe kompleksnejših struktur nevronskih mrež .
Težava , s katero se srečujemo pri uporabi večplastnih ( ena prikrita plast ) perceptronov ( MLP ) z velikimi dimenzijami vhodnih vektorjev , je neuravnotežen pretok informacije med povratnimi in vhodnimi podatki .
Z uporabljeno arhitekturo smo se skušali izogniti omenjenemu problemu tako , da smo proces učenja razčlenili na dva koraka — korak ločenega učenja modelov za posamezen razred ( vsaka značnica za označevanje prozodičnih mej predstavlja po en razred ) in korak klasifikacije verjetnosti iz rekonstrukcijske napake posameznih modelov ( Slika 1 ) .
Ustrezen izbor značilk lahko bistveno pripomore k uspešnosti napovedovanja ( Hirsberg , 1993 , Ostendorf , 1994 ) , vendar je le-ta pogojen z ustreznim lingvističnim ekspertnim znanjem .
Na tak način dobljena množica značilk pa je lahko odvisna tako od jezika in tudi od ciljne aplikacije .
Značilke , ki se razširjeno uporabljajo in so navidez neodvisne od jezika in ciljne aplikacije , so oblikoslovna zaporedja ( nizi besednih vrst ) , dobljena z oblikoslovno analizo povedi ( POS ) ( MUller , 2000 ) .
Vhodne vzorce smo razvrstili v simetrično strukturo s širino niza 9 ( Slika 2 ) .
Za obravnavano besedo ( za katero želimo napovedati prozodično mejo in se nahaja v sredini niza ) smo upoštevali levo in desno zaporedje besednih vrst dolžine 4.
Dolžina vhodnega vektorja je določena s širino niza in obsegom deklariranih besednih vrst .
Vrednosti za posamezno besedno vrsto smo zakodirali ternarno ( 1 aktiven vhod , 0 neveljaven vhod in — 1 neaktiven vhod ) .
Samodejno-asociativna nevronska mreža .
m-dimenzionalni vhodni vektor preslikamo v n-dimenzionalni vektor z , kjer je n << m. Nevronsko mrežo učimo s ciljem čim boljše adaptacije izhodnega vektorja x ' na vhodni vektor x. Podatki so v vmesni plasti nevronske mreže najprej predstavljeni zgoščeno preko matrične preslikave Z e Q [ P in nato razredčeno v izhodni plasti preko matrike Z e P [ Q ( Slika 3 , levo ) .
Učinkovitost strukture lahko izboljšamo z dodatno plastjo ( z ) , ki povezuje srednjo , zgoščevalno plast z izhodno ( Neuneier , 1998 ) .
Po prvem koraku učenja uporabimo za vsak posamezen razred ( stopnja 1 ) strukturo nevronskih mrež za ugotavljanje rekonstrukcijske napake eUHF ( Slika 3 , desno ) .
v izhodni plasti predstavljata vektor razdalje eUHF ( x ' - x ) , ki podaja podrobno informacijo o napaki , potrebni za ugotavljanje pripadnosti določenemu razredu prozodičnih značnic v koraku klasifikacije ( npr. B3 / B2 ) .
nevronskih mrež , ki ni tako dovzetna na asimetrijo vhodnih podatkov pri učenju ( PB : NB ) in tako tudi bistveno pripomore k splošni uspešnosti napovedovanja prozodičnih mej .
Prozodične meje , označene z B3 , smo definirali kot pomembnejše , prozodične meje B2 pa kot manj pomembne za označevanje intonacijsko šibkejše prozodične podstrukture v povedi ( razdelek 3.2.1 ) .
V poskusih napovedovanja prozodičnih mej , navedenih v nadaljevanju ( Tabela 1 ) , zaenkrat nismo obravnavali prozodičnih mej ločeno ( B2 B3 ) .
Z oznako PB smo označili vse pravilno napovedane prozodične meje , z NB smo označili vse nepravilno napovedane ( na mestih , kjer ni meje , je bila meja napovedana ) ( Tabela 1 ) .
Splošna pravilnost napovedovanja znaša 94,6 % , v najslabšem primeru , če ne bi uspeli napovedati nobene prozodične meje pravilno , pa bi ta rezultat znašal 82,6 %.
Če primerjamo uspešnost napovedovanja prozodičnih mej ( 89,9 % , Tabela 1 ) s predhodnimi poskusi napovedovanja ( Stergar , 2000 ) lahko izpostavimo bistven napredek v primerjavi s klasičnim napovedovanjem z MLP pri nespremenjeni neuspešnosti napovedovanja NB ( mest kjer prozodične meje ne nastopajo ) .
Rezultati uspešnosti razvrščanja prozodičnih mej z uporabo omenjene arhitekture so obetavni in kažejo na primernost strukture za napovedovanje prozodičnih mej .
Preslikava vhodne informacije v vhodno plast AAC .
Levo : samodejni asociator za ločeno učenje razredov ( stopnja 1 ) .
Matrika zamenjav prozodičnih mej .
Zasnova in izgradnja oblikoslovnega in glasoslovnega slovarja za slovenski knjižni jezik .
Ko bo zaključena , bosta oblikoslovni in glasoslovni slovar vsebovala popis vseh knjižnih oblik in najvažnejših oblikoslovnih lastnosti okoli 20.000 najpogostejših lem ter fonetične prepise vsake oblike .
Za izvedbo avtomatske prepoznave in sinteze govorjenega besedila so med drugim potrebni jezikovni viri , v katerih so popisani elementi posameznega jezika .
Za uspešno avtomatsko prepoznavo in sintezo govora bodo seveda potrebni še jezikovni viri , ki bodo predstavljali jezik na višjih ravneh , SImlex ( oblikoslovni slovar slovenskega knjižnega jezika ) in SIflex ( glasoslovni slovar slovenskega knjižnega jezika ) pa predstavljata dva od osnovnih virov , potrebnih za dosego ambiciozno zastavljenega cilja .
Izbor besed , s katerimi bi pokrili kar največji odstotek besedila , smo opravili na besedilih v elektronski obliki ( časopisni članki , dostopni teksti iz leposlovja ) , ki so skupaj štela okoli 31 milijonov besed .
Izmed teh smo izbrali 30.000 najpogostejših in te so bile osnovni nabor , na podlagi katerega smo ročno pripravili nabor besed v slovarski obliki za nadaljnjo obdelavo ( Rojc , Kačič , 2000 [ 2 ] ) .
Oblikoslovni in glasoslovni slovar sestavljamo s pomočjo sistema Morf ( Rojc , Kačič , 2000 [ 1 ] ) , ki omogoča v prvi fazi kar se da avtomatsko vnašanje oblik in variant ter določanje oblikoslovnih lastnosti , v drugi fazi pa naredi avtomatsko grafemsko-fonemsko pretvorbo , ki je osnova za glasoslovni slovar .
V obeh slovarjih ( glasoslovnem in oblikoslovnem ) so za vsako geslo izpisane vse knjižne oblike in vse knjižne variante naglasov in naglasnih mest , pogovorne variante , ki so označene v slovenskem pravopisu 2001 , ne pa tudi narečne ali izrazito starinske variante ali besede .
Pri vseh glagolih , ki imajo dvojni naglas v nedoločniku , je vpisana tudi neknjižna naglasna varianta deležnika na - l in označena s kvalifikatorjem " pogovorno " ( npr. za glagol stopiti so glagolske oblike , ki se tvorijo z deležnikom na - l , vpisane dvakrat : z oblikami stop / ila - i - e - o , tj. knjižno , in z oblikami st / opila - i - e - o z dodanim kvalifikatorjem " pogovorno " ( znak "/" označuje ostrivec ) ) .
Pri samostalnikih so dodane oblike za ženski ( diplomat – diplomatka ) oziroma moški spol ( devica – devičnik ) .
Oblikoslovni slovar smo začeli sestavljati leta 1999 in bo oktobra 2002 končan v prvi fazi .
Zakodiranje informacij in njihova priprava za oblikoslovno označevanje besedil bosta sledila v naslednji fazi .
V oblikoslovnem slovarju imajo vse vnesene besedne oblike označen jakostni naglas , tonemski naglas ni označen .
Pri vseh besednih oblikah pregibnih besednih vrst je označena končnica , za vsako lemo je posebej določeno , ali ima beseda predpono ali ne in tudi , če ima več predpon ( npr. po+vz+peti ) .
Osnovna kategorija je seveda besedna vrsta , ločimo pa naslednje : Samostalnik .
, IV. ) - živost / neživost je označena v tožilniku ednine samo pri samostalnikih , ki se sklanjajo po I. moški sklanjatvi - skloni in števila Pri tem so za vsak kriterij upoštevane vse variante , npr. beseda mercedes je vpisana kot občno in kot lastno ime , kot občno ime ima vneseni obliki za živost in neživost .
Le pri nekaterih zemljepisnih imenih nismo vpisali te variante , če je beseda običajno rabljena kot občno ime ( npr. beseda vas je vnesena samo kot občno ime , čeprav je lahko tudi lastno , tj. Vas pri Kočevju ) .
Če pa je lahko beseda v naboru samo zemljepisno lastno ime , npr. Moskva , je seveda tako označena .
To velja tudi za posamostaljene pridevnike srednjega spola : za te pravi slovnica iz leta 1976 ( Toporišič , 1976 ) , da se sklanjajo po III .
Ugotavljajo , da " / k / adar splošno govorimo o snoveh , jih rabimo le v ednini .
Kadar imamo v mislih določene dele kake snovi , moramo to posebej izraziti , n. pr .
" ( Bajec et al. , 1956 : 87 ) Dalje pravijo , da " / n / ekatera snovna imena rabimo tudi v množini , a v nekoliko drugačnem pomenu ; včasih mislimo na /.../ različne vrste ...
" , samoedninskih pa pri tem ne omenja .
Pri vrsti samostalniških besed pravi slovenska slovnica tako : " Občna imena delimo na števna in neštevna , npr. potok – lepota , železo , grmovje ( pojmovna , snovna , skupna ) .
Razlika se lepo vidi v množini : potoki = ' več kot dva potoka ' proti lepote = ' več vrst lepote ' .
Naslednje vprašanje je bilo , ali pri vseh teh vpisati vsa tri števila ( torej tudi pri samostalnikih , kot so divjad , drevje , zlato , kruh , usposobljenost , varnost ...
, ki jih tudi v korpusu nismo našli v nobenem sklonu dvojine ali množine ) .
Osnovni kriterij , kdaj vpisati vsa tri števila in kdaj samo ednino , je bil , ali se beseda pojavi v katerem sklonu dvojine ali množine v korpusu Nova beseda , deloma pa je bilo to prepuščeno tudi lastni presoji tistih , ki so sestavljali slovarja .
Z vprašanjem edninskosti samostalnikov smo se ukvarjali tudi pri lastnih imenih .
Stvarna in zemljepisna imena , ki se nanašajo samo na en predmet oziroma kraj / področje , se namreč običajno rabijo samo v ednini ( npr. Večer , Delo , Maribor , Koper ...
Zato smo sklenili , da v prvi fazi takšna stvarna in zemljepisna imena vpišemo kot edninska , tista , ki se lahko nanašajo na več krajev ali stvari ( npr. Bistrica ) , pa kot troštevilna .
Osebna lastna imena pa so vedno vpisana v vseh treh številih .
Za vsak pridevnik so enako kot pri samostalniku izpisani vsi skloni in vsa števila , in sicer za vse tri spole .
Ostale kategorije : - Pri pridevnikih , ki v moškem spolu ločijo določno in nedoločno obliko , sta vneseni obe in ustrezno označeni .
Tako smo se odločili v skladu z osnovnim namenom slovarja , tj. uporabo pri razvijanju jezikovnih tehnologij .
Drugostopenjska globinska pretvorba izkazuje vrstni pomen drugega pridevnika : --> kraja ure , ki sem jo imel od očeta / ki jo je dal oče meni .
" ( Vidovič Muha , 1981 : 27 ) Ob upoštevanju konteksta bi potemtakem morali za skoraj vsak pridevnik predvideti dve ali celo tri vrste .
Pri glagolih biti , imeti , hoteti sta označeni zanikana ( nisem , nimam , nočem ) in nezanikana ( sem , imam , hočem ) oblika .
Tiste oblike , ki jih posamezen glagol ne tvori , so označene z zvezdico .
Ta delitev je povzeta po slovenski slovnici ( Toporišič , 2000 ) , vendar je nekoliko poenostavljena .
Stopnjevanje je vpisano enako kot pri pridevnikih , torej obrazilno , če je tako določeno v pravopisu ( 2001 ) , in pri teh prislovih običajno tudi opisno ( npr. za prislov močno so vpisane oblike močneje , močnejše , najmočneje , najmočnejše , bolj močno , manj močno , najbolj močno , najmanj močno ) , samo opisno pa pri prislovih , za katere smo našli kakšno stopnjo primernika ali presežnika v korpusu Nova beseda .
Poleg prislovov , ki so bili v naboru , so vpisani tudi prislovi , nastali iz obravnavanih pridevnikov .
Ostale bomo avtomatsko generirali iz teh .
Pri svojilnih zaimkih ločimo število svojine ( npr. moj = ednina svojine ) , v tretji osebi ednine svojilnih zaimkov pa še spol svojine ( njegov = moški spol svojine ) .
Določena je tudi vrsta členka , in sicer po slovenski slovnici ( Toporišič , 2000 ) ločimo 14 vrst : členek čustvovanja , dodajalni , izvzemalni , mnenja / domneve , možnosti / verjetnosti , navezovalni , potrjevanja ali soglašanja , poudarni , presojevalni , spodbujevalni nikalni , spodbujevalni trdilni , vprašalni , členek zadržka ter zanikanja in nesoglašanja .
Vse te besede so vnesene še kot prislov ali katera druga najustreznejša besedna vrsta , saj kategorija povedkovnika v slovarje , ki so nastajali v okviru različnih mednarodnih projektov , običajno ni vključena .
Fonetični simboli so usklajeni z abecedo SAMPA ( Speech Assessment Methods Phonetic Alphabet ) za slovenski jezik ( Zemljak et al. ) .
Vsaka beseda je zlogovana .
Pri fonetičnem prepisu upoštevamo variantne izgovarjave posebnih glasovnih zvez ( po SP , paragrafi 688 do 704 ) , npr. če prideta skupaj črki t in s , sta predvidena izgovora z obema glasovoma in z zlitim c – recimo za besedo odsek O t - s \ E k in O - ts \ E k ) .
Upoštevani so premene po zvenečnosti ( npr. če se beseda konča na zveneči soglasnik , se izgovori nezveneči par , recimo samostalnik breg se izgovori b r / e : k ) in paragraf 656 v SP , po katerem je v nekaterih besedah ( označene so v SSKJ ) mogoč tudi izgovor z l poleg izgovora z U ( npr. kopalka se lahko izgovori kot k O - p / a : l - k a ali kot k O - p / a : U - k a ) .
V fazi oknjenja govornega signala uporabimo hibridno Hamming-kosinusno okno .
V naslednji fazi izvedemo mel frekvenčno analizo signala , nelinearno transformacijo izhodov filtrov ter zaznavanje govornih okvirjev .
V zadnjem koraku za vsako okno generiramo vektor značilk govornega signala , sestavljen iz 12 MFCC elementov ter logaritma energije .
Relativno izboljšanje uspešnosti razpoznavanja govora s predstavljenim algoritmom glede na referenčni postopek znaša 41.14 % za bazo Aurora 2 ter 45.06 % za baze Aurora 3.
Postopek izločanja značilk je zelo pomemben v procesu avtomatskega razpoznavanja govora in ima velik vpliv tudi na samo učinkovitost sistema , saj so vsi nadaljnji koraki v postopku avtomatskega razpoznavanja govora odvisni od načina ter kakovosti parametrizacije govornega signala .
Parametrizacija vhodnega govornega signala se lahko spreminja zaradi več dejavnikov .
) pri uporabi kanalov različnih prenosnih karakteristik ( na primer fiksna telefonija , ISDN , GSM …
Danes najpogostejše metode za parametrizacijo govora temeljijo na mel frekvenčnih kepstralnih koeficientih ( MFCC ) , ki izkoriščajo tudi lastnosti človekovega slušnega ter zaznavnega sistema .
Navadno uporabimo v fazi oknjenja govornega signala kot privzeto simetrično Hammingovo okno , vendar so eksperimentalni rezultati pokazali , da lahko izboljšanje rezultatov razpoznavanja dosežemo z uporabo predlaganega nesimetričnega hibridnega Hamming-kosinusnega okna .
Posebno pozornost smo v nadaljevanju posvetili zmanjšanju nivojev aditivnega in konvolucijskega šuma .
Zmanjšanje nivoja aditivnega šuma dosežemo z uporabo spektralnega odštevanja , pri katerem uporabimo metodo spektralnega glajenja kot način za ocenitev spektra šuma .
Sledi standardni postopek mel frekvenčnega filtriranja s pomočjo prekrivajočih se filtrov trikotne oblike .
Zaznavanje aktivnosti govora , ki temelji na magnitudah izhodov mel filtrov , je podrobneje opisano v poglavju 2.4.
Magnitude izhodov mel filtrov tistih okvirjev , ki so zaznani kot šumni , dušimo .
Proces filtriranja je podrobneje predstavljen v poglavju 2.6.
V zadnjem koraku generiramo za vsako okno vhodnega signala vektor značilk , sestavljen iz 12 MFCC koeficientov ter logaritma energije okvirja .
Diskusijo rezultatov bomo podali v poglavju 4 , zaključke pa bomo strnili v poglavju 5.
Vhodni šumni govorni signal y [ n ] razstavimo v prekrivajoče se okvirje dolžine 30 ms ( dolžina L = 240 otipkov pri frekvenci vzorčenja 8 kHz ) .
Vsak okvir pomnožimo s funkcijo okna .
Množenje okvirja s funkcijo okna v časovnem prostoru predstavlja v frekvenčnem prostoru konvolucijo med spektrom signala , zajetega v okvirju , in spektrom okna .
V predstavljenem postopku za izločanje značilk uporabimo hibridno Hamming-kosinusno okno ( ITU-T , 1996 ) .
V naslednjem koraku izvedemo postopek hitre Fourierjeve transformacije ( FFT ) stopnje N = 256 , pri čemer vhodno zaporedje y [ m , n ] dopolnimo z ustreznim številom otipkov z vrednostjo nič .
S pomočjo spektralnega odštevanja zmanjšamo nivo aditivnega šuma v vhodnem govornem signalu .
Glavna prednost omenjenega postopka pred osnovnim spektralnim odštevanjem ( Boll , 1979 ) je v tem , da za določitev spektra šuma ne potrebuje eksplicitnega zaznavanja aktivnosti govora , saj šum ocenjujemo na statističen način , in ne le v intervalih , kjer govor ni prisoten .
Dobra lastnost spektralnega odštevanja na osnovi glajenja spektra je tudi manjši nivo dodanega glasbenega šuma v izhodnem signalu | X [ m , k ] | , kar je sicer glavna slabost osnovnega spektralnega odštevanja ( Boll , 1979 ) .
Oceno kratkočasovne spektralne energije E f [ m ] izračunamo za vsak okvir po enačbi : /.../
Logaritmi magnitud mel-frekvenčnih kanalov f ln [ m , i ] okvirja m so dušeni , če je okvir m označen kot šumen .
Mel frekvenčna analiza fmi bank [ , ] Izračun kratkočasovne energije fmi ln [ , ] Nelinearna transformacija Em f [] Zaznavanje aktivnosti govora fmi [ , ] Cmj [ , ] RASTA procesiranje fmi RA STA [ , ] vhodni signal n : m k i j indeks otipka : : : : koeficienta /.../ indeks okvirja indeks frekvenčne komponente indeks mel filtra indeks kepstralnega /.../ kjer je faktor dušenja ψ = 0.03 in je določen izkustveno .
Normalizacija kanala s pomočjo RASTA procesiranja .
Stacionarna konvolucijska popačenja , ki nastanejo kot posledica prenosne karakteristike kanala , se v domeni logaritma energije spektra kažejo kot aditiven šum .
Zaradi uporabe diagonalne kovariančne matrike tako v procesu učenja akustičnih modelov kot tudi pri razpoznavanju je potrebno komponente signala f RASTA [ m , i ] , i = 1 , 2,... , StMel med sabo dekorelirati .
Dinamične značilke , sestavljene iz prvih in drugih odvodov statičnih značilk , računamo interno v procesu učenja akustičnih modelov oziroma pri razpoznavanju .
Za vrednotenje učinkovitosti predstavljenega algoritma smo uporabili govorne baze Aurora 2 in Aurora 3 ter orodje HTK za učenje in razpoznavanje s prikritimi modeli Markova .
Baza Aurora 2.
V bazi Aurora 2 je studijskim posnetkom iz TI-Digits kontrolirano dodanih osem vrst šumov iz različnih okolij pri razmerjih signal-šum ( SNR ) 20 dB , 15 dB , 10 dB , 5 dB , 0 dB in - 5dB .
Pri učenju s čistim govorom ( UčG ) so uporabljeni le posnetki , ki jim predhodno ni bil dodan šum , medtem ko pri učenju s šumnim govorom ( UŠG ) akustične modele učimo s signalom z dodanimi štirimi vrstami šumov pri različnih SNR .
Baza Aurora 2 ima definirane tri testne načine .
Pri Testu B so uporabljeni štirje drugačni šumi kot v primeru učenja s šumnim signalom , zato ta test najbolje simulira uporabo sistema v realnem šumnem okolju , saj je v tem primeru ujemanje učnega in testnega okolja akustičnih modelov slabo .
Govorni material v Testu C je dodatno filtriran tako , da čimbolj natančno ponazarja popačitve govornega signala , ki ga prenašamo preko prenosnega kanala ( na primer preko GSM omrežja ) .
Pri načinu DU je 70 % izgovarjav celotne baze uporabljenih za učenje , preostalih 30 % pa za testiranje .
V tem primeru učni nabor pokriva vso spremenljivost testnega okolja .
Učinkovitost predstavljenega algoritma primerjamo z rezultatom avtomatskega razpoznavanja govora s standardiziranim algoritmom za izločanje značilk , predstavljenim v ( ETSI ES 201 108 , 2000 ) .
Konfiguracija postopka učenja akustičnih modelov ter razpoznavanja je enaka kot v ( Hirsch in Pearce , 2000 ) .
Na ta način dosežemo primerljivost tudi z rezultati drugih raziskovalcev na področju robustne parametrizacije govora .
Uporabili smo torej orodje za delo s prikritimi modeli Markova HTK ( Young , 2001 ) , šestnajststanjske celobesedne akustične modele s kombinacijo treh Gaussovih funkcij gostote verjetnosti ter z diagonalno kovariančno matriko .
Tabela 1 vsebuje absolutne rezultate razpoznavanja govora , dosežene s predstavljenim algoritmom v obliki deleža napačno razpoznanih besed ( WER – " word error rate " ) , ter relativno izboljšanje rezultatov razpoznavanja glede na referenčni postopek za izločanje MFCC značilk govornega signala .
Razvidno je , da dobimo tako pri bazi Aurora 2 kot pri bazi Aurora 3 konstantno izboljšanje rezultatov razpoznavnja , kljub temu da so šumne izgovarjave pri bazi Aurora 2 umetno sprocesirane , medtem ko je baza Aurora 3 posneta v realnem šumnem okolju .
Predstavljeni postopek se izkaže še posebej učinkovit v primeru neujemanja učnega in testnega okolja , kar je razvidno iz visokega relativnega izboljšanja 62.02% v načinu UčG pri bazi Aurora 2 in 61.03 % v načinu VN pri bazi Aurora 3.
Eksperimenti z bazo Aurora 3 so tudi pokazali , da je uporaba postopka zaznavanja aktivnosti govora ter dušenja šumnih okvirjev zelo pomemben člen v algoritmu za robustno parametrizacijo govora , saj dobimo v nasprotnem primeru znatno večji delež napak zaradi vrinjanja besed .
Uspešnost uporabe RASTA procesiranja je razvidna iz relativno visokega izboljšanja rezultatov razpoznavanja ( 29.56 % relativno glede na onovni MFCC postopek ) pri načinu UŠG in Testu C baze Aurora 2.
V naslednjem koraku smo s pomočjo metode spektralnega odštevanja , pri kateri smo spekter šuma ocenjevali statistično , zmanjšali nivo aditivnega šuma .
Nato smo vpeljali postopek zaznavanja aktivnosti govora z računanjem razmerja signal-šum na osnovi logaritma magnitud izhodov filtrov ter izvedli dušenje magnitud v okvirjih , zaznanih kot šum ali tišina .
V zadnjem koraku smo generirali vektor značilk s 13 elementi - 12 mel frekvenčnih kepstralnih koeficientov ter logaritem energije okvirja .
Vrednotenje učinkovitosti postopka za izločanje smo izvedli z bazami Aurora 2 in Aurora 3 ob uporabi orodja HTK .
Skupno reltivno izboljšanje rezultatov razpoznavanja opisanega algoritma glede na referenčni MFCC postopek znaša 41.14 % pri bazi Aurora 2 in 45.06 % pri bazi Aurora 3.
Primerjava doseženih rezultatov razpoznavanja s predlaganim algoritmom glede na referenčni postopek za izločanje MFCC značilk na bazah Aurora 2 in Aurora 3.
Rezultati na bazi Aurora 2 Rezultati na bazah Aurora 3 Referenca - delež napačno razpoznanih besed Referenca - delež napačno razpoznanih besed Dosežen delež napačno razpoznanih besed Dosežen delež napačno razpoznanih besed Relativno izboljšanje Relativno izboljšanje .
Čeprav se v pričujočem članku omejujemo le na uporabo jezikovnega modela v razpoznavalniku govora , so modeli splošni in uporabni tudi v drugih sistemih , ki uporabljajo naravni jezik .
V preteklosti je bilo opravljenih veliko raziskav na področju modeliranja angleškega jezika .
Slovanski jeziki so bili dolgo zapostavljeni in so postali zanimivi šele v zadnjih nekaj letih ( Whittaker , 2000 ; Ircing , Psutka , 2001 ; Byrne et al. , 2001 ; Kneissler , Klakow , 2001 ) .
Čeprav bomo v nadaljevanju obravnavali slovenski jezik , se ne bomo poglabljali v njegove posebnosti .
Slovenski jezik ima bogat nabor končnic .
Odvisno je od oblikoslovnih značilnosti osnovne oblike besede in od oblikoslovnih značilnosti besed v soseščini ( tj. besed pred in za izbrano besedo v stavku ) ( Mladenić , 2001 ) .
Besedne oblike se , razen v končnicah , lahko razlikujejo tudi v zapisu osnove besede ( npr. premene morfemov ) .
Posledica so veliki slovarji besed , potrebni za enako pokritost besedišča , kot jo na primer dosežemo pri angleškem jeziku .
Žal velikosti slovarja ne moremo poljubno izbirati , saj jo običajno omejuje zasnova sistema , v našem primeru razpoznavalnika .
Posledica te omejitve je velik delež neznanih besed v novih besedilih ( ang. OOV rate ) ( Whittaker , 2000 ; Kaiser et al. , 2000 ) .
Vrstni red besed .
Domnevamo , da vrstni red besed v slovenskem jeziku ni tako pomemben kot pri angleškem jeziku .
Kot primer navedimo vseh šest permutacij besed preprostega stavka : Maja študira angleščino ( tabela 1 ) .
Drugi stavek je primer poudarjanja jedra povedi .
Tretji primer je običajni vprašalni stavek .
Peti stavek je primer preskoka ali anakoluta .
Šesti stavek je s stališča zbornega jezika nepravilen , vendar se v pogovornem jeziku lahko pojavi .
S spreminjanjem vrstega reda besed v slovenskem jeziku lahko spreminjamo pomen povedi .
Upravičeno lahko trdimo , da angleške besede vsebujejo manj slovnične informacije .
Le-ta je skrita v vrstnem redu besed , ki je v angleškem jeziku bolj določen .
Statistični modeli določajo ocene verjetnosti nizov besed .
Ker želimo jezikovni model vključiti v razpoznavalnik govora , bi potrebovali besedilno zbirko govorjenega jezika , ki pa v dovolj velikem obsegu žal ne obstaja .
Navedli smo dve osnovni značilnosti slovanskih jezikov , po katerih se ti razlikujejo od angleškega jezika in ki povzročata največ težav pri statističnem modeliranju .
Nedoločenost vrstnega reda besed pa žal še vedno predstavlja pereč problem .
Za reševanje tega problema bi potrebovali korpus besedil govorjenega jezika .
Verjetnost niza besed W = w /.../ ocenimo s trigramskim modelom , imenujmo ga model osnovam – končnica : /.../ označuje trigramski model osnov .
/.../ označuje trigramski model končnic .
Največja prednost modela osnova – končnica je modeliranje novih besednih oblik .
Z modelom lahko ocenimo verjetnost nove besedne oblike /.../ če je njena osnova v slovarju osnov ( s i 2 S ) in njena končnica v slovarju končnic ( e i 2 E ) .
Slovarju osnovnih enot bi bilo potrebno dodati le vse črke abecede .
Model osnova – končnica predpostavlja , da poznamo pravila razčlenjanja besed na osnove in končnice .
Osnovna enota modeliranja je lahko tudi razred besed .
Verjetnost niza besed /.../ ocenimo s trigramskim modelom z razredi : /.../ označuje trigramski model razredov in P /.../ model pripadnosti besed razredom .
Razrede tvorimo s podatkovno vodenim združevanjem besed , ki sestoji iz dveh korakov .
V drugem koraku besede korakoma zdužujemo v razrede , upoštevajoč vrednosti metrike podobnosti .
Drugo pravilo pa pravi , da sta besedi tem bolj podobni , čim manjša je Levenshteinova razdalja med njunima osnovama .
V vsakem koraku združimo tista dva razreda , ki sta najbolj podobna .
Podobnost med razredoma R /.../ definirajmo kot : /.../ označuje število besed v razredu R 1.
To je zbirka člankov dnevnega časopisa Večer iz obdobja od leta 1998 do 2000.
Jezikovni model smo preizkušali na testni množici stavkov govornega korpusa SNABI ( Kačič et al. , 2000 ) , saj je naš osnovni namen uporabiti jezikovni model pri razpoznavanju tekočega slovenskega govora .
Testna množice vsebuje 780 stavkov , ki imajo skupno 8,000 besed .
Uporabili smo odprti slovar , kar pomeni , da smo vse neznane besede preslikali v simbol < OOV > in ga modelirali enako kot ostale besede v slovarju .
Rezultati so zbrani v tabeli 2.
Prvi je slovnica jezika , drugi pa ( ne ) podobnost učnega in testnega korpusa .
Perpleksnost trigramskega modela je za 17% boljša od bigramskega , a je žal trigramski model prostorsko bistveno potratnejši od bigramskega .
Referenčni sistem z bigramskim modelom uporablja en prehod .
Drugi referenčni sistem je bistveno kompleksnejši , kar se odraža v času razpoznavanja , ki smo ga zapisali v odvisnosti od realnega časa ( ang. Real Time ) .
V drugem eksperimentu smo zgradili model osnova – končnica .
Slovar 20,000 besed smo razčlenili v 8497 različnih manjših enot ( 1661 končnic in 6836 osnov ) in jih uporabili kot slovar .
Velikost slovarja se je v primerjavi s slovarjem besed zmanjšala za 57% .
Rezultati modela osnova – končnica v dvoprehodnem razpoznavalniku so zbrani v tabeli 3.
Perpleksnosti modela osnova – končnica ne moremo primerjati z besednim modelom , saj uporabljamo različne osnovne enote modeliranja .
V razrede smo razvrščali le besede slovarja ( tj. 20,000 besed ) .
Ohranili smo le tiste pare besed , katerih podobnost ( glej enačbo ( 8 ) ) je bila večja kot 0:5.
V naslednjem koraku smo tvorili razrede s hierarhičnim združevanjem .
Združevanje smo prekinili , ko podobnosti med razredi niso presegale pragovne vrednosti 0:7.
Kot rezultat smo dobili 7 ;; 200 razredov .
Iz primerov je razvidna osnovna pomanjkljivost primerjanja le na osnovi ujemanja podnizov ( npr. besedi vzor in vzorci sta v istem razredu ) .
Eksperimenti so pokazali , da standardni besedni modeli pri modeliranju pregibnih jezikov ne dajejo zadovoljivih rezultatov .
Predlagali smo jezikovno neodvisne pristope reševanja problema pregibnosti jezika , ki so se pokazali kot uspešni pri modeliranju slovenskega jezika .
Z modelom osnova – končnica smo rešili problem velikega deleža neznanih besed v novih besedilih .
V prihodnosti bomo vse tri jezikovne modele vključili v razpoznavalnik tekočega govora , še prej pa bomo skušali izboljšati razrede tretjega modela .
Rezultati uporabe besednih modelov .
Uporaba algoritma ROVER pri razpoznavanju slovenskega govora .
Najprej predstavimo zasnovo samega algoritma ROVER , nato splošni postopek izgradnje sistema z velikim slovarjem besed za slovenski jezik .
Triprehodna strategija razpoznavanja je v primerjavi z dvoprehodno izboljšala rezultat razpoznavanja za 3% absolutno .
Uvod .
Na področju procesiranja ( razpoznavanja ) govora to pomeni uporabo vedno večjih akustičnih in jezikovnih modelov , povezanih s prefinjenimi dekodirnimi algoritmi v razpoznavalnikih z velikim slovarjem besed .
Možni so postali tudi alternativni pristopi , na primer kombiniranje izhodnih hipotez več raje manj učinkovitih , toda hitrejših razpoznavalnikov tekočega govora .
Najboljši tak pristop je predlagala govorna skupina z inštituta NIST ( National Institute of Standards and Technology ) leta 1997 in se imenuje ROVER ( Fiscus , 1997 ) .
Uspešno je bil uporabljen tudi pri vrednotenju baze Broadcast News , kjer se je napaka zmanjšala za 2,9 % absolutno ( Pallett et al. , 2000 ) .
Algoritem ROVER lahko uporabljamo nad množico hipotez ali nad n-najboljšimi ( n-best ) seznami posameznih razpoznavalnikov ( Mangu et al. , 1999 , Stolcke et al. , 1997 ) .
Slednji za minimizacijo napak na nivoju besed uporabljajo množice besednih mrež .
Prav tako se v ROVER vpeljujejo dodatne funkcije izgube ( loss functions ) , ki pripomorejo k še večjemu zmanjšanju napake ( Goel et al. , 2000 ) .
Eno od njih je , kako pomemben je vrstni red hipotez posameznih razpoznavalnikov pri postopku poravnave ali kolikšno je optimalno število uporabljenih razpoznavalnikov .
Jezikovni model vpliva na uporabo pravilnega konteksta v razpoznani hipotezi .
Zatem je na kratko opisan postopek izgradnje sistema za generiranje hipotez s posameznimi razpoznavalniki .
Prav tako je opisan algoritem dinamičnega programiranja , ki podpira vključevanje jezikovnih modelov .
Izvaja se v dveh korakih , kot je prikazano na sliki 1 : - Najprej se hipoteze , pridobljene iz posameznih razpoznavalnikov ( izhodne hipoteze ) , poravnajo v besedno mrežo .
Najprej se poravnata dve najboljši hipotezi .
K zgrajeni besedni mreži se nato poravna naslednja hipoteza in pri tem generira novo mrežo .
Zgrajena besedna mreža vsebuje vozlišča , v katerih se nahajajo samo različne besede .
Pri postopku poravnave pride tudi do primera pojavitve dveh enakih besed v vozlišču .
Glasovanje v posameznem vozlišču se vrši neodvisno od ostalih vozlišč in temelji na frekvenci pojavljanja besede v vozlišču ali na vrednosti zaupanja posamezne besede .
Uporaba jezikovnih modelov posredno zmanjšuje prepleksnost hipotez .
Za gradnjo akustičnih modelov smo uporabili govorno bazo SNABI , ki vključuje 52 govorcev ( Kačič et al. , 2000 ) .
Podbesedni jezikovnih modeli ( Maučec et al. , 2001 ) so bili grajeni s pomočjo korpusa besedil - člankov časopisa Večer od letnika 1998 do letnika 2000.
Akustični modeli so bili zgrajeni iz tristanjskih prikritih modelov Markova ( HMM ) z levo-desno topologijo .
Za določanje parametrov smo uporabili Baum-Welchev algoritem .
Končni akustični modeli so vsebovali 4090 stanjsko vezanih trifonskih modelov s 16 Gaussovimi porazdelitvami .
Slovar izgovorjav je bil sestavljen iz 20.000 najpogostejših besed v korpusu besedil - člankov časopisa Večer .
V testni množici je bilo 7 % besed , ki jih ni bilo v slovarju .
Pri generiranju izhodnih hipotez smo pri prvem prehodu uporabili bigramske jezikovne modele , pri drugem prehodu pa smo za razpoznavalnik Hvite uporabili trigramske ( oznaka HTK-3 ) in štirigramske ( oznaka HTK - 4 ) jezikovne modele .
Najboljši rezultat je dosegel razpoznavalnik Julius , zato je bila njegova izhodna hipoteza uporabljena kot prva vhodna hipoteza za sistem ROVER .
Na sliki 2 je prikazana napaka razpoznavanja v odvisnosti od kombinacije in števila uporabljenih razpoznavalnikov .
Uporaba frekvenčnega glasovanja nad kombinacijo vseh hipotez je sicer zmanjšala napako razpoznavanja ( 1.1 % absolutno ) , vendar je možno izboljšati razpoznavanje še za 14.2 %.
Zaradi tega smo poskušali zmanjšati napako razpoznavanja z vključitvijo drugih virov informacij , z uporabo jezikovnega modela .
V tem primeru ROVER vedno izbere besedo , ki je bila prva v vozlišču .
Pri poravnavi samo dveh hipotez bo v primeru dveh različnih besed v vozlišču zmeraj izbrana beseda iz prve vhodne hipoteze .
V tabeli 2 so zbrani podatki o številu možnih arbitražnih vezi , številu arbitražnih vezi in številu navadnih vezi pri različnih kombinacijah in različnem številu razpoznavalnikov .
Napaka razpoznavanja ob upoštevanju pravilne besede v primeru arbitražne vezi je prikazana na sliki 2.
Tako smo v eksperimentih uporabili kombinacijo frekvenčnega glasovanja in vrednosti zaupanja , v novem algoritmu pa kombinacijo frekvenčnega glasovanja in jezikovnega modela .
To je bil dodaten razlog za vključitev jezikovnega modela v proces odločanja oziroma izbire besede .
Prvi korak pri novem algoritmu je enak kot pri Roverju , torej poravnava vhodnih hipotez in gradnja besedne mreže .
Tudi v drugem koraku se izbira najboljša beseda v posameznem vozlišču , izbira besede pa se vrši po posebnem algoritmu , saj je za vključitev jezikovnega modela potrebno upoštevati še dodatne predhodne besede .
Slika 3 prikazuje primer besedne mreže , del grafa dinamičnega programiranja in pripadajočo izhodno hipotezo .
V drugem in tretjem vozlišču bi bili izbrani besedi nadarj in – eni .
Da se izniči vpliv dolžine na končni rezultat , je pri prehodu preko prazne besede k trenutnemu rezultatu dodana konstantna vrednost c. Vrednost se določi na neodvisni testni množici , tako da se doseže najmanjša napaka .
Zaradi praznih besed ni možno uporabiti standardnega algoritma dinamičnega programiranja , ker njihova prisotnost onemogoča lokalno n-gramsko ocenitev .
- V primeru , ko obstaja več vstopnih vozlišč v trenutno vozlišče , uporabi n-gramski ( v našem primeru trigramski ) jezikovni model .
Poišče najboljši rezultat ( enačba 4.1 ) posameznih besednih parov med trenutnimi vozlišči in obdrži samo najboljše vozlišče ( na primer v vozlišče z besednim parom [ - e , del ] pripnemo prejšnje vozlišče s parom [ nadaljnj , - e ] , povezave k ostalim parom [ nadarj , - e ] , [ zab , - e ] in [ na , - e ] pa opustimo ) .
- če trenutno vozlišče vsebuje prazno besedo , potem kopira vsa prejšnja vozlišča v nova vozlišča in namesto uporabe n-gramskega jezikovnega modela doda konstantno vrednost c. - Potuje v nasprotni smeri do pravilne hipoteze .
Ob velikem številu ponavljajočih se vozlišč s praznimi besedami je potreben dodaten procesorski čas za kopiranje in procesiranje dodatnih vozlišč .
Rezultati .
Ta metoda ni uporabna v praksi , ker je rezultat dosežen na podlagi pravilnih izhodnih hipotez .
Iz besedne mreže se izbere tista hipoteza , ki se najbolje prilega pravilni hipotezi .
Z naslednjo metodo smo za najboljšo hipotezo iz besedne mreže uporabili tisto , ki je imela najmanjšo perpleksnost .
Pri naslednji metodi smo uporabili jezikovni model samo v primeru pojavitve arbitražne vezi .
Zadnja metoda , z njo je bil dosežen najboljši rezultat , je upoštevala informacijo iz jezikovnega modela tudi pri navadnih vezeh .
Dodatna uporaba konteksta , pridobljenega iz jezikovnega modela , je zmanjšala napako za 3 % absolutno .
Napaka razpoznavanja pri različnih metodah glasovanja .
Prazni besedi je prirejen znak @.
sistem 1 Izbrana hipoteza Razp .
sistem N. Primerjava robustnosti metod določanja višine govora za različna šumna okolja in razmerja signal / šum .
Metode določanja višine govora dajejo v okoljih , ki vsebujejo šum , običajno slabše rezultate kot v čistih okoljih .
Metode za določanje višine govora so največkrat sestavljene iz treh delov : detekcije zvočnosti govora , ocenitve višine govora in korekcije višine govora .
Dve metodi ne uporabljata korekcijskega algoritma , tako smo lahko naredili primerjavo med algoritmi s korekcijo in tistimi brez nje .
Z uporabo korekcijskega algoritma se delovanje metode izboljša tako v primeru signala brez šuma kakor tudi v primeru signala z majhnim razmerjem signal / šum .
Metode za določanje višine govora se uporabljajo v sistemih za analiziranje prozodije govorca .
S pomočjo analize prozodije govorca lahko razvijemo aplikacijo za razpoznavanje emocij ali spola v realnem času .
Pri uporabi metod za določanje osnovne harmonske frekvence govora oziroma višine govora ( ang. » pitch « ) v aplikacijah , ki morajo delovati v realnem okolju moramo zagotoviti , da bo uporabljena metoda za določanje višine govora čim bolj neobčutljiva na šum iz okolice .
V literaturi pa nismo zasledili veliko primerjalnih raziskav , ki bi pokazale , katere metode so bolj in katere manj občutljive na šum in v kolikšni meri so posamezni algoritmi , ki so implementirani v metodah za določanje višine govora , občutljivi oziroma odporni na šum .
V tem prispevku smo se osredotočili na primerjavo metod za določanje višine govora .
V drugem razdelku bomo bolj podrobno predstavili posamezne metode za določanje višine govora , v tretjem bomo opisali izvedbo eksperimenta .
V četrtem poglavju bomo podali rezultate analize , v petem poglavju smo izvedli analizo rezultatov in v zadnjem podali zaključke .
Metode za določanje višine govora so pogosto sestavljene iz dveh ali treh algoritmov .
Algoritmi za detekcijo višine govora poskušajo določiti zvočne in nezvočne segmente v govoru .
Metode za določanje višine govora so ponavadi poimenovane po ocenitvenih algoritmih .
Kakor algoritmi za detekcijo tudi ti algoritmi delujejo v časovni ali v frekvenčni domeni , vendar so računsko v primerjavi z algoritmi za detekcijo časovno in prostorsko bolj zahtevni .
Algoritmi v postprocesiranju poskušajo popraviti napake določanja višine govora , ki nastanejo v fazi detekcije in ocenitve .
Avtokorelacijska metoda določanja višine govora je ena izmed najstarejših in verjetno največkrat uporabljena metoda do sedaj ( Martino , 1999 ) .
Avtokorelacijska metoda s sledenjem je že implementirana v orodju » Speech Filling System « ( SFS ) ( Speech Filing System Home Page , 2002 ) .
To metodo smo vključili v analizo , ker smo jo zaradi njene majhne računske zahtevnosti že uporabljali v sistemu za razpoznavanje emocij .
Avtokorelacijski algoritmi določajo višino govora v časovni domeni .
Metoda je dobro znana in velikokrat uporabljena ter v primerjavi z avtokorelacijsko metodo bolj natančna .
Za povečanje natančnosti smo v postprocesiranju dodali še sledenje .
Zaradi takšnega načina sledenja je ta metoda primerna za uporabo v sistemih , ki delujejo v realnem času .
Metoda subharmonične seštevanja ( SHS ) ( Hermes , 1988 ) je edina izmed izbranih metod za določanje višine govora , ki deluje v frekvenčni domeni .
Višino govora izračuna tudi v primerih , ko osnovna frekvenca govora ni prisotna v signalu .
Telefonski govor je frekvenčno omejen na področje med 300 in 3400 Hz. Tako v signalu največkrat ni prisotne osnovne harmonske frekvence govora .
Algoritem subharmoničnega seštevanja določi višino govora iz višjih harmonikov .
Uporabljena metoda za določanje višine govora SHS ne uporablja nobenega algoritma v postprocesiranju .
Kot zadnjo smo uporabili znano metodo spremenljive periode .
Dinamično časovno sledenje se izvaja v razponu od začetka do konca vsakega zvočnega segmenta .
Zato ta metoda ni najbolj primerna za delovanje v realnem času , saj v danem trenutku ne poznamo vrednosti višin govora , ki se bodo pojavile .
Rezultate delovanja v šumnih okoljih smo primerjali z rezultati , dobljenimi iz referenčnih podatkov .
V bazi Interface sta govorni signal in signal laringografa shranjena v isti datoteki na dveh kanalih .
Iz signala laringografa smo določili referenčne podatke , ki so služili za primerjavo .
Višino govora smo izračunali s pomočjo orodja SFS , ki vsebuje modul za določitev višine govora iz signala laringografa .
Zato smo morali šumno okolje simulirati .
Poimenovanje šumov smo povzeli po zvočnih okoljih , ki so jih uporabljali v projektu AURORA 2.
Testni nabor je vseboval 100 posnetkov govornega dela baze .
Izbrani nabor vsebuje govor dveh govorcev : 50 stavkov govora moškega govorca in 50 stavkov ženske govorke .
Tem 100 stavkom smo dodali vseh 8 šumov v vseh 6 razmerjih signal / šum .
Napaki zvočnosti in nezvočnosti ocenjujeta delovanje algoritma za detekcijo .
Napaka nezvočnosti pa predstavlja število otipkov nezvočnega segmenta , ki so nezvočni in so bili detektirani kot zvočni .
Absolutna razlika standardne deviacije je definirana kot absolutna razlika med standardno deviacijo višine v referenci in standardno deviacijo višine v testnih posnetkih .
Nadalje smo z vsemi metodami za določanje višine govora izračunali višine za vse vrste šuma v vseh razmerjih signal / šum .
Rezultate smo ocenili z vsemi metodami vrednotenja in tako dobili množico rezultatov za analizo .
Ker smo želeli analizirati rezultate različnih metod glede na velikost šuma in ne na tip šuma , smo vse rezultate povprečili na vse vrste šuma .
Odvisnost rezultatov različnih metod od razmerja med signalom in šumom prikazuje tabela 2.
Relativno poslabšanje v odvisnosti od razmerja signal / šum prikazuje slika 1.
Rezultati , dobljeni iz napake zvočnosti v povezavi z napako nezvočnosti , kažejo odvisnost posameznih metod od razmerja signal / šum .
Ti napaki se navezujeta na točnost delovanja detekcijskega algoritma .
Slika 2 prikazuje napako zvočnosti in slika 3 napako nezvočnosti .
Metode za določanje višine govora se med seboj razlikujejo po uspešnosti že pri analizi iz čistih posnetkov .
Pri čistih posnetkih sta se pokazali kot najboljši metodi AKSFS in SPDŠC .
Izračunana vrednost višine je za AKSFS večkrat določena previsoko kot prenizko .
Absolutna razlika srednje vrednosti višine je le za odstotek večja kot pri metodi AKSFS , absolutna razlika v standardni deviaciji pa je manjša kot pri drugih metodah .
Kar 30,86 % zvočnih segmentov je detekcijski algoritem v metodi SHS označil kot nezvočne segmente .
Algoritem za ocenjevanje ocenjuje višino govora pogosteje prenizko kot previsoko .
Vse napake metode SPDčS so približno v istem razredu kot pri metodi AKSFS , razen absolutne razlike standardne deviacije , ki je dvakrat večja pri metodi SPDčS .
Tabela 2 in slika 1 prikazujeta natančnost določanja višine govora v odvisnosti od razmerja singal / šuma .
Metoda SHS je najbolj občutljiva na šum .
Krivulja na sliki 1 je za metodo SHS najbolj strma .
Pri razmerju signal / šum 5 dB znaša absolutna razlika srednje vrednosti za metodo SHS že kar 37,47 Hz. Nekoliko boljši rezultat je za metodo AKSFS .
Pri razmerju signal / šum 5 dB znaša absolutna razlika srednje vrednosti višine 31,92 Hz , krivulja relativnega poslabšanja pa je veliko nižja kot pri metodi SHS .
Vrednost absolutne razlike srednje vrednosti višine govora pri čistem signalu je za metodo AKSFS višja kot za metodo SHS .
Najboljše rezultate smo dosegli z metodama , ki delujeta na osnovi algoritma spremenljive periode .
Metoda SP ima nižjo krivuljo kot metoda SPDčS , saj je absolutna razlika srednje vrednosti za čiste posnetke z metodo SPDčS osemkrat nižja od absolutne razlike srednje vrednosti , dobljene z metodo SP. Glede na kriterij absolutne razlike srednje vrednosti višine govora bi lahko zadovoljivo uporabili metodo SP v šumnem okolju , v katerem znaša razmerje signal / šum 5 dB , metodo SPDčS pa celo v šumnem okolju z razmerjem signal / šum 0 dB .
Sliki 2 in 3 prikazujeta uspešnost delovanja algoritmov za detekcijo višine govora pri različnih razmerjih signal / šum .
Metoda AK že pri 5 dB razmerja signal / šum detektira več kot 90 % otipkov nezvočnih segmentov kot zvočne , metoda AKSFS pa doseže enak rezultat pri 0 dB razmerja signal / šum ( slika 3 ) .
Nasprotno metoda SP detektira zvočni govor v šumnem okolju kot šum , in ne kot zvočni segment govora , saj znaša napaka zvočnosti čez 90 % pri razmerju signal / šum 0 dB ( slika 2 ) .
SPDčS je edina metoda , pri kateri se v odvisnosti od razmerja signal / šum povečujeta napaki zvočnosti in nezvočnosti .
Šum vpliva na algoritem detekcije v metodi SPDčS tako , da nepravilno določi približno 60 % otipkov v zvočnem segmentu in približno 40 % odtipkov v nezvočnem segmentu govora .
Šum vpliva tudi na zanesljivost delovanja posameznih metod .
Kot najmanj občutljiva se je izkazala metoda SPDčS , ki ima najmanjšo absolutno razliko srednje vrednosti višine govora pri vseh izbranih razmerjih signal / šum .
Po naši oceni bi jo lahko uporabili tudi pri 0 dB razmerja signal / šum , kjer znaša absolutna razlika srednje vrednosti višine govora 7,73 Hz. Tudi vrednosti ostalih metod vrednotenja za metodo SPDčS so nizke , v večini primerov so najnižje .
SP metoda ima dovolj malo časovno in računsko zahtevnost , saj je potrebno poleg računanja višine zagotoviti nekaj računskega časa in prostora za ostale metode in algoritme v končni aplikaciji .
Absolutna razlika srednje vrednosti višine , povprečena na vse vrste šuma , izražena v Hz v odvisnosti od razmerja signal / šum ( SNR ) .
Relativno poslabšanje absolutne razlike srednje vrednosti višine v odvisnosti od razmerja signal / šum ( SNR ) za vseh pet metod določanja višine .
Napaka zvočnosti za vsako metodo določanja višine govora , povprečena na vse vrste šuma , v odvisnosti od razmerja signal / šum , izražena v odstotkih .
Napaka nezvočnosti za vsako metodo določanja višine govora , povprečena na vse vrste šuma , v odvisnosti od razmerja signal / šum , izražena v odstotkih .
V članku predstavljamo govorno voden informacijski portal LentInfo , ki je prva širšemu krogu uporabnikov predstavljena aplikacija , ki jo je možno voditi z uporabo slovenskega govora .
Portal uporabnikom preko telefona posreduje informacije o programu Festivala Lent , ki se vsako leto dogaja v Mariboru .
Prvi modul je razpoznavalnik govora , ki predstavlja vhodni vmesnik .
Krmilnik dialoga je zasnovan univerzalno in je implementiran s končnimi avtomati .
Izhodni vmesnik , ki uporabniku posreduje informacijo , je modul za generiranje sporočil .
V sodelovanju s Telekomom Slovenije in Narodnim domom Maribor smo pilotski projekt LentInfo predstavili širši javnosti v času trajanja Festivala Lent 2002.
V 16 dneh trajanja festivala smo zabeležili 1352 klicev .
Uporabnike sistema smo razdelili glede na različne kriterije , ki so povezani z akustičnim okoljem , iz katerega je potekal posamezen klic ( vrsta telefona , tonsko izbiranje , čas klica ) .
Uvod .
Razvoj jezikovnih tehnologij je tudi v Sloveniji napredoval do te mere , da omogoča izdelavo aplikacij za slovenski jezik , ki so namenjene tudi širšemu krogu uporabnikov .
Članek predstavlja aplikacijo LentInfo - prvo govorno vodeno aplikacijo v slovenskem prostoru , do katere je lahko dostopal tudi širši krog uporabnikov .
V času trajanja festivala se na desetih prizoriščih zvrsti več kot 400 različnih prireditev ( koncerti , gledališke predstave , športne prireditve , ...
Zasnova sistema LentInfo je bila izdelana in prvič preizkušena na omejenem krogu uporabnikov v času Festivala Lent 2001 ( Žgank in Rojc , 2001 ) .
Izsledki tega testiranja so bili uporabljeni kot osnova za izboljšave sistema , ki so omogočile uporabo sistema za širši krog uporabnikov v realnem okolju .
Akustično okolje , iz katerega lahko kličejo uporabniki , predstavlja zaradi narave aplikacije ( šum , govor iz ozadja , glasba , ...
Potek letošnjega terenskega delovanja sistema je opisan v tretjem poglavju .
Zaključek je podan v petem poglavju .
To pomeni , da sistem usmerja uporabnika po strukturi dialoga .
Pričakovani odziv uporabnika so izolirane besede , s katerimi lahko izbira med ponujenimi možnostmi v posameznem vozlišču dialoga .
Ker lahko pride do napak pri razpoznavanju govora , smo v scenarij dialoga dodali tudi eksplicitno potrjevanje izbrane možnosti .
Da bi zagotovili dostop do želene informacije neodvisno od uspešnosti avtomatskega razpoznavanja govora , ki je lahko nekoliko slabše predvsem v primerih , ko uporabniki kličejo iz hrupnega okolja ( s samih prizorišč festivala ) , smo portalu LentInfo dodali možnost tonskega izbiranja ( DTMF ) .
Preklop z govornega izbiranja na tonsko izbiranje se je izvršil avtomatično v primeru , kadar je sistem med pozdravnim sistemskim sporočilom izmeril premočan vhodni signal .
Tonski Slika 1 : Zgradba aplikacije LentInfo način izbiranja ima v primerjavi z govornim načinom izbiranja dve večji slabosti .
Prva je , da tonsko izbiranje človeku predstavlja manj naraven način komuniciranja kot govor .
Zgradba samega sistema je modularna ( slika 1 ) in jo tvorijo trije osnovni moduli : razpoznavalnik govora , krmilnik dialoga , generator sporočil .
Struktura dialoga je tisti del sistema , ki je neposredno vezan na ciljno aplikacijo .
Struktura dialoga v portalu LentInfo je prikazana na sliki 2.
Če uporabnik izbere tretjo možnost , ga sistem povpraša še po imenu dneva ( 10 besed v slovarju ) .
Struktura dialoga omogoča uporabniku , da se vrne na poljuben nivo v dialogu ( 6 besed v slovarju ) in povpraša še o dogajanjih na drugih odrih istega in / ali drugega dne .
Odločilen vpliv pri tem imajo akustični modeli , s katerimi je modeliran govor .
Glede na namen uporabe portala smo se odločili , da bomo akustične modele tvorili s pomočjo slovenske baze izgovarjav SpeechDat ( II ) 1000 FDB ( Höge , et al , 1997 ; Kaiser in Kačič , 1998 ) .
Akustični modeli , ki smo jih uporabili , so bili generirani s pomočjo skripte refrec0.96 ( Refrec homepage , 2002 ) , ki je bila razvita v okviru projekta COST 249 " SpeechDat task force " ( Johansen , et al. , 2000 ; Lindberg , et al. , 2000 ) .
V procesu avtomatskega razpoznavanja govora ima postopek izločanja značilk zelo velik vpliv na samo učinkovitost sistema avtomatskega razpoznavanja govora , saj so vsi nadaljnji postopki odvisni od načina ter kakovosti parametrizacije govornega signala ( Young , 1996 ) .
Vhodni signal razdelimo na prekrivajoče se okvirje dolžine 25 ms .
Nad vsakim okvirjem izvedemo funkcijo predpoudarjanja , zatem pa vsak okvir pomnožimo s funkcijo Hammingovega okna .
V naslednjem koraku izračunamo 24 polovično prekrivajočih se filtrov trikotne oblike , katerih centralne frekvence so ekvidistančno razporejene po mel frekvenčni skali .
Nad izhodi vsakega izmed filtrov opravimo nelinearno transformacijo logaritmiranja .
Zaradi uporabe diagonalne kovariančne matrike tako v procesu učenja akustičnih modelov kot tudi v procesu razpoznavanja govora je potrebno dobljene komponente signala med seboj dekorelirati .
Kot rezultat dobimo 24 mel frekvenčnih kepstralnih koeficientov .
Končni akustični modeli so vsebovali 32 Gaussovih porazdelitev verjetnosti na posamezno stanje .
Da bi lahko še pred samim delovanjem v realnem okolju ovrednotili dobljene akustične modele , smo izvedli testiranje z razpoznavanjem govora na testnem naboru baze SpeechDat ( II ) ( van den Heuvel , et al. , 2001 ) , ki vsebuje izgovarjave 200 govorcev .
Rezultati razpoznavanja govora na zgoraj naštetih kategorijah stavkov iz testnega nabora so predstavljeni v tabeli 1.
Primerjava dobljenih rezultatov s predhodno dobljenimi rezultati ( Refrec homepage , 2002 ) je pokazala , da je drugačen način izločanja značilk izboljšal rezultate razpoznavanja govora .
Akustični modeli so bili po testiranju vključeni v krmilnik dialoga , kjer so delovali v razpoznavalniku govora SPREAD ( Rojc , et al. , 1998 ) , ki je bil razvit na FERI .
Razpoznavalnik govora SPREAD deluje na osnovi Viterbijevega algoritma .
Krmilnik dialoga predstavlja glavni nadzorni modul v aplikaciji LentInfo in obenem povezuje vhodni in izhodni del sistema .
Krmilnik dialoga je zasnovan jezikovno neodvisno , kar nam omogoča tudi izdelavo aplikacij za tuje jezike .
Krmilnik dialoga deluje na osnovi končnega avtomata , kar razvijalcu omogoča veliko svobode pri zasnovi aplikacije in olajša testiranje scenarija dialoga .
Potek dialoga je s posebno sintakso opisan v konfiguracijski datoteki .
Poseben grafični vmesnik je bil razvit tudi za spremljanje delovanja in nadzor nad krmilnikom dialoga .
Glavna prednost posnetih sporočil pred uporabo sintetizatorja govora je boljša razumljivosti branih posnetkov , saj se v sporočilih s sporedom velikokrat pojavljajo neslovenske besede , ki predstavljajo težavo za sintetizator govora .
Takšna rešitev je omogočala sočasno posredovanje informacij trem uporabnikom , prav tako pa je zagotavljala nemoteno delovanje sistema ob morebitnem izpadu katerega izmed osebnih računalnikov .
LentInfo je brez prekinitev deloval celoten čas trajanja Festivala Lent ( 1352 klicev ) , po koncu festivala pa smo delovanje sistema v demonstracijske namene podaljšali še za 14 dni in v tem časovnem obdobju sprejeli še nekaj čez 100 klicev .
V nadaljevanju bomo predstavili predhodno analizo rezultatov delovanja sistema .
Iz analize smo že predhodno izločili klice vseh oseb , ki so sodelovale pri izvedbi pilotskega projekta LentInfo .
V tem časovnem obdobju je portal LentInfo sprejel 1352 klicev .
Upoštevati je potrebno tudi veliko razširjenost mobilnih telefonov , saj je v letu 2001 imelo svoj mobilni telefon približno 67% prebivalcev Slovenije ( Stergar , A. , 2002 ; www.ris.org , 2001 ) .
Glede na visoko razmerje uporabe mobilnih telefonov se je izkazala za pravilno uporaba robustnejšega modula za izločanje značilk .
V celotnem naboru klicev je bilo samo 135 takšnih , ki so uporabili tonsko izbiranje ( avtomatsko ali na željo uporabnika ) .
Na osnovi nizkega deleža klicev s tonskim izbiranjem je možno sklepati , da je govorno izbiranje uporabnikom bližje kot tonsko izbiranje in da je bilo razpoznavanje govora dovolj učinkovito .
Prvi vrh v številu klicev na dan je bil 24.6.2002 , ko je bila informacija o portalu objavljena v časopisu Večer .
Ta dan so informacijo o portalu LentInfo objavili na več radijskih postajah .
Zanimivo je , da je nekaj uporabnikov klicalo sistem tudi v zgodnjih jutranjih urah , ko na festivalu ni bilo dogajanja .
Slika 6 : Ponovitve klicev na portal LentInfo z iste telefonske številke V zadnjem delu analize smo preverili , kolikokrat je bilo klicano s posameznih telefonskih številk .
Iz te analize smo izločili klice iz telefonskih govorilnic in s skritih telefonskih številk .
Rezultat te analize je predstavljen na sliki 6.
Največje število klicev z ene telefonske številke je bilo 53 , od tega samo en klic z uporabo tonskega izbiranja .
Uspešnost razpoznavanja besed za prvih 20 klicev na enega izmed računalnikov v sistemu LentInfo je bila 86% .
V času pisanja članka ( julij 2002 ) je bila opravljena le predhodna analiza rezultatov , ki je pokazala , da je delovanje takšnega sistema za slovenski jezik v realnem okolju s širokim krogom uporabnikov izvedljivo .
Podrobnejša analiza uspešnosti posredovanja informacij uporabnikom bo opravljena v prihodnosti , ugotovljeni rezultati analize pa predstavljeni tudi na sami konferenci .
Porazdelitev klicev glede na uro , ob kateri je bil klic opravljen .
Domača stran festivala : http://lent.slovenija.net .
Avtomatsko luščenje izrazja iz slovensko-angleških vzporednih besedil .
Preko strokovnega izrazja se prenaša in organizira znanje , zato je terminologija tesno povezana z ontološkim modeliranjem področij in izkopavanjem podatkov in znanja , hkrati pa je avtomatsko razpoznavanje in obteževanje terminov v dokumentih neizogiben korak pri sodobnih iskalnikih podatkov .
V dvojezičnem kontekstu , ko izrazje luščimo iz vzporednih ali primerljivih korpusov in obenem ugotavljamo tudi prevodno ustreznost , predstavljajo avtomatske metode obetavno podporo prevajalskemu delu , ko lahko za potrebe določenega projekta iz obstoječih prevodov izdelamo področni terminološki glosar .
Za ugotavljanje prevodne ustreznosti izrazov v dveh jezikih potrebujemo še dvojezični leksikon , ki ga je mogoče izdelati z orodjem za avtomatsko poravnavo besed ali fraz .
Za slovenski jezik je bilo sicer narejenega že marsikaj , kar nenazadnje dokazuje tudi pričujoči zbornik in njegovi predhodniki , a ne glede na to nam še vedno manjkajo prosto dostopna orodja za skoraj vse osnovne jezikovnotehnološke postopke .
Prva različica deluje na podlagi minimalne jezikovne predobdelave in temelji na zgolj statističnem luščenju večbesednih izrazov , druga pa uporablja oblikoskladenjsko označena besedila .
Prispevek opisuje zgradbo sistema za luščenje izrazja iz vzporednih korpusov .
Tako 4. razdelek v prvem delu govori o merjenju terminološkosti in načinih , kako ločevati strokovne izraze od nestrokovnih , v drugem se posveča metodam za iskanje kolokacij in večbesednih enot , v tretjem pa obravnava reševanje problema gnezdenih terminov .
V raziskavi je bil uporabljen vzporedni slovensko-angleški korpus strokovnih besedil ( TRANS ) , ki je nastal v okviru študentskega projekta na Oddelku za prevajalstvo v študijskem letu 2001/2002.
Za razvoj in preskušanje metod luščenja izrazja sta bila izbrana dva podkorpusa , in sicer zbirka besedil s področja jedrske tehnike v obsegu 25.000 pojavnic in zbirka pravno-gospodarskih besedil , tj. zakonov , ki urejajo gospodarstvo in finance , v obsegu 166.000 pojavnic .
Za učni korpus je bil uporabljen ročno označeni izsek iz korpusa ELAN , nekatere ponavljajoče se napake pa smo popravili še naknadno .
Ker je lematizacija v našem primeru pomembna predvsem zaradi bolj natančnega merjenja pogostosti in sopojavnosti , je bistveno , da se besedne oblike zlijejo v skupno lemo , tudi če je ta napačna .
Za obdelavo angleških besedil je bilo uporabljeno orodje ShProt , katerega uporabo je prijazno dovolil institut DFKI GmbH .
Zapis označenih besedil .
Označena vzporedna besedila so zapisana v obliki XML .
Vsak segment nato vsebuje pojavnice , pri katerih so oblikoskladenjski podatki zapisani kot atributi .
K vsaki prevodni enoti se doda element < terms > , ki vsebuje najdene slovenske in angleške termine ter predloge ustreznic , k vsakemu od teh pa pripišemo še utež oziroma koeficient zaupanja .
Primer označenega besedila z izrazi kaže slika 2.
Opisani sistem pri zadnji točki nudi obe izhodni možnosti .
Strokovno izrazje navadno luščimo iz korpusa besedil določene stroke .
Za strokovni jezik pri tem predpostavljamo , da uporablja bodisi lastne izraze , ki jih v besedilih splošnega jezika ne najdemo , bodisi pomensko osredotočene ali premaknjene izraze splošnega besedišča .
Na področju priklica informacij je že dlje v uporabi drug način merjenja ključnosti besed , ki namesto na pojmu korpusne pogostosti temelji na zbirki dokumentov .
Seveda lahko tf.idf računamo tudi za kolokacije , vendar nam pri tem utegnejo štrene mešati različice terminov ( npr. reaktorsko hladivo in reaktorsko hladilo ) , ki neustrezno nižajo pogostosti kolokacij .
Iskanje večbesednih enot .
V strokovnih jezikih so termini večinoma sestavljeni iz več besed , zato je prepoznavanje večbesednih enot osrednjega pomena .
Prednosti statističnega pristopa sta predvsem jezikovna neodvisnost in enostavnost glede potrebnih ravni predanalize , glavni pomanjkljivosti pa predvsem , da je rezultate statistično predlaganih kolokacij navadno treba pošteno presejati , da postanejo uporabni , in seveda da statistične metode odkrivajo zgolj tiste večbesedne enote , ki se v korpusu pojavijo večkrat .
Pristop z vzorci tega problema nima , ima pa še to prednost , da jezikoslovno motivirani pristopi na splošno omogočajo boljše reševanje gnezdenja in variabilnosti .
Reševanje gnezdenja je opisano v razdelku 4.3.
Model statističnega sistema kaže Slika 1.
V jezikoslovno bogatejši različici uporabljamo vzorce oziroma zaporedja oblikoskladenjskih oznak , na primer pridevnik + samostalnik , kar se ujema s termini kot tlačna črpalka , regulacijski ventil , jedrska elektrarna .
Žal se pri vzorcih razkrije kakovost označevanja , saj se morebitne napake pokažejo bodisi v obliki nepravih zvez bodisi v obliki nižjega priklica .
Predvsem statistična metoda proizvede veliko gnezdenih kandidatov , ki jih zgolj s sejanjem na podlagi terminološke relevantnosti ne moremo izločiti .
Ta metoda deluje dobro , vendar je težko določiti mejno vrednost LL tako , da ne bi izgubili preveč pravilnih terminov .
Metoda temelji na predpostavki , da je za vsako besedo v korpusu iz prevodnih segmentov , kjer se pojavlja , mogoče izračunati najverjetnejšo ustreznico .
Besedna poravnava se vrši z algoritmom IPFP , program pa za vsako besedo v korpusu predlaga eno ali več ustreznic skupaj z verjetnostmi prevoda .
Rezultate besedne poravnave lahko izboljšamo , če iz korpusa prej odstranimo prazne besede .
V jezikovnih tehnologijah se sorodnice izkorišča predvsem za izboljšanje stavčne poravnave ( Simard in dr. 1992 ) , zanimive pa so tudi s prevodoslovnega vidika ( Vintar / Hansen 2002 ) .
Pri enobesednih terminih so ustreznice seveda vključene že v dvojezični leksikon , problem predstavljajo le primeri , kjer se enobesedni termin prevede v večbesednega ali obratno ( npr. uparjalnik / steam generator ) .
Če je večbesedni termin povsem ustaljen , je ta pojav mogoče ugotoviti na ravni besedne poravnave , saj dobimo za uparjalnik ustreznici steam in generator , vsako z verjetnostjo 0,50.
Ta metoda je zanesljiva le pri pogostih terminih in le , če smo za izdelavo dvojezičnega leksikona uporabili lematizirani korpus .
Ta način omogoča dokaj precizno ugotavljanje parov ustreznic , njegova prednost pa je , da razmeroma dobro deluje tudi z nelematiziranimi termini .
Tabela 2 kaže primer , kjer se Term .
Drug način izpisa označuje izraze v besedilu v zapisu XML .
Tu označujemo izraze za vsak jezik posebej , nato pa še ustreznice , pri čemer so poleg enojezičnih terminov navedeni še terminološka relevantnost ter indeksi pojavnic v besedilu , kjer je bil izraz odkrit , pri ustreznicah pa navedemo stopnjo ustrezanja .
Vprašanje , kako vrednotiti rezultate sistema za avtomatsko luščenje izrazja , še zdaleč ni enostavno .
Prva nejasnost je že sama definicija termina , saj se tu srečujemo z zelo različnimi pogledi in praksami , ki so tesno povezane s področjem aplikacije sistema ter potrebami uporabnikov .
Pokazalo se je , da se je število označenih terminov med skupinami in znotraj skupin dramatično razlikovalo , predvsem pa je bil presek vseh štirih skupin – se pravi odstotek terminov , ki so jih izbrale vse štiri – zgolj 10% .
Drug način pa vključuje ročno označevanje izrazov v besedilu in s tem izdelavo evaluacijskega materiala , s katerim primerjamo avtomatsko pridobljene rezultate .
Skupno število označenih terminov v slovenskem besedilu je znašalo 181 , spodnja tabela pa kaže rezultate obeh različic sistema na istem besedilu .
Število ujemajočih pomeni presek najdenih z ročno označenimi izrazi , v tretji vrstici pa podamo še število parov ustreznic , ki jih je sistem odkril na podlagi vzporednega besedila .
Kot bi pričakovali , statistični sistem najde več izrazov kot jezikoslovni , vendar so rezultati slabše kakovosti , zato se jih tudi manj ujema z ročno označenimi termini .
Jezikoslovni sistem ponudi manj terminov , vendar se jih več ujema z ročno označenimi , pri tem pa pregled seznama daje vtis , da so tudi ostali ponujeni izrazi nadvse uporabni , a jih označevalci iz takih ali drugačnih razlogov niso uvrstili med termine .
- Sistem izraze in ustreznice izločuje na podlagi intuitivno določenih mejnih vrednosti terminološke relevantnosti , vrednosti C in stopnje prevodne ustreznosti .
Pri statistični metodi bi bilo variacije možno odkrivati s pomočjo primerjave znakovnih nizov , npr. reaktorsko hladivo in reaktorsko hladilo ( podobno kot pri sorodnicah ) , pri jezikoslovni pa bi v vzorce lahko vključili tudi transformacijska pravila .
Tako bi bilo razmeroma preprosto vključiti še komponento za iskanje izpisanih različic akronimov , saj se te pogosto pojavljajo v oklepajih poleg krajšave ali obratno , npr. Jedska elektrarna Krško ( JEK ) .
V nekaterih strokah je za osnovno semantično klasifikacijo možno uporabiti tipične morfeme , npr. [ - lnik ] kot morfemski znanilec semantičnega razreda naprava / stroj / pripomoček , ali [ - anje , - enje ] kot znanilec postopka / metode .
V prispevku smo opisali zgradbo sistema za avtomatsko luščenje izrazja iz vzporednih korpusov .
Predstavili smo glavne metode obeh različic , statistične in jezikoslovne , in navedli ter ovrednotili rezultate obeh različic .
Uporabnost sistema je v tej fazi še težko oceniti , vendar bi že v obstoječi različici lahko nudil podporo prevajalskemu in terminološkemu delu .
Ker se v prevajalskih okoljih pomnilniki prevodov vse bolj uveljavljajo , s tem nastajajo tudi vzporedni korpusi kot vir za luščenje izrazja .
Hkrati so večjezične terminološke zbirke vse bolj standardizirane in izmenjljive , kar bi omogočalo učinkovito dopolnjevanje človeškega dela in avtomatskih postopkov .
Samodejno razpoznavanje govora : od unimodalnih k bimodalnim sistemom .
Prav ti dve podpodročji zajemata večino problematike , s katero se srečujemo pri izgradnji bimodalnih sistemov za samodejno razpoznavanje govora .
Dokler je razmerje med signalom in šumom pri prenosu preko medija , tako pri neposredni medsebojni komunikaciji med ljudmi kot tudi na daljavo , dovolj veliko , je razpoznavanje govora , ki temelji le na sprejetem akustičnem signalu , uspešno .
Pri postopku razpoznavanja govora pri ljudeh je poleg analize sprejetega dovolj kakovostnega akustičnega ( slušnega ) signala zelo pomembno tudi višjenivojsko znanje ( jezik , tematika ipd. ) .
Poleg zagotavljanja informacije o sogovornikovem razpoloženju in čustvenem stanju nam vidni stik pomaga tudi v procesu razpoznavanja govora , predvsem v primerih , kadar je akustični signal moten zaradi hrupnejšega okolja , npr. v avtomobilu , letalu , v tovarniškem okolju , pa tudi pri navzkrižnem govorjenju več govorcev , kar pogosto srečamo na javnih prostorih , v lokalih ipd.
V takšnih primerih ljudje precej težje govorno komuniciramo , močno pa nam pomaga pozorno opazovanje gibanja govorčevega obraza , zlasti ust in spodnje čeljusti .
Ljudje z okvarami sluha imajo zato pogosto izjemne sposobnosti branja ustnic oziroma vizualnega branja govora , še posebej pri izrazitejših gibih obraza in ustnic govorca ob poudarjeni artikulaciji .
Televizijske oddaje s slabo sinhroniziranim zvočnim in slikovnim zapisom so za gledalce moteče .
McGurkov efekt je močnejši pri odraslih osebah kot pri otrocih , preizkusili in potrdili pa so ga tako na kratkih kombinacijah soglasnikov in samoglasnikov kot tudi na besedah in stavkih .
Bimodalno samodejno razpoznavanje govora .
Da bi izboljšali razpoznavanje govora pri motenem akustičnem signalu , si lahko tudi v sistemih za samodejno razpoznavanje govora pomagamo z vizualno ( vidno ) informacijo .
Poleg akustične informacije , zajete z mikrofonom ( slika 1a ) , v sistem sedaj vodimo še vizualno informacijo , predvsem o obrazu govorca , ki jo dobimo z video kamero ( slika 1b ) .
V tem primeru govorimo o bi-modalnem ( avdio-vizualnem ) samodejnem razpoznavanju govora .
Na sliki 1b je prikazana tudi možnost vodenja aktivne kamere ( npr. barvna kamera EVI-D31 proizvajalca Sony ) , kar omogoča dinamično aktivno prilagajanje kota zasuka in nagiba ter zooma kamere med delovanjem sistema .
Dodatek vizualne informacije , ki jo vodimo v sistem , v splošnem ne spreminja postopkov in načel tradicionalnih pristopov k razpoznavanju govora z uporabo akustične informacije .
Za razpoznavanje se uporabljajo podobni postopki , ki največkrat temeljijo na prikritih Markovovih modelih ali nevronskih omrežjih ( Rabiner in Juang , 1993 ; Jelinek , 1997 ) .
Kritično vprašanje , ki odpira široko področje problemov , pa je vsekakor pridobivanje relevantnih značilk iz slike ( zaporedja slik ) kamere .
Takšni pristopi so sicer primerni za preizkusne laboratorijske razmere , niso pa ustrezni za izgradnjo splošnonamenskih avdio-vizualnih govornih vmesnikov med človekom in strojem .
V nadaljevanju bomo zato opisali problematiko pridobivanja primernih vizualnih značilk brez uporabe značk ali kozmetičnih sredstev na obrazu govorca .
Tako npr. naletimo na enačenje izrazov , kot so avdio-vizualno razpoznavanje govora , samodejno branje ustnic in branje govora ( Hennecke et al. , 1995 ) .
Računalniška obdelava slik obrazov .
Računalniška obdelava slik človeških obrazov se je razvijala predvsem na področju samodejnega računalniškega razpoznavanja obrazov z namenom identifikacije oseb .
Nemalokrat so npr. med seboj močno povezani ali celo združeni moduli za detekcijo in lokalizacijo oz. sledenje področja obraza in njegovih značilnih delov .
Tako lahko modula za detekcijo in lokalizacijo obraza generirata hipoteze o prisotnosti in lokaciji obraza na sliki , ki jih sprejmemo ali zavržemo na podlagi analize obraznega področja z iskanjem značilnih delov , kot so obrvi , oči , nosnice in usta .
Vrstni red modulov za lokalizacijo oz. sledenje obraza in značilnih delov obraza je lahko takšen , kot smo ga navedli , ali pa obraten , saj lahko natančno lego obraza določimo prav na podlagi detekcije in lokalizacije določenih značilnih obraznih področij , predvsem oči .
Za določanje področij v sliki , ki so kandidati za obraz , pogosto uporabljamo barvno informacijo .
Odtenek ( angl. hue ) barve kože je namreč za različne osebe , ki lahko celo pripadajo različnim človeškim rasam , zelo podoben .
Kot model lahko uporabimo dvodimenzionalni Gaussov model ( Stiefelhagen et al. , 1997 ; Yang in Ahuja , 1998 ) v enem od barvnih prostorov ali model utežene vsote več ( dveh ) Gaussovih porazdelitev ( angl. Gaussian mixture model , GMM ) , npr. Chen ( 2001 ) .
Podoben pristop je pretvorba v HSV ali HLS barvni prostor , ki sta bližje človeški percepciji barv , ter izgradnja primernega barvnega modela v ( H , S ) prostoru .
Rezultat segmentacije slike z barvnim modelom kože so področja slike , ki z veliko verjetnostjo pripadajo barvi kože .
Ta področja moramo sedaj analizirati ter jih sprejeti kot tista , ki pripadajo sliki obraza , ali pa jih zavreči .
Pri zaporedju slik lahko uporabimo informacijo o gibanju obraza v prizoru ali gibanju značilnih delov obraza znotraj obraznega področja ( npr. pri govoru ) , pomagamo pa si lahko tudi z odštevanjem slike ozadja , ki jo skozi zaporedje slik na primeren način stalno obnavljamo in s tem odstranimo ( počasnejše ) spremembe v ozadju .
Pri sledenju je z informacijo iz prejšnjih slik zaporedja mogoče omejiti področje iskanja obraza oziroma njegovih značilnih delov znotraj posamezne slike v zaporedju .
Lokalizacija značilnih delov obraza ter pridobivanje značilk .
Ustreznost takšne izbire pogleda potrjuje tudi dejstvo , da je človek sposoben izkoriščati vizualno govorno informacijo iz frontalnih dvodimenzionalnih video posnetkov , npr. pri spremljanju televizijskega dnevnika .
Preslikava zaporedja slik v zaporedje vrednosti vizualnih značilk , ki bi izboljšale rezultat razpoznavanja govora , predstavlja eno temeljnih raziskovalnih vprašanj pri razvoju sistemov za vizualno podporo akustičnim razpoznavalnikom govora .
Pri nekaterih postopkih je namreč laže lokalizirati in slediti druga značilna področja obraza , nato pa z upoštevanjem geometrijskih razmerij določiti še položaj področja ust .
Za opis oblike so v literaturi znani tudi modeli , ki jih prilagajamo trenutni obliki in / ali sivinskim nivojem slike ustnic , npr. Matthews et al. ( 2002 ) .
Prilagajanje modela pomeni spreminjanje njegovih parametrov , ki v tem primeru lahko služijo kot značilke za razpoznavanje , ali pa značilke izpeljemo iz modela ( npr. geometrijske značilke pri modelih oblike ustnic ) .
Prav dinamične značilke za opis časovnih sprememb položaja ustnic po nekaterih ugotovitvah ( Bregler in Konig , 1994 ) nosijo pomembnejšo informacijo od opisa absolutnega položaja ustnic .
Problematika računalniške obdelave slik obrazov .
Iz obrazov drugih ljudi smo zmožni razbrati njihove občutke , razpoloženje , čustva , pa tudi raznovrstne , včasih zelo majhne spremembe .
Obstajata dve hipotezi o človeškem zaznavanju in razpoznavanju obrazov : človeški vizualni sistem razpoznava obraze kot celoto ali ( druga hipoteza ) kot zbirko značilnih delov ali značilk , ki sestavljajo obraz ( Bala et al. , 1997 ) .
Podobnost s tema dvema hipotezama najdemo tudi pri samodejnih sistemih za lokalizacijo oziroma sledenje obrazov , kar smo že omenjali pri vrstnem redu modulov za detekcijo obraza in njegovih značilnih delov .
Pri postopkih računalniške obdelave slik človeških obrazov , predvsem pri lokalizaciji značilnih delov obraza , naletimo na vrsto težav , ki so neposredno povezane z množico pojavnih oblik , v kakršnih lahko ti obrazi nastopajo .
Težave pri delovanju postopkov računalniške obdelave ( barvnih ) slik obrazov na področju bimodalnih sistemov za razpoznavanje govora izhajajo predvsem iz naslednjih razlogov : osvetlitev - neenakomerna osvetlitev obraza , sence in odsevi ( npr. od stekel očal ) , razlike med umetno in naravno ( dnevno ) svetlobo , barva umetne svetlobe obrazna poraščenost pri moških - brada in brki ovirajo predvsem postopke lokalizacije in sledenja ustnic dekorativna kozmetika pri ženskah - predvsem uporaba nenaravnih in močnejših barv kozmetičnih sredstev ( make-up ) lasje - neobičajne barve las in močno nesimetrične pričeske , delna zakritost obraza z lasmi korekcijska in predvsem sončna očala , obrazni nakit ( npr. uhani , prilepljeni okraski ) , šali , pokrivala ipd.
Kot smo prikazali na sliki 1b , potekata obdelavi akustičnih in vizualnih podatkov v bimodalnem sistemu ločeno .
V procesu razpoznavanja je potrebno združiti pridobljene obdelane akustične in vizualne podatke .
Združevanje akustične in vizualne informacije je močno povezano z zgradbo razpoznavalnika .
Pri združevanju nas predvsem zanimata način in nivo , na katerem združimo informaciji obeh virov .
Glede na nivo združevanja ločimo dve skrajni možnosti : zgodnji ( angl. early ) , slika 3a , in pozni ( angl. late ) model , slika 3c .
, funkcije /.../ in /.../ pa so diskriminantne oziroma odločitvene funkcije posameznih razredov i. Izhodni razred je moč določiti z iskanjem ekstrema ( maksimuma ) teh funkcij .
Pri zgodnjem modelu združevanja informacije sestavimo ( zlepimo ) vektorja akustičnih in vizualnih značilk v en sam daljši vhodni vektor , ki ga vodimo v razpoznavalnik .
Pri poznem modelu imamo dva povsem ločena razpoznavalnika , enega za akustični in drugega za vizualni vektor značilk , katerih izhoda ( izračunane verjetnosti razredov ) moramo na primeren način kombinirati .
Če informacijo iz obeh virov združujemo na kakem drugem , vmesnem nivoju , govorimo o vmesnem ( angl. intermediate ) modelu združevanja , kar je simbolično prikazano na sliki 3b z navzkrižnima povezavama med obema vejama .
Znanih je le nekaj arhitektur vmesnega združevanja ( Hennecke et al. , 1995 ) .
Zgodnji model predstavlja ( teoretično ) najbolj splošno metodo združevanja informacije .
Velja namreč , da bi pri pravilni izbiri arhitekture sistema za razpoznavanje in metode učenja razpoznavalnik , zgrajen po zgodnjem modelu , moral delovati vsaj tako dobro kot sistem , ki združuje informacijo na kasnejši stopnji ( Hennecke et al. , 1995 ) .
Če bi se npr. pozni model izkazal za optimalnega pri avdio-vizualnem branju govora , bi se takšen razpoznavalnik torej naučil izvajati pozno združevanje .
Ker sta sinhrona vektorja akustičnih in vizualnih značilk pri zgodnjem modelu med seboj združena že na vhodu razpoznavalnika , mora biti takšen razpoznavalnik sposoben tudi učenja relativnih časovnih razlik med obema viroma .
Razpoznavalniki , ki uporabljajo zgodnji model združevanja , imajo več parametrov kot tisti , ki združujejo pozno , zato potrebujejo tudi večučnih podatkov .
Da bi npr. dosegli pravilno uteževanje med obema viroma informacije v odvisnosti od nivoja šuma v akustičnem signalu , moramo razpoznavalnik učiti preko celotnega območja šumnih nivojev , ki lahko nastopijo v fazi razpoznavanja , kar še dodatno močno poveča učno množico podatkov .
Pri razpoznavanju s poznim modelom združevanja ( slika 3c ) je sistem za razpoznavanje zgrajen iz dveh ločenih razpoznavalnikov ; v prvega vodimo vektor akustičnih , v drugega pa vektor vizualnih značilk .
Vrednosti diskriminantnih ( npr. verjetnostnih ) funkcij se določajo ločeno za akustične in vizualne značilke v vsakem od obeh podsistemov , nato pa na primeren način kombinirajo v en rezultat .
Model poznega združevanja zato omogoča nadgradnjo že obstoječih sistemov samodejnega akustičnega razpoznavanja govora .
Pozni model združevanja je primeren za uporabo le v razpoznavalnikih , kjer nastopa manjša množica izgovorjenih enot ( angl. utterances ) .
Vmesni model združevanja akustične in vizualne informacije je močno povezan z arhitekturo celotnega razpoznavalnika , ki mora omogočati vpliv enega ( pod ) razpoznavalnika na drugega , kar lahko ohrani nekatere prednosti tako zgodnjega kot poznega modela oziroma odstrani njune slabosti .
Akustično-vizualni razpoznavalniki .
Pri akustično-vizualnem razpoznavanju uporabljamo tehnike , znane iz akustičnega razpoznavanja govora ( Rabiner in Juang , 1993 ; Jelinek , 1997 ) , najpogosteje so to prikriti Markovovi modeli ( HMM ) in nevronska omrežja ( NN ) .
Vsaka od obeh verig lahko vsebuje različno število enot , več za akustično informacijo in manj za vizualno .
Prvi rezultati takšnega vmesnega združevanja kažejo izboljšanje tako v primerjavi z zgodnjim kot poznim modelom združevanja ( Hennecke et al. , 1995 ) .
Za razliko od razpoznavanja s HMM je pri razpoznavalnikih z nevronskimi omrežji težko doseči neodvisnost od hitrosti govora , učenje pa je počasno .
Pri poznem modelu imamo dve ločeni nevronski omrežji s podobno arhitekturo , ki imata v splošnem različno število skritih enot .
V prvo omrežje vodimo vektor akustičnih , v drugo pa vektor vizualnih značilk .
Navzkrižnih povezav med omrežjema pri poznem modelu ni , končni rezultat pa dobimo s kombiniranjem izhodnih vrednosti unimodalnih diskriminantnih funkcij obeh omrežij .
Če namesto kombiniranja izhodnih vrednosti napeljemo navzkrižne povezave , dobimo vmesni model združevanja .
Nivo ( stopnjo ) združevanja določa število navzkrižnih povezav in plasti , kjer se te povezave pojavljajo .
Izhodna plast je v teh primerih le ena , diskriminantna funkcija na izhodu pa je že bimodalna .
Pri izgradnji sistemov za samodejno avdio-vizualno razpoznavanje govora potrebujemo primerno zbirko avdio-vizualnih posnetkov tako za učenje kot tudi preizkušanje zgrajenih sistemov .
Ena od težav pri mednarodnem primerjanju rezultatov in sprejetju standardnih preizkusnih avdio-vizualnih zbirk je prav gotovo uporabljeni jezik , saj postopki samodejnega razpoznavanja govora praviloma vključujejo tudi posebnosti jezika .
Posamezne raziskovalne skupine večinoma posnamejo svoje avdio-vizualne podatkovne zbirke .
Problematika avdio-vizualnih podatkovnih zbirk je predvsem tehnične narave in je povezana predvsem s samim pridobivanjem ( snemanjem ) podatkov , njihovim shranjevanjem na primerne medije ter razmnoževanjem in distribucijo kopij zbirk .
Digitalna oblika zagotavlja tudi kvalitetno reprodukcijo in možnost razmnoževanja podatkov brez izgube kvalitete .
Zaradi velike količine podatkov , k čemur seveda največ prispevajo barvni video posnetki , so avdio-vizualne zbirke shranjene praviloma v komprimirani obliki ( npr. v DV ali MPEG-2 formatu ) .
Posnetki so ponavadi shranjeni in distribuirani na več medijih večje kapacitete ( npr. DVD-RAM diski s kapaciteto 5 , 2GB ali 9 , 4GB ) .
Kadar so avdio in video posnetki v ločenih datotekah , beležimo sinhronizacijske podatke za oba dela zbirke v posebne datoteke ( Potamianos et al. , 1997 ) .
Število slik v sekundi je lahko različno , v Evropi ponavadi 25 ( PAL televizijski sistem ) , v Združenih državah Amerike pa 30 ( NTSC televizijski sistem ) slik v sekundi .
Vsaka od slik v video sekvenci ima določeno število slikovnih elementov ( npr. 720 krat 576 slikovnih elementov ) , kar določa ločljivost podrobnosti na posamezni sliki .
Pri video sekvenci podatkovnih zbirk nas poleg naštetih tehničnih podatkov zanimajo še pogoji osvetlitve , pri katerih je bila zbirka posneta , vsebina slik video sekvenc ( zgornji del telesa in glava , obraz , samo spodnji del obraza ) , morebitna uporaba barvnih značk ali barvil na obrazu ipd.
Splošni podatki za avdio-vizualne zbirke so še : število in sestava govorcev ( predvsem spol ) , vsebina in sestava govornega materiala , časovni intervali , v katerih so bili posnetki pridobljeni , morebitno označevanje zbirke , ki je ponavadi izvedeno ročno ali polavtomatsko ipd.
Avdio-vizualne podatkovne zbirke , ki jih je mogoče kupiti za raziskovalne namene , so danes še precej redke .
Ena od njih je zbirka XM2VTSDB - " Extended M2VTS Database " ( Messer et al. , 1999 ) , katere del imamo tudi v Laboratoriju za umetno zaznavanje , sisteme in kibernetiko na Fakulteti za elektrotehniko v Ljubljani .
Gre za razmeroma obsežno multimodalno podatkovno zbirko , ki je v prvi vrsti namenjena učenju in preizkušanju multimodalnih sistemov za identifikacijo ( verifikacijo ) oseb , pa tudi za raziskave na področju bimodalnih sistemov za samodejno razpoznavanje govora , predvsem za preizkuse postopkov sledenja ustnic .
Posnetki so bili pridobljeni v štirih ločenih sejah , enakomerno razporejenih v obdobju petih mesecev .
Barvni video posnetki so shranjeni na DVD-RAM medijih v DV kodiranem AVI formatu s 25 slikami v sekundi , strukturo vzorčenja 4:2:0 in stalnim razmerjem stiskanja podatkov 5:1.
Vsaka od 295 oseb izgovori vsakega od treh nizov po enkrat v vsaki od štirih sej .
Avdio-vizualni del zbirke torej vsebuje 3540 posnetih sekvenc , po 12 na vsako od sodelujočih oseb .
Uporaba vizualne informacije v sistemih za samodejno razpoznavanje govora lahko močno pripomore k robustnosti delovanja govornih vmesnikov med človekom in strojem , predvsem v hrupnejših okoljih .
Naštejmo le nekaj pomembnejših primerov uporabe : Pisarne in uradi : Značilno za pisarne in urade je razmeroma hrupno okolje , npr. zaradi hkratnega govora več govorcev ( pogovori s strankami , telefonski pogovori ) , pa tudi hrupa naprav ( tiskalniki , fotokopirni stroji ipd. ) .
Bimodalne avdio-vizualne govorne vmesnike bi bilo moč uporabiti predvsem pri povečanju robustnosti samodejnih sistemov za narekovanje teksta strojem ( računalnikom ) , pa tudi pri robustnih govornih vmesnikih za ukazovanje inteligentnim pisarniškim napravam ( fotokopirni stroji , komunikacijske in faksimilne naprave ipd. ) .
Pomoč osebam z okvaro sluha in invalidnim osebam : Kot pomoč osebam z okvaro sluha omenimo predvsem samodejne prepise in podnaslavljanje televizijskih oddaj , kjer je pogosto na voljo tudi slika govorca ( npr. TV dnevnik ) .
Za realistično animacijo so nujno potrebni rezultati raziskav s področja vizualnega branja govora .
Uporaba inteligentnih vmesnikov , zasnovanih na postopkih avdio-vizualne percepcije govora in razpoznavanju človeških kretenj , v različnih inteligentnih hišnih napravah in aparatih lahko močno olajša življenje invalidnim osebam .
Varnostni sistemi in nadzor dostopa : Identifikacija oseb izključno na osnovi akustične govorjene informacije kot tudi izključno na osnovi vizualne informacije ( razpoznavanje obraza ) ne zagotavljata dovolj zanesljive metode za ugotavljanje istovetnosti osebe .
Postopki , ki jih uporabljamo pri avdio-vizualnem branju govora , bi lahko omogočili izvedbo zanesljivejšega sistema za identifikacijo oseb na osnovi bimodalne avdio-vizualne identifikacije .
Postopke iskanja , lokalizacije in sledenja obraza z video kamero , ki jih uporabljamo pri izvedbi samodejnih sistemov branja ustnic ali govora , je moč uporabiti tudi za avtomatizacijo telekonferenc .
Za zanesljivo in robustno delovanje zgrajenega sistema je ključnega pomena prav podsistem za obdelavo vizualne informacije in pridobivanje vizualnih značilk .
Najtežavnejši del izgradnje takega podsistema je robustna izvedba obdelave zaporedja slik govorčevega obraza , še posebej sledenje ustnic za poljubnega govorca .
Samodejno razpoznavanje govora : unimodalni ( a ) in bimodalni ( b ) pristop .
Računalniška obdelava slik obraza pri pridobivanju značilk .
Slovar je zasnovan kot dolgoročni projekt postopnega nadgrajevanja sprva preprostega dvojezičnega slovarja , s sprotnim upoštevanjem uporabniških želja ob vsaki dopolnitvi .
Uporabniki slovarja so študenti japonologije na Filozofski fakulteti Univerze v Ljubljani , ki obenem tudi sodelujejo pri vseh fazah nastajanja in dograjevanja .
Z nastankom katedre za japonologijo na novoustanovljenem Oddelku za azijske in afriške študije pred šestimi leti na Filozofski fakulteti Univerze v Ljubljani se je pojavila potreba po jezikovnih učnih pripomočkih za slovenske študente japonščine , ki jih je trenutno okoli 500.
Glede na zelo majhno število možnih uporabnikov ( najverjetneje ne veliko več od skupnega števila študentov na naši katedri ) je japonsko-slovenski slovar žal izrazito nedobičkonosen projekt in ne moremo pričakovati , da bi se s takim slovarjem ukvarjala založniška hiša .
Sestavljanje slovarja , ki bi tako po makrostrukturi kot po mikrostrukturi , torej tako po številu gesel kot po njihovi notranji sestavi in vrstah vsebovanih informacij nudil vse , kar potrebujejo študenti tako pri pasivni kot tudi pri aktivni rabi tujega jezika , bo trajalo dolgo vrsto let .
Tak pristop opisujeta tudi De Schryver in Prinsloo ( 2000 ) , ki ob ravno tako nekomercialnih projektih dvojezičnih slovarjev za dva manjša afriška jezika predstavljata slovaropisni model , pri katerem uredniki slovarja med dolgoročnim sestavljanjem večjega slovarja postopoma ponujajo uporabnikom delne slovarje , od uporabnikov potem pridobivajo povratne informacije o uporabnosti teh slovarjev in na podlagi tako pridobljenih informacij sproti izpopolnjujejo obliko in vsebino osrednjega slovarskega projekta .
Omejeno število uporabnikov , ki je z založniškega vidika lahko pomanjkljivost , lahko potem s takega uredniškega pristopa razumemo tudi kot prednost , saj nam možnost sprotnega stika z malodane vsemi uporabniki omogoča sprotni vpogled v uporabnost slovarja ter v smotrnost vsebinskih oz. oblikovnih izbir in nam tako tudi nakazuje možne izboljšave že med nastajanjem slovarja .
Različni uporabniki v različnih situacijah potrebujejo od slovarja različne informacije , zato moramo pri načrtovanju slovarja najprej ugotoviti , kdo so ciljni uporabniki in v kakšnih situacijah bodo slovar uporabljali .
Slovar naj bi pokrival le osrednji del besedišča , s katerim se študent seznani na osnovni in srednji stopnji učenja .
Prva ovira pri slovarski rabi za študente japonščine je pisava , saj se pri zapisovanju japonskega jezika istočasno uporabljajo trije nabori znakov : dva fonetska , ki se jih razmeroma zlahka naučimo v par tednih , in nekaj tisoč kitajskih pismenk ; za osnovnih 2000 potrebuje študent kar nekaj let učenja .
Dokler se teh ne nauči prebrati oz. se ne nauči , katerim glasovnim enotam odgovarjajo , tudi ne more iskati neznanih pisnih enot v slovarju , v katerem so gesla razporejena po abecednem redu glasovne podobe teh gesel .
Zato študent med branjem japonskega teksta ( ali celo med listanjem po japonskih slovarjih ) potrebuje slovar kitajskih pismenk , v katerem so pismenke razporejene po obliki in po številu potez , iz katerih je vsaka sestavljena ( pri tem so običajno razporejene na osnovi tradicionalnih 214 pomenskih ključev , to je manjših grafičnih enot , ki jih vsaka pismenka vsebuje ) , nato pa potrebuje še eno - ali dvojezični slovar besed oz. besediščnih enot , ki so razporejene po vrstnem redu njihovega fonetskega zapisa ( to je pri japonščini lahko vrstni red latinične abecede ali vrstni red japonskega domačega nabora fonetskih znakov ) .
V slovarju pismenk torej najprej ugotovi , katero besedo pismenka ( oz. skupina pismenk ) zapisuje , šele nato lahko besedo poišče v slovarju besed .
V prvem primeru bi lahko pri sestavljanju slovarja k pismenkam , ki so razporejene po obliki , dodali tudi informacije o besedi , ki jo pismenka zapisuje ( npr. njen prevod v slovenščino , besedno vrsto , skladenjske značilnosti , primer rabe ipd. ) , na koncu dodali še kazalo po izgovarjavi ( za primere , ko uporabnik pozna samo slušno obliko besede ) in bi se tako izognili potrebi po dveh slovarjih .
Toda v primeru besed , ki se zapisujejo z več pismenkami , bi se iste informacije podvajale pri vseh pismenkah , ki jih zapis besede vsebuje , kar bi po nepotrebnem povečalo obseg slovarja .
Slovarji v knjižni obliki so se zato doslej vedno delili na dva tipa : slovarji pisnih oblik ( pismenk ) in slovarji slušnih oblik ( besed ) .
Iskanje po dveh slovarjih je seveda zelo zamudno , elektronski slovar , v katerem sta povezani baza podatkov pismenk in baza podatkov besediščnih enot , pa lahko iskanje zelo pospeši .
Tudi zaradi tega smo se odločili , da bomo končni slovar ponudili v elektronski obliki , pri kateri bosta povezani dve bazi podatkov – baza pismenk in baza besed , do katerih uporabnik lahko dostopa bodisi preko iskanja pismenk ( po možnih izgovarjavah , po slovenskem prevodu glavne besede , ki jo zapisujejo , ter po njihovi obliki - tj. po številu potez in po pomenskem ključu ) bodisi preko iskanja besed .
Pri iskanju neznanih pismenk glede na njihovo obliko lahko računalnik nudi še dodatno četrto možnost v primerjavi z običajnimi knjižnimi izdajami .
Pri vnašanju besedila v računalnik , ki podpira japonščino , si namreč pomagamo z vmesnikom za vnašanje .
Tako vnašanje je seveda zelo zamudno pri pisanju daljših besedil , toda za vnašanje in iskanje posameznih pismenk , ki jih uporabnik slovarja ne zna prebrati v tiskanem besedilu , je lahko zelo priročno .
Pri besedilih v elektronski obliki pa obstaja še četrta možnost za iskanje pismenk , ki jih uporabnik ne zna prebrati v besedilu .
Končni obseg slovarja naj bi bil 2000 osnovnih pismenk za bazo podatkov o pismenkah ( to so pismenke , ki jih je predpisalo japonsko kulturno ministrstvo za rabo v javnih občilih ) in 10.000 gesel za bazo podatkov besed - to je besedišče , ki se zahteva pri osrednjem izpitu japonskega jezika za sprejem na japonske univerze ( Japan Foundation 2001 ) in večinoma sovpada z 10.000 besedami , ki po raziskavi Japonskega državnega inštituta za japonščino ( NLRI 1984 ) pokriva 90% besedišča japonskih osrednjih časopisov .
Še posebno pri aktivni rabi japonščine študenti potrebujejo informacijo o tem , ali je japonska beseda , ki bi jo radi uporabili , tudi primerna za kontekst , v katerem jo nameravajo uporabiti .
Zato naj bi slovarsko geslo vsebovalo poleg definicije pomena in slovenskega prevoda tudi oznake o rabi in ponazarjalne primere .
Na osnovi teh predlogov ter lastnih študentskih in pedagoških izkušenj ( Hmeljak Sangawa 1999 ) naj bi slovar japonskega jezika za študente na osnovni in srednji stopnji vseboval naslednje podatke : Za vsako pismenko v bazi podatkov o pisavi : - tiskano in pisano obliko pismenke - število in vrstni red njenih potez - pomenski ključ - besede oz. morfemi , ki jih pismenka sama zapisuje - sestavljene besedne enote oz. sklopi pismenk , v katerih se pismenka uporablja .
Za gesla v bazi podatkov o besedišču : - pisno obliko besede - glasovno podobo besede ( z naglasom ) - slovnično tipiko : besedno vrsto ( z opozorilom v primeru , da se razlikuje od slovenske prevodnice ) ; pri pregibnih besednih vrstah pregibalni vzorec ; vezavo - pomen : definicijo v japonščini ; pri vsakem podpomenu prevod v slovenščino ; sopomenke , protipomenke , podpomenke , nadpomenke ; običajne kolokacije ; besedne zveze - besednozvrstnost : domača beseda / tujka ; nivo spoštljivosti ; govorna / pisna raba ; moško / žensko izražanje - primere rabe s slovenskim prevodom .
Japonsko slovenski slovar besed Zgornji okvir za podatke o besedišču bomo upoštevali najprej pri opisu najbolj osnovnih 1000 besed , ki tvorijo besedišče našega učbenika japonskega jezika za začetnike , postopoma pa še za dele besedišča višjih težavnostnih nivojev znotraj fonda 10.000 gesel , glede na problematičnost posameznega gesla za slovenskega govorca .
Trenutno smo skupaj s študenti , ki so tako vadili vnašanje japonskega teksta v računalnik , vnesli 10.000 gesel za bazo podatkov besed , z oznako besedne vrste in z eno - ali parbesednim prevodom v slovenščino .
To prvo gradivo bomo uporabili v spletnem orodju , ki sestavi glosar besed vnešenega japonskega teksta , kar opisuje razdelek 3.1.
Druga faza bo dopolnjevanje osnovnih 1000 besednih iztočnic s podatki , ki jih študent potrebuje pri aktivni rabi slovarja .
Ob vsaki fazi načrtujemo zbiranje povratnih informacij od uporabnikov glede ustreznosti ponujenega gradiva .
So pa obenem nevarno orodje , še posebno pri aktivni rabi tujega jezika , če njihov uporabnik nima zadostnega jezikovnega znanja in se ne zaveda njihovih omejitev : prevodne ustreznice , ki jih slovar ponuja , seveda ne veljajo znotraj vsakega sobesedila .
Uporabnik vtipka ali prilepi japonsko besedilo v okence in požene program , ta pa opravi morfološko analizo teksta ( ta je potrebna za ugotovitev mej med besedami , saj pri pisanju japonščine med besedami ni presledkov ) , sestavi seznam vsebovanih besed , jim doda geselske članke ( definicijo v japonščini ali angleščini , oz. angleški ali nemški prevod ) , jih ponudi v okencu poleg vnešenega besedila in ustvari nadbesedilne povezave od enot v besedilu h geselskim člankom v glosarju ob njem .
Primer besedila z glosarjem , kot ga proizvede orodje Reading Tutor Orodje z angleškim slovarjem smo uporabljali s študenti pri branju spletnih časopisov in drugega čtiva med poukom japonščine .
V članku podajamo kratko analizo raziskovalnih aktivnosti na področju jezikovnih tehnologij v slovenskem prostoru v preteklem osemletnem obdobju ter skušamo nakazati nekaj osnovnih preprek za obsežnejše vključevanje slovenskih raziskovalnih skupin v mednarodne raziskovalne projekte .
Nov koncept izvajanja raziskav v obliki integralnih projektov v okviru 6. okvirnega programa postavlja pred raziskovalce v slovenskem prostoru zahtevo po večjem združevanju in transparentnosti raziskovalnega dela za enakopravnejšo vključitev v te aktivnosti .
Predstavljena projekta LC-STAR in TC-STAR bi lahko predstavljala vodilo za takšne aktivnosti .
Uvod .
V zadnjih desetih letih so v evropskem prostoru potekale aktivnosti načrtne izgradnje jezikovnih virov , ki so bile uresničevane pretežno skozi projekte okvirnih programov , ki jih razpisuje Evropska unija .
Četrti in peti okvirni program sta tako vključevala projekte , v okviru katerih so zgradili množico govornih in pisnih jezikovnih virov , predvsem za države članice unije , preko drugih raziskovalnih programov ( npr. Copernicus , INCO Copernicus ) pa so nekatere izmed teh projektov prenesli tudi na države srednje in vzhodne Evrope ( npr. Onomastica , Multext-East ) .
Evropa si je s temi aktivnostmi v veliki meri zagotovila primat na področju gradnje predvsem večjezičnih jezikovnih virov in s tem izhodišče za uspešen razvoj tudi na področju razvoja sistemov jezikovnih tehnologij .
Zaradi temeljnega pomena jezikovnih virov pri razvoju sistemov jezikovnih tehnologij , časovne zahtevnosti izgradnje virov in visoke cene se v zadnjih petih letih kažejo vse večja pričakovanja Komisije EU po zagotavljanju privatnega kapitala za izgradnjo virov in finančne podpore na nivoju posameznih držav članic unije .
Takšne primere je bilo moč srečati na primer pri izvajanju projektov SpeechDat ( SpeechDatII E , SpeechDat Car , Speecon ...
Ta pristop pa lahko prinese precej težav predvsem državam srednje in vzhodne Evrope , ki so bile v preteklosti največkrat slabo vključene v aktivnosti zagotavljanja osnovnih jezikovnih virov .
Primer so baze izgovarjav SpeechDat II ( češka , Madžarska , Slovaška , Slovenija ) , kjer so lastniki baz podjetja iz tujine ( npr. Siemens , Philips ) .
Ob pomanjkanju domačega kapitala lahko pomeni takšen razvoj v določeni meri odvisnost narodov od tujega kapitala na tem za posamezen narod precej občutljivem področju , ki se je doslej štelo tudi za eno od prvin zagotavljanja narodove samobitnosti .
V Sloveniji se med raziskovalnimi in univerzitetnimi ustanovami z razvojem jezikovnih tehnologij in izgradnjo jezikovnih virov , dosegljivih v elektronski obliki , ukvarjajo : v Ljubljani predvsem na Fakulteti za elektrotehniko ( bazi izgovarjav K211D , LAPSC , Gopolis , VNTV , Luz ) ( Gros , 2000 ) ( Dobrišek , 1998 ) , Inštitutu Jožef Stefan ( projekt Multext-East , IJS-ELAN , korpus FIDA ) ( Erjavec , 1998 ) ( Erjavec , 1998a ) , Filozofski fakulteti ( korpus FIDA ) , ZRC SAZU ( besedilni korpus Nova beseda , SSKJ ) , Fakulteti za računalništvo in Naravoslovnotehniški fakulteti ; v Mariboru na Fakulteti za elektrotehniko , računalništvo in informatiko ( FERI ) in v Centru za jezikovne tehnologije , ki deluje na FERI ( baze izgovarjav SNABI , SpeechDat II , PoliDat , InterFace , morfološki in fonetični slovarji Onomastica , SImlex , SIflex , besedilni korpusi Večer in Delo ) ( Kačič , 2000 ) ( Kaiser , 1998 ) , ( Rojc , 2002 ) ( Hozjan , 2002 ) , ter na Pedagoški fakulteti ; med podjetji pa predvsem podjetje Amebis iz Kamnika ( korpus FIDA in slovarji ) ( Romih , 1998 ) v sodelovanju z DZS ( korpus FIDA in slovarji ) in akademskimi institucijami ter Hermes Softlab .
Za slovenski raziskovalni prostor je na področju jezikovnih tehnologij značilen sorazmerno majhen raziskovalni potencial , ki je v preteklem obdobju deloval precej nepovezano in razpršeno .
Vključenost v mednarodne projekte je bila tako bolj plod prizadevanj posameznikov in njihovih poznanstev s skupinami v tujini in manj plod organiziranega skupnega delovanja .
Kljub temu lahko za obdobje zadnjih osmih let rečemo , da je bil na področju jezikovnih tehnologij dosežen napredek .
Delno gre vzroke za to pripisati tudi manjši atraktivnosti slovenskega jezika zaradi njegove majhnosti ( podobne razmere lahko na primer ugotavljamo pri drugih manjših jezikih ) .
V preteklih osmih letih ( 1995-2002 ) je Ministrstvo za šolstvo , znanost in šport Republike Slovenije financiralo 11 znanstvenoraziskovalnih projektov in tri programe , ki bi jih lahko razvrstili v področje jezikovnih tehnologij .
Omenjeni projekti so bili namreč večinoma manjši , v njih je sodelovalo majhno število strokovnjakov .
Tekoči raziskovalni programi pa pokrivajo raziskovalno področje jezikovnih tehnologij večinoma le kot del svojih aktivnosti .
Doslej premalo ali skoraj nič primerov povezovanja strokovnjakov z interdisciplinarnih področij v okviru enotnih projektov se odraža tudi v samem delu raziskovalnih skupin , kjer je pogosto opazno pomanjkanje interdisciplinarnega znanja .
Obstoj mednarodno primerljivih jezikovnih virov za slovenski jezik predstavlja » vstopnico « slovenskim raziskovalcem v mednarodne raziskovalne projekte , še posebej projekte okvirnih programov , ki jih razpisuje Evropska unija .
Eden osnovnih namenov takšnega organiziranja znanstvenoraziskovalnega dela je tudi doseganje kritične mase raziskovalcev in sinergičnega učinka , ki predstavlja eno izmed osnovnih orientacij projektov 6. okvirnega programa Evropske unije .
Raziskovalne aktivnosti na področju jezikovnih tehnologij potekajo v ZDA v okviru organiziranih raziskovalnih programov že več kot trideset let ( Mariani , 2002 ) .
Obe ustanovi prejemata večino finančnih sredstev za izvajanje raziskav na področju jezikovnih tehnologij iz širše tehnološke iniciative Računalništvo , informacije in komunikacije CIC ( Computing , Information and Communication ) , ki je bila formirana leta 1998.
Letni proračun programa CIC je milijarda ameriških dolarjev .
Sredstva iz programa CIC pa prejemajo ob že omenjenih organizacijah NSF in DARPA tudi druge nacionalne agencije , kot so : CIA , FBI , US air Force , Nacionalna agencija za varnost NSA ( National Security Agency ) in druge , ki pa večinoma skrbijo za razvoj aplikacij na področju jezikovnih tehnologij .
V njem sodeluje 28 partnerjev iz univerz , raziskovalnih ustanov , podjetij in vladnih organizacij .
Glavna cilja projekta sta razviti sistem avtomatskega prevajanja z vsaj 80% uspešnostjo prevajanja in sisteme avtomatskega indeksiranja in povzemanja besedil , ki bodo uporabni v praksi .
Glavna naloga programa je s pomočjo različnih projektov zgraditi sistem avtomatskega vodenja zapisnikov sestankov ( meeting transcription ) .
Eno pomembnih komponent programa predstavlja vrednotenje uspešnosti razvitih sistemov .
Proračun projekta za obdobje šestih let je 59 milijonov ameriških dolarjev , od tega je 50% namenjenih temeljnim raziskavam .
V programu sodeluje 18 partnerjev , od tega približno tretjina univerz .
Ciljna aplikacijska domena programa je načrtovanje potovanj in rezervacije .
Tudi ta program je odprt za partnerje iz tujine .
Skupna značilnost raziskovalnih aktivnosti , ki jih podpirajo različne fundacije v ZDA , je , da podpirajo manjše število projektov , ki pa zato vključujejo večje število partnerjev , trajajo običajno dlje kot tri leta in imajo večji proračun .
Na ta način so v projekt vključeni partnerji s strokovnjaki iz vseh področij , ki jih vključuje multidisciplinarno področje jezikovnih tehnologij ( avtomatska sinteza in razpoznavanje govora , procesiranje naravnega jezika ) , in lahko računajo na sinergični učinek pri rezultatih projekta .
Prav tako vsi programi vključujejo zelo pomembno komponento vrednotenja rezultatov projekta , ki je predvsem v ZDA zelo skrbno načrtovana , kar je posledica izkušenj prvega DARPA programa SUS ( Speech Understanding Systems ) , ki je trajal od 1971-1976 in pri katerem je popolna neusklajenost specifikacij izvajanih projektov onemogočila kakršnokoli primerjavo in s tem povezano vrednotenje programa .
Raziskovalne aktivnosti v Evropi .
Raziskovalna aktivnost je v Evropi organizirana pretežno v obliki okvirnih programov ( Framework Programmes – FP ) .
Posamezen okvirni program običajno traja 5 let , projekti , ki se izvajajo v okvirnih programih , pa najpogosteje trajajo tri leta .
Za razliko od večine ameriških raziskovalnih programov temelji koncept okvirnih programov predvsem na sodelovanju partnerjev znotraj posameznih projektov in ne na njihovem medsebojnem tekmovanju .
Prav tako je cilj tudi razvoj sodelovanja med posameznimi projekti znotraj skupin projektov , ki pokrivajo enaka ali sorodna znanstvena področja .
Takšna razdrobljenost projektov po posameznih programih je nujno vodila k nesmotrnemu izkoriščanju raziskovalnih potencialov , precejšnji netransparentnosti raziskovalnih rezultatov in v dobršni meri tudi nezmožnosti izkoriščanja sinergičnega učinka .
V okviru petega okvirnega programa , ki se je pričel v letu 1999 , je bilo ustanovljeno posebno akcijsko področje jezikovnih tehnologij ( Human Language Technologies ) .
Informacije o dogajanju na tem področju je moč najti na spletnih straneh HLT Central ( http://www.hltcentral.org ).
V primerjavi z izvajanjem raziskovalnih projektov v ZDA so bili tudi v okviru petega okvirnega programa projekti mnogo manjši po obsegu , vključevali so manj partnerjev in običajno trajali krajši čas .
Nekatere slabosti , ki so se pokazale pri takšni organizaciji raziskovalnih aktivnosti , predvsem razdrobljenost raziskovalnih moči in nedoseganje zadovoljivega sinergičnega učinka ter želenega prenosa rezultatov raziskovalnih projektov v prakso , bodo skušale biti presežene v okviru šestega okvirnega programa .
Takšni projekti bodo po obsegu , trajanju in vrednosti primerljivi s projekti , ki jih izvajajo v ZDA .
Eden osnovnih namenov takšne organizacije projektov je gotovo združitev raziskovalnih potencialov evropskega prostora na posameznem raziskovalnem področju in doseganje kritične mase raziskovalnih moči , hkrati pa bo moč v mnogo večji meri računati tudi s sinergičnim učinkom znotraj projektov .
Cilji projektov sedaj ne bodo več ozko usmerjeni v pokrivanje potreb posameznih ciljnih aplikacij , pač pa bodo skrbeli predvsem za nadaljnji razvoj ene ali več tehnologij – kar bo največkrat predstavljalo horizontalne nivoje organiziranosti integralnega projekta , vertikalne nivoje pa bodo predstavljali izbrani projekti razvoja ciljnih aplikacij , ki bodo v večjem ali manjšem obsegu vključevali razvite tehnologije .
Očitne prednosti , ki jih ima takšen način izvajanja raziskovalnih aktivnosti v okviru šestega okvirnega programa , pa na drugi strani v mnogočem postavljajo raziskovalne skupine , ki doslej še niso sodelovale v projektih okvirnih programov , še posebej raziskovalne skupine iz držav srednje in vzhodne Evrope , v težji položaj .
Veliko število projektov , sicer z manjšim proračunom , ki so jih izvajali v prejšnjih okvirnih programih , je namreč pomenilo tudi veliko število partnerjev projektov oziroma veliko število različnih » gremijev « .
Takšen pristop lahko že opazimo pri več skupinah , ki so izvajale projekte v okviru četrtega in petega okvirnega programa .
V pripravah na izvajanje projektov v okviru šestega okvirnega programa se oblikuje nekaj iniciativ , ki bodo pokrivale veliko večino področij jezikovnih tehnologij .
Ena takšnih iniciativ je tudi skupina projektov * C-STAR , ki delno potekajo že v okviru petega okvirnega programa in pomenijo v dobršni meri pripravo na izvajanje integralnega projekta v okviru šestega okvirnega programa .
Njegov glavni cilj je zagotoviti jezikovne vire , potrebne pri razvoju tehnologije avtomatskega simultanega prevajanja govora ( speech-to-speech translation ) , ki naj bi po nekaterih napovedih postala realnost v naslednjih petih letih .
Glavni cilj projekta je zagotoviti te vire za čimveč evropskih jezikov in definirati priporočila za izgradnjo in strukturo omenjenih jezikovnih virov .
Cilj projekta je v tem smislu torej podoben cilju projekta SpeechDat II ( Van den Heuvel , 1997 ) ( Höge , 1999 ) ( Moreno , 2002 ) , katerega priporočila so danes postala neformalni standard za načrtovanje in vrednotenje baz izgovarjav .
V okviru projekta bodo izvedeni jezikovni viri za naslednjih 12 jezikov : turški , ruski , italijanski , grški , španski , katalonski , nemški , klasični arabski , hebrejski , ameriška angleščina , finski in kitajski .
Predviden obseg jezikovnih virov za posamezen jezik je nekaj deset tisoč enot , npr. slovar 50.000 besed , slovar 50.000 lastnih imen , zasnova slovarja , primernega za razvoj sistemov avtomatskega razpoznavanja govora s približno 100.000 besedami , in zasnova podobnega slovarja za razvoj sistemov avtomatske sinteze govora .
Za izbrane pare jezikov bodo zgrajeni tudi eksperimentalni dvojezični jezikovni viri , katerih namen bo določiti vrsto , strukturo in obseg potrebnih jezikovnih virov .
Pri tem bodo v veliki meri uporabljeni izsledki in sistemi projekta Verbmobil ( Wahlster , 2000 ) .
Trenutni izbrani pari jezikov so : katalonščina / ameriška angleščina , španščina / katalonščina in španščina / ameriška angleščina .
Pri tem bodo industrijski partnerji podali predviden razvoj tehnologije in storitev , ki bodo uporabljale SST komponente , raziskovalne skupine univerz in raziskovalne institucije predviden razvoj SST tehnologije v naslednjem petletnem obdobju , prav tako pa bo izdelan najustreznejši model vodenja in upravljanja integralnega projekta .
Predlagani čas trajanja projekta TC-STAR je 5 let .
Glavni cilj projekta je preseči jezikovne pregrade in razviti tehnologijo avtomatskega simultanega prevajanja .
Petino sredstev pa naj bi zagotovile nacionalne organizacije ( vlade ) iz držav partneric projekta .
Dosedanja razdrobljenost in precejšnja nekoordiniranost raziskovalnih potencialov na področju jezikovnih tehnologij v slovenskem prostoru ne daje najboljših obetov za konkurenčno raziskovanje in možnosti uspešnejšega vključevanja v projekte okvirnih programov in druge mednarodne projekte .
Za doseganje napredka na tem področju je nujno potrebno širše usklajevanje raziskovalnih interesov , saj so te smernice zelo močno prisotne tudi v okviru izvajanja integralnih projektov v prihajajočem šestem okvirnem programu , kar je moč zaznati tudi iz opisanih projektov LC - in TC-STAR .
V prvi vrsti bi bilo zato potrebno preveriti pripravljenost skupin za bolj usklajeno in povezano raziskovalno dejavnost ter nato zbrati srednjeročne in dolgoročne usmeritve ter cilje raziskovalnih aktivnosti posameznih raziskovalnih skupin in skušati najti njihov presek in komplementarnost .
S tem bi lahko prišli korak bliže k doseganju sinergičnega učinka med raziskovalnimi skupinami v slovenskem prostoru .
Vsekakor pa pri tem ne gre zanemariti tudi potreb , ki se že kažejo na tem zelo zanimivem segmentu žal precej majhnega slovenskega tržišča .
V slovenskem prostoru obstaja kar nekaj organizacij , ki bi lahko prevzele vlogo koordinatorja ali vsaj vodile forum za usklajevanje raziskovalnih interesov ter skušale prispevati k bolj povezanemu in enotnejšemu nastopu v nacionalnem in mednarodnem merilu .
Tako je Center za jezikovne tehnologije , ki deluje na Fakulteti za elektrotehniko , računalništvo in informatiko že od leta 1994 in ima mnogo izkušenj pri gradnji jezikovnih virov in sodelovanju v domačih in mednarodnih projektih četrtega in petega okvirnega programa , tudi pripravljen prevzeti takšno vlogo .
Raziskovalne aktivnosti v okviru četrtega in petega okvirnega programa EU so bile v veliki meri usmerjene k razvoju jezikovnih virov , potrebnih za razvoj sistemov jezikovnih tehnologij , in tudi k razvoju sistemov samih .
Priprave na predlaganje in izvajanje projektov v okviru šestega okvirnega programa kažejo na težnjo po združevanju vseh področij jezikovnih tehnologij in gradnji zelo zahtevnih sistemov ( npr. avtomatsko simultano prevajanje govora ) .
Pri tem predlogi v veliki meri upoštevajo že obstoječe jezikovne vire , zgrajene v predhodnih projektih , in gradijo nadaljnje raziskave na njihovi uporabi .
Jeziki majhnih narodov in narodov srednje in vzhodne Evrope pa se srečujejo z nevarnostjo vse večjega izločanja iz teh dogajanj , saj bodo zaradi običajno slabo razvitih domačih raziskovalnih aktivnostih in relativno majhne udeležbe v preteklih okvirnih programih ter neobstoječih osnovnih jezikovnih virov vse težje izpolnjevali kriterije za aktivno in enakopravno vključevanje v takšne projekte .
Precejšnja razdrobljenost raziskovalnih aktivnosti , kar gotovo velja za področje govorne tehnologije , in nepovezanost raziskovalnih skupin sta doslej onemogočali vključevanje v evropske raziskovalne projekte v večjem obsegu , saj posamezne skupine običajno niso premogle kritične mase raziskovalcev .
Če pa se želimo v prihodnje pogosteje vključevati v aktivnosti šestega in prihodnjih okvirnih programov , pa bo nujnejše tesnejše sodelovanje raziskovalnih skupin , ne samo znotraj posameznih raziskovalnih področij , pač pa vseh raziskovalnih skupin in drugih ustanov , ki v slovenskem prostoru delujejo na področju jezikovnih tehnologij .
Vstopnica – uporaba avtomatskega razpoznavanja govora v praksi .
Govorni uporabniški vmesnik M-Vstopnica temelji na avtomatskem prepoznavanju govora in prepoznavanju DTMF signalov ter na predvajanju vnaprej posnetih sporočil .
Namen članka je predstaviti konkreten primer uporabe govorne tehnologije v praksi ; predstaviti prednosti in omejitve sistemov za prepoznavanje govora na dejanskem primeru , ter predstaviti spremljajoče tehnologije kot so VoiceXML in mrežne storitve ( Web services ) , ki omogočajo uspešno integracijo sistema za prepoznavanje govora v učinkovito celoto .
M-Vstopnica je trenutno v fazi testiranja in jo je možno preskusiti na telefonski številki 041 184 184.
Razvoj storitve kot je M-vstopnica že na splošno predstavlja velik izziv , saj gre v prvi vrsti za kompleksno integracijo sicer zaprtih sistemov , kot so sistemi mobilnega operaterja in rezervacijski sistemi kinematografov , kjer ima vsaka komponenta svoje specifične zahteve in omejitve .
Uporaba naprednih tehnologij mrežnih storitev ( » Web services « ) , ki ponudniku storitve omogoča cenejše spreminjanje in prilagajanje rešitve ( hitrejša izvedba , večja fleksibilnost ) , ter tehnologije VoiceXML , ki omogoča izvedbo govornega vmesnika z dinamično adaptacijo strukture dialoga .
Takšne tehnologije sicer olajšajo nekatere tehnične težave , vendar pa hkrati odpirajo nova vprašanja , saj gre v glavnem za tehnologije , ki so v svetu zelo nove in s katerimi je v praksi zelo malo izkušenj .
Hitrost uveljavljanja govorne tehnologije na določenem jezikovnem področju je na eni strani odvisna od tehničnih vprašanj , vezanih na specifične lastnosti samega jezika , in na drugi strani od želja in pričakovanj uporabnikov , katerim bo tehnologija oziroma storitev ponujena .
Nasprotno pa je v drugih področjih , kjer so avtomatski interaktivni odzivniki še vedno redki ali se šele začenjajo uveljavljati , učinek uporabe govorne tehnologije med uporabniki zelo nepredvidljiv , saj lahko hitro vzbudi zmotna in pogosto tudi nerealna pričakovanja ter , kot posledica tega , slabo izkušnjo s storitvijo in tehnologijo prepoznavanja govora .
Mobilna telefonija je v zadnjih letih bistveno dvignila hitrost razvoja telekomunikacijskih tehnologij in pripomogla k zmanjšanju razlik v stopnji razvoja storitev v telekomunikacijah v različnih deželah , tako s tehničnega , kot tudi z uporabniškega stališča .
Podjetje HERMES SoftLab se želi s postavitvijo M-Vstopnice podrobneje osredotočiti na problematiko ponujanja rešitve preko mobilnega telefona in storiti korak naprej v razvoju telekomunikacijskih storitev v slovenskem prostoru V prispevku bo opisana zgradba in delovanje storitve M-Vstopnice ter izkušnje pri uporabi tehnologije avtomatskega prepoznavanja govora ob postavljanju storitve M-Vstopnica .
Storitev M-Vstopnica vsebuje govorni vmesnik do sistema , ki je povezan s ponudniki predstav ( trenutno samo v Koloseju in Ljubljanskih kinematografih ) .
Uporabnik storitev uporabi tako , da pokliče določeno telefonsko številko ( 041 184 184 ) , kjer lahko preko glasovnega vmesnika sliši program predstav , izbere željeno predstavo ter rezervira ali kupi vstopnice zanjo .
Kot potrdilo o rezervaciji ali nakupu prejme uporabnik sporočilo v obliki SMS .
Sistem M-Vstopnice je sestavljen v štirinivojski arhitekturi , ki za komunikacijo med seboj uporabljajo javne Internetne povezave .
Nivo govornega uporabniškega vmesnika je izvajan na Govornem Portalu ( Imperl et al. , 2001 ) , razvitem v podjetju HERMES SoftLab , ki je na eni strani povezan s telefonsko centralo , na drugi pa preko Interneta dostopa do nivoja strežnika uporabniškega vmesnika .
Opis uporabniškega vmesnika temelji na VoiceXML jeziku ; Govorni Portal izvaja opise dialogov , ki jih generira strežnik uporabniškega vmesnika .
Strežnik uporabniškega vmesnika je zadolžen za izdelavo opisa vmesnika ( VoiceXML skript ) na osnovi podatkov , ki jih prejme od nivoja poslovne logike .
Posamezni deli nivoja in povezava z nižjim nivojem je izvedena v programskem okolju Java z izdelkom e-speak .
Taka sistema sta sistem SiTi ( izdelan v Programskem ateljeju A & Z in postavljen v Koloseju ) ter sistemi na Mobitelu ( dostop do računov uporabnikov ter storitev Poštar – pošiljanje SMS sporočil ) .
Govorni vmesnik M-Vstopnice je izveden s pomočjo Govornega Portala , ki temelji na uporabi VoiceXML tehnologije ( Sharma , Kunnins , 2002 ) in dejansko predstavlja VoiceXML strežnik .
V primeru M-Vstopnice ima razpoznavalnik nalogo prepoznavati osamljeno izgovorjene besede ali fraze z velikostjo slovarja od 10 do 40 besed ali fraz .
S stališča tehnologije razpoznavanja govora to sicer ne predstavlja zahtevne naloge , vendar pa obstaja vrsta praktičnih omejitev , ki zelo otežujejo doseganje zadovoljive uspešnosti razpoznavanja kot na primer : - GSM kvaliteta govora ( velika nihanja razmerja signal-šum , manjkajoči segmenti govora , ko gre za zelo slabe zveze , kvaliteta govora , odvisna od posameznih aparatov , odmev , …
Sledilo je preizkušanje z razpoznavalnikom podjetja NUANCE , ki je bil uporabljen na enak način kot prvotni .
Ta je sicer dal boljše rezultate kot prvotno uporabljeni razpoznavalnik podjetja L & H , najboljši rezultati so bili doseženi z akustičnimi modeli razvitimi za češki jezik in za telefonsko okolje , vendar v praktičnih poizkusih še vedno ni dosegal potrebne zanesljivosti saj je uspešnost razpoznavanja znašala med 70% in 75% .
Gre za posnetke , kjer koristen govor predstavlja manjši del posnetka .
Lastni prepoznavalnik : Najboljši rezultati so bili doseženi z lastnim razpoznavalnikom , ki je že pri majhni učni bazi izgovarjav ( 40 govorcev ) močno presegel uspešnost razpoznavanja , doseženo z obema prejšnjima sistemoma , saj je bila dosežena uspešnost razpoznavanja 89% .
Razpoznavalnik govora je trenutno še v fazi razvoja , prva verzija je že uporabljena v M-Vstopnici , za drugo verzijo pa je predvideno predvsem povečanje učne baze izgovarjav .
Učna baza izgovarjav : Učna baza vključuje posnetke zaposlenih v podjetju HERMES SoftLab , ki so tako po starostni kot tudi po narečni strukturi podobni ciljni skupini - mladostniki mesta Ljubljane z okolico .
Vsak posnetek predstavlja približno 10 minut govora , posnetega preko mobilnega telefona ( branje 21 leposlovnih stavkov ter besed in fraz M-Vstopnice .
Uspeh storitve je močno povezan predvsem z uporabnostjo govornega vmesnika za končnega uporabnika .
Storitev predstavlja kompleksen sistem , ki mora uporabniku predstaviti program kino predstav ( tipično približno 50 dogodkov na dan , razdeljenih v 15 do 20 različnih filmov s tipično 3 ponovitvami ) ter od njega izvedeti več parametrov : kateri film , katera dvorana , kdaj , koliko sedežev , predel dvorane .
Po izbiri filma je možnih več scenarijev , po katerih lahko obiskovalec izbere željeno predstavo , na primer izbira filma glede na določeno uro ali glede na določeno dvorano .
Izbran je bil en sam - najpogostejši način izbire filma , tako da je prvo vprašanje o imenu filma , sledijo pa ostali podatki : kraj in čas predstave ( skupaj v enem vprašanju ) , število sedežev , itn. Po izbranem številu sedežev sistem uporabniku ne ponudi izbire sedežev , temveč mu ponudi določene sedeže in ga vpraša , če jih želi rezervirati , kupiti ali zamenjati za druge .
...
Uporabnik je o tej možnosti obveščen na začetku pogovora , v navodilih za uporabo .
Uporaba eksplicitnega potrjevanja ( » če ste izbrali Vojna zvezd , recite da ...
S tem se je odprla možnost oblikovanja daljših sistemskih vprašanj , ki se sestojijo iz kratkega , neposrednega vprašanja ter daljšega navodila , na primer : » Katero predstavo bi si radi ogledali ?
Izkušen uporabnik ve , da lahko predvajanje teh nasvetov kadarkoli prekine , neizkušen uporabnik pa si želi več navodil in ima na ta način občutek , da mu sistem stoji ob strani - ne dogaja se , da sistem postavi vprašanje , nato pa v tišini čaka na odgovor , kar lahko pri uporabnikih zbudi občutek negotovosti .
S takšnim načinom postavljanja vprašanj je omogočena uporaba vmesnika velikemu številu različno izkušenih uporabnikov .
Začetniki običajno poslušajo vprašanja in nasvete do konca , izkušenejši pa vprašanje prekinejo že takoj ob prvi predvajani besedi .
Uvedba prekinjanja govora po drugi strani odpira tudi nekaj novih problemov .
Dolžina pogovorov in uspešnost klicev .
Med preizkušanjem enega od prvih poskusnih vmesnikov se je izkazalo , da ima uporabnik občutek , da pogovor traja bistveno predolgo .
Zaradi večjega števila je bilo tudi več možnosti za napake , zaradi česar je bila stopnja uspešnosti klicev ( ko uporabnik dobi željeno informacijo ali storitev ) približno 60% .
Določena vprašanja , kot na primer vprašanje o kraju in času predstave , so bila združena : » Kje in kdaj pa si želite predstavo Vojna Zvezd ogledati ?
Izbira dneva bo dodana kasneje , ko se bo govorni vmesnik M-Vstopnice uveljavil med uporabniki kot zanesljiv način komuniciranja .
Poleg sprememb strukture dialoga so bile izvedene tudi izboljšave , ki pri uporabniku ustvarijo občutek dinamičnosti dialoga , občutek , da se pogovor hitro odvija - na mesta , kjer je sistem čakal na podatke , je bilo vstavljeno predvajanje glasbe , sam govor pa je bil posnet na bistveno bolj dinamičen način .
Povprečna dolžina pogovorov za izkušene uporabnike tako znaša manj kot 1 minuto , stopnja uspešnosti klicev pa presega 80% .
Zaradi novosti , ki jih prinaša M-Vstopnica , je ob štartu storitve potrebno računati z neizkušenostjo uporabnikov .
Poleg nasvetov , ki jih sistem predvaja uporabniku ob vsakem vprašanju ( razdelek 5.3 ) , sistem predvaja dodatna pojasnila ob težavah pri razpoznavanju ali v primeru uporabnikovega neodzivanja .
Razvoj sistema kot je M-Vstopnica je zaradi pestrosti posameznih delov že samo s tehnične plati velik zalogaj .
Rezultat je govorni uporabniški vmesnik , ki glede na rezultate začetnih raziskav med ciljnimi uporabniki , izpolnjuje vse zastavljene cilje .
Predstavljen je projekt prostih unikodnih vektorskih pisav .
Uvodoma predstavimo stanje s pisavami v prostih programskih okoljih in motive za izdelavo prostih pisav .
Osrednji del prispevka je namenjen opisu zasnove tipografije , ki vključuje pismenke iz različnih pisav .
Zaključimo s pregledom stanja projekta in načrti za delo v prihodnje .
Tako grafični sistem X Window System uporablja svojo obliko zapisa pisav , terminalski način svojo , stavni program TEX pa spet svoje .
Boljša rešitev je uporaba enotne oblike zapisa pisave , ki ga uporabljajo vsi programi za prikaz pismenk na zaslonu , pa tudi za namizno založništvo in natis na tiskalnik .
, 1999 ) ( uporabljena v sistemih MS Windows in MacOS ) , redkeje PostScript Type 1 ( Adobe Systems Incorporated , 1990 ) ( uporabljena v zdaj že opuščenem sistemu NeXTSTEP ) .
Pisave TrueType so se v zadnjih treh ali štirih letih iz več razlogov dodobra uveljavile tudi v prostih operacijskih sistemih .
Po eni strani prosti rasterizator FreeType , ki je od 4. izdaje naprej tudi del strežnika XFree86 , omogoča kakovosten izpis oz. izris teh pisav , po drugi pa je družba Microsoft vrsto let na svojih spletnih straneh brezplačno ponujala vrsto kakovostnih pisav , ki so bile kakovostne in obenem pokrivale tudi dobršen del za zahodni svet zanimivih pisav .
Potreba po prostih pisavah je po eni strani politična – prosti operacijski sistemi zahtevajo proste pisave – po drugi pa praktična : dovoljenje za uporabo , ki omogoča razširjanje nabora pismenk z novimi pismenkami in razširjanje tako dopolnjenih pisav , omogoča in spodbuja , da uporabniki sami dodajajo pismenke , katerih prvotni avtor ni vključil .
Nabori znakov v zahodni tipografski tradiciji so doživeli zanimiv razvoj ( Bigelow and Holmes , 1993 ) .
Tipografija textura , uporabljena v prvi v Evropi natisnjeni knjigi , Gutenbergovi 42-vrstični Bibliji ( 1455-56 ) , je vsebovala več kot 250 pismenk ( ob vseh črkah abecede še posebne začetne in zaključne izpeljanke ter ligature ) .
Nabor znakov s pisalnega stroja , ki je vseboval poleg 26 malih in velikih črk še števke in nekaj malega posebnih znakov , so podedovali teleprinterji , od teh pa računalniki .
Znaki obstajajo le znotraj računalnika , kot nizi v pomnilniku ali na disku , v skladišču .
Standard Unicode se ukvarja zgolj s kodami znakov .
V osemdesetih , še bolj pa v devetdesetih letih 20. stoletja se trend krčenja naborov znakov obrne , k čemer sta verjetno prispevala tudi internet in splošna globalizacija .
Če smo konkretnejši : nobene standardne metode ni , kako s poštnim programom , ki obvlada samo osembitne nabore znakov , pošljemo elektronsko sporočilo , v katerem bi lahko slovensko besedilo ( če ne drugega , naše ime ) kombinirali s francoskim , ali , bognedaj , ruskim .
Prvi je združil nekaj ( pretežno ameriških ) proizvajalcev računalniške opreme , med njimi Adobe , Apple , IBM , Microsoft , Oracle , Sun itd. , drugi nacionalne organizacije za standarde , oba pa sta si zastavila isti cilj – enoten kodirani nabor znakov , ki bo zajel vse pisave sveta .
Poskus oblikovanja tipografije , ki bi poleg latiničnih črk zajemala še druge pismenke , nikakor ni prvi te vrste , vseeno pa so bili takšni poskusi redkejši , kot bi morda pričakovali .
Čeprav vprašanja , kot so berljivost črk s tipografskimi zaključki proti tistim brez njih in podobna občasno razvnemajo tipografske kroge , pa je jasno – glede na to , da so tudi hebrejska , arabska , armenska in indijske pisave , ki se v zasnovi drastično razlikujejo od latinice , približno enako berljive kot latinica – da so tovrstne razlike malenkostne .
Hitro postane jasno , da si pri zasnovi unikodne tipografije ne moremo pomagati s historičnimi slogi ( renesančni , baročni ipd. ) , ki jih poznamo iz latinične tipografije , saj večina sveta teh zgodovinskih slogov ne pozna , poskus njihove razširitve na nelatinične pisave pa je enako nasilen , kot bi bil denimo poskus prilagoditve latinice kufskemu slogu .
Tipografski zaključki so izum rimskih kamnosekov , ki so z manjšo potezo , prečno na glavno potezo , to zaključili .
Iz navpičnih potez je namreč dež močneje izpiral barvo , na vodoravnih potezah pa se je nasprotno nabiral prah , zaradi česar so učinkovale vizualno močnejše .
V projektu prostih unikodnih pisav smo se zato omejili na tri osnovne tipe pisav : eno enakokoračno , pri kateri so vse pismenke enako široke ( latinični del je povzet po tipografiji Courier ) in dve proporcionalni , od tega eno z enakomerno tipografsko potezo in eno z modulirano potezo , katerih latinična dela sta modelirana po tipografijah Helvetica in Times .
Družine so poimenovane Free Monospaced , Free Sans in Free Serif .
Natančno kakšna je tehnična izvedba ( PostScript Type 1 denimo uporablja kubične B'ezierove zlepke , True-Type pa kvadratne ) je manj pomembna , saj se da z matematičnimi operacijami v dobršni meri zapise prevajati med seboj , čeprav se pri takšnih transformacijah resda navadno izgubijo finese , kot so " namigi " ( angl. hints ) pri pisavah .
OpenType je nekakšen krovni zapis , znotraj katerega lahko uporabimo obe obliki vektorskega zapisa , tistega iz zapisa TrueType in tistega iz PostScript Type 1.
Glede na to , da je večina prostih pisav dostopnih v tej obliki , je podpora zanjo dragocena , saj pri tem ne izgubimo informacij o namigih .
V latinični tipografiji to omogoča tipografske finese , kot so ligature , denimo tista na sliki 1 ( resnici na ljubo je treba priznati , da ravno ligatura fi ni najboljši zgled , saj ima v naboru Unicode svojo kodo , U+FB01 ) .
Brez ligatur si namreč indijske tipografije ni mogoče predstavljati .
Rezultati .
Konec februarja 2002 je odbor skrbnikov strežnika savannah.gnu.org potrdil skladnost s cilji projekta GNU in delom fondacije za prosto programje in ocenil projekt kot primeren za gostovanje na strežniku .
Trenutno vsebujejo pisave delo okrog 25 različnih avtorjev , ki so pristali na vključitev njihovega dela v projekt .
Sprotno obveščanje o delu na projektu poteka prek dveh dopisnih list z nekaj deset naročniki iz različnih koncev sveta .
Natančnejši pregled zbranega gradiva je na voljo na spletni strani projekta , http://www.freesoftware.fsf.org/freefont/resources.html .
Zaradi svoje specifičnosti ( ligature ) so kot poseben izziv kažejo indijske pisave , ki jim bomo zato v prihodnjih letih verjetno namenili največ pozornosti .
Iz več razlogov pa so razmeroma nizko na prioritetni lestvici vzhodnoazijske ideografske pisave : na voljo je že več pisav s kitajskimi oz. japonskimi pismenkami ; standard ISO 10646 / Unicode se zaradi obstoječih lokalnih standardov v tem delu sveta počasi uveljavlja , in ne nazadnje , dodajanje nekaj deset tisoč pismenk poveča datoteke s pisavami do mere , ko z današnjimi računalniškimi zmogljivostmi delo postane neudobno .
Prvi rezultati kažejo , da lahko morebiti vse naštete pisave zasnujemo kot enako visoke ( slika 2 ) .
Zgled vektorskega zapisa pisave : ligatura fi z označenimi nadzornimi točkami ( Knuth , 1986 ) .
Naglaševanje nepoznanih besed pri sintezi slovenskega govora .
V članku je predstavljen dvostopenjski model naglaševanja nepoznanih slovenskih besed , ki je uporabljen v sistemu Govorec za sintezo slovenskega govora .
Sledi popravljanje tako dobljenih rezultatov glede na število naglasov v besedi in dolžino besede .
Eksperimenti so potrdili tezo , da je naglaševanje besed v slovenskem jeziku precej kompleksen problem , ki ga z relativno preprostimi pravili ni mogoče učinkovito rešiti .
Posamezna beseda ima lahko različno število naglašenih mest .
Mesto naglasa je določeno za vsako besedo posebej in velja , da se ga naučimo hkrati z učenjem jezika .
Poleg tega velja omeniti , da se lahko posamezna besedna oblika naglašuje na več različnih načinov .
Na njihovo pravilno naglaševanje in izgovarjavo lahko sklepamo le iz konteksta .
Takšne besedne oblike se med seboj ločijo po besedni vrsti , spolu , sklonu , številu ali pa le po pomenu .
Do sedaj so se v vseh sintetizatorjih slovenskega govora poleg relativno skromnih slovarjev izgovarjav ( nekaj deset tisoč najpogostejših besed ) uporabljala še zelo preprosta pravila , ki so temeljila na nekaj seznamih ( breznaglasnice - enklitike in proklitike ; pripone in predpone - večinoma nenaglašene ; začetnice - večinoma naglašene ; končaji besed z značilnimi naglasnimi mesti ) ( Toporišič , 1984 ) in statistikah , ki so podajale verjetnosti naglasov za posamezni zlog glede na število zlogov v besedi ( Gros , 1997 ; Šef , 1998 ) .
V sistemu GOVOREC naglaševanje besed v osnovi temelji na slovarsko podprti analizi besedila ( Šef 2001 ) .
Za vse besede , ki so v slovarju , prepišemo mesto in vrsto tako dinamičnega kot tonemskega naglasa ( ob upoštevanju oblikoslovnih podatkov in pravil za obravnavo homografov ) .
Izkazalo se je , da preprosti modeli naglaševanja nepoznanih besed ne dajo želenih rezultatov .
Učinkovita pravila tudi zmanjšajo obseg slovarja ( ta vsebuje le še besede , ki jih pravila ne pokrivajo ) , s čimer se zmanjšajo potrebe po pomnilniku .
Sledi popravljanje tako dobljenih rezultatov glede na število naglasov v besedi in dolžino besede .
Za vsako poddomeno smo zgradili ločen model ( odločitveno drevo ) .
Za odločitvena drevesa smo se odločili , ker jih lahko zlahka pretvorimo v pravila .
Učna in testna množica sta bili ločeni .
Rezultate poizkusov smo izračunali na nivoju zlogov in na nivoju besed .
Primer : ' okopavam ' Atributi - samoglasnik ' a ' : Št. zlogov v besedi : 4 Opazovani zlog : 3 Pripona : - avam Razred - pripona : Pripona – predzadnji zlog Predpona : - Razred - predpona : - Končnica : - am Levi kontekst 3 : C-UV-P , - , - , - , - , - , k , - , - Levi kontekst 2 : V , o , - , - , - , - , - , - , - Levi kontekst 1 : C-UV-P , - , - , - , - , - , k , - , - Desni kontekst 1 : C-SN , - , v , - , - , - , - , - , - Desni kontekst 2 : V , a , - , - , - , - , - , - , - Desni kontekst 3 : C-SN , - , m , - , - , - , - , - , - Levi samoglasnik 2 : o Levi samoglasnik 1 : o Desni samoglasnik 1 : a Desni samoglasnik 2 : - o k o p á v a m 312 4 Razred-samoglasnik ' a ' : naglašen Legenda : V - Samoglasnik C - Soglasnik SN – Zvočnik VO - Zveneč UV - Nezveneč F - Zapornik A - Zlitnik P - Pripornik Kontekst = Tip , Samoglasnik , Zvočnik , Zveneč zapornik , Zveneč zlitnik , Zveneč pripornik , Nezveneč zapornik , Nezveneč zlitnik , Nezveneč pripornik Slika 1.
Atributi za tretji samoglasnik ( ' o ' ) za slovensko besedo " okopavam " Podatki .
Tak slovar mora obsegati vse dopustne izgovarjave posamezne besede , in to v vseh njenih pojavnih oblikah .
Slovar slovenskega knjižnega jezika ( SSKJ ) vsebuje le besede v njihovih osnovnih oblikah , zato smo bili prisiljeni zgraditi nov fonetični slovar v elektronski obliki .
Ta vsebuje okoli 600.000 besednih oblik , kar ustreza 20.000 lemam .
Kot osnovo smo uporabili MULTEXT-East leksikon ( Erjavec , 1998 ) , ki smo ga dopolnili s podatki o mestu in tipu tako dinamičnega kot tonemskega naglasa .
V vseh teh primerih smo delo opravili ročno .
Kot rezultat smo dobili 700.340 zlogov ( samoglasnikov ) .
Učna množica je vsebovala 140.821 besed ( 513.309 samoglasnikov ) , testna množica pa 51.311 besed ( 187.031 samoglasnikov ) .
Pri tem so besede ( osnovne oblike in izpeljanke ) v testni množici pripadale različnim lemam kot besede v učni množici .
Učna in testna množica sta bili razdeljeni v več podmnožic glede na samoglasnike in soglasnik ' r ' .
Število primerov v tako dobljenih podmnožicah prikazuje Tabela 1.
A E I O U R Učna množica 142041 119227 116486 100295 28104 7156 Testna množica 50505 47169 41156 35513 9870 2818 Vsak primer je opisan s 66 atributi , vključno z razredom , ki predstavlja tip dinamičnega naglasa .
Dejavniki , ki ustrezajo preostalim 65 atributom so : število zlogov v besedi ( 1 atribut ) , položaj opazovanega samoglasnika ( zloga ) v besedi ( 1 atribut ) , prisotnost predpone oz. pripone v besedi in razreda , ki mu pripada ( 4 atributi ) , končnica besede ( 1 atribut ) , levi in desni kontekst opazovanega samoglasnika ( tip in ime grafema za tri znake levo in desno , dva samoglasnika levo in desno od opazovanega samoglasnika ) ( 58 atributov ) .
Dosedanje metode učenja izgovarjave nepoznanih besed temeljijo na predpostavki , da se vsa potrebna informacija v celoti nahaja v nizu znakov , ki sestavljajo besedo .
Za pravilno izgovarjavo besede tako potrebujemo še njene oblikoslovne podatke .
Naš sintetizator govora vsebuje oblikoslovni označevalnik , ki je sposoben obravnavati nepoznane besede , vendar trenutno še ni dovolj zanesljiv ( zaradi premalo obsežnega morfološko označenega korpusa besedil ) .
Ugotovili smo , da dobimo boljše rezultate in bolj strnjena odločitvena drevesa , če predstavimo kontekst opazovanega samoglasnika s tipom grafema ( samoglasnik ali soglasnik , tip soglasnika ) in ne z imenom samega grafema .
Primer prikazuje Slika 1.
Na šestih domenah , ki ustrezajo petim samoglasnikom in soglasniku ' r ' , smo učili odločitvena drevesa ( DT in boosted DT ) , kot je to implementirano v See5 sistemu ( Rulequest Research .
Vrednotenje rezultatov smo opravili na ločeni testni množici .
Oba načina učenja odločitvenih dreves ( DT in boosted DT ) smo primerjali med seboj in sicer za parametre rezanja dreves med 2 in 1000 minimalnimi primeri v listih .
Glede na ( 1 ) in ( 2 ) lahko zaključimo , da je tako dobljena drevesa težko interpretirati oz. da ne obstajajo neka preprosta pravila naglaševanja .
Napaka pri prvi metodi učenja ( DT ) ob različnih parametrih rezanja dreves Zaključek .
Število primerov v učni in testni množici .
Odločitvena drevesa – min .
Št. primerov v listih .
Velikost odločitvenih dreves ( DT ) iz Tabele 2.
Dokler pri delu uporabljamo en sam slovar in je iskanje omejeno le na iskanje po geslih oz. iztočnicah , je delo z običajnim slovarjem v knjižni obliki relativno enostavno in za izkušene uporabnike tudi relativno hitro .
Prvi elektronski slovarji so se pri nas pojavili že pred letom 1990 , ko so bili osebni računalniki za današnje pojme še zelo počasne in okorne naprave .
Nadaljnji razvoj računalniške tehnologije in možnosti , ki jih je ta nudila , so pripeljale do razvoja nove generacije elektronskih slovarjev , ki jih predstavlja program ASP32 .
Zaradi vse večjega zanimanja založnikov in njihovih specifičnih potreb in zahtev je nastal tudi vzporedni sistem MKZ , ki v osnovi ponuja enake možnosti , je pa bolj usmerjen množičnim uporabnikom .
Štirje slovarji v enem , ki se poleg tega lahko dodatno povezuje še z drugimi slovarji iz sistema ASP32 .
Za razvoj jezikovnih tehnologij je ključnega pomena ustrezna infrastruktura .
Brez zadostnega števila ustrezno urejenih jezikovnih podatkov si razvoja in izdelave splošno uporabnih programov ter sistemov s področja jezikovnih tehnologij res ne moremo predstavljati .
Iz samih besedil v elektronski obliki , če ta niso enotno urejena in zadosti obdelana , prav veliko podatkov ne moremo pridobiti .
S svojimi 100 milijoni besed je v tem trenutku največji slovenski korpus , z ustreznimi orodji za iskanje in dodatne obdelave konkordančnih spiskov pa zagotovo najmočnejše orodje za analizo slovenskega jezika .
Osnovne enote sistema ASES so med seboj povezani pojmi , preko katerih se slovenske besede povezujejo z besedami v drugih jezikih .
Pojmi poleg nekaterih pomenskih in drugih statističnih informacij vsebujejo še povezave na ustrezne besede oz. besedne zveze , sinonimne in antonimne povezave itd.
Same besede vsebujejo osnovne morfološke informacije ter podatke o zlogovanju in izgovorjavi .
ASES torej združuje pojmovnik , enega ali več tezavrov , besednjak , slovar sinonimov , enojezični , več dvojezičnih in večjezični splošni slovar , terminološke slovarje , slovar zlogovanja , leksikon izgovorjav in še kaj .
Večino podatkov je v ASES ob sicer veliki pomoči ustreznih podzbirk in programov še vedno potrebno vpisati ali vsaj preveriti ročno , zato je gradnja tako velikega sistema izredno počasna in zahteva veliko jezikovnega znanja .
Vendar ko enkrat vnesemo zadostno količino podatkov , lahko z ustreznimi orodji iz take baze enostavno in hitro izločimo podatke , ki jih v danem trenutku potrebujemo za določen program , npr. črkovalnik , delilnik , sintetizator govora ali prevajalni sistem .
Eno od področij , kjer potrebe presegajo zmožnosti , je prevajanje slovenskih besedil v tuje jezike in obratno .
Prihajajoče politične in ekonomske integracije potrebe bo prevajanju še posebej povečujejo .
Prevajalni sistemi se po načinu delovanja v grobem delijo v dve skupini .
Tudi funkcionalno prva verzija še ne omogoča vrste dodatnih funkcij , ki jih imajo tovrstni tuji programi , ampak le osnovne , ki omogočajo kolikor toliko solidno prevajanje z upoštevanjem osnovnih slovničnih pravil obeh jezikov .
Ker zasnova celega sistema oz. njegovih programov temelji na strukturi odjemalec-strežnik , lahko prevajalno jedro po potrebi integriramo v različne aplikacije , tako spletne , mobilne , mrežne ...
Sporazumevanje z računalnikom v naravnem jeziku .
V enem in drugem primeru sporazumevanje poteka v obliki stavkov , oblikovanih po pravilih določenega jezika .
Za iskanje določene informacije s pomočjo računalnika je včasih potrebna vrsta različnih operacij in seveda določena količina znanja za izvedbo le-teh .
Cilj projekta KOLOS je ustvariti okolje in orodja , s pomočjo katerih bi bila komunikacija med človekom in računalnikom enaka komunikaciji med ljudmi .
Seveda je popolna uresničitev takega cilja verjetno nemogoča , že danes pa je mogoče uresničiti nekatere osnovne dele takega sistema , ki bi marsikomu olajšala posredovanje in pridobivanje informacij , za kar pravzaprav pri medsebojni komunikaciji gre .
Preko takega sistema dialoga ( vprašanje-odgovor ) bi bilo že ob današnji tehnologiji pravzaprav mogoče posredovati praktično vse , od tekstovnih in govornih informacij , do slik , animacij in videa .
Osnovna struktura sistema KOLOS je sestavljena iz treh delov .
Naloga tega dela je posredovati vprašanja in odgovore med uporabnikom in jedrom sistema KOLOS .
To v osnovi omogoča klic treh osnovnih funkcij jedra sistema , ki na zastavljeno vprašanje v obliki stavka vedno odgovori z ustreznim odgovorom .
Ta je seveda odvisen od drugih dveh delov .
Drugi del sistema je komunikacijski del .
Ta je sestavljen iz jedra in vhodno-izhodnih ( V / O ) modulov .
Načeloma bi bil tak modul lahko napisan v kakem znanem programskem jeziku , vendar bi bila taka rešitev neuporabna , saj je glavni problem tega dela obvladovanje osnovnih elementov jezika , česar pa obstoječi programski jeziki ne znajo .
Zato smo razvili poseben programski jezik , s pomočjo katerega laže obvladujemo probleme komunikacije v naravnem jeziku , v našem primeru slovenščini .
Če je za odgovor na zastavljeno vprašanje potrebno posredovanje ali klic tretjih funkcij , programov ali baz podatkov , potem moramo v sistem vključiti še tretji , tj. informacijski del .
ARTI je bil razvit v okviru raziskovalnega projekta SPECO programa INCO-Copernicus .
Glavni namen projekta je bil razviti sistem , ki bo v pomoč pri učenju in vadbi slušno in govorno prizadetim otrokom .
Predstavljen sistem pa omogoča tem otrokom nadzorovanje in izboljšanje lastne izgovarjave s procesiranjem izgovorjenih glasov in slikovnim prikazom vsebine njihove izgovarjave .
Osnovni del sistema za učenje je razdeljen na dva dela .
Proces učenja je zasnovan tako , da vodi otroka od osnovnih predgovornih vaj na začetku do učenja izgovarjave celotnih stavkov .
Sistem je namenjen predvsem učenju otrok , zato sta vadba in učenje izvedena v obliki igre .
Program upošteva tradicionalne metode učenja izgovarjave otrok s slušnimi in govornimi motnjami .
Testiranje programa je bilo izvedeno s pomočjo centra za sluh in govor v Mariboru v dveh testnih skupinah .
Rezultati testiranja so pokazali za 20 % hitrejše učenje pri gluhih otrocih , ki so uporabljali sistem ARTI .
V zadnjem času je v uporabi vse več prostih črkovalnikov , od katerih jih je večina primerna tudi za rabo v slovenskem jeziku .
Posebnost slovenskega jezika v primerjavi z angleščino , za katero je na voljo večina črkovalnikov , je bogata pregibnost besed , ki zahteva , da črkovalnik obvladuje veliko število besednih oblik .
Če za osnovno rabo zadošča , da angleški črkovalniki hranijo približno 30 tisoč besed , je za slovenski jezik takšna številka nezadostna , potrebujemo vsaj desetkrat toliko besednih oblik .
Črkovalniki Urejevalniki Ispell Aspell + pspell New aspell Myspell OpenOffice √ KOffice √ abiword √ emacs √ √ √ vi √ √ √ pine √ √ √ sylpheed √ √ √ Preglednica prikazuje , kateri črkovalniki so vgrajeni v katerega od prostih urejevalnikov Poglavitna ovira pri uporabi prostih črkovalnikov pri slovenščini je bilo pomanjkanje dobrih seznamov pravilnih besednih oblik .
Dober seznam ima naslednje lastnosti : - vsebovati mora vse besede iz najpogostejše dnevne rabe ( časopisi , osebno dopisovanje , uradni dopisi ) , - seznam mora vključevati sodobne pravilne besede ( na primer taliban ) in odsvetovati neustrezne besede ( denimo zgoščenka ) , - seznam mora vsebovati pogostejša lastna imena , - v seznamu ne sme biti zavajajočih redkih besed , ki so morda pravilne , a podobne napačno pisanim pravilnim besedam ( redka neobčevalna beseda brezsen ) .
Zaželeno je , da nam črkovalnik omogoča naše pogosto rabljene besede dodati v seznam pravilnih besednih oblik .
Te seznam je na voljo na strani http://nl.ijs.si/GNUsl .
V sodelovanju s podjetjem Amebis in s podporo Ministrstva za informacijsko družbo je skupina za slovenjenje pri društvu Lugos pripravila obsežen pregledani seznam besednih oblik , ki ga dopolnjuje seznam znanih napačnih besed ( na primer živlenje ) .
V nasprotju s prejšnjim seznamom so v tem zajete vse besedne oblike pregibnih besed .
Pri ocenjevanju kakovosti seznama se pokaže , da je besedišče , ki obsega 1.163.826 besednih oblik ( 14.638.738 znakov ) , povsem primerno za vsakdanjo rabo in tudi za pregledovanje strokovnega jezika .
Seznam napačnih besed pa zajema 10.478 napačnih besed , zapisanih s skupaj 128.323 znaki .
Za naštete črkovalnike so pripravljeni distribucijski paketi za namestitev v operacijski sistem Linux , dostopni pa so na strani http://nl.ijs.si/GNUsl .
Novejši projekt je slovenjenje OpenOffice.org , ki se od KDE razlikuje v več podrobnostih , s pomočjo programa Smart pa lahko uporabljamo že obstoječo bazo prevodov tudi v tem projektu .
Ker so ta okolja namenjena običajnim uporabnikom , je lokalizacija precej bolj pomembna kot pri specializiranih orodjih za administratorje .
Poleg dostopnosti kode nam pri projektu pomaga še dejstvo , da ga razvijajo ljudje s celega sveta , tako da se že razvijalci ( večinoma ) zavedajo pasti , ki čakajo prevajalce .
V različici KDE 3.0.2 jih je bilo na primer že 43 , še nekaj novih pa se bo pridružilo v različici 3.1.
Poleg tega projekti niso vezani na države ( primer je poskus prevoda KDE v kurdščino ) , ponujajo pa možnost lokalizacije tudi manjšim narodom , ki s tržnega stališča niso dovolj zanimivi .
V tem članku želimo predstaviti osnove slovenjenja projektov KDE in OpenOffice.org , orodja in standarde , ki se pri tem uporabljajo , in osnove samih projektov , v okviru katerih poteka delo .
KDE ( The K Desktop Environment ) je prijazno grafično okolje za Linux / UNIX , ki je se je pričelo razvijati jeseni leta 1996.
Okolje ponuja tudi vrsto možnosti za lažji prehod uporabnikov z drugih operacijskih sistemov .
Projekt KDE je že v sami osnovi zasnovan tako , da omogoča čim lažjo lokalizacijo v množico jezikov , ki se razlikujejo ne le po uporabljenih pisavah ampak tudi po slogu pisanja ( to velja za arabščino in hebrejščino , ki se pišeta od desne proti levi , kot tudi za vzhodnoazijske jezike , kot sta kitajščina in korejščina z uporabo pismenk ) .
Ti vse datoteke shranjujejo v kodiranju UTF-8 , kar povrhu vsega omogoča avtomatizacijo številnih opravil , ki bi jih sicer morali izvajati člani prevajalskih skupin : samodejna ekstrakcija novih sporočil , ki poteka enkrat dnevno , in zlivanje ustvarjenih predlog z obstoječimi katalogi , gradnja paketov in njihova objava , izdelava kataloga vseh prevodov , pretvorba med formatoma XML DocBook in PO in podobno .
Prevajalci tako lahko vsak dan naložijo kataloge sporočil in prevedejo nova sporočila oziroma popravijo stara , kar omogoča delo " v živo " .
To pa hkrati pomeni , da lahko hkrati z angleško različico izidejo tudi vse ostale , ki izpolnjujejo pogoje .
Pogoji , ki jih mora jezik izpolnjevati , so naslednji : popolnoma prevedena paketa kdelibs.po in desktop.po ter 90% prevedenega paketa kdebase .
Tako sta sledili različici KDE 3.0 še različici 3.0.1 in 3.0.2.
Norme določa in nadzoruje korodinator kde-18n-doc , ki skrbi tudi za komunikacijo z razvijalci in sodeluje z upraviteljem izdaje .
Da se prevajalcem omogoči usladitev prevodov , zadnja dva tedna pred izdajo razvijalci ne smejo več spreminjati grafičnega vmesnika , za nujne popravke pa rabijo dovoljenje kde-i18n-doc .
Jeziki so tako označeni na primer po standardu ISO 639 ( ?
) , za zapis pomoči se uporablja XML DocBook , za ekstrakcijo sporočil pa skrbi orodje gettext .
Še ena rešitev , ki je posebnost KDE , pa je je pretvorba formata XML DocBook v format PO ( gettext ) .
Razlog za to je dejstvo , da je za format PO na voljo obsežna infrastruktura , ki skrbi za samodejno zlivanje različic , ki je za XML DocBook preprosto še ni .
Poleg teh , ki tečejo samodejno na strežniku KDE ( so pa na voljo tudi v paketu kdesdk , primer je xml2pot ) je poglavitno orodje prevajalcev KBabel .
Podprte so seveda tudi vse lokalne nastavitve , kot je tipkovnica , zapis datumov in števil ter valute .
Uporabniški vmesnik ( GUI ) je preveden skoraj v celoti ( manjkajo le nekateri bolj eksotični program iz novih paketov ) , preveden pa je tudi del dokumentacije , predvsem osnove uporabe okolja ( Uporabniški priročnik , pomoč za datotečni upravljalnik in spletni brskalnik in za nadzorno središče ) .
Tu velja poudariti , da je podvajanja fraz zelo malo , saj so takšne , ki se pojavljajo na več mestih večinoma prestavljene v eno samo datoteko - kdelibs.po ( ki je zato tudi pogoj za uvrstitev jezika ) .
Sama koda prevodov tako zavzema preko 11MB podatkov in če odštejeno originalna anglešla sporočila in dodatne podatke v datotekah to še vedno predstavlja okoli 4 milijone znakov .
Prevajalec s strežnika cvs.kde.org pobere zadnjo različico prevodov in jo v KBablu prevede .
Za pomoč lahko za samodejno prevajanje 1 uporabi bazo , ki jo ustvari KBabel ali pa program Smart , ki ga je napisal Andraž Tori .
Ker projekt KDE ne omogoča neomejenega dostopa za pisanje v CVS ( v skupini ga imajo trije člani ) morajo ostali prevajalci poslati datoteke nekomu , ki ga ima , da jih uvrsti zanje .
n na začetku sporočila nam pove , da gre za množinske oblike , ki jih moramo oblikovati ustrezno jeziku , v katerega prevajamo ( za slovenščino so to 4 oblike ) .
Od KDE 2.1 dalje poteka proces pravzaprav skoraj povsem enko , kot prevajanje grafičnega okolja .
Osnovne ( ¡ chapter ¿ , ¡ title ¿ itd. ) pretvorba iz XML v PO skrije , nekatere vgnezdene pa lahko še vedno srečamo in jih seveda ne smemo pokvariti , saj lahko ena sama napaka prepreči generacijo celotnega dokumenta , zato se skladnost datotek preveri še z orodjem updateXML , ki generiran nazaj datoteko XML in jo tudi preveri , ali ustreza opisu ( definiciji ) .
Za prevajanje v slovenščino smo izbrali angleški jezik .
Iz te datoteke je potrebno izluščiti vsebino treh polj , sporočila prevesti in jih uvrstiti na enako mesto v besedilni datoteki .
Ta korak je prepuščen prevajalcem .
Za vsako sporočilo dobimo dve vrstici datoteki POT - v prvi je vsebina sporočila ( msgid ) , v drugi pa prazen prostor za prevedeno sporočilo ( msgstr ) .
Posamezne POT datoteke prevajalec najprej delno samodejno prevede s pomočjo spletnega vmesnika Smart , preostanek sporočil pa je potrebno prevesti ročno v enem od urejevalnikov besedil .
Stanje prevoda .
Prvi korak pri prevajanju OpenOffice.org je uspešno preveden slovar pogosto uporabljenih besed / fraz v programskem paketu OpenOffice.org .
Pred končno prevedeno različico bo potrebno testiranje celotnega paketa , med drugim tudi zato , ker v posameznih primerih ni jasno razviden kontekst sporočila in se bo zagotovo pojavilo nekaj nesmiselnih prevodov .
Poleg samega prevajanja grafičnega vmesnika je bil prilagojen tudi črkovalnik .
Postavljena je bila spletna stran http://openoffice.lugos.si z informacijami o stanju prevoda in novicami .
Po prevedenem grafičnem vmesniku bo prvi korak vzpostavitev prevajalske skupine za prevajanje trenutno dostopne dokumentacije , ki obsega navodila za namestitev paketa , vodiče za začetek dela s programi v paketu , pogosto zastavljena vprašanja ( FAQ ) in nekaj predlog za posamezne programe v paketu .
Kdor aktivno sodeluje pri prevajanju OpenOffice.org , je naveden na spletni strani http://openoffice.lugos.si v rubriki " Trenutno aktivni prevajalci " .
Zahvala gre Andražu Toriju za izvrstno orodje Smart in hitro realizacijo želja in pripomb , celotnemu dopisnemu seznamu lugos-slo@lugos.si za nasvete in predloge pri prevajanju , organizacijskemu odboru Lugos za vsesplošno pomoč , podjetju Agenda Open Systems za pomoč pri prevajanju ob pravem času in za celotno lektoriranje , MID za podporo pri projektu prilagoditve črkovalnika in vsem , ki kakorkoli podpirajo prevajanje paketa in njegovo uveljavitev .
Pri prevajanju programov z odprto kodo je še posebej privlačna možnost , da lahko uporabimo že obstoječe prevode sorodnih programov ali okolij .
Uporaba baze KDE ( ki je najobsežnejša ) v GNOME zaradi majhnih razlik ni bila dovolj preprosto izvedljiva , zato je nastalo orodje Smart .
Tako lahko zamenja bližnjice iz KDE (&) s tistimi iz GNOME , briše komentarje , prilagaja velike in male črke in podobno .
Program omogoča uvažanje baz tako iz projekta KDE , GNOME kot tudi iz OpenOffice.org ( ki ima še nekaj svojih posebnosti ) .
Z zadnjo različico ob uspešno prevedenih sporočilih prikaže tudi , iz katerega dela podatkovne baze prevodov je bilo prevedeno sporočilo vzeto ( " G " za Gnome , " K " za KDE in " O " za OpenOffice.org ) .
Poleg tega program omogoča pregled baze , kjer lahko iščemo podvojena sporočila ( kar je uporabno za usklajevanje izrazja ) .
V okviru projekta je bil izdelan tudi spletni vmesnik , ki omogoča uporabo programa tudi iz okolij , v katerih ga iz različnih razlogov ( različice knjižnic , starejše distribucije ) nimamo nameščenega .
Prosta programska oprema omogoča zainteresiranim posameznikom vključitev v že obstoječe ali ustvarjanje novih projektov lokalizacije .
Rezultat tega je poleg končnega prevedenega programskega paketa tudi pojavitev orodij , ki prevajalcem olajšajo delo in prihranijo čas .
V zadnjem letu je skupina za slovenjenje proste programske opreme pri društvu LUGOS pridobila nekaj novih članov , ki so poleg pomoči pri obstoječih projektih začeli prevajati spletni brskalnik Mozilla .
Uvod : V letu 2002 je Ministrstvo za informacijsko družbo razpisalo podporo zanimivim projektom .
Projekt sta izvedla podjetje CDE nove tehnologije in Institut Jožef Stefan ( IJS ) .
Poleg storitve informacijske družbe , ki nudi prek telefona kar nekaj funkcij računalnikov , je sistem namenjen slepim in slabovidnim , ki lahko na njim dostopen način pridobijo raznovrstne informacije .
Motivacija : Projekt po vzoru interneta vendar prek telefona predstavlja platformo za nudenje informacij in storitev informacijske družbe ( ID ) .
Sistem omogoča , da uporabnik posluša poljubno internetno stran , prebere svojo elektronsko pošto in še več drugih funkcij .
Projekt je zastavljen dolgoročno s predvidenim integriranjem v celovit sistem E-prostor .
Delovanje sistema : Trenutno sistem nudi naslednje osnovne funkcije : branje poljubne internetne strani ( naslov se vnese preko tipkanja ali izbere iz imenika ) , branje elektronske pošte , nastavljanje profila uporabnika ( personalizacija vsebin ) , poslušanje umetno sintetiziranega besedila .
Del pogostih informacij je predposnet , del pa dinamično generiran iz različnih virov - Word , internet , XML .
V prihodnosti bodo dodane tudi določene storitve , recimo pošiljanje dokumentov ( obrazcev ) na faks , tiskalnik oz. internetni naslov , storitve e-poslovanja itd.
Cena klica ne bo enotna , predvsem za storitve javne uprave bo klicanje brezplačno .
Zaenkrat je v uporabi še stara verzija ( Šef , 1998 ) , ki temelji na difonski sintezi ; skupaj s podjetjem Amebis pa že pripravljamo nov , precej izboljšan in bolj naravno zveneč sistem .
Stara verzija Govorca ( brez obsežnega grafemsko-fonemskega slovarja , besedne in stavčne analize , brez naprednega nastavljanja prozodije ter brez možnosti izbire glasov in korpusne sinteze govora ) je v nekomercialne namene brezplačno dostopna preko interneta ( http://ai.ijs.si/ Govorec / ) .
Prenos razpoznavalnika govora na nov jezik in vpliv jezikovnih skupin .
V članku predstavljamo rezultate raziskave o uspešnosti prenosa obstoječih akustičnih modelov na nov jezik , ne da bi uporabili govor v novem jeziku za učenje ali adaptiranje akustičnih modelov .
Obstoječe večjezične akustične modele za slovenski , nemški in španski jezik smo zgradili z uporabo odločitvenih dreves na osnovi skupnih fonetičnih skupin .
Tako pripravljene večjezične akustične modele smo uporabili za razpoznavanje italijanskega govora .
Uporabili smo pet različnih načinov preslikave .
S prenesenimi večjezičnimi akustičnimi modeli smo v najboljšem primeru dosegli 55.98% napako razpoznavanja besed , medtem ko je znašala napaka razpoznavanja besed italijanskega referenčnega razpoznavalnika govora 34.32% .
Z dodatno analizo rezultatov smo preverili , kako jezikovne skupine , v katere spadajo posamezni jeziki v raziskavi , vplivajo na uspešnost prenosa razpoznavalnika govora na nov jezik .
Z nenehnim razvojem tehnologije prihajajo vedno bolj v uporabo tudi jezikovne tehnologije ( Johnston , et al. , 1997 ) in z njimi avtomatsko razpoznavanje govora .
V primeru izgradnje govorno vodene aplikacije , ki je namenjena posredovanju informacij večjemu številu uporabnikov ( razpoznavanje govora neodvisnega govorca ) , je velikokrat smiselno vključiti tudi podporo za avtomatsko razpoznavanje govora v različnih jezikih .
Na takšen način lahko aplikacijo uporabljajo tudi tuje govoreči uporabniki .
Zagotovitev govorne baze za vsak posamezen jezik je v večini primerov časovno in finančno izredno potratno opravilo , še posebej v primerih , ko potrebujemo govorni material za izdelavo razpoznavalnika govora za neodvisnega govorca .
Kot primer lahko navedemo , da je izdelava slovenske baze SpeechDat ( II ) 1000 FDB trajala približno dve leti ( Kaiser in Kačič , 1998 ) .
Pri izdelavi avtomatskega razpoznavalnika govora za nov jezik se je možno izogniti uporabi baze podatkov z govornim materialom s pomočjo prenosa obstoječih akustičnih modelov na nov jezik .
Da bi lahko takšen prenos razpoznavalnika govora na nov jezik uspešno izvedli , zadostuje že , če imamo fonetični slovar v novem jeziku , ki ga je možno tvoriti tudi avtomatsko s pomočjo grafemsko – fonemskih pravil .
Uspešnost razpoznavanja govora v novem jeziku je možno dodatno izboljšati z adaptiranjem oziroma ponovnim učenjem akustičnih modelov v primeru , ko imamo na voljo tudi govorni material v novem jeziku ( zadostuje že nekaj sto kratkih posnetkov - to je manj kot 1% celotne baze SpeechDat ( II ) ( van den Heuvel , et al. , 2001 ) ) .
Metode za prenos razpoznavalnika govora na nov jezik lahko v grobem razdelimo na dve skupini : 1Delo je bilo finančno podprto s strani Ministrstva za šolstvo , znanost in šport Republike Slovenije , po pogodbi PP-0796 / 99 - 0796-503.
Ekspertno vodene : prenos razpoznavalnika govora na nov jezik izvede razvijalec sistema sam , pri tem uporablja različne fonetične podatke ( Ladefoged , 1993 ) , npr. IPA tabele ( IPA , 2002 ) .
Slabost opisanega pristopa je v tem , da metoda vsebuje tudi subjektivni vpliv izvajalca ( Schultz , 2000 ) .
Podatkovno vodene : kriterije za prenos razpoznavalnika govora na nov jezik določimo na osnovi nabora posnetkov v novem jeziku , ki ga kasneje lahko uporabimo tudi za adaptacijo prenesenih akustičnih modelov ( Schultz , 2000 ) .
Slabost te metode je , da je zahtevnejša kot ekspertno vodena metoda .
V članku bomo predstavili nadaljevanje našega dela ( Imperl , et al. , 2002 ; Žgank , et al. , 2001/1 ; Žgank , et al. , 2001 / 2 ) na področju večjezičnega razpoznavanja govora .
S pomočjo IPA tabel ( IPA , 2002 ) smo takšen razpoznavalnik govora prenesli v italijanski jezik , ne da bi uporabili učenje z italijanskimi posnetki .
Dobljene rezultate smo primerjali z rezultati prenosa razpoznavalnika govora na norveški jezik ( Žgank , et al. , 2001 / 1 ) in s tem preučili vpliv jezikovnih skupin na uspešnost prenosa sistema za avtomatsko razpoznavanje govora .
V drugem poglavju sledi kratek opis tvorjenja večjezičnih akustičnih modelov .
Uporabljene baze podatkov so opisane v tretjem poglavju .
Četrto poglavje vsebuje opis izgradnje sistema in predstavitev italijanskega enojezičnega razpoznavalnika govora , ki je služil kot referenca .
Prenos večjezičnega sistema na nov jezik je opisan v petem poglavju .
Rezultate in njihovo analizo vsebuje šesto poglavje , zaključek pa je podan v sedmem poglavju .
Večjezični trifonski akustični modeli .
V opisani raziskavi smo za prenos razpoznavalnika govora na italijanski jezik uporabili večjezične kontekstno odvisne ( trifonske ) akustične modele , ki smo jih tvorili za slovenski , nemški in španski jezik .
Uporaba odločitvenega drevesa pri tvorjenju trifonskih akustičnih modelov omogoča kasnejše dodajanje novih , " nevidenih " trifonov k obstoječim trifonom , kar je izredno pomembno pri metodi prenosa razpoznavalnika govora .
Govorna baza podatkov .
Stavke , ki so neprimerni za učenje akustičnih modelov ( van den Heuvel , et al. , 2001 ) , smo izločili iz obeh naborov .
Učni nabor za posamičen jezik je vseboval več kot 20.000 posnetkov , tako v obliki izoliranih ali povezanih besed , kot v obliki tekočega govora .
Da smo se izognili vplivu jezikovnega modela , smo v testnem naboru uporabili izolirane besede .
Na takšen način smo lahko bolj zanesljivo ovrednotili uspešnost prenosa akustičnih modelov na nov jezik , saj smo izločili vpliv jezikovnega modela ( Young , 1996 ) .
Akustične značilke so vsebovale 24 mel kepstralnih koeficientov ( uporabljenih je bilo 30 filtrov na mel frekvenčni skali ) in energijo ter prve in druge odvode .
Akustični modeli so bili zasnovani na osnovi levo desnih prikritih modelov Markova .
Posamezen model je imel tri stanja , končni akustični modeli pa so imeli 32 Gaussovih porazdelitev verjetnosti na stanje ( Johansen , et.al .
Slovenski , nemški in španski enojezični akustični modeli so služili za izgradnjo večjezičnih akustičnih modelov , italijanski enojezični modeli pa kot referenca .
Italijanski enojezični akustični modeli so na testnem naboru fonetično uravnoteženih izoliranih besed ( nabor W1-4 ( van den Heuvel , et al. , 2001 ) ) dosegli napako razpoznavanja besed 34.32% .
V fonetičnem slovarju italijanskega razpoznavalnika govora je bilo 538 različnih besed , kar sistem uvršča med razpoznavalnike govora s srednjim slovarjem besed .
Testni nabor za italijanski jezik je vseboval 711 posnetkov .
To preslikavo smo izvedli s pomočjo IPA tabele ( IPA , 2002 ) .
V primeru , kadar ekvivalenten fonem ni obstajal , smo poiskali najbolj primerno zamenjavo med vsemi obstoječimi fonemi .
Primer originalnega italijanskega fonetičnega slovarja in vseh petih načinov preslikanja je podan v tabeli 1.
Za takšno izbiro smo se odločili , ker oba jezika pripadata romanski jezikovni skupini in sta si tako najbolj sorodna .
V primeru , ko je bil uporabljen IM način preslikave fonetičnega slovarja , se lahko pojavijo trifoni , ki jih sestavljajo fonemi iz različnih jezikov .
IP način preslikave fonetičnega slovarja je izveden na takšen način , da ima vsaka italijanska beseda v slovarju fonetični zapis v vsakem od treh obstoječih jezikov .
Na ta način se sicer za trikrat poveča iskalni prostor v dekodirniku , vendar prepustimo izbiro med različnimi načini preslikave razpoznavaniku govora , ki se odloča na osnovi podatkov .
V drugem koraku prenosa sistema avtomatskega razpoznavanja govora na nov jezik je potrebno poiskati vse novo nastale trifone , ki jih še ni v obstoječih akustičnih modelih .
S pomočjo ponovne uporabe istih odločitvenih dreves , kot so že bila uporabljena za tvorjenje večjezičnih akustičnih modelov , so bili novi trifoni dodani že obstoječim trifonom .
Analiza rezultatov prenosa razpoznavalnika govora .
Rezultati razpoznavanja govora za ta primer so podani v tabeli 2.
Različni načini preslikanja italijanskega jezika v obstoječe jezike so označeni na enak način kot v tabeli 1.
Uspešnost razpoznavanja govora smo vrednotili na osnovi napake razpoznavanja besed , ki je podana v odstotkih .
Tako rekoč enako dober rezultat ( 56,12% ) je bil dosežen tudi z uporabo paralelne metode ( IP ) , ko je vsaka italijanska beseda v fonetičnem slovarju imela fonetični zapis v vseh treh uporabljenih jezikih ( glej tabelo 1 ) .
Na takšen Način preslikanja NRB (%) IS 83,41 ID 66,67 IE 55,98 IM 58,09 IP 56,12 Tabela 2 : Napaka razpoznavanja besed ( NRB ) za italijanski jezik z različnimi načini preslikave italijanskega fonetičnega slovarja način je razpoznavalnik govora sam izbral optimalen način preslikave italijanskega fonetičnega slovarja .
Če primerjamo ta rezultata z enojezičnim italijanskim razpoznavalnikom , ki je služil kot referenca ( 34,32% NBR ) , lahko vidimo , da znaša razlika v napaki razpoznavanja besed nekaj več kot 20% absolutno .
Upoštevati moramo , da preneseni večjezični akustični modeli niso bili adaptirani ali doučeni z italijanskim govornim materialom .
Kljub temu da IM način preslikanja italijanskih fonemov privede do kršenja pravil fonotaktike ( Ladefoged , 1993 ) , je razpoznavalnik govora dosegel 58,09% napako razpoznavanja besed .
Na osnovi primerjave dobljenih rezultatov je možno sklepati , da je bil slabši rezultat v teh dveh primerih preslikanja dosežen zaradi večje različnosti med italijanskim ter nemškim in slovenskim jezikom .
Rezultate razpoznavanja italijanskega govora , ki smo jih dobili z IP načinom preslikanja italijanskih fonemov , smo podrobneje razčlenili in tako raziskali vpliv jezikovne skupine na uspešnost prenosa razpoznavalnika govora na nov jezik .
Tudi uspešnost razpoznavanja izbranih besed je bila v obeh primerih nižja kot v primeru španskega fonetičnega zapisa .
Podoben rezultat , odvisen od jezikovnih skupin , smo dobili tudi , ko smo enak nabor večjezičnih akustičnih modelov ( SL , DE , ES ) prenašali na norveški jezik ( Žgank , et al. , 2001 / 2 ) .
V primeru norveškega jezika je bilo največ izbranih besed z nemško različico fonetičnega zapisa .
Na jezika iz ostalih dveh skupin - slovanske in romanske - je prišlo občutno manjše število izbranih različic fonetičnega zapisa .
Tudi uspešnost razpoznavanja izbranih različic fonetičnega zapisa v neidentični jezikovni skupini je bila nižja kot pa pri primeru nemške različice fonetičnega zapisa .
Na osnovi rezultatov , predstavljenih v tabeli 3 in članku ( Žgank , et al. , 2001 / 2 ) , lahko zaključimo , da ima jezikovna skupina pomemben vpliv pri prenosu razpoznavalnika govora na nov jezik .
Najboljši rezultat razpoznavanja govora z novim jezikom lahko pričakujemo takrat , kadar foneme iz novega jezika preslikamo v foneme obstoječega jezika , ki sodi v isto jezikovno skupino .
Pri tem moramo dodatno upoštevati , da so bili vsi eksperimenti izvedeni na večjezičnem naboru akustičnih modelov .
Takšni večjezični akustični modeli so zaradi vezave stanj z odločitvenim drevesom učeni na širšem naboru govornih posnetkov , kot bi bili podobni enojezični akustični modeli .
Takšno učenje na širšem naboru govornih posnetkov delno vodi k " posplošenju " akustičnih modelov , kar omogoča doseganje boljših rezultatov pri prenosu na nov jezik .
Doseženi rezultati razpoznavanja italijanskega govora so se približali referenčnim vrednostim , dodatno pa bi jih bilo možno izboljšati z adaptacijo na majhnem naboru italijanskega govornega materiala .
V raziskavi smo tudi ugotovili , da jezikovne skupine , v katere spadajo uporabljeni jeziki , pomembno vplivajo na rezultate razpoznavanja govora s prenesenimi akustičnimi modeli .
V prihodnje bi bilo potrebno raziskati odvisnost posplošenja akustičnih modelov od števila v modele vključenih jezikov .
Osnova za izbiro ključnih besed so ključne besede iz MeSH-a .
Za vsebinsko obdelavo zapisov uporabljamo angleške ključne besede hierarhično urejenega tezavra " Medical Subject Headings " .
Vsak zapis vsebuje od enega do pet ključnih besed I , ki opisujejo najpomembnejše vidike članka in nato še ključne besede II ( od 2 do 12 ) za manj pomembne vsebine ( Dornik in Adamič , 2004 ) .
Ker je Biomedicina Slovenica bibliografska baza s področja biomedicine , je bilo potrebno uporabiti deskriptorje , ki izhajajo s tega področja .
Za vsak zapis v Biomedicini Slovenici pa je potrebno določiti dve ravni deskriptorjev : Ključne besede člankom , ki so obravnavani v Biomedicini Slovenici , določa strokovnjak na področju biomedicine ( zdravnica ) .
Je pa postopek precej časovno zahteven , saj je včasih potrebno pregledati ne le izvleček članka , ampak tudi celoten članek in se iz obsežnega spiska ključnih besed ( 22.568 zapisov ) odločiti , katera ključna beseda bi bila primerna za opis teme članka .
Bibliografsko bazo Biomedicino Slovenico vzdržuje Inštitut za Biomedicinsko informatiko že več kot 20 let .
V tako obsežni bazi je potrebno uporabiti postopke za označevanje zapisov , tako da je iskanje poenostavljeno .
Aplikacijo je potrebno na začetku pripraviti , tako da naredimo povezavo med možnimi deskriptorji in besedami oziroma besednimi zvezami .
Za učenje moramo seveda imeti pripravljeno množico zapisov , ki imajo deskriptorje že dodeljene .
Zapisi v učni množice so imeli naslednjo obliko : - naslov članka , - izvleček v slovenščini , - deskriptor prve ravni , - deskriptor druge ravni .
Najprej sem odstranil prazne besede in vse besede naslovov in izvlečkov v učni množici krnil , tako da sem dobil vektor ( " spisek " ) besed , ki sem jih uporabil za normalizacijo posameznih zapisov v učni množici .
Spisek praznih besed sem pripravil ročno , tako da sem na domači strani Nova beseda ( http://bos.zrcsazu.si/s beseda.html ) poiskal 10 najpogostejših besed v slovenščini .
Nekateri so prepričani , da je krnjenje nepotrebno in da ne prinese vidnejšega prispevka k uspehu metode , 1 15 2 170 3 1308 4 6218 V bazi Biomedicina Slovenica so zapisi označeni z deskriptorji v angleškem jeziku .
Seveda pa so polemike predvsem za krnilnike za angleški jezik .
Za slovenščino takšnih polemik nisem zasledil , morda zato , ker obstajata le dva širši javnosti poznana krnilnika , ali pa zato , ker je v slovenščini več pregibnih besed in je taka polemika odveč .
Snowball deluje na preprostem postopku odstranjevanja različnih končnic glede na določene pogoje .
Za slovenščino sem napisal pravila za odstranjevanje končnic in tako narejen krnilnik uporabil v postopku predpriprave zapisov za aplikacijo za samodejno dodeljevanje deskriptorjev .
Pravila temeljijo na dolžini krnjene besede in njenih končnic .
iz učne množice je dokument najbolj podoben .
Nato iz množice dokumentov zapišemo množico enoličnih izrazov X ( enačba 2 ) .
Za vsakega od teh N dokumentov zapišemo , koliko različnih izrazov vsebuje posamezen dokument ( enačba 3 ) .
xM } ( 2 ) Sedaj lahko za posamezen dokument množice D zapišemo število izrazov , ki so se pojavili v določenem dokumentu .
Torej imamo končno enačbo 4 : Inverse Document Frequency " .
Vzemimo učno množico dokumentov .
Iz te učne množice dokumentov ustvarimo novo množico , kjer so člani enolični izrazi iz vseh učnih dokumentov .
V vsakem dokumentu nato preštejemo število posameznih enoličnih izrazov iz tega spiska .
Števila enoličnih izrazov nato utežimo tako , da za vsakega od izrazov ugotovimo , v koliko dokumentih se pojavlja .
Vse zapise iz učne množice sem zapisal z enačbo 4 , tako sem dobil 1033 ( število učnih zapisov ) vektorjev dolžine M. Pri tem sem krnom iz naslovov člankov , ki so bili tudi del zapisa v učni množici , dodelil večji pomen , tako da sem jih utežil z utežjo tri .
Ker je določen deskriptor lahko opisoval več zapisov , sem vse vektorje , ki jih opisuje deskriptor , združil z uporabo enačbe 5.
Torej uporabimo preprosto računanje povprečja elementov vektorja in tako določimo centroid vektorjem , ki jih druži skupen deskriptor : v angleščini " Inverse Document Frequency " Tako naredimo množico vektorjev TFIDF dolžine M C = 1 | S | X tf idf ∈S tf idfi ( 5 ) ( število vseh enoličnih izrazov v dokumentih ) , po en vektor za vsak dokument v učni množici dokumentov , ki jih je N. V naslednjem koraku določimo vektor TFIDF dokumentu , za katerega želimo ugotoviti , kateremu dokumentu Na koncu postopka učenja naj bi dobili toliko centroidov , kot je deskriptorjev .
Seveda se to zgodi le , če smo v učni množici zbrali zapise , ki skupaj vsebujejo vse deskriptorje .
V postopku testiranja sem uporabil preostalih 331 od 1364 zapisov v korpusu .
Z uporabo kosinusne funkcije primerjamo dva vektorja 20 in kot rezultat dobimo realno število , ki nam predstavlja podobnost med tema vektorjema .
Ker je v MeSH-u 22.568 možnih deskriptorjev , bi bilo testiranje z vsemi deskriptorji iz MeSH-a problematično .
Uspešnost metode sem preizkusil s primerjavo dodeljenih deskriptorjev v postopku testiranja z deskriptorji , ki jih je dodelil strokovnjak .
Pri 100 % uspešnosti metode dodeljevanja deskriptorjev so testnemu zapisu pravilno dodeljeni vsi deskriptorji .
Testnim dokumentom je bilo dodeljeno v povprečju 2,17 deskriptorjev , vendar pa sem ugotovil , da je enemu od dokumentov v testni množici strokovnjak dodelil sedem deskriptorjev .
V tem primeru je uspešnost metode 40 % , vendar pa zanesljivost dodeljenih deskriptorjev hitro narašča in doseže 100 % pri okoli 100 deskriptorjih .
Nazadnje si lahko pogledamo še raven 4 , kjer imamo največ 11 deskriptorjev in je uspešnost metode pri tem številu možnih deskriptorjev 22 %.
100 % uspešnost pa metoda doseže pri 727 dodeljenih deskriptorjih , kar je pri 6218 možnih deskriptorjih zelo dober uspeh .
Kot lahko vidimo , je metoda pri tako veliki učni množici ( 1064 dokumentov ) in na četrti ravni pri enajstih deskriptorjih dokaj slaba , tako da bi to metodo težko uporabili v popolnoma samodejnem sistemu .
Sistem pa nam lahko dobro služi , če ga uporabimo za zoževanje možnega števila deskriptorjev .
Vedeti pa je potrebno , da lahko metodo še naprej učimo z zapisi , ki smo jim dodelili pravilne deskriptorje , tako kot je opisano v postopku učenja .
Eden od možnih prikazov je tudi takšen , kot ga uporablja NLM na svoji domači strani za MeSH ( http://www.nlm.nih.gov/cgi/mesh/2004/MB cgi ) , kjer so deskriptorji urejeni v drevesno strukturo .
Uspešnost razvrščanja metode na ravni 1.
Vzporedno z razvojem informacijskih in telekomunikacijskih tehnologij v ospredje prihajajo tudi same vsebine oz. informacije , do katerih želimo dostopati ali jih posredovati drugim .
Sistemi menijev in ikon , ki jih na ekranu krmilimo s pomočjo tipkovnice ali miške , že vrsto let ostajajo glavni način upravljanja aplikacij .
Je pa vrsta situacij , ko bi nam klasičen način sporazumevanja s pomočjo naravnega ( slovenskega ) jezika bistveno olajšal in pohitril delo .
Že sam način klasičnega programiranja ni najprimernejši za razvoj vzorčno vodenih sistemov , poleg tega pa je ob vsem tem potrebno vzporedno poskrbeti za vso jezikovno infrastrukturo , ki naj bi jo nek dialog vseboval .
V podjetju Amebis smo rešitev videli v razvoju posebnega programskega jezika , s pomočjo katerega bi lažje obvladovali probleme komunikacije v naravnem ( slovenskem ) jeziku .
Glavna prednost , ki jo ponuja programski jezik K , je integriranost slovenske jezikovne baze ( trenutno okrog 160.000 osnovnih besed s pripadajočimi besednimi oblikami ) v njegovo sintakso .
Predvsem zato , ker gre za izrazito vzorčno voden sistem , kjer potek dogodkov ni vnaprej določen .
Delno se ta potek sicer lahko kontrolira , ker pa je eden od glavnih elementov jezika ravno vgrajena naključnost , enako zaporedje akcij skoraj vedno prinese drugačen rezultat oz. potek dialoga .
Poleg datoteke , ki vsebuje jezikovne podatke o slovenskem jeziku , je tu še program Kolos.exe , namenjen testiranju modulov v jeziku K , programsko jedro Sukus.dll , ki interpretira oz. prevaja in izvaja programsko kodo , napisano v jeziku K , ter knjižnica funkcij Suplus.dll , v kateri so že vsebovane nekatere dodatne osnovne uporabniške funkcije , s pomočjo katerih je izvajanje kode še bolj učinkovito .
Kot primer vzemimo uporabo baze podatkov , v kateri imamo navedene definicije različnih pojmov ( miza – kos pohištva , noga – spodnja okončina ...
Če bi pokrili le tip vprašanja » Kaj je X ?
Odgovor bi generirali tako , da bi X-u ( mizi ) enostavno prilepili ustrezno definicijo : » " X " je " definicija " .
« , » Kaj veš o X ( mizi ) ?
V jeziku K z vgrajeno jezikovno bazo vsako od teh vprašanj pokrijemo z enim samim splošnim vzorcem , npr. » Kaj so % B [ So ?
?
Tipična uporaba bi bili npr. razni avtomatizirani agenti , informacijski portali , dopolnilo komunikacijskih modulov v sistemih umetne inteligence itd.
Prav tako imamo že zdaj cel kup idej in načrtov za nadaljnje izboljševanje in dopolnjevanje , ki jih zaradi časovnih omejitev nismo uspeli realizirati v dosedanjih verzijah .
Prevajalni sistem Presis je namenjen strojnemu prevajanju besedil , za zdaj sta izdelana prevajalnika med slovenščino in angleščino in obratno .
Po začetni fazi , ko je bilo prevajanje večinoma na nivoju besed z nekaj osnovne stavčne analize , je Presis zdaj prešel na uporabo glagolskih predlog pri stavčni analizi in generaciji prevodov .
Predloga opiše , kako se določen glagol uporablja .
Da bi se izognili prevelikemu ponavljanju pri predlogah , je del informacij , ki so značilne za veliko število glagolov v posameznem jeziku , rešen programsko na nivoju prevajalnika ( analizatorja oz. generatorja ) in so v tem primerih v predlogah poudarjene le izjeme .
Tak primer je npr. vezava s prislovnimi določili , kjer so tipično dovoljena dodatno k predlogu poljubna prislovna določila , razen prislovnega določila kraja , po katerem se vprašamo kam .
Ta zapis fraz je veliko bolj prilagodljiv , kot bi bil zapis z enostavnim zaporedjem besed , saj so elementi predloge lahko v poljubnem vrstnem redu ( znotraj pravil posameznega jezika ) .
Tako je mogoče določiti , da sta glagol ( oz. glagolski pomen ) » skuhati « in samostalnik » kosilo « povezana tako , da je kosilo tipično predmet v tožilniku ( oz. rodilniku v zanikanih stavkih , za kar pa poskrbi sam analizator in tega v vzorcih ni treba posebej pisati ) pri tem glagolu , ne pa npr. osebek ali predmet v dajalniku .
Primer za to je prevod iz » John was made happy by George .
« v » George je osrečil Johna .
« , kar Presis s pomočjo predloge prevede v » It is this problem .
« Najde pa seveda tudi kopico drugih možnosti , recimo » It goes behind this problem .
Tipičen primer so predloge za modalne glagole ( oz. v slovenščini tudi modalne prislove , recimo » lahko « in » rad « ) .
V takem primeru zna Presis sestaviti predlogi .
Korpusni pristop pri analizi naslavljanja .
Namen raziskave je bil s pomočjo korpusne metodologije ugotoviti določene vzorce v rabi oblik zaimkovnega in nominalnega naslavljanja med slovenskimi politiki .
Gradivo so predstavljale transkripcije sej , ki jih korpus sodobnega slovenskega jezika , FIDA , hrani v podkorpusu govornih besedil .
Relevantne podatke o vzorcih rabe določenih jezikovnih oblik je potrebno pridobiti z opazovanjem sodobnega jezika v realnih okoliščinah sporazumevanja .
Na ta način je možno preučiti tudi tisto polje znotraj jezikoslovja , ki se je morda nekoč zdelo neobvladljivo in je bilo pravzaprav utopično pričakovati rezultate , na katere bi se lahko popolnoma zanesli .
» Z jezikoslovnega vidika je uporaba korpusa izjemo dragocena , saj v analize jezika vnaša večjo verodostojnost ; velik obseg načrtno zbranega gradiva namreč omogoča izpostavitev v jeziku tipičnega in zmanjšuje možnost interpretiranja le obrobnega kot temeljnega .
Sistematično delo s korpusom tako pomeni možnost natančnejšega spoznavanja celovitega delovanja jezika , kot je bilo možno kadarkoli prej .
V podkorpusu govornih besedil hrani dobesedne zapise sej Državnega zbora ( transkripcije govora ) .
Pri FIDI nam obdelavo rezultatov iskanj omogoča za ta korpus posebej prilagojen Amebisov konkordančnik ASP32 , ki ponuja dva tipa iskanja , enostavno ter razširjeno .
Enostavno iskanje je vezano na vsa besedila korpusa FIDA , medtem ko razširjeno iskanje omogoča iskanje po določenih besedilih in možnost izbire prenosnika , ki jo ponuja taksonomija korpusa FIDA .
Možnost izbire govornega prenosnika mi je namreč omogočila izbor vseh zapisov parlamentarnih sej , ki jih vsebuje korpus FIDA .
Seveda vsega ne more postoriti le računalnik , zato je bilo za relevantne rezultate potrebno predvsem branje minimalnega konteksta ( levo in desno od iztočnice ) in sobesedila , ter na koncu tudi izločanje in določanje števila zadetkov , ki so ustrezali zamišljenim pogojem iskanja .
Prispevek je nastal na podlagi seminarskega dela pri predmetu Korpusno jezikoslovje ( mentor doc. dr. Vojko Gorjanc ) , v okviru podiplomskega študijskega programa na Filozofski fakulteti Univerze v Ljubljani .
Gradivo , ki predstavlja podkorpus govornih besedil , časovno izvira iz obdobja od leta 1993 do 1999 in obsega zapise 30 sej , kar predstavlja 2.041.453 besed in je v primerjavi s številom besed korpusov v nekaterih tujih raziskavah podobnega tipa razmeroma veliko .
Glede na to , da so parlamentarne razprave edini sestavni del podkorpusa govornih besedil korpusa FIDA , nisem imela težav s kategorizacijo korpusnih tekstov .
Korpusi govorjenih besedil se največkrat osredotočajo le na neformalni govor ter pripovedna ( fikcijska ) besedila .
Za splošno ponazoritev realne jezikovne rabe je pomebna uravnoteženost tako formalnega govora kot neformalnega , kadar pa preučujemo specifično okoliščino znotraj npr. formalne govorne situacije , je zelo dobrodošlo , če je taksonomija korpusa uravnotežena in oblikovana tako , da je omogočen hiter dostop do željenega izbora gradiva .
Predvsem nagibanje k neseksistični rabi jezika je povzročilo dileme ob odločanju , kdaj je raba določenega jezikovnega pojava splošna in kdaj ne , saj je v sodobnem jeziku na voljo veliko več alternativnih izrazov – mnogo jih prej sploh ni bilo ; in ravno pri tem nam je lahko v veliko pomoč preverjanje podatkov znotraj korpusa .
Relevantnost rezultatov glede na tip raziskave .
Raziskave , katerih rezultati temeljijo na sodbah govorcev določenega jezika , nam redkokdaj pokažejo sliko dejanske rabe določenih jezikovnih oblik ( tudi naslavljanja ) , saj so ti govorci v trenutku , ko odgovarjajo na vprašanje o lastni izbiri in rabi določenih jezikovnih oblik , ponavadi preveč obremenjeni z jezikovnimi normami , jezikovnim obnašanjem in vljudnostnimi strategijami , skratka s socialnimi pravili , ki obstajajo znotraj neke družbe .
Že sama vsebina vprašalnikov je največkrat polna nedoslednosti in dvoumnosti , kar se kot slabost in pomanjkljivost zlasti pokaže v primerih , ko so med testiranci tudi govorci z manjšo jezikovno zmožnostjo .
Tako se verjetnost , da bo prišlo do napačne interpretacije vprašanj , še poveča in verodostojnost podatkov oziroma rezultatov anketne raziskave je vprašljiva .
Večina raziskav v korpusnem jezikoslovju se zanaša na pogostnost določene jezikovne oblike znotraj korpusa , ker pa je ta največkrat večmilijonski , je npr. na primeru preučevanja naslavljanja med vsemi zadetki nominalnega naslavljanja težko odkriti samostojno rabo lastnega imena ( I ) in priimka ( P ) oziroma zvezo obeh ( IP ) .
Delež rabe teh oblik je zaradi raznolikosti in prevelikega števila pojavitev namreč zelo težko , ali celo nemogoče določiti , zato bo v tej raziskavi njihova raba določena zgolj v povezavi z drugimi oblikami naslavljanja , tako nominalnimi kot tudi zaimkovnimi .
Pri iskanju določene nominalne oblike je zelo pomembna natančna določitev iskalnih pogojev , saj se iskana oblika lahko pojavlja znotraj zveze dveh ali več oblik naslavljanja ( poslanka / poslanec v npr. gospa poslanka / gospod poslanec in kolegica poslanka / kolega poslanec ) , zlasti pri iskanju samostojne rabe določene oblike , pa je potrebno paziti , da smo v situ izločili vse možne oblike , ki se lahko sopojavljajo ob njej .
Iz njega bi se namreč dalo razbrati pomembne podatke o govorcu ( npr. spol , funkcijska vloga ( v DZ ) , osebni govorni slog – v naslavljanju se kaže kot raba ponavljajočega se vzorca zvez oblik naslavljanja , zlasti v nagovorih , npr. z dame in gospodje prisotne v dvorani naslavlja le en poslanec itd. ) .
Ugotavljanje deležev zaimkov v okviru iskanja znotraj FIDE s pomočjo oblikoskladenjskih oznak ni izvedljivo , se pa kot neke vrste nadomestilo ponuja možnost iskanja glagolskih oblik , ki sem jo v nadaljevanju ( rezultati zaimkovnega naslavljanja ) z ozirom na to , da me je zanimal le delež vikanja in tikanja , tudi izrabila .
S pomočjo korpusov je veliko lažje določiti ustaljene vzorce jezikovne rabe , ki obstajajo ( in so značilni ) za denimo točno določeno formalno govorno situacijo .
Zaimkovno naslavljanje je bilo z iskalnikom korpusa FIDA težje odkriti , zato sem si pri iskanju drugoosebnih zaimkov v ednini ( tikanje ) in množini ( vikanje ) pomagala z iskanjem drugoosebnih glagolskih oblik .
Izrazi spoštovanja cenjeni , spoštovani in dragi se v naslavljanju med politiki največkrat pojavijo skupaj z ostalimi nominalnimi oblikami naslavljanja , in sicer ob začetnem nagovoru bodisi vseh prisotnih bodisi posameznika .
V V teoriji naslavljanja ( Brown , Gilman , 1960 ) v " grobi " delitvi ( v večini jezikov ) ločimo nominalno naslavljanje in naslavljanje z drugoosebnimi zaimki , pri čemer se omenja vikanje in tikanje oz. splošno poimenovanje z " VI " in " TI " , kar izhaja iz latinščine ( vous in tu ) .
" vsakem primeru o pravilni interpretaciji odloča intonacija , s katero smo nekaj izrekli ; ugotavljanje tega nam FIDA zaradi pisnega medija ne omogoča .
Pri pregledovanju rezultatov sem odkrila prevladujoč delež oblike spoštovani , ki se sopojavlja v zvezi z eno ali več oblikami nominalnega naslavljanja – skupaj z vljudnostnimi nazivi , s solidarnostnimi imeni in z imeni za označevanje funkcijske vloge .
Pojav ujemanja besed po bližini znotraj nagovorov z izrazi spoštovanja .
Po temeljitejšem pregledovanju zadetkov pa lahko vidimo , da se glavni vzrok za povečan delež skriva v » pojavu ujemanja besed po bližini « , npr. tip naslavljanja s Janet Holmes je v svojem delu Women's talk ( 1998 ) izpostavila pet temeljnih značilnosti ženskega in moškega jezikovnega vedenja : 1 ) Ženske in moški razvijajo različne modele jezikovne rabe .
Definicijo ujemanja povzemam po Toporišiču ( 1993 , 2000 ) .
Pri priredno zloženem osebku se pridevniški prilastek ujema ali s prvim členom ali po splošnih pravilih : naš ata pa ( naša ) mama , ali naša mama pa oče , naša ata pa mama « ( 1993 : 338-339 ) .
Seveda se pojavi tudi slednja oblika , vendar v primerjavi s prvo omenjeno zajema minimalen delež .
Govorci se verjetno zaradi tega zelo razširjenega vzorca ne zavedamo , da smo z žensko obliko izraza spoštovanja v naslavljanje , če se oziramo zgolj na slovnično normativnost , zajeli le ženske .
To je tudi v medijih nadvse značilen in pogost tip naslavljanja in zato v splošni slovenski javnosti tako rekoč ustaljen .
Na sejah so prisotni poslanke in poslanci , lahko tudi predstavniki vlade in drugih političnih teles .
Državni zbor predstavlja predsednik DZ ( v primeru njegove odsotnosti ga lahko nadomešča eden izmed največ treh izvoljenih podpredsednikov ) , ki sklicuje in vodi seje .
Na začetku vsake seje preveri prisotnost poslancev , napove dnevni red seje ter začne s predajanjem vloge govorca poslankam / poslancem po vnaprej znanem vrstnem redu razpravljavcev , tako da pridejo do besede poslanke in poslanci iz vseh poslanskih skupin .
Poslanka / poslanec dobi besedo takoj , ko mu jo preda predsedujoči .
Pri predsednikovi predaji vloge govorca poslanki / poslancu pride do izraza tudi naslavljanje , kar ponazarjam z naslednjim primerom ( podpredsednica nadomešča odsotnega predsednika DZ ) : » Obe jedrni besedi take / priredne / zveze imata lahko isti prilastek .
V takih primerih je mogoče , a malo običajno rabiti dvojinsko obliko pridevnika , npr. naša oče in mati , sosedova Janez pa Micka ( pri tem gledamo še na to , da ne bi bila na prvem mestu končniško dvoumna beseda : naša mama in oče ) ; primer za množino : sosedovi Janez , Micka in Marjeta ; tak needninski prilastek bi bil v večini primerov seveda jasnejši .
Namesto oblike za moški spol je v množini v takih primerih dopustna tudi oblika pridevniške besede po spolu najbližjega samostalnika /…/
V obeh predstavljenih primerih med predsedujočo in poslancem poteka recipročno oziroma vzajemno naslavljanje z vljudnostnim nazivom gospa oziroma gospod , kateremu v primeru naslavljanja predsedujoče sledi ime za označevanje funkcijske vloge podpredsednica , v primeru naslavljanja poslanca pa naslavljanje s priimkom oziroma z imenom in priimkom .
Kadar čas , ki je namenjen za določeno razpravo , še ni potekel , vrstni red vnaprej prijavljenih govorcev pa je že izčrpan , predsedujoči vedno vpraša , če želi še kdo razpravljati .
Pri pregledovanju dobesednega zapisa ene od prvih sej sem ugotovila , da predsedujoči ( predsedujoča ) pri pozivanju k razpravi uporablja zlasti indirektno obliko naslavljanja , pri čemer uporabljamo 3. osebo ednine in se pri tem obračamo na posameznika , ali pa 3. osebo množine in se pri tem obračamo na večje število naslovnikov .
Za oboje navajam naslednja primera : - Želi besedo predstavnik Sekretariata za zakonodajo in pravne zadeve ?
Prosim , minister , gospod + P. - Želijo besedo predstavniki poslanskih skupin ?
Uporabila sem naslednje iskalne pogoje konkordančnika korpusa FIDA : /.../
Z iskanjem glagolov v drugi osebi množine in ednine ter vljudnostnih nazivov gospa / gospod in solidarnostnih imen kolegica / kolega , mi je uspelo najti in prešteti relevantne zadetke , ki so pokazali delež vikanja oziroma tikanja med politiki v DZ .
Rezulati iskanja so prikazani v Tabeli 1.
Izrazito prevladuje vikanje , kar ne sme biti presenetljiv rezultat , saj je parlamentarna razprava kot govorni dogodek institucionalizirana in zato strogo formalnega značaja .
Raba vljudnostnega naziva in solidarnostnega imena .
Politiki predvsem pri nagovorih zelo pogosto uporabljajo vljudnostni naziv in solidarnostno ime za naslavljanje posameznika ali prisotne v dvorani .
Primerjava števila zadetkov in deležev ( Tabela 2 ) obeh omenjenih oblik naslavljanja kaže na prevlado oblik za moški spol , kar pa ni presenetljivo , saj so rezultati v tem primeru zgolj odraz večinskega deleža moških poslancev v DZ .
Veliko bolj uporabna je primerjava deležev med obema oblikama naslavljanja , kjer izrazito prevladuje raba vljudnostnega naziva .
Delež pojavitve obeh oblik ( Tabela 3 ) v primerjavi z vljudnostnim nazivom gospa sicer ni velik , vendar kljub temu lahko trdim , da takšno naslavljanje poslank ni odraz govorčevega spoštovanja in vljudnosti , temveč izražanja odnosa moči , v nekaterih primerih vpliv ironije .
Zanimal me je tudi delež vseh pojavitev nominalnega naslavljanja , torej vse sklonske , edninske , množinske in dvojinske oblike ter oblike za ženski in moški spol , z zvezo : - izraza spoštovanja in vljudnostnega naziva , - izraza spoštovanja in solidarnostnega imena , - izraza spoštovanja in imena za označevanje funkcijske vloge , - vljudnostnega naziva in solidarnostnega imena , V članku bom natančneje predstavila rezultate zadetkov zvez naslavljanja prvih treh navedenih alinej .
- vljudnostnega naziva in imena za označevanje funkcijske vloge , - solidarnostnega imena in imena za označevanje funkcijske vloge .
Zveze oblik naslavljanja , katerih rezultati so prikazani v naslednjih treh tabelah , niso nujno zaključene enote .
V Tabeli 4 prevladuje delež zveze spoštovani gospod , kar z ozirom na število moških v DZ ni presenetljivo , poleg tega v večini zadetkov tej zvezi sledi naslavljanje z imenom za označevanje funkcijske vloge podpredsednik / predsednik / predsedujoči ( 241 ) .
Zadetkov za zvezo izraza spoštovanja cenjeni in vljudnostnih nazivov gospa / gospod ni bilo , našla pa sem kar 10 zadetkov za naslavljanje žensk s cenjena dama oziroma cenjene dame , česar pa zaradi preglednosti ostalih rezultatov nisem uvrstila v tabelo .
V večini primerov gre za ujemanje besed po bližini – vpliv solidarnostnega imena ženskega spola na izraz spoštovanja , ki naj bi v naslavljanje zajel oba spola .
Večji delež naslavljanja žensk z izrazom spoštovanja , ki vsebuje nižjo stopnjo spošljivosti in distance , dokazujeta tako večji delež zadetkov oblike cenjeni in manjši delež oblike dragi za moški spol .
Primerjava deležev zvez oblik naslavljanja v Tabeli 6 s prejšnjima tabelama kaže podobne rezultate .
Pregledovanje besed desno od iztočnice ponovno pokaže na pojav ujemanja po bližini med izrazom spoštovanja in žensko obliko imena za označevanje funkcijske vloge .
Nekoliko večja razlika v deležih se pokaže tudi pri naslavljanju z izrazom spoštovanja cenjeni .
Ponovno so s to obliko pogosteje naslovljeni moški , vendar je iz sobesedila možno razbrati , da je s strani govorca v naslavljanju prisotna ironija .
Med izrazi spoštovanja v vseh treh tabelah z več kot 90 % prevladuje raba izraza spoštovanja spoštovani tako na primeru naslavljanja žensk kot tudi moških .
Sledi raba izraza dragi , s katerim so pogosteje naslovljene ženske , govorec je v vseh primerih moški .
Najmanj je naslavljanja z izrazom spoštovanja cenjeni , vendar je iz števila zadetkov možno razbrati , da so s to obliko pogosteje kot ženske naslovljeni moški ; tudi v teh primerih gre za ironijo .
V prejšnjem razdelku sem predstavila naslavljanje v vseh številih ( ednini , dvojini in množini ) , ker pa sem ravno na primerih naslavljanja posameznika našla zelo zanimive zveze oblik naslavljanja , bom na kratko povzela tudi te rezultate .
V najdaljšem naslavljanju znotraj gradiva je govorec uporabil zvezo kar šestih različnih nominalnih oblik naslavljanja : izraz spoštovanja + solidarnostno ime + vljudnostni naziv + ime za označevanje funkcijske vloge + akademski naslov + priimek naslovljenega ( spoštovani kolega gospod minister dr.+P ) .
Podrobno sem preučevala tudi naslavljanje s solidarnostnim imenom kolegica / kolega in največ zadetkov naštela za zvezo solidarnostnega imena in priimka ( 224 ) .
Ob ženski obliki solidarnostnega imena sem našla največ zadetkov priimka z obrazilom - eva / - ova , saj se je ta oblika pojavila kar v 15 primerih .
Iskanje oblik naslavljanja znotraj gradiva korpusa FIDA , oziroma njegovega podkorpusa govorjenih besedil , je dalo relevantne rezultate ( število pojavitev in delež posameznih oblik in zvez le-teh ) , na podlagi katerih sem lahko izdelala sistematičen pregled vzorcev rabe oblik naslavljanja med politiki na parlamentarnih razpravah .
Istega rezultata mi s kakršnim koli drugim načinom raziskovanja in preučevanja teh oblik ne bi uspelo dobiti , delo bi bilo veliko bolj zamudno in zagotovo manj učinkovito , kar zadeva zanesljivosti ugotovitev .
Raba vljudnostnih nazivov in solidarnostnih imen .
Zveza izraza spoštovanja in imena za označevanje funkcijske vloge .
» Iz novejših jezikoslovnih raziskav postaja jasno , da konkretno jezikovno podobo besedil ( torej izbiro in obliko jezikovnih sredstev ) določajo šele realne okoliščine sporazumevanja .
Sodobna analiza jezikovne rabe ne more več temeljiti na intuiciji , na jezikovni kompetenci enega govorca ali minimalnobesedilnem gradivu , ampak ji njeno relevantnost zagotavlja prav empirična analiza velike količine avtentičnih besedil .
Ta variabilnost namreč vpliva na potek socioloških raziskav in povzroča nemalo problemov pri obdelavi rezultatov .
Nekdo lahko vprašanje razume povsem drugače , kot je bil namen avtorja ankete .
Vsekakor bi bilo vredno premisleka , kajti pri preučevanju govora je težko obravnavati izolirane enote .
Ena od rešitev tega problema pa se verjetno kaže v shranjevanju zvočnih zapisov , ki se jih lahko uporabi kot sestavni del govornih korpusov , in ki nam dajo veliko več uporabnih podatkov kot navadna transkripcija govora .
Razvoj govornih korpusov gre v smer shranjevanja zvočnega zapisa ; transkripcija za specifične potrebe raziskav govora namreč ne nudi dovolj relevantnih jezikovnih podatkov .
Posnetih je bilo 64 paroksitoniranih dvozložnic ( tonemska govorka iz Ljubljane , F0 je okoli 200 Hz ) , odčitavalo pa je 11 anketirancev .
Standardni odklon odčitkov narašča s frekvenco in je med 7 in 8 % za prve tri formante .
V pričujoči raziskavi nam ni uspelo v celoti odpraviti drugega dejavnika , kar je glavna pričakovana prednost polavtomatske analize formantov .
Za področje govornih tehnologij ( korpusa govora , razpoznavalnika in sintetizatorja govora ) so nujne predhodne , predvsem pa novejše in podrobnejše eksperimentalno ( zlasti akustično ) fonetične raziskave ( Stabej , 1998 : 100 ) , saj manjkajo s področja nekatera temeljna dela ( ali pa so izrazito zastarela ) , ki so bila za druge jezike narejena že v 20. stoletju , npr. klasična fonetika in fonologija slovenščine , raziskave osnovne frekvence oz. tonske višine za tipične slovenske ( pokrajinske ) govore , trajanje in jakost samoglasnikov glede na naglasno mesto in tonem , besedilna fonetika ipd. , ( tudi segmentne ) raziskave narečij .
Napaka se precej poveča za višje osnovne frekvence , in kadar je razlika med formantoma , ponavadi F1 in F2 , manjša od 300 Hz ( npr. pri zadnjih visokih samoglasnikih ) .
Vallabha in Tuller ( 2002 ) sta ugotavljala različne značilne napake pri LPC-analizi , zlasti kvantizacijo F0 ( napaka je okoli 10 % F0 ) in nepravilne stopnje LP-filtra ( hkrati predlagata rešitve , prim. še v nadaljevanju ) .
Cilj vseh omenjenih raziskav je bilo v prvi vrsti ugotoviti , ali je napaka pri merjenju formantov – in tu je šlo zlasti za algoritemsko napako , šele potem za ročno – nižja od diferencialnega praga za razlikovanje formantov ( auditory difference limens ) .
Kewley Port in Watson ( 1994 ) ugotavljata prag za izkušene poslušalce : 14 Hz za formantne frekvence pod 800 Hz in 1,5 % za višje .
Cilj pričujoče raziskave pa je drugačen : določiti napako pri odčitavanju računalniško generiranih formantnih potekov ( LPCali FFT-analiza ) – ne glede na to , da te zlasti fonetiki nejezikoslovci določajo avtomatično iz povprečja segmenta oz. določene točke ( ponavadi srednje ) v izbranem segmentu .
Sledi analiza rezultatov .
Gradivo sestavlja 32 besed , paroksitoniranih dvozložnic , in sicer po dva primera za vsako distribucijsko možnost za slovenščino ( 8 samoglasnikov in 2 tonema ) .
Idealna zgradba je ˈ CVː CV ( C ) , glasovno okolje pa je bilo za formantne poteke in segmentacijo kar najenostavnejše ( najraje nezveneči zaporniki ) .
Vsaka beseda je bila izgovorjena ločeno dvakrat , tako je nastalo skupno 64 enot za analizo .
Izbrane besede so v prikazu 1.
V skladu z dosedaj ugotovljenim na področju slovenske eksperimentalno fonetične intonologije ( Vodušek , 1961 ; Toporišič , 1967 ; 1968 ; Neweklowsky , 1973 ; Srebot Rejec , 1988 ) je osnovna frekvenca nekoliko nižja ( in zato naraščanje izrazitejše ) pri pričakovanih akutih .
Zgoščenko so skupaj z ustreznimi programi v prostem dostopu prejeli anketiranci , udeleženci osnovnega tečaja iz fonetične analize digitaliziranega govora v njegovem zaključnem delu .
Formante naglašenega (= prvega ) samoglasnika so odčitavali s programom Praat ( Boersma in Weenink , 2004 ) , in sicer neposredno iz LPC-analize s privzetimi nastavitvami ( po potrebi so jih lahko spreminjali ) : Gaussovo okno dolžine 25 ms , s časovno ločljivostjo 6,25 ms (= 25 / 4 ) in Burgovim algoritmom .
Anketiranci so bili seznanjeni z osnovnimi pravili merjenja formantov ( slušna in vidna analiza , strojna meritev in preverjanje ) , posebnostmi pri merjenju , osnovnimi značilnostmi LPC-analize , njenimi prednostmi in pomanjkljivostmi .
Spektrogram in formanti na podlagi LPC-analize .
Vrnjenih in avtoriziranih je bilo 11 anket .
Preseneča pa ( pre ) nizek F2 pri / ˈə / , kar je tudi v zvezi z dejstvom , da so bili izbrani primeri iz t. i. obstojne zveze ( Toporišič , 2000 : 72 ) / əɾ / , saj ustreznih drugih primerov v standardni slovenščini ni – velika večina jih je namreč variantnih po mestu naglasa ali se izgovarjajo z / ɛ / , kar je v govoru Ljubljančanov veliko pogosteje .
Njihova primerjava pokaže več zakonitosti : odvisnost napake od frekvence in akustičnih lastnosti samoglasnika ( porazdelitev formantov ) .
Standardni odklon za F1 narašča z odprtnostno stopnjo : najmanjši je pri / i / in / u / , največji pri / a / , v relativnem smislu je standardna napaka zelo majhna .
V prikazih 5a – č so histogrami vseh odčitkov za formante / i / .
Jasna dvovršnost in razpršenost rezultatov je posledica : ( 1 ) pomanjkljivosti LPC-analize ( pojav lažnih formantov ali njihovo združevanje v enega , če sta blizu in / ali imata široko pasovno širino ) , ( 2 ) odčitavanja , ki bi moralo v takih primerih upoštevati sam spektrogram , torej zavrniti formantne vrednosti , pridobljene na podlagi avtomatične analize , ( 3 ) dejanske variance v formantnih vrednostih , ki so pri dovolj velikih vzorcih porazdeljene normalno , za kar pa je pričujoči vzorec premajhen .
Dejstvo , da so odčitki za / i / precej bolj široko in celo dvovršno porazdeljeni kot za / ɔ / ( prikazi 5d – f ) , pričajo v prid vsem trem točkam .
Polavtomatska analiza je namenjena ravno izogibanju takim napakam , ki so razvidne iz priloženih LPC-analiz ( ločljivost 12,5 ms , okno 25 ms ) v praatu .
Povprečni standardni odklon pri meritvah je 34 Hz za F1 , 112 Hz za F2 , 221 Hz za F3 in 195 Hz za F4 , kar glede na povprečne izmerjene vrednosti za posamezne samoglasnike pomeni 7,8 % za F1 , 7,2 % za F2 , 7,4 % za F3 in najmanj , 4,7 % , za F4 .
4 Sklep Dobljeni rezultati so referenčni okvir za nadaljnje jezikoslovno fonetične raziskave slovenščine ( standardne , pogovorne in narečij ) , ki bodo temeljile na kombinaciji avtomatične LPC-analize , odčitavanju s spektrograma in polavtomatskem odčitavanju LPC - ( v prostem dostopu Praat , Speech filing system , Speech analyzer ) oz. FFT-analize ( Speech filing system , Speech analyzer ) , kar je sorazmerno dobra kombinacija natančnosti in časovnega izkoristka .
Natančnost med 7 in 8 % je primerljiva z dosedanjimi rezultati oz. še nekoliko boljša , še posebej za F1 ( ± 60 Hz v Monsen in Engebretson , 1983 ) .
Polavtomatska LPC-analiza govora je bila uporabljena tudi v Jurgec 2004b , vendar na bistveno večjem vzorcu ( več kot 23000 enot ) , tako da so že zato rezultati bistveno bolj zanesljivi .
V nadaljevanju bi bilo treba narediti podobne analize na večjem vzorcu ( gradiva , anketirancev ) , kar bi pripomoglo k natančnejšim rezultatom pri polavtomatski analizi govora za fonetično rabo .
Prevodi ali manj uveljavljeni izrazi so opremeljeni z angleškim izrazom ali prevzeto besedo / besedno zvezo v lomljenih oklepajih .
Jezikovni viri projekta LC-STAR .
Jezikovni viri so v osnovi dveh vrst : veliki slovarji za izboljšanje razpoznave in sinteze govora ( 113.000 besed ) ter poravnani slovarji fraz in slovarji besed s področja turizma za izboljšanje komponente govorno orientiranega prevajanja .
Razviti jezikovni viri naj bi odpravili pomanjkljivosti na tem področju .
Namen mednarodnega projekta LC-STAR ( Lexica and Corpora for Speech to Speech Translation Components ) ( www.lc-star.com ) je razviti jezikovne vire , ki so potrebni za izboljšanje komponent strojnega simultanega prevajanja govora .
Te so ( Hoege , 2002 ) : - razpoznava govora z velikim slovarjem - visoko kvalitetna sinteza govora - besedilno orientirano strojno prevajanje V projektu so se združili pomembni industrijski in akademski partnerji : Siemens AG , IBM , Nokia , NSC ( Natural Speech Communication Ltd .
Univerza v Mariboru se je projektu pridružila kot zunanji partner , ki bo zagotovil jezikovne vire po standardih projekta za slovenski jezik .
Po ugotovitvah v LC-STAR ( Hartikainen et al. , 2003 ) so glede na široko sprejete pristope k razpoznavanju govora ( skriti modeli Markova ) in sinteze govora ( konkatenativna sinteza ) zahteve glede vsebine jezikovnih virov dokaj ustaljene in jasne : osrednje načelo je zagotoviti velike slovarje besed , ki pokrivajo številna različna področja rabe , in korpuse govorjenih besedil .
Vendar pri obstoječih virih konzorcij LC-STAR ugotavlja predvsem naslednje pomanjkljivosti : - premajhno pokritost po različnih aplikacijskih področjih - nezadostno prilagojenost za sintezo in razpoznavo govora - nezadostno kvaliteto - pomanjkanje standardov - slabo pokritost po jezikih Projekt LC-STAR naj bi odpravil te pomanjkljivosti jezikovnih virov za komponente strojnega simultanega prevajanja govora , s tem da bodo razviti visoko kvalitetni jezikovni viri za številne svetovne jezike po skupnih , v projektu postavljenih standardih .
V nadaljevanju članka najprej na kratko pregledamo , kateri jezikovni viri za razvoj komponent sistemov strojnega simultanega prevajanja govora so razviti za slovenščino , nato pa natančneje predstavljamo jezikovne vire , ki se razvijajo v okviru projekta LC-STAR , s poudarkom na slovenskih jezikovnih virih , ki nastajajo v okviru projekta na Univerzi v Mariboru .
Slovenski jezikovni viri , uporabni za razvoj komponent strojnega simultanega prevajanja govora .
Jezikovni viri , potrebni za razvoj komponent strojnega simultanega prevajanja govora , so v splošnem dvoji : oblikoslovni in glasoslovni slovarji ter različni korpusi govorjenih besedil .
Zaradi časovne in finančne zahtevnosti pridobivanja in urejanja korpusov govorjenih besedil se sicer velikokrat uporabljajo kar korpusi pisnih besedil , čeprav zaradi razlik med govorjenim in pisanim besedilom to ni najustreznejša rešitev za razvoj kvalitetnih sistemov strojnega simultanega prevajanja govora .
Ta organizacija ponuja tudi govorno bazo posnetkov SpeechDat ( II ) ( Kaiser , Kačič , 1998 ) za slovenski jezik , ki je prvi jezikovni vir za slovenski jezik , preverjen v mednarodnem centru za validacijo SPEX .
Od prosto dostopnih govornih baz je na voljo MobiLuz , govorna baza poizvedovanj o letalskih informacijah , ki vključuje tudi fonetični prepis in oblikoslovne oznake ( Gros et al. , 2000 ) , v raziskovalne namene je mogoče dobiti tudi oblikoslovni slovar slovenskega jezika , ki je nastal v okviru projekta Multext-East ( nl.ijs.si / ME ) , ta obsega 15.000 lem .
Ostali jezikovni viri , ki se lahko uporabijo za razvoj sistemov strojnega simultanega prevajanja slovenskega govora , so bolj ali manj narejeni za lastno uporabo v organizacijah , ki so sodelovale pri njihovem nastajanju , so različno obsežni , vsebujejo različne podatke in so različno kvalitetni .
Od slovarjev je za slovenski jezik narejen še en večji oblikoslovni slovar , SImlex ( Verdonik et al. , 2002 ; Rojc , Kačič , 2003 ) z 20.000 lemami , od večjih glasoslovnih slovarjev pa SIflex , ki vsebuje fonetični prepis vseh besed iz SImlexa ( ibid .
Večjega , referenčnega korpusa govorjenih besedil ( eno - , dvo - ali večjezičnega ) za slovenski jezik nimamo , lahko pa zasledimo objavo , ki napoveduje njegovo gradnjo ( Stabej , Vitez , 2000 ) .
Boljše je stanje pri pisnih korpusih ( enojezična FIDA ( www.fida.net ), Nova Beseda ( bos.zrc-sazu.si / s _ beseda ) , paralelni korpus ELAN ( nl.ijs.si / elan / ) in drugi ) , vendar so ti , kot rečeno , lahko samo izhod v sili , kadar govorimo o razvoju komponent strojnega simultanega prevajanja govora .
Jezikovni viri , razviti v okviru projekta LC-STAR .
1. del : - zgraditi seznam besed , ki bo pokrival številna različna področja rabe , - določiti standarde in zgraditi slovarje za razpoznavanje govora z velikim slovarjem in visoko kvalitetno sintezo govora ; slovarji bodo vsebovali oblikoslovne oznake besed in fonetični prepis .
2. del : - raziskati govorno orientirano prevajanje , pri tem je poudarek na preučitvi potrebnih jezikovnih virov , - izgradnja demonstracijskega sistema strojnega simultanega prevajanja govora za španščino in angleščino , - specifikacija in izgradnja jezikovnih virov , potrebnih za govorno orientirano prevajanje .
Univerza v Mariboru je kot zunanja partnerica , odgovorna za izgradnjo jezikovnih virov za slovenski jezik , udeležena predvsem v prvem delu projekta , v katerem bodo za 13 jezikov zgrajeni oblikoslovni in glasoslovni slovarji z vsaj 100.000 enotami , od tega slaba polovica lastnih imen , pa tudi v drugem delu projekta pri priprav vzporednih slovarjev fraz in leksikonov besed iz teh fraz .
V nadaljevanju podrobneje opisujemo najprej velike slovarje besed za sintezo in razpoznavanje govora ter zatem slovarje za govorno orientirano prevajanje za slovenski jezik .
Slovarji za izboljšanje razpoznave in sinteze govora za slovenski jezik .
Slovarji za izboljšanje razpoznave in sinteze govora oz. t.i. veliki slovarji so zgrajeni iz treh enot : občnih besed , lastnih imen in aplikacijskih besed , tj. besed , potrebnih za delovanje govorno vodenih aplikacij s šestih semantičnih področij ( splošno , finance , potovanja , posredovanje informacij , upravljanje in storitve , telekomunikacije ) .
Dodatno so bile k občnim besedam v celoti zbrane besedne vrste , ki imajo končno število besed ( predlogi , vezniki , zaimki ...
Občne besede so bile izbrane iz 12-milijonskega korpusa , v katerem so bila zbrana besedila iz 6 večjih področij : šport , novice , kultura in zabava , gospodarstvo in finance , potrošniške informacije , osebne komunikacije .
Natančna struktura korpusa je prikazana v tabeli 2.
Področje Viri Leto objave Šport Večer , rubrike : Šport , Prosti strel 1997-2002 Novice Večer , rubrike : Prva stran , črna kronika , Kronika , Maribor , Maribor okolica , Zadnja stran , Zunanja politika , Doma in po svetu , Slovenska kronika , V žarišču 1997-2002 Finance / gospodarstvo Večer , rubrike : Gospodarstvo , Finance 1997-2002 Kultura / zabava Večer , rubrike : Kultura , čitalnica , Film , Borštnikovo , Lent , Reportaže zanimivosti , Reportaža , Potovanja 1997-2002 Potrošniške informacije Večer , rubrike : Zdravje , Zdravstvo , Univerza znanost , Računalništvo , Arhitekturna beseda , priloge Raziskovalec , Zdravje , priloga Dela Znanost , revija Gea , novice iz Svaroga , priročniki z interneta 1997-2003 Osebne komunikacije Večer , rubrike : Pisma bralcev , Pisma , Vaši odmevi , Vaša mnenja odmevi 1997-2002 Tabela 2 : Viri za korpus občnih imen in leto publikacije .
Korpus je bil tokeniziran , odstranila so se ločila , cifre , najpogostejši znaki ( $ , & , % itd. ) .
Področje Velikost Različne besede Šport 1.888.753 42.029 Novice 2.178.834 63.912 Finance / gospodarstvo 3.411.268 62.837 Kultura / zabava 2.716.028 82.305 Potrošniške informacije 1.146.009 48.326 Osebne komunikacije 950.179 40.500 Skupaj 12.291.071 139.645 Tabela 3 : Velikost čistega korpusa .
Področje Različne besede Št. besed Pokritost Šport 17.256 96% Novice 31.479 96% Finance / gospodarstvo 24.469 96% Kultura / zabava 40.847 96% Potrošniške informacije 28.418 96% Osebne komunikacije 23.923 96% Skupaj 65.096 98,11% Tabela 4 : Velikost seznama občnih besed po številu besed ter pokritost izvornega korpusa po posameznih področjih in skupaj .
Ker se zlasti funkcijske besede pogosto uporabljene na različnih področjih , s korpusom pa niso zajete vse , je bil dodatno k seznamu občnih besed ročno zbran seznam funkcijskih besed , ki jih je končno število .
V projektu LC-STAR je veliko pozornosti namenjene tudi lastnim imenom , saj so pogosto uporabljena v različnih aplikacijah , njihovo izgovorjavo pa je težko pravilno določiti , zlasti pri tujih lastnih imenih .
Nabor slovenskih lastnih imen šteje 45.027 imen in je v skladu s specifikacijami projekta razdeljen na tri večje enote : osebna imena , krajevna imena , imena organizacij .
Področje Velikost % Podpodročje Osebna imena 22.469 49,2 mesta gore , reke in druge zemljep .
enote glavna mesta velika in pomembna mesta pomembni turistični in drugi kulturni spomeniki ulice Zemljepisna imena 11.828 25,9 države pridobitne in nepridobitne organizacije , podjetja Organizacije 11.357 24,9 trgovske znamke Skupaj št. vnosov 45.654 100 Skupaj št. razl .
Večbesedna lastna imena , kot so Stari _ trg , Novo _ mesto , štejejo kot en vnos .
Nekatera lastna imena so lahko hkrati razvrščena v več področij ( npr. Jelka je lahko ime trgovine ali osebno ime ) , takih vnosov je v slovarju čez 600.
Zbrana lastna imena so takšna , kot so v rabi v slovenskem prostoru .
Pri zemljepisnih lastnih imenih se pojavi precej tujih imen predvsem za kraje , za katere nimamo poslovenjenega imena , tuja imena vključena tudi z imeni večjih tujih korporacij in trgovskih znamk , veliko besed tujega izvora pa je tudi v imenih sicer slovenskih podjetij .
Viri , iz katerih so bile pridobljene besede , in vrsta virov so opisani v tabeli 6.
Področje Viri Vrsta vira Osebna imena Onomastica CD Zemljepisna imena Krajevni leksikon Slovenije CD Veliki družinski atlas ročno Atlas Slovenije ročno Geografski atlas sveta za šole ročno Slovenija : turistični vodnik ročno Interaktivni atlas Slovenije internet Onomastica CD Organizacije Telefonski imenik Slovenije : Pomlad 2002 CD Onomastica CD internet , trgovine internet , ročno Tabela 6 : Viri in vrsta virov za pridobivanje seznama lastnih imen .
Aplikacijske besede .
Seznam aplikacijskih besed je dvojega izvora : - števila , črke in okrajšave iz korpusa občnih besed ; - referenčni seznam 5700 besed v ameriški angleščini , preveden v slovenščino , ki pokriva 6 večjih aplikacijskih področij : globalna področja ( mere , znaki , okrajšave ...
) , finančne storitve , potovanja , posredovanje informacij , kontrola , telekomunikacije .
Skupaj - občne besede , zaprti nabori , lastna imena in aplikacijske besede - je bilo tako zbranih okoli 113.000 besed , ki predstavljajo vnose za veliki slovar , namenjen za izboljšanje razpoznave in sinteze govora .
Oblikoslovno označevanje in fonetični prepis .
Besede so zlogovane ; znak za zlog je vezaj (-).
Pri večbesednih vnosih je premor med besedami označena z višajem (#).
Samostalnikom moškega spola je v 4. sklonu pripisana oznaka za živost ali neživost , pri pridevnikih in prislovih je označen atribut o stopnji , števniki so dodatno označeni kot glavni , vrstilni , množilni in ločilni , zaimki so razdeljeni na osebne , kazalne , oziralne , nedoločne , vprašalne , povratne in svojilne , prislovi pa na prislove časa , kraja in načina .
Slovarji za govorno orientirano prevajanje za slovenski jezik .
Drugi del projekta LC-STAR je orientiran v proučitev in izgradnjo jezikovnih virov , ki bi izboljšali govorno orientirano prevajanje .
V skladu s tem so bili v projektu proučeni različni pristopi k strojnemu prevajanju govora in rezultati kažejo , da je mogoče razviti robustno strojno simultano prevajanje govora za majhno do srednje veliko semantično področje .
Največji problemi strojnega simultanega prevajanja govora so glede na raziskave naslednji : - pridobivanje podatkov , ki so specifični za posamezna področja , eno - ali dvojezičnih - robustnost komponent strojnega simultanega prevajanja govora na napake pri razpoznavanju in značilnosti govorjenega jezika - razvoj učinkovite enote za razpoznavo govora in govorno orientirano prevajanje ( Moreno et al. , 2004 ) Trenutno najbolj obetaven pristop k strojnemu prevajanju govora je statistični .
Obstoječi sistemi , ki te temeljijo na statističnem strojnem prevajanju , uporabljajo velike dvojezične poravnane korpuse za učenje sistemov .
Novejše raziskave ( Koehn et al. , 2003 ; Vogel et al. , 2003 ) pa kažejo , da so lahko uporabni tudi kratki dvojezični poravnani izseki iz stavkov , značilnih za neko semantično področje .
Na področju pogovorov v turizmu , na katero je orientiran projekt LC-STAR , so pogoste t.i. fraze , kot so " kje je ...
Tudi eksperimenti v okviru projekta ( Ueffing , Ney , 2003 ) so pokazali , da bi seznam takih fraz pomagal izboljšati sisteme govorno orientiranega prevajanja , prav tako uspešnost izboljša , če so besede v takem dvojezičnem slovarju fraz označene glede na pripadnost besedni vrsti in lematizirane .
Zaradi zgoraj navedenih rezultatov se v projektu pripravljata dve vrsti virov , namenjenih za izboljšanje komponente govorno orientiranega prevajanja za področje turizma : - poravnani slovar 10.000 fraz v 9 jezikih ( tudi slovenskem ) , ki se pogosto uporabljajo v turizmu ; besedam so dodane oznake o besedni vrsti v skladu s shemo , določeno v prvem delu projekta , in lema ; - enojezične slovarje polnopomenskih besed , ki se pojavijo v teh frazah , urejene enako kot veliki slovarji za izboljšanje razpoznave in sinteze govora .
Vir za poravnani slovar fraz je bil referenčni seznam fraz v ameriški angleščini , ki je bil preveden v ostale jezike , tudi slovenščino .
Poleg natančnih določil in skupnih standardov , po katerih so razviti vsi jezikovni viri v okviru projekta , konzorcij LC-STAR zagotavlja kakovost tudi z neodvisno validacijo .
Validacija je delno avtomatska in delno ročna .
SPEX je razvil programska orodja za avtomatsko validacijo , s katerimi se preverja ustrezna formalna struktura slovarjev .
Programska orodja so na voljo partnerjem , da lahko sami preverjajo ustreznost jezikovih virov , formalno pa preveri rezultate tudi SPEX .
Validacijo opravljajo neodvisni strokovnjaki , naravni govorci posameznih jezikov .
Za slovenščino lahko podobno kot za druge jezike ugotovimo pri večini obstoječih jezikovnih virih , ki so uporabni za sisteme strojnega simultanega prevajanja govora , pomanjkanje kakovosti , premalo široko pokritost , pomanjkljivo primernost za razvoj sinteze in razpoznave govora ter pomanjkanje standardov .
Sodelovanje v projektu LC-STAR je prispevek k izboljšanju tega stanja .
V članku je predstavljen spletni slovar Online SLO-DE-SLO , ki postaja eden izmed pomembnejših slovenskih virov z uporabo modernih jezikovnih tehnologij na medmrežju , kar kažejo tudi statistike poizvedovanj , ki jih beleži poseben program na strežniku .
Uvodoma so v članku predstavljeni trenutni način delovanja slovarja , njegova struktura in vsebina ter viri besedišča .
Sklep ( 6. poglavje ) vsebuje ugotovitve dosedanjega dela s slovarjem Online SLO-DE-SLO in predstavlja načrte za prihodnost .
Vsebino slovarja lahko opišemo na dva načina ; a ) glede na to , koliko besed in s katerega področja je mogoče najti v slovarju ter b ) kako so te besede vpisane v slovar .
Viri in področja besedišča so obravnavani v podpoglavju 2.1. , podpoglavje 2.2. pa bolj natančno predstavlja enoto " vpis " in vsebino vpisa v slovarju Online SLO-DE-SLO .
Slovar Online SLO-DE-SLO je bil na začetku namenjen predvsem učečim se slovenščine kot drugega / tujega jezika , po novem pa vsebuje tudi že besedilno gradivo z različnih področj , čeprav največji del slovarja še vedno temelji na enojezičnem učbeniku za slovenščino kot drugi / tuji jezik Odkrivajmo slovenščino ( čuk et al. , 1996 ) , ki je namenjen pouku odraslih začetnikov slovenskega jezika na tujih univerzah ( npr. na Univerzi v Hamburgu ) in tečajih slovenščine kot drugega / tujega jezika v Sloveniji .
Postopek izbora časopisnega besedišča je opisan v Lönneker in Jakopin ( 2003 ) .
V tabeli 1 najdemo pregled opisane vsebine slovarja ; v poglavju 3.1 bo razloženo , kako uporabnik lahko omeji iskanje na izbrano področje .
V prejšnjem poglavju nisva obravnavali enote " beseda " , ampak " vpis " .
Razlog za to je , da lahko predstavlja vpis v Online SLO-DE-SLO nekaj drugega kot beseda .
Trenutno obstajajo tri vrste vpisov : - osnovna besedna oblika oziroma slovenska lema ( npr. opisovati ) in natančno en prevod v nemščino – drugi prevod je torej tudi drug vpis ; - oblikoslovna oblika ( npr. opisujem ) in njen prevod v nemščino ; - slovenski stavek ( npr. Telefon ne dela .
Stavki in besedne zveze ilustrirajo uporabo besed v kontekstu ; včasih je namreč dobesedni prevod nemogoč ali nepopoln .
Mogoče je najti tudi vpise , ki so večbesedni v slovenskem jeziku , ampak ustrezajo samostojni besedi v nemškem jeziku , npr. človeška ribica ' Grottenolm ' , delo v parih ' Partnerübung ' ( pri vajah v učbeniku ) ; telefonski naročnik ' Fernsprechteilnehmer ' itd.
Vmesnik slovarja obstaja v dveh različicah , namreč v nemškem in slovenskem jeziku .
Na osnovni strani obeh različic imajo uporabniki možnost iskanja niza z natančnim ujemanjem , torej natančno s tem , kar so natipkali .
Izjeme so naslednje : - ni pomembno , ali napišemo besedo z velikimi ali z malimi črkami ; - posebne znake slovenske oz. nemške abecede , ki jih morebiti prav vsi uporabniki spleta nimajo na svoji tipkovnici , lahko nadomestimo s črkami c , s , z za slovenske črke č , š in ž ali s kombinacijami ae , oe , ue in ss za nemške črke ä , ö , ü in ß. Vmesnik vsebuje dve okenci za vnos , in sicer eno za vnos slovenskih besed , ki jih prevajamo v nemščino , in eno za vnos nemških besed , ki jih prevajamo v slovenščino .
Takšen postopek je bolj smiseln v primeru , da jezika nimata velikega števila enakopisnic ( npr. je je enakopisnica v nemšcini in v slovenšcini , zato bi v tovrstnem primeru takšen slovar izpisal obe možnosti ) .
Tako pridemo do razširjenega vmesnika ( glej sliko 2 ) .
Tukaj uporabnik lahko izbira področje in obseg besedišča , ki ga zanima : besedišče na podlagi učbenika , časopisnih besedil ali strokovnih seznamov .
Funkcija " omejitve iskanja " na posamezne zbirke omogoča uporabnikom , da uporabljajo slovar Online SLO-DE-SLO kot bi bil sestavljen iz večih knjig : Strokovnjak lahko izbira samo seznam strojniških izrazov , učenec jezika le učbenike , itd.
Še med tremi možnostmi iskanja : - natančno ujemanje ( enako kot na osnovni strani ) ; - natančno ujemanje ali kot del besedila ; ta način najde tudi nize , ki se pojavljajo znotraj besed ; npr. za niz ogl dobimo seveda oglas in ogled , pa tudi ubogljiv in vrtoglavica , tako kot še veliko drugih besed , oblik in stavkov ; - besede , ki se začnejo s tem nizom ; ta način najde npr. za niz ogl besede oglas , ogled , in vse druge vpise , ki se začnejo z nizom ogl , ne pa tudi besed ubogljiv ali vrtoglavica .
Kot rezultat dobimo seznam najdenih vpisov , v katerem so le-ti urejeni v tabeli po abecednem redu in sicer v izhodiščnem jeziku , t.j. jeziku , v katerem smo napisali iskano besedo ali niz .
To pomeni , da so pri vnosu slovenskega niza glasov ( besede ali dela besede ) , kot npr. opi , izpisi ( ki jih uporabnik iz slovenščine želi prevesti v nemščino ) urejeni tako kot prikazuje slika 3.
V zimskem obdobju 2002/2003 je bilo mesečno zabeleženih že približno 10.000 poizvedovanj po slovarju .
V maju 2004 je bilo zabeleženih natančno 23.228 poizvedovanj .
Na podlagi teh rezultatov pa še ne vemo , ali je slovar bolj priljubljen pri nemško ali slovensko govorečih uporabnikih , saj uporabnik seveda lahko prevaja iz maternega jezika tako kot iz tujega jezika .
Statistike uporabe različnih vmesnikov v nemškem oz. slovenskem jeziku pa pokažejo približno isto razmerje ( 3 : 2 za nemški jezik ) .
Spletni vmesnik ni koristen samo za uporabnike , pač pa tudi za avtorje slovarja .
Iz statistik poizvedovanj lahko prepoznamo veliko zanimivih podatkov , kot npr. kako narašča oz. upada pogostost uporabe slovarja , katera smer prevoda je bolj priljubljena pri uporabnikih , in nenazadnje , katere besede in stavke ter iz katerih področj uporabniki najpogosteje vnašajo oz. iščejo .
Iskanje za vpise , ki se v slovenščini začnejo z nizom opi Slika 3.
Rezultati iskanja za vpise , ki se v slovenščini začnejo z nizom opi Prva dva podatka , to sta pogostost uporabe in priljubjenost smeri prevoda , sta kvantitativna : lahko jih izračunamo neposredno iz številskih vrednosti , in zato ju je na podlagi podatkov v zbirki relativno enostavno navesti ( glej 3.2. ) .
Postopka za evalvacijo tega podatka sta dva , in sicer a ) primerjava poizvedovanj s trenutno vsebino slovarja ( Lönneker in Jakopin , 2003 ) ali pa b ) primerjava poizvedovanj z morebitnimi vrstami besedilnih korpusov , iz katerih bi lahko izbrali dodatne vpise slovarja .
Bolj podrobno nas je zanimalo , če bi bilo v Online SLO-DE-SLO koristno najprej razširiti del besedišča , ki temelji na časopisu DELO .
Narejena je bila primerjava frekvenc vseh lem v zabeleženih poizvedovanjih z relativnimi frekvencami lem treh po besedilni vrsti različnih korpusov : ta so bila leposlovna , časopisna ( DELO ) ter strokovna besedila .
Zato trenutno časopis DELO ni najustreznejši vir za izpopolnjevanje slovarja Online SLO-DE-SLO , temveč bi potrebe uporabnikov najbolj zadovoljila vključitev izbora novih besed in izrazov iz leposlovnih besedil .
Izraz izvira s področja sociologije ( podpoglavje 4.1. ) , na medmrežju pa ima drugačen in ožji pomen ( podpoglavje 4.2. ) .
Če namreč razširimo prvi pomen interaktivnosti na področje spletnih slovarjev , pridemo do nekaterih idealov leksikografije ( podpoglavje 4.3. ) .
Interaktivnost na področju sociologije .
/.../
Taka interakcija med individuumi ( med avtorjem in uporabnikom ) je zelo posredna .
Interaktivnost na področju medmrežja .
V tem " medmrežnem " smislu npr. odgovor na klikanje na povezave do statičnih straneh HTML ni interaktiven , ker pri tem postopku strežnik ne oblikuje novih strani , temveč samo pošlje že obstoječe strani .
Takšne povezave lahko imenujemo " notranje povezave " , ker napotijo do strani , ki so na istem strežniku .
Druge interaktivne leksikografske sanje .
Interakcijo med avtorjem in uporabnikom slovarja , ki je že bila obravnavana v podpoglavju 4.1. , bi bilo mogoče urediti tudi preko drugega vmesnika , na katerem bi uporabnik lahko vnesel manjkajoče besede in izraze skupaj z morebitnimi prevodi .
Ker pa je Online SLO-DE-SLO privaten projekt in ni stalno financiran , trenutno še nima možnosti vzpostavitve takega vmesnika ali pa foruma uporabnikov , kjer bi le-ti lahko sami diskutirali o prevodih besed , ali kjer bi si med seboj pomagali in popravljali kot v izpopolnjenem uporabniškem sistemu Papillon , ki ga predstavljata Mangeot-Lerebours in Sérasset ( 2002 ) .
Drug način je iskanje glede na oblikoslovne kategorije , ki je posebej koristno pri oblikoslovno bogatih jezikih kot sta npr. slovenščina in nemščina .
Kot je bilo omejeno pri opisu enote " vpis " ( podpoglavje 2.2. ) , uporablja slovar podatkovno zbirko , ki teče na strežniku s pomočjo programa MySQL .
Podatkovna zbirka lahko bere tekstovne datoteke , kjer tabulatorji razmejujejo posamezna podatkovna polja ; npr. tabela v podatkovni zbirki , ki bi neposredno brala vpise s strukturo prikazano na sliki 1 , bi imela pet polj .
Že na sliki 2 zgoraj je bilo mogoče videti , da različni programi za pripravljanje leksikografskih datotek ter za prikazovanje rezultatov v slovarju Online SLO-DE-SLO dodajo še nekaj slovničnih informacij .
Za pretvorbo leksikografiskih datotek v tabele podatkovne zbirke uporabljava poseben program , ki ga je prva avtorica napisala v programskem jeziku Perl .
Pri pretvorbi program doda še nekaj informacij , tako da je tabela v podatkovni zbirki bogatejša in ima več polj kot leksikografske datoteke .
Bolj zahtevna pri tem postopku je delitev polj z informacijami za nemške vnose , ki jih vidimo tudi v rezultatih na sliki 2 ; npr. ' ich schildere ' , kjer je le zaimek ich napisan v poševnem tisku .
Program razdeli nemško polje v leksikografski datoteki v dve polji za tabelo v podatkovni zbirki : npr. izraz ich schildere ' opisujem ' razdeli v ich ( zaimek in zato nepolnopomenska beseda ) in schildere ( oblika glagola in zato polnopomenska beseda ) .
V podatkovni zbirki imajo nepolnopomenske ( slovnične ) in polnopomenske besedne vrste ločena polja .
Zato jih prepozna tudi program za prikazovanje rezultatov in jih lahko natisne na dva različna načina .
Program lahko najde vpis ich schildere tudi za krajšo poizvedbo schildere , in sicer že pri iskanju natančnih ujemanj .
Slovar se torej odzove na enak način pri poizvedovanju besede schildere kot pri poizvedovanju " fraze " ich schildere , kar pomeni večjo fleksibilnost : Uporabniki namreč včasih vpišejo le glagolsko obliko , včasih pa poleg te vpišejo tudi nepolnopomenske ( slovnične ) besede .
V pripravi je izboljšana struktura slovarja , ki je sestavljena iz dveh tabel .
Tako je omogočen bolj ustrezen vrstni red izpisa rezultatov , kjer besedne oblike neposredno sledijo svoji osnovni slovarski obliki ( npr. oblika opišem sledi besedi opisati v seznamu rezultatov ) .
Na nejavni strani slovarja sva dodali poskusno funkcijo poizvedovanja , ki iskorišča to izboljšano strukturo slovarja .
Besedne oblike so v tej poskusni različici slovarja dodatno označene s sliko puščice .
S slike 4 je razvidno , da so v poskusni verziji oblike glagolov opisati in opisovati napisane neposredno po njegovih osnovnih oblikah , v nasprotju z trenutno verzijo , kjer so vse napisale po abecednem redu in se zato nahajajo na koncu seznama ( slika 3 ) .
Uporabniki bodo torej potem dobili slovenske besede le z informacijo o naglasu ( glej sliko 4 ) .
Možnost XML-zapisa .
Vendar to vprašanje trenutno ni najbolj pereče , saj sva že napisali ustrezne programe za pretvarjenje leksikografskih datotek v format podatkovne baze MySQL in slovar brez težav deluje tudi v tej obliki .
Slika 4 : Rezultati iskanja v jasnejem vrstnem redu - poskusna verzija V ta namen bo potrebno najprej izvedeti , kakšno strukturo XML datotek oz. kateri DTD ( document type description ) te aplikacije uporabljajo .
V slovarju Online SLO-DE-SLO so namreč npr. stavki in deli stavkov samostojni vpisi , v japonsko-slovenskem slovarju pa so podrejeni izbranemu geslu , kar bi posledično pomenilo uporabo drugih elementov iz istega DTD-ja .
Delo bova nadaljevali na dva načina .
Ker je ovrednotenje statistike poizvedovanj po slovarju pokazalo , da uporabnike zanimajo predvsem besede in fraze , ki se pojavljajo v vsakdanji rabi jezika , pa tudi pogovorne besede ( Jakopin in Lönneker , 2004 ) , bodo nove besede izbrane iz novejših učbenikov in iz slovenske izvirne literature .
Kar zadeva slovensko izvirno literaturo , kratke zgodbe in romani vsebujejo dialoge in opise , v katerih lahko najdemo uporabo veliko pogovornih izrazov .
Drugi del načrtovanega dela predstavlja izpopolnjevanje strukture slovarja in objava oblikoslovne funkcije pri poizvedovanju , kot je bilo prestavljeno v 5. poglavju .
Struktura tabele za besedne oblike ( poenostavljeno ) .
Korpusi so deli slovenskega besedilnega korpusa Nova Beseda ( http://bos.zrc-sazu.si [ 4. septembra 2004 ] ) , ki vsebuje več kot 120 milijonov besed .
Metoda odločitvenih dreves je zelo znana in pogosto uporabljena metoda v procesu gradnje sistemov za avtomatsko razpoznavanje govora .
Hkrati pa je ta metoda že tako ustaljena , da je ponavadi ta del procesa obravnavan kot že zaključeno poglavje .
V tem članku je metoda odločitvenih dreves ponovno vzeta pod drobnogled vključno s parametri , ki vplivajo na postopek izgradnje odločitvenega drevesa .
V naravnem govoru lahko velik del variabilnosti govornega signala pripišemo kontekstni variabilnosti .
Ker naši govorni organi niso sposobni nenadnih in velikih sprememb v gibanju , se to odraža na akustični realizaciji posameznega fona , ki je zelo odvisna od pozicije govoril pred in po izgovorjavi le-tega .
V sistemih za razpoznavanje govora , ki temeljijo na prikritih Markovih modelih ( PMM ) , lahko to lastnost govora uspešno modeliramo .
Takšni modeli tipično vsebujejo tri oddajna stanja in jim pravimo trifonski modeli .
Največkrat uporabljeni metodi sta podatkovno vodena metoda in pa metoda odločitvenih dreves .
Ti metodi nam omogočata , da se za ocenitev določenih parametrov " podobnih " modelov uporabljajo isti učni podatki .
Vključitev teh metod v postopek gradnje sistema za avtomatsko razpoznavanje govora je tako pogosto uporabljena , da se zdi že skoraj samoumevna .
Ta prispevek pa ponovno odpira analizo metode odločitvenih dreves ter predstavi probleme podajanja ekspertnega lingvističnega znanja pri tej metodi .
Tako nam članek v 2. poglavju predstavi tehnike povezovanja parametrov PMM in podrobno prikaže metodo odločitvenih dreves ter parametre , ki vplivajo na izgradnjo odločitvenega drevesa .
Poglavje 6 predstavi zaključke in postavi smernice za nadaljnje delo .
Pri podatkovno vodeni metodi najprej zgradimo ločene trifonske modele za vse kontekste , ki se pojavijo v učnih podatkih .
Nato modele razbijemo tako , da vsako stanje predstavlja svojo skupino .
Velikost skupine se definira kot največja razdalja med katerimakoli stanjema v določeni skupini .
Sledi združevanje skupin .
Metoda odločitvenih dreves pa v nasprotju s podatkovno vodeno metodo uporabi podano ekspertno lingvistično znanje za definiranje modelov tudi tistih trifonov , ki se nikoli ne pojavijo v učnih podatkih .
To znanje je ponavadi podano v obliki datoteke , kjer so navedene skupine fonov za določen jezik .
Glede na postavljena vprašanja se skupine stanj razdeli .
Iz teh N korenskih vozlišč se zgradi tudi N odločitvenih dreves .
Deljenje vsakega vozlišča v dve novi povzroči povečanje logaritemske podobnosti podatkov v novih vozliščih , saj za opis ( modeliranje ) iste količine podatkov uporabimo dvakrat več parametrov .
Postopek deljenja vozlišč v odločitvenem drevesu se ustavi šele , ko porast logaritemske podobnosti podatkov , pri deljenju določenega vozlišča , pade pod določen prag .
Vsi pari listov , ki bi se jim z združevanjem zmanjšala logaritemska podobnost za manj kot je to določeno z že zgoraj omenjenim pragom , se nato združijo .
Algoritem , ki se uporablja pri izgradnji odločitvenega drevesa , je prikazan na sliki 1.
Parametri , ki vplivajo na izgradnjo odločitvenega drevesa s programskim paketom HTK .
Preden se lahko začne avtomatski postopek gradnje odločitvenih dreves , je potrebno definirati posebno datoteko ( za lažjo razlago jo poimenujmo destree.hed ) z vsemi določenimi fonetičnimi vprašanji , ukazi za ustvarjanje korenskih vozlišč dreves in vrednostmi pragov .
HTK uporablja določilo , da prikrit Markov model z imenom a-b+c predstavlja kontekstno odvisno verzijo fona b , ki se uporablja , ko je njegov levi kontekst fon a in desni fon c. Vsako vprašanje , postavljeno znotraj odločitvenega drevesa , ima obliko " Ali je levi ( desni ) kontekst pripadnik fonetične skupine M ?
" , pri čemer levi kontekst fona pripada skupini slovenskih nosnikov , kjer je skupina določena z elementoma m in n. V našem primeru izdelave sistema za razpoznavanje govora pa je dovolj , da ustvarimo datoteko ( za lažjo razlago jo poimenujmo broad.cls ) , v kateri definiramo vse skupine fonov določenega jezika .
state [ 2 ] } Zgornji ukaz nam pove , da naj se v korenskem vozlišču združijo vsa začetna stanja vseh prikritih Markovih modelov fona a. To vozlišče se bo v procesu gradnje odločitvenega drevesa delilo glede na definirana vprašanja vse dokler porast logaritemske podobnosti , pri deljenju posameznega vozlišča , ne pade pod prag 350.0.
Torej se z ukazom TB določi tudi minimalni porast logaritemske podobnosti , ki je potreben , da se določeno vozlišče sploh lahko deli .
Oceno količine učnih podatkov ( v zgornjem primeru datoteko z imenom state.cnt ) pridobimo med procesom preračunavanja trifonskih modelov pred postopkom spajanja le-teh .
Kot glavna prednost postopka odločitvenih dreves pred podatkovno vodenim postopkom povezovanja parametrov je bilo omenjeno dejstvo , da nam ta postopek omogoča natančno modeliranje trifonov , ki se ne pojavijo med učnimi podatki .
Med preiskovanjem se odgovarja na zastavljena vprašanja o kontekstu tega trifona , dokler ne pridemo skozi drevo do končnih listov , ki nam tako predstavljajo stanja modela novega trifona .
Z definiranjem fonetičnih skupin nam je v metodi odločitvenih dreves omogočeno vnašanje ekspertnega lingvističnega znanja v proces gradnje akustičnih modelov .
Tu pa se pojavi vprašanje , kako uporaben je ta postopek pri večjezikovnih sistemih za razpoznavanje govora ter pri podatkovnih bazah , kjer je nivo šuma visok ( telefonski govor ) .
Druga možnost reševanja tega problema je uporaba SPE ( The Sound Pattern of English ) , ( Chomsky et al. , 1968 ) teorije pri definiranju skupin fonov ( Rodman et al. , 2002 ) .
Postavlja pa se tudi vprašanje , kako pomembno je sploh določiti " prave skupine fonov " in ali bi nam naključno generirane skupine fonov močno pokvarile rezultat pravilnega razpoznavanja govora ( Žgank et al. , 2003 ) , ( Rodman , 2002 ) .
Tako bi proces gradnje odločitvenega drevesa izbral za tvorbo vprašanj le zanj pomembne skupine in izpustil nepomembne .
Hkrati pa se je postavilo tudi vprašanje , ali je določitev vrstnega reda skupin fonov v datoteki broad.cls pomembna .
Kot del projekta COST 249 je bil ustvarjen sistem za razpoznavanje govora , ki je posebej namenjen uporabi na podatkovni bazi SpeechDat ( II ) ( Lindberg et al. , 2000 ) .
Za izgradnjo sistema se uporabljajo HTK orodja ( Young et al. , 2000 ) ter tudi nekatera dodatna orodja , ki so bila napisana v okviru projekta SpeechDat ( II ) .
Za testiranje domnev , navedenih v 3. poglavju , sem tako ustvaril referenčni sistem za razpoznavanje govora , ki pa se je šele pri procesu ustvarjanja odločitvenih dreves razdelil na dva različna sistema .
Edina datoteka , ki se je razlikovala pri gradnji obeh sistemov , je bila datoteka broad.cls , v kateri so določene skupine fonov , ki jih v postopku gradnje sistemov podamo kot ekspertno lingvistično znanje .
Vrstni red teh skupin sem v teh datotekah generiral naključno .
S tako določenima sistemoma za avtomatsko razpoznavanje govora so bili zagotovljeni pogoji , da je bil edini faktor , ki bi lahko vplival na razliko v uspešnosti razpoznavanja govora obeh sistemov , vrstni red določanja skupin fonov v datoteki broad.cls .
Na enak način sta bila zgrajena še dva sistema .
V okvirju projekta COST 249 je bilo ustvarjenih 6 testov , namenjenih ocenjevanju kvalitete razpoznavanja govora sistemov zgrajenih na osnovi podatkovne baze SpeechDat ( II ) : - Test da / ne ( seznam vsebuje le 2 besedi ) - Test izoliranih števk ( seznam vsebuje 10 besed ) - Test niza števk ( seznam vsebuje 10 besed ) - Test ukaznih besed ( seznam vsebuje 31 besed ) - Test imen krajev ( seznam vsebuje 597 besed ) - Test fonetično uravnoteženih besed ( seznam vsebuje 1491 besed ) Z namenom analize zgradbe čim večjega dela odločitvenega drevesa sem se odločil uporabiti le zadnja dva testa .
SPE-1 SPE-2 Ref-1 Ref-2 Test-FUB 16,31 15,78 17,51 18,04 Test-IK 7,65 6,63 6,12 7,14 Tabela 1 : Vrednosti napake razpoznavanja besed (%) za sistema , ki temeljita na teoriji SPE ( SPE-1 , 2 ) ter za referenčna sistema ( REF-1 , 2 ) pri testih fonetično bogatih besed ( Test-FUB ) in imen krajev ( Test-IK ) Iz rezultatov v tabeli 1 je razvidno , da obstaja vpliv spremembe vrstnega reda skupin fonov na uspešnost sistemov za razpoznavanje govora .
Vidimo da se ta vpliv prikaže pri testu fonetično uravnoteženih besed kot 0,53% spremembe absolutne napake razpoznavanja besed ( 3,25% relativno ) , pri testu imen krajev pa je ta sprememba celo 1,02% ( 13,3% relativno ) .
Datoteka tied.lis se ustvari , da nam po procesu gradnje odločitvenega drevesa poda seznam vseh zgrajenih modelov trifonov .
V datoteki fulltri.des pa je določena struktura odločitvenega drevesa za vsako oddajno stanje vsakega fona .
Tudi primerjava zgrajenih modelov trifonov nam pokaže , da modeli niso identični .
Seveda se postavlja vprašanje , kako lahko le vrstni red definiranja skupin fonov tako močno spremeni zgrajene sisteme .
Slika 2 : Vpliv vrstnega reda skupin fonov na odločitveno drevo Glede na to , katera vprašanja se izbirajo v procesu gradnje odločitvenega drevesa in na kakšen način , sem našel možno razlago za takšno spremembo .
Predpostavimo , da imamo vozlišče v drevesu , ki predstavlja prvo stanje prikritega Markovega modela generaliziranega trifona * - n + * z vsemi možnimi levimi in desnimi konteksti .
Denimo , da imamo v podatkovni bazi le učne primere trifona n z levimi konteksti a , b , u , v ( a-n + * , b-n + * , u-n + * , v-n + * ) ter da imamo med skupinami fonov definirani tudi skupini skupina 1 = ( a , b , x ) ter skupina 2 = ( a , b ) .
Skupina 1 vsebuje še fon x , ki ga skupina 2 ne vsebuje .
Torej ne glede na to , katera od teh dveh skupin razdeli to vozlišče , bo izračunan porast ocene logaritemske podobnosti v novih vozliščih enak .
Če je v datoteki skupina 1 definirana pred skupino 2 , se bo vozlišče razdelilo na dve novi , kot je prikazano na sliki 2a , v nasprotnem primeru pa nastane situacija , prikazana na sliki 2b .
V primeru , da skupina 1 deli to vozlišče , lahko iz slike 2a vidimo , da se bo prvo stanje modela trifona n z levim kontekstom x " učilo " iz istih učnih podatkov kot tudi prva stanja modelov trifonov a-n + * , b-n + * , saj je levi kontekst x uvrščen v skupino 1.
Če pa je skupina 2 definirana v datoteki broad.cls pred skupino 1 , nam nastala situacija na sliki 2b prikazuje , da se bo prvo stanje modela trifona n z levim kontekstom x " učilo " iz istih učnih podatkov kot tudi prva stanja modelov trifonov un + * , v-n + * .
V prispevku je bilo pokazano , da obstaja vpliv določanja vrstnega reda skupin fonov na uspešnost sistemov za avtomatsko razpoznavanje govora , ki uporabljajo metodo odločitvenih dreves .
Zaradi razlogov , opisanih v podpoglavju 5.1 , je tudi jasno , da skupine fonov ne smejo biti definirane brez vsakršnega lingvističnega znanja in potem prepuščene avtomatičnemu procesu gradnje odločitvenega drevesa , da izbere najboljše med njimi .
Na njihovo razvrstitev bi v tem primeru še najbolj vplival vrstni red definiranih skupin fonov v datoteki broad.cls .
Potrebno pa bo bolj natančno oceniti , kako pomemben je lahko ta vpliv ob pojavljanju velikega števila trifonov , ki se ne pojavijo v učnih podatkih .
Sprememba uspešnosti razpoznavanja govora v opisanih poskusih res ni velika .
Hkrati pa , če upoštevamo dejstva , da gre ta napaka le na račun spremembe vrstnega reda skupin fonov v datoteki broad.cls ter da se pri testu fonetično uravnoteženih besed pojavi le 50 trifonov , ki se ne pojavijo med učnimi podatki ( pri testu imen krajev celo manj ) , skupno pa imamo v odločitvenem drevesu definiranih 6954 trifonov , lahko vidimo , da ta del predstavlja le dobrih 0.7 % vseh trifonov .
Iz rezultatov testov je razvidno , da to spremeni vrednost absolutne napake razpoznavanja besed za 0,53 % oz. 1.02 %.
To pa ni zanemarljivo glede na tako majhno število trifonov , ki se ne pojavijo v postopku učenja sistema .
Vsekakor so ti rezultati bolj pomembni v raziskavah tistih jezikov , kjer nimamo dovolj učnih podatkov , saj je tam ekspertno vneseno lingvistično znanje eden ključnih faktorjev za uspešno razpoznavanje govora .
Pri tako definiranem testu vrstni red skupin ne bi smel več vplivati na izgradnjo odločitvenega drevesa in s tem tudi na uspešnost takega sistema za avtomatsko razpoznavanje govora .
Če en trifonski model predstavlja fon znotraj več različnih kontekstov , pravimo takim modelom generalizirani ( generalised ) oziroma posplošeni trifonski modeli .
Prispevek opisuje uvajanje prevajalskega namizja Trados v delovni proces slovenske prevajalske agencije .
V zaključku prispevek še nakaže možnosti uporabe opravljenega dela za prihodnje projekte .
Za uporabo prevajalskih tehnologij se v zadnjih letih tudi v Sloveniji odloča vse več prevajalcev oziroma njihovih delodajalcev , ki želijo ostati konkurenčni in naročnikom nuditi kakovostne prevode v najkrajšem možnem času in po sprejemljivi ceni .
Zaradi nedostopnosti najrazličnejših jezikovno vezanih orodij za slovenski jezik ponavadi posegajo po prevajalskih namizjih , ki vključujejo pomnilnik prevodov , orodje za poravnavo besedil in orodje za gradnjo terminoloških baz , poleg tega pa omogočajo tudi lažje načrtovanje in vodenje prevajalskih projektov .
O izkušnjah pri rabi teh orodij pri nas in v tujini je poročalo že več avtorjev , predvsem v okviru prevajanja zakonodaje EU ( Krstič / Belc , 1999 ; Željko , 2000 , Taes 2001 ) .
Pri celotnem projektu je sodelovala prvopodpisana avtorica tega prispevka , ki je na agencji opravila večino nalog , potrebnih za začetek dela s Tradosom .
Najprej sta opisana prevajalski projekt , pri katerem je agencija začela uporabljati prevajalsko namizje , in način dela pred nakupom Tradosa .
Predstavitvi pripravljalnih nalog , potrebnih za prehod na delo s Tradosom sledi vrednotenje odločitve za nakup Tradosa , pri čemer so upoštevani stroški uvajanja prevajalskih tehnologij v obstoječ prevajalski projekt ter primerjava količine in kakovosti opravljenih prevodov in zaslužka pred uporabo Tradosa in danes .
V nadaljevanju so opisani prednosti in slabosti dela s Tradosom ter mnenje prevajalcev o tem prevajalskem namizju , prispevek pa sklenemo z razmislekom o možnostih uporabe opravljenega dela in pridobljenih izkušenj pri podobnih projektih v prihodnje .
Začel se je septembra 2002 , ko je naročnik za obdobje enega leta potreboval prevode strokovno zahtevnih besedil s področja bančništva iz slovenščine v angleščino , in sicer za približno 100 prevajalskih strani na mesec .
Gradivo je bilo delovne narave , prevodi pa so bili namenjeni tujim članom nadzornega sveta za interno rabo .
Naročnik prevodov ni potreboval dnevno , temveč pred sejami nadzornega odbora , zaradi česar je bil ritem dela neenakomeren in roki za dokončanje prevodov dokaj kratki .
Delo je potekalo tako , da je naročnik po elektronski pošti agenciji poslal izvorna besedila , koordinator projekta pa je besedila razdelil med prevajalce .
Končani prevod so po elektronski pošti vrnili agenciji , koordinator projekta pa ga je predal naročniku .
Agencija je imela zgolj vlogo posrednika med naročnikom in prevajalci , pri čemer je bila njena glavna naloga zagotavljanje pravočasne dostave prevoda naročniku .
Tematsko so se besedila delila na naročnikovo tekočo problematiko in na dolgoročne dejavnosti , zato je bilo med njimi kmalu zaznati vsebinsko sorodnost in kontinuiteto .
Koordinator projekta je prevajalcem delo lajšal tako , da je , če je le bilo mogoče , prevajalcem vedno posredoval besedila istega tipa .
Čez nekaj časa so prevajalci ugotovili , da se v besedilih včasih ponavljajo samo strokovni izrazi , drugič pa celi odstavki ( npr. pri navajanju odločb Banke Slovenije ) .
Zunanji sodelavci so kupili osnovni paket Freelance , na agenciji pa smo kupili dva paketa Language Service Provider , ki omogoča prevajanje na mreži , pri čemer polni pomnilnik več prevajalcev hkrati .
Pred uporabo Tradosa je bilo treba pripraviti ustrezno tehnično okolje , namestiti namizja na računalnike , organizirati izobraževanje za prevajalce in izdelati pomnilnik prevodov ter terminološko bazo .
Na agenciji smo z intenzivnim delom vse pripravljalne dejavnosti opravili v dveh mesecih .
Na računalniku mora biti nameščen vsaj operacijski sistem Windows 98 , vendar proizvajalec priporoča Windows NT , Windows 2000 ali Windows XP , poleg tega morata biti nameščena še vsaj MS Office 97 in Microsoft Internet Explorer 5.5 ( Trados , 2003 ) .
Zaradi naštetih zahtev so si prevajalci uredili ADSL in kupili potrebno opremo .
Namestitev Tradosa na osebne računalnike .
Čeprav proizvajalec zagotavlja , da z namestitvijo Tradosa uporabniki ne bi smeli imeti težav , se je koordinator projekta odločil , da ga bo prevajalcem pomagal namestiti .
Pri več kot polovici namestitev se v Wordu niso pravilno izpisovali šumniki , vendar je Tradosov zastopnik za to napako zelo hitro priskrbel popravek .
Pomnilnik prevodov tudi ni deloval , če je bil v nadzorni plošči v lokalnih nastavitvah za ločilo v seznamu nastavljeno podpičje , ki ga je bilo treba spremeniti v vejico .
Pri naslednjem zapletu je bila namestitev Tradosa sicer nemotena , vendar v Wordu ni bilo mogoče odpreti prevodne enote ( z ukazom Open / Get ) .
Te smo morali ustvariti ročno , nato je pomnilnik deloval nemoteno .
Izobraževanje prevajalcev .
Ker razen prevajalke , ki je že uporabljala Wordfast , še nihče od sodelavcev nikoli ni delal s prevajalskim namizjem , smo pred začetkom dela s Tradosom pripravili izobraževanje zanje .
Povabili smo jih na celodnevni seminar , na katerem smo jim predstavili koncept pomnilnika prevodov na splošno in način dela z Workbenchem , WinAlignom in MultiTermom , v drugem delu seminarja pa so vsak na svojem računalniku vadili najpomembnejše operacije za prevajanje s Tradosom ( odpiranje baze in priprava delovnega okolja , analiza izvornega besedila , odpiranje in zapiranje prevodnih enot , vstavljanje nespremenljivk ( placeables ) in terminologije , iskanje po konkordancah , čiščenje prevoda ) .
Glavne naloge v pripravljalni fazi so bile priprava delovnega okolja , ustvarjanje pomnilnika prevodov in terminološke baze ter izvedba seminarja za prevajalce .
Za začetek dela s Tradosom pa smo nekoliko spremenili organizacijo dokumentov in dodali nekaj podmap ( za pomnilnik prevodov in terminološko bazo ) .
Nato je bilo treba izbrati dokumente , ki smo jih želeli poravnati , in nastaviti stopnjo občutljivosti za obliko dokumenta pri poravnavi ( slogi , pisava , številčenje ) .
Število napak zaradi oblikovanja dokumentov je bilo mogoče zmanjšati s spreminjanjem oblikovanja izvirnika in nanašanjem enakega oblikovanja v prevod z možnostjo AutoFormat .
Zaradi segmentacijskih pravil WinAlign napačno ločuje tiste prevodne enote , pri katerih se pojavlja pika na koncu krajšav in vrstnih števnikov .
Tem napakam smo se izognili z izdelavo posebnih seznamov besed , pri katerih orodje za poravnavo pike ne obravnava kot končno ločilo ( seznam krajšav : g. , ga .
, preds .
Ko je WinAlign poravnal besedila , je bilo treba rezultate pregledati in morebitne napake popraviti ročno .
Zato je zelo dobrodošla možnost pregleda samo tistih izvornih segmentov , ki jih je program povezal z dvema prevodnima segmentoma .
Pregledane in poravnane segmente smo pred izvozom opremili s potrebnimi administrativnimi podatki .
Drug del izdelave pomnilnika prevodov je ustvarjanje baze , v katero lahko uvozimo poravnane segmente .
Ker smo ustvarjali pomnilnik prevodov iz arhiva , smo v pomnilniku dovolili shranjevanje različnih prevodov za identične izvorne segmente .
Te prevode smo kasneje ob sodelovanju vseh prevajalcev postopoma poenotili .
V atributna polja na primer vnašamo strokovno področje in ime naročnika , v besedilna pa ime dokumenta .
Pred uvozom poravnanih prevodov smo nastavili še segmentacijska pravila ter vnesli sezname krajšav in vrstnih števnikov .
Pri izdelavi pomnilnika prevodov smo nazadnje uvozili še prejšnje prevode , ki smo jih prej poravnali z WinAlignom .
Pred začetkom dela s Tradosom je bilo treba izdelati terminološko bazo .
Projekt je pred vpeljavo Tradosa tekel skoraj leto dni , tako da so prevajalci rešili že kar nekaj terminoloških težav .
Nekateri prevajalci so za lastne potrebe sestavljali sezname pomembnih izrazov z angleškimi prevodi , ki smo jih nato vnesli v MultiTerm .
Ustvarjanje terminološke baze je poenostavljeno s čarovnikom .
Terminološka baza je na začetku štela približno 100 vnosov , vendar je zaradi obilice prevajalskega dela in časovne stiske nismo mogli redno dopolnjevati , tako da danes vsebuje samo najosnovnejšo terminologijo in šteje nekaj manj kot 200 vnosov .
Ko smo končali pripravljalne naloge , smo popolnoma prešli na delo s Tradosom .
Bistvo dela se ni spremenilo ; še vedno je naročnik koordinatorju projekta poslal izvorna besedila , ki jih je razposlal prevajalcem .
Če pa projekt pogledamo pobliže , opazimo , da smo na agenciji dobili veliko novih nalog , s katerimi se prej nismo ukvarjali .
Nato besedila skupaj z zadnjo različico pomnilnika prevodov in terminološke baze pošlje prevajalcem .
Koordinatorjeve začetne in končne naloge sicer niso zahtevne , vseeno pa zahtevajo nekaj časa , saj je prevajalcev deset in mora koordinator prav tolikokrat posodobiti bazo , ko so prevodi končani .
Poleg koordinatorjevih nalog se je povečalo tudi število vzdrževalnih opravil , kot so popravljanje prevodnih enot v pomnilniku prevodov in terminološki bazi , posodabljanje terminološke baze in poravnavo besedil za pomnilnik prevodov .
Vrednotenje dela s Tradosom .
Ti so za agencijo znašali približno poldrugi milijon tolarjev .
Z uporabo Tradosa nastajajo tudi tekoči stroški , ki vključujejo stroške vzdrževanja strojne ( nadgradnje in nove različice ) in programske opreme ( zamenjava in nakup dodatne potrebne opreme ) , stroški vodenja projekta ter stroški vzdrževanja in posodabljanja pomnilnika prevodov in terminološke baze .
Vzdrževanje opreme zaenkrat še ni bilo potrebno , saj agencija uporablja Trados manj kot leto dni in ima zadnjo različico Tradosa .
Število vseh dokumentov , ki smo jih do konca raziskave prevedli , je 1.230.
Pregled dokumentov je pokazal , da so besedila kratka , saj je povprečna dolžina dokumentov 3,59 prevajalske strani .
Največ dokumentov je bilo dolgih eno stran ali manj ( 448 ) , sledila so besedila , dolga dve do pet strani ( 383 ) in šest do deset strani ( 213 ) , najdaljši ( 94 strani ) pa je bil prevod letnega poročila .
Za kratka besedila v tem projektu velja , da je njihova notranja ponovljivost majhna ( 1 % ) , pri daljših besedilih pa naraste tudi na 7 %.
Večinoma pa imamo opravka z besedili s približno 20- do 25-odstotno ponovljivostjo , kar pomeni , da je toliko odstotkov nekega besedila že prevedenega in shranjenega v pomnilniku .
Projekt se je začel s petimi prevajalci , po dveh mesecih pa se jim jih je pridružilo še pet .
Sprva je naročnik zaprosil za prevajanje sto strani mesečno , kar pa je presegel že prvi mesec .
V poletnih mesecih 2003 so potrebe po prevodih močno narasle predvsem zaradi spremembe načina poslovanja in z njimi povezanih naročnikovih dejavnosti .
Za začetek dela po novem sistemu smo izbrali poletne mesece v prepričanju , da bo zaradi letnih dopustov prevodov manj in bomo vsi vpleteni imeli več časa , da se privadimo na nov način dela .
Največ ( 340 strani ) so prevajalci prevedli meseca septembra , ko je naročnik najbolj dejavno reševal zaplete pri novem načinu poslovanja , in meseca decembra , ko so zaključevali finančno leto .
Prva dva meseca v tem letu sta bila bolj umirjena , primerljiva z majem in junijem prejšnje leto , tik pred izrednim poletnim obdobjem .
Tudi po koncu raziskave je ritem dela podoben ; pred rednimi sejami se količina prevodov poveča in nato v naslednjem mesecu spet nekoliko upade .
Količina prevodov se na prvi pogled ne zdi zelo velika , vendar zunanji sodelavci ne prevajajo za enega samega naročnika , temveč sodelujejo tudi pri drugih projektih .
Drug razlog , zakaj so prevajalci močno obremenjeni , pa je ta , da ritem dela ni enakomeren .
Obstajajo obdobja , ko agencija ne prejme niti enega naročila , nato pa naročnik v zelo kratkem času zahteva veliko prevodov .
Glede na nujnost prevodov smo se z naročnikom dogovorili za tri kategorije : najnujnejše prevode mu vrnemo v 24 urah , prevode besedil , ki jih naročnik pošlje v petek , dobi do ponedeljka , za manj nujne prevode pa imamo tri dni ali več časa .
Po prehodu na Trados smo našli in odpravili predvsem številna terminološka odstopanja , prevodi pa so postali enotnejši .
Prevajalska agencija s svojo dejavnostjo skuša zadovoljiti svoje osnovne potrebe : zniževanje stroškov in povečanje dobička , zagotavljanje kakovostnih prevodov v čim krajšem času ter učinkovito vodenje prevajalskega projekta .
Z uporabo pomnilnika prevodov nam je uspelo zadržati naročnika tudi po preteku prve enoletne pogodbe , pri tem pa ob povečanem obsegu prevodov celo obdržati prvotno ceno , kar je naš velik poslovni in strokovni uspeh .
Z uporabo Tradosa smo povečali svojo konkurenčnost , saj smo z recikliranjem že opravljenih prevodov lahko znižali stroške prevajanja za približno 25 odstotkov .
Zaradi spremenjenega načina dela so se nekoliko povišali stroški vodenja projekta in vzdrževanja podatkovnih baz , vendar so v skupnem stroški še vedno dobrih 20 odstotkov nižji .
Začetni pomnilnik prevodov , ki smo ga napolnili s starimi prevodi , je štel 4.825 prevodnih enot , do sedaj pa je narasel na 50.107 prevodnih enot .
S tako bogatim pomnilnikom lahko zagotovimo enako količino prevodov v krajšem času .
Pred uporabo Tradosa smo v 24 urah lahko zagotovili samo 10 odstotkov prevodov , danes je najnujnejših prevodov več kot četrtina .
Prav tako z bogatim pomnilnikom prevodi postajajo vse enotnejši , kar je za besedila s področja bančništva in financ zelo pomembno in posledično zvišuje njihovo kakovost .
Tudi vodenje projekta je bolj učinkovito , saj lahko z analizo novih dokumentov koordinator zelo natančno ugotovi , koliko dela čaka prevajalce , in naročniku že takoj sporoči , v kakšnem času ga lahko opravijo .
Koristi uporabe Tradosa za prevajalce in za naročnika .
Z njim lahko prevajalci v enakem času prevedejo večjo količino besedil in zaslužijo več .
Druga , še bolj očitna prednost dela s Tradosom pa je ta , da so prevajalci za svoje delo porabili manj časa , ki so ga lahko namenili drugim projektom in zaslužili še z njimi .
Poleg povečanja kakovosti in količine opravljenih prevodov gre omeniti še občutno izboljšanje oblikovanja prevedenih dokumentov , ki so se pred začetkom dela s Tradosom precej razlikovali od izvirnikov , sedaj pa je enako oblikovanje prevoda mogoče doseči brez vlaganja dodatnega truda in časa .
- Uporabljate Trados samo za ta projekt ali si z njim pomagate tudi pri drugih opravilih ?
Vsi prevajalci so s Tradosom zelo zadovoljni .
Devet prevajalcev ga uporablja za vse naročnike , en prevajalec pa ga uporablja samo za ta projekt , ker druga besedila , ki jih prevaja , niso primerna za delo s Tradosom .
- konkordance , s katerimi najdejo večino terminologije , ki jo potrebujejo za prevod .
- možnosti kopiraj izvirnik in kopiraj izvirnik , če ni zadetka ( copy source on no match ) .
Zdita se jim zelo uporabni za besedila , pri katerih se v povedih pojavlja veliko števil in bi z vstavljanjem nespremenljivk izgubili veliko časa , ter kadar se v besedilu pojavlja veliko tujih lastnih imen in obstaja možnost , da bi jih napačno natipkali .
Prevajalska orodja niso čarovniški trik , s katerim bi nemudoma odpravili vse težave , ki jih pri prevajalskem delu srečujemo .
Tako se prevajalci tudi pri delu s Tradosom srečujejo z določenimi težavami .
Pri prevajanju z Wordom je na primer besedilo v vstavljenih objektih ( slikah , diagramih ) treba prevajati ročno , in ker so objekti ponavadi zaklenjeni , besedilo zato izgubi prvotno obliko .
Poleg tega TWB pri prevajanju Wordovih tabel TWB preskoči vse celice , v katerih so samo številčni podatki , zaradi česar morajo prevajalci ročno zamenjati vejice in pike za tisočice in decimalke .
Velikost pomnilnika prevodov ob koncu raziskave je bila 19.046 KB , zato postaja problematično pošiljanje baze in besedil po elektronski pošti , še posebej če prevajalci nimajo zmogljive internetne povezave .
V širšem smislu je zelo pomemben učinek dela s pomnilnkom prevodov delitev besedila na prevodne enote , pri čemer je trenutna enota posebej izpostavljena , kontekst pa je manj viden , kar je najverjetneje vplivalo na zaznano postopno povečanje popolnih ponovitev .
Predlagane enote zahtevajo tudi veliko manj sprememb , če ne vsebujejo anaforičnih in kataforičnih referenc , zato se jih prevajalci začnejo sčasoma izogibati .
Posledica takšnega načina prevajanja je suhoparen , tehničen slog , včasih tudi netekoč prevod .
Za kakovost pomnilnika po tehnični plati je skrbel koordinator projekta , ki je zagotavljal , da je vsak končan prevod ob uvozu v osrednjo bazo tehnično brezhiben in opremljen z vsemi potrebnimi administrativnimi podatki .
Vsebinske neustreznosti pa smo odpravljali s pomočjo prevajalcev .
Kadar je bil o najustreznejši rešitvi potreben dogovor med prevajalci , smo uporabili interni forum .
Na tak način smo napake odpravili v razmeroma kratkem času in jih vnesli v osrednji pomnilnik prevodov , tako da se v prihodnosti niso več pojavljale .
Pred nakupom Tradosa agencija in njeni sodelavci nismo imeli izkušenj s prevajalskimi tehnologijami , zato sta za gladek prehod na delo s prevajalskim namizjem obe strani potrebovali veliko motivacije in energije .
Po analizi rezultatov in zbranih mnenjih prevajalcev lahko trdimo , da je bilo uvajanje Tradosa v konkretno prevajalsko okolje uspešno , z njim je zadovoljen tudi naročnik .
Zato se opravljeno delo in pridobljene izkušnje zdi smiselno uporabiti tudi pri drugih projektih .
Po zaključku raziskave se je sodelovanje agencije z naročnikom razširilo tudi na smer angleščina-slovenščina in na dodaten jezikovni par nemščina-slovenščina .
V pomnilniku prevodov , ki smo ga pridobili z osnovnim projektom , smo obrnili izvorni in ciljni jezik in tako dobili referenčno bazo , ki jo lahko uporabljamo pri prevajanju iz angleščine .
Terminološka baza je prav tako uporabna , saj omogoča preklapljanje med jeziki .
Iz nemščine za naročnika prevajamo gradivo za seje nadzornega sveta njegove nemške hčerinske družbe .
Gradnja terminološke baze pa je lažja , ker ni več treba iskati in vnašati vseh terminov , temveč že vnesenim samo dodajamo nemške ustreznice .
Odpirajo se tudi povsem novi projekti , pri katerih bo delo lažje že zato , ker smo pri prvem projektu s poravnavo besedil , polnjenjem pomnilnika prevodov , z gradnjo terminološke baze , s pripravo besedil in z reševanjem nastalih težav pridobili ogromno izkušenj .
Pri pregledu razmer na trgu prevajalskih storitev se zdi , da bodo v bližnji prihodnosti tudi v Sloveniji vsi resni ponudniki prevajalskih storitev morali razmisliti o sodobnih prevajalskih tehnologijah in jih začeti uporabljati , drugače ne bodo več dolgo mogli zagotavljati zahtevane količine prevodov zahtevane kakovosti v danem času , tudi njihove cene se ne bodo mogle prilagajati konkurenci .
V času , ko prevajalska namizja postajajo del standardne opreme ponudnikov prevajalskih storitev , se pojavljajo potrebe po integraciji namizij z ostalimi jezikovnimi viri in tehnologijami , ki so del prevajalskega procesa .
Eden najpomembnejših projektov na tem področju je Euramis , s katerim prevajalska služba EU zmanjšuje količino ponavljajočih se administrativnih nalog in tako prevajalcem omogoča , da večino svojega časa in energije posvetijo strokovnemu delu ( Translation DG , 2004 ) .
Z vse pogostejšo uporabo sodobnih prevajalskih orodij na vseh stopnjah prevajalskega prodesa se postopoma dvigujejo tudi delodajalčeve zahteve do prevajalcev , ki morajo vse pogosteje poleg dobrega poznavanja jezika in relevantnih strokovnih področij dokazati tudi računalniško spretnost in poznavanje dela s prevajalskimi programi .
Mlajši prevajalci lahko danes potrebna znanja pridobijo že med študijem , starejši pa bodo sami morali zavestno poskrbeti za udeležbo na ustreznih seminarjih in delavnicah , saj bi v najslabšem primeru lahko prišlo do paradoksa , ko mladi prevajalci , spretni z računalniškimi orodji , zaradi neizkušenosti na strokovnem področju ne bi mogli dobiti dela , starejši prevajalci pa kljub strokovni podkovanosti naročnikovih potreb ne bi mogli zadovoljiti zaradi nepoznavanja prevajalskih tehnologij .
Razporeditev besedil glede na čas prevajanja .
Pri razvoju sistema za podajanje informacij o vremenu smo ta eksperiment uporabili dvakrat .
V drugem eksperimentu smo v sistem vključili še modul za vodenje dialoga , naloga čarovnika pa je ostala simulirati le delovanje modula za razpoznavanje govora in modula za razumevanje naravnega jezika .
Slika 1 : Modularno zgrajen sistem za dialog Prihodnost govornih vmesnikov temelji na potrebi po dostopu do informacij preko telefona , na potrebi po uporabi govora , ko so roke ali oči kako drugače zaposlene , ter kot pomoč invalidnim osebam .
Sodobnejši sistemi za podajanje informacij preko telefona pa so usmerjeni na različne domene , npr. podajanje informacij o restavracijah ( Jurafsky et al. , 1994 ) , o gledališčih ( van der Hoeven , 1995 ) , o potovanjih z železnico ( Allen et al. , 1995 ; Sturm et al. , 1999 ) , o letalskih prevozih ( Ipšić et al. , 1999 ; Stallard , 2000 ) , o vremenskih napovedih ( Zue et al. , 2000 ) in prispeli elektronski pošti ( Walker , 2000 ) .
Njihov cilj je strategije interakcije čimbolj približati naravnim strategijam , t.j. strategijam komunikacije človek – človek .
Raziskovalci Laboratorija za umetno zaznavanje , sisteme in kibernetiko Fakultete za Elektrotehniko v Ljubljani ter raziskovalci Oddelka za računalništvo in informatiko Filozofske fakultete na Reki smo si zastavili cilj razviti sistem ( Žibert et al. , 2003 ) , ki bo preko telefona v slovenskem in v hrvaškem jeziku podajal informacije o vremenu in vremenskih napovedih .
Eden izmed razlogov za to odločitev je veliko število turističnih izmenjav med obema državama , drugi pa čedalje manjši delež prebivalcev obeh držav , ki govorijo in razumejo oba jezika .
Sistem naj bi bil sposoben odgovarjati na vprašanja o vremenu in vremenski napovedi ( splošna vremenska napoved , biovremenska napoved , temperatura , smer in hitrost vetra , zračni tlak , vidljivost , višina in vrsta snega , vzhod in zahod sonca , ipd. ) za različne kraje in pokrajine v Sloveniji in na Hrvaškem ter za večja mesta ostalih evropskih držav .
Ker naj bi sistem omogočal hkratno komunikacijo v obeh jezikih , t.j. v slovenskem in v hrvaškem jeziku , bo uporabnikova izjava najprej potovala v modul za identifikacijo jezika , ki bo ugotovil , v katerem jeziku uporabnik govori .
Modul za vodenje dialoga bo ( če bo potrebno ) , neodvisno od jezika , v zbirki vremenskih podatkov ( Hajdinjak in Mihelič , 2002 ; Hajdinjak , 2004a ) poiskal ustrezne podatke in jih , primerno strukturirane , poslal ustreznemu modulu za tvorjenje naravnega jezika .
Analiza dialogov človek – človek sicer predstavlja dobro osnovo za določitev nalog sistema in slovarja besed , ki naj jih sistem razume , ni pa preprosto ugotoviti , kateri vidiki te analize bodo ustrezali dialogom človek – računalnik ( Smith in Gordon , 1997 ) .
Raziskovalci smo torej ujeti v začaran krog – za konstrukcijo sistema za dialog po eni strani potrebujemo značilnosti dialogov človek – računalnik , po drugi strani pa je , dokler sistem ne obstaja , nemogoče vedeti , kako bodo dialogi potekali .
Ključna je ugotovitev , da podatki , pridobljeni z eksperimentom čarovnik iz Oza , bolj natančno odražajo jezik komunikacije človek – računalnik kot dialogi človek – človek ( Whittaker in Stenton , 1989 ; Fraser in Gilbert , 1991 ; Dahlbäck et al. , 1993 ) .
Glavni razlog za to je prilagajanje udeležencev dialoga jezikovnim sposobnostim sogovornika .
Zadnji korak je izboljševanje in dopolnjevanje sistema za dialog s pomočjo podatkov dejanskih uporabnikov .
Pri razvoju sistema za podajanje informacij o vremenu , ki je predmet tega članka , smo prva dva koraka že naredili .
V članku bomo poleg opisa izvajanja obeh eksperimentov čarovnik iz Oza podali še rezultate in zaključke vrednotenja podatkov , pridobljenih v teh eksperimentih .
Sistem je udejanjen na osebnem računalniku z vgrajeno ISDN DIVA Server BRI-2M PCI kartico , s katero lahko komuniciramo preko posebnega računalniškega programa , ki omogoča vzpostavljanje in prevzemanje telefonskih pogovorov , poslušanje in snemanje pogovorov , kodiranje in dekodiranje ISDN formata zvočnih datotek , pošiljanje wave datotek po telefonski liniji , ipd.
V literaturi najdemo dva načina simuliranja razumevanja govora – napake razumevanja govora lahko sistematsko vključimo v besedilo , na katerega se čarovnik odziva ( Pirker et al. , 1999 ) , ali pa simuliramo takorekoč popolno razumevanje govora ( Dahlbäck et al. , 1993 ; Kim in Koo , 1997 ; Eskenazi et al. , 1999 ) .
Za slednji način smo se odločili tudi mi , čeprav se zavedamo , da so napake razumevanja govora izjemno pomemben vidik uporabnikove interakcije s sistemom .
Naš čarovnik je zato poslušal uporabnika , brez da bi ga pri tem kakorkoli omejevali .
Eksperiment je potekal tako , da je čarovnik sedel za grafičnim vmesnikom , poslušal izjave uporabnika , v skladu s katerimi je po lastni presoji izbiral odzive na grafičnem vmesniku in s tem po potrebi dostopal do vremenske zbirke Slika 2 : Grafični vmesnik sistema čarovnik iz Oza – primer delovnega okna podatkovnih tabel ( Hajdinjak in Mihelič , 2002 ) .
Odzivi so potovali v modul za tvorjenje naravnega jezika , katerega izhod ( naravno besedilo ) je potoval v modul za tvorjenje slovenskega govora , tega pa je sistem po telefonski liniji poslal do uporabnika .
Naloga čarovnika v prvem eksperimentu čarovnik iz Oza je torej bila igrati vlogo modulov za razpoznavanje govora in razumevanje naravnega jezika , s pomočjo grafičnega vmesnika pa tudi vlogo modula za vodenje dialoga .
Grafični vmesnik , ki čarovniku omogoča vodenje dialoga , smo želeli oblikovati tako , da bi bili odzivi čarovnika po hitrosti in konsistentnosti čimbolj podobni odzivom računalnika .
Primer delovnega okna je prikazan na sliki 2.
Izvajanje prvega eksperimenta .
Pri izbiri smo pazili , da bi uporabniki predstavljali čimbolj reprezentativen vzorec ( spol , starost , izobrazba , narečje , telefonska linija , okolje telefonskega pogovora ) .
Zastopanih je bilo vseh osem osnovnih slovenskih narečij , pazili pa smo tudi na vrste telefonskih linij ( analogna , ISDN , GSM ) in na okolja ( tiho okolje , šolski hodnik , ulica , prostor z več ljudmi , menza , vklopljen radio / TV-sprejemnik , ipd. ) , v katerih so se uporabniki v času telefonskega pogovora s sistemom čarovnik iz Oza nahajali .
Prva naloga je bila pridobiti določeno informacijo , druga pa je zajemala določen scenarij oz. situacijo , ki naj bi si jo udeleženec poskušal zamisliti .
Udeležencem smo omogočili tudi lastno izbiro vprašanj – povedali smo jim , da lahko po opravljenih nalogah dialog s sistemom nadaljujejo .
Po pogovoru s sistemom čarovnik iz Oza smo uporabnike prosili , da izpolnijo vprašalnik , katerega prvi del je vseboval vprašanja o spolu , starosti , izobrazbi , zaposlitvi , 1.
Ali ste brez težav prišli do odgovora na vaša vprašanja ?
Tabela 1 : Del vprašalnika , s katerim so udeleženci eksperimenta ocenjevali sistem čarovnik iz Oza narečju , vrsti telefonske linije in okolju , v katerem so se v času dialoga s sistemom nahajali .
Drugi del vprašalnika se je nanašal na dialog s sistemom in je , poleg vprašanja , ali so dobili odgovor na prvo nalogo , zajemal različne vidike njihove interakcije s sistemom ( tabela 1 ) .
Vprašanja , s pomočjo katerih so udeleženci ocenjevali sistem čarovnik iz Oza , smo povzeli po ( Walker et al. , 1997 ) , sprašujejo pa po učinku modula za tvorjenje govora , učinku modula za razpoznavanje govora , težavnosti pridobivanja informacij , hitrosti interakcije , izkušenosti uporabnikov , ustreznosti odzivov sistema , pričakovanem obnašanju sistema in načrtovani rabi sistema v prihodnosti .
Povprečne ocene uporabnikov iz obeh eksperimentov so podane v tabeli 2.
Najslabše je bila ocenjena hitrost interakcije s sistemom , in sicer 3.94 , kar pa niti ni tako slabo , če vemo , da je bil povprečen čas čakanja na odziv sistema 5.57 sekund .
Večji del tega časa je porabil čarovnik , da je posredoval izbran odziv .
Druga zanimivost je prilagajanje uporabnikovega vedenja na pričakovane jezikovne sposobnosti sistema .
V primerih , ko je sistem uporabnike prosil , naj vprašanje ponovijo , pa je njihov govor postal bolj artikuliran , počasnejši in / ali glasnejši .
Tretja zanimivost , ki smo jo opazili v prvem eksperimentu čarovnik iz Oza , so smeh , šale in duhovite opazke , ki so jih nekateri uporabniki delali na račun sistema , medtem ko je čarovnik posredoval svoj odziv .
Primeri takih opazk so : ˆ Kakšen glas ...
Takšne reakcije in stranske opazke so najbrž bolj verjetne v testiranjih sistemov za dialog kot pa v komercialnih sistemih , saj v takih testiranjih uporabniki ponavadi igrajo le vloge dejanskih uporabnikov , niso pod časovnimi omejitvami in ne odgovarjajo za stroške telefonskega pogovora .
Zbirko smo označili z orodjem TRANSCRIBER ( Barras et al. , 2001 ) , pri čemer smo poleg oznak besed uporabili še posebne oznake za narečne besede , premore in negovorne zvoke ( vdih , izdih , vzdihljaj , tlesk , smeh , pih , kašelj in različne zvoke , ki nastajajo pri obotavljanju oz. razmišljanju ) .
Cilj in namen drugega eksperimenta je bil pridobiti podatke , ki bi poleg podatkov iz prvega eksperimenta tvorili osnovo za evalvacijo modula za vodenje dialoga .
V tem eksperimentu je čarovnik sedel pred vmesnikom modula za vodenje dialoga in preko tipkovnice vnašal pomensko predstavitev uporabnikove izjave , ki bo v končnem sistemu izhod iz modula za razumevanje naravnega jezika .
Vse nadaljnje delo ( vodenje dialoga , iskanje podatkov , tvorjenje naravnega jezika , tvorjenje govora ) je opravljal sistem .
Čeprav je 17 izmed njih že sodelovalo v prvem eksperimentu čarovnik iz Oza in so zato bili malo bolj izkušeni od ostalih , med vedenjem obeh skupin nismo opazili nobene razlike .
Povprečne ocene udeležencev drugega eksperimenta čarovnik iz Oza so podane v tabeli 2.
Povprečni čas , ki ga je čarovnik porabil , da je modulu za vodenje dialoga posredoval pomensko predstavitev uporabnikove izjave , ki je sprožila odziv sistema , je sedaj znašal 6.61 sekund .
Najbolj opazna razlika je v ocenah težavnosti pridobivanja informacij ( 4.27 oz. 3.74 ) in ustreznosti odzivov sistema ( 4.23 oz. 3.76 ) , pri čemer je treba poudariti , da so bile slabše ocene nekaterih vidikov učinkovitosti sistema vsekakor pričakovane , saj bi v nasprotnem primeru modul za vodenje dialoga v drugem eksperimentu bolje opravljal svojo nalogo kot človeški operater v prvem eksperimentu .
Drugi eksperiment so zaznamovali predvsem daljši dialogi ( Hajdinjak , 2004a ) , in sicer tako po številu izjav kot tudi po časovnem trajanju .
Te potrditve , zavrnitve oz. popravki so zaradi svoje jedrnatosti tudi glavni razlog v povprečju krajših izjav , saj so velikokrat sestavljeni le iz ene ali dveh besed .
Da bi vsaj delno odpravili etično vprašljivost eksperimentov čarovnik iz Oza , smo po obeh eksperimentih udeležencem povedali , kaj smo počeli , zakaj smo tako ravnali , in jih vprašali za dovoljenje uporabe pridobljenih podatkov v raziskovalne namene .
Model učinkovitosti sistema , ki ga zajema ogrodje PARADISE , trdi , da lahko funkcijo učinkovitosti sistema določimo s pomočjo multiple linearne regresije ( MLR ) z zadovoljstvom uporabnikov kot neodvisno spremenljivko ter parametri uspešnosti naloge in cen dialoga ( parametri učinkovitosti dialoga in parametri kvalitete dialoga ) kot neodvisnimi spremenljivkami .
Parametri modela učinkovitosti sistema .
Splošno zadovoljstvo uporabnika smo dobili tako , da smo vse točke te ankete sešteli .
Vrednosti parametrov , ki smo jih uporabili kot vrednosti odvisne spremenljivke v MLR modelu učinkovitosti sistema , zato ležijo med 8 in 40.
V prvem eksperimentu smo tako določili parametra uspešnosti naloge ƒ Kappa koeficient (-) in ƒ izpolnitev naloge ( Comp ) , mnenje uporabnika o izpolnitvi prve naloge , ki smo mu jo v eksperimentu zastavili , parameter učinkovitosti dialoga ƒ povprečni čas dialoga ( MET ) , povprečni čas trajanja dialoga brez vštetega trajanja odzivov sistema , in parametre kvalitete dialoga ƒ povprečni čas čakanja na odziv ( MRT ) , povprečni čas , ki ga sistem porabi , preden se odzove , ƒ delež nepodanih informacij ( NPR ) , delež začetnih potez uporabnika , na katere sistem ne poda relevantnega odgovora , ƒ delež zavrnitev ( RR ) , delež izjav sistema , s katerimi uporabnika prosi , naj ponovi zadnjo izjavo , ƒ delež nudenja pomoči ( HMR ) , delež izjav sistema , s katerimi uporabniku pomaga nadaljevati dialog , ƒ delež negativnih odgovorov ( NDR ) , delež potez , s katerimi sistem sporoča , da nima zahtevanega podatka in pri tem uporabnika ne usmerja k izbiri relevantnih , dosegljivih podatkov , ƒ delež izbire relevantnih podatkov ( RDR ) , delež potez sistema , ki uporabnika usmerjajo k izbiri relevantnih , dosegljivih podatkov , in ƒ delež neprimernih iniciativ ( UIR ) , delež začetnih potez uporabnika , katerih vsebina ne ustreza domeni sistema .
V drugem eksperimentu čarovnik iz Oza smo definirali dva dodatna parametra kvalitete dialoga , namreč † delež neiniciativnih potez ( NIR ) , delež potez uporabnika , ki ne spadajo med začetne poteze , in † delež preverjanj ( CR ) .
Srednje vrednosti vseh parametrov dialogov , pridobljenih v obeh eksperimentih čarovnik iz Oza , so podane v tabeli 4.
Pri izpeljavi funkcije učinkovitosti sistema z metodo multiple linearne regresije smo ugotovili , da so na zadovoljstvo uporabnikov v prvem eksperimentu najbolj vplivali delež nudenja pomoči ( HMR ) , delež nepodanih informacij ( NPR ) , izpolnitev naloge ( Comp ) , povprečni čas čakanja na odziv ( MRT ) in delež zavrnitev ( RR ) .
Na zadovoljstvo uporabnikov v drugem eksperimentu čarovnik iz Oza pa so najbolj vplivali delež preverjanj ( CR ) , Kappa koeficient ( - ) , povprečni čas dialoga ( MET ) , delež nepodanih informacij ( NPR ) in izpolnitev naloge ( Comp ) .
Razlog , ki ga navajajo , je ta , da naj bi uporabniki velikokrat drugače dojemali delovanje sistema , kot ga podaja Kappa koeficient .
V naših eksperimentih je bil Kappa koeficient takorekoč odvisen le od čarovnika , ki je nadomeščal razumevanje govora , parameter izpolnitev naloge pa se je nanašal le na prvo nalogo , ki smo jo uporabniku zastavili , kar je najverjetneje razlog , zakaj sami nismo prišli do podobnega zaključka .
Vrednost parametra delež nudenja pomoči je odvisna od tega , kako se uporabnik v dialogu obnaša , to pa je spet odvisno od stopnje prijaznosti in sodelovanja , ki jo sistem pri vodenju dialoga nudi .
Vsekakor , edini cilj sistema za dialog ne sme biti le uspešen zaključek naloge , ampak tudi sposobnost prevzeti iniciativo in nuditi pomoč , ko jo uporabnik potrebuje .
Torej , zadovoljstvo uporabnikov lahko pomembno povečamo le z zmanjšanjem vpliva parametra delež nepodanih informacij , t.j. deleža začetnih potez uporabnika , na katere sistem ne poda relevantnega odgovora .
V članku smo opisali izvajanje in podali rezultate dveh eksperimentov čarovnik iz Oza , ki so nam na eni strani služili za pridobivanje podatkov , potrebnih za razvoj sistema za podajanje informacij o vremenu , na drugi strani pa tudi za vrednotenje modula za vodenje dialoga .
Oba eksperimenta čarovnik iz Oza sta pokazala , da na zadovoljstvo uporabnikov pomembno vpliva stopnja fleksibilnosti pri usmerjanju uporabnika k izbiri dosegljivih , relevantnih podatkov .
Srednje vrednosti parametrov v prvem ( WOZ1 ) in v drugem ( WOZ2 ) eksperimentu čarovnik iz Oza .
V ta namen se poslužuje tekstna kritika kompleksnih postopkov analize : temeljnega pomena je vedno rokopisni izvirnik besedila , nato njegove morebitne variante , ki so predmet posebne pozornosti in morajo biti skrbno dokumentirane v znanstvenem aparatu .
V kritičnem prepisu je besedilo popravljeno po eksplicitno formuliranih načelih .
Ta standard je tudi temelj e-izdaje Treh pridig o jeziku , ki smo jo poimenovali e-Slomšek .
Nastala je kot plod sodelovanja med Inštitutom za slovensko literaturo ZRC SAZU in Odsekom za tehnologije znanja IJS .
Anton Martin Slomšek ( 1800 – 1862 ) je bil Prešernov sodobnik ; kot sošolca sta se namreč poznala že iz liceja .
V njegovem času je bil slovenski jezik izpostavljen močnemu pritisku germanizacije , tembolj , ker je bila slovenščina tedaj kulturno in socialno podrejen jezik .
Videl je , kako z agresivno germanizacijo izginjajo cele vasi .
Te in druge Slomškove dejavnosti so omogočile hitro rast pismenosti , bralne kulture in narodne zavesti med Slovenci .
Po mnenju nekaterih literarnih zgodovinarjev ( Pogačnik , 1991 ) se je severovzhodna Slovenija rešila pred popolno germanizacijo predvsem po Slomškovih zaslugah .
Knjiga vsebuje faksimile vseh treh pridig ( rokopisa za prvi dve , prvega natisa za tretjo ) in njihov diplomatični prepis ( za prvi dve ) ter kritični prepis ( za vse tri ) , ki jih je pripravil Jože Faganel .
V nadaljevanju opišemo proces dela od tiskane izdaje Treh pridig o jeziku do pilotske e-izdaje , dodajanja kritičnega aparata in končnih redakcij .
Konverzija v elektronsko obliko in dodajanje znanstvenega aparata .
V konverziji gradiva od tekstne oblike do končne edicije , pripravljene po smernicah TEI P4 , ločimo naslednje korake : 1. priprava gradiva v urejevalniku MS Word , 2. konverzija v XML , 3. konverzija v osnovno inačico z oznakami TEI , 4. prva ročna redakcija , 5. pilotska izdaja , 6. druga ročna redakcija , 7. dodajanje faksimilov , 8. dodajanje uredniških opomb , literature in hipertekstnih povezav , 9. » javna « izdaja V nadaljevanju si bomo ogledali najpomembnejše korake tega procesa .
Pretvorba gradiva v zapis TEI .
Najprej smo vse tekstne datoteke združili v en sam Wordov dokument , ki je služil kot digitalni vir za izdajo po smernicah TEI .
Tega je bilo treba pretvoriti v XML .
V osnovni zapis TEI smo jo pretvorili s pomočjo kombiniranih informacij , ki smo jih dobili iz elementov ( zlasti < par > in < span > ) in njihovih atributov , pa tudi vzorcev , ki se nahajajo v besedilu .
Zato smo napisali » mali « , striktni DTD , ki je specializiral in omejil TEI DTD za potrebe naše izdaje in je bil pripraven za delo z urejevalnikom XML .
Konverzijo v » mali « DTD smo napravili s kombinacijo filtrov v jezikih XSLT ( za strukturne informacije ) in Perl ( za vzorce ) , ki so odstranili tudi vse označevanje , ki ni bilo interpretirano kot oznake TEI , denimo tabulatorje , spremembo tipografije ipd.
Te težave smo rešili v več pogovorih in z nasveti , dobljenimi v debatni skupini TEI ( tei-l@listserv.brown.edu ) .
Rešitve , ki smo jih sprejeli , so zahtevale več sistemskih sprememb označevanja besedil , vendar upamo , da smo s tem dosegli konsistentno in uporabno metodo kodiranja za tovrstna besedila .
Problem , na katerega bo naletela vsaka e-izdaja besedil starejšega slovenskega slovstva , so znaki za posebne črke starejših pisav , kakršna je bohoričica , ki jo je tudi Slomšek uporabljal do l. 1846 , ko se je med prvimi oprijel gajice .
V diplomatičnem prepisu je bilo troje takih znakov , in sicer : - Za znak ſ , ki je bil v latiničnih pisavah v splošni rabi vse do konca 18. stoletja in še dlje , izgovarjamo pa ga kot sodobni ' s ' , obstaja nedvoumna rešitev : v Unicodu je opisan kot LATIN SMALL LETTER LONG S s kodno številko 017F , ki pripada bloku Latin Extended-A .
XML sicer podpira definicijo entitet , ki enopomensko definirajo znak ( denimo & Slong ; za LATIN CAPITAL LETTER LONG S ) , vendar ima ta rešitev slabost , da so entitete definirane v DTD , kar dokumentom onemogoča , da bi jih distribuirali neodvisno od DTD .
Na tej stopnji smo napisali tudi obsežno Poročilo o izdelavi in oznakah naše e-izdaje in izdelali vhodno spletno stran .
Gradivo v XML in HTML , dokumentacija , slike faksimilov in vhodna stran so bile potem objavljene na spletu na ne-javnem URL , in ta izdaja je bila osnova za končno inačico .
V kritičnem prepisu smo vse te reference označili , napačne popravili ( in označili kot popravljene ) , vse pa s hiperpovezavami usmerili k ustreznemu biblijskemu odlomku na straneh http://www.biblija.net , kjer je na voljo elektronska izdaja slovenskih bibličnih besedil .
Izdaja e-Slomšek je kodirana z oznakami smernic TEI P4 ( Sperberg-McQueen in Burnard , 2002 ) , ki je najbolj obsežna in široko uporabljana shema za označevanje elektronskih besedil , v celoti dostopna na medmrežju na http://www.tei-c.org/P4X/ .
TEI P4 sestoji iz smernic , tj. proznega opisa oznak , in formalnega dela , tj. vrste posameznih modulov ( fragmentov XML DTD ) , ki jih je mogoče kombinirati , da bi ustvarili zaželeni DTD , ustrezen namenom določene e-izdaje .
null TEI.extensions , poljubni modul , v katerem so podane specifične razširitve ali modulacije oznak TEI , nastale za posamezno e-izdajo .
Za e-Slomška smo napravili nekaj manjših sprememb : nekaterim elementom smo dodali atribut ' url ' , atribut ' rend ' pa smo omejili na fiksni niz vrednosti .
Parametrizacijo je mogoče določiti direktno v internem podnizu DTD v dokumentu ; s pomočjo spletnega generatorja , imenovanega » TEI Pizza Chef « ( http://www.tei-c.org/pizza.html ), pa smo naredili tudi DTD v eni datoteki , ki se distribuira skupaj z gradivom .
Celotna struktura zapisa TEI je preveč kompleksna , da bi jo lahko tu predstavili , zato se bomo omejili le na najbolj zanimive vidike označevanja .
Namen glave TEI je opisati označeno elektronsko besedilo , tako da so tekst sam , njegov vir , kodiranje in revizije temeljito dokumentirani .
Glava TEI , njena oznaka je < teiHeader > , ima štiri glavne dele : null Opis datoteke < fileDesc > vsebuje poln bibliografski opis same računalniške datoteke .
null Zgodovina redakcij ali revizij e-izdaje < revisionDesc > poda pregled sprememb v razvoju ali nastajanju e-izdaje .
Za ilustracijo informacij , zbranih v glavi TEI , je v Sliki 1 na voljo opis profila besedila , ki opisuje uporabljene jezike in » roke « , ki so pisale ali posegale v besedilo .
Besedilo naše izdaje vsebuje uvodno gradivo < front > , telo besedila < body > in končno gradivo < back > z opombami in njihovimi viri .
Telo besedila obsega tri razdelke < div > , po enega za vsako pridigo .
Vsaka pridiga vsebuje tudi » generirani razdelek « < divGen / > , ki je prazen element in služi kot sidro za avtomatsko generirani razdelek HTML z vzporednima prepisoma .
Struktura strani se razlikuje glede na to , ali so to strani faksimila ( razložene kasneje ) ali pa prepisov .
Vendar pa alternativa , da zapisujemo strani in vrstice s praznimi elementi TEI za prelom strani in vrstic ( < pb / > , < lb / > ) , vnaša probleme v takšno procesiranje , ki , kot pri nas , temelji na vrsticah .
Te opombe ( < note > ) so v e-izdaji označene z atributrom rend , ki določi njihovo pozicijo na strani .
Vrstice vsebujejo tudi oznake za poudarjeno besedilo < emph > , kjer je Slomšek besedilo podčrtal , in za vrzeli < gap / > , kjer je faksimile neberljiv .
Prepisi pridig vsebujejo tudi popravke , ki se pojavljajo kot dodatki ali izbrisi v besedilu .
Popravki v diplomatičnem prepisu sledijo tistim iz faksimila , torej tistim , ki jih je naredil Slomšek sam , bodisi , da je prečrtal del besedila , ali pa je dopisal novo besedilo nad črto .
Dva primera , prvi iz diplomatičnega in drugi iz kritičnega prepisa , sta podana v Sliki 3.
Slike so bile tudi pomanjšane na približno tretjino te velikosti , da jih lahko na zaslonu prikažemo vzporedno z besedilom .
Povezave na datoteke s slikami so zapisane kot vrednost ( nestandardnega ) atributa url na elementu < figure > , ki tudi definira tip slike .
Stran v takem izpisu HTML je podana v Dodatku I. Zaradi " didaktične " narave projekta smo posebno pozornost namenili dokumentaciji , ki je razmeroma obširna , in , upamo , jasna .
Tudi dokumentacija je zapisana po standardu TEI ( TEI Lite ) in prikazana v HTML s pomočjo stila XSLT , ki ga ponuja TEI .
Končno vsebuje dokumentacija tudi arhiv pisnih diskusij in komentarjev , ki dodatno pojasnjujejo nekatere odločitve v zvezi z našim označevanjem .
Dodatno označevanje bi lahko poseglo v retorično ali jezikoslovno strukturo besedila .
V eni poskusnih inačic smo na manjšem korpusu pisem v besedilu označili vsa lastna osebna imena ( vsega skupaj 712 pojavnic ) , kar odpira možnost študija onomastike in kulturne zgodovine .
Druga pilotska edicija je zbirka Pesmi o Maji Alojza Gradnika .
V članku bomo predstavili izdelavo govorne baze Broadcast News za slovenski jezik ( BNSI ) .
Projekt , ki poteka v sodelovanju med Fakulteta za elektrotehniko , računalništvo in informatiko , Univerze v Mariboru in RTV Slovenija , se je začel leta 2002.
Najprej bomo predstavili organizacijske vidike izdelave baze ter postopke , ki smo jih pri tem uporabili .
V nadaljevanju članka bomo predstavili prve rezultate razpoznavanja tekočega govora .
Razpoznavanje govora predstavlja eno izmed smeri govornih tehnologij , ki v zadnjem času doživlja prenos iz laboratorijskega okolja v praktično uporabo .
Značilnost obeh sistemov je , da podpirata razpoznavanje govora za slovenski jezik , vendar samo na nivoju izoliranih besed .
V slovenskem jeziku predstavlja bistveno zahtevnejši problem razpoznavanje tekočega govora z velikim slovarjem besed .
V slovenskem prostoru je sicer bilo na voljo kar nekaj različnih govornih baz , ki so potrebne za učenje razpoznavalnika govora , vendar niso primerne za razpoznavanje tekočega govora z neomejenim naborom besed .
Upoštevaje ta dejstva smo zasnovali projekt Broadcast News za slovenski jezik ( BNSI ) , katerega cilj je izdelati govorno bazo iz družine Broadcast News , primerno za razpoznavanje tekočega govora z neomejenim naborom besed .
Prva baza iz skupine Broadcast News je nastala leta 1996 na pobudo ameriških organizacij NIST in DARPA ( Pallett , 2002 ) .
Prvi bazi Broadcast News za angleški jezik , ki smo jo uporabljali v preteklosti ( Žgank , 1999 ) , so sledile baze v drugih jezikih : španskem , kitajskem , italijanskem , češkem , ...
Fakulteta za elektrotehniko , računalništvo in informatiko , Univerze v Mariboru je demonstracijsko aplikacijo , s sistemom za slovensko podnaslavljanje televizijskih oddaj v živo , uspešno predstavila na sejmu TeleInfos , aprila 2004 v Ljubljani .
Začetki projekta Broadcast News za slovenski jezik segajo v leto 2002.
Cilj projekta je izdelati bazo Broad-cast News za slovenski jezik , ki jo bo možno uporabiti na različnih področjih govornih tehnologij .
Govorna baza bo po dokončanju dostopna širšemu krogu uporabnikov v okviru evropske organizacije ELRA / ELDA .
V članku bomo najprej predstavili nastajanje in izdelavo govorne baze Broadcast News za slovenski jezik .
Obdelava govornega materiala bo predstavljena v tretjem poglavju .
Predstavitvi govorne baze bo sledila predstavitev razpoznavalnika tekočega govora , izdelanega na osnovi baze Broadcast News .
Rezultati razpoznavanja govora se nahajajo v petem poglavju , zaključek in smernice za prihodnje delo pa v zadnjem , šestem , poglavju .
Pri izdelavi baze tipa Broadcast News lahko uporabimo dva različna načina zajemanja materiala .
Prvi način je zajemanja materiala neposredno iz etra .
Slabost takšnega pristopa je , da je z njim bistveno težje pokriti daljše časvno obdobje , kar je potrebno zato , da res dosežemo neomejen nabor besed .
V primeru , ko bi zajemali oddaje samo v krajšem časovnem obdobju , bi lahko prišlo do prevelike medsebojne odvisnosti slovarjev posameznih oddaj , saj pogosto prihaja do ponavljanja tematike znotraj krajšega časovnega obdobja .
Drugi možen način zajemanja je snemanje govornega materiala neposredno iz arhiva oddaj .
Pri izdelavi baze Broadcast News smo uporabili drugi pristop zajemanja govornega materiala , saj je bil naš cilj izdelati govorno bazo za razpoznavanje govora z neomejenim naborom besed .
Material za izdelavo baze , ki jo bomo predstavili v nadaljevanju , je bil zajet iz arhiva oddaj RTV Slovenija .
Pred samim začetkom zajemanja govornega materiala smo opravili analizo obstoječih baz iz družine Broad-cast News , kjer smo ugotavljali tip in strukturo vključenih oddaj .
Na osnovi rezultatov analize in televizijskega sporeda smo pripravili seznam oddaj , ki so bile kasneje vključene v bazo .
Pri tem smo kot osnovno obdobje upoštevali čas štirih let – od leta 1999 do leta 2003.
Da bi zagotovili enakomerno zastopanost obeh spolov , smo tako zajeli del oddaj tudi iz starejšega obdobja – do leta 1993.
Govorni signal smo shranjevali na DAT Audio kasete , ki smo jih kasneje uporabili kot izhodišče za izdelavo govorne baze .
Podrobnosti o zajetem materialu se nahajajo v tabeli 1.
Končna verzija baze Broadcast News za slovenski jezik bo vsebovala 36 ur obdelanih posnetkov .
Od tega bo 30 ur namenjenih učenju akustičnih modelov , 3 ure razvojnemu prilagajanju sistema in 3 ure testiranju razpoznavalnika tekočega govora .
Zajeti tekstovni material bomo uporabili za učenje jezikovnih modelov , saj sta oblika in način jezika , ki je v uporabi pri televizijskih oddajah , bistveno drugačna od jezika , ki ga uporabljajo v tiskanih medijih .
Zajeti govorni material smo v naslednjem koraku obdelali .
Natančno je prepisan vsebovan govor , označeni so drugi zvočni dogodki , ki vplivajo na razpoznavanje govora , označeni so vsi govorci in njihove lastnosti .
Zapisovalcem je pri izdelavi baze zadostovala uporaba osebnega računalnika , saj so bili z njim dostopni vsi potrebni dodatni viri – slika z DVD+R nosilca , Slovenski pravopis , baza časopisa Večer , iskalnika Najdi.si in Google , ...
Pri označevanju govornega materiala smo za osnovo vzeli navodila za izdelavo angleške baze , ki jih je objavila organizacija LDC ( LDC domača stran , 2004 ) .
V nadaljevanju predstavljamo nekatere posebnosti ortografskega prepisovanja baze .
Krivulja ( ˜ ) se uporablja za označevanje kratic , ki so izgovorjene črkovano , npr. ˜ ZDA , znak @ pa za označevanje kratic , ki so izgovorjene kot ena beseda , npr. @ NATO .
Velike začetnice se pri prepisovanju baze uporabljajo samo v kraticah ( ˜ APZ ) , pri črkovanju ( ˜ S ˜T ˜R ˜I ˜T ˜A ˜ R ) in kot velike začetnice pravih lastnih imen ( Moskva , George ) .
Občne besede , ki so del lastnih imen ali lastno ime , so zapisane z malo začetnico in med narekovaji , npr. " ministrstvo za notranje zadeve republike Slovenije " , " združene države Amerike " .
Sistem za razpoznavanje tekočega govora .
Razpoznavalnik govora , ki temelji na bazi Broadcast News , predstavlja bistveno zahtevnejši sistem kot so tisti sistemi , ki jih uporabljamo v telefonskih aplikacijah ukazovanja z izoliranimi besedami ali v narekovalnih sistemih .
Primer za razpoznavalnike govora relativno preproste kategorije je bran govor v studijskem okolju .
Da bi kar najhitreje omogočili razvoj potrebnih dodatnih modulov , smo s trenutno razpoložljivim govornim materialom iz baze Broadcast News za slovenski jezik izdelali osnovni razpoznavalnik govora , ki ga bomo predstavili v nadaljevanju .
Kot osnovo smo tako vzeli akustične modele , naučene na slovenski studijski bazi SNABI .
Akustične modele naučene na bazi SNABI , je potrebno sedaj prenesti v okolje baze Broadcast News .
Do razlike med obema naboroma je prišlo zaradi postopka mapiranja redkih fonemov , ki smo ga uporabili pri učenju akustičnih modelov z bazo SNABI .
Iz učnega korpus baze Broadcast News smo vzeli samo tiste stavke , ki so bili označeni z razredom F0 ( LDC domača stran , 2004 ) .
Prenesene akustične modele smo sedaj uporabili kot izhodišče pri postopku ponovnega učenja modelov z govornim materialom iz baze Broadcast News .
Akustične modele , ki smo jih dobili kot rezultat postopka ponovnega učenja , smo nato uporabili v razpoznavalniku govora .
Priprava jezikovnih modelov .
Med razpoznavanjem tekočega govora ima jezikovni model zelo pomembno vlogo , saj modelira zajeti govor na višjem nivoju kot akustični modeli .
Da bi kar najbolj zmanjšali to razliko v obliki besedila , smo osnovnemu besedilnemu korpusu dnevnika Večer dodali še del tekstovnega materiala oddaj , ki smo ga zajeli iz sistema iNews .
Dodatni besedilni korpus je vseboval 177.000 besed , od tega 26.000 različnih .
Razpoznavalnik tekočega govora z velikim slovarjem besed .
Slovar razpoznavalnika govora je vseboval 20.000 različnih besed .
Kot osnovo smo vzeli vse tiste besed , ki so nastopale v učnem korpusu – teh je bilo približno 7.000 – ter seznam dopolnili z najpogostejšimi besedami iz besedilnega kropusa Večer .
Grafemsko-fonemsko pretvorbo smo v prvem koraku opravili s slovarjem SiFlex .
Analiza je pokazali , da slovar razpoznavalnika govora pripravljen na takšen način , ne vsebuje samo 0,01% besed , ki se nahajajo v testnem naboru .
Dosežena pokritost je zelo dobra , saj so dosedanje izkušnje pokazale , da lahko za slovenski jezik pri takšni velikosti slovarja pričakujemo približno 80% pokritost ( Rotovnik et al. , 2003 ) .
Za razpoznavanje govora smo uporabili standarden razpoznavalnik govora , ki je deloval v enoprehodnem načinu z bigramskim jezikovnim modelom .
Rezultate razpoznavanja govora na izbranem testnem naboru stavkov razreda F0 prikazuje tabela 2.
Predstavljen sistem razpoznavanja tekočega govora je dosegel 41,7% napako razpoznavanja besed ( NRB ) .
Največje število napak so doprinesle zamenjane besede ( 27,7% ).
Podrobnejša analiza razpoznanih stavkov je pokazala , da lahko delež teh napak pripišemo inflekcijski naravi slovenskega jezika , saj je prihajalo do napak v končnicah besed , medtem ko je bila osnova razpoznana pravilno .
V nadaljnjem delu bo pri zasnovi razpoznavalnika govora za bazo Broadcast News za slovenski jezik potrebno uporabiti tudi metode , ki so prirejene za inflekcijske jezike .
V članku smo predstavili govorno bazo Broadcast News za slovenski jezik ( BNSI ) , ki je rezultat projekta med Fakulteto za elektrotehniko , računalništvo in informatiko , Univerze v Mariboru in RTV Slovenija .
Obdelani govorni material smo v nadaljevanju uporabili za izdelavo razpoznavalnika tekočega govora z velikim slovarjem besed , ki ni bil omejen na določeno besedišče .
Predstavljeni razpoznavalnik govora služi kot osnova za nadaljni razvoj sistema Broadcast News , predvidena je vgradnja dodatnih modulov , ki bodo izboljšali delovanje sistema , še posebej z upoštevanjem posebnosti slovenskega jezika .
Rezultati razpoznavanja tekočega govora z bazo Broadcast News .
Predstavljamo nov sistem za sintezo slovenskega govora , ki temelji na teoriji prikritih Markovovih modelov .
Rezultati izvedenih subjektivnih in objektivnih testov kažejo , da je kakovost sintetiziranega govora v smislu naravnosti v primerjavi s predhodno razvitim difonskim sintetizatorjem na višjem nivoju .
Razvoj na področju umetnega tvorjenja govora je prišel do točke , ko sintetizatorji govora dosegajo zelo visoko stopnjo razumljivosti , problem pa je v naravnosti umetnega govora , ki za številne namene še vedno ni zadovoljiva .
V zadnjem času je bilo predvsem zaradi želje po večji naravnosti moč opaziti znaten premik od difonske sinteze h korpusni sintezi ( Campbell in Black , 1996 ) .
Poleg korpusne sinteze je na področju sinteze govora opaziti tudi večji poudarek na inženirskih tehnikah ( iskalni postopki , optimizacijski postopki , statistično modeliranje ) , nekoliko manj pa je opaziti razvoja jezikoslovnih pravil ( Ostendorf in Bulyko , 2002 ) .
Kot morda najbolj izstopajoč primer velja omeniti za področje razpoznavanja govora zelo značilno tehnologijo prikritih Markovovih modelov ( PMM ) , ki se v zadnjem času vse pogosteje uporablja za samodejno segmentacijo in označevanje zbirk govorjenega jezika ( Mihelič in sod. , 2003 ) .
Preostanek članka je razdeljen na tri razdelke .
V drugem podrobneje podamo postopek gradnje sistema in predstavimo poskuse , s katerimi smo ovrednotili kakovost govora .
Postopek sinteze govora z uporabo PMM-jev se razlikuje od bolj razširjenih postopkov v tem , da ogrodje PMM-jev ne uporablja zgolj za segmentacijo in označevanje govorne zbirke , pač pa gre še korak naprej in ga uporablja tudi kot model za tvorjenje govora .
Shematski prikaz sinteze govora z uporabo PMM-jev je prikazan na sliki 1.
Na vrhu je uprizorjen postopek učenja , pri katerem se ocenijo parametri statističnega modela govora ( srednji del slike ) , na dnu slike pa je uprizorjen postopek sinteze , kjer pride do tvorjenja govornega signala .
Pri izbiri primernih značilk , ki jih bomo uporabili za sintezo govora , izhajamo iz dejstva , da moramo iz značilk rekonstruirati govorni signal , ki bo v zaznavnem smislu čim bolj podoben izvornemu signalu .
V ta namen se izkaže zelo uporabna teorija vir-filter modela govora ( Rabiner in Huang , 1993 ) .
Kljub temu pa je prisotna pomembna razlika , saj pri gradnji razpoznavalnika govora ocenjujemo le parametre modela prenosne funkcije govornega trakta , medtem ko tukaj želimo zgraditi tudi model vzbujanja .
Elegantna rešitev tega problema je ponujena v ( Tokuda in sod. , 2002 ) , kjer je predlagan nov tip PMM-ja .
Poleg prenosne funkcije in vzbujanja govornega trakta želimo s PMM-ji modelirati tudi trajanja glasov v govoru .
Težavo lahko rešimo tako , da v PMM vključimo eksplicitne gostote verjetnosti ( parametrične ali neparametrične ) trajanj stanj ( Ferguson , 1980 ; Levinson , 1986 ) .
Problem poenostavimo tako , da ocenimo funkcije verjetnosti trajanj stanj po že končanem postopku učenja ( Yoshimura in sod. , 1998 ) .
Pri delu smo uporabljali del govorne zbirke vremenskih napovedi VNTV ( Žibert in Mihelič , 2000 ) , ki ga je izgovoril govorec 02m .
V zbirki je govorec 02m zastopan s 578 stavki , 6363 ( 770 različnih ) besedami oz. 39 minutami govora .
Značilke smo določali na 25 ms dolgih izsekih govornega signala , ki smo jih predhodno oknili z Blackmanovim oknom .
Prenosno funkcijo govornega trakta smo opisali s 25 koeficienti MFCC s pripadajočimi dinamičnimi ( ∆ in ∆ ∆ ) parametri .
Posnetke govornih signalov smo najprej časovno poravnali s pomočjo samodejnega postopka siljenega prileganja ( Dobrišek , 2001 ) .
Sledilo je 10 prehodov Baum-Welchevega postopka učenja , s čimer smo dobili natančnejše ocene .
Po koncu postopka učenja smo na podlagi statistik , ki smo jih pridobili med učenjem , ocenili še parametre modela trajanj , ki je vseboval eno enorazsežno funkcijo gostote verjetnosti na stanje PMM-ja .
Na podlagi vhodnega niza simbolov se ustrezni PMM-ji povežejo v verigo ( kompozitni model λ ) .
Naša naloga je poiskati najverjetnejši niz vektorjev značilk ˆx , ki ga model λ odda .
Z drugimi besedami , poiskati želimo niz ˆx = { ˆx1 , ...
Čeprav je bil za rešitev tega problema predlagan EM tip postopka ( Tokuda in sod. , 2000 ) , je s praktičnega vidika bolj sprejemljiva podoptimalna rešitev , ki jo dobimo tako , da poenostavimo in najprej najdemo najverjetnejšo pot ˆq = { ˆq1 , ...
Najverjetnejšo pot najdemo na podlagi modela trajanj , ki smo ga zgradili v postopku učenja .
Za dan čas T želimo poiskati niz stanj ˆq = q1q2...qT , za katerega bo verjetnost P ( ˆq | λ ) največja .
Zainteresirani bralec naj se za detajlni opis postopkov določanja najbolj verjetnega niza značilk obrne na ( Tokuda in sod. , 2000 ) .
Vrednotenje kakovosti sintetiziranega govora smo razdelili na dva dela .
Slušni test smo zastavili v obliki primerjalnega testa parov ( Gros in sod. , 1997 ) .
Nadaljna razlika je bila ta , da smo v primeru statičnih različic ( MS in TS ) v postopku sinteze parametre tvorili brez upoštevanja omejitev , ki jih vnesejo zveze med statičnimi in dinamičnimi značilkami , medtem ko smo v primeru dinamičnih različic ( MD in TD ) te omejitve upoštevali .
Na ta način smo želeli preveriti vpliv upoštevanja ( trifonskega ) konteksta in dinamičnih značilk na kakovost sintetiziranega govora .
Posnetke sintetiziranega govora smo tvorili iz treh sestavkov osmih povedi .
Prvi dve besedili nista bili povezani s področjem vremenskih napovedi , tretje pa je bilo del vremenske napovedi , ki pa ni bila zajeta v učni množici .
Nihče na področju govornih tehnologij ni imel strokovnih izkušenj .
Rezultati ( slika 2 ) navajajo na naslednje sklepe : - h kakovosti sintetiziranega govora največ doprinese postopek tvorjenja parametrov govornega signala , ki upošteva dinamične značilke , - dodatno izboljšanje kakovosti dosežemo z vpeljavo kontekstno odvisnih ( trifonskih ) modelov , - splošni vtis sinteze TS je na ravni difonske S5 .
Kot zanimivost omenimo , da ni bilo mogoče opaziti bistvenih razlik v ocenah poslušalcev glede na tematiko besedila , kot bi bilo mogoče pričakovati .
Iz fonemskega zapisa besedila smo tvorili ustrezne signale sintetiziranega govora z različnimi načini sinteze govora .
Iz posnetkov smo izračunali nize vektorjev MFCC , med njimi pa s postopkom ukrivljanja časovne osi ( Rabiner in Huang , 1993 ) normirane Evklidove razdalje po sledeči formuli : /.../ kjer sta w1 ( t ) in w2 ( t ) funkciji ukrivljanja časovne osi , ki pripadata nizoma ˜ c ( 1 ) in ˜ c ( 2 ) ( M − 1 ) - razsežnih vektorjev značilk .
Preveriti smo želeli tudi razlike v trajanju med naravnim in sintetiziranim govorom .
Dodatno opazimo ( Vesnicer , 2003 ) , da je povprečno odstopanje trajanj glasov trifonske različice sintetizatorja pri večini glasov manjše kot pri monofonski različici .
Čeprav rezultati niso direktno primerljivi , povejmo , da je z dvostopenjskim modelom trajanja za slovenski govor ( Gros , 1999 ) dosežena vrednost povprečne absolutne razlike trajanj 11 ms .
Razberemo lahko dvoje : - pri " statičnih " različicah sinteze govora ( MS in TS ) prihaja do nezveznosti v poteku osnovne frekvence , medtem ko je pri " dinamičnih " različicah MD in TD potek osnovne frekvence zglajen , - potek osnovne frekvence je pri monofonskih različicah MS in MD precej monoton , medtem ko je pri trifonskih TS in TD bolj razgiban .
Strniti moremo , da dinamične značilke prispevajo k bolj gladkim prehodom med glasovi v sintetiziranem govoru , kar prispeva predvsem k večji razločnosti in razumljivosti govora , kontekstno odvisni modeli ( trifoni ) pa prispevajo k večji razgibanosti govora in s tem k bolj naravnemu govoru .
Kakovost sintetiziranega govora smo ovrednotili s slušnim preizkusom in različnimi objektivnimi preizkusi .
PSfrag replacements signali oznake simboli luščenje značilk luščenje značilk vzbujanja govornega trakta ocenjevanje parametrov PMM-jev tvorjenjetvorjenje tvorjenje vektorjev značilk vzbujanja vzbujanja govora TXT U CENJE SINTEZA statistični model govora govora .
Shematski prikaz postopka učenja in sinteze govora z uporabo prikritih Markovovih modelov .
Vnašalni sistem ZRCola .
ZRCola odpravlja dve zadregi , ki sta doslej oteževali predvsem pisanje in urejanje zapletenih narečnih besedil v pri nas najbolj razširjenem urejevalniku besedil .
( Na podoben način , le da v drugačnem zaporedju , se da v wordu že zdaj posredno vnesti npr. znaka á ali č. ) Na kateri koli stopnji vnašanja besedila lahko znake sestavimo ( in sestavljene seveda razstavimo ) in jih take natisnemo ali npr. oddamo v tisk .
V programu word je privzeto , da se da nekatere črke z ločevalnimi znaki sestaviti v en sam novi znak ali pa na videz , tako , da program npr. sestavljivo piko premakne pod osnovni znak , uporabnik pa mora izbrati eno izmed dobrega ducata pik , ki se razlikujejo le glede na širino znaka , pod katerim naj bi stale – zanesljivo iskanje po tako vnesenem besedilu je nemogoče in tak način vnašanja znakov za resno delo ni primeren .
Vnašalni sistem ZRCola ponuja eno samo piko (  ) , ki nastopa v kombinacijah z drugimi ločevalnimi znaki in se na uporabnikovo zahtevo sestavi z osnovnim znakom a v  ,  , ậ ,  ,  , ặ ,  ali ạ. ( 2 ) V pisavi 00 ZRCola so poleg vseh unikodnih latiničnih znakov upoštevani še vsi znaki iz cirilične , grške , hebrejske in arabske pisave , mednarodna fonetična abeceda ter velika količina simbolov in ločil iz unikoda .
Na področju zasebne rabe ( angl. private use area ) unikoda , kjer je trenutno v navedenem programskem okolju in programu prostora za več kot 6000 znakov , pa je vse manjkajoče s standardiziranega področja unikoda , kar lahko dodajo posamezniki ali skupine za svoje potrebe : uvedeni so dejansko rabljeni dodatni sestavljeni znaki in dodatne latinične in cirilične črke za dialektološke potrebe , poleg njih pa doslej v računalniških naborih manjkajoči sistemsko prikazani slovenski zgodovinski znaki iz bohoričice , dajnčice , metelčice in stare prekmurske knjižne pisave , potem slovenski zgodovinski narečni in drugi jezikoslovni znaki , osnovni metrični in še nekateri dodatni tehnični znaki ter posebna ločila .
Potreba ne samo dialektološke stroke po oblikovanju podatkovnih zbirk in po preprosti izmenljivosti vnesenih podatkov zahteva zanesljive rešitve , ki jih v računalniških programih in tudi v unikodu še lep čas ne bo , čeprav so obljubljene in jih napovedujejo ( npr. samodejno sestavljanje znakov ) , vendar nanje ne moremo čakati .
Pripravlja se tudi popolnejša dokumentacija s potrebnimi navodili in nasveti za vnašanje ( recimo o narekovajih , o velikih začetnicah v narečnih zapisih , o izbiri znaka za polglasnik v slovenskih narečnih besedilih ter o pomišljajih in vezaju ) , v katero bi bilo zaželeno vključiti slovenski prevod vsaj tistega dela unikoda , ki je vključen v ZRColo , z ustreznim opisom podstandarda s področja zasebne rabe .
Zato smo pri naglaševanju nepoznanih besed uporabili strojno učenje , s katerim določimo mesto naglasa s pomočjo atributov , ki opisujejo različne lastnosti besede in opazovanega grafema .
Poskuse smo opravili z atributi , ki nosijo informacijo o osnovnih lastnostih besede ( kot so število zlogov v besedi , predpona , pripona , kontekst opazovanega grafema in druge ) , atributi , ki poleg osnovnih lastnosti upoštevajo še oblikoslovne oznake besede in atributi , ki poleg vseh omenjenih lastnosti upoštevajo še mesto zloga šteto od konca besede .
Rezultati kažejo , da upoštevanje oblikoslovnih oznak in dodatnega atributa pomaga k večji klasifikacijski točnosti .
Pretvorba grafemov v foneme je pomembna naloga v vsakem sistemu , ki želi omogočati samodejno sintezo govora .
Lahko jo opišemo kot preslikavo , ki črkovnemu zapisu besede priredi njen fonemski zapis .
V slovenskem jeziku lahko ( v primerjavi z večino drugih jezikov ) takšno pretvorbo izvedemo relativno enostavno , ko poznamo naglas besede .
Vendar je ravno naglaševanje besed v slovenskem jeziku zelo zahtevna naloga , saj zanjo ni preprostih pravil .
Posamezna beseda ima lahko različno število naglašenih mest .
Mesto naglasa je določeno za vsako besedo posebej in velja , da se ga naučimo hkrati z učenjem jezika .
Poleg tega se lahko posamezna besedna oblika naglašuje na več različnih načinov – to so t.i. homografi .
Na njihovo pravilno naglaševanje in izgovarjavo lahko sklepamo le iz konteksta .
Dosedanje metode učenja izgovarjave nepoznanih slovenskih besed temeljijo na predpostavki , da se vsa potrebna informacija v celoti nahaja v nizu znakov , ki sestavljajo besedo ( Škrjanc in sod. , 2002 ; Šef in Gams , 2004 ) .
Ker sta pri slovenščini mesto in tip dinamičnega naglasa odvisna tudi od oblikoslovnih karakteristik besede , za pravilno izgovarjavo besede potrebujemo tudi to informacijo .
Poleg tega raziskujemo vpliv dodatnega atributa , ki zaznamuje mesto zloga v besedi šteto od konca besede , na klasifikacijsko točnost .
Uporabili smo različne metode za strojno učenje .
V četrtem razdelku prikazujemo in interpretiramo dobljene rezultate .
Ugotovitve zberemo v zaključku .
Slovar slovenskega knjižnega jezika ( SSKJ ) vsebuje le besede v njihovih osnovnih oblikah , zato smo morali zgraditi nov fonetični slovar v elektronski obliki .
Kot osnovo smo uporabili MULTEXT-East leksikon ( Erjavec , 1998 ) , ki smo ga dopolnili s podatki o mestu in tipu tako dinamičnega kot tonemskega naglasa .
Večino dela smo opravlili avtomatično z uporabo v ta namen razvitega morfološkega analizatorja ( ca .
Takšna določitev mesta naglasa je bila neuspešna v približno 0,2 % primerov .
Poleg tega je algoritem predlagal , da dodatno preverimo še nekaj manj kot 1 % besed .
V vseh teh primerih smo delo opravili ročno .
Ohranili smo večkratne ponovitve posameznih besednih oblik z enako izgovarjavo , a različno oblikoslovno oznako .
Kot rezultat smo dobili 2.017.858 zlogov .
Nato smo eno skupino vzeli za testno množico , ostali dve pa združili v učno množico .
Postopek smo ponovili trikrat ( vsakič smo za testno množico vzeli drugo skupino ) in dobili tri učne in tri testne množice za trikratno prečno preverjanje ( tabela 1 ) .
Vsako učno in testno množico smo nadalje razdelili na šest podmnožic – po eno za vsak samoglasnik in soglasnik ' r ' .
K osnovnim atributom smo dodali še 7 atributov , ki opisujejo oblikoslovne oznake opazovane besede ( 74 atributov pod številkama 1 in 2 na sliki 1 ) .
Vzeli smo vseh 75 atributov – poleg osnovnih atributov in oblikoslovnih oznak smo dodali atributi 2.2. zbira atributov Za strojno učenje naglaševanja grafemov smo imeli na voljo 75 atributov , ki so prikazani na sliki 1 : – število zlogov v besedi ( 1 atribut ) ; – mesto opazovanega zloga v besedi ( 1 atribut ) ; – prisotnost predpone in pripone v besedi ter razred predpone in pripone ( 4 atributi ) ; – enklitika in proklitika ter razred enklitike in proklitike ( 2 atributa ) ; Število zlogov : 5 Mesto zloga : 4 Pripona : - inski Razred prip .
: predzadnji zlog Predpona : / Razred predpone : / Enklitika , proklitika : / Razred enklitike , proklitike : / Levi samoglasnik 2 : e Levi samoglasnik 1 : a Desni samoglasnik 1 : i Desni samoglasnik 2 : / Levi kontekst 3 : zvočnik ( n ) Levi kontekst 2 : samoglasnik ( a ) 1 Besedna vrsta : pridevnik 2 Spol : moški Sklon : imenovalnik Število : ednina Oseba : / čas : / Stopnja : osnovnik Mesto zloga šteto 3 od konca besede : 2 razred Naglas : í ( dolgi naglašeni i ) – samoglasniki , ki nastopajo ( eno ali dve mesti ) levo in desno od opazovanega samoglasnika ( 4 atributi ) ; – levi in desni kontekst opazovanega samoglasnika ( trije Levi kontekst 1 : zvočnik ( l ) Desni kontekst 1 : zvočnik ( n ) Desni kontekst 2 : nezveneč pripornik ( s ) Desni kontekst 3 : nezveneč zapornik ( k ) 1 2 3 4 5 a d r e n a l í n s ki znaki levo in desno od opazovanega samoglasnika ) , pri čemer vsak znak opišemo z devetimi atributi ( 54 atributov ) ; Slika 1 : Skupine atributov za četrti samoglasnik besede adrenalinski .
Še atribut , ki pove mesto opazovanega zloga v besedi šteto od konca besede .
Čeprav je to podatek , ki ga Osnovni atributi lahko razberemo iz množice že uporabljenih atributov ( mesto zloga šteto od konca besede = število zlogov v besedi − mesto zloga +1 ) , tega izračuna metode strojnega učenja niso sposobne narediti same .
Za vsako od 54-ih nalog naglaševanja grafemov smo uporabili različne algoritme strojnega učenja , ki so implementirani v sistemu Weka 3.4.1 ( Witten in Frank , 2000 ) .
Pri izboru algoritmov smo bili zaradi velikega števila atributov in primerov omejeni le na nekaj različnih pristopov .
Uporabljene metode lahko glede na pristop reševanja razdelimo v tri skupine : metode , ki uporabljajo naivni Bayesov klasifikator , metode , ki gradijo odločitvena drevesa , in meta metode , ki klasificirajo primere glede na napovedi osnovnih klasifikatorjev .
Bagging 25 AdaBoostM1 RandomCommittee 20 15 10 5 0 - RandomTree generira odločitveno drevo , pri gradnji katerega upošteva le k naključno izbranih atributov za vsako vozlišče .
A E I O U R Zlog Beseda - REPTree zgradi odločitveno drevo glede na informacijski prispevek in drevo na koncu odreže .
Slika 2 : Rezultati izbranih metod strojnega učenja za tri različne nabore atributov .
Vse metode so uporabljale privzete nastavitve sistema Weka .
Osnovni klasifikator pri metodah Bagging in AdaBoostM1 je bilo odločitveno drevo J48 , pri metodi RandomCommittee pa odločitveno drevo RandomTree .
Na sliki 2 so prikazani grafi povprečnih napak metod pri naglaševanju s trikratnim prečnim preverjanjem .
Poskuse smo opravili za vse samoglasnike in črko ' r ' ter iz dobljenih rezultatov izračunali napako klasifikacije še za zlog in besedo .
Na grafih na sliki 2 so zaradi boljše preglednosti prikazane samo najboljše metode .
Odločitvena drevesa ADTree , RandomTree in REPTree dobijo slabše rezultate kot J48 , zato na sliki njihovi rezultati niso narisani .
Najboljše rezultate so po pričakovanjih dobile meta metode .
Upoštevanje dodatnega atributa , ki pove mesto zloga v besedi šteto od konca besede , zmanjša napako klasifikacije za dodatna 0,2 % na nivoju zloga in 0,5 % na nivoju besede .
20 Osnovni atributi Oblikoslovne oznake Dodatni atribut 15 10 5 0 Za naglaševanje s čim večjo točnostjo potrebujemo poleg osnovnih informacij o grafemih in besedah tudi oblikoslovne oznake besede ( besedna vrsta , spol , sklon , število , oseba , čas in stopnja ) .
S poskusi smo pokazali , da dobimo boljše rezultate , če poleg osnovnih atributov upoštevamo še oblikoslovne oznake besede , še boljše pa , če upoštevamo tudi atribut , ki nam pove mesto zloga v besedi šteto od konca besede .
Učna množica 1 348036 326772 355327 247590 64285 19141 1361151 Testna množica 1 167688 157842 170537 122299 29321 9020 656707 Učna množica 2 340131 317148 347907 246674 62464 18387 1332711 Testna množica 2 175593 167466 177957 123215 31142 9774 685147 Učna množica 3 343281 325308 348494 245514 60463 18794 1341854 Testna množica 3 172443 159306 177370 124375 33143 9367 676004 Skupaj 515724 484614 525864 369889 93606 28161 2017858.
Uporaba kanoničnega govornega akustičnega modela za prilagajanje prostora govornih akustičnih značilk .
Parametre bolj obsežnega govornega akustičnega modela smo določali po posebnem učnem načrtu z uporabo že transformiranih vektorjev akustičnih značilk .
Rezultati preizkusov samodejnega razpoznavalnika govora z govornimi sejami , ki po globalnih akustičnih in govornih značilnostih odstopajo od učnih govornih sej , so v primerjavi z izhodiščnim modelom , ki ne izvaja opisanega postopka prilagajanja , pokazali izboljšanje pravilnosti razpoznavanja govora .
Govorna seja zajema vse govorne posnetke istega govorca , ki so posneti v približno enakih akustičnih razmerah .
Uveljavljeni postopki tovrstnega prilagajanja praviloma predpostavljajo uporabo akustičnih govornih modelov , ki temeljijo na teoriji prikritih Markovovih modelov ( PMM ) .
V preteklih letih je bilo narejenega največ dela predvsem na postopkih prilagajanja z uporabo linearnih transformacij akustičnih govornih modelov ( Gales , 1998 ; in P. C. Woodland , 2001 ) .
Na slednjih je bilo v zadnjem času opravljenega veliko dela predvsem pri razvoju samodejnih razpoznavalnikov govorcev .
Že pred leti smo si za raziskovalni cilj zastavili razvoj lastnega pogona za samodejno razpoznavanje tekočega slovenskega govora z velikim besednjakom , ki bo imel zmožnost samodejnega prilagajanja na govorne seje in bo primeren za uporabo v vgradnih sistemih .
V zadnjem času smo delali predvsem na postopkih , ki temeljijo na linearnih transformacijah in omogočajo sprotno prilagajanje govornega modela trenutnim govornim sejam .
Posebej smo se posvetili določanju omejenih globalnih linearnih transformacij parametrov akustičnega govornega modela , ki jih je mogoče preslikati v linearne transformacije prostora akustičnih govornih značilk .
Z določanjem takšnih globalnih transformacij , ki so od govornih sej odvisne , lahko namreč zgradimo kanonični akustični govorni model , ki je deloma neodvisen od globalnih akustičnih značilnosti govornih sej .
Transformacije , dobljene s kanoničnim modelom , lahko nato uporabimo pri učenju običajnega samodejnega razpoznavalnika govora , ki tako tudi postane deloma neodvisen od globalnih akustičnih značilnosti govornih sej .
Članek opisuje nekaj naših poskusov z različnimi načrti postopka učenja razpoznavalnika govora , ki se prilagaja govornim sejam na prej opisan način .
Zaradi časovne zahtevnosti izvajanja takšnih poskusov smo primerjali rezultate , dosežene z samodejnim razpoznavalnikom s srednje velikim besednjakom .
Pri akustičnih govornih modelih , ki temeljijo na teoriji PMM , se prilagajanje z linearnimi transformacijami ne nanaša na prav vse parametre tega modela .
Ponavadi se izvaja linearno transformacijo le na parametrih funkcij normalnih gostot verjetnosti , s katerimi modeliramo porazdelitve naključnih spremenljivk v posameznih stanjih naključnega avtomata .
Primer takšne transformacije je omejena linearna transformacija , določena po kriteriju največjega verjetja akustičnega modela ( angl. Constrained Maximum Likelihood Linear Regression - CMLLR ) ( Gales , 1998 ) .
Določanje koeficientov matrike A0 in vektorja b0 izvedemo s uveljavljenim postopkom EM ( angl. Expectation-Maximization ) kot je podano v ( Gales , 1998 ) .
Dobljeno transformacijo parametrov Gaussovih porazdelitev lahko enostavno preslikamo v linearno transformacijo vektorjev akustičnih značilk , kot je podano v spodnjem izrazu .
Koeficiente matrike W določamo iz govornih posnetkov za vsako govorno sejo posebej .
Zaradi statistične narave akustičnega govornega modela in postopka ocenjevanja koeficientov linearne transformacije je očitno , da je pri majhni količini posnetkov prilagajanje boljše , če ima model manjše število parametrov .
Namen tega osnovnega modela je bil izključno ocenjevanje koeficientov linearne transformacije , ki se je uporabljala za sprotno transformiranje vektorjev akustičnih značilk .
Dejanski razpoznavalnik govora smo učili in ga preizkušali na že transformiranih vektorjih akustičnih značilk .
Osnovni akustični govorni model smo sestavili kot razpoznavalnik kontekstno neodvisnih alofonov .
Obravnavan učni načrt je možen le v primeru , ko so učni govorni posnetki urejeni po govornih sejah .
Začetne vrednosti koeficientov matrik W ( s ) smo inicializirali tako , da smo normalizirali globalne vektorje srednjih vrednosti ^ „ 0 ( s ) = 0 in kovariančne matrike ^ § 0 ( s ) = I , ki sta ocenjena iz vseh transformiranih ^ o ( ¿ ) dane govorne seje s. To se enostavno doseže tako , da se koeficiente matrike W ( s ) = [ A ( s ) b ( s ) ] inicializira na sledeč način A ( s ) = L0 ( s ) T ; b ( s ) = ¡ L0 ( s ) T „ 0 ( s ) ; kjer „ 0 ( s ) označuje globalni vektor srednjih vrednosti in L ( s ) spodnjo trikotno matriko razcepa Choleskega inverzne globalne kovariančne matrike § 0 ( s ) ¡ 1. Pri tem sta „ 0 ( s ) in § 0 ( s ) ocenjena iz netransformiranih o ( ¿ ) dane govorne seje s. Takšno inicializacijo smo izvedli zato , ker smo smo za akustične značilke uporabili običajne MFCC-koeficiente .
Na ta način smo v prilagajanje z linearnimi transformacijami vključili še normalizacijo MFCC-koeficientov po srednjih vrednostih in kovariancah ( angl. Cepstral Mean and Covariance Normalization ) .
Pri osnovni različici učnega načrta smo matrike W ( s ) inicializirali na običajen način z enotsko matriko in ničelnim vektorjem .
Govorne zbirke .
Zbirka VNTV pa vsebuje običajne televizijske posnetke vremenskih napovedi , ki so jih voditelji podali v okviru dnevnih poročil na Televiziji Slovenija .
Učna govorna zbirka je tako vsebovala posnetke govornih sej petinšestdesetih govorcev .
Za eno govorno sejo smo šteli vse posnetke istega govorca .
Iz učne govorne zbirke smo izločili tristo posnetkov , ki smo jih namenili za preizkus samodejnega razpoznavanja , ki je bil od učnih govornih sej odvisen .
Preizkusne govorne posnetke , ki so od učnih govornih sej deloma neodvisni , smo pridobili posebej za izvedbo poskusov , opisanih v tem članku .
Dvaindvajset govorcev ( v glavnem študentov ) smo prosili , da posnamejo po dvajset daljših stavkov .
Pri testnih posnetkih gre še vedno pretežno za bran govor , a se ta govor znatno razlikuje od posnetkov v zbirki Gopolis .
Govorcev namreč nismo posebej motivirali , da bi stavke jasno artikulirali , zato se pri znatnem številu posnetkov odražajo prvine spontanega govora ( tleskanje z jezikom , vzdihi ipd ) .
Vsi govorni modeli so bili tvorjeni s pomočjo orodij iz zbirke HTK .
Pri tem postopku je končno število parametrov govornega akustičnega modela odvisno od določenega praga ( S. Young , 2005 ) .
Za vektorje akustičnih značilk smo uporabljali običajne 39-razsežne vektorje , sestavljene iz MFCC-koeficientov in njihovih delta - in delta-delta koeficientov .
Iskane linearne transformacije so se nanašale na celotne 39-razsežne vektorje .
Trifonski akustični modeli so imeli po alofonih vezane verjetnosti prehodov med stanji PMM in 3200 vezanih stanj s po pet-komponentnimi Gaussovimi porazdelitvami .
Ta akustični model je tako vseboval skupaj točno 16000 Gaussovih funkcij gostot verjetnosti z diagonalnimi kovariančnimi matrikami .
Fonetična vprašanja , ki so potrebna za vezavo parametrov smo tvorili ročno ( Dobrišek , 2001 ) in v kombinaciji z vprašanji , samodejno pridobljenimi z orodji , ki so del zbirke Sphinx III .
Poleg navedenih parametrov imajo na rezultat razpoznavanja precejšen vpliv tudi drugi parametri Viterbijevega postopka iskanja najbolj verjetnega zaporedja stanj govornega modela pri danem govornem posnetku .
Pri teh parametrih smo pazili predvsem na to , da smo pri vseh govornih modelih dosegli približno enak čas razpoznavanja istih govornih posnetkov .
Vedno smo tudi uporabljali enako razmerje med vplivom akustičnega in jezikovnega modela na rezultat razpoznavanja in poskrbeli za približno enako razmerje med napakami vrivanj in izbrisov govornih enot .
Pri razpoznavanju glasov ( alofonov ) nismo uporabljali nobenega jezikovnega modela .
To pomeni , da je govorni model vključeval predpostavko , da vsak alofon lahko sledi drugemu z enako verjetnostjo .
Govorni model je vključeval bigramski jezikovni model , ocenjen iz učne govorne zbirke .
Kot smo že omenili , so se preizkusne govorne seje nanašale le na poizvedovanja po letalskih informacijah .
Preizkusni govorci niso bili vključeni v učno govorno zbirko .
Preizkus smo si zaenkrat zamislili tako , da smo del preizkusnih posnetkov namenili izključno začetnemu prilagajanju govornega modela in nato uporabili preostali del za dejanski preizkus pravilnosti razpoznavanja .
S poskusi smo ugotovili , da se doseže dobre rezultate že z desetimi poljubnimi krajšimi stavki , ki se namenijo izključno začetnemu nenadzorovanemu prilagajanju govornega modela .
Podajamo rezultate razpoznavanj za štiri vrste poskusov .
Pri tretjem poskusu ( CMLLR ) smo izvedli prilagajanje na opisan način s kanoničnim akustičnim modelom , pri katerem so bile transformacije inicializirane na običajen način z enotsko matriko in ničelnim vektorjem .
Pri zadnjem poskusu ( CVMN-CMLLR ) pa smo transformacije inicializirali iz srednji vrednosti in varianc globalnih Gaussovih porazdelitev posameznih govorih sej .
Ti rezultati predstavljajo oceno verjetnosti pravilnega razpoznavanja glasov v posnetkih , ki so od učnih govornih sej odvisni .
Pri rezultatih v tabeli 1 je najbolj opazna znatna razlika med oceno pravilnosti razpoznavanja posnetkov , ki so od učnih govornih sej odvisni , v primerjavi s tistimi , ki so od učnih govornih sej neodvisni .
To priča o znatnem vplivu jezikovnega modela na končni rezultat preizkusov .
Rezultatov naših poskusov potrjujejo domnevo , da postopki prilagajanja govornih modelov na globalne akustične značilnosti govornih sej z uporabo linearnih transformacij izboljšajo pravilnost samodejnega razpoznavanja govornih enot .
Namen članka je predstaviti program Klepec , ki je prvi resni poskus izdelave programiranega sogovornika za slovenski jezik .
Članek se osredotoča predvsem na izbiro slovenščine za jezik komunikacije ter iz tega izvirajoče specifike pri razvoju programa , ob strani pa pušča splošnejši prikaz programske zasnove ter delovanja ( slednje v Romih et al. , 2002 ) .
Trenutno je na internetu verzija 2.0 , v teku pa so že priprave izboljšane verzije.1 Zaenkrat je Klepec programirani sogovornik , namenjen zabavi in klepetu , s postopnim vgrajevanjem znanj oz. podatkovnih baz pa naj bi se razvil v agenta , ki 1S Klepcem lahko klepetamo na internetni strani http://klepec.amebis.si .
Nova verzija programa naj bi prinašala bistveno kvalitetnejšo jezikovno analizo vnosa na osnovi posodobitve programa z izboljšanim lematizatorjem ter jezikovnim analizatorjem , ki omogoča razdvoumljanje lematizacije ter delno stavčnočlensko analizo .
Vgrajeno ima tudi znanje o slovničnem spolu in po identifikaciji sogovornikovega spola bo v nadaljevanju uporabljal zanj ustrezne slovnične oblike .
Zaenkrat program nima nikakršnih semantičnih informacij , na osnovi katerih bi lahko vodil koherentno povezan pogovor ( potreboval bi podatke o pomenskih razmerjih med besedami , tipičnih kolokacijah ipd. ) .
V začetni fazi pogovora skuša dobiti od uporabnika informacijo o njegovem imenu , podatek si zapomni in ga v nadaljevanju pogovora po potrebi uporabi .
Odkloni od knjižne norme v smer govorjenega jezika .
Zaradi varstva uporabniških pravic izpuščava imena , kjer se pojavljajo , ter navajava le kratke izseke posameznega komunikacijskega niza .
Leksikalno bazo , na kateri temelji Klepec , za potrebe razvoja programa dopolnjujemo z najpogostejšimi odkloni od knjižne norme , in sicer z leksikalnimi enotami , ki : - se v zapisu približujejo govoru ( npr. različni zapisi zaimka jaz – jst , jest , js ...
, reducirane glagolske oblike gledal – gledu ipd. ) , - z opuščenimi šumniki nimajo enakopisne knjižne ustreznice ( npr. delaš – delas ) , - odstopajo od pravopisnih pravil ( npr. življenjski – življenski ) .
Identifikacija jezika temelji na bazi ključnih tujejezičnih besed , ki se v takšnih primerih najpogosteje pojavljajo , in je posledično uspešna le pod pogojem , da je uporabniški vnos tujejezičnih enot pravopisno ustrezen .
Si kaj sumljivega opazila ?
Na tem mestu govoriva specifično o bazah znanja o svetu , iz katerih naj bi Klepec v prihodnosti črpal odgovore na najrazličnejša uporabniška poizvedovanja .
Določena mera podobnosti v mišljenju in življenjski izkušnji je predpogoj za uspešno komunikacijo , zato je dobro , da je Klepec vsaj v nekaterih segmentih podoben človeku , drugačnega ga pravzaprav niti ni mogoče zasnovati .
Zanimivo vprašanje , ki zaenkrat ostaja neodgovorjeno , pa je : je bolje , da program pri določenih temah simulira konkretne izkušnje ( s spolnostjo , športom , čustvi ...
Kako Klepec deluje .
Ti programski jeziki kot prvo ne omogočajo enostavne vgradnje podatkov oz. znanj o nekem naravnem jeziku , še bolj problematično pa je , da način programiranja in delovanja , ki temelji na ( vnaprej ) določenem poteku programskih ukazov , ni dovolj učinkovit in primeren za izdelavo sistemov dialoga , kjer je nemogoče vnaprej določiti interakcijo s sogovornikom .
Zato smo za potrebe sistema , kakršen je Klepec , razvili in izdelali poseben programski jezik s trenutnim delovnim imenom K2.0 , ki omogoča učinkovitejše programiranje sogovornikov za določen naravni jezik .
V osnovi je Klepec vzorčno vodeni sistem .
To pomeni , da je sestavljen iz določenega števila vzorcev oz. zapisov , ki jih program primerja s sogovornikovim vnosom , potem pa na osnovi določenih meril izbere tistega , ki je temu vnosu najbolj podoben , in izbere enega od odgovorov , ki jih ta zapis vsebuje .
Eden osnovnih problemov pri razumevanju uporabniškega vnosa ter izdelavi in primerjavi vzorcev je , da lahko semantično načeloma enoznačne trditve izražamo na več različnih načinov ( kar se tiče izbire leksike ter skladenjskih struktur ) .
Eliza – pripisovanje posebnega komunikacijskega namena .
Brez uporabnikove pripravljenosti sodelovati v komunikaciji je še tako dobro zasnovan program obsojen na neuspeh , in obratno , povsem osnovne aplikacije lahko dosegajo velike uspehe .
To dejstvo je v svoj prid izkoristil tudi Joseph Weizenbaum , snovalec prve znane programirane sogovornice .
Metoda je Weizenbauma navdihnila , da je ustvaril program , ki z uporabnikom komunicira na enak način .
V nadaljevanju navajava tri primere uspešnega osmišljanja v kontekstu , kjer zgoraj naštete strategije v kombinaciji z uporabnikovim vztrajanjem pri temi , in seveda njegovo pripravljenostjo sodelovati v igri komunikacije , privedejo do zabavnih dialoških izmenjav : /.../
Uporabniški odnos do programa .
Ker je vsaka komunikacija mnogo več kot le izmenjava jezikovnih nizov , želiva na tem mestu opozoriti še na sociološke ter psihološke vidike komunikacije med človekom ter programiranim sogovornikom .
Žalitve ( ki so vprašanja le napol , saj glavni namen uporabnika ni poizvedovanje , pač pa izražanje negativnega mnenja o programiranem sogovorniku ) najdemo le med odločevalnimi vprašanji .
V skupini 550-ih odločevalnih vprašanj daleč največji delež zajemajo vprašanja oz. Žalitve o spolnih preferencah , predvsem homoseksualnosti ( 49 %).
Na drugem mestu so vprašanja o partnerskem statusu ( 17 % ) , na tretjem mestu vprašanja o znanju angleščine ( 14 % ) , na četrtem pa ponovno žalitve , tokrat umskih sposobnosti ( 7 %).
Na več mestih je že bilo rečeno , da je program Klepec projekt v procesu in da bo za njegov razvoj ter posledično kvalitetnejše delovanje potrebnega še mnogo dela .
Kratkoročnejši cilji so vgradnja izboljšanega lematizatorja ter jezikovnega analizatorja , prestrukturiranje leksikalne baze , da bo omogočala dopolnitev s semantičnimi ter kolokacijskimi informacijami ter postopno dodajanje podatkovnih baz z znanjem o svetu .
Odstopi od knjižne norme .
Veliko število možnih vzorcev .
Takšen razpoznavalnik govora je namenjen razpoznavanju govora v televizijskih ( in radijskih ) dnevnoinformativnih oddajah .
Sistem UMB Broadcast News smo zasnovali na slovenski govorni in tekstovni bazi BNSI Broadcast News .
Kot akustične modele smo uporabili grafemske kontekstno odvisne HMM modele s 16 kombinacijami porazdelitev verjetnosti na stanje .
Tvorili smo nabor različnih bigramskih in trigramskih jezikovnih modelov z 20k oz. 60k besedami v slovarju .
Vrednotenje sistema UMB Broadcast News smo izvedli z bigramskim jezikovnim modelom ter slovarjem z 20k besedami .
Na področju avtomatskega razpoznavanja govora ločimo med sistemi različne kompleksnosti .
Najtežjo nalogo tako predstavlja razpoznavanje tekočega spontanega govora z velikim slovarjem besed .
V to kategorijo sodi tudi domena razpoznavalnikov govora Broadcast News ( BN ) , kjer razpoznavamo govor v dnevnoinformativnih televizijskih oddajah .
Kompleksnost samega razpoznavalnika govora je odvisna tudi od lastnosti jezika .
) med težavnejše jezike za razpoznavanje govora , kar je ena izmed glavnih ovir za večji razvoj tega področja .
V članku bomo predstavili prvi razpoznavalnik slovenskega tekočega spontanega govora za domeno Broadcast News , ki je nastal na Univerzi v Mariboru .
V prispevku bomo opisali zasnovo in osnovno strukturo sistema ter podali preliminarne rezultate razpoznavanja govora .
Zaradi raznolikosti govornega materiala vključenega v bazo BNSI , se takšen razpoznavalnik govora sreča tako z branim govorom v studijskem okolju ( npr. agencijske novice ) , kot tudi z narečnim spontanim govorom s šumom iz okolice ali glasbo v ozadju ( npr. intervju na terenu ) .
Pri razvoju sistema UMB BN smo izhajali iz predhodnih razpoznavalnikov slovenskega govora ( Žgank et al. , 2001 ; Rotovnik , 2004 ) , ki so bili razviti za bazo SNABI ( Dreo , 1995 ) ter iz izkušenj pridobljenih v okviru razvoja demonstracijskega sistema za podnaslavljanje televizijskih oddaj v živo ( Žgank et al. , 2004 / 2 ) .
V nadaljevanju članka bomo v drugem poglavju opisali različne slovenske jezikovne vire , ki smo jih uporabili pri razvoju .
Osnovno zgradbo sistema UMB BN bomo opisali v tretjem poglavju .
Rezultate razpoznavanja govora z bazo BNSI bomo predstavili v četrtem poglavju .
Zaključek s smernicami za prihodnje delo bomo podali v zadnjem – petem – poglavju .
Razpoložljivost primernih jezikovnih virov je osnova za razvoj vsakega razpoznavalnika govora .
Za učenje akustičnih modelov tako potrebujemo transkribiran govorni material , za razvoj jezikovnih modelov pa tekstovne korpuse .
Med razvojem osnovne zgradbe razpoznavalnika govora je potreben precejšen delež ročnega dela za pripravo in uskladitev vseh jezikovnih virov .
Zato smo zaradi poenostavitve dela uporabili samo polovico razpoložljivega govornega korpusa baze BNSI .
Učni korpus je tako vseboval 15 ur govornega materiala , testni nabor pa približno 1,5 ure govora .
Tabela 1 prikazuje statistiko virov , ki smo jih uporabili pri učenju jezikovnih modelov .
Iz tekstovnega korpusa smo izločili tiste mesečne sklope scenarijev , v katerih se nahajata oddaji iz testnega nabora .
Poudariti velja , da sta prva dva jezikovna vira predstavnika govorjenega jezika , slednji pa sodi v skupino jezikovnih virov pisanega jezika .
Naš cilj je razpoznavanje govorjenega jezika , zato sta iz tega stališča pomembnejša korpusa BNSI-Speech in BNSI-Text .
Po drugi strani je uspešnost statističnega modeliranja odvisna od velikosti učnega korpusa , zato se kot pomemben vir znanja izkaže tudi korpus Večer .
Slovar razpoznavalnika smo sestavili tako , da je vseboval 20k in 60k najpogostejših besed v korpusih govorjenega jezika : BNSI-Speech in BNSI-Text .
Akustična na segmentacija .
Naloga akustične segmentacije je iz vhodnega zvočnega signala izrezati akustično homogene dele , ki so primerni za razpoznavanje govora .
Nekateri najpogostejši kriteriji so : zvok / tišina , govor / glasba / šum , spol govorca , združevanje govorcev v skupine , …
Osnovno zasnovo sistema UMB BN za razpoznavanje govora smo zaenkrat pripravili za vključitev segmentacije na osnovi prvih treh kriterijev ( Žgank , 2006 ) .
V prvem koraku segmentacije tako izločimo iz zvočnega signala dele , ki vsebujejo tišino .
Sledi določitev akustičnega ozadja govornega signala , ki je posebej namenjeno identifikaciji govora z glasbo v ozadju .
Ker količina govornega materiala , ki smo jo trenutno uporabili za učenje akustičnih modelov , ne omogoča kvalitetnega modeliranja ob uporabi drugih dveh kriterijev , smo za vrednotenje razpoznavalnika govora ( tabela 4 ) uporabili samo klasifikacijo zvok / tišina .
Modul za segmentacijo smo zasnovali na osnovi Gaussovih modelov ( GMM ) .
Glede na razpoložljivost zvočnega materiala za posamezno kategorijo , ter glede na dosežene rezultate segmentacije , smo uporabili različno kompleksnost modelov GMM – najpreprostejši model je vseboval 4 Gaussove porazdelitve verjetnosti , najkompleksnejši pa 512.
V sistemu UMB BN smo zasnovali akustične modele na osnovi tri stanjskih levo-desnih prikritih modelov Markova s kombinacijami zveznih Gaussovih porazdelitev verjetnosti .
Akustične modele smo zasnovali na grafemski osnovni enoti ( Žgank in Kačič , 2005 / 2 ) .
V osnovnem naboru je bilo 27 akustičnih modelov .
Z uporabo grafemov smo se izognili dodatni napaki , ki bi jo v sistem vnesla grafemsko-fonemska pretvorba .
Za učenje prikritih modelov Markova smo uporabili prosto dostopno orodje HTK ( HTK , 2006 ) .
Z dobljenimi akustičnimi modeli smo izvedli postopek prisilne poravnave in izločili 0,63% neustreznih transkripcij .
Ker se posledično drastično poviša število prostih parametrov akustičnih modelov , ki jih je potrebno oceniti , smo uporabili postopek vezave stanj z odločitvenim drevesom ( Young et al. , 1994 ) .
Inicializacijo odločitvenih dreves smo izvedli s podatkovno tvorjenimi grafemskimi razredi ( Žgank et al. , 2005 / 3 ) .
Po končanem postopku učenja smo akustične modele pretvorili v format , ki ga podpira razpoznavalnik govora razvit na Univerzi v Mariboru .
Tabela 2 prikazuje velikosti jezikovnih modelov , učenih na različno velikih učnih besedilnih zbirkah .
Jezikovni model LM1 je učen le na korpusu BNSI-Speech , LM2 na korpusih BNSI-Speech in BNSI-Text ter LM3 na vseh treh korpusih : BNSI-Speech , BNSI-Text in korpusu Večer .
V jezikovnem modelu LM3 imajo vsi trije korpusi enak vpliv , ki smo ga v nadaljevanju želeli uravnotežiti glede na značilnosti BN korpusa .
Zgradili smo tri komponente jezikovnega modela : prvo komponento na korpusu BNSI-Speech , drugo na korpusu BNSI-Text in tretjo na korpusu Večer .
Optimalno razmerje med komponentami smo poiskali tako , da smo v iterativnem postopku iskali optimalne interpolacijske koeficiente ( ki dajo najmanjšo perpleksnost interpoliranega modela ) .
Za razpoznavalnik govora smo uporabili statistični pristop zasnovan na Bayesovem odločitvenem pravilu , ki vsebuje naslednje komponente : akustični analizator , iskalni algoritem , stohastična modela ( akustični in jezikovni model ) .
Akustični model zajema trenutno akustično in časovno karakteristiko govorca in skupaj z jezikovnim modelom podaja osnovna jezikovna vira za iskalni algoritem .
Iskalni algoritem določi besedni niz neznane dolžine na osnovi največje aposteriori verjetnosti .
Za zmanjšanje iskalnega prostora smo uporabili drevesno obliko slovarja , katerega značilnost so skupna vozlišča za enake začetne foneme besed .
Zaradi vzporedne obdelave vseh možnih hipotez iskalnega prostora , smo v vsakem časovnem okviru izključili tiste hipoteze , katerih verjetnost je bila za določen prag slabša od trenutno najboljše hipoteze .
Tako imenovan pogled naprej jezikovnega modela v vsako skupno vozlišče drevesnega slovarja postavi najboljšo verjetnost za vse možne besede , ki lahko nastanejo iz danega vozlišča .
V prvem primeru smo aktivne modele sortirali po najboljšem rezultatu in pri tem ohranili samo N najboljših .
V drugem primeru smo nadaljevali samo N najboljših delnih hipotez , ki so se v trenutnem času končale v zadnjem stanju in zadnjem vozlišču dreves .
Rezultati razpoznavanja govora .
Rezultate razpoznavanja govora bomo podali za velikost slovarja 20k najpogostejših besed v tekstovnih korpusih in bigramski jezikovni model LM4 .
Beležili smo napako razpoznavanja besed ( NRB ) , hitrost razpoznavanja ( večkratnik realnega časa , CPU : P4 , 2,4 GHz ) in velikost iskalnega prostora , izraženega s povprečnim številom aktivnih modelov .
Povprečno število aktivnih modelov smo izračunali tako , da smo najprej v vsakem časovnem okviru za vsak testni stavek pred procesom omejevanja beležili število aktivnih modelov .
Z velikostjo slovarja 20k besed smo dosegli napako razpoznavanja 40,5 % ( tabela 4 ) .
Podrobnejša analiza je pokazala , da imajo največji vpliv na napako razpoznavanja manjkajoče besede , ki jih ni v slovarju .
20% vseh zamenjanih besed predstavljajo besede , ki so izpeljane iz skupne leme in so si fonetično zelo podobne .
Analiza rezultatov razpoznavanja nakazuje na uporabo tehnik razpoznavanja primernih za pregibne jezike ( npr. : uporaba podbesednih enot razpoznavanja ) .
Z omejevanjem iskalnega prostora smo vplivali na hitrost razpoznavanja in ga optimirali glede na najboljši rezultat razpoznavanja .
V članku smo predstavili zasnovo in osnovno strukturo prvega slovenskega sistema za razpoznavanje tekočega govora v domeni Broadcast News .
Dosegli smo vzpodbudne rezultate razpoznavanja govora .
Korpus Število stavkov Število besed .
Akustična segmentacija Razpoznavalnik govora Akustični modeli Slovar Jezikovni model Televizijska oddaja Akustično homogeni intervali Besedilo .
Velikosti jezikovnih modelov , pri slovarjih 20k in 60k besed .
Perpleksnosti jezikovnih modelov .
Rezultat razpoznavanja z besednimi modeli pri velikosti slovarja 20k enot .
Opišemo postopek in rezultate vrednotenja učinkovitosti dveh sistemov čarovnik iz Oza z ogrodjem PARADISE .
Izpeljemo funkciji učinkovitosti obeh sistemov čarovnik iz Oza , ki nas vodita do spoznanja , da je predstavitev znanja oz. zgradba podatkovne zbirke sistema za dialog izjemnega pomena in da so parametri podatkovne zbirke pri vrednotenju sistemov za podajanje informacij nepogrešljivi .
Z namenom omogočiti primerjavo različnih govornih vmesnikov , kjer nas zanima , v kolikšni meri posamezni dejavniki vplivajo na učinkovitost in kako strategija vodenja dialoga vpliva na zadovoljstvo uporabnikov , je bilo leta 1997 ( Walker et al. , 1997a ) kot potencialna splošna metodologija vrednotenja učinkovitosti govornih vmesnikov predlagano ogrodje PARADISE ( PARAdigm for DIalogue System Evaluation ) .
Model učinkovitosti sistema , ki ga zajema ogrodje PARADISE , trdi , da lahko funkcijo učinkovitosti sistema določimo z multiplo linearno regresijo ( Seber , 1977 ) z zadovoljstvom uporabnikov kot odvisno spremenljivko ter parametri uspešnosti naloge in cen dialoga kot neodvisnimi spremenljivkami : Učinkovitost = fi ⁄ N ( - ) ¡ nX i = 1 wi ⁄ N ( ci ) : Pri tem je fi utež Kappa koeficienta - , wi so uteži cen dialoga ci , N pa je funkcija normalizacije ( Hajdinjak in Mihelič , 2006c ) .
Funkcija učinkovitosti tedaj omogoča napovedovanje zadovoljstva uporabnikov , vrednotenje učinkovitosti in izboljševanje sistema , primerjavo sistemov z istimi ali različnimi domenami , samodejno iskanje problematičnih dialogov in spreminjanje strategije vodenja dialoga že med interakcijo .
Ogrodje PARADISE smo uporabili pri vrednotenju učinkovitosti dveh nedograjenih sistemov za podajanje informacij o vremenu in vremenski napovedi ( Žibert et al. , 2004 ) , s katerima smo izvajali eksperiment čarovnik iz Oza ( Hajdinjak in Mihelič , 2004 ) .
Eksperiment čarovnik iz Oza je trenutno najboljša alternativa za zbiranje podatkov , ki izražajo jezik komunikacije človek – stroj .
V teh eksperimentih so uporabniki prepričani , da se pogovarjajo s strojem – računalnikom , kar pa ni res .
V skladu z našo trditvijo ( Hajdinjak in Mihelič , 2006a ) , da je treba vplive samodejnega razpoznavanja govora iz sistema odstraniti , če želimo vrednotiti učinkovitost kakšnega drugega modula ( v našem primeru modula za vodenje dialoga ) , je človek čarovnik v prvem sistemu simuliral razumevanje govora ( razpoznavanje govora in razumevanje naravnega jezika ) ter vodenje dialoga , v drugem sistemu pa le razumevanje govora .
Oba sistema sta se poleg načina vodenja dialoga razlikovala še v vrsti podatkovne zbirke – v prvem eksperimentu je sistem dostopal do relacijske zbirke vremenskih podatkov , v drugem pa do posebne sodelujoče podatkovne zbirke ( Hajdinjak , 2006b ) .
Ko bomo govorili o strukturi dialoga , bomo uporabljali pojma konverzacijskih iger in konverzacijskih potez .
Ker je v naših eksperimentih razumevanje govora simuliral čarovnik , koeficient - , izračunan iz podatkov prvega eksperimenta , kaže uspešnost oz. spretnost čarovnika in fleksibilnost grafičnega vmesnika , ki je čarovniku pomagal voditi dialog , pri reševanju navideznih nesporazumov med uporabnikom in čarovnikom .
V drugem eksperimentu , ko je vodenje dialoga prevzel posebej za to nalogo zgrajen modul ( Hajdinjak , 2006b ) , koeficient - kaže uspešnost tega modula za vodenje dialoga pri reševanju navideznih nesporazumov med uporabnikom in čarovnikom , ki so nastali ali zaradi tipkarskih napak čarovnika ali zaradi neavtoriziranih posegov čarovnika v pomenske predstavitve uporabnikovih izjav .
Za parametre učinkovitosti dialoga smo izbrali : † Povprečni čas dialoga ( MET ) meri povprečni čas trajanja informacijskih konverzacijskih iger , katerih namen je pridobiti določeno informacijo in jih uporabnik vpelje v času svoje interakcije s sistemom .
† Povprečno število potez ( MUM ) meri povprečno število konverzacijskih potez , ki jih uporabnik potrebuje za izvedbo ali prekinitev vpeljanih informacijskih iger .
- Število uporabnikovih iniciativ ( NUI ) šteje začetne konverzacijske poteze , s katerimi uporabnik vpelje informacijske igre .
- Povprečno število besed ( MWT ) meri povprečno število besed , vsebovanih v konverzacijskih potezah uporabnika .
V prvem eksperimentu je bil ta čas povezan z izbiro odgovorov na grafičnem vmesniku , v drugem pa s tipkanjem pomenskih predstavitev uporabnikovih potez .
Ta parameter izraža tako število potez , ki sledijo , ko sistem v vnaprej določenem času ne zazna govora , kakor tudi nepripravljenost uporabnika , da bi sistem odzdravil .
- Število neprimernih iniciativ ( NUR ) in delež neprimernih iniciativ ( URR ) merita število oz. delež začetnih potez uporabnika , katerih vsebina ne ustreza domeni sistema .
- Število neprimernih odzivov ( NIR ) in delež neprimernih odzivov ( IRR ) merita število oz. delež kontekstno neprimernih potez sistema .
- Število napak ( Error ) meri napake sistema , kamor štejemo prekinitve telefonske povezave , neustrezno oblikovane povedi in nasprotujoče si odgovore .
- Število relevantnih informacij ( NRD ) in delež relevantnih informacij ( RDR ) merita število oz. delež potez sistema , ki uporabnika usmerjajo k izbiri relevantnih , dosegljivih podatkov .
- Število nepodanih informacij ( NND ) in delež nepodanih informacij ( NDR ) merita število oz. delež potez , s katerimi sistem uporabniku sporoča , da nima zahtevanega podatka in ga pri tem ne usmerja k izbiri relevantnih , dosegljivih podatkov .
- Število prekinjenih zahtev ( NAR ) in delež prekinjenih zahtev ( ARR ) merita število oz. delež informacijskih iger , ki jih uporabnik prekine še preden se končajo .
Zavedati se namreč moramo , da neodvisne spremenljivke funkcije učinkovitosti , ki niso samodejno določljive , skrčijo uporabnost ogrodja PARADISE – samodejno iskanje problematičnih dialogov in spreminjanje strategije vodenja dialoga med interakcijo tedaj nista več mogoča .
Šele modul za vodenje dialoga ( Hajdinjak , 2006b ) , vključen v drugi sistem čarovnik iz Oza , ki je potek dialoga zelo dobro strukturiral , je omogočil samodejno določljivost velike večine izbranih parametrov .
Zanimivo je , da se število podanih informacij ( NGD ) in delež podanih informacij ( GDR ) , število relevantnih informacij ( NRD ) in delež relevantnih informacij ( RDR ) ter število nepodanih informacij ( NND ) in delež nepodanih informacij ( NDR ) , ki jih imenujemo parametri podatkovne zbirke , v literaturi o vrednotenju učinkovitosti sistemov za dialog ne pojavljajo .
Razlog je verjetno ta , da imajo razvijalci sistemov za dialog le redko na razpolago podatkovno zbirko , katere struktura bi bila tako zelo časovno odvisna in skopa , kot je naša .
Walker , Litman , Kamm in Abella ( Walker et al. , 1998 ) razmišljajo , da bi velikost podatkovne zbirke lahko značilno vplivala na učinkovitost sistema za dialog .
Srednje vrednosti izbranih regresijskih parametrov v obeh eksperimentih čarovnik iz Oza so podane v tabeli 1.
Vrstice s parametri , katerih razlika srednjih vrednosti v obeh eksperimentih je statistično značilna ( Studentov primerjalni test ; p < 0:05 ) , so potemnjene in navedena je pripadajoča p vrednost .
V obeh eksperimentih čarovnik iz Oza so uporabniki ocenili svoje zadovoljstvo tako , da so podali stopnjo strinjanja z izjavami o obnašanju oz. učinkovitosti sistema ( Hajdinjak in Mihelič , 2006c ) .
Splošno zadovoljstvo uporabnika ( US ) smo dobili kot vsoto ocen , zbranih z vprašalnikom , ki ga predlaga ogrodje PARADISE ( Hajdinjak in Mihelič , 2006c ) .
Srednja vrednost US za prvi eksperiment je enaka 34:08 ( s standardnim odklonom 5:07 ) , za drugega pa 31:96 ( s standardnim odklonom 4:99 ) .
Obe srednji vrednosti zadovoljstva uporabnikov se statistično značilno razlikujeta ( p < 0:015 ) .
Glej tabelo 1.
Ker smo želeli poiskati razlike med obema različicama sistemov čarovnik iz Oza , za odvisno spremenljivko MLR modela učinkovitosti nismo vzeli US , ampak le seštevek ocen , dodeljenih vprašanjem , ki se nanašajo na razlike med sistemoma .
Ali ste brez težav prišli do odgovorov na vaša vprašanja ?
Ali se je sistem na vaše izjave odzival hitro ( brez pojasnilnih vprašanj ) ?
Vsekakor je tesno povezano z načinom vodenja dialoga in predstavitvijo znanja , ki je predpogoj sodelujočega načina odgovarjanja .
Vsoto ocen , dodeljenih naštetim vprašanjem , smo imenovali zadovoljstvo uporabnika z vodenjem dialoga in ravnijo sodelujočega odgovarjanja ( DM ) .
Tiste neodvisne spremenljivke , ki so bile z odvisno spremenljivko DM v zelo nizki korelaciji ( p > 0:05 ) , smo iz modela odstranili ( Hajdinjak in Mihelič , 2006c ) .
Z uporabo Studentovega testa z n ¡ 2 prostostnimi stopnjami , kjer je n velikost učne množice , tj. n = 73 v prvem eksperimentu in n = 68 v drugem eksperimentu , smo tako prišli do ugotovitve , da je v prvem eksperimentu z neodvisno spremenljivko DM značilno koreliralo 10 parametrov ( in sicer MUM , Comp , NUI , NIR , IRR , NGD , GDR , NRD , NND in NDR ) , v drugem pa 8 ( in sicer - , MET , MUM , IRR , CMR , GDR , RDR in ARR ) .
Iz teh množic smo odstranili še parametre , ki bi lahko povzročali multikolinearnost modelov .
Po postopku vzvratne eliminacije ( Seber , 1977 ) za delno F statistiko Fout = 4 pri p-vrednosti približno enaki 0:05 na celotni učni množici , pridobljeni v prvem eksperimentu čarovnik iz Oza , z DM kot odvisno spremenljivko , - povprečno število potez ( MUM ) , - izpolnitev naloge ( Comp ) , - število neprimernih odzivov ( NIR ) , - število relevantnih informacij ( NRD ) in - število nepodanih informacij ( NND ) pa kot neodvisnimi spremenljivkami , smo identificirali in odstranili slabih 10% vzorcev osamelcev ( Hajdinjak , 2006b ) .
Tabela 2 podaja dobljene delne F statistike , pripadajoče koeficiente determinacije R2 ( Johnson in Wichern , 2002 ) ter parametre , ki jih v posameznih korakih iz modela učinkovitosti prvega sistema čarovnik iz Oza odstranimo .
Funkcija učinkovitosti za prvi sistem čarovnik iz Oza in odvisno spremenljivko DM1 , ki se nanaša na podatke , pridobljene v prvem eksperimentu čarovnik iz Oza , je zato taka : /.../
Najizrazitejši parameter , ki negativno vpliva na DM1 , je parameter podatkovne zbirke NND .
Po postopku vzvratne eliminacije za Fout = 4 pri p-vrednosti približno enaki 0:05 na celotni učni množici , pridobljeni v drugem eksperimentu čarovnik iz Oza , z DM kot odvisno spremenljivko , - Kappa koeficient ( - ) , - povprečni čas dialoga ( MET ) , - delež preverjanj ( CMR ) , - delež podanih informacij ( GDR ) in - delež prekinjenih zahtev ( ARR ) pa kot neodvisnimi spremenljivkami , smo identificirali in odstranili dobrih 7% vzorcev osamelcev .
Tabela 3 podaja dobljene delne F statistike , pripadajoče koeficiente determinacije R2 ter parametre , ki jih v posameznih korakih iz modela učinkovitosti drugega sistema čarovnik iz Oza odstranimo .
Postopek vzvratne eliminacije ustavimo pred 3 : korakom , ko delna F statistika preseže vrednost 4.
Fi R2 odstranjen parameter poln model - 0:48 - 1. korak ( i = 1 ) 1:71 0:46 MET 2. korak ( i = 2 ) 2:84 0:44 ARR 3. korak ( i = 3 ) 12:59 0:32 - Tabela 3 : Tabela vzvratne eliminacije za drugi sistem čarovnik iz Oza in odvisno spremenljivko DM. Iz začetnega MLR modela z vzvratno eliminacijo odstranimo dva parametra , in sicer MET in ARR .
Funkcija učinkovitosti za drugi sistem čarovnik iz Oza in odvisno spremenljivko DM2 , ki se nanaša na podatke , pridobljene v drugem eksperimentu čarovnik iz Oza , je zato taka : /.../
Dobljena funkcija učinkovitosti pojasnjuje 44% variance , tj. R2 = 0:44 , in ima tri parametre – Kappa koeficient (-) in delež podanih informacij ( GDR ) pozitivno vplivata na DM2 , delež preverjanj ( CMR ) pa negativno vpliva na DM2 .
Parameter podatkovne zbirke GDR , ki ima zelo velik pozitivni vpliv na DM2 , sicer ni vsebovan v \ N ( DM1 ) , je pa visoko ( negativno ) koreliran s parametrom podatkovne zbirke NND , tj. najmočnejšim ( negativnim ) parametrom funkcije \ N ( DM1 ) ( Hajdinjak , 2006b ) .
Analiza obeh funkcij učinkovitosti za DM omogoča vrednotenje učinkovitosti modula za vodenje dialoga , povezanega s sodelujočo podatkovno zbirko : † Edini parameter , ki nastopa v funkciji učinkovitosti za DM2 in je statistično značilen tudi za DM1 ( p < 0:004 ) , je parameter podatkovne zbirke delež podanih informacij ( GDR ) .
V funkciji učinkovitosti za DM1 namesto GDR sicer nastopa parameter podatkovne zbirke število nepodanih informacij ( NND ) , ki je z njim visoko negativno koreliran in hkrati bolj značilen za DM1 ( p < 0:0005 ) .
Torej , parametri podatkovne zbirke predstavljajo edino podobnost med funkcijama učinkovitosti obeh sistemov čarovnik iz Oza .
Pridemo do spoznanja , da so parametri podatkovne zbirke nepogrešljivi pri vrednotenju učinkovitosti sistemov za dialog , še posebej pa pri vrednotenju učinkovitosti sistemov za podajanje informacij .
Medtem ko je parameter podatkovne zbirke število nepodanih informacij ( NND ) v prvem eksperimentu pomembno ( negativno ) vplival na zadovoljstvo uporabnikov , je njegov ( negativni ) vpliv v drugem eksperimentu izjemno splahnel .
Vemo že ( tabela 1 ) , da se je srednja vrednost parametra število relevantnih informacij ( NRD ) v drugem eksperimentu značilno povečala , srednja vrednost NND pa zato značilno zmanjšala .
Vse torej kaže na to , da zmanjšanje števila odzivov , s katerimi sistem uporabniku sporoča , da zahtevane informacije nima , hkrati pa mu ne ponudi nobenih dosegljivih , relevantnih informacij , negativno vpliva na zadovoljstvo uporabnika .
Razvijalci sistemov za dialog morajo zato težiti k zmanjšanju števila takih odzivov oz. povečanju stopnje sodelujočega odgovarjanja .
Sklepamo lahko tudi , da strategija usmerjanja uporabnika k izbiri dosegljivih , relevantnih podatkov , ki je implementirana v modulu za samodejno vodenje dialoga , na zadovoljstvo uporabnikov ne vpliva negativno .
Funkcija učinovitosti za DM1 vsebuje , poleg parametra Comp , še kvantitativni parameter število nepodanih informacij ( NND ) .
Funkcija učinkovitosti za DM2 pa vsebuje , poleg parametra - , še dva proporcionalna parametra , namreč delež preverjanj ( CMR ) in delež podanih informacij ( GDR ) .
V prvem eksperimentu je na zadovoljstvo uporabnikov DM1 močno ( pozitivno ) vplival Comp , - ni imel statistično značilnega vpliva .
V drugem eksperimentu je bilo ravno obratno – na zadovoljstvo uporabnikov DM2 je močno ( pozitivno ) vplival - , Comp pa ni imel statistično značilnega vpliva .
Ugotovitev , do katere so prišle Walker , Litman , Kamm in Abella ( Walker et al. , 1998 ) , da izpolnitev naloge ( Comp ) močneje vpliva na zadovoljstvo uporabnika kot Kappa koeficient ( - ) , torej ni vedno resnična .
Le parameter Comp , katerega vrednost mora posredovati uporabnik , za vrednotenje učinkovitosti sistemov za dialog zato ni dovolj .
Sistem za dialog lahko torej izboljšamo , če zmanjšamo delež potez , ki preverjajo točnost podatkov , pridobljenih na osnovi zgodovine dialoga , ki jih uporabnik v svoji izjavi ne poda ali jih sistem ne razume .
Vpliv parametra CMR v sistemih za dialog ni mogoče popolnoma odpraviti , zato ker je določeno število preverjanj nujno vsakič , ko imamo opravka s samodejnim razumevanjem govora .
Napake , ki se pojavljajo pri samodejnem razumevanju govora , sistem namreč prisilijo , da svoje razumevanje uporabnikovih izjav preveri vsakič , ko o njihovi pravilnosti ni popolnoma prepričan .
To bi povečalo srednjo vrednost parametra delež neprimernih odzivov ( IRR ) in tako zelo verjetno vodilo do večjega nezadovoljstva s sistemom .
Funkciji učinkovitosti obeh sistemov čarovnik iz Oza z zadovoljstvom uporabnika ( US ) kot odvisno spremenljivko sta se zelo razlikovali v natančnosti ( R2 = 0:58 proti R2 = 0:24 ) ( Hajdinjak , 2006b ) .
Ogrodje PARADISE smo uporabili pri vrednotenju učinkovitosti dveh nedograjenih sistemov za podajanje informacij o vremenu in vremenski napovedi , s katerima smo izvajali eksperiment čarovnik iz Oza .
Pri vrednotenju učinkovitosti sistemov za podajanje informacij smo predlagali še neuveljavljene parametre podatkovne zbirke , ki izražajo velikost in sestavo podatkovne zbirke .
V raziskave smo vključili kvantitativne in proporcionalne parametre podatkovne zbirke .
Ker smo želeli poiskati razlike med dvema sistemoma čarovnik iz Oza , ki sta se razlikovala le v načinu vodenja dialoga in predstavitvi znanja , smo mero zadovoljstva uporabnikov definirali kot vsoto ocen , ki se nanašajo na vpeljane spremembe .
Po vzvratni eliminaciji smo dobili funkciji učinkovitosti , ki ne vsebujeta nobenega skupnega parametra .
Prišli smo do spoznanja , da so parametri podatkovne zbirke edina podobnost med funkcijama učinkovitosti obeh sistemov čarovnik iz Oza in da ima predstavitev znanja v sistemih za podajanje informacij velik pomen .
Srednje vrednosti izbranih regresijskih parametrov v prvem ( WOZ1 ) in drugem ( WOZ2 ) eksperimentu čarovnik iz Oza .
Ogrodje PARADISE omogoča izpeljavo ocene učinkovitosti sistema kot uteženo linearno kombinacijo od domene odvisnih parametrov uspešnosti naloge in cen dialoga , zajema pa model učinkovitosti sistema , katerega osnovni cilj je maksimirati zadovoljstvo uporabnikov .
Osredotočimo se na nekatere pomanjkljivosti , težave in nerešena vprašanja ogrodja PARADISE – opišemo vpliv normalizacije na natančnost napovedovanja zadovoljstva uporabnikov , navedemo regresijske predpostavke in poudarimo pomembnost dobre izbire regresijskih parametrov .
Nakažemo tudi morebitne učinke razpoznavanja govora na rezultate vrednotenja in analiziramo vprašalnik , na podlagi katerega ogrodje PARADISE določa zadovoljstvo uporabnikov ( tj. odvisno spremenljivko funkcije učinkovitosti ) .
Razlogov je več : - Govor je naraven – govoriti se naučimo , še preden znamo brati in pisati .
- Govor je učinkovit – večina ljudi je sposobnih govoriti petkrat hitreje kot tipkati in verjetno celo desetkrat hitreje kot pisati .
Z razvojem sistemov za dialog se pojavljajo tudi potrebe po vrednotenju učinkovitosti in medsebojni primerjavi takih sistemov .
Težava , ki se pojavi , je ta , da vrednotenja učinkovitosti sistema za dialog ni mogoče omejiti na primerjave z referenčnimi odgovori oz. referenčnimi poteki dialogov ( Bates in Ayuso , 1991 ; Polifroni et al. , 1992 ; Price et al. , 1992 ) .
Naslednja težava je veliko število potencialnih metrik dialoga .
Sistem za dialog lahko npr. vrednotimo glede na njegovo sposobnost pomagati uporabnikom pri doseganju ciljev , glede na njegovo robustnost odkrivanja in premagovanja napak , ki se pojavljajo pri razpoznavanju oz. razumevanju govora , ali glede na skupno kakovost interakcije ( Polifroni et al. , 1992 ; Price et al. , 1992 ; Danieli in Gerbino , 1995 ) , ki jo omogoča .
Predlogi vrednotenja učinkovitosti sistemov za dialog , ki so se pojavili v zadnjih dveh desetletjih dvajsetega stoletja , se osredotočajo na razvoj različnih metrik dialoga .
Predlagani so bili številni objektivni parametri dialoga ( Price et al. , 1992 ; Danieli in Gerbino , 1995 ) kot npr. število izjav , čas dialoga , povprečni čas odziva uporabnika , povprečni čas odziva sistema , delež izjav , sestavljenih iz več kot ene besede , ter povprečna dolžina izjav , sestavljenih iz več kot ene besede , ki jih lahko določimo brez mnenja človeka , in parametri , ki temeljijo na mnenju človeka , namreč subjektivni parametri dialoga ( Shriberg et al. , 1992 ; Danieli in Gerbino , 1995 ) kot npr. delež izjav , s katerimi sistem popravlja napake , delež kontekstno primernih izjav sistema , hevristično vrednotenje stopnje sodelovanja sistema na podlagi Griceovih maksim ( Grice , 1975 ) , delež pravilnih in delno pravilnih odgovorov , delež primernih in neprimernih izjav , s katerimi sistem usmerja uporabnika , ter zadovoljstvo uporabnika ( Shriberg et al. , 1992 ) .
Z namenom omogočiti primerjavo sistemov z različnimi domenami , kjer je pomembno vedeti , v kolikšni meri posamezni parametri vplivajo na učinkovitost in kako strategija vodenja dialoga vpliva na zadovoljstvo uporabnikov , je bilo leta 1997 kot potencialna splošna metodologija vrednotenja učinkovitosti sistemov za dialog predlagano ogrodje PARADISE ( PARAdigm for DIalogue System Evaluation ) ( Walker et al. , 1997a ) .
Ko bomo govorili o strukturi dialoga , bomo uporabljali pojma konverzacijskih iger in konverzacijskih potez .
Avtorice ogrodja PARADISE ( Walker et al. , 1997a ) v ta namen uporabljajo vprašalnik , podan v tabeli 1.
Večino odgovorov podajo opisno kot skoraj nikoli , redko , včasih , pogosto in skoraj vedno , nekatere pa le z da , ne in mogoče .
Parameter , ki ocenjuje zadovoljstvo uporabnikov , dobijo kot vsoto vseh ocen in ga poimenujejo zadovoljstvo uporabnika ( US ) .
2.Ali vas je sistem razumel ?
3.Ali ste brez težav prišli do odgovorov na vaša vprašanja ?
5.Ali ste na vsakem koraku dialoga vedeli , kaj morate povedati ?
6.
Ogrodje PARADISE uporablja en sam parameter uspešnosti naloge , namreč Kappa koeficient ( Carletta , 1996 ) .
Če želimo sistem za dialog vrednotiti z ogrodjem PARADISE , moramo podatke zbrati v eksperimentu , v katerem bodo uporabniki ocenili svoje zadovoljstvo .
Model učinkovitosti sistema , ki ga zajema ogrodje PARADISE , trdi , da lahko funkcijo učinkovitosti sistema določimo z uporabo multiple linearne regresije ( MLR ) z zadovoljstvom uporabnikov kot neodvisno spremenljivko ter parametri uspešnosti naloge , parametri učinkovitosti dialoga in parametri kakovosti dialoga kot neodvisnimi spremenljivkami : Učinkovitost = fiN ( - ) ¡ nX i = 1 wiN ( ci ) Pri tem je fi utež edinega parametra uspešnosti naloge , namreč Kappa koeficienta - , wi so uteži cen dialoga ci , N pa je funkcija normalizacije : N ( x ) = x ¡ x0 x0 Z x0 in x0 smo označili srednjo vrednost in standardni odklon spremenljivke x0 v učni množici , pridobljeni v ustreznem eksperimentu .
Srednja vrednost s funkcijo normalizacije N preslikanih parametrov učne množice je 0 , varianca in standardni odklon pa 1.
Rezultat multiple linearne regresije na učni množici parametrov , ki praviloma tvorijo predoločen sistem , je torej množica uteži , ki pomenijo sorazmeren prispevek teh parametrov k učinkovitosti sistema .
Funkcija učinkovitosti , ki jo uvaja ogrodje PARADISE , zato omogoča : - napovedovanje zadovoljstva uporabnikov , - vrednotenje učinkovitosti sistema za dialog , tj. ugotavljanje vpliva posameznih parametrov na zadovoljstvo uporabnikov , - izboljšanje sistema za dialog , tj. odpravljanje ali zmanjšanje vpliva parametrov , ki imajo najbolj negativne uteži in povečanje vpliva parametrov , ki imajo najbolj pozitivne uteži , - primerjavo različnih sistemov za dialog , tj. primerjavo vplivov posameznih parametrov v pripadajočih funkcijah učinkovitosti , iz katerih lahko razberemo razlike med sistemi , - samodejno iskanje problematičnih dialogov , tj. iskanje dialogov , katerih napovedano zadovoljstvo uporabnikov negativno izstopa , ter - spreminjanje strategije vodenja dialoga med samo interakcijo , tj. spreminjanje načina sporazumevanja na osnovi napovedanega zadovoljstva uporabnika v že izvedenem delu interakcije .
V zadnjih letih je bilo opravljenih veliko študij učinkovitosti sistemov za dialog , ki so uporabljale ogrodje PARADISE ( Walker et al. , 1998 ; Kamm et al. , 1998 ; Walker , 2000 ; Litman in Shimei , 2002 ; Larsen , 2003 ; Hajdinjak , 2006b ) .
Osredotočili se bomo na nekatere pomanjkljivosti , težave in nerešena vprašanja ogrodja PARADISE ( Hajdinjak in Mihelič , 2006a ) .
Večina jih izvira ravno iz uporabe multiple linearne regresije .
Za dano vrednost zadovoljstva uporabnika US torej velja N ( US ) = \ N ( US ) + - ; kjer je N ( US ) normalizirana pridobljena vrednost zadovoljstva uporabnika , \ N ( US ) napovedana normalizirana vrednost zadovoljstva uporabnika , † pa napaka napovedi .
Ker je srednja vrednost napake † enaka 0 , sta srednji vrednosti odvisne spremenljivke in njene napovedi enaki .
Nenormalizirano zadovoljstvo uporabnika US lahko tedaj ocenimo kot US = \ N ( US ) US0 + US0 +† US0 = dUS +† US0 ; kjer sta US0 in US0 srednja vrednost in standardni odklon v eksperimentu pridobljenih vrednosti zadovoljstva uporabnikov .
Če koeficient determinacije R2 pomnožimo s faktorjem 100 , rezultat imenujemo odstotek pojasnjene variance .
Izkaže se , da je v MLR modelu z normaliziranimi spremenljivkami koeficient determinacije R2 enak varianci napovedanih vrednosti : R2 = Pm i = 1 \ N ( USi ) 2 m = var ( \ N ( US ) ) Pri tem smo z USi označili i-to komponento vektorja US pridobljenih vrednosti zadovoljstva uporabnikov , z \ N ( USi ) pa i-to komponento vektorja \ N ( US ) napovedanih normaliziranih vrednosti zadovoljstva uporabnikov .
Indikator linearnosti med odvisno spremenljivko in neodvisnimi spremenljivkami modela je velik koeficient determinacije R2 .
2.NEODVISNOST SPREMENLJIVK : Noben par neodvisnih spremenljivk X1 ; : : : ; Xn ne sme biti preveč koreliran , tj. korelacijski koeficienti corr ( Xi ; Xj ) morajo biti po absolutni vrednosti manjši od 0:7.
Zaradi težnje k čim večji natančnosti modela je smiselno odstraniti tiste spremenljivke , ki so z odvisno spremenljivko v nižji korelaciji .
NEPOŠEVNOST NAPAK : Srednja vrednost napake † je enaka 0.
HOMOSKEDASTIčNOST NAPAK : Varianca napake mora biti po celotni učni množici enaka .
V nasprotnem primeru je korelacija med odvisno spremenljivko in parametri modela lahko zavajajoče povprečje vzorcev višje in nižje korelacije .
Odstranitev osamelcev iz učne množice MLR modela je eden od običajnih regresijskih postopkov .
To se zdi smiselno predvsem zato , ker koeficient determinacije R2 s številom parametrov narašča .
- Pokazati se da , da lahko neodvisne spremenljivke , ki so z odvisno spremenljivko v zelo nizki korelaciji ( po absolutni vrednosti pod 0.1 ) , povečajo srednjo kvadratno napako .
Za preizkus hipoteze o nekoreliranosti neodvisne spremenljivke Xi z odvisno spremenljivko X lahko uporabimo testno statistiko , ki temelji na Studentovi porazdelitvi .
Hone in Graham ( Hone in Graham , 2000 ) sta opozorila na dejstvo , da vprašalnik ( Tabela 1 ) , s katerim avtorice ogrodja PARADISE merijo zadovoljstvo uporabnikov , ne temelji niti na teoriji niti na ustreznih empiričnih raziskavah in da je seštevanje ocen , ki naj bi merile popolnoma različne količine , sporno .
Ker za nobeno od obstoječih tehnik merjenja zadovoljstva uporabnikov sistemov za dialog ni dokazano , da izpolnjuje pogoje za veljaven psihometrični instrument , je treba vse sklepe , ki zajemajo zadovoljstvo uporabnikov , obravnavati zelo previdno .
Vplivi razpoznavanja govora na rezultate vrednotenja .
To je , kakovost razpoznavanja govora ključno vpliva na zadovoljstvo uporabnikov – ob povečani učinkovitosti razpoznavanja govora se poveča tudi zadovoljstvo uporabnikov .
Na osnovi rezultatov , ki jih podaja literatura , smo prišli do sklepa , da bo vrednotenje učinkovitosti posameznih modulov zelo verjetno zanesljivejše in natančnejše , če odstranimo vpliv razpoznavanja govora , torej simuliramo tako rekoč popolno razpoznavanje .
To lahko naredimo tako , da za pridobivanje regresijskih podatkov uporabimo eksperiment čarovnik iz Oza ( Hajdinjak in Mihelič , 2004 ) , v katerem vlogo razpoznavalnika govora ali celo vlogo modulov za razumevanje govora prevzame človek .
V skladu z našimi sklepi so tudi ugotovitve , do katerih so prišle Walker , Boland in Kamm ( Walker et al. , 1999 ) .
Slovenska govorna in tekstovna baza parlamentarnih razprav za avtomatsko razpoznavanje govora .
V govornem korpusu SloParl se tako nahaja skupno 100 ur govornega materiala .
Drugi del baze SloParl tvori tekstovni korpus , ki vsebuje obdelane magnetograme parlamentarnih razprav iz obdobja 1996 - 2005.
Primerjava z obstoječimi slovenskimi jezikovnimi viri je pokazala , da baza SloParl uspešno pokriva nove vidike na področju modeliranja slovenskega govora .
Področje avtomatskega razpoznavanja govora je neločljivo povezano z izdelavo jezikovnih virov , ki so potrebni za izdelavo modelov vključenih v razpoznavalnik govora .
Tekstovni korpus : se uporablja za izdelavo jezikovnih modelov pri razpoznavanju tekočega govora .
Fonetični slovar : služi za povezavo med obema zgornjima jezikovnima viroma .
Avtomatsko razpoznavanje govora dosega najboljše rezultate takrat , kadar so jezikovni viri , ki jih uporabimo za učenje modelov , kar najbolj podobni govornemu materialu s katerim se bo razpoznavalnik govora dejansko srečal .
Posledica te zahteve je , da je velikokrat potrebno za novo področje uporabe razpoznavalnika govora pripraviti nove jezikovne vire .
Postopek izdelava jezikovnih virov za avtomatsko razpoznavanje govora je običajno zelo drag in dolgotrajen , saj je pri izdelavi kvalitetne govorne baze potrebno veliko ročnega dela .
To se odraža v številu jezikovnih virov , ki so dostopni za posamezni jezik .
V zadnjem obdobju lahko opazujemo razvoj razpoznavalnikov tekočega govora tudi za slovanske jezike ( Byrne et al. , 1999 ; Nouza et al. , 2004 ; Žgank et al. , 2001 ) , kamor sodi tudi slovenščina .
Na področju razpoznavanja tekočega slovenskega govora je bila prva dostopna govorna baza SNABI ( Dreo , 1995 ) .
Njena slabost je , da je omejena na posamezne domene .
Razvoj slovenskega razpoznavalnika govora za neomejeno domeno omogoča govorna in tekstovna baza BNSI Broad-cast News ( Žgank et al. , 2004 ) in govorna baza SiBN Broadcast News ( Žibert in Mihelič , 2004 ) .
Predstavljene težave in omejitve so bile vzpodbuda za razvoj novega slovenskega jezikovnega vira , baze SloParl .
Predstavljeni jezikovni vir vsebuje parlamentarne razprave iz Državnega zbora Republike Slovenije in je sestavljen iz 1Delo je bilo delno financirano s strani Agencije za raziskovalno dejavnost Republike Slovenije po pogodbi št. P2-0069 .
govorne baze s transkripcijami in iz tekstovnega korpusa .
Osnovno vodilo pri izdelavi baze SloParl je bilo v kratkem času ter z minimalnim ročnim delom zagotoviti nov slovenski jezikovni vir za razpoznavanje tekočega govora .
V primeru govorne baze SloParl smo tako namesto namenskih ročno tvorjenih transkripcij , ki natanko pokrivajo vse vidike govornega signala ( govor , mašila , zvoke iz ozadja , šum , lastnosti govorca , ...
Dodatna motivacija za razvoj baze SloParl je bilo dejstvo , da se baze parlamentarnih razprav ( Gollan et al. , 2005 ; Biatov in Köhler , 2002 ) v zadnjem času pogosto uporabljajo za razvoj najsodobnejših razpoznavalnikov tekočega govora , kot so tisti vključeni v prevajalnike govora v govor ali v multimodalne aplikacije za zajem informacij .
V nadaljevanju članka bomo v drugem poglavju opisali postopek priprave baze SloParl ter na kakšen način je bil zajet material .
Zaključek bomo podali v petem poglavju .
Zasedanja Državnega zbora Republike Slovenije lahko razdelimo na dva dela .
Teme sej so običajno različne , pri tem pa lahko pokrivajo zelo širok nabor vsebin .
Državni zbor sestavlja 90 poslank in poslancev , ki so izvoljeni za obdobje štirih let .
Vsaka seja državnega zbora je hkrati snemana na dva načina .
Analogni zvočni signal smo zajemali neposredno na osebni računalnik v katerega je bila vgrajena zvočna kartica visoke ločljivosti SoundBlaster Audigy .
Med zajemanjem govornega signala so se občasno pojavile težave z nastavitvijo glasnosti , saj imajo različni govorci različen stil govora .
Akustično okolje sej državnega zbora je s stališča avtomatskega razpoznavalnika govora zelo kompleksno , saj se pogosto pojavljata šum ter govor v ozadju .
V govorni del baze SloParl smo izbrali posnetke iz obdobja 2000 - 2005.
Drugi del baze SloParl sestavlja tekstovni korpus .
Magnetogrami parlamentarnih razprav so prosto dostopni na domači strani Državnega zbora RS za obdobje od leta 1996 naprej .
Pripravljeni tekstovni korpus bomo uporabili predvsem za učenje jezikovnih modelov avtomatskega razpoznavalnika tekočega govora .
Govorni korpus slovenske baze SloParl vsebuje posnetke 100 ur govornega materiala .
Celotno govorno bazo SloParl smo razdelili na tri nabore : učnega , razvojnega in testnega .
V razvojnem naboru ( redna seja državnega zbora iz junija 2001 ) , ki je namenjen nastavljanju parametrov razpoznavalnika tekočega govora , se nahajajo 4 ure posnetkov .
Preostale 4 ure govornega materiala ( redna seja iz februarja 2002 ) smo dodelili v testni nabor , ki je namenjen vrednotenju razpoznavalnika govora .
Običajno vsebuje vsaka seja državnega zbora različne prekinitve .
To dejstvo olajša razvoj razpoznavalnika govora , saj je tako lažje adaptirati slovar razpoznavalnika , ter s tem zmanjšati delež besed izven slovarja .
Redne seje državnega zbora , vključene v učni set baze SloParl so v povprečju za približno 12% daljše kot izredne seje .
Osnovno vodilo , ki smo mu sledili pri izdelavi transkripcij za bazo SloParl , je bilo čimbolj zmanjšati količino potrebnega ročnega dela .
Le-ti v veliki meri vsebujejo prepis govora iz razprav .
Ime govorca , datum , številko in tip seje smo obdržali v glavi transkripcije kot meta informacijo , medtem ko smo ostanek takšnih informacij izločili iz transkripcij .
Učni nabor govornega korpusa SloParl smo razdelili v dva enako velika dela .
Vsak je velik 46 ur .
V prvem delu smo transkripcije pustili v takšni neobdelani obliki .
Tako je potrebno oba nabor ročno transkribirati .
Da bi pokazali obseg in kompleksnost govornega korpusa slovenske baze SloParl smo opravili analizo transkripcij .
Transkripcije 100 ur govornega materiala vsebujejo skupaj 655k besed , kjer je 37k besed različnih .
Ker so politiki pogosto gostje v dnevnoinformativnih oddajah , smo primerjali oba nabora govorcev .
V obeh se pojavlja 89 govorcev , kar predstavlja 34,9% govorcev v bazi SloParl .
Prekrivanje je bilo 46,3% .
Glede na relativno nizek nivo prekrivanja slovarjev je možno sklepati , da bo bazo SloParl možno učinkovito uporabiti kot dopolnilo k bazi BNSI Broadcast News .
Drugi – tekstovni – del baze SloParl je namenjen učenju jezikovnih modelov razpoznavalnika tekočega govora .
Kvaliteta jezikovnih modelov , ki jih uporabimo v razpoznavalniku tekočega govora za pregibne jezike je še posebej pomembna , saj ocena jezikovnega modela bistveno vpliva na doseženi rezultat .
V tekstovni korpus za izdelavo jezikovnih modelov smo vključili vse redne in izredne seje iz obdobja 1996 - 2005.
Tekst razprav dostopen na domači strani državnega zbora uporablja kodno tabelo UTF-8 , ki smo jo zaradi združljivosti z ostalimi slovenskimi jezikovnimi viri spremenili v kodno tabelo ISO 8859-2.
Analiza , katere izmed teh informacij je smiselno ohraniti v tekstovnem korpusu za učenje jezikovnih modelov , je pokazala na sledeče parametre : ime govorca , datum , številka seje in tip seje .
Te parametre smo ohranili v tekstovnem korpusu baze SloParl kot dodatno informacijo .
Pričakujemo lahko , da bomo te informacije koristno uporabili med postopkom razvoja razpoznavalnika govora .
Vse ostale dodatne informacije , ki so se nahajale v magnetogramih in niso predstavljale izgovorjenega , smo izločili iz tekstovnega korpusa .
V nadaljevanju smo opravili analizo tekstovnega korpusa baze SloParl – rezultati analize so predstavljeni v tabeli 3.
V tekstovni korpus slovenske baze SloParl smo vključili 10 let parlamentarnih razprav .
V bazi SloParl tako najdemo spontan govora v primeru poslanskih replik .
Po drugi strani je bran govor prisoten v primerih predstavitve predlogov zakonov .
Primerjava s časopisnim korpusom Večer pokaže , da le-ta vsebuje 105M besed , od tega 660k različnih .
Osnovno vodilo pri izdelavi baze je bilo na stroškovno učinkovit način povečati število slovenskih jezikovnih virov , ki so namenjeni avtomatskemu razpoznavanju tekočega govora z velikim slovarjem besed .
Govorni korpus SloParl bomo uporabljali za nenadzorovano oziroma rahlo nadzorovano učenje akustičnih modelov .
Tekstovni korpus je v kombinaciji s časopisnimi korpusi namenjen učenju jezikovnih modelov .
Pri nadaljnjem delu se bomo osredotočili na razvoj razpoznavalnika govora za področje parlamentarnih razprav .
Statistika govornega korpus slovenske baze SloParl .
Parameter Vrednost Menjave govorca 3665 Število govorcev 255 Število besed 655k Število različnih besed 37k .
Načelo večjezičnosti ali večjezični korpus iz manjše množice dvojezičnih .
Prototipni model je zamišljen na 3 korpusih s tremi različnimi jeziki , ki vsebujejo kot eno od sestavin slovenščino .
Uresničitev zamisli kot zastavljeni projekt je na dosegu nekaj pretvorbnih programov in uporabi arhitekture terminološke zbirke kot lupine , ki daje zavetje večjezični korpusni zbirki ( 4-jezični ) , njen spletni prikaz pa se uresničuje z uporabo konkordančnega programa , ki omogoča iskanje poljubnih delcev segmentne celote ( za preverjanje prevodnih ustreznic ) znotraj 4 mogočih jezikov .
Glavni cilj projekta , ki že poteka , obsega : – pripravo več dvojezičnih korpusov , – pripravo omejenega štirijezičnega korpusa , nastalega iz 3 dvojezičnih .
Dosedanji produkti : – terminološka zbirka s temi poglavitnimi lastnostmi : urejena in strukturirana po vsebini in obliki ( metajezikovno označevanje ) , uporabna in splošno dostopna na spletnih straneh ; – korpusna zbirka – doslej dvojezična , v pripravi za objavo pa še več dvojezičnih zbirk , v katerih je eden od jezikov slovenščina , drugi pa ( za zdaj ) trije pomembni evropski in svetovni jeziki .
Faze , potrebne za uresničitev projekta : 1 ) Poravnave ( vzporeditve ) dvojezičnih besedil , od katerih je eden od jezikov slovenščina , omogočijo nastanek dvojezičnega pomnilnika , v katerega se po zamišljeni zgradbeni predlogi uvozijo rezultati dobljenih poravnav .
Deloma to zagotavlja sama segmentacija besedil v vsakem posameznem jeziku , ki je vključena v program poravnave ( alignment programme ) , vendar pa sredstva , na katera se opira sama poravnava , po jezikih niso enako razporejena .
Nastali segmenti niso vedno enako dolgi , kakor tudi ne velja vedno – čeprav je pri določeni vrsti strokovnih besedil zaželeno prevajanje z upoštevanjem enakega zaključka bistvenih besedilnih delov , kot so npr. stavki , ki se končujejo običajno s piko ( .
Poravnalni algoritmi lahko povezujejo kvečjemu dva segmenta z nasprotnim edinim segmentom ( v drugem jeziku ) ali nasprotno , razporeditev načina vzporeditve pa je bolj ali manj prepuščena preračunavanju s statističnimi metodami v samem programu .
2 ) » Pretvorba « iz poravnav v pomnilnik prevodov : po izbranih oblikovnih in vsebinskih nastavitvah v ' praznem ' pomnilniku prevodov orodja Translator's Workbench ( Database Setup in Project Settings ) v pomnilnik uvozimo vse želene poravnave , ki smo jih uresničili s poravnalnikom dvojezičnih besedil .
Take pretvorbe so bile prikazane že v prejšnjih objavah M. Željka ob nastanku prvega korpusa besedil , zajetih pri programu prevajanja zakonodaje EU iz angleščine v slovenščino ( glej vir 7 ) .
4 ) Kaj storiti ?
Ker so si izvozne in uvozne datoteke iz dveh ( če ne celo vseh treh ) orodij Tradosovega paketa za prevajanje in urejanje terminologije zelo podobne ( vsebujejo namreč enote , ki so lahko sestavni del kake standardno kodirane xml datoteke ) , jih lahko združimo oz. pretvorimo eno v drugo , le da dobimo iz WinAlignovega poravnalnika in Translator's Workbencha samo dvojezične prevodne enote .
Za vnos v štirijezični korpus prevodov ( v lupini Multiterma ) je treba pripraviti ustrezen program pretvorb med obema zapisoma v izvoznih datotekah ( xml ali sorodnih vrst ) s preambulo in ustreznim zaključkom .
Prevod historičnih različic teh pogodb je bil ena od obvez Slovenije za njeno polnopravno članstvo v Evropski uniji leta 2004.
Uresničitev projekta kot takega je povezana z naslednjimi koraki in predvidenimi rešitvami morebitnih težav : a ) prenos iz enega xml zapisa ( izvoz dvojezičnega korpusa oz. prevodne zbirke iz Translator's Workbencha ) v drug xml zapis zaradi že vgrajenih funkcij v Multitermu ne bi smel povzročati težav : dvojezične zapise iz dvojezičnih korpusov se tako lahko zaporedno prenese kot xml zapise v lupino Multiterma , ki mu vnaprej določimo izbrane atribute , npr. želene jezike in druge podatke , atrubute , ki jih vsebuje tudi dvojezična prevodna zbirka ali korpus ( Področje , Stanje , Oznaka – ki se nanašajo na posamezen dokument in kot so zapisani in poenoteni v vseh pomnilnikih prevodov ) ; b ) zaporedni prenos ( uvoz ) xml zapisov dvojezičnih prevodnih zbirk v Multitermovo lupino utegne le podvojiti ali potrojiti vnos slovenskega segmenta v Multitermovo podatkovno bazo , kar se da rešiti s preprostim algoritmom iskanja in brisanja ' sinonimnih terminov ' , v našem primeru homografnih segmentov ( stavkov ali besednih zvez ) .
Celoten potek uskladitve ( poenotenja in normalizacije ) novonastale večjezične zbirke zato ne predstavlja velikih težav , le preudaren razmislek in načrtovanje zaporednih korakov urejanja same zbirke , ki se jo pripravi za nov izvoz podatkovne baze v format xml , ki je podlaga vsebinskega vira podatkov , po katerih se ' sprehaja ' konkordančni program med iskanjem želenih iskanih nizov ( zadetkov ) iz enega od jezikov v večjezičnem korpusu , postavljenem na splet .
Poznavanje najpomembnejših dokumentov zakonodaje EU je bistvenega pomena za vse državljane držav članic Evropske unije .
Prikaz takih segmentov v okolju različnih tujih spremnih jezikov omogoča primerjavo slovenščine s še tremi tujimi jeziki , med katerimi lahko izberemo tistega , ki ga najbolje poznamo ali potrebujemo pri svojem delu ( npr. prevajanju , , tolmačenju , lektoriranju oz. jezikovni redakciji , dejavnostih v zvezi s terminologijo , stroko oz. samimi pripravami na predsedovanje Slovenije Evropski uniji ) .
Nadaljnja uporaba večjezičnega korpusa bo pokazala , v katero smer naj se še razvijajo dodatne aplikacije , ki jih je ponudila svojim uporabnikom Služba za prevajanje , tolmačenje , redakcijo in terminologijo v Generalnem sekretariatu Republike Slovenije ( GSV ) .
In še okvirni številčni izračun : Najpomembnejši dokumenti , ki naj bi sestavljali prototipni projekt večjezičnega korpusa s stavčno poravnanimi segmenti ( ustanovitvene in pristopne pogodbe , druge pogodbe in protokoli , glej sliko 2 ) , štejejo skupaj okrog 20 000 strani uradneg lista EU .
Povprečno dobimo iz ene strani vsaj 10 prevodnih enot , ena prevodna enota pa šteje približno 30 besed .
Poleg nekaj navedenih konkretnih primerov uporabe bo imel večjezični korpus in njegov spletni konkordančnik tudi pomembnejšo pravno-politično , geografsko prepoznavalno , kulturno in izobraževalno vlogo .
Učni korpus govorjene slovenščine je bil zgrajen kot teoretična in praktična podlaga za gradnjo večjega govornega korpusa slovenščine , ki naj bi dopolnjeval korpus pisnih besedil FidaPlus .
Učni korpus sestavljajo digitalni posnetki spontanega govora , ki so bili zbrani po različnih taksonomskih in demografskih kriterijih .
Učni korpus je v obliki , ki omogoča iskanje po korpusu , z geslom dostopen na spletnem naslovu http://torvald.aksis.uib.no/talem/jana/s9.html ; dostopna so cela besedila ter konkordance in kolokacije posameznih besed .
Za iskanje po korpusu so na voljo različni kriteriji , transkripcije pa so povezane z zvočnimi posnetki .
V času mojega trimesečnega študijskega bivanja na Oddelku za kulturo , jezik in jezikovne tehnologije na Univerzi v Bergnu na Norveškem je nastal manjši korpus govorjene slovenščine , ki naj bi služil kot učni korpus za gradnjo govorne komponente referenčnega korpusa .
Korpusi govorjenega jezika so izrednega pomena za raziskovanje jezika , predvsem njegovih slovnično-leksikalnih lastnosti : uporabljajo se za jezikovne opise , za preverjanje hipotez o jeziku , kot jezikovni vir pri poučevanju in učenju tujega jezika , pa tudi pri raziskavah , ki zadevajo sintezo in razpoznavanje govora ( Verdonik 2006 : 7 ) .
V ortografaskem prepisu govora se izgubijo številne značilnosti originalnega govornega dogodka .
Izgubo teh informacij je mogoče vsaj deloma nadomestiti s prozdičnimi oznakami in fonetično transkripcijo , pomembna pa je tudi sočasna dostopnost zvočnih posnetkov .
Stopnja transkripcije je odvisna od namembnosti korpusa ; govorni korpusi so zaradi velikanske količine gradiva običajno transkribirani v ortografski transkripciji , na manjšem delu korpusa pa je lahko narejena tudi fonetična transkripcija .
Pri gradnji učnega korpusa zaradi časovnih in " človeških " omejitev ni bilo mogoče v celoti upoštevati načel za reprezentativni in uravnoteženi zajem besedil .
Kljub temu sem se pri zbiranju gradiva trudila , da bi se besedila čim bolj razlikovala po lastnostih , na katerih je zgrajena taksonomija govorjenih besedil , in da so se govorci čim bolj razlikovali po demografskih lastnostih .
Razmerja znotraj posameznih kontekstualnih kriterijev so naslednja : - dialogi ( in multilogi ) proti monologom : 94 % : 6 % , - zasebna besedila proti javnim : 19,5 % : 80,5 % , - neformalna besedila proti formalnim : 35,5 % : 64,5 % , - besedila , posneta v osebnem stiku , proti besedilom s prenosnikom : 31 % : 69 %.
Velikost in struktura korpusa sta zadoščali za določitev korpusnih oznak , zadovoljivi pa sta bili tudi za določitev transkripcijskih standardov .
Besedila učnega korpusa govorjene slovenščine so členjena na izjave , ki so omejene bodisi s premorom bodisi z menjavo govorcev .
Velike začetnice imajo lastna imena , kadar ne gre za osebne podatke ; ti so nadomeščeni z nevtralnimi oznakami .
Besede , ki imajo znano ( slovarsko ) pisno obliko , so skoraj dosledno zapisane z upoštevanjem pisne norme ; pri tem sem se zgledovala po drugih referenčnih govornih korpusih ter sledila osnovni filozofiji delovne skupine EAGLES za govorjena besedila , ki temelji na načelu , naj bo pri transkribiranju spontanih govorjenih besedil v čim večji meri upoštevan standardni zapis besed , vse nestandardne oblike v transkripciji pa naj bodo jasno označene .
Zapisovanje govora z ortografsko transkripcijo postane problematično , kadar besede nimajo ustaljene pisne oblike ali od nje v govoru zelo odstopajo .
V nadaljevanju navajam nekaj primerov besed brez ustaljene pisne oblike ( v kurzivu ) : - ene tri ure smo čakali , - a veš , un Michael , uni fjordi , un Grega , - vsi ta glavni fjordi , - a pol gremo , - a čmo pogledat , - to je tle , to je tlele , - ə ( polglasnik ) , - citatne besede ( imamo mi posla i bez toga ) , - narečne / žargonske / slengovske besede ( pležuh , tošel , bičikleta , jabčki ) .
V primeru gradnje večjega govornega korpusa bi bilo verjetno bolje uporabljati Praat , ker omogoča tudi akustične analize govora .
Transkripcije je v korpus s konkordančnikom in s povezavo med transkripcijami in zvočnimi posnetki konvertiral Knut Hofland na Univerzi v Bergnu .
Program razdeli časovni odsek med začetkom in koncem izjave s številom besed in naredi interpolacijo časa za vsako besedo znotraj izjave ; na ta način je dosežena dokaj natančna sinhronizacija zvoka in transkripcije .
Iskalno okno omogoča iskanje ene , dveh ali treh sosednjih besed in izpis njihovih konkordanc .
Dostopnost besedil , ki jih je mogoče v celoti ali po delih tudi poslušati , je za nekatere jezikoslovne analize zelo pomembna .
Slika 2 prikazuje primer transkribiranega in označenega besedila , segmentiranega na izjave .
Običajnejši dostop do gradiva v korpusu je preko konkordančnika , kjer kot rezultat iskanja dobimo konkordančni niz : primer vidimo v Sliki 3.
Na začetku vsake vrstice je šifra posnetka , iz katerega je vzeta izjava ( npr. R06 ) , in šifra govorca izjave ( G17 ) .
Med najbolj dragocene podatke v referenčnih korpusih sodijo podatki o frekvenci pojavljanja in sopojavljanja besed .
Nekateri statistični podatki so dostopni tudi za učni korpus : v korpusu je okrog 15.000 pojavnic in 3118 različnic ( o pojavnicah in različnicah prim. Gorjanc 2005 ) ; od tega se jih dve tretjini pojavi samo enkrat , kar naj bi bilo za govorne korpuse značilno .
Najvišjo frekvenco v učnem korpusu ima oblika glagola biti " je " , in sicer skoraj 500.
Slika 4 prikazuje besede z najvišjo frekvenco pojavljanja v učnem korpusu .
Učni korpus govorjene slovenščine je zaenkrat z geslom dostopen na spletnem naslovu http://torvald.aksis.uib.no/talem/jana/s9.html ( geslo je mogoče dobiti na naslovu jana.zemljaric@ff.uni-lj.si ) .
Največji pomanjkljivosti korpusa sta njegova neuravnoteženost in nereprezentativnost , kar je treba upoštevati pri morebitni nadaljnji uporabi korpusnih podatkov .
Namen gradnje učnega korpusa je bil vendarle dosežen , saj so bila ob gradnji razvita načela zajemanja govorjenih besedil , predstavljene so bile različne možnosti transkribiranja spontanega govora , izbrane in preizkušene možnosti označevanja , prikazati pa je mogoče tudi nekatere možnosti uporabe govornega korpusa .
Za nekatere oznake in načela korpusa so bili že podani predlogi za izboljšave , ki bodo upoštevani ob morebitni gradnji večjega govornega korpusa .
Kriterij Porazdelitev glede na določene kategorije .
V prispevku je predstavljen poskus uporabe korpusne analize za iskanje pragmatičnih enot v neoznačenem specializiranem korpusu 46 slovenskih poljudnoznanstvenih člankov ; v korpusu so z elektronskim iskanjem identificirani kažipoti , ki so vrsta metabesedila .
Nadaljnje ročno iskanje identificira dodatne primere kažipotov ; pokaže se , da je elektronsko iskanje uspešno identificiralo nekaj več kot 80 % vseh kažipotov .
Predstavljene so možnosti izboljšav v iskanju , kot npr. redukcija seznama iskanih izrazov na tiste , ki so bili pred tem najdeni v poljudnoznanstvenih člankih , iskanje nizov besed namesto posameznih besed in razširitev seznama iskanih besed .
Raziskave so pokazale , da se jeziki , vede in žanri v rabi metabesedilnih elementov med seboj razlikujejo ( npr. Bäcklund , 1998 , Dahl 2004 ) ; to je bilo pokazano tudi za slovenščino v primerjavi z angleščino in za različne žanre in stroke ( Pisanski Peterlin , 2005 ) .
Glede na to , da se tovrstnih razlik pravzaprav slabo zavedamo , so možnosti napak pri oblikovanju besedila v tujem jeziku ali v žanru , ki piscu ni domač , precejšnje .
Prav tako pojavitev tipične oblike še ne pomeni , da ta označuje kažipot .
Besedna zveza opisane vrste je kažipot , če se nanaša na vrste , ki jih je avtor besedila predhodno opisal v istem besedilu ( v smislu zgoraj / prej opisane vrste ) , če pa se nanaša na vrste , ki so jih različni raziskovalci opisali do sedaj ( v nasprotju s takimi , ki jih še niso opisali ) , pa to ni kažipot , temveč del vsebine besedila .
Za iskanje po korpusu nekateri avtorji uporabljajo različne obstoječe programe za besedilno analizo in konkordance , kot so WordPilot 2000 ( uporabljen v Hyland , 2005 in Harwood , 2005 ) , WordSmith Tools ( uporabljen v Hewings , M. in Hewings , A. , 2002 ) , MonoConcPro ( uporabljen v Hyland , 2004 ) , drugi pa za iskanje uporabljajo program , narejen " po meri " prav za iskanje po njihovem korpusu ( npr. Dahl , 2004 ) .
Ob tem se odpira zanimivo vprašanje , kakšne so specifične značilnosti takega iskanja v slovenščini , ki je v nasprotju z angleščino morfološko mnogo bogatejša , kako uspešno je tovrstno iskanje in s katerimi težavami se pri njem srečujemo .
Korpus in metoda .
Vsa besedila so izvirni slovenski poljudnoznanstveni članki , objavljeni v reviji Proteus med letoma 1997 in 1999.
Skupna dolžina korpusa je 341 486 besed .
Seznama sta nastala na podlagi predhodne raziskave ( Pisanski Peterlin , 2005 ) , ki je med drugim obsegala ročno analizo 70 besedil in identifikacijo vseh pojavitev kažipotov v njih .
Izdelava seznama glagolov se zdi smiselna , kajti velika večina kažipotov vsebuje glagolsko obliko .
Nato je bil na podlagi že omenjenega nabora kažipotov narejen še seznam drugih izrazov ( samostalniki , pridevniki , deležniki na - n / - t in prislovi ) , ki bi utegnili služiti kot potencialni identifikatorji kažipotov .
in prislovi , kot so najprej , tu , zgoraj ) .
Deležniki na - n / - t so v svojem izvoru seveda glagolske oblike , vendar jih po funkciji že Toporišič ( 2000 ) uvršča med pridevniško besedo .
Prav zato in zaradi svojih morfoloških značilnosti so zbrani na seznamu neglagolskih oblik .
Seznam neglagolskih izrazov za iskanje kažipotov je tako obsegal naslednje besede : - samostalnike : analiza , faza , razprava , članek , način , namen , opis , podatek , postopek , primer , prispevek , razdelek , rezultat , sestavek , začetek , zapis , zgled , dejstvo , delo , nadaljevanje , področje , poglavje , vprašanje , pot , rešitev , ugotovitev , - pridevnike in deležnike na - n / - t gornji , naslednji , našteti , obravnavani , omenjani , omenjeni , opisani , prejšnji , pričujoči , uvodni , spodnji , zadnji , zgornji , ter števnik prvi ( po analogiji z zadnji ) - prislove doslej , kmalu , najprej , nato , nazadnje , pozneje , pravkar , predhodno , prej , sedaj , spodaj , tu , tukaj , uvodoma , zdaj , zgoraj , že V nasprotju z glagolskimi oblikami na prvem seznamu na drugem seznamu ni mogoče izločiti morfoloških oblik samostalnikov in pridevnikov ( vključno z deležniki na - n / - t ) , saj se v metabesedilni vlogi lahko pojavijo v vseh sklonskih oblikah in v vseh treh številih , pridevniki in deležniki pa tudi v vseh spolih .
Analiza korpusa je bila narejena s programskim orodjem za konkordance WordSmith Tools ( Scott , 1996 ) , verzija 4.0.
Rezultati .
V tabeli 1 so predstavljeni rezultati iskanja po obeh seznamih in skupni seštevek : v prvi vrstici je predstavljeno število zadetkov elektronskega iskanja , v drugi vrstici je navedeno število zadetkov , ki so ostali po ročni izločitvi lažnih pozitivnih zadetkov in so bili identificirani kot kažipoti , v tretji vrstici pa je razmerje med pravimi pozitivnimi zadetki in vsemi zadetki elektronskega iskanja izraženo v odstotkih .
Pomemben je tudi podatek o številu primerov , ki so se podvajali na obeh seznamih ; takih primerov je bilo 31.
Rezultati ročne analize so pokazali , da je bilo elektronsko iskanje kažipotov delno uspešno .
Ročna analiza je namreč v korpusu identificirala še dodatnih 34 primerov , kar pomeni , da je elektronsko iskanje zajelo nekaj več kot 82 % vseh pojavitev .
Skupno število vseh identificiranih kažipotov je 191 , kar pomeni , da se v povprečju pojavlja 4,1 kažipot na besedilo , oziroma nekaj manj kot 0,6 na 1000 besed .
Pri avtomatskem iskanju kažipotov v korpusu sta se pojavila dva problema : prvi je veliko število lažnih pozitivnih zadetkov ( pravih pozitivnih je manj kot 10 % ) , drugi pa je dejstvo , da z metodo uspešno najdemo le nekaj več kot 80 % kažipotov .
Velik odstotek lažnih pozitivnih zadetkov v pričujoči raziskavi ni bil posebej problematičen , saj je uporabljeni korpus razmeroma majhen , zato je bilo ročno izločanje lažnih pozitivnih obvladljiva naloga ; v večjem korpusu bi bilo to bistveno težje .
Zdi se , da je takšen pristop primeren za grobo ugotavljanje deleža metabesedilnih elementov v celotnem korpusu , čeprav 50 primerov ni velik vzorec .
Pregled ustreznosti nabora glagolskih slovničnih oblik pokaže , da od enajstih oblik tri niso generirale pravih pozitivnih zadetkov ; te oblike so prva oseba ednine v sedanjiku ter deležnika na - lo in - le .
Izpuščanje deležnikov na - lo in - le bi bilo nesmiselno , saj sta to le varianti deležnika na - l , ki je sicer v oblikah na - l , - la in - li generiral razmeroma velik delež pravih pozitivnih zadetkov in bi se v drugem naboru besedil lahko pojavljale tudi oblike na - lo in - le .
Pregled ustreznosti nabora leksikalnih enot daje boljše možnosti za krajšanje .
Predhodne raziskave so sicer pokazale , da se žanri med seboj močno razlikujejo v rabi metabesedilnih elementov ( Crismore in Farnsworth , 1990 za angleščino , Bäcklund , 1998 za angleščino , nemščino in švedščino , in Pisanski Peterlin , 2005 za angleščino in slovenščino ) , z vprašanjem oblik v posameznih žanrih pa se ni ukvarjala nobena od njih .
Ta podobno kot poglavje izhaja iz kažipotov , ki se pojavljajo v univerzitetnih učbenikih , v poljudnoznanstvenih člankih pa ga pravzaprav ne pričakujemo , čeprav v resnici lahko naletimo na primere , v katerih avtorji razdelke v članku poimenujejo poglavja ( npr. kot smo pokazali v prejšnjem poglavju ) .
Podobno je tudi razmeroma neverjetno , čeprav ne nemogoče , da bi avtor članek poimenoval delo , ( npr. v tem delu bomo pokazali ) .
Pregled lažnih pozitivnih zadetkov pa pokaže , da se v veliki večini pojavljajo različne sklonske oblike samostalnika del , ki se prekrivajo s samostalnikom delo ( dela , delu , del ipd. ) , samostalnik del pa je v poljudnoznanstvenih člankih razmeroma pogost .
Zelo pogosto pa poročajo o raziskavah ali analizah drugih raziskovalcev , npr. na univerzi v Cambridgeu so to analizirali , dokazali , izračunali , izpeljali , ...
Kot možna izboljšava seznama se torej ponuja krajšanje seznama na zgolj tiste izraze , ki so bili identificirani v poljudnoznanstvenih člankih , brez dvoma pa to pomeni tudi izgubo nekaterih pravih pozitivnih zadetkov .
Ponovna analiza pokaže , da so rezultati takšnega iskanja bolj obvladljivi , vendar manj natančni .
V resnici torej ne moremo govoriti o posebni izboljšavi .
Tudi pregled izgubljenih zadetkov pokaže zanimivo sliko : z dodatkom samo štirih izrazov ( primer , prvi , naslednji in opisati ) z vsemi njihovimi oblikami , bi zajeli še 23 pojavitev , to pa bi pomenilo , da je metoda uspešna skoraj 64 %.
Dobljeni rezultati delno potrjujejo smiselnost takega iskanja : skoraj 60 % glagolov je uporabljenih v kombinacijah z nekim drugim izrazom z metabesedilnim pomenom , med ostalimi izrazi je ta odstotek nekoliko nižji , a vedno dosega skoraj 40 % K temu dodamo še možnost iskanja nizov besed v kateri ima le ena metabesedilni pomen , druge pa so njene slovnične sopojavnice ( npr. predlogi , pomožni glagoli , ...
Namesto iskanja za obliko članku , bi tako iskali niz v+članku , ki zelo pogosto nastopa v metabesedilni vlogi , izognili pa bi se lažnim pozitivnim v smislu njegovemu članku ne moremo očitati ...
Težave pri takšnem iskanju pa povzroča fleksibilnost besednega vrstnega reda v slovenščini : V članku bomo pokazali ...
Iskanje po besednih nizih namreč ne more biti dokončna rešitev : nekateri kažipoti ne vsebujejo tipičnih kombinacij besed .
Drugo možnost za zmanjšanje lažnih pozitivnih zadetkov predstavlja izločanje nizov , ki se tipično pojavljajo v nemetabesedilnem pomenu .
Dahl ( 2004 : 1816 ) navaja uporabnost avtomatičnega izključevanja kombinacij besed kot so they+glagol ali he+glagol ( ta v nasprotju z I / we+glagol navadno ne nastopa v vlogi kažipotov ) v angleščini , francoščini in norveščini .
V slovenščini takšno avtomatično izločanje ni mogoče : ker osebka ni treba izraziti : namesto in his paper , he shows se pojavi v članku pokaže , oblika pokaže pa je seveda lahko kažipot ( v smislu rezultat pokaže naslednja odstopanja ) .
Čeprav so lažni pozitivni zadetki problematični zaradi zamudnega ročnega čiščenja , pa ne ogrožajo točnosti dobljenega rezultata .
Pregled teh primerov pokaže , zakaj jih elektronske iskanje ni zajelo .
Če torej izključimo netipične kažipote , primerke s kazalnimi zaimkom in s števniki , ugotovimo , da v uporabljenem korpusu približno polovice izgubljenih kažipotov z elektronskim iskanjem ne bi našli .
( V konkretnem primeru bi dopolnitev z izrazi , kot so velelnik spomnimo se , deležniki opazovan , prikazan , sledeč , naveden , povedano in prislov zdaj uspešnost iskanja približala 90 %).
Jasno pa je , da to ne pomeni , da je seznam izboljšan do največje možne mere : šele večje število novih korpusnih raziskav in ročnih preverjanj v istem žanru bi pokazalo , kakšen je optimalen seznam za iskanje , to pa za raziskavo omejenega obsega ne pride v poštev .
Iskanje kažipotov , metabesedilnih elementov in drugih pragmatičnih enot v elektronskem korpusu omogoča obdelavo mnogo večjih besedilnih zbirk kot ročno iskanje , zato so dobljeni rezultati statistično bolj relevantni .
Toda ob njih se postavlja vprašanje veljavnosti : v pričujoči raziskave je bilo pri iskanju izgubljenih skoraj 20 % pojavitev .
Najboljša rešitev se zdi kombinacija vseh treh pristopov : izboljšanje seznama , krajšanje seznama v povezavi z žanrom in uporaba iskanja po nizih besed za avtomatično iskanje pravih pozitivnih zadetkov med vsemi zadetki .
Iskanje v neoznačenem korpusu je v slovenščini bolj zapleteno kot v angleščini : kjer bi v angleščini iskali s seznamom 400 oblik , je potrebno za iskanje v slovenščini izdelati seznam več kot 1000 oblik .
Dobljeni rezultati pokažejo , da je iskanje pragmatičnih enot , kot so kažipoti , mogoče tudi v neoznačenem korpusu v slovenščini z obstoječim programskim orodjem za besedilno analizo in izdelavo konkordanc ; pri tem pa sta predpriprave na analizo in obdelave podatkov nekoliko kompleksnejši kot v angleščini .
Kot alternativa se seveda ponuja tudi možnost avtomatičnega iskanja v posebej označenem korpusu in s posebej narejenim programom .
Rezultati elektronskega iskanja kažipotov in ročnega čiščenja dobljenih rezultatov .
Zaradi svoje teoretične in praktične uporabnosti vedno nujnejši del jezikovnega načrtovanja postajajo korpusi usvajanja tujega jezika , ki predstavljajo jezik , kot ga pišejo ali govorijo tisti , ki niso njegovi rojeni govorci .
Ključno vprašanje pri snovanju in oblikovanju vsakega korpusa je njegov namen .
Korpusi usvajanja tujega jezika so uporabni tako za teoretične raziskave procesa usvajanja in opisovanje vmesnega jezika učečih se kot tudi za različne praktične aplikacije , kot so slovarji , slovnice , učbeniki ali programska orodja .
Danes je izdelava slovarjev , pa tudi slovnic , kompromis med podatki rojenih govorcev iz nespecializiranih korpusov , ki pokažejo tipično v ciljnem jeziku , in podatki iz korpusov usvajanja , ki povedo , katere težave so tipične za učeče se ( Granger , 1998 ) .
Zaradi elegantnejšega poimenovanja uporabljam izraz korpus usvajanja slovenščine kot tujega jezika kot krovni pojem za tuji in drugi jezik .
Velika večina obstoječih korpusov je usmerjena iz enega izhodiščnega jezika v en ciljni jezik , praviloma angleščino ( Atwell et al. , 2003 ; Axelsson , 2000 ; Cheng , Warren , 1999 ; De Cock et al. , 1999 ; Granger , 2001 ; Horváth , 2003 ; Izumi et al. , 2004 ; Kennedy , 1998 ; Lin , 1999 ; Pravec , 2002 ; Shih , 2000 ; Sugiura , 2000 ; Tenfjord et al. , 2004 ; Tono , 2003 ; Uzar , 1998 ) .
Tujih govorcev slovenščine ne moremo omejiti na skupino z enim samim prvim jezikom , zato bi se bilo pri KUST-u bolje zgledovati po korpusih manj globalno razširjenih jezikov .
V obeh je izhodiščnih jezikov več in predstavljajo največje skupine tujih govorcev oziroma priseljencev .
Za referenčne korpuse je vprašanje prenosnika bistveno , korpusi usvajanja pa nikoli ne morejo biti reprezentativni za celotno populacijo tujih govorcev z vsemi prvimi jeziki in stopnjami znanja .
Zato referenčnost ostaja utopična želja , graditelji pa zaenkrat v glavnem delajo pisne korpuse .
Razlogi za tako velik delež pisnih korpusov so praktični – zajem besedil je že pri pisnih tekstih relativno zamuden , saj jih je treba pretipkati , transkripcija govorjenih tekstov pa bi bila še počasnejša .
Zgornja tabela kaže , da je glavnina korpusov velika med pol milijona in milijonom besed .
Zato bi bilo to tudi smiselno izhodišče za končno verzijo KUST-a ; verjetno bo že uporaba pilotske verzije pokazala , ali ne bi bila za tako fleksijski jezik , kot je slovenščina , relevantnejša kaka druga velikost .
Besedila z izpitov iz znanja slovenščine , ki so možen vir za KUST , imajo po dvesto besed , in tudi spisi s tečajev po izkušnjah učiteljev redko presegajo eno pisano stran .
Za polmilijonski korpus bi torej potrebovali 2500 tekstov s po 200 besedami .
Vrsta besedil in tema .
Vrste besedil in funkcijske zvrsti so v pisnih korpusih usvajanja tujega jezika zelo raznolike .
Zato samo redki korpusi , HKUST , britanski LCLE , hongkonški TELEC , japonski CEJL , madžarski JPU in mednarodni ICLE ( Pravec , 2002 ; Granger , 2001 ) , vključujejo besedila , napisana doma brez časovnih omejitev , in znotraj korpusov ti predstavljajo manjši delež besedil .
Ker pa še noben korpus usvajanja ni zajel reprezentativnega deleža vseh polnopomenskih besed , se raziskave bolj osredotočajo na slovnične besede in strukture , torej sama tematika ni tako ključna .
Na rezultate vpliva tudi način zbiranja besedil .
Pogoj za uravnoteženost korpusa so tvorci besedil .
Pomembna sta tudi znanje ostalih tujih jezikov ter praktične izkušnje , ki so povezane z bivanjem učečega se v državah , kjer je ciljni jezik prvi jezik ( Granger , 1998 ) .
Čeprav ni nujno , da tisti , ki se še šolajo , pišejo več kot ljudje , ki so šolanje že končali , pa raziskovalci , ki so pogosto zaposleni na univerzah , lažje pridejo do njihovih besedil .
Seveda so primerni tvorci tudi starejši udeleženci tečajev tujega jezika – v vsakem primeru gre ponavadi za ljudi , ki se jezik učijo institucionalizirano , saj so le tako njihova besedila dostopna graditeljem korpusov .
Vir za korpusa CLC in PELCRA so izpitne pole , za korpusa ICLE in FRIDA tvorci izpolnijo vprašalnik ( Pravec , 2002 ; Granger , 2001 ) .
Ciljni jezik večine korpusov je angleščina , ki je tako razširjena po vsem svetu , da lahko tuji govorci angleščine z določenim prvim jezikom oblikujejo svoj korpus .
Pri manjših jezikih , kjer je tudi manj konkurence , je situacija drugačna .
Francoska FRIDA in norveški ASK imata več izhodiščnih jezikov , ki naj bi ustrezali jezikom največjih skupin priseljencev v tej državi .
Prav njihovi najpogostejši prvi jeziki bi morali biti tudi prvi jeziki v KUST-u , saj naj bi predstavljali pomemben del populacije govorcev slovenščine kot drugega jezika .
Sklepanje o govorcih slovenščine kot tujega jezika bo temeljilo na podatkih o udeležbi na tečajih slovenščine za tujce v letih od 2003 do 2005.
Ob tem se je treba zavedati , da bi bili za uporabnike KUST-a relevantnejši tisti tuji govorci , ki se učijo prek organiziranega učnega procesa , kar avtomatično daje prednost govorcem slovenščine kot tujega jezika .
Zaradi jezikovnih razlik bi bilo najbolje za vsakega od teh treh jezikov oblikovati ločen podkorpus .
3.Nemščina kot materni jezik je med slovenskim prebivalstvom relativno redka ( 0,1 odstotek ) in za Nemce slovenščina ni pogosto drugi jezik , zato pa je na tečajih slovenščine največ , kar 22 odstotkov udeležencev iz Nemčije , Avstrije in Švice .
Govorci slovenščine iz Argentine , ki so večinoma potomci slovenskih izseljencev , imajo poseben status , saj je zanje slovenščina dejansko prvi jezik v družini , ne pa tudi v okolju .
Njihov delež na tečajih slovenščine je 7-odstoten .
Glede na jezikovno ozadje bi k njim lahko priključili tudi ostale govorce španščine ( 4 odstotke ) , ki prihajajo iz Španije , Mehike , Venezuele , Urugvaja , Kube , Peruja , Čila , Bolivije , Dominikanske republike in drugih držav .
Korpusni podatki bodo pokazali , v kolikšni meri se njihova slovenščina razlikuje od slovenščine argentinskih izseljencev .
Zadnja večja skupina so govorci italijanščine ( 0,2 odstotka prebivalstva , dobrih 6 odstotkov na tečajih slovenščine ) , vendar gre tudi pri teh za precejšen delež zamejskih Slovencev , ki obiskujejo tečaje .
Smiselno je , da so med seboj po velikosti primerljivi , saj razmerja 3 Hrvaški , srbski in bošnjaški jezik so združeni v isto kategorijo , ker se udeleženci tečajev slovenščine pri izpolnjevanju prijavnic pogosto ne opredelijo za enega od jezikov in podatki torej niso točni .
Tako bi imel v polmilijonskem korpusu vsak podkorpus v končni fazi 100.000 besed oziroma 400 besedil s po 250 besedami .
Le malo korpusov vključuje besedila začetnikov , saj ti tvorijo kratke tekste z mnogo odkloni od norme , popolnoma tujimi strukturami in malo koherentne vsebine .
Največ je korpusov , kjer so avtorji nadaljevalci ( Granger , 2001 ; Kennedy , 1998 ; Pravec , 2002 ; Shih , 2000 ; Tenfjord et al. , 2004 ) .
Uporabnost korpusa usvajanja tujega jezika poveča vzporedni kontrolni korpus jezika rojenih govorcev , ki omogoča primerjave .
Tako dobimo kvantitativne podatke o pogostnosti določenih besed , besednih vrst , skladenjskih struktur in značilnostih diskurza ( Tono , 2003 ) .
Od 18 pisnih korpusov usvajanja tujega jezika , ki so relevantni ob razmišljanju o KUST-u , jih ima le šest kontrolni korpus ( Granger , 2002 ; Tenfjord et al. , 2004 ; Uzar , 1998 ; Izumi et al. , 2004 ; Pravec , 2002 ) .
V obeh primerih si morajo biti načela gradnje približno podobna .
Ker so kontrolni korpusi , ki zahtevajo precej truda graditeljev , skromno razširjeni , in ker za slovenščino obstaja referenčni korpus FIDA , bi lahko bil KUST vsaj na začetku brez posebnega kontrolnega korpusa .
Ker korpus usvajanja tujega jezika za razliko od običajnih korpusov nudi odklon od norme , je posebej koristno , če so v njem označene tudi napake , ki nastajajo pri jezikovni produkciji .
Prav z analizo napak se je začelo raziskovanje vmesnega jezika učečih se , in čeprav danes to še zdaleč ni več edini vidik raziskav , je še vedno eden izmed najpomembnejših .
Za razliko od bolj razvitih in predvidljivih ravni označevanja , kot sta oblikoslovno označevanje in lematiziranje , je označevanje napak izjemno zamudno .
Program , ki je za uspešno delovanje potreboval dvaintrideset različnih podatkov , 5 so naučili na stopetdesetih dokumentih in ga preizkusili na šestnajstih , vendar so bili rezultati nezadovoljivi .
Nazadnje so dodali umetne napake in s tem natan - 4 Podatki so bili pridobljeni na Centru za slovenščino kot drugi / tuji jezik Filozofske fakultete Univerze v Ljubljani .
5 To so ciljna beseda , dve besedi prej in dve potem , njihove besedne vrste in slovarske oblike , pet različnih kombinacij omenjenega ter prve in zadnje črke ciljne besede .
Zaradi časovne potratnosti označevanja so napake zaenkrat označene le na manjšem delu korpusov .
Od pregledanih korpusov usvajanja tujega jezika le v 14 označujejo napake , vendar tudi tu niso označene na vseh besedah , temveč zgolj na omejenem vzorcu , na primer na tretjini ali petini besed .
Klasifikacija je naporno , sporno in razmeroma brezplodno delo , kajti razdelimo jih lahko na različne načine glede na cilj raziskave in jezikoslovno teorijo , iz katere izhajamo .
Tako celo za angleščino kot ciljni jezik ni ustaljenega načina , temveč vsak korpus deli napake po svoje .
Možen način klasificiranja je glede na izvor napak .
Edini , ki jih deli na omenjeni način , je Japanese Learners ' Corpus ( Sugiura , 2000 ) .
Uporabnejše so tipologije , ki napake razvrščajo glede na spremembo predvidene ciljne oblike oziroma način odklona od nje .
Poleg tega jih delijo tudi glede na spremembo ciljne oblike na izpuste , zamenjave in vstavitve ( Izumi et al. , 2004 ) .
V korpusu FRIDA dobi vsaka napaka tri oznake : področje ( slovnica , slovar , zapis itn. ) , kategorijo ( vrsta , število itn. ) in slovnično kategorijo ( samostalnik , pridevnik itn. ) ( Granger , 2001 ) .
Yukio Tono , ki je sodeloval pri več japonskih korpusih usvajanja angleščine , zaradi heterogenosti taksonomij predlaga , da bi se vsi držali splošnega nabora , kjer bi določili samo jezikovno kategorijo in način odklona od ciljne oblike , nato pa bi ga prilagajali potrebam svoje raziskave ( 2003 ) .
Predlog klasifikacije v KUST-u je bil narejen po analizi manjšega nabora besedil tujih tvorcev in napake deli na dveh ravneh .
Čeprav se zdi privlačna možnost , da je prvi kriterij sprememba ciljne oblike , to verjetno ni prvi podatek , ki bi zanimal profesionalne uporabnike , zato je prva raven kombinacija jezikovne ravnine in spremembe ciljne oblike .
Besedišče pokriva napake , kjer so uporabljene besede , ki v slovenščini ne obstajajo ali pa so uporabljene v napačnem kontekstu .
Napake zaradi napačnega tvorjenja besed so označene kot napake v besedotvorju .
Izpusti in vstavitve se nanašajo na spremembo ciljne oblike in nimajo nadaljnjih atributov , ker bi bilo to glede na relativno redkost njihovega pojavljanja neekonomično .
Gotovo pa bi bilo smiselno uvesti tudi kategorijo nerazvrščenih napak za vse pojave , ki ne sodijo v nobeno drugo kategorijo .
Na drugi ravni je pomembna besedna vrsta .
Na prvi pogled se to zdi možnost za dodatna pojasnila , posebej , kadar označevalec dobi že popravljen spis .
Vendar je pogosto težko določiti , kaj je pravilna oblika očitno napačne jezikovne značilnosti .
Navajanje postane bolj ali manj posrečeno ugibanje , ki vsiljuje en sam vidik , zmanjšuje objektivnost označevanja in oteži priklic drugih možnosti .
Zaradi omejene dostopnosti podatkov o obstoječih korpusih je težko podati natančen pregled tehnične plati označevanja napak , vendar jih večinoma seveda označujejo z jezikom SGML ( HKUST ) ali XML ( LCLE , FRIDA , JEFLL , SST ) ( Pravec , 2002 ; Granger , 2001 ; Izumi et al. , 2004 ) .
Po analizi različnih že obstoječih tujih korpusov usvajanja , ki so delno lahko zgled za slovenski korpus , je nastala v članku predlagana zasnova korpusa usvajanja slovenščine kot tujega jezika , po kateri gre za pol - do enomilijonski korpus s ciljnim jezikom slovenščino in izhodiščnimi jeziki srbščino oziroma hrvaščino , makedonščino , angleščino , nemščino in italijanščino ter skupino vseh ostalih jezikov .
Vir besedil so spisi z izpitov iz znanja slovenščine in s tečajev slovenščine , tematika je čim splošnejša .
Kontrolnega korpusa ni , saj lahko kot to funkcionira FIDA , v njem pa so ročno označene napake po razdelani klasifikaciji , ki zajema način odklona od pričakovane oblike , jezikovno ravnino in besedno vrsto .
Naštete značilnosti in lastnosti bodo preizkušene na pilotskem korpusu usvajanja tujega jezika .
Predvsem pri označevanju napak , kjer za slovenščino v ta namen še ni bilo razdelanega in preizkušenega sistema , pa je pričakovati največ sprememb in prilagoditev , ki bodo končno verzijo naredile prijaznejšo in uporabnejšo tako za znanstvene raziskovalce kot tudi za bolj praktično usmerjene pedagoge .
Število besed v korpusih usvajanja tujega jezika glede na prenosnik .
Korpus Ciljni jezik Število besed .
Velikost korpusov usvajanja tujega jezika .
Označen stavek z napako v korpusu SST : n označuje samostalnik , num pove , da gre za napako v številu , atribut crr = pa vsebuje pravilno obliko .
Podatki so bili pridobljeni na Centru za slovenščino kot drugi / tuji jezik Filozofske fakultete Univerze v Ljubljani .
Zaradi neknjižnih oblik , ki se pojavljajo v besedilih , je smiselno , da analizator pri stavčni analizi predvidi , da bi lahko bila v stavku tudi kakšna od pogostih neknjižnih oblik .
Ta popustljivost analizatorja pa lahko pripelje do dvoumnosti , kjer je potem možno , da v stavku je neknjižna oblika ali pa je ni in gre za drug pomen .
Ta način ima dodatno prednost , ker zmanjšuje verjetnost , da bi se neknjižna beseda po pomoti vnesla v slovar kot knjižna , saj je tam že vnesena , le da ima posebno oznako .
Najpogostejše take oblike ( zadanemo , otroci za orodnik množine ) so vnesene že v slovar .
Predmet v tožilniku se pri zanikanju stavka spremeni v rodilnik ( pri glagolu biti v pomenu obstajati preide v rodilnik iz imenovalnika tudi osebek ( Sosede ni doma .
Amebisov analizator pri zanikanih stavkih sprejema tako predmete v tožilniku kot v rodilniku , vendar prve posebej označi v analizi , da lahko slovnični pregledovalnik potem ugotovi , da gre za možno neknjižno uporabo .
Možna neuporaba povratnega svojilnega zaimka .
Rad bi opravičil mojega brata .
Primeri pogojnih stavkov z možno neuporabo povratnega svojilnega zaimka če bi se zanesli na to , da v besedilu ni neknjižnih uporab , bi lahko v teh stavkih sklepali na to , da osebek ni v prvi osebi .
Uporabnik lahko vnaprej definira opozorilni klic na njegovo telefonsko številko .
lagal ji je glede njegovega premoženja da bo tako dober kot njegov oče Primer 2.
Nič mi niste pisala .
Primer napačno ugotovljenega napol vikanja V primeru 4 pride do dvoumnosti zaradi tega , ker besedo ženska prepozna tudi kot pridevnik , kar bi pomenilo napol vikanje .
Zanikanje s tožilnikom ali ne Pri primeru 6 je tako število slik odvisno od tega , ali je predmet v rodilniku ali v tožilniku .
Možna rešitev te težave bi bila , da bi program pogledal celotno besedilo in preštel vse nedvoumno zanikane predmete in iz tega sklepal , kaj pisec večkrat uporablja .
V večini primerov jo lahko opazi že črkovalnik , zaplete pa se pri tretji osebi ednine , kjer se neknjižna oblika prekrije z relativno pogostim samostalnikom nebo .
V večini primerov je pravi pomen nebo , nekatere primere pa je mogoče razrešiti tudi z dodatnimi pravili .
Možna rešitev za ta stavek bi bila , da bi se zmanjšale verjetnosti za analize , ki vsebujejo glagol zamenjavati , ki je relativno redek .
Dvoumnosti povzroča dejstvo , da je beseda tudi namenilnik glagola jesti , kar povzroči , da zelo pogosto postanejo dvoumni stavki , ki vsebujejo glagole premikanja .
Kar nekaj pogostih besed se prekriva z možnimi namenilniki ( spet , izpit , past , rit , pet , …).
V kombinaciji z glagoli , ki se lahko vežejo tudi nedoločniki ( ob modalnih glagolih , kjer je dvoumnosti manj , ker se običajno ne vežejo s čim drugim , sta taka primera pogosto imeti ( Imam pisati članek .
Možni neknjižni namenilniki V veliki večini primerov je prava analiza tista brez namenilnika ( na splošno se imeti in biti ne vežeta pogosto z nedoločnikom ) , tako da je znižanje verjetnosti analizam z njim dovolj zanesljiva metoda za ugotavljanje prave analize .
Tudi v teh primerih je verjetnost , da gre res za neknjižno obliko , po navadi majhna .
poškodovan prst mam štiri ure mam časa in mamo Ivano Primer 12.
Pogovorna oblika imeti Ugotavljanje pravega pomena je tukaj precej zoprno .
Možna rešitev je , da se prepove , da je mama desni prilastek samostalnika ura , kar pa razreši le delček primerov .
Stavke iz primera 14 analizator zato razume tudi tako , da je vso v njih predmet v tožilniku , resnični predmet pa osebek .
Vsi trije primeri , ki so bili najdeni v vzorcu , so taki , da bi bilo bolje dati prednost analizi , kjer je v besedilu neknjižna oblika .
Delno bi se dalo to reševati po posameznih primerih glagolov ( ni posebno verjetno , da bi pohištvo kaj pojedlo ) , smiselno bi bilo pa preizkusiti tudi splošnejše pravilo , da v primerih , kjer besedi vso takoj sledi osebek v ednini srednjega spola , zmanjšamo verjetnost tej analizi .
Nadaljnje preizkušanje na daljših primerih bo pokazalo , če je tako pravilo dovolj zanesljivo za uporabo .
6 Primeri uporabe Analizator v prevajalnem sistemu Presis že zna razrešiti nekatere od zgoraj naštetih dvoumnosti .
Jest gledam televizijo .
Drugi del prispevka se posveti različnim metodam prepoznavanja lastnih imen .
Kot podskupino samostalnikov jih je v nemškem jeziku vizualno težko prepoznati , ker se tudi samostalniki pišejo z veliko začetnico .
V slovenskem jeziku pa se pišejo z veliko začetnico le lastna imena , kar olajša njihovo prepoznavanje .
Za prepoznavanje lastnih imen se uporabljata dve metodi .
V pričujoči raziskavi sta bili uporabljeni obe metodi , poudarek pa je bil na metodi pravil .
Prepoznavanje preprostih ali enobesednih lastnih imen , posebno zemljepisnih , se pri vseh sistemih rešuje s pomočjo seznamov .
Uvod .
Veliko ljudi se niti ne zaveda , da so jezikovne tehnologije del vsakdanjega življenja .
Uporaba elektronskih slovarjev nam lajša iskanje neznanih besed .
Iskanje lastnih imen v nemškem jeziku predstavlja večji izziv , ker se v nemščini vsi samostalniki pišejo z veliko začetnico .
Med lastna imena uvrščamo tudi imena stvaritev , organizacij , delovnih skupnosti ipd. ( Slovenski pravopis 1994 , 22-24 .
Ker so jim imena podeljena , imajo lastnosti lastnih imen , ker pa hkrati razvrščajo proizvode v različne kategorije , jih lahko uvrščamo tudi med občna imena ( Shippan 1992 , 65 ) .
Ker so se prvi programi za prepoznavanje lastnih imen razvijali za prepoznavanje imen v angleškem jeziku , je pomembno tudi dejstvo , da v angleškem jeziku v skupino lastnih imen sodijo tudi imena dni ( Monday ) , mesecev ( May ) in praznikov ( Christmas ) .
Zanimivo je , da v angleščini med lastna imena sodijo tudi poimenovanja valut , datumi in odstotki ( Roth 2002 , 5 ; Bekavac 2005 , 19 ) .
Prepoznavanje lastnih imen .
Na mednarodni konferenci o razumevanju sporočil MUC-7 leta 1998 so se med sabo pomerili programi , ki delujejo na osnovi slovničnih pravil ( PNF , BSEE , LaSie , LT TTT ) , in programi , ki za prepoznavanje lastnih imen uporabljajo statistične metode ( IdentiFinder , MENE ) ( Roth 2002 , 25-82 ) .
Za prepoznavanje lastnih imen lahko torej uporabljamo dve osnovni metodi .
Pri interni evidenci gre za tipične lastnosti in zgradbo imen ( d. o. o. , d. d. , Inštitut X , X vrh , X jezero ) .
Druga metoda je statistična in uporablja izključno pojavitve besed ali besednih vrst v besedilu .
Na prvi pogled se zdi , da bi bil idealen sistem sinteza obeh prijemov , vendar se na konferenci MUC-7 ni izkazalo tako .
Pokazalo se je , da so za hitro vzpostavitev sistema primernejše statistične metode .
Njegova slabost pa je velika odvisnost od označenega korpusa , zaradi česar se prednosti in slabost obeh metod izenačita .
S pomočjo korpusa smo iskali lastna imena v slovenskem in nemškem jeziku , stavčna poravnava besedil s programom Déjà Vu pa je omogočila še iskanje imen po vzporednem korpusu .
Za izdelavo sistema za avtomatično prepoznavanje lastnih imen smo uporabili programski jezik Perl .
Glavni poudarek v raziskavi je bil na veliki začetnici .
V slovenskem jeziku nam je ta v veliko pomoč pri iskanju lastnih imen , v nemškem jeziku pa nastanejo težave , ker se tudi ostali samostalniki pišejo z veliko začetnico .
Tabela 2 prikazuje razmerje med obema jezikoma glede vseh besed v izdelanem korpusu in besed , zapisanih z veliko začetnico .
Iz tabele 2 je razvidno , kako samostalniki v nemškem jeziku povečujejo delež besed , zapisanih z veliko začetnico .
V tabeli 3 je seznam vseh besed z veliko začetnico , najdenih v dveh vzporednih stavkih iz korpusa .
Ker je bilo slovensko besedilo prevedeno v nemški jezik in ker se lastna imena praviloma ne prevajajo ( Grah 2000 , 1 ) , se v nemškem Rodilnik in lastna imena .
V nemškem jeziku se samostalniku v rodilniku doda končnica - s ( des Tisches ) .
Lastnim imenom pa se doda končnica - s tudi , kadar ta stojijo brez člena ( die Landschaft Sloweniens ) .
Če pa pred imenom stoji določni člen , se sklanja samo člen in lastno ime ne dobi končnice .
Seznam zemljepisnih imen .
Seznam je vseboval 59 imen v slovenskem jeziku in njihove prevode v nemškem jeziku , k temu pa smo dodali še 193 lastnih imen v slovenščini .
Seznam osebnih imen .
Za razliko od zemljepisnih imen smo vključili vsa osebna imena , zgodovinska in sodobna , kar predstavlja približno 35.000 različnih osebnih imen .
Ker so bila imena izluščena iz nemške enciklopedije in ker je bilo v seznam zajetih veliko imen , je prišlo do ogromnega prekrivanja med splošnimi samostalniki in lastnimi imeni .
Vsi ti primeri so v korpusu nastopali kot samostalniki , zaradi velike baze Wikipedie pa jih je ta modul ( napačno ) označil kot lastna imena .
Čeprav lastnih imen načeloma ne prevajamo , jih prevajalci pogosto prevedejo ali razložijo v oklepajih ali v narekovajih .
Druga možnost prepoznavanja imen s pomočjo okolice je opisovanje gora z nadmorsko višino .
Drug način prepoznavanja lastnih imen je različno zaporedje črk v besedi v posameznem jeziku .
Za ugotavljanje zaporedja črk v nemškem jeziku je bil uporabljen seznam osnovnega besedišča nemškega jezika , Modul je primerjal nemško besedilo s tipičnim slovenskim zaporedjem črk in če je imela beseda v prevodu netipično zaporedje črk , jo je označil kot slovensko lastno ime .
Ta modul je uporaben za prepoznavanje večbesednih lastnih imen .
Pri analizi besedila in rezultatov je bilo razvidno , da se pri številnih slovenskih večbesednih lastnih imenih prvi del konča s končnico - ska / - ske / - sko .
Čeprav smo se v prispevku bolj posvetili imenom in njihovi okolici , statističnih metod nismo povsem zanemarili .
Ta modul se je posvetil zaporedju različnih besednih vrst pred lastnimi imeni , pri čemer smo uporabili oblikoskladenjsko označen korpus .
Z nadaljnjo analizo smo se osredotočili na zaporedje besednih vrst do sedem mest pred imenom .
Razlika med statističnimi metodami in metodami z uporabo pravil je ta , da statistični sistem poda vrednost v odstotkih , ki pa ni zavezujoča .
Za posamezne module je bilo mogoče izračunati samo natančnost ( P ) , ker se posamezen modul nanaša na specifično lastnost lastnih imen in ne more zajeti vseh ostalih imen , ki te lastnosti nimajo .
Na koncu raziskave smo vse module povezali in izračunali celotno vrednost F po enačbi : /.../
Za izračun vrednosti F smo morali celotno besedilo z lastnimi imeni ročno označiti .
Velika začetnica sicer zelo pomaga pri prepoznavanju lastnih imen , ampak samo , če so imena enobesedna .
Učinkovitost smo izračunali s pomočjo vrednosti F , ki je za nemško besedilo znašala 0,64 , za slovensko pa 0,74 točke .
Pri tem je razvidno , kako lahko velika začetnica v slovenskem jeziku poveča učinkovitost sistema .
Nadaljnji korak bi bila sintaktična analiza ( ang. parsing ) za prepoznavanje večbesednih lastnih imen in označevanje teh kot eno samo enoto .
V veliko pomoč bi bil tudi večji učni korpus , na katerem bi se sistem lahko učil .
Z večjim korpusom bi se tudi povečalo število različnih lastnih imen .
Ena večjih pomanjkljivosti sistema je pomanjkanje slovničnih pravil , ki jih je v izdelanem sistemu zaenkrat deset , medtem ko razvitejši sistemi uporabljajo več tisoč takšnih pravil .
Ugotavljamo , da je luščenje lastnih imen z uporabljenimi postopki učinkovito , vendar sistem kot vsak drug potrebuje čas za rast in učenje .
Prepoznavanje z višinsko oznako .
Zaporedje črk v posameznem jeziku .
Kombinacija besednih vrst pred lastnimi imeni .
pravilno najdeni primeri 402 najdeni zadetki 592 natančnost ( P ) 0,68.
Natančnost ( P ) za celotno besedilo .
pravilno najdeni primeri .
Uporaba korpusa pri urejanju spletnega terminološkega slovarja .
Korpus informatike je odličen vir , ker zajema prispevke številnih , različnih avtorjev .
Posebnost Islovarja je v njegovi odprtosti ne samo za branje , temveč tudi za zbiranje in urejanje .
Uporabniki slovarja lahko nove izraze prispevajo , dodajajo razlage in obstoječe sestavke komentirajo .
Odprtost , značilna za objave na svetovnem spletu , je velika prednost , ker omogoča sodelovanje velike populacije .
Uredništvo Islovarja to rešuje z dogovorjenim uredniškim postopkom in tako zagotavlja , da so pri urejanju vsi zapisi v Islovar večkrat pregledani .
Zato uredništvo deluje v skladu z načeli upoštevanja zanesljivosti , kakovosti in ažurnosti vsebine .
Tematika je pretežno aktualna in se menja iz leta v leto , avtorji besedil pa so informatiki iz prakse in z univerz .
Prispevki so lektorirani , tako da žargonski izrazi zvečine niso zajeti .
Zlasti je bil izboljšan iskalnik , ki omogoča iskanje tudi po podobnih izrazih in zato uporabnikom dovoljuje tudi manjše napake pri vnosu iskanih iztrazov .
Uredniški vmesnik ima številne nove možnosti : iskanje po Islovarju po raznih kriterijih , tudi po avtorjih sestavkov , vpogled v novo zapisane sestavke in v zgodovino sprememb , delo z zbirkami .
Delo urednikov poteka neposredno v spletnem slovarju po dogovorjenem uredniškem postopku .
Slovarski sestavki imajo posebno oznako , ki kaže na stopnjo obdelave sestavka in zanesljivost vsebine .
Oznako predlog prejmejo izrazi takoj po vnosu v slovar , po prvem pregledu , ko se preverja vsebinska primernost za področje informatike , pa so izrazi označeni kot pregledani .
Naslednja značilnost uredniškega postopka je analiza zbirke izrazov , ki jo pripravi urednik ali strokovna skupina .
Zbirka je vsebinsko povezana družina , ki zajema tudi vse izraze , ki so bili uporabljeni v razlagah v tej zbirki .
Sledi slovaropisna obravnava , kjer se poskrbi za formalno pravilnost slovarskih sestavkov glede na slovaropisna priporočila in uskladitev z že urejenimi slovarskimi sestavki .
Po slovaropisni obravnavi strokovna skupina oziroma urednik , ki je pripravila oziroma pripravil zbirko , ponovno preveri pravilnost vsebine , sledi natančen formalni pregled , nakar se slovarski sestavki označijo kot urejeni .
Ker poimenovanje pojmov na tem področju nikakor ni poenoteno in uporabljajo v slovenščini razni avtorji različne izraze za isti pojem , se mora uredništvo odločati , kako ovrednotiti posamezne ustreznice in ali predlagana razlaga res ustreza sodobni uporabi .
Pri tem odločanju so pomembni dostopnost , zanesljivost in ažurnost virov .
Kot zanesljiv spletni vir obravnava uredništvo seminarska in diplomska dela , objavljena na spletu , pa tudi programe fakultet in reviji Monitor in Moj mikro .
Zaradi ažurnosti , tako pomembne pri informatiki , so samo delno uporabni dokumenti , ki so stari 5 let in več .
Zato skoraj ni uporaben referenčni korpus Nova beseda , ki strokovne izraze navaja pretežno iz dnevnika Delo , iz Monitorja pa iz 2000 do leta 2002.
Nudi nam vpogled v primere uporabe in pogostost uporabe .
Ker posvetovanja Dnevi slovenske informatike obravnavajo široko , zlasti aktualno tematiko , je korpus uporaben v velikem številu primerov .
Korpus DSI je bil narejen iz digitalnih originalov ( Microsoft Word ) konferenčnih prispevkov .
Dokumente smo najprej pretvorili v XML , nato pa s filtrom XSLT ta XML pretvorili v besedilo korpusa .
Program sicer označi vse besede v korpusu , tako znane kot neznane , vendar pa pri označevanju dela tudi napake ; največ problemov povzročajo angleške besede in okrajšave .
Korpus trenutno obsega štiri zbornike ( 2003 – 2006 ) , velikost korpusa po posameznih letnikih in skupno pa je podana v Tabeli 1.
V Tabeli 2 je podano število različnih lem , torej osnovnih oblik besed po treh najbolj zanimivih besednih vrstah , ter za vse besedne vrste .
Kot rečeno , prihaja pri lematizaciji tudi do napak , zato so razmeroma zanesljive samo leme , ki se v korpusi pojavijo večkrat ; tabela poda števila za vse leme , ter za tiste , ki se pojavijo vsaj dvakrat oz. trikrat .
Najbolj udobni in za resno delo najbolj primerni so konkordančniki , ki si jih instaliramo na lasten računalnik , vanje uvozimo korpus in ga analiziramo .
Pri našem delu smo testno uporabili orodje Wordsmith ( Scott , 2006 ) , ki sicer ponuja poleg izdelave konkordanc tudi frekvenčne sezname , sezname ključnih besed in kolokacij , vendar pa deluje samo nad izvornim besedilom , kar pomeni , da ne moremo iskati po lemah ali oblikoslovnih oznakah , niti po oznakah zahtevati izpisa .
Spletni vmesnik za iskanje uporablja strežnik korpusov CQP ( Christ 1998 ) , ki ima zelo bogat iskalni jezik , saj lahko prek regularnih izrazov ( npr. » aplikacij .
Ker je računalnik , na katerem teče servis , razmeroma močan , CQP pa optimiran na hitrost , tudi kompleksne poizvedbe vrnejo rezultat v razmeroma kratkem času .
Uporaba korpusa DSI Korpus DSI lahko uporabljamo za številne analize , ki nam pomagajo pri urejanju Islovarja .
Izbor slovenskih ustreznic Prikazali bomo dva primera , kjer smo se pri odločanju o zapisu v Islovar odločali na podlagi korpusa DSI .
Gre za izraze , ki se v informatiki pogosto uporabljajo , zlasti v besednih zvezah , pojavljajo pa se v več sinonimih .
Ima širok pomen .
Beseda v angleški pisavi obstaja v številnih slovenskih besedilih , tudi uglednih institucij , kot je COBISS ( online informacijski sistem in servisi ) , Centralna tehniška knjižnica ( online informacijski servis ) .
Angleško-slovenski slovar bibliotekarske terminologije pa besedo zapiše onlajn ( onlajn servis ) .
V elektronskih virih se online , on-line pojavljata v slovenskih besedilih z naslednjo pogostostjo : Primeri iz korpusa Nova beseda niso uporabni , zvečine gre za imena časopisov , institucij .
Korpus DSI nam omogoča boljšo preglednost uporabe in navaja pojavnosti , kot so : - online učenje na daljavo , online literarna revija , online storitve , online katalog , online prijava ; - on-line prodaja , on-line sestanek , on-line nakup , online poslovanje .
Izraz se je iz strokovne rabe prenesel tudi v splošno besedišče .
Slovar slovenskega knjižnega jezika ( SSKJ ) pozna besedo še v angleški pisavi , Slovenski pravopis iz leta 2000 pa samo še kot menedžment , kar usmerja na vodenje , upravljanje .
V informatiki se ta izraz pojavlja v številnih besednih zvezah , v angleški pisavi pa tudi kot razne slovenske ustreznice , npr. upravljanje , obvladovanje , ravnanje .
Pri urejanju slovarskih sestavkov smo se naslonili na opredelitev splošnih pomenov v SSKJ in na primere uporabe in na pogostost v korpusu DSI .
Če s funkcijo » wordlist « izpišemo število vseh pojavitev v korpusu DSI , se nam potrdi domneva , da je upravljanje v informatiki povsem uveljavljen izraz .
V Islovarju te rabe zdaj sicer ne priporočamo , se bo pa morda v informatiki uveljavila .
ravnanje ( 3 ) 3. organizacijska funkcija , katere osrednje naloge so načrtovanje , organiziranje , nadziranje dejavnosti ; sin .
Analiza pogostosti informacijskih izrazov je zelo koristna , zlasti pri pregledu samostalniških besed .
Te dobimo tako , da izberemo frekvenčna seznama našega ( specializiranega ) korpusa in korpusa splošnega jezika ( v našem primeru je bil to vzorec iz korpusa FIDA ) , nato pa Wordsmith prek statističnih mer določi , katere besede ( in s kakšno mero » ključnosti « ) se v specializiranem korpusu pojavijo večkrat kot pričakovano glede na splošno besedišče .
Začetek seznam ključnih besedah korpusa DSI , urejenega po ključnosti , je podan v Sliki 2.
V seznamu sicer vidimo , da se v korpusu večkrat uporabljajo nekatere funkcijske besede , verjetno zaradi drugačnosti stila člankov od pretežno neznanstvenih besedil v FIDI , ter dosti več angleškega izrazja , za nas bolj zanimivi pa so samostalniki , kjer je seznam lepo razporejen .
Izrazi , ki so na vrhu , so zares temeljni za informatiko .
Upravljanje se je pojavilo 911 krat v letu 2005 , v letu 2006 pa kar 1316 krat .
Zelo veliko se uporablja aplikacija ( ki je Islovar ne priporoča , temveč usmerja na uporabniški program ) : v korpusu 2003−2005 729 krat , korpusu 2003−2006 pa kar 1412 krat .
Pridevniške besede nastopajo v terminološkem slovarju predvsem v besednih zvezah .
Iz korpusa DSI smo izluščili 142 tipičnih najpogostejših pridevniških besed , pri katerih opažamo podobno razporeditev kot pri samostalnikih .
S temi pridevniškimi besedami lahko poiščemo vse možne besedne zveze , ki nastopajo v korpusu in jih primerjamo z vsebino Islovarja .
V Islovarju že najdemo 28 različnih zvez s podatkovni , npr. podatkovna baza , podatkovno skladišče , podatkovno rudarjenje .
V korpusu DSI pa so še številne druge ( skupno 142 ) , npr. podatkovni agregat , podatkovni element , podatkovni strežnik , podatkovno upravljanje .
Zborniki DSI zajemajo predvsem organizacijsko informacijske teme , ki so v času odvijanja posvetovanja aktualne .
Zato korpusa DSI ne moremo uporabiti za odločanje o številnem izrazju , ki tudi sodi v Islovar .
V korpusu DSI ga najdemo samo 37 krat v nekaterih splošnih pomenih .
Korpus Nova beseda navaja pomnilnik 2619 krat , primeri pa so iz časnika Delo in revije Monitor .
Delo navaja pomnilnik v najbolj splošnem pomenu .
Monitor je zanesljiv vir , vendar v tem primeru slabo uporaben , ker so primeri iz leta 2000 – torej očitno zastareli .
Nova zbirka Besede slovenskega jezika najde primere za pomnilnik 13 krat , pretežno iz najdi.si .
Med drugim navaja brisljiv , nebrisljiv pomnilnik iz istega , vendar nezanesljivega vira .
Pri zbiranju in urejanju izrazja za terminološki slovar informatike se uredniki naslanjajo predvsem na dostopne elektronske informacijske vire .
Pomembna kriterija pri odločanju o uporabi teh virov sta ažurnost in zanesljivost .
Letnik Besedil Odstavkov Stavkov Besed .
ki je dostopen po telekomunikacijskem omrežju , npr. online banka .
Ključne besede v korpusu DSI .
Poizvedba , ki poišče pridevnike v primerniku in besedne oblike od leme , ki se začne na man oz. men je [ msd = " A.c. * " ] [ lemma = " m [ ae ] n. * " ] .
Slovenska odvisnostna drevesnica : prvi rezultati .
Članek obravnava rezultate prve faze gradnje korpusa Slovenske odvisnostne drevesnice ( Slovene Dependency Treebank , SDT ) , ki trenutno obsega 2.000 povedi oz. približno 30.000 besed .
Korpus SDT zaenkrat sestavlja del oblikoskladenjsko označenega vzporednega korpusa MULTEXT-East , tj. prvi del prevoda romana 1984 Georgea Orwella .
Poleg tega potrebujemo podatke , ki jih skladenjsko označeni korpusi nudijo , tudi za razvoj jezikovnih tehnologij , saj je na njih mogoče testirati in predvsem šolati avtomatske skladenjske označevalnike , pri čemer dajejo v zadnjem času zelo obetavne rezultate zlasti statistični označevalniki .
Zaenkrat obstaja kar nekaj problemsko zamejenih opisov skladnje slovenščine , ki sledijo različnim jezikoslovnim usmeritvam , in ( nesočasnih ) slovnic slovenskega jezika .
Najbolj celovita je Slovenska slovnica ( Toporišič , 1984 ) , najizčrpnejša opisa različnih vidikov slovenske skladnje pa sta Nova slovenska skladnja ( Toporišič , 1982 ) ter Vezljivost v slovenskem jeziku ( s poudarkom na glagolu ) ( Žele , 2001 ) , poleg tega pa so bili številni skladenjski fenomeni raziskani zlasti v okviru generativne paradigme .
Do nedavnega tudi skladenjsko označenega korpusa slovenskega jezika še nismo imeli , saj so bili dostopni samo oblikoskladenjsko označeni in lematizirani korpusi slovenščine ( Jakopin in Bizjak , 1996 ; Lönneker , 2005 ; Erjavec et al. , 1998 ; Erjavec , 2006 ) .
Z gradnjo korpusa Slovene Dependency Treebank smo začeli leta 2003.
V naslednji fazi smo se posvetili ročnemu površinskoskladenjskemu označevanju 2.000 povedi oz. 30.000 besed korpusa in pripravi priročnika za površinskoskladenjsko označevanje slovenskega jezika .
Rezultati dela , ki je bilo zaključeno pred kratkim ( Džeroski et al. , 2006 ) , so že vidni , saj je bil korpus že uporabljen v dveh raziskavah .
Čeprav je zaenkrat označen relativno majhen nabor povedi , smo v času od začetka projekta uspeli ustvariti za skladenjsko označevanje potrebno infrastrukturo .
Projekt Slovenska odvisnostna drevesnica namenskega vira financiranja zaenkrat nima , zato razvijanje lastnega modela označevanja ni bilo mogoče , hkrati pa bi bila priprava takšnega sistema otežena zaradi kadrovskih in časovnih omejitev .
Čeprav za veliko germanskih ter romanskih jezikov in za nekatere slovanske jezike , npr. bolgarščino ( Simov et al. , 2002 ) in ruščino ( Boguslavsky et al. 2000 ) , skladenjsko označeni korpusi in programska orodja za njihovo analizo že obstajajo , smo za slovenščino našli vzornika v projektu Prague Dependency Treebank ( LDC , 2001 ) .
Korpus SDT je zaenkrat označen le na površinskoskladenjski ravni .
Priprava takšnega priročnika je zelo zahtevna in zamudna , potekati pa mora hkrati z ročnim označevanjem , kot nekakšna sinteza analize , opisa in , posledično , " izčiščenja " označevalnega sistema na podlagi pridobljenih izkušenj .
Za korpus PDT so javno dostopen priročnik za površinskoskladenjsko označevanje ( v češčini ) pripravili leta 1997 ( Hajič et al. , 1997 ) .
Proces prilagajanja sistema za površinskoskladenjsko označevanje razumemo kot permanenten proces , ki bo , glede na to , da korpusi kažejo , da je jezik v skladenjskem smislu veliko bolj raznolik , pravila pa mnogo manj določljiva , kot kažejo mnogi sedanji jezikoslovni opisi , trajal še kar nekaj časa .
Definirati bo treba način označevanja struktur , specifičnih za slovenščino , češke zglede bo treba nadomestiti s slovenskimi , vse druge spremembe priročnika AAL , zlasti tiste , ki so posledica razlik ( v interpretaciji ) jezikovnih sistemov , pa bomo morali zelo natančno dokumentirati .
V trenutni fazi dela prilagajamo samo označevanje površinskoskladenjske ravni , načrtujemo pa , da bomo korpus kasneje označili tudi pomenskoskladenjsko .
Glede na spremembe na površinskoskladenjski ravni bo treba prilagoditi tudi nekatere pomenskoskladenjske oznake , vendar pričakujemo , da bo zaradi večje stopnje " univerzalnosti " te ravni prilagoditev manj kot sprememb na površinskoskladenjski ravni .
5 Vpeljani označevalni sistem je primeren predvsem za skladenjsko označevanje pisnih tekstov , za analizo govornih korpusov pa ga bo treba dodatno spremeniti ( ali morda vpeljati novega ) .
Ker za slovenščino pregleden in izčrpen opis skladnje govornih tekstov še ne obstaja in ker niti dileme v zvezi z označevanjem govornih korpusov na " nižjih " ravneh , ki so predpogoj za skladenjsko označevanje oz. njegova predstopnja , večinoma še niso razrešene , priprave skladenjsko označenega govornega korpusa pri projektu Slovenska odvisnostna drevesnica zaenkrat ne načrtujemo , kljub temu da se glede na tendenco razvoja korpusnega jezikoslovja pomembnosti področja zavedamo .
Za delo s korpusom PDT je bil razvit urejevalnik TrEd ( Hajič et al. , 2001 ) , ki je javno dostopen , zato ga uporabljamo tudi pri projektu Slovenska odvisnostna drevesnica .
Program je zelo konfigurabilen ter podpira precejšnje število vhodnih in izhodnih formatov ( npr. XML / TEI , omogoča pa tudi prikaz skladenjskih dreves v formatu GIF ) .
Program izkorišča oznake , ki so bile prvotnim besednim oblikam pripisane na oblikoskladenjski ravni in ki dajejo sorazmerno dobro informacijo o ( potencialni ) skladenjski strukturi povedi , in s pomočjo te informacije prvotnim besednim oblikam pripiše analitične oznake in odvisnostna razmerja .
Kasneje smo analitične oznake TrEdovih datotek pridružili izvornim podatkom , nastali korpus pa je bil nato zopet pretvorjen v dokument XML ( glej razdelek 3.2 ) in trenutno inačico korpusa SDT .
Kot izvorni korpus za površinskoskladenjsko označevanje smo zato izbrali slovenski del oblikoskladenjsko označenega vzporednega korpusa MULTEXT-East ( Erjavec , 2004 ) , ki vsebuje oblikoskladenjsko označen prevod romana 1984 Georgea Orwella .
Razdvoumljanje oblikoskladenjskih oznak in lem glede na kontekst je potekalo v dveh fazah , najprej avtomatsko , nato pa so bile oznake pregledane še ročno .
Korpus glede na kvaliteto in obseg že vsebovanih oznak sicer nudi dobro osnovo , ima pa takšen izbor tudi nekaj očitnih pomanjkljivosti : korpus sestavlja eno samo prevodno umetnostno besedilo , ki vsebuje tudi izmišljen jezik ( novorek ) , poleg tega pa so za tekst značilni dolgi stavki in premi govor , roman pa je na nekaterih mestih tudi nekoliko slabše preveden in zlektoriran , kar njegovo označevanje zelo otežuje .
Verzija 0.4 korpusa SDT obsega 1998 povedi ( 29.991 besed in 6.563 ločil ) , ki so bile ročno površinskoskladenjsko označene , že izvorni MULTEXT-East pa ročno lematiziran in oblikoskladenjsko označen .
Dostopen je v nekaj različnih formatih , kanoničen format je format korpusa MULTEXT-East TEI P4 z dodanimi atributi pojavnic , v katerih je kodirana kazalka na neposredno nadrejeno pojavnico ( parent node , atribut dep ) in tip skladenjske odvisnosti med starševsko in hčerinsko pojavnico ( vloga pojavnice na površinskoskladenjski ravni , atribut afun in , za koordinacije , parallel ) .
Primer z začetka korpusa je podan na Sliki 2.
Korpus SDT je sestavljen iz kolofona TEI , ki korpus dokumentira , in treh dokumentov TEI .
Prvi vsebuje formalne oblikoskladenjske specifikacije korpusa MULTEXT-East , ki definirajo nabor oznak za oblikoskladenjske kategorije , uporabljene pri označevanju korpusa ( torej vrednosti atributa ana ) .
Drugi dokument prinaša seznam možnih analitičnih oznak ( afun in parallel ) .
Tretji dokument obsega zaenkrat edino ( dokončno urejeno ) komponento skladenjsko označenega korpusa , kot rečeno , 1. tretjino slovenskega prevoda romana 1984.
Prioriteta bo še naprej prilagajanje priročnika za površinskoskladenjsko označevanje ( v prvi fazi smo pozornost posvečali predvsem prilagajanju sistema označevanja struktur , ki jim v slovenskem jezikoslovju navadno pripisujemo vlogo povedka ) , k delu bo zato treba pritegniti tudi več novih označevalcev , poleg tega pa bomo pripravili nov tekst za označevanje , s katerim bomo korpus SDT razširili .
Oblikovanje korpusa , ki bi bil glede dokumentiranosti in označevanja primerljiv s korpusom Penn Treebank , bi omogočilo komparativne analize in poenostavilo druge raziskave .
Slovensko odvisnostno drevesnico bi radi uporabili čim prej – za to je pomembno , da podatke za razvoj računalniških aplikacij za specifično rabo pridobimo iz tekstov , povezanih z istim specifičnim področjem .
Za njegovo označevanje smo se odločili , ker so bile oblikoskladenjske oznake vzorca ročno popravljene in ker je bil korpus dostopen , hkrati pa je aplikativno zanimiv – z nastankom velikega vzporednega skladenjsko označenega korpusa bi bile mogoče raziskave strojnega prevajanja in druge medjezikovne raziskave .
Z vidika reprezentativnosti je izbira korpusa seveda manj ustrezna , saj ga sestavljajo prevodni teksti , zato je tipologija dobljenih stavčnih vzorcev za slovenščino ( lahko ) vprašljiva , poleg tega pa so upravno-pravni teksti v skladenjskem smislu specifični ( obsežne naštevalne enote ter " tabelarnost " in siceršnja skrajna formaliziranost določenih delov teksta npr. povzročajo , da je precejšen del povedi interpretiran kot niz elips , poleg tega pa velik del vzorca sestavljajo zelo obsežne in kompleksne samostalniške zveze ) .
Status normativne reference , rečeno pogojno , bi lažje pripisali korpusu slovenskih časopisnih besedil , ki ga bomo označevali v naslednji fazi dela , vzorec reprezentativnejših besedilnih tipov pa bo ( verjetno ) vzet iz korpusov Fida ali FidaPlus .
Tradicionalni skladenjski razčlenjevalniki iz 70. in 80. let so temeljili na ročno napisanih pravilih in leksikonu , vendar pa je bilo zanje tipično majhno pokritje pravil , poleg tega niso bili odporni na napake v besedilih , na neznane besede in konstrukcije , niso pa tudi semantično oz. kontekstno razdvoumili besedila , kar pomeni , da je dobila ena poved veliko število različnih analiz .
Samo za nekaj največjih jezikov so bili razčlenjevalniki ( pravila , leksikon ) izdelani do te mere , da so postali uporabni za analize odprtega besedila , saj zahteva izdelava potrebne infrastrukture ogromno dela in sredstev .
Ti pristopi so robustni in ( seveda ob izdelanem označenem korpusu ) ceneni , vendar pa dostikrat delajo " neumne " napake , naučeni modeli pa so netransparentni .
Že prototipna inačica SDT 0.1 je bila uporabljena v raziskavi o stopnji natančnosti skladenjskega razčlenjevanja ( Chanev , 2005 ) , kasneje pa tudi v drugih raziskavah z razčlenjevalnikom MALT ( Nivre in Hall , 2005 ) .
CoNLL vsako leto organizira , po vzoru sedaj že številnih drugih konferenc , odprto tekmovanje ( shared task ) iz nekega področja strojnega učenja jezikovnih podatkov , pri čemer je bilo tekmovanje v letu 2006 posvečeno učenju odvisnostnih slovnic .
Kot baze podatkov so bili testirani korpusi 13 jezikov , od daljno - in bližnjevzhodnih do obilice evropskih , tudi češčina in slovenščina .
Tako učni kot skriti korpus sta vsebovala tudi oblikoskladenjske oznake in leme , kar je sistemom razčlenjevanje lahko olajšalo .
Ocenjevanje je potekalo z enotnim programom , ki je meril rezultat ( v odstotokih ) za : 1. označeno povezanost ( OP ) : pravilne so tako odvisnostne povezave kot tudi oznake ( labeled attachment score ) ; 2. neoznačeno povezanost ( NP ) : pravilne so odvisnostne povezave , pravilnost oznak ni relevantna ( unlabeled attachment score ) ; 3. oznake ( OZ ) : pravilne so oznake , pravilnost odvisnostnih povezav ni relevantna ( label accuracy ) .
New York , 8 – 9 junij 2006 , http://www.cnts.ua.ac.be/conll/ Opis vseh sistemov ( zbornik ) in rezultati so dostopni na http : / / nextens.uvt.nl / ~ conll / Tekmuje se v natančnosti , ki jo razčlenjevalniki pri analizi veliko različnih drevesnic dosežejo , vendar pa tovrstno tekmovanje daje posredno tudi informacije o natančnosti označevanja korpusov samih in o tipu razčlenjevalnikov , ki pri določeni predstavitvi jeziko ( slo ) vnih podatkov dosegajo najboljše rezultate .
Najboljše rezultate , tako v povprečju za vse jezike kot tudi za češčino in slovenščino , sta imela dva sistema : 1. dvostopenjski razlikovalni razčlenjevalnik ( two-stage discriminative parser ) ( McDonald et al. , 2006 ) ; 2. označeno psevdoprojektivno odvisnostno razčlenjevanje z uporabo SVM ( labeled pseudo-projective dependency parsing with support vector machines ) ( Nivre et al. , 2006 ) .
McDonald et al. ( 2006 ) imajo npr. najboljši rezultat za japonščino in bolgarščino , najslabšega pa za češčino , danščino , slovenščino , turščino in , končno , arabščino , pri čemer so razlike odraz ne samo različnosti jezikov , temveč tudi velikosti in raznovrstnosti korpusov , teoretičnih izhodišč in doslednosti označevanja .
Tabela kaže , da rezultati za slovenski jezik zaostajajo za rezultati za češčino , vendar je to delno pričakovano zaradi ogromne razlike v velikosti korpusov .
V realnih sistemih se te oznake določajo strojno , pri čemer pride tudi do napak .
Čeprav korpus ni obsežen , je že bil uporabljen v nekaj raziskavah .
Da bi bil maksimalno uporaben , smo ga pretvorili v tri formate , format TEI P4 , format urejevalnika dreves TrEd , tj. format fs , in v tabularno datoteko ( tabular file ) , format , uporabljen v raziskavah v okviru CoNLL-X .
SDT je opisan na domači strani projekta http://nl.ijs.si/sdt/ in je prosto dostopen za raziskovalne namene .
Še naprej se bomo ukvarjali s prilagajanjem priročnika za označevanje , razširitvijo korpusa z novimi teksti , poleg tega pa se bomo začeli posvečati tudi raziskavam indukcije pravil z avtomatskim skladenjskim razčlenjevalnikom .
SDT v kanoničnem formatu TEI ; začetek korpusa " Bil je jasen , mrzel aprilski dan …".
Za morebitne napake , ki se v članku še vedno pojavljajo , sta odgovorna sama .
Kolikor je avtorjema članka znano , za noben jezik skladenjsko označeni govorni korpus še ne obstaja , obstajajo le načrti zanj ( npr. pri projektu PDT ) .
Število označenih datotek je za označevalca pomembno merilo napredka dela .
Oblikoslovno označevanje slovenskega jezika : primer korpusa SVEZ-IJS .
Za slovenski jezik so raziskave te , za jezikovne tehnologije izredno pomembne , komponente še v povojih .
Testna domena je prosto dostopen vzporedni angleško-slovenski korpus SVEZ-IJS , ki vsebuje pravni red Evropske unije .
Tako ima npr. besedna oblika hotel tri možne oznake : dve samostalniški ( ednina imenovalnika in tožilnika ) in eno glagolsko ( deležnik na - l moškega spola ) , v stavku Šel je v hotel pa mora biti ta pojavnica označena kot samostalnik v tožilniku .
Oblikoslovno označevanje je bilo najprej razvito za angleški jezik , v katerem so nabori oblikoslovnih oznak razmeroma majhni ( ~50 , odvisno od specifike posameznih naborov oznak ) , problemi pa predvsem v dvoumnosti glede besedne vrste .
Pri pregibno bogatih jezikih , kot sta češčina ali slovenščina , je različnih oznak tudi po več tisoč , največji problem pa je , vsaj na prvi pogled , predvsem v razdvoumljanju sinkretičnih pregibnih oblik , torej v okviru besedne vrste .
Večina sodobnih oblikoslovnih označevalnikov se modela določenega jezika nauči , in to iz ročno označenih korpusov , po možnosti podprtih z oblikoslovnimi leksikoni .
Takšni programi so sicer robustni ( analizirajo tudi njim neznane besede oz. besedne zveze in so odporni na napake v besedilu ) , vendar pa delajo napake .
Natančnost označevanja je odvisna od velikosti učne množice , konkretnega nabora oznak , besedilnozvrstne podobnosti testne in učne množice in seveda od izbranega algoritma za učenje in označevanje .
Tekst v slovenskem jeziku so verjetno prvi skušali oblikoslovno označiti na ZRC SAZU ( Jakopin in Bizjak , 1997 ) , in sicer z v urejevalnik EVA vgrajenim označevalnikom , ki deluje na osnovi pravil in velikega podpornega leksikona .
Označevalnik je polavtomatski , saj se pri neznanih besedah in besedah , ki mu jih ni uspelo razdvoumiti , zanaša na intervencijo človeka .
Prvi poskusi ( Erjavec et al. , 2000 ) so pokazali , da ima od štirih preizkušenih javno dostopnih označevalnikov najboljše lastnosti statistični označevalnik TnT ( Brants , 2000 ) , ki je dosegel stopnjo natančnosti 89,2% , pri čemer je bila testna množica ravno tako iz romana » 1984 « .
Kolikor nam je znano , je edina druga raziskava , ki je imela namen evalvirati avtomatsko oblikoslovno označevanje slovenskega jezika , Lönneker ( 2005 ) , ki opisuje uporabo označevalnika TreeTagger ( Schmid , 1994 ) na ročno označenem korpusu ZRC SAZU , podaja pa tudi primerjavo z rezultati iz raziskave Erjavec et al. ( 2000 ) .
K primerjavi rezultatov raziskave Lönneker ( 2005 ) z našimi rezultati se bomo vrnili v razdelku 5.
V pričujočem članku ponavljamo evalvacijo označevanja iz raziskave Erjavec et al. ( 2000 ) v razširjeni obliki na novem korpusu , in sicer na vzorcu iz slovenskega dela korpusa SVEZ-IJS ( Erjavec , 2006 ) .
V nadaljevanju naprej predstavljamo program totale ( Erjavec et al. , 2005 ) , ki ga uporabljamo za avtomatsko označevanje , nato korpus SVEZ-IJS in testni vzorec iz tega korpusa , ki smo ga ročno popravili .
Temu sledi analiza napak pri avtomatskem označevanju , opis pretvorbenega programa , ki popravi najbolj pogoste napake , primerjava stopenj natančnosti , doseženih pri posameznih eksperimentih , ter nekaj zaključkov .
Vzorec je bil avtomatsko označen s programom totale in nato ročno pregledan in popravljen .
Takó oblikoslovno označevanje kot lematizacija se izvajata s programi , ki se modela jezika naučijo iz vnaprej pripravljenih podatkov , torej iz ročno označenega korpusa in oblikoslovnega leksikona .
Korpus in leksikon vsebujeta oblikoslovne oznake MULTEXT-East za slovenski jezik , in sicer se v korpusu pojavi 1.023 različnih oznak , v leksikonu pa je predvidenih kar 2.083 oznak .
Oznake so izvorno angleške ( tj. sestavljajo jih prve črke angleških besed ) in so sestavljene iz niza črk , pri čemer prva črka označuje besedno vrsto , ostale pa , glede na besedno vrsto , vrednosti njenih atributov .
Tako npr. oznaka Ncmsn pomeni : PoS = noun , type = common , gender = masculine , number = singular , case = nominative , ekvivalentna slovenska oznaka Somei pa : besedna vrsta = samostalnik , vrsta = občno ime , spol = moški , število = ednina , sklon = imenovalnik .
Vzporedni angleško-slovenski korpus SVEZ-IJS , http://nl.ijs.si/svez/ ( Erjavec , 2006 ) , zajema pravni red EU , t. i. Acquis Communautaire .
Korpus je sestavljen iz poravnanih segmentov v angleškem in slovenskem jeziku , ki tipično vsebujejo eno poved ali del povedi .
Za evalvacijo označevanja smo iz avtomatsko označenega korpusa najprej izdvojili vzorec , v katerega smo vključili po 3 zaporedne slovenske segmente na vsakih 1.000 segmentov , s čimer smo zajeli približno 3 ‰ slovenskega besedila v korpusu .
Ta vzorec je bil potem izvožen v Excelovo tabelo in tam ročno popravljen , pri čemer smo obdržali prvotne , avtomatsko pripisane oznake .
Podrobna analiza velikosti vzorca je podana v Tabeli 1 , kjer v stolpcu n npr. vidimo , da vsebuje vzorec približno pol milijona znakov in nekaj več kot 15.000 pojavnic , od katerih je skoraj šestina ločil , ter da je različnih besednih oblik okoli 5.200 , lem pa 3.000.
Stolpec Razmerja podaja ulomke različnih ( v stolpcu n prikazanih ) števil in nas s tem seznanja npr. s povprečno dolžino segmenta v znakih ( 625 ) oz. pojavnicah ( 19 ) ali pa prikazuje , koliko različnih besednih oblik v povprečju pokriva ena lema ( 4.4 ) .
Stopnja napake pri avtomatskem označevanju je seveda zelo odvisna od tega , ali se je neka besedna oblika v učni množici oz. leksikonu pojavila ali pa je sistemu povsem neznana .
Tako so okrajšave z oblikoskladenjskega vidika tipično samostalniki , poleg tega pa kategorija Y zajema tudi kratice , ki lahko skladenjsko delujejo kot celotne fraze , kot npr. itd.
Druga posebnost kategorij , označenih z X in Y , pa je število pojavnic , ki jih zajemata , saj take pojavnice v korpusu SVEZ-IJS tvorijo razmeroma velik del besedila , 4,5% .
Ob tem je pomembno ločiti dve vrsti napak : pri prvi vrsti je oblikoslovna oznaka sicer napačna , vendar je pravilno določena vsaj besedna vrsta , pri drugi vrsti pa je napačna tudi oznaka besedne vrste .
Program pri prvi vrsti napak npr. napačno določi sklon ali število ( ali oboje ) ali pa ( pod ) vrsto besedne vrste , npr. lastna imena proti občnim imenom , kakovostni pridevniki proti vrstnim pridevnikom , pri drugi vrsti napak pa npr. proglasi samostalnik za glagol ali pa neuvrščeno besedo za samostalnik .
Razlikovanje med temi napakami je koristno zato , ker je za marsikatero potencialno uporabo oz. uporabnika oblikoslovnih oznak pomembna samo besedna vrsta , ne pa npr. pregibne lastnosti .
Po najbolj strogi oceni ima sistem natančnost 86,6% .
Lematizacija ima celo večjo natančnost , 98,4% , kot označevanje besedne vrste , saj veliko napak označevalnika na pravilno lematizacijo ne vpliva , je pa natančnost za neznane besede zopet precej manjša .
V zadnjih dveh vrsticah vidimo , da so za napačno delovanje lematizatorja skoraj v celoti krive napačne oblikoslovne oznake : samo v treh primerih se zgodi , da je oblikoslovna oznaka pravilna , lema pa ne .
Zaradi pomembnosti napak pri označevanju besedne vrste bomo analizo le-teh ločili od tistih napak , ki nastanejo pri označevanju v okviru besedne vrste .
Števila v diagonali tako predstavljajo napake , ki se zgodijo pri označevanju v okviru besedne vrste , ostale pa kažejo , katere zamenjave so najbolj pogoste , na primer , da so bili samostalniki petindevetdesetkrat označeni kot glagoli .
Tabela kaže , da je označevanje ( glede na nabor ) odprtih besednih vrst ( zapisane so v krepkem tisku ) bistveno manj uspešno kot označevanje funkcijskih besed , kar je razumljivo , saj je večina slednjih označevalniku poznana .
Do neke mere je izjema zaimek , pa še ta samo glede stopnje napak pri označevanju v okviru besedne vrste .
Razlog za majhno absolutno natančnost oznak za zaimek je , da imajo oblikoslovne oznake te besedne vrste izrazito razvejano strukturo , tako da zajemajo zaimki skoraj polovico ( čez tisoč ) vseh oblikoslovnih oznak , in da so besedne oblike vseh zaimkov sicer vsebovane v leksikonu , ne pa tudi v učnem korpusu , zato so napake pri sinkretičnih pregibanjih pogoste .
Največkrat je napačna besedna vrsta pripisana samostalnikom , števnikom , neuvrščenim besedam in okrajšavam .
Pri ostalih treh besednih vrstah , namreč števnikih , neuvrščenih besedah in okrajšavah , so razlogi za veliko število napak podobni .
Besede so po eni strani skoraj vedno neznane ( še posebej zato , ker jih niti učni korpus niti leksikon tako rekoč ne vsebujeta , z izjemo omejenega števila števnikov ) , po drugi strani pa so oblikoskladenjsko slabo definirane , kar še posebej velja za neuvrščene besede in okrajšave .
Napake v okviru besednih vrst .
V tem razdelku bomo bolj podrobno pogledali najbolj pogoste napake pri označevanju v okviru besedne vrste .
Kot kaže Tabela 4 , je največ napak pri samostalnikih , ki imajo v oznakah MULTEXT-East pet atributov : vrsta , spol , število , sklon in živost .
Kar 85% napak je vezanih na sklon , čeprav tudi v kombinaciji s številom , podobno pa je tudi pri pridevnikih in zaimkih , čeprav je pri teh večkrat napačen tudi spol .
Bolj podrobna analiza teh napak je pokazala , da je v velikem številu primerov pravilno oznako pravzaprav nemogoče ugotoviti samo na osnovi lokalnega konteksta , torej takega , ki ga uporablja TnT .
Ostale besedne vrste so za označevanje manj težavne .
Pri glagolih sta najbolj problematični lastnosti spol in število .
Pretvorbeno označevanje s pravili Ključno vprašanje seveda je , kako izboljšati natančnost označevanja .
Kot preizkus v to smer smo implementirali program , ki popravi nekatere napake označevalca .
V tem razdelku opisujemo delovanje programa in evalviramo rezultate .
Program , napisan v programskem jeziku Perl , vzame kot vhodne podatke že označeno besedilo , s čimer ima dostop do podatkov o obliki in tipu ( ločilo , beseda ) vsake pojavnice , za besede pa lahko preveri še pripisano ( mogoče napačno ) oblikoslovno oznako in frekvenco besedne oblike v učnih podatkih ( 0 = neznana beseda ) .
Vsako pravilo je oblike » če pogoj , potem pripiši oblikoslovno oznako , drugače naslednje pravilo « .
V pogojih uporabljamo funkcijo feature , ki vzame kot prvi argument lastnost , kot drugi pa pojavnico ter vrne vrednost te lastnosti za pojavnico .
Prvo pravilo oblikoslovno oznako popravi v oznako Mc---r , ki označuje rimsko številko , saj je bilo napačno prepoznavanje le-teh eden večjih problemov pri označevanju števnikov .
Pogoj določa , da mora biti beseda neznana ( $ freq == 0 ) , obenem pa mora biti besedna oblika ( lastnost idwrd ) pojavnice , katere oznako popravljamo ( $ sent [ $ focus ] ) , sestavljena samo iz znakov I , V in X ( regularni izraz / ^ [ IVX ] + $ / ) .
Zaenkrat smo implementirali pet pravil , ki izhajajo iz analize nekaj najbolj pogostih , pa obenem najbolj » popravljivih « napak .
Prvi dve pravili sta že bili opisani , tretje spremeni oznako v okrajšavo , če je neznana beseda sestavljena iz številk in največ treh črk ( npr. 2002 / 917 / ES ) , četrto spremeni oznake vseh namenilnikov v oznake za samostalnike moškega spola v osnovni obliki , peto pa spremeni oznako a , če mu sledi ločilo , tako , da mu namesto vezniške vloge podeli vlogo okrajšave .
Tabela 5 podaja rezultat popravkov pri označevanju s temi petimi pravili .
Napake v oblikoslovnih oznakah se z uporabo programa za popravke torej zmanjšajo za 287 pojavnic .
Izboljšanje natančnosti za besedne vrste pa je dosti bolj opazno : z uporabo petih pretvorbenih pravil se ta izboljša za 38,4% oz. se z 94,4% poveča na 96,6% absolutne natančnosti .
Primerjave natančnosti označevanja .
V Tabeli 6 podajamo pregled in primerjavo natančnosti označevanja po oblikoslovnih oznakah in besednih vrstah .
Prva vrstica predstavlja rezultate iz raziskave Erjavec et al. ( 2000 ) , v kateri je bil tako za učno kot za testno množico uporabljen korpus MULTEXT-East , tj. roman » 1984 « .
Druga vrstica prikazuje glavno evalvacijo označevanja s programom TnT / totale na vzorcu iz korpusa SVEZ-IJS .
Robustna rešitev problema označevanja okrajšav in tujejezičnih citatov bi bila zato prej v izdelavi dodatnega modula , ki označevalniku na osnovi tipografskih značilnosti pojavnic dopolni leksikon za konkreten dokument .
Zato je zanimivo pogledati še , kakšna bi bila natančnost označevanja , če bi pojavnice kategorij X in Y iz evalvacije izpustili .
Poskusa se v marsičem razlikujeta ( v naboru oblikoslovnih oznak , velikosti učnega korpusa in sestavi testnega korpusa ) , zato je natančnosti težko neposredno primerjati , vseeno pa razlika v rezultatih preseneča , posebej glede na to , da je učni korpus pri poskusu ZRC / TreeTagger vseboval preko milijon besed in je bil torej desetkrat večji kot naš .
Zdi se nam verjetno , da je dodaten razlog tudi to , da je označevalnik TnT boljši kot TreeTagger , predvsem pri označevanju neznanih besed .
Očiten korak k doseganju večje natančnosti bi bil tudi povečanje učnega korpusa in raznovrstnosti besedil v njem , pri čemer je glavna težava zamudnost ( cena ) takšnega označevanja .
Zanimiv pristop , in javno dostopen program , je opisan v raziskavi Brill ( 1992 ) in je bil tudi izhodišče za naš pretvorbeni program .
Bistvena razlika pa je , da smo mi pravila napisali ročno , program , opisan v omenjeni raziskavi , pa se pretvorbenih pravil nauči na osnovi učne množice , pri čemer lahko sami definiramo lastnosti , glede na katere naj se program uči .
Drugačen pristop , ki se je tudi že uporabljal za jezike z bogatim naborom oznak in majhno učno množico , je opisan v Tufiş ( 2006 ) .
Pristop predvideva redukcijo števila oblikoslovnih oznak , vendar tako , da je polne oznake še vedno možno rekonstruirati iz leksikona .
Enota n Razmerje Znakov 513.650 A Segmentov 821 625 A / B B Vseh pojavnic 15.765 19 C / B C Ločil ( pojavnic ) 2.346 15% C č Besed ( pojavnic ) 13.419 85% C D Besed ( različnic ) 5.189 2,59 D / E E Lem ( različnic ) 3.062 4,38 E / F F Oblik .
oznak ( različnic ) 452 29,69 D / G G Tabela 1 : Testni podatki , osnovna statistika .
Testni podatki , znane / neznane besede in statistika po besednih vrstah .
Besedna vrsta Oblikoslovna oznaka Popravljeno 291 289 Pokvarjeno 4 4 Zamešano 14 16 Enako 2 2 Izboljšanje 287 285.
Oblikoslovna oznaka Besedna vrsta 1984 : TnT 89,2% 96,6% SVEZ-IJS : TnT 86,6% 94,4% SVEZ-IJS : TnT + Trans 88,9% 96,6% SVEZ-IJS – X , Y : TnT 89,4% 97,6% ZRC ISJ : TreeTagger 83,6% ?.
Oznake je možno avtomatsko preslikati oz. prevesti v slovenski jezik , in take se uporabljajo v korpusu FIDA .
V prispevku predstavljamo postopek za izbiro govornih segmentov pri polifonski združevalni sintezi govora , pri katerem smo s poenostavitvami postopkov iskanja poti po grafu vplivali na hitrost postopka za izbiro govornih segmentov tako , da se to čim manj odraža na kvaliteti govora .
Izbrani segmenti so še vedno optimalni , le cene lepljenja segmentov , na katerih temelji izbira , so manj natančne .
Omejitve pri procesnih zmogljivostih in količini pomnilnika , ki jih srečamo pri vgrajenih sistemih , vplivajo tudi na načrtovanje postopka za izbiro govornih segmentov [ Lévy04 ] .
Če bo postopek za izbiro govornih segmentov zelo poenostavljen in s tem zelo hiter , bomo lahko v istem času opravili izbiro segmentov pri večji govorni zbirki .
Prekomerna poenostavitev postopka pa lahko povzroči izbiro neprimernih govornih segmentov in zato poslabša kvaliteto govora kljub uporabi večje govorne zbirke .
V nadaljevanju bomo predstavili postopek za izbiro govornih segmentov , pri katerem smo uspeli vplivati na hitrost postopka za izbiro govornih segmentov , vendar tako , da se to čim manj odraža na kvaliteti govora .
Izbrani segmenti so še vedno optimalni , le cene lepljenja segmentov , na katerih temelji izbira , so manj natančne .
Rezultate primerjave hitrosti postopkov iskanja govornih segmentov podajamo v zaključnem poglavju .
Izbira govornih segmentov pri polifonski združevalni sintezi govora .
Vhodni podatki , ki jih postopek za izbiro govornih segmentov sprejeme od modulov za jezikovno procesiranje v sintetizatorju govora , so zaporedja fonemov , ki jih je potrebno izgovoriti , pri čemer so za vsak fonem podani prozodični parametri za njegovo izgovorjavo .
Ti parametri vsebujejo podatke o osnovni frekvenci in trajanju izgovarjave fonema .
Izhodni podatki , ki jih mora postopek za izbiro govornih segmentov posredovati modulu za združevanje segmentov v govorni signal , so zaporedja natanko določenih izsekov govorne zbirke , imenovana polifoni ali govorni segmenti , ki jih bo modul za združevanje segmentov moral združiti .
Tudi ta zaporedja so lahko opremljena s prozodičnimi parametri za vsak izsek , s čemer je omogočeno , da modul za združevanje segmentov spremeni izvirne prozodične parametre segmentov iz govorne zbirke , tako da so čim bolj podobni želenim prozodičnim parametrom .
Takšna predstavitev nazorno prikaže problem izbire govornih segmentov , hkrati pa omogoča uporabo uveljavljenih postopkov za reševanje problema .
Vsako vozlišče grafa predstavlja en osnovni govorni segment iz govorne zbirke .
Graf je razdeljen v posamezne nivoje .
Povezava med vozlišči grafa določa možnost lepljenja osnovnih govornih segmentov , ki jih povezani vozlišči predstavljata .
Pri lepljenju govornih segmentov , segment vozlišča , ki je na višji stopnji grafa , časovno sledi segmentu vozlišča na nižji stopnji grafa .
Vozlišča grafa so medsebojno povezana tako , da je vsako vozlišče , ki se nahaja na stopnji n , povezano z vsemi vozlišči , ki se nahajajo na stopnji n+1 .
Končni cilj izbire govornih segmentov sta čim večja razumljivost in naravnost sintetičnega govora .
Cena prileganja prozodičnih lastnosti izraža podobnost oziroma različnost med prozodičnimi lastnostmi točno določenega govornega segmenta iz govorne zbirke in želenimi prozodičnimi lastnostmi za del govornega signala , ki naj bi ga govorni segment tvoril .
Cena prileganja prozodičnih lastnosti je navadno sestavljena iz obteženega rezultata primerjave trajanja govornega segmenta in želenega trajanja govornega segmenta ter iz obteženega rezultata primerjave poteka osnovne frekvence govornega segmenta in želenega poteka osnovne frekvence .
Razmerje , v katerem na ceno vplivata trajanje segmenta in potek osnovne frekvence , je večinoma eksperimentalno določeno .
Pri postopku združevanja lahko nastanejo slišne nezveznosti v signalu .
S ceno lepljenja poskušamo ovrednotiti vpliv nezveznosti v signalu na kvaliteto govora .
Možnih je več pristopov k vrednotenju vpliva lepljenja na kvaliteto govora .
Najpreprosteje je , da lepljenju govornih segmentov , ki si v govorni zbirki neposredno sledijo , priredimo ceno " 0 " , med tem ko vsem ostalim kombinacijam govornih segmentov priredimo ceno " 1 " .
Uporaba cene " 0 " pri segmentih , ki si neposredno sledijo v govorni zbirki , je logična , saj so ti segmenti že združeni in lepljenja ni potrebno izvajati .
Pri tako oblikovani ceni lepljenja bi postopek za iskanje optimalnega zaporedja govornih segmentov izbral tisto zaporedje , pri katerem je število lepljenj najmanjše , ne glede na to , katere govorne segmente lepimo .
Lepljenju govornih segmentov , ki si v govorni bazi neposredno sledijo , priredimo ceno 0 , tako kot pri prejšnjem pristopu .
Pri tem lahko upoštevamo razlike v osnovni frekvenci segmentov , razlike v formantnih frekvencah , razlike v glasnosti , razlike v moči šuma , razlike v spektralnih lastnostih šuma , itn. Pri tem se je potrebno zavedati , da uporaba velikega števila parametrov zahteva določitev velikega števila uteži , ki ovrednotijo vpliv razlike v posameznem parametru na ceno lepljenja .
Kompromisna rešitev , ki je bistveno hitrejša in kljub temu delno upošteva glasoslovne lastnosti lepljenih govornih segmentov , je vnaprejšnje določanje cene lepljenja za posamezne skupine osnovnih segmentov govorne zbirke .
Pri tem pristopu razdelimo osnovne segmente govorne zbirke v skupine na podlagi njihovih glasoslovnih lastnosti , tako da so si govorni segmenti znotraj posamezne skupine glasoslovno čim bolj podobni .
Cene lepljenja izračunamo vnaprej za vse kombinacije skupin vzorcev in jih shranimo .
Optimalno pot v grafu bi zanesljivo lahko določili tako , da preiščemo vse možne poti v grafu in med njimi izberemo najboljšo .
Število možnih poti med poljubnim izhodiščnim vozliščem grafa in poljubnim končnim vozliščem grafa je odvisno od števila nivojev grafa ter od števila pojavov osnovnih govornih segmentov v govorni zbirki .
Če upoštevamo , da se posnetek govornega segmenta v govorni bazi lahko pojavi tudi več tisoč krat in da so vhodni nizi lahko sestavljeni iz več deset osnovnih govornih segmentov , postane jasno , da je število možnih poti v grafu zelo veliko .
Zaradi tega ne preiskujemo vseh možnih poti v grafu , temveč uporabljamo različne postopke , ki poenostavijo in pospešijo iskanje .
Optimalno zaporedje govornih segmentov se določa z minimiziranjem cene , ki odraža poslabšanje kvalitete sintetiziranega govora zaradi spektralnih razlik , razlik fonetičnega okolja ter medsebojnega lepljenja govornih segmentov .
Postopek za minimizacijo vsote obeh cen uporablja iskanje , ki temelji na dinamičnem programiranju oziroma eni od njegovih izvedenk .
Kot osnovna govorna enota za iskanje se navadno uporabljajo osnovni govorni segmenti – fonemi .
Obstoječi sistemi za sintezo govora na podlagi lepljenja govornih segmentov iz obsežne govorne zbirke najpogosteje uporabljajo prav ta postopek .
Na podlagi omenjenih metod je bil razvit sistem za sintezo govora CHATR [ Black94 ] , [ Campbell96 ] .
Veliko novejših raziskav se ukvarja z izboljšanjem postopkov iskanja in definicijo parametrov , ki jih upoštevamo pri izračunu cene segmentov [ Toda03 ] , [ Toda04 ] , [ Vepa04 ] .
Modeliranje funkcij za izračun cen je kompleksen problem .
Postopki iskanja si pri izbiri lahko pomagajo tudi z dodatnimi oznakami segmentov spremenljive dolžine , ki posebej označujejo kritične dele , kjer bi lepljenje prineslo potencialna popačenja v končni govorni signal [ Breuer04 ] .
Nov pristop k izbiri govornih segmentov predstavlja statistično modeliranje : FSM [ Mohri00 ] , GRM [ Allauzen04 ] , DCD [ Allauzen03 ] , Yi [ Yi00 ] , [ Yi03a ] ter Bulyko in Ostendorf [ Bulyko01 ] .
Če lepljenje izvajamo na sredini fonemov , tako kot npr. pri difonski sintezi , določimo za vsak fonem ceno lepljenja na sredini tega fonema .
Za vsako vozlišče E i k izračunamo tudi ceno prileganja prozodičnih lastnosti govornega segmenta iz govorne zbirke , ki ga vozlišče predstavlja , in zahtevane prozodije za govorni segment S k v vhodnem nizu .
Vozlišča povežemo tako , da vsako vozlišče E i k ( k qi ≤≤1 ) , ki se nahaja na stopnji k , povežemo z vsemi vozlišči E j k-1 ( 1 1 − ≤≤ k qj ) , ki se nahajajo na stopnji k-1 .
Na vsaki stopnji grafa k ( Nk≤≤1 ) moramo torej izbrati le eno izmed vozlišč E i k ( k qi≤≤1 ) oz. le enega izmed govornih segmentov v govorni zbirki , ki ga bomo uporabili pri sintezi govora .
To vozlišče označimo z ) ( kx k E. Ceno optimalne poti v grafu lahko zapišemo kot : /.../.
Cena optimalne poti , kot funkcija izbire vozlišča x ( k ) na posamezni stopnji grafa , je razstavljiva funkcija .
Vidimo , da funkcijo cene lahko definiramo rekurzivno oz. da je cena poti do vozlišča E i k na k-ti stopnji grafa odvisna le od cene prozodičnega prileganja za vozlišče E i k in od cen optimalnih poti do vozlišč prejšnje stopnje grafa ( C O ( E i k-1 ) ) , ki jim prištejemo cene lepljenja .
Prvi parameter I ( E i k ) je indeks osnovnega govornega segmenta v govorni zbirki , ki ga vozlišče predstavlja .
Drugi parameter je cena prileganja prozodičnih lastnosti C P ( E i k ) , ki jo ravno tako izračunamo ob ustvarjanju grafa .
To ceno vpišemo med potekom postopka za izračun optimalne poti .
Četrti parameter je indeks vozlišča P ( E i k ) iz prejšnje stopnje grafa , ki leži na optimalni poti med izhodiščnimi vozlišči in pričujočim vozliščem .
Tudi ta parameter zapišemo med potekom postopka .
Pri izhodiščnih vozliščih postavimo kazalce na vozlišče iz prejšnje stopnje grafa na 0 , saj izhodiščna vozlišča nimajo predhodnika .
Postopek sekvenčno ponavljamo za vse ostale stopnje grafa : /.../
Cena optimalne poti je najmanjša izmed cen optimalnih poti do posameznih končnih vozlišč grafa : /.../ optimalno končno vozlišče pa je končno vozlišče z najmanjšo kumulativno ceno .
Po končanem postopku preberemo zaporedje vozlišč , ki ležijo na optimalni poti tako , da vzvratno sledimo indeksom vozlišč na predhodnih stopnjah grafa /.../ ki smo jih sproti shranjevali .
Poenostavitev izračuna cene lepljenja , ki smo jo vpeljali pri tem postopku , omogoča , da cene lepljenja določimo vnaprej , tako da je cena lepljenja C /.../ odvisna le od vrste govornih segmentov S k in S k-1 .
To pa tudi pomeni , da so vse cene prehodov med vozlišči grafa E j k-1 in E i k enake za poljuben j in i. To ne drži le v primeru , ko si govorna segmenta , ki ju predstavljata vozlišči E j k-1 in E i k , neposredno sledita v govorni zbirki .
Ugotovimo , da je ob uporabi opisanega postopka izbire govornih segmentov s poenostavljeno ceno lepljenja potreben le po en izračun minimuma za vsako stopnjo grafa ter eno seštevanje in ena primerjava za vsako vozlišče grafa .
Čas , potreben za izračun optimalne poti , narašča približno linearno z naraščanjem velikosti govorne zbirke .
V prvem primeru smo pri izbiri govornih segmentov uporabili postopek izbire govornih segmentov s poenostavljeno ceno lepljenja , v drugem primeru pa poenostavljeni postopek izbire govornih segmentov [ Mihelič06 ] .
Kakovost sintetiziranega govora z uporabo slednjega je rahlo zaostajala za kakovostjo sintetiziranega govora prvega .
Iskalni čas pri obeh uporabljenih postopkih izbire govornih segmentov narašča linearno z dolžino povedi , ki jo je potrebno sintetizirati , in tudi linearno z velikostjo govorne zbirke , kar predstavlja napredek v primerjavi s klasičnimi postopki iskanja poti po grafu , ki se uporabljajo pri izbiri govornih segmentov pri združevalni ali korpusni sintezi govora .
Kot je bilo pričakovati , sta oba postopka z daljšanjem povedi , za katere sta v govorni zbirki iskala segmente , potrebne za sintezo , delovala vse počasneje .
Izbrani segmenti so še vedno optimalni , le cene lepljenja segmentov , na katerih temelji izbira , so manj natančne .
Sintetizator slovenskega govora smo vgradili v samodejni sistem za podajanje informacij o donosih medu na čebelarskih oprazovalnicah .
Razumljivost in naravnost sintetiziranega govora smo ocenili z obsežnim preskusom , ki je bil pripravljen po mednarodnih priporočilih za preverjanje kakovosti sintetiziranega govora .
Splošni vtis sintetizatorja govora je bil ocenjen z oceno 3.2 , kar pomeni ' dobro ' , kar se ujema z ocenami splošnega vtisa za sintetizatorje govora za druge jezike , ki navadno prejemajo ocene okoli 3.5 po MOS lestvici .
Poslušalci so ocenili , da je sintetični govor razumljiv , primerno razgiban in hiter , ter primeren za uporabo v samodejnih sistemih za podajanje informacij v govorni obliki preko telefona ali interneta .
Cene lepljenja govornih segmentov so prirejene prehodom med vozlišči grafa .
Cene prileganja prozodičnih lastnosti so prirejene vozliščem grafa .
Cena optimalne poti do vozlišča E i k je odvisna od cen optimalnih poti do vozlišč predhodne stopnje grafa C O ( E i k-1 ) , cen lepljenja C L ( E j k-1 , E i k ) in cene prileganja prozodičnih lastnosti C P ( E i k ).
Cena lepljenja dveh govornih segmentov , ki si neposredno sledita v govorni zbirki , je enaka 0.
Cene lepljenja vseh ostalih segmentov so odvisne le od vrste govornih segmentov , ki ju lepimo , in so zato enake za vse povezave med dvema nivojema grafa .
Nadgradnja sistema za razpoznavanje slovenskega tekočega govora UMB Broadcast News .
V novo verzijo sistema UMB BN smo vključili več novih , kompleksnih modulov .
Za vrednotenje sistema smo uporabili celoten testni nabor baze BNSI , ki vsebuje govorni signal v zelo različnih akustičnih okoljih ( 7 različnih f-razredov ) .
Uporaba novih metod je uspešno izboljšala delovanje sistema za razpoznavanje slovenskega tekočega govora UMB BN. Uvod .
Rezultati različnih raziskav kažejo , da uporaba metod , razvitih za zahodnoevropske jezike , ne zadostuje za doseganje dovolj visoke kvalitete .
Osnovna zgradba sistema in prvi rezultati , doseženi na delu testnega nabora , ki je vključeval samo brani in spontani govor brez zvočnega ozadja , so bili predstavljeni v Žgank et al. ( 2006 ) .
V članku bomo predstavili nadgradnjo osnovne verzije sistema s kompleksnejšimi moduli ter podali prve rezultate , ki so bili doseženi na celotnem testnem naboru ( vseh 7 f-razredov ) slovenske govorne baze BNSI Broadcast News ( Žgank et al. , 2004 ) .
V postopek nadgradnje sistema smo vključili izboljšano avtomatsko segmentacijo govor / negovor , dva različna načina izločanja značilk , podporo za različne tipe akustičnih modelov glede na modeliranje konteksta in osnovnih enot , podporo za modeliranje mašil v spontanem govoru , izboljšane jezikovne modele ter razpoznavalnik govora s 64.000 besedami v slovarju .
Ena izmed glavnih ovir , ki vplivajo na učinkovitost razvoja različnih sistemov razpoznavanja govora , je obstoj jezikovnih virov za ciljni jezik .
Govorna baza BNSI Broadcast News .
Slovenska baza BNSI je dostopna pri evropski organizaciji ELRA / ELDA ( ELRA , 2008 ) .
Postopek priprave na učenje akustičnih modelov zahteva dodatno ročno delo za pripravo in uskladitev vseh vključenih jezikovnih virov , kolikor želimo doseči visoko kvaliteto razpoznavanja govora .
V primerjavi z osnovno verzijo sistema UMB BN ( Žgank et al. , 2006 ) smo tako povečali učni korpus na 18 ur govornega materiala iz vseh f-razredov ( Schwartz et al. , 1997 ) .
Pri učenju jezikovnih modelov so ključnega pomena uporabljeni besedilni korpusi , iz katerih se jezikovni model uči kontekstne odvisnosti med enotami modeliranja .
Korpusi so si po strukturi zelo različni , zato smo jih uporabljali kot ločene jezikovne vire .
V govoru zasledimo ponovitve , popravljanja , slovnična neujemanja in zelo svoboden besedni red .
Teh pojavov v pisnem jeziku skorajda ne najdemo .
Besedilni korpusi so tudi po obsegu zelo različni ( Žgank et al. , 2006 ) , zato smo frekvence pojavljanja in sopojavljanja besed obravnavali ločeno po korpusih .
Kot poseben vnos v slovarju , ki je v jezikovnem modelu predstavljen le kot kontekst , smo uporabili različna mašila in onomatopeje ( Žgank et al. , 2008 ) ter številske vrednosti .
Slovar zaenkrat še ne vsebuje različnih variant izgovorjav ( narečne oblike ) ter besed , ki niso bile izgovorjene do konca ( redukcije ) .
Pri implementaciji metod smo praviloma upoštevali zahtevo po delovanju v » on-line « načinu .
Predstavljena verzija sistema še vedno temelji na samo eni iteraciji razpoznavanja , saj trenutno v sistem še nismo implementirali segmentacije ( Grašič et al. , 2008 ) in adaptacije na govorca .
V nadaljevanju poglavja bomo predstavili nove pristope , ki smo jih izvedli med zadnjo nadgradnjo sistema UMB BN. Segmentacija govor / negovor .
Za učenje slednjega je bil uporabljen učni material iz različnih akustičnih razredov , kot so glasba , najavne špice , tišina , šum ( npr. hrup prometa , govor v ozadju ) , navijanje , zvoki okolja itn. Za učenje govornega modela je bil uporabljen čisti govor in govor z ozadjem .
V bazi BNSI je čisti govor moč najti v razredih f-0 , f-1 in f-2 ( čisti telefonski govor ) , govor z zvočnim ozadjem pa v razredih f-3 in f-4 .
Rezultat segmentacije govor / negovor predstavljajo odseki različnih dolžin , nekateri dolgi tudi nekaj 100 sekund .
Z njim smo razrezali na manjše dele vse govorne segmente , daljše od 30 sekund .
MFCC in PLP značilke govornega signala .
V naši raziskavi smo opravili primerjavo dveh najpogosteje uporabljenih postopkov izločanja značilk .
V postopku izločanja MFCC značilk najprej izvedemo oknjenje vhodnega govornega signala s Hannovim oknom .
Z opisanim postopkom Mel filtriranja poskušamo tako aproksimirati princip kritičnih pasov in amplitudno-frekvenčni odziv človekovega slušnega sistema .
V zadnjem koraku sledi izvedba postopka diskretne kosinusne transformacije ( DCT ) , s pomočjo katere izvedemo sočasno dekorelacijo in zmanjšanje dimenzije končnega vektorja statičnih značilk .
Končni vektor statičnih značilk po MFCC postopku tako vsebuje 13 elementov , od tega je 12 MFCC koeficientov , trinajsti element pa je podatek o energiji signala v pripadajočem oknu analiziranega vhodnega govornega signala .
Postopek PLP parametrizacije ( Hermansky , 1990 ) je bil prvič predstavljen leta 1990 , nekoliko kasneje pa je že bil uspešno uporabljen v postopku razpoznavanja tekočega govora z velikim slovarjem besed za angleški jezik ( Woodland , 2001 ) .
V osnovi je postopek določanja PLP značilk kombinacija prej opisanega postopka izločanja MFCC značilk in linearnega napovedovanja .
Akustični modeli , ki so vključeni v sistem razpoznavanja govora UMB BN , temeljijo na tristanjskih levo-desnih prikritih modelih Markova s kombinacijami zveznih Gaussovih porazdelitev verjetnosti .
Prvotne akustične modele smo zasnovali na grafemski osnovni enoti ( Žgank in Kačič , 2005 / 1 ) , kar pomeni , da je bilo v osnovnem naboru 25 grafemov ter dva dodatna modela za tišino .
Z uporabo grafemov smo se izognili dodatni napaki , ki bi jo v sistem vnesla grafemsko-fonemska pretvorba .
Eno izmed vmesnih verzij sistema smo zasnovali tudi na fonemskih osnovnih enotah , kjer smo število fonemov spreminjali od 39 do 27 , vendar preliminarni eksperimenti niso pokazali statistično pomembnega izboljšanja rezultatov , se je pa bistveno povečala kompleksnost sistema .
Za učenje prikritih modelov Markova smo uporabili prosto dostopno orodje HTK ( HTK , 2008 ) .
V prvem koraku učenja smo tvorili kontekstno neodvisne akustične modele na osnovi inicializacije z globalnimi vrednostmi .
V vsakem izmed vmesnih korakov smo izvedli postopek prisilne poravnave , s katerim smo izboljšali fonetične transkripcije učnega korpusa .
Tretji korak učenja akustičnih modelov je namenjen gradnji kontekstno odvisnih akustičnih modelov ( trigrafemov ) .
Na takšen način se izboljša modeliranje efekta koartikulacije na besednih mejah , kar pride še posebej do izraza pri modeliranju tekočega govora .
Uporaba trigrafemskih akustičnih modelov drastično poveča število prostih parametrov , ki jih je potrebno oceniti .
Zato smo uporabili postopek vezave stanj z odločitvenim drevesom ( Young et al. , 1994 ) .
Inicializacijo odločitvenih dreves smo izvedli s podatkovno tvorjenimi grafemskimi razredi ( Žgank et al. , 2005 / 2 ) .
Na osnovi besedilnih korpusov smo zgradili standardni bigramski model .
Jezikovni model je sestavljen iz treh komponent : prvo komponento smo zgradili na korpusu BNSI-Speech , drugo na korpusu BNSI-Text in tretjo na korpusu Večer .
Perpleksnost interpoliranega jezikovnega modela na BNSI-Eval je znašala 410 , delež besed izven slovarja ( OOV ) pa 4.22 %.
Dekodirnik .
V našem primeru smo uporabili prosto dostopno orodje Sclite ( Sclite , 2008 ) , ki je bilo razvito za potrebe vrednotenj HUB v domeni NIST .
V slednjem primeru upoštevamo poleg razpoznanih besed še vrinjene in izbrisane besed , ki poslabšajo skupni rezultat .
Oba tipa akustičnih modelov v tem eksperimentu sta uporabljala MFCC značilke .
Ta podatek kaže na večjo raznolikost akustičnih modelov .
Z uporabo medbesednih akustičnih modelov smo povečali delež pravilnih besed s 63,1 % na 65,7 %.
Do izboljšanja rezultatov je verjetno prišlo zaradi boljšega modeliranja koartikulacije na meji med besedami .
V drugem koraku smo primerjali oba postopka izločanja značilk ob uporabi medbesednih trigrafemskih akustičnih modelov .
Primerjava akustičnih modelov , naučenih z MFCC in PLP postopkom , je pokazala , da je število stanj po združevanju z odločitvenim drevesom podobno .
Do večje razlike pri rezultatih je prišlo pri hitrosti delovanja .
Hitrost delovanja smo merili na računalniku s procesorjem Intel Core2 Quad 2,4 GHz in pri procesiranju vedno uporabljali samo eno jedro .
Sistem s PLP značilkami je deloval za dobrih 17 % hitreje kot sistem z MFCC značilkami .
Kljub podrobnejši analizi rezultatov in spremljanju delovanja sistema nismo mogli ugotoviti natančnega vzroka za takšno pohitritev .
V zadnjem koraku eksperimentov smo izvedli analizo vpliva nove avtomatske segmentacije govor / negovor na rezultate razpoznavanja govora .
Primerjali smo vpliv ročne in avtomatske segmentacije testnega nabora na rezultate razpoznavanja govora .
Pri avtomatski segmentaciji govor / negovor smo govorne segmente dodatno razrezali na krajše odseke z uporabo modula VAD .
Poslabšanje rezultatov z uporabo avtomatske segmentacije je bilo pričakovano , saj takšen postopek vnaša v sistem dodatno napako .
V članku smo predstavili najnovejšo verzijo sistema za razpoznavanje tekočega govora UMB BN. Vpeljali smo različne nove pristope , ki omogočajo učinkovito delovanje sistema .
Primerjava med notranjebesednimi in medbesednimi trigrafemskimi akustičnimi modeli .
Primerjava izločanja značilk na osnovi MFCC in PLP .
Raziskovalno delo je bilo delno sofinancirano s strani ARRS po pogodbi št. J2-9742-0796-06 in pogodbi št. P2-0069 .
Prispevek obravnava vpliv predhodne segmentacije in klasifikacije govor / negovor na segmentacijo govorca oz. na pravilno zaznavo menjave govorca v zvočnem nizu .
V članku je predstavljena statistična metoda segmentacije govor / negovor zasnovana na GMM .
Uspešnost metod je bila ocenjena v okviru domene BroadCast News , ob uporabi slovenske govorne baze BNSI .
Segmentacijo govorcev pogosto uporabljamo na področju , kot je sledenje govorcev , avtomatsko indeksiranje in avtomatska razpoznava govora ( ASR – automatic speech recognition ) .
Glavni namen segmentacije govorcev je poiskati meje med govorci v zvočnem nizu oziroma posnetku .
Z metodo lahko tvorimo krivuljo razdalj , na kateri lokalni maksimumi predstavljajo kandidate za meje med različnimi govorci .
V primeru , ko je potrebna večja natančnost in je material za učenje na voljo , običajno uporabljamo principe , ki temeljijo na modelih ( npr. Gaussovi modeli - GMM ) .
Tretji princip temelji na razpoznavalniku govora , kjer se v prvem koraku izvede razpoznavanje govora , v drugem koraku pa se v premorih skušajo identificirati potencialna mesta za meje med govorci .
Alternativo pristopom , ki temeljijo na modelih , predstavlja BIC ( Bayesian Information Criterion ) .
Ta postopek definira segmentacijo kot postopek izbire optimalnega modela .
Segmentacija zvočnega niza na govorne in negovorne segmente je ena izmed osnovnih oblik akustične segmentacije zvoka .
Ker vsebujejo oddaje Broadcast News segmente z najrazličnejšimi akustičnimi lastnostmi , je akustična segmentacija takšnih posnetkov precej zahtevna naloga .
V oddajah je veliko število različnih govorcev : poročevalci , voditelji oddaj , novinarji na terenu , gosti , politiki , športniki , znane osebnosti , tuji govorci itn. Pogosto se tudi zgodi , da se isti govorec pojavi v zvočnem zapisu večkrat , vendar v različnih akustičnih pogojih .
Za akustično segmentacijo so bile do sedaj uporabljene različne metode .
Pri segmentaciji govorcev tako uporabimo le govorne dele zvočnega zapisa , kar pripomore k boljšemu rezultatu segmentacije .
Slika 1 kaže blokovno predstavitev govor / negovor segmentacijskega in kasifikacijskega sistema .
Oknjenje je izvedeno s Hannovim oknom dolžine 512 otipkov , kar znaša 32 ms .
Vektor značilk sestavlja 12 MFCC značilk , ki so razširjene z normalizirano energijo Tako vektor značilk vsebuje 13 koeficientov .
V naslednjem koraku za vsak vektor izračunamo logaritem verjetja za posamezen model GMM .
Rezultati so pokazali , da se za segmentacijo govor / negovor v domeni Broadcast News bolje obnese dvomodelni kot večmodelni pristop .
Za učenje negovornega razreda smo uporabili učni material iz več akustičnih razredov , kot so glasba , uvodni napevi , tišina , šum ( npr. hrup prometa , človeški šum itn. ) , navijanje , zvoki okolja itn. Za učenje govornega modela smo uporabili čisti govor in govor z ozadjem .
V bazi je čisti govor moč najti v F-razredu F0 , F1 in F2 ( čisti telefonski govor ) , govor z zvočnim ozadjem pa v razredih F3 in F4 .
Izračun povprečne vrednosti smo izvedli vsakih 15 oken , kar predstavlja en okvir .
Izračun povprečne vrednosti logaritma verjetja smo izvedli vsaka dva okvirja , torej nad tridesetimi okni ( 300 ms ) .
Po izračunu povprečne vrednosti logaritma verjetja smo te vrednosti uporabili za določitev meje med segmenti s pomočjo vnaprej določenih pravil in na osnovi najvišje povprečne vrednosti podobnosti .
Po računanju povprečne vrednosti sledi določanje maksimalne srednje vrednosti , ki določi , ali trenutni okvir spada v razred govor ali v razred negovor .
Meje za govorne in negovorne odseke računamo glede na pravila minimalnega trajanja govornega in negovornega segmenta .
Minimalni čas trajanja negovornega segmenta je 1500 ms , saj je to določeno s pravili označevanja za bazo BNSI .
Na ta način uspešno zaznamo pravi začetek govora .
Bayesov informacijski kriterij uporabljamo kot kriterij za selekcijo oz. izbiro modela , ki v danem primeru najbolje predstavlja izbrane podatke ( Tritschler , Gopinath , 1999 ) .
Ker je x j ∈ ℜ d in ker je model M 1 definiran z enim in M 2 z dvema Gaussoma , lahko določimo , da ima model M 2 dvakrat več parametrov ( k 2 = 2k 1 ): 1 ( 1 ) 2. dd kd + =+ ( 2 ) S pomočjo ( 1 ) lahko naredimo test preverjanja modelov , kjer izberemo M 1 pred M 2 , če je pogoj ΔBIC = BIC 1 – BIC 2 pozitiven .
log | | log | | log | 22 2 1 ( 1 ) ( ) log , ifs nini BIC dd dn ω λ − Δ = − Σ + Σ + Σ + ++ ( 3 ) V primeru , da je izraz ΔBIC i negativen , je i-ti okvir primeren kandidat za točko menjave govorca , kjer je | Σ ω | determinanta kovariančne matrike testiranega okna ( model M 1 ) , | Σ f | je determinanta kovariančne matrike prvega podokna A ( pripadajoče modelu M2 : prvi Gauss ) in | Σ s | je determinanta kovariančne matrike drugega podokna B ( pripadajoče modelu M2 : drugi Gauss ) .
Dodatna pozornost je prav tako potrebna pri izbiri podokna , saj majhno število podatkovnih vektorjev znotraj podokna lahko povzroči nepopolno predstavitev govorca znotraj modela .
Ta ima v primerjavi s fiksno izbiro okna prednost , da lahko zajamemo oz. upoštevamo večjo količino podatkov govorca , kar pripomore k izboljšanju detekcije menjave govorca .
Slika 1 A prikazuje izbiro podokna znotraj okna .
Pri tem postopka BIC ne opravimo na samih robovih , saj v teh primerih ni na voljo dovolj podatkov o govorcu za izgradnjo modela govorca .
Slika 1 B in slika 1 C prikazujeta postopek izbire okna , kjer velikost okna povečujemo do MAXWINSIZE .
Parameter MAXWINSIZE je določen s pomočjo razvojne baze .
Slovenska govorna baza BNSI Broadcast News .
Slovenska baza BNSI Broadcast News je bila posneta v sodelovanju med Fakulteto za elektrotehniko , računalništvo in informatiko Univerze v Mariboru in slovensko nacionalno televizijo RTV Slovenija ( Žgank , 2005 ) .
Vsebuje dve vrsti TV-oddaj .
Prvi tip oddaj so večerne novice , drugi tip oddaj pa predstavljajo glavni dnevni dogodki , ki so v oddajah podrobneje analizirani .
Baza je sestavljena iz 42 informativnih oddaj , kar predstavlja 36 ur govornega materiala .
Ta material je nadalje razdeljen na tri dele : učni , razvojni in testni del .
Učni del predstavlja 30 ur govornega materiala , medtem ko razvojni in testni del obsegata vsak po 3 ure .
Dva najpogostejša razreda v bazi BNSI sta F0 ( brani studijski govor , 36,6 %) in F4 ( brani ali spontani studijski govor z zvočnim ozadjem , 37,6 %).
Vektor značilk smo izračunavali vsakih 10 ms znotraj okvirja 32 ms zvoka .
Na ta način smo se izognili iskanju menjav govorca v negovornih področjih .
Pri označevanju menjave govorca se lahko pojavita dva tipa napak : napaka zaznavanja in napaka zgrešitve .
Takšen tip napake se običajno meri s tako imenovano mero natančnosti ( precision measure ) .
V primeru , da menjava govorca ni bila zaznana , pa govorimo o napaki zgrešitve .
Takšen tip napake tipično izrazimo s tako imenovano mero priklica ( recall measure ) .
skupno število pravilnih prehodov ( 7 ) Da lahko pravilno vrednotimo uspešnost in da lahko rezultate primerjamo z ostalimi sistemi , uporabimo skupno mero F , definirano kot : 2 * Precision * Recall F = Precision+Recall ( 8 ) Pri vrednotenju za vsako zaznano menjavo govorca uporabljamo interval zaupanja , znotraj katerega je zaznana menjava izbrana kot pravilna oz. nepravilna .
Tabela 1 prikazuje uspešnost zaznave menjave govorca na slovenskem testnem naboru BNSI s postopkom BIC .
Iz rezultatov je razvidno , da je po pričakovanju postopek BIC z določitvijo področij govor / negovor iz referenčnih transkripcij dosegel najboljši rezultat uspešnosti določitve menjave govorca .
Pri menjavi govorcev se namreč pogosto pojavijo različni negovorni zvoki v ozadju , ki lahko povzročijo nepravilno določitev segmenta kot govor / negovor .
Težava se pojavi tudi pri vrednotenju , saj se v bazi pojavljajo segmenti govora / negovora , ki so daljši od 1.5 s , vendar niso označeni , postopek segmentacije in klasifikacije govor / negovor pa jih zazna .
Ugotovili smo , da je avtomatska segmentacija govor / negovor prispevala k izboljšanju uspešnosti zaznave menjave v primerjavi z nesegmentiranim postopkom .
V tem prispevku obravnavam označevanje diskurznih označevalcev in predlagam ločevanje štirih vrst : ideacijskih označevalcev , interakcijskih označevalcev , označevalcev procesov tvorjenja in interpretacijskih označevalcev .
Predstavljena shema je osnova za nadaljnjo korpusno podprto analizo diskurznih označevalcev in za evalvacijo tako označenih virov v zahtevnejših jezikovnotehnoloških aplikacijah .
Diskurzna in pragmatična raven postajata vse bolj pogosto predmet označevanja v jezikovnih virih , zlasti ko skušamo razvijati zahtevnejše jezikovnotehnološke aplikacije , kot so razpoznavanje spontanega govora , prevajanje govora , dialog ipd.
Čeprav se diskurz in pragmatika uvrščata tudi v pregledne publikacije s področja jezikovnih tehnologij ( npr. Mitkov , 2003 ) , pa je na področju diskurznega in pragmatičnega označevanja jezikovnih virov še veliko prostora za nove raziskave in razprave , saj še ni jasno niti , ali bosta diskurz in pragmatika dve različni ravni označevanja ali ena sama oziroma ali in kako naj se standardno označujejo različni diskurzni in pragmatični pojavi , kot so navezovanje , kohezija , diskurzni označevalci , struktura pogovora , govorna dejanja , struktura informacije , retorična razmerja , namernost idr. V tem prispevku se bom osredotočila na označevanje samo enega od navedenih pojavov , diskurznih označevalcev .
V preteklosti je že bilo predstavljenih nekaj shem in poskusov označevanja diskurznih označevalcev ( Heeman , Allen , 1999 ; Miltsakaki et al. , 2002 ; Verdonik et al. , 2007 ) , vendar nadaljnje raziskave tovrstnih izrazov , ki so v analizi diskurza zelo aktivne , prinašajo vedno nova spoznanja in vedno širši in raznovrstnejši nabor diskurznih označevalcev ( npr. Schiffrin , 1987 ; Redeker , 1990 ; Fraser , 1996 ; Blakemore , 2002 ; Overstreet , 2005 ; Swerts , 1998 ; Clark , Fox Tree , 2002 ; od slovenskih raziskav npr. Gorjanc , 1998 ; Smolej , 2004 ; Pisanski Peterlin , 2005 ; Schlamberger Brezar , 2007 ) .
Kot bomo videli v nadaljevanju , funkcije , ki jih opravljajo posamezni diskurzni označevalci , pokrivajo zelo širok spekter in segajo na različne ravni diskurza , prav tako so izrazi v vlogi diskurznih označevalcev kar se da raznovrstni .
Zato se že dalj časa kaže potreba po njihovi nadaljnji razvrstitvi .
V shemah za označevanje jezikovnih virov se skušata zagotavljati enostavnost in nedvoumnost , kar omogoča homogeno , hitro in v kasnejših fazah zadovoljivo uspešno avtomatsko označevanje .
Zato predstavljena razdelitev vrst diskurznih označevalcev teži k preprostosti in poenostavitvam , ki temeljijo na najbolj izrazitih skupnih lastnostih .
Shema ni mišljena kot natančna jezikoslovna tipologija diskurznih označevalcev , ampak kot osnova za nadaljnjo korpusno podprto analizo diskurznih označevalcev v jezikoslovju , na področju tehnologij pa pomeni osnovo za evalvacijo uporabnosti atributa diskurznih označevalcev .
Definicija diskurznih označevalcev in metoda .
Obstajajo različne interpretacije diskurznih označevalcev , tj. izrazov , kot so npr. ja , mhm , aha , no , dobro , v redu , glejte , eee , in , torej in še številni drugi .
Pri tem so diskurzni označevalci vedno predstavljeni kot izrazi , ki ne prispevajo veliko k vsebini in ne vplivajo bistveno na pomen sporočila , ampak opravljajo predvsem komunikacijske , pragmatične oz. proceduralne funkcije .
To sicer zelo ohlapno definicijo lahko štejemo kot skupno izhodišče preučevanja diskurznih označevalcev .
Delitev skušam utemeljiti na treh ravneh : z označevanjem in analizo avtentičnega gradiva , s sintezo spoznanj tujih raziskav diskurznih označevalcev ter s teoretičnim izhodiščem , po katerem je diskurz zgrajen iz več temeljnih ravni .
V nadaljevanju najprej utemeljujem delitev s teoretičnimi izhodišči in sintezo tistih spoznanj drugih raziskav , ki podpirajo predstavljeno razdelitev , v drugem delu članka pa s predstavitvijo rezultatov označevanja vrst diskurznih označevalcev v korpusnem gradivu .
Kot kažejo lastne predhodne raziskave ( npr. Verdonik , 2006 ; Verdonik et al. , 2007 ) , na vseh teh ravneh učinkujejo tudi diskurzni označevalci ; običajno učinkujejo na več ravneh hkrati , vendar je , kot ugotavlja že Schiffrin ( 1987 ) , praviloma ena od ravni bolj poudarjena in zato primarna .
Glede na raven diskurza , na kateri primarno učinkujejo , ločim ideacijske , interakcijske in kognitivne diskurzne označevalce , slednje pa naprej na označevalce procesov tvorjenja in interpretacijske označevalce .
Vendar na koncu ugotavlja , da označevalci s semantičnim pomenom , kot so vezniki in časovni deiksi , delujejo predvsem na ravni predstavne strukture , in tisti brez semantičnega pomena na ostalih ravneh .
Takšne ugotovitve vodijo k zaključku , da obstaja večja razlika med označevalci predstavne strukture ( npr. in , pa , torej , in sicer ...
Poudarjena povezovalna vloga različnih vezniških in prislovnih , pa tudi drugih besed v slovenskem jeziku je bila raziskana npr. že v Gorjanc ( 1998 ) , vendar nas tukaj v nasprotju z navedeno raziskavo zanima povezovalna vloga teh izrazov samo na ravni diskurza in v skladu z definicijo diskurznih označevalcev .
Pri nekaterih diskurznih označevalcih je bolj kot interakcijska ali predstavna poudarjena kognitivna raven .
Čeprav tudi označevalci procesov tvorjenja do neke mere delujejo na interakcijski ravni , pa je bolj poudarjena funkcija razkrivanja procesov tvorjenja , ki za interakcijske označevalce ni značilna .
Gradivo je izbrano iz baze BNSI Broadcast News ( Žgank et al. , 2004 ) in poimenovano BNSIint .
Natančnejši podatki so v tabeli 2.
V korpusnem gradivu so bile predstavljene vrste diskurznih označevalcev ročno označene in s tem tudi razdvoumljene v primerih , ko je lahko isti izraz v vlogi diskurznega označevalca ali ne .
V nadaljevanju podajam pregled izrazov v vlogi diskurznih označevalcev po vrstah in ločeno za vsak žanr ter podatke o pogostosti rabe v številu konkordanc ( št. rab ) in v odstotkih glede na število vseh besed v korpusih (% besed ) .
Ideacijski označevalci so v naših korpusih v primerjavi z drugimi vrstami diskurznih označevalcev dokaj redki , saj predstavljajo le okoli 1 % vseh besed .
V telefonskih pogovorih v turizmu so nekoliko pogostejši kot v televizijskih intervjujih , vendar je razlika veliko manjša kot pri interakcijskih označevalcih .
Najpogostejši interakcijski označevalci v našem gradivu so bili oporni signali , ja , ( a / ali ) ne ?
Podrobnejši podatki so v tabeli 4.
Interakcijski označevalci so v našem gradivu najpogostejši diskurzni označevalci .
Označevalci procesov tvorjenja .
Več podatkov je v tabeli 5.
Po pogostosti rabe sodijo med bolj pogoste , saj dosegajo skoraj 5 % vseh besed .
Interpretacijski označevalci so v našem gradivu najmanj pogosti : v telefonskih pogovorih obsegajo komaj pol odstotka vseh besed , v televizijskih intervjujih pa še enkrat manj .
Zaradi potreb označevanja jezikovnih virov je kar se da robustna , zato upošteva le najbolj pogoste in splošno prepoznane značilnosti diskurznih označevalcev in se izogiba razvrščanju istega izraza v več vrst .
V korpusnem gradivu se je pokazalo , da so najpogostejši interakcijski označevalci , zatem označevalci procesov tvorjenja , manj pogosti so bili ideacijski označevalci , najmanj pogosti pa interpretacijski .
Vendar so bile velike razlike med obema uporabljenima korpusoma : v splošnem so bili diskurzni označevalci v televizijskih intervjujih veliko manj pogosti ( skupaj 4,748 % vseh besed ) kot v telefonskih pogovorih v turizmu ( skupaj 16,526 % vseh besed ) .
Predstavljena shema je podlaga za nadaljnjo korpusno podprto analizo diskurznih označevalcev v jezikoslovju , na področju tehnologij pa pomeni osnovo za evalvacijo uporabnosti atributa diskurznih označevalcev .
Število in dolžina pogovorov v BNSIint .
Z opornimi signali udeleženci v pogovoru signalizirajo , da poslušajo , da razumejo ali da se strinjajo z govorcem , ne uvajajo pa ( daljše ) menjave vlog niti udeleženci z njimi ne nakažejo namena , da prevzamejo vlogo .
V gradivu so oporni signali posebej označeni .
Označevanje diskurznih označevalcev v korpusnem gradivu je lahko včasih odvisno od interpretacije označevalca .
Rezultati so pokazali , pri katerih diskurznih označevalcih se pojavlja večja variabilnost označevanja in s katerimi diskurznimi označevalci bi bilo mogoče shemo nadgraditi .
Na področju jezikovnih tehnologij najdemo vedno več poskusov označevanja diskurznih označevalcev v jezikovnih virih ( Carlson et al. , 2003 ; Mitkov et al. , 2000 ; Muller et al. , 2002 ; Byron et al. , 1997 ; Heeman , Allen , 1999 ; Miltsakaki et al. , 2002 ) .
Ker smo korpusa Turdis-2 in BNSIint uporabljali za jezikoslovne raziskave diskurznih označevalcev in ker želimo pred označevanjem obsežnejšega gradiva zagotoviti kar se da homogeno označevanje , smo validirali označenost navedenih korpusov .
Namen validacije je bil dvojen : ( 1 ) oceniti , do kolikšne mere so rezultati korpusne analize diskurznih označevalcev , ki smo jih uporabljali v jezikoslovnih raziskavah , odvisni od interpretacije označevalca korpusa ; ker smo v raziskavah uporabljali samo skupne kvantitativne podatke ( Verdonik et al. , 2007b ; Verdonik et al. , v tisku ) , nas je tudi pri validaciji zanimala predvsem skupna kvantitativna razlika v številu označenih diskurznih označevalcev ; ( 2 ) preliminarno oceniti , ali je shema za označevanje diskurznih označevalcev , predstavljena v Verdonik et al. ( 2007a ) , dovolj natančna ali pa jo je treba dopolniti in v katerih segmentih .
Gradivo je izbrano iz korpusa Turdis ( Verdonik , Rojc , 2006 ) tako , da obsega okoli 30.000 pojavnic .
30.000 pojavnic je dvakrat več gradiva kot v naših predhodnih raziskavah ( Verdonik , 2006 ; Verdonik et al. , 2007a ) .
Gradivo je omejeno zaradi časovne zahtevnosti ročnega označevanja korpusov in razpoložljivosti primernih govornih virov .
Natančnejši podatki o izboru Turdis-2 so predstavljeni v tabeli 1.
Korpus BNSIint vključuje televizijske intervjuje o aktualnih dogodkih v večerni dnevnoinformativni oddaji nacionalne televizije iz obdobja 1999-2005.
V intervjujih sodelujejo novinar ter en ali dva intervjuvanca .
Gradivo je izbrano iz baze BNSI Broadcast News ( Žgank et al. , 2004 ) , ki je nastajala v sodelovanju Fakultete za elektrotehniko , računalništvo in informatiko v Mariboru ter RTV Slovenija in vključuje dnevnoinformativne oddaje in informativne pogovorne oddaje , zajete iz arhiva RTV Slovenija .
Natančnejši podatki o korpusu BNSIint so v tabeli 2.
Preverjanje kakovosti je bistven element gradnje jezikovnih virov .
Naš namen je bil validirati kakovost označevanja diskurznih označevalcev v Turdis-2 in BNSIint .
Podrobnejši podatki o obsegu validacijskega korpusa ( število pogovorov , dolžina v minutah , število pojavnic ) so predstavljeni v tabelah 3 ( za Turdis-2 ) in 4 ( za BNSIint ) .
V korpusih Turdis-2 in BNSIint so bili diskurzni označevalci ročno označeni skladno s shemo , predstavljeno v Verdonik et al. ( 2007a ) .
Validacija je potekala tako , da sta diskurzne označevalce v validacijskem gradivu na novo označila dva zunanja strokovnjaka , ki nista bila povezana s snovanjem sheme za označevanje ( Verdonik et al. , 2007a ) in označevanjem obeh korpusov , ju pa označevanje diskurznih označevalcev v korpusih zanima z različnih uporabnostnih vidikov : prvi validator je bil namreč strokovnjak s področja uporabnega jezikoslovja , drugi s področja govornih tehnologij .
V Verdonik et al. ( 2007a ) so nadalje najpogostejši tovrstni izrazi tudi našteti in obravnavani , in sicer so to : ja , mhm , aha , aja , no , eee v različnih izgovornih variantah ( eeem , eeen , nnn , mmm ...
/ a ne ?
Po končanem validacijskem označevanju smo primerjali označenost validacijskega gradiva v korpusih Turdis-2 in BNSIint z označenostjo validacijskega gradiva pri prvem in drugem validatorju ter na podlagi tega ocenili , pri katerih izrazih je označevanje diskurznih označevalcev najbolj variiralo .
Ker smo v raziskavah uporabljali samo skupne kvantitativne podatke ( Verdonik et al. , 2007b ; Verdonik et al. , v tisku ) , nas je tudi pri validaciji zanimala samo skupna kvantitativna razlika v številu označenih diskurznih označevalcev in smo opazovali le skupno razliko v številu označenih diskurznih označevalcev , ne pa tudi razlik pri označevanju posameznih pojavnic .
Rezultati so predstavljeni v nadaljevanju .
Rezultati validacije za ostale diskurzne označevalce , obravnavane v Verdonik et al. ( 2007a ) , so prikazani v tabeli 5.
Na levi strani tabele so podatki za korpus Turdis - 2 , na desni za korpus BNSIint .
V stolpcih K je število diskurznih označevalcev v validiranih korpusih , v stolpcih V1 so podatki za gradivo validatorja 1 ter v stolpcu V2 za gradivo validatorja 2.
Če je bilo v validacijskem gradivu manj kot 10 primerov rabe posameznega diskurznega označevalca , odstopanj v odstotkih nismo računali .
Kot lahko sklepamo na podlagi podatkov v tabeli 5 , je najbolj nedvoumno označevanje diskurznih označevalcev dobro / v redu / okej / prav .
Medtem ko lahko za nabor izrazov , ki so že v Verdonik et al. ( 2007a ) definirani kot diskurzni označevalci z veliko pogostostjo , ugotavljamo v splošnem dokaj homogeno označevanje tako med validatorjema kot v izvornih korpusih , pa so velike razlike pri označevanju ostalih , " novih " izrazov , ki po presoji validatorjev in označevalca korpusa tudi lahko opravljajo vlogo diskurznega označevalca , pa v referenčni raziskavi ( Verdonik et al. , 2007a ) niso bili obravnavani .
Zlasti velike razlike so pri izrazih in , torej , pa , namreč ipd. , katerih konektorska vloga je sicer že bila prepoznana v domači ( npr. Gorjanc , 1998 ) literaturi , za tuje tem sorodne izraze ( npr. v angl. and , so ) pa je prepoznana tudi pragmatična vloga ( Schiffrin , 1987 ) .
Razlike so nedvomno v veliki meri posledica tega , da validatorja nista imela na voljo vira , ki bi podrobneje obravnaval pragmatične vloge teh izrazov , brez dvoma pa lahko sklenemo , da kaže razširiti raziskavo diskurznih označevalcev na nekatere priredne veznike ( in , torej , pa , namreč ...
V prispevku smo predstavili validacijo označevanja diskurznih označevalcev v korpusih Turdis-2 in BNSIint ter skušali oceniti , do kolikšne mere so rezultati korpusne analize diskurznih označevalcev , ki smo jih uporabljali v jezikoslovnih raziskavah , nevtralni , ter preliminarno oceniti , ali je shema za označevanje diskurznih označevalcev , predstavljena v ( Verdonik et al. , 2007a ) , dovolj natančna oziroma v katerih segmentih jo je treba dopolniti .
Pri nadaljnjem razvoju označevanja diskurznih označevalcev v jezikovnih virih bi tako kazalo dodatno pozornost nameniti predvsem zdaj in ne ?
Število in dolžina intervjujev v BNSIint .
Število pogovorov ter dolžina v minutah in številu pojavnic validacijskega korpusa skupno ter v odstotkih od celotnega gradiva Turdis-2 .
črpanje primerov za japonsko-slovenski slovar iz vzporednega korpusa .
Na FFUL in IJS med urejanjem spletnega japonsko-slovenskega slovarja za študente japonščine , ki nastaja ob spremljanju potreb porabnikov in njihovem sodelovanju , skušamo z uporabo jezikovnih tehnologij slovar čimbolj učinkovito dopolnjevati in dograjevati .
Iz vzporednega korpusa , ki nastaja v okviru vaj iz prevajanja med slovenščino in japonščino , ter vzporednih besedil , ki smo jih s pomočjo iskalnikov in regularnih izrazov črpali s spleta , smo zbrali stavčne primere k vsem slovarskim geslom , ki jih vzporedni korpus vsebuje .
Pri pogostih besedah , ki so se v korpusu največkrat pojavljale , smo število primerov omejili in v korpusu zaradi lažjega branja izbrali najkrajše povedi z izbranimi gesli .
Slovar je bil leta 2003 predelan v obliko XML po priporočilih TEI ( Erjavec idr. 2003 ) in postavljen na strežnik Instituta Jožef Stefan , kjer je od takrat prosto dostopen ( http://nl.ijs.si/jaslo/ ).
Število uporabnikov je tudi za slovenske razmere majhno , zato je projekt izrazito netržen .
Tako smo na primer po ugotovitvi , da uporabniki velikokrat iščejo japonske besede in izraze v latinici , s pomočjo obstoječega orodja dodali latinizirano obliko vsem slovarskim geslom , v isti nadgradnji pa dodali tudi podatke o težavnostni stopnji besedišča po seznamu besedišča za osrednji izpit iz znanja japonščine kot tujega jezika JLPT ( Erjavec idr. 2006 ) .
Slovarsko gradivo je bilo tudi vključeno v orodje za podporo branju japonskih besedil Reading Tutor ( Kawamura 2005 ) .
Slovar je trenutno zastavljen kot enosmerni japonsko-slovenski slovar , a omogoča tudi iskanje po slovenskih prevodnih ustreznicah in primerih .
Iz analize iskalnih nizov , ki jih je zabeležil strežnik , smo ugotovili , da so uporabniki v več kot polovici primerov iskali slovenske besede , kar nakazuje potrebo po slovensko-japonskem slovarju , ki je šele v načrtu .
25.000 slovenskimi prevodnimi ustreznicami , a samo 2.375 primerov rabe .
Ker so primeri rabe nedvomno velikega pomena v slovarju za začetnike in ker se je v zadnjih letih na oddelku nabrala manjša zbirka japonsko-slovenskih vzporednih besedil ( Hmeljak Sangawa 2007 ) , smo se odločili to gradivo dograditi in urediti v manjši vzporedni korpus , da bi iz njega črpali primere besedne rabe za dvojezični slovar .
V sledečih razdelkih opisujemo zbiranje gradiva za korpus , urejanje korpusa in črpanje primerov ter ocenjujemo uporabnost tako dobljenih primerov rabe .
56 milijonov besed ( http://evrokorpus.gov.si/ ) oz. 27,7 milijonov slovenskih besed ( Steinberger et al. 2006 ) , iz iste zakonodaje pa so nastali tudi vzporedni korpusi , ki združujejo slovenščino z nemščino , francoščino , španščino in italijanščino .
Tudi za japonščino obstajajo velike količine japonsko-angleških besedil , iz katerih so tudi že črpali slovarsko ponazarjalno gradivo ( Breen 2003 ; Tanaka 2001 ) .
Za jezikovni par japonščina-slovenščina je jezikovnih virov bistveno manj : med obema jezikovnima področjema je razmeroma malo tako kulturnih kot gospodarskih in drugih stikov , do pred 10 leti pa skoraj ni bilo prevajalcev sposobnih prevajanja med japonščino in slovenščino .
Zato v primerjavi z drugimi jezikovnimi pari obstaja razmeroma malo prevedenih besedil , še manj pa takih v lahko dostopni elektronski obliki .
Vrste besedil v korpusu .
Študenti 3. letnika japonologije prevajajo v slovenščino japonska besedila , večinoma o japonski družbi , običajih ali dogodkih , študenti 4. letnika pa prevajajo v japonščino slovenska besedila o slovenskih krajih in znamenitostih , zato besedila vsebujejo poleg splošnega tudi besedišče , ki je specifično za obe deželi .
Izhodiščna besedila črpamo s spleta , tako da so že v elektronski obliki ; študentske prevode preverimo in popravimo v razredu , nato jih objavimo v stavčno poravnani obliki kot študijsko gradivo na fakultetnem strežniku ( http://e-ucenje.ff.uni-lj.si/ ), s čimer je bilo gradivo že pripravljeno za vključitev v korpus .
b ) Izročki in gradivo japonskih gostujočih profesorjev na FFUL .
Tako izvirna besedila kot prevodi so že bili v elektronski obliki , avtorji in prevajalci pa so se strinjali s tem , da besedila objavimo na spletu , tako da smo lahko tudi to gradivo vključili v korpus .
Zbrali smo odlomke iz dveh ducatov romanov in novel , ki so bili doslej prevedeni iz japonščine v slovenščino , ter prvega in doslej edinega knjižnega prevoda slovenske leposlovne proze , ki je izšel letos .
Leposlovna dela seveda krijejo avtorske pravice , ki omejujejo razmnoževanje in objavljanje besedil , toda menimo , da citiranje posameznih povedi kot ponazarjalni primer v slovarju zaradi omejene količine citiranega besedila ne krši avtorskih pravic .
Za druge jezikovne pare , ki vključujejo angleščino , obstajajo že uspešni poskusi samodejnega črpanja vzporednih besedil v dveh jezikih s spleta ( Resnik 1998 , Resnik in Smith 2003 , Fry 2005 ) ; spletnih strani , ki so prevedene iz raznih jezikov v angleščino , je veliko , vendar za jezikovni par japonščina-slovenščina nismo pričakovali velikih količin vzporednih besedil , zato smo za začetek ročno poiskali besedila in sproti preverjali njihovo relevantnost in kakovost .
Tako smo dobili strani na portalih , kjer je glavno besedilo ( večinoma v angleščini , a tudi v francoščini , ruščini in esperantu ) prevedeno v več tujih jezikov , vključno z japonščino in slovenščino : od bolj tehničnih strani , kot so Googlove strani podpore , priročniki programske opreme , meniji in vmesniki raznih portalov , do bolj preprostih in razumljivih strani verskih skupin ( Jehovove priče ipd. ) , jezikovnih priročnikov , turističnih informacij in podobnih besedil na težavnostni ravni , ki je primerna tudi za začetnike .
Podkorpusa KDE in OpenSubtitles vključujeta tako japonščino kot slovenščino , vendar prvi vsebuje veliko zelo tehničnega izrazja in težko razumljivega besedila , v drugem pa so fraze sicer vsakdanje in razumljive tudi za začetnika , toda velikokrat se prevod sploh ne ujema , saj so podnapisi po svoji naravi povzetki govorjenega besedila , pri čemer se v japonskem in slovenskem podnapisu iste ( največkrat angleške ) govorne enote včasih ohranijo različni deli le-te , kar veliko pa je bilo tudi napak v prevodih , ki jih prispevajo prostovoljci .
Dobljena besedila v raznih formatih smo nato normalizirali v besedilno obliko , poenotili vse kodiranje v UTF-8 in poravnali na ravni povedi .
Tako dobljena besedila smo pretvorili v obliko XML .
Pri osnovnem besedišču , kjer so v geslih že bili primeri rabe , smo primere iz korpusa grafično ločili od obstoječih slovarskih primerov , kot je prikazano v sliki 1.
Na koncu vsakega primera iz korpusa puščica označuje povezavo na stran z bibliografskimi podatki o besedilu , iz katerega je primer vzet : vir ( naslov spletne strani ali podatki o knjigi ) originalnega besedila in prevoda ter jezik in avtor le-teh .
Za uporabnika bi bila še bolj pregledna grafična izpostavitev tistega dela slovenskega primera ( besede ali zveze ) , ki odgovarja japonski iztočnici , toda samodejno vzporejanje besedila na besedni ravni presega zmožnosti tokratnega projekta .
Z opisanim postopkom smo polovici gesel v slovarju uspeli dodati dejanske primere rabe z ustreznim prevodom .
Primeri rabe v slovarju so velikega pomena pri učenju jezika , saj lahko uporabnik iz njih pridobi informacije o pomenskih , skladenjskih , kolokacijskih , pragmatičnih in slogovnih lastnostih določene besede .
To je še posebej pomembno pri japonščini , ki ima v primerjavi z evropskimi jeziki slogovno in pragmatično razčlenjeno besedišče , saj se za isti pojem , ki se v slovenščini izraža z eno samo besedo , velikokrat uporabljajo različni sinonimi glede na formalnost situacije , govorčevo starost in spol , sobesedilo idr. Pri takih besedah so v geslih našega slovarja kazalke na bolj ali manj vljudne idr. sinonime , ravno iz primerov pa je najbolj nazorno in intuitivno razvidno tipično sobesedilo določene besede .
Primeri iz korpusa seveda niso deležni običajnega slovaropisnega postopka analize korpusnih primerov , sinteze geselskega članka z definicijo oz. prevodom in ureditve oz. priredbe navedenih primerov , zato se razlikujejo od običajnih slovarskih ( prirejenih ali izmišljenih ) primerov v tem , da njihovo besedišče ni omejeno na osnovno ( torej so lahko ostale besede v primeru težje od iztočnice , ki jo primer ponazarja ) , skladnja ravno tako ni nujno preprosta , večinoma so vezani na sobesedilo , tako da niso vedno razumljivi , ko jih iz sobesedila iztržemo , pri primerih iz vzporednega korpusa pa se zgodi tudi to , da v slovenskem prevodu sploh ni prevoda japonske iztočnice , ki naj bi jo primer ponazarjal , ker se pojavlja v širšem sobesedilu .
Težave na skladenjskem nivoju so delno rešljive z implementacijo algoritma za izbiranje najlažjih primerov , v končni fazi pa bo še vedno potrebno opozorilo uporabniku , da gre za realne primere rabe s prevodnimi ustreznicami , ki niso nujno tako splošne kot ustreznice v jedru gesla .
Vendar smo opazili , da korpusni primeri prispevajo tudi nove prevodne ustreznice , ki v slovarju še niso bile navedene , še posebej pri frazemih .
Glede na to , da so ravno kolokacije ena od težjih leksikalnih vidikov učenja tujega jezika ( Gorjanc in Jurko 2004 ) , bi naš slovar potreboval dopolnitev kolokacijskih informacij , še posebno glede na to , da se ga uporabniki poslužujejo tudi za aktivno rabo , z iskanjem slovenskih besed .
Ravno korpusni primeri z večbesednimi leksikalnimi enotami in njihovimi prevodi v kontekstu lahko tu nudijo koristno gradivo tako za uporabnike kot tudi za urejevalce slovarja pri postopnem dopolnjevanju le-tega .
Pri dveh podobnih projektih za samodejno črpanje primerov iz korpusa za vnos v japonski slovar ( Yoshihashi in Nishina 2007 , Mizuno idr. 2008 ) se pri izboru primerov poleg kriterija dolžine uporabljajo tudi drugi kriteriji : oba projekta izbirata primere glede na težavnost besedišča , pismenk in slovničnih vzorcev , ki se merijo po standardih izpita iz japonščine kot tujega jezika ( Japan Foundation 2004 ) , Yoshihashi in Nishina pa poleg tega na osnovi samodejne skladenjske analize izbirata skladenjsko najmanj razvejane povedi .
V projektu za črpanje angleških slovarskih primerov iz korpusa ( Kilgarriff idr. 2008 ) se poleg kriterijev za izbiranje čim bolj razumljivih primerov uporabljajo tudi kriteriji za določanje najbolj tipičnih primerov , na osnovi merjenja kolokacijskih vzorcev .
Ob tem se mora seveda uporabnik zavedati , da korpusni primer nudi prevodno rešitev v konkretnem sobesedilu , ki je ne moremo posplošiti tako kot pri izmišljenih , čim bolj splošno veljavnih primerih v slovarjih .
Pridobljeni korpus in primeri so se izkazali za koristne , ker so prispevali ilustrativno gradivo za polovico slovarskih iztočnic , obenem pa bi večji in bolj uravnotežen korpus omogočil boljše kritje tako števila iztočnic kot tudi podpomenov in posebnosti rabe pri vsaki iztočnici , zato načrtujemo nadaljevanje začetega dela .
tip besedila delež v korpusu .
Pri gradnji smo večpomenske besede razdvoumili s pomočjo besedno vzporejenega večjezičnega korpusa in drugih že obstoječih wordnetov , enopomenske besede in besedne zveze pa smo pridobili iz dvojezičnih virov .
Predstavljena različica wordneta vsebuje skoraj 20.000 različnih literalov oz. 17.000 sinsetov , ki so večinoma samostalniški .
Težišče prispevka je na analizi wordneta glede na skupine konceptov in domene , v katere generirani sinseti spadajo , iz katerega vira so bili sinseti ustvarjeni in kakšne relacije veljajo med njimi .
V drugem delu analize besedišče iz wordneta primerjamo s korpusom jos100k .
Prva tovrstna zbirka za angleški jezik je začela nastajati pred dobrima dvema desetletjema na Univerzi v Princetonu ( Fellbaum 1998 ) in je kmalu postala eden najbolj priljubljenih pripomočkov pri avtomatskem razumevanju naravnega jezika , kot so pridobivanje in luščenje informacij , razdvoumljanje in strojno prevajanje .
Od takrat naprej pa družina wordnet samo še raste ; združenje Global WordNet Association na svojih spletnih straneh trenutno poroča o obstoju wordnetov v 50 različnih jezikih .
Gradnje wordnetov se raziskovalci lotevajo na različne načine , ki so odvisni od leksikalnih virov , ki jih imajo na voljo .
Tudi slovenski wordnet smo skušali izdelati s pomočjo že obstoječih virov , kar so za slovenski jezik večinoma korpusi , saj za slovenščino prosto-dostopnih in obsežnih leksikalnih virov za splošno besedišče praktično ni .
Prednost tega modela je , da zagotavlja najvišjo možno stopnjo ujemanja med različnimi jeziki .
Pristop vključuje tudi visoko stopnjo avtomatizacije , kar raziskovalcem prihrani ogromno časa in finančnih sredstev .
Prispevek predstavlja wordnet za slovenščino , ki smo ga razvili v skladu z zgornjimi načeli .
V drugem razdelku opisujemo postopek gradnje , v tretjem analiziramo vsebino izdelane zbirke , njeno pokritje pa v četrtem razdelku preverjamo na korpusu jos100k .
Pri delu smo izhajali iz predpostavke , da so prevodi verodostojen semantični vir in da je semantično relevantne informacije mogoče izluščiti iz različnih že obstoječih virov .
Osnovni nabor sinsetov smo pridobili z avtomatskim prevajanjem srbskega wordneta s pomočjo slovenskosrbskega slovarja , ki smo jih nato tudi ročno pregledali in popravili ( glej Erjavec in Fišer 2006 ) .
Nadaljnji razvoj je izhajal iz Princeton WordNeta ( PWN ) in je potekal v dveh delih .
Prevodne ustreznice za literale , ki imajo v PWN samo en pomen in jih torej ni potrebno razdvoumljati , smo izluščili iz Wikipedije in sorodnih virov , podobno , kot so to storili Declerck idr. ( 2006 ) in Casado idr. ( 2005 ) .
S pomočjo večjezičnih vzporednih korpusov in wordnetov za druge jezike pa smo se spopadli še z večpomenskimi literali .
Besedno vzporejene paralelne korpuse so za iskanje sinonimov oz. ločevanje pomenov besed uporabili že van der Plas in Tiedemann ( 2006 ) ter Dyvik ( 2002 ) .
Pri tem pristopu smo uporabili večjezični vzporedni korpus SEE-ERA.NET ( Tufis in dr. 2008 ) , ki je podkorpus korpusa JRC-Acquis ( Steinberger in dr. 2006 ) .
Vsebuje približno 1 milijon besed v osmih jezikih ( mi smo poleg slovenščine uporabili še angleščino , romunščino , češčino in bolgarščino ) in je že stavčno poravnan .
Z uporabo različnih prosto dostopnih orodij smo korpus v vseh petih jezikih besednovrstno označili in ga lematizirali ter ga nato z orodjem Uplug ( Tiedemann 2003 ) še vzporedili na ravni besed .
Za angleščino smo uporabili PWN , za češki , romunski in bolgarski jezik pa wordnete iz projekta BalkaNet .
Na koncu smo vse slovenske besede , ki so od ostalih jezikov podedovale isti ID , združili v isti sinset .
Angleško-slovenski leksikon smo iz nje izluščili na podlagi povezav med članki na isto temo v obeh jezikih , ki jih člankom dodajajo uporabniki , zato ne vsebujejo veliko napak .
Na koncu smo rezultate vseh pristopov združili .
Ker z avtomatskim pristopom nismo mogli izdelati celotnega wordneta , smo se strukturnim luknjam v mreži , ki aplikacijam otežujejo uporabo wordneta , izognili tako , da smo za manjkajoče sinsete iz angleškega wordneta prevzeli njihovo strukturo in relacije .
Vsak sinset ima svojo identifikacijsko kodo , na podlagi katere je mogoče najti ekvivalenten sinset v wordnetih za vse ostale jezike , ki uporabljajo kode PWN .
Sinset vsebuje še informacije o besedni vrsti , skupini konceptov , ki jim pripada , področno oznako , povezavo na ontologijo SUMO ter semantične in leksikalne relacije , ki kažejo na druge sinsete v mreži .
Zbirko smo oblikovali v formatu XML , ki ga zahteva pregledovalnik in urejevalnik VisDic in je prikazan v sliki 1 ( Horak in Smrž 2000 ) .
Zanima nas njihova besedna vrsta , skupine konceptov in domene , v katere generirani sinseti spadajo , ter vir , iz katerega so bili ustvarjeni .
S kombinacijo metod , opisanih v prejšnjem razdelku , smo dobili 16.886 sinsetov oz. 19.582 različnih literalov .
Popvprečna dolžina sinseta je 1,16 literala , najdaljši sinset ima 16 literalov ( ENG20-02498705-v ) in izhaja iz prve različice wordneta , kjer so bili angleški sinseti prevedeni s pomočjo dvojezičnega slovarja , nato pa ročno pregledani in popravljeni .
Slovenski wordnet vsebuje tako enobesedne ( 11.099 ) kot večbesedne literale ( 8.483 ) .
Enobesedne literale smo pridobili predvsem iz korpusa , večbesedne pa iz Wikivirov , Eurovoca in z ročnim pregledom avtomatsko generiranih sinsetov prve različice slovenskega wordneta .
Analiza sinsetov glede na besedno vrsto in skupine konceptov .
V tabeli 1 prikazujemo rezultate analize sinsetov glede na besedno vrsto in skupine konceptov , v katere sodijo .
251 506 158 146 1.061 Skupaj 1.201 2.154 1.150 12.379 16.884 Tabela 1 : Sinseti glede na besedno vrsto in skupine konceptov .
Osnovni koncepti iz prvih dveh skupin so v slovenskem wordnetu zelo dobro zastopani , saj so večinoma podedovani iz prejšnje različice , v kateri smo se osredotočili ravno nanje , z avtomatskim pristopom pa nam je uspelo pridobiti še nekaj konceptov iz tretje skupine in veliko število specifičnih konceptov , tako da slovenski wordnet vsebuje četrtino vseh konceptov iz PWN .
Sinseti v PWN so razvrščeni v približno 200 domen , slovenski pa jih vsebuje 144.
V Tabeli 2 je naštetih deset domen , ki so v slovenskem wordnetu najpogosteje pripisane literalom skupaj z viri , na podlagi katerih so bili ti ustvarjeni .
Sledijo ji koncepti iz domen zoologija , botanika in biologija .
Večpomenski literali , ki se pojavljajo v več sinsetih , so šteti za vsak pomen posebej .
Kljub temu , da korpus SEE-ERA.NET ni splošen , je korpusni pristop dal toliko splošnega besedišča , ker smo leksikon razdvoumljali s pomočjo wordnetov iz BalkaNeta , ki so ob zaključku projekta pokrivali predvsem osnovne koncepte .
Upoštevane so samo tiste relacije , ki izhajajo iz zapolnjenega sinseta in kažejo na drug zapolnjen sinset .
Relacije , kot so derivacija , antonimija in glagolska skupina , niso povsem jezikovno neodvisne , zato jih bo za slovenščino v prihodnosti potrebno preveriti in potrditi .
Kaže neposredno na slovenski sinset Podrobneje nas je zanimala hipernimija , ki predstavlja 46 % vseh relacij med slovenskimi sinseti .
Razveseljivo je , da je vseh 9 vrhnjih sinsetov v slovenščini : abstrakcija , dejanje , dogodek , entiteta , lastnina , pojav , psihološka značilnost , skupina in stanje .
46 % vseh verig je neprekinjenih , 52 % jih vsebuje manjše število praznih sinsetov ( večinoma po enega ) , samo 2 % verig je takih , ki vsebujejo po pet ali več lukenj .
Pokritje besedišča v korpusu jos100k .
Evalvacijo podrobneje opisujemo v Fišer in Sagot ( 2008 ) , v tem prispevku pa se želimo posvetiti primerjavi besedišča iz wordneta in korpusa jos100k ( Erjavec in Krek , 2008 ) , ki je podkorpus , vzorčen iz korpusa Fida+ .
Vsebuje 100.000 besed in je označen z ročno preverjenimi oblikoslovnimi oznakami in lemami , za analizo pa smo se ga odločili uporabiti , ker ga v nadaljevanju raziskav nameravamo označiti tudi na pomenski ravni .
Ker wordnet vsebuje predvsem samostalnike , smo preverili , do katere mere pokriva te , ki se pojavljajo v korpusu .
Čeprav smo z opisanimi avtomatskimi postopki v slovenski wordnet dodali tudi večbesedne literale , smo se pri korpusni analizi omejili na enobesedne , saj je večbesedne literale zaradi variacij , besednega reda in pregibanja v korpusu težko identificirati .
Frekvenca Samostalniki Št. pomenov < 3 < 30 ≥30 Skupaj ni v wn 2.256 314 1 2.571 enopomenski 104 43 2 149 večpomenski 8 1 0 9 lastni lastni skupaj 2.368 358 3 2.729 ni v wn 2.632 625 10 3.267 enopomenski 761 530 12 1.303 večpomenski 266 642 90 998 občni občni skupaj 3.659 1.797 112 5.568 Samostalniki skupaj 6.027 2.155 115 8.297 Tabela 5.
Pokritje enobesednih samostalnikov v korpusu jos100k .
Kot prikazuje tabela 5 , je v korpusu jos100k 8.297 različnih samostalniških lem ; 33 % je lastnih imen , preostalo so občni samostalniki .
Izdelan wordnet vsebuje 30 % enobesednih samostalnikov iz korpusa JOS .
Med njimi je le 158 lastnih imen , preostalo so občni samostalniki ( 2.301 ) .
Lastna imena so večinoma enopomenska , občni samostalniki pa tako eno - kot večpomenski ( glej sliko 2 ) .
Največ pomenov ima literal položaj , ki se pojavlja v 15 sinsetih .
Pogosti samostalniki iz korpusa so v wordnetu zelo dobro zastopani .
Število pomenov v wordnetu Samostalnik 1 2 3 4 5 > 5 Skupaj lastni 149 4 2 1 2 0 158 občni 1.303 515 233 122 63 65 2.301 Skupaj 1.452 519 235 123 65 65 2.459 Tabela 6.
Večpomenskost enobesednih samostalnikov v korpusu jos100k .
V prvem stolpcu je seznam besed , ki smo jih analizirali , v drugem njihova frekvenca v korpusu JOS , tretji stolpec pa vsebuje število pomenov , ki jih imajo te besede v slovenskem wordnetu .
Največ pomenov ima beseda pot ( 9 ) .
V četrtem stolpcu je število sinsetov , v katerih se iskana beseda pojavi zaradi napake v wordnetu .
Pri avtomatskem generiranju wordneta je prišlo do napak pri razdvoumljanju besed pot in znamka , ki sta poleg pravilnih sinsetov pristali tudi v enem oz. dveh napačnih .
Te napake bi lahko povzročale težave pri avtomatskem razdvoumljanju korpusa , zato jih je potrebno čim prej odpraviti .
Peti stolpec vsebuje število pomenov , ki se v korpusu pojavijo , v wordnetu pa jih ni , kar pomeni , da v teh primerih besedam niti ročno , kaj šele avtomatsko ne bi mogli določiti pravega pomena .
Največ manjkajočih pomenov je za besedi glas in rak , ki jima manjkata po dva pomena , v obeh primerih gre za pomena , ki sta v korpusu pogosta , zato je luknja v wordnetu še toliko resnejša .
pomen bitje 7 2 0 1 1 ok čelo 5 1 0 1 0 ni prst 7 4 0 0 2 ok rak 8 1 0 2 0 ok zmaj 6 1 0 1 0 ni glas 31 5 0 2 2 ni jezik 33 6 0 1 4 ok pot 52 9 1 0 2 ok zemlja 11 5 0 1 2 ni znamka 14 4 2 0 0 ok Tabela 7.
Predzadnji stolpec vsebuje informacije o tem , koliko pomenov iz wordneta se v korpusu za iskane besede sploh ne pojavi , zadnji pa prikazuje , za katere besede wordnet vsebuje najpogostejši pomen iz korpusa .
V prispevku smo predstavili drugo različico slovenskega semantičnega leksikona tipa wordnet , ki je bila avtomatsko izdelana na podlagi prosto dostopnih večjezičnih virov , kot so večjezični korpusi in leksikoni .
Slovenski wordnet trenutno vsebuje skoraj 20.000 različnih literalov , ki pokrivajo večino osnovnih konceptov ter kar precej specifičnih , ki so bili večinoma pridobljeni iz Wikivirov in so s področja biologije .
Primerjava wordneta s korpusom jos100k je pokazala , da wordnet pokriva tretjino besedišča iz korpusa , še posebej dobro so zastopane najpogostejše besede , ki jih je v wordnetu več kot 90 %.
Težava pri nestatističnem strojnem prevajanju je , da je veliko dela z ročnim vnosom slovarja .
Opisane so nekatere težave , ki so se pri tem pojavile , in načini njihovega reševanja .
Velika prednost statističnega strojnega prevajanja pred prevajanjem s pravili je , da ga je mogoče mnogo hitreje prilagoditi na nove jezikovne pare , če le imamo ustrezne vzporedne korpuse .
Pri nestatističnem strojnem prevajanju je glavna ovira izdelava slovarja , kar tipično zahteva veliko ročnega dela ( Rosner , 2004 ) .
Po drugi strani pa nestatističnem strojnem prevajanju laže dodajati nova slovnična pravila in besede , ki so preveč redke , da bi se dovoljkrat pojavljale v korpusih .
Vmesni jezik pa je mogoče uporabiti tudi za pomensko analizo besedilo , kar je lahko prvi korak pri izdelavi povzetkov , odgovarjanju na vprašanja ipd.
Najprej bodo v razdelku 2 na kratko predstavljeni nekateri dosedanji poskusi luščenja leksikona iz vzporednih korpusov , čemur bo v razdelku 3 sledil kratek opis delovanja prevajalnika Presis in načina zapisa slovarja , ki ga potrebuje za delovanje .
V razdelku 4 bo na primerih opisana predlagana metoda luščenja , v 4.2 pa bodo opisane nekatere težave , ki so se pojavile pri preizkušanju v praksi in uporabljene rešitve .
Na koncu bosta v razdelku 5 predstavljena rezultata na primeru nemško-slovenskega in angleško-francoskega vzporednega korpusa .
Druga težava je primerjava jezikov z zelo drugačnim besednim redom ( npr. nemščine z angleščino ( Langlais et al. , 2005 ) ) .
Strojni prevajalnik Presis temelji na jezikovni zbirki Ases .
V njej so shranjene besede ( skupaj z vsemi oblikami ) , zveze ( dveh ali več besed ) , skupine ( po pomenu tesno povezane skupine besed , na primer v slovenščini pri osebah obliki za moški in ženski spol ter njuna svojilna pridevnika ) in predloge ( s podatki o vezljivosti glagolov ) , vse pa povezujejo pomeni , prek katerih potem poteka prevajanje .
Podatki so v Ases vneseni ročno , pri vnosu pa se pomaga tudi z raznimi spiski in statistikami , pridobljenimi iz korpusov .
Presis vhodne stavke najprej s pomočjo analizatorja prevede v vmesni jezik , ki ga potem generator prevede v izhodni jezik .
Analizator je napisan splošno za vse jezike , posebnosti posameznih jezikov rešuje z nastavitvami o značilnostih posameznih jezikov .
Ker prevajanje poteka preko jezikovno neodvisnih pomenov , je za katero koli kombinacijo jezikov dovolj , da sta oba jezika ustrezno povezana na pomene in niso potrebne povezave med vsemi kombinacijami jezikov .
Tudi pomenske povezave so jezikovno neodvisne , vendar so v različnih jezikih dvoumnosti na različnih mestih , zato jih je treba za dodani jezik dopolniti .
Elementi so urejeni hierarhično , in sicer z oklepaji .
Imena elementov so označena s tremi velikimi črkami , ki jim lahko sledijo še parametri ( male črke ) .
V zavitih oklepajih je najprej oznaka ( oznake se zapisane šestnajstiško ) leme , ki ji sledi seznam oznak možnih pomenov .
V oglatih oklepajih je napisana zaporedna številka besede v povedi , na katero se element nanaša .
V lomljenih oklepajih je oznaka kode MSD ( uporabljene so kode , ki so uporabljene v korpusu Fida + ( Arhar , 2007 ) , dodane pa so nekatere dodatne informacije ) .
Zgornji primer je tako stavek , sestavljen iz osebka , povedka in predmeta v tožilniku .
Rezultat analizator je sicer seznam možnih analiz , tukaj je le analiza , ki jo je analizator izbral za najbolj verjetno .
Te oznake omogočajo , da se npr. osebek lahko prevede v predmet ali nasprotno .
V vmesnem jeziku so ob pomenih zapisane tudi oznake lem , tako da lahko v primeru , če besede še nimajo pripisanih pomenov , prevaja tudi s pomočjo pomožnega slovarja , kjer so vhodnim lemam pripisane prevodne leme ( ta pomožni slovar se uporablja tudi pri uporabniškem dodajanju besed ) .
Za svoje delovanje Presis torej potrebuje povezave besed na pomene in ne le seznam možnih prevodov besede .
Dodatna težava samodejnega luščenja so jeziki s pregibanjem in z relativno prostim besednim redom ( npr. slovenščina ali nemščina ) .
Ideja je postopka je , da se pri povezovanju besed na pomene izrabi vmesni jezik , ki ga naredi analizator .
Ročno so bili določeni deli stavkov , ki jih je med seboj možno izenačiti , sama primerjava pa potem poteka avtomatsko .
Presisov vmesni jezik za ta primer je naslednji : /.../
Lahko izenačimo osebka ( 1OSB ) in predmeta v tožilniku ( 2PR4 ) ter povedka ( 0PVD ) .
Ta problem načeloma odpravi razdvoumljanje , vendar se razdvoumljanje v veliki meri zanaša na odnose med pomeni in ker pri besedah , katerih pomene iščemo , ti še niso znani , se lahko zgodi , da analizator izbere napačno možnost .
Druga možnost so napake v vhodnih podatkih , na primer to , da povedi v vzporednih korpusih niso pravilno poravnane ali pa so stavki napačno prevedeni .
Druga možnost bi bila , da med vsemi najdenimi analizami pri ciljnem jeziku izberemo prvo , ki ustreza referenčni analizi .
Zanikanje izvornega stavka .
Če gre za povedkovo določilo , bi si bilo mogoče pomagati tudi s podatki o protipomenkah , ki jih vsebuje Ases .
Do te težave pride , če analizator napačno razdvoumi referenčno besedilo in da na prvo mesto napačen pomen , na katerega se potem poveže beseda .
Kljub temu pa ni popolnoma nerešljiv .
Precej ga omili dejstvo , da je predlagani postopek predviden predvsem kot zagonsko polnjenje podatkovne zbirke z novim jezikom , ki se bo potem predvidoma dopolnjevala naprej ročno , pri čemer se bodo take napake lahko opazile in odpravile .
Druga možna rešitev pa je , da se namesto enega referenčnega jezika uporabita dva ali celo več ( Cohn in Lapata , 2007 ) .
V primeru , da se pomena ne ujemata , bi preskočil luščenje iz stavka , hkrati pa bi bil seznam takih parov stavkov zelo koristen pripomoček za dopolnjevanje razdvoumljanja v slovenščini in angleščini .
Če gre za sistemski pojav ( tipičen primer so svojilni pridevniki ) , je smiselno , da to rešuje že analizator in zgornji primer že analizira tako , da se vidi , da gre za svojilni pridevnik .
V nasprotnem primeru je začasna rešitev , da se taki pari izločijo iz luščenja .
Celostni zaimki so že problematični in bi bilo nanje najbrž bolje le opozoriti , da se zveze preverijo ročno .
Spremenjen vrstni red stavkov .
/.../
Problematično je dejstvo , da je potrebno pred uporabo narediti slovar za želeni jezik , v katerem imajo besede pripisane oznake MSD in leme .
Drugi del je izdelava slovničnih pravil za analizator za želeni jezik , vendar je ta del tako potreben tudi za sam prevajalnik , analizator pa je tudi že v osnovi zastavljen večjezično .
Tako bo v prvi fazi smiselno izluščiti pomene samostalnikov , pridevnikov , prislovov in predlogov ; potem pa v drugi fazi uporabiti te znane pomene za določanje predlog , ki bodo v naslednji fazi spet pripomogle k boljšemu luščenju pomenov drugih besednih vrst .
V rezultat je vključenih nekaj zadetkov z začetka in nekaj s konca seznama .
Za primere , kjer niso izbrani najpogostejši pomeni , je vzrok predvsem vhodni korpus , v katerem zelo prevladujejo pravna besedila .
Prednost predlagane metode pa je to , da se besede vežejo na pomene , kar pomeni , da se npr. za izdelavo slovensko-francoskega slovarja da uporabiti tudi angleško-francoski vzporedni korpus , ki ga je bistveno laže najti kot slovensko-francoskega .
Rezultat luščenja iz angleško-francoskega leksikona je tako naslednji : Stranski rezultat .
Kot stranski rezultat luščenja med nemščino in slovenščino je nastal seznam slovenskih večbesednih fraz , ki so se prevajale v eno nemško besedo ( in še niso bile vnesene kot zveze v Asesu ) .
Napake ( označene s sivim ozadjem ) so predvsem pri dodanih zaimkih , kar je hitro rešljivo , drugače pa je seznam uporaben pripomoček , ki pove , katere slovenske zveze ( in potem ustrezne pomene ) je smiselni vnesti v Ases .
Ob tem , da takih zvez pogosto ni smiselno dobesedno prevajati ( npr. uradni list v angleški official leaf ) in se zato z vnosom izboljša tudi prevajanje med slovenščino in angleščino ( pri čemer se lahko angleški prevodi poiščejo tudi z luščenjem iz angleško-slovenskega vzporednega korpusa , dovolj je torej , da se vnesejo slovenske zveze in pomeni ) , vnesene zveze tudi olajšajo delo analizatorju oz. razdvoumljanju , saj avtomatsko dobijo prednost pred kombinacijami brez takih zvez .
oznaka pomen POV povedek STA stavek OSB osebek PR4 predmet v tožilniku PR3 predmet v dajalniku PRD neposredni predmet PRI posredni predmet PVD povedek PDO prislovno določilo LOC ločilo SFR samostalniška fraza DSF del samostalniške fraze PFR pridevniška fraza DPF del pridevniške fraze SVZ svojilni zaimek JED jedro samostalniške fraze SAM samostalnik PRV pridevnik CLN člen OSZ osebni zaimek NOZ navidezni osebni zaimek GGL glavni glagol GPO pomožni glagol PRF prislovna fraza PRS prislov .
Barve ozadja vrstic pomenijo naslednje : pomen pravilno izluščena povezava na pomen ni najpogostejši pomen napačen pomen odvečen zaimek pri zvezi napačno razdvoumljen pomen .
Vmesni jezik za nemško-slovenski primer .
Spremenjen vrstni red stavkov .
Oblikoskladenjske specifikacije in označeni korpusi JOS .
Jezikovne vire JOS trenutno sestavljajo oblikoslovne specifikacije in dva korpusa .
Jezikovni viri JOS so označeni v skladu s označevalnimi standardi , oblikoskladenjske specifikacije skladno s sistemom MULTEXT-East , tako specifikacije kot korpusa pa skladno z navodili združenja Text Encoding Initative ( Guidelines P5 ) .
Vsi viri so na voljo kot zbirka podatkov za raziskovalne namene po licenci Creative Commons in so namenjeni razvoju jezikovnih tehnologij za slovenski jezik .
Nabor oznak ter način označevanja korpusov po sistemu MULTEXT-East je bil kasneje uporabljen pri številnih slovenskih korpusih , med drugim pri referenčnem korpusu FIDA ( Erjavec in dr. , 1998 ) in FidaPLUS ( Arhar in Gorjanc , 2007 ) .
Poleg tega je večletna raba slovenskega nabora oznak MULTEXT-East pokazala , da bi bile pri naboru potrebne določene spremembe .
Projekt JOS skuša zapolniti vrzel pri jezikovnih virih za slovenščino z izdelavo standardiziranih prosto dostopnih označenih korpusov , skupaj z revidiranim naborom oblikoskladenjskih specifikacij .
Oba korpusa vsebujeta vzorčene odstavke iz korpusa FidaPLUS in sta označena z razdvoumljenimi in ročno preverjenimi lemami in oblikoskladenjskimi oznakami .
Posameznim pojavnicam je pripisan podatek o lemi ter oblikoskladenjski oznaki po sistemu MULTEXT-East ( Erjavec , 2004 ) , vendar v primeru večih možnih lem ali oznak te niso razdvoumljene .
Korpus FidaPLUS ( Arhar in Gorjanc , 2007 ) je bistveno večji ( 620 milijonov besed ) ter vsebuje besedila , nastala med leti 1990-2006.
Korpus je prosto dostopen za raziskovalne namene , kot podatkovna zbirka pa je dostopen le članom konzorcija ( Amebis , DZS , Univerza v Ljubljani , Univerza v Mariboru , Institut Jožef Stefan ) , za dostop je namreč potreben podpis konzorcijske pogodbe .
Označevalnik podjetja Amebis označuje s približno 85-odstotno natančnostjo , ostalih 15 % poleg napak pri označevanju vključuje tudi neoznačene neprepoznane besede , ki jih je približno 2 %.
Kljub temu korpus predstavlja dobro podlago za razvoj prosto dostopnega ročno označenega korpusa za namene jezikovnotehnoloških raziskav .
Prvi korak na poti od korpusa FidaPLUS do korpusa JOS je bila pretvorba v format XML po priporočilih TEI P4 ( Sperberg-McQueen in Burnard , 2002 ) , da bi s tem ohranili standardni format in omogočili uporabo orodij za delo s formatom XML , predvsem XSLT .
Format TEI P4 je sicer povratno združljiv s formatom TEI P3 korpusa FIDA in XML je podmnožica formata SGML , vendar končni korpus FidaPLUS kot podatkovna zbirka ni v celoti skladen niti s formatom SGML niti s specifikacijami MULTEXT-East , zato je bil proces pretvorbe zahtevnejši , kot je bilo pričakovati .
Procesiranje je bilo izvedeno s pomočjo niza skript v programskem jeziku Perl , končni pretvorjeni korpus FidaPLUS pa imenujemo Fida+X .
Korpus Fida+X je bil uporabljen kot vir za izdelavo korpusov JOS .
Ob preprostem prevzemanju razmerij iz korpusa FidaPLUS bi bila uravnoteženost korpus JOS vprašljiva .
- Kvaliteta besedil : ker bo končni korpus jezikoslovno označen , je bilo pomembno , da vsebuje le smiselne in zaključene odstavke in pojavnice : FidaPLUS vsebuje dele besedil , ki se ponavljajo , in primere , kjer so ob pretvorbi iz izvornih besedil nastali zelo kratki stavki ali odstavki , ki včasih vsebujejo tudi ostanke podatkov o formatiranju .
- Avtorske pravice : čeprav bi bilo za določene tipe analiz bolje vključiti celotna besedila , bi bilo to vprašljivo s stališča kršenja avtorskih pravic besedilodajalcev , vključitev krajših delov besedil pa je manj problematična – postopek vzorčenja poleg tega prispeva k večji raznolikosti korpusa .
Pri prvem koraku vzorčenja so naključna izbrana celotna besedila iz korpusa Fida+X , vendar so izključena besedila z nepravilnimi deli , določeni tipi besedil pa so v vzorcu bolj zaželeni .
Sledi faza obteževanja po tipih besedil in drugih metapodatkih z namenom , da se uravnoteži delež časopisnih besedil v primerjavi z drugimi tipi besedil .
Tabela 1 vsebuje podatke o številu besedil , odstavkov , stavkov , besed ter pojavnic ( besed skupaj z ločili ) .
V korpusu FidaPLUS je vsako besedilo označeno glede na tip in zvrst besedila .
Pri prvem koraku vzorčenja korpusov JOS smo te kategorije različno obtežili in razmerja se tako razlikujejo od korpusa FidaPLUS .
Specifikacije za vsak posamezen jezik opredeljujejo , katere so veljavne oznake in kaj pomenijo .
Tako na primer določajo , da je MSD s črkovnim nizom Sometn veljaven za označevanje slovenščine in je ekvivalenten naboru naslednjih lastnosti : samostalnik , vrsta = občni , spol = moški , število = ednina , sklon = tožilnik , živost = ne .
Ker je slovenščina oblikoslovno izjemno bogat jezik z velikim številom lastnosti pri pregibnih besednih vrstah , je število veljavnih oznak precej večje kot pri večini zahodnoevropskih jezikov – okrog 2.000.
Izhodišče pri odločanju o prenovi nabora oznak MULTEXT-East je bila ocena , da osnovni način formalnega zapisa in struktura oznak dobro služi svojemu namenu , da pa prihaja do težav pri določenih lastnostih in njihovih vrednostih , predvsem pri nekaterih dovoljenih kombinacijah lastnost-vrednost , ter pri pripisovanju nekaterih MSD-jev določenim lemam in oblikam .
Nadaljnja težava , tokrat celotnega nabora specifikacij MULTEXT-East , je razvrstitev lastnosti v črkovni niz MSD-jev .
Ker specifikacije veljajo za celo vrsto različnih jezikov , tiste lastnosti , ki so značilne samo za določen jezik , končajo na koncu črkovnega niza s praznimi mesti pri lastnostih , ki jih jezik ne izkazuje .
Tako lahko pride do izjemno dolgih črkovnih nizov , kot je npr. glagolski Gppspe--n-----d .
Smiselno je torej dovoliti prerazporeditev mesta lastnosti glede na posamezen jezik , kar omogoči , da so nizi krajši , hkrati pa s pomočjo preslikave lastnosti in vrednosti ohranimo kompatibilnost označevanja z drugimi jeziki .
Pri slovenskem jeziku sta bila upoštevana nabora oznak , uporabljena pri označevanju korpusa LC-STAR ( Verdonik et al. , 2004 ) ter korpusa Nova beseda ( Jakopin in Bizjak , 1997 ) .
Končni nabor oznak JOS v osnovi ohranja načela nabora MULTEXT-East , vendar postopek preslikave med obstoječimi oznakami v korpusu FidaPLUS po sistemu MULTEXT-East in novimi po sistemu JOS ni trivialen , kajti pri pretvorbi je potrebno upoštevati tudi besedno obliko in / ali lemo .
Tabela 4 kaže povzetek kategorij in lastnosti nabora oznak JOS .
Specifikacije vsebujejo tudi listo veljavnih MSD-jev , ki jih je 1.908 , pri vsakem pa so dodani tudi konkretni primeri besednih oblik iz leksikona .
Nabor oznak je torej kljub spremembam precej obsežen in nekatere kombinacije lastnosti so še vedno precej redke .
Tako denimo se v korpusu jos100k pojavlja 1.064 različnih MSD-jev , kar je le 55,7 % celotnega nabora .
Slika 1 kaže primer iz specifikacij nabora JOS v formatu XML .
Specifikacije so na voljo v angleškem in slovenskem jeziku , to velja za kategorije , lastnosti in vrednosti .
Jezikoslovno označevanje korpusa .
Ročno označevanje korpusov je izvedla ekipa študentov pod strokovnim nadzorom .
Ročno označevanje je potekalo s pomočjo spletnega vmesnika , ki na podlagi danih parametrov ( npr. regularnih izrazov , ki lahko upoštevajo besedno obliko , lemo ali MSD ) generira preglednice v formatu MS Excel .
Označevanje korpusa jos100k je potekalo vzporedno z nastajanjem oblikoskladenjskih specifikacij JOS , novega nabora oznak in preslikave MSD-jev .
Proces je bil zato bolj zapleten , vendar so specifikacije , nabor oznak in oznake v korpusu zato konsistentnejši .
Celoten korpus jos100k sta preverjala po dva različna označevalca , pojavnice , pri katerih je med njima prihajalo do razlik , pa so bile preverjene še s strani tretjega .
V primerih , kjer so bile odkrite nekonsistentnosti pri označevanju določenih kategorij oz. lastnosti , so bile te v kasnejših korakih odpravljene , korpus pa poenoten , rezultat pa je bil v celoti ročno označeni zlati standard JOS .
Rezultat je bil korpus , kjer je vsaka pojavnica označena s tremi oznakami : ročno preverjena oznaka , oznaka , ki jo je pripisal Amebisov označevalnik in oznaka , ki jo je pripisal označevalnik TnT .
V tabeli 5 je prikazan rezultat poskusa .
Druga vrstica kaže oceno natančnosti označevalnika TnT ( 86,6% ), tretja pa oceno natančnosti Amebisovega označevalnika ( 85,7% ).
Amebisov označevalnik sicer ne pripisuje oznak neznanim besedam , ki obsegajo približno dva odstotka pojavnic , pri ročnem označevanju pa so bile označene vse pojavnice ( tudi npr. tujejezične citatno pisane pojavnice , ki spadajo v kategorijo " neuvrščeno " ) , enako tudi z označevalnikom TnT .
Pri milijonskem korpusu izračun 7,7% + 8,6% + 2,4% pokaže , da je potrebno ročno validirati okoli 190.000 pojavnic , končna pravilnost označevanja pa je ocenjena na 96,8 % , saj moramo odšteti primere ( 3,2% ), kjer s križanjem rezultatov obeh označevalnikov ne moremo zaznati napak .
Ročno označevanje milijonskega korpusa je v teku , hkrati pa raziskujemo načine , kako izboljšati rezultat pri označevanju izvornih besedil iz korpusa Fida+X s kombiniranjem rezultatov označevanja obeh označevalnikov .
Tako korpusa kot oblikoslovne specifikacije so kodirani v formatu XML v skladu s priporočili združenja Text Encoding Initative .
Rezultati so dostopni skupaj s pripadajočo shemo XML , ki omogoča formalno validiranje specifikacij in korpusov .
Drugi del korpusa sestavljajo besedila .
Vsako besedilo v korpusu vsebuje povezavo na opis v kolofonu in je sestavljeno iz niza vzorčenih odstavkov , te sestavljajo stavki in stavke posamezne pojavnice in ločila .
Poseben element označuje presledke , vsaka pojavnica pa ima v obliki atributa podatek o lemi in oblikoslovni oznaki .
Komercialna uporaba korpusov ni dovoljena , ker tega ne dopušča pogodba med besedilodajalci in konzorcijem partnerjev , ki so izdelali korpusa FIDA in FidaPLUS .
Korpusa JOS sta na voljo v izvornem formatu XML TEI P5 ter v več formatih , ki so primerni za predprocesiranje in druge predelave .
To omogoča iskanje po posameznih lastnostih pojavnice ne glede na najvišjo kategorijo , besedno vrsto .
Tako bi pri iskanju vseh pojavnic , ki označene z vrednostjo " ženski spol " in " rodilnik " , v iskalniku Corpus Workbench uporabili iskalni pogoj [ spol = " ženski " & sklon = " rodilnik " ] .
Korpusi so dostopni tudi preko spletnega vmesnika , ki uporablja Corpus Workbench , in je ravno tako dosegljiv na domači strani projekta .
Prispevek je opisal korpus FidaPLUS kot vir za oba korpusa JOS , postopke čiščenja in vzorčenja besedil , prenovljen nabor oznak JOS ter oblikoslovnih specifikacij .
Nadaljnje delo pri projektu JOS zajema naslednji dve ravni jezikoslovnega označevanja besedil , predvsem skladenjsko označevanje korpusa jos100k in pomensko označevanje in razdvoumljanje s pomočjo slovenskega semantičnega leksikona , narejenega po vzoru WordNet ( Erjavec in Fišer , 2006 ) .
besedna vrsta lastnosti s številom vrednosti samostalnik .
Kategorije nabora oznak JOS z lastnostmi in številom vrednosti .
Oblikoskladenjske oznake JOS : revizija in nadgradnja nabora oznak za avtomatsko oblikoskladenjsko označevanje slovenščine .
Končni rezultat nadgradnje – nabor oblikoskladenjskih oznak JOS – je zasnovan s ciljem vzpostavitve enotnega označevalnega standarda za slovenščino in je kot tak ponujen v oceno zainteresirani strokovni javnosti .
Članek zaključujejo podatki o dostopnosti nove kodne tabele ter povezane dokumentacije .
S tem , ko posamezni pojavnici pripišemo , v kateri osnovni slovnični razred spada v specifičnem jezikovnem sistemu ter nabor lastnosti , ki jih izkazuje znotraj tega razreda , omogočimo nadaljnjo izrabo jezikovnega vira na višjem nivoju : posledica označenosti je možnost raziskovanja besedil z uporabo abstraktnejših jezikoslovnih kategorij , ne le golih črkovnih nizov ali lem , kar odpira nove možnosti za jezikoslovne raziskave označenih virov , izrabo le-teh za razvoj metod obdelave naravnega jezika , jezikovnih tehnologij ipd. ( Gorjanc , 2005 ; McEnery , Xiao in Tono , 2006 ) .
Razpoložljivi nabori oblikoskladenjskih oznak za slovenščino .
Ostali argumenti za izbor nabora Multext-East kot izhodiščnega za nadgradnjo so bolj ali manj vezani na z njim označeni referenčni korpus , ki na osnovi besedilne sestave , velikega obsega ter kvantitativnim analizam prijaznega korpusnobesedilnega formata ( Arhar in Gorjanc 2007 ) prinaša za revizijo nepogrešljive informacije ( glej 3.3.2 ) .
Prva verzija nabora oznak Multext-East je nastala med letoma 1995 in 1997 , trenutno je na voljo v svoji tretji različici ( Erjavec , 2004 ; http://nl.ijs.si/ME/V3/ ).
Slednja prinaša tabele oblikoskladenjskih oznak in pojasnila o sistemu njihove rabe za deset evropskih jezikov , med njimi tudi slovenskega .
Na osnovnem nivoju sistem predvideva klasično besednovrstno uvrstitev obravnavane besede , na drugem nivoju pa se označuje njene nadaljnje lastnosti glede na slovarske ter slovnične kategorije , ki jih posamezni besedni vrsti lahko pripišemo ( pridevniku po tem sistemu npr. vrsto , stopnjo , spol , število , sklon , določnost ter živost ) .
Pri pripravi označevalne tabele za več jezikov hkrati je bila potrebna harmonizacija le deloma prekrivnih jezikoslovnih kategorij različnih jezikov ( Erjavec , 2004 ) .
V času priprave kodne tabele referenčni korpus za slovenski jezik še ni obstajal , kar je za snovanje kategorij in njihovih vrednosti pomenilo možnost naslonitve na predvsem predkorpusno jezikoslovno vedenje .
Prav tako še niso bile na voljo informacije o oblikoskladenjskem označevanju slovenščine v smislu empiričnih podatkov o tem , na kakšen način se jezikovnosistemske kategorije , kakor jih opisuje slovensko jezikoslovje , v praksi lahko avtomatsko označijo .
Problemi se kažejo na mestih , kjer je za določitev kategorije oz. vrednosti potrebno : - upoštevanje besedne okolice na skladenjski ravni , ker je določitev vezana na niz pojavnic in ne le na posamezno pojavnico , - razdvoumljanje na osnovi semantičnih informacij , ki je mogoče le na ravni ročnega označevanja ali pa še to ne ( za primere glej 4.2.2 ) .
Težave se pojavljajo tudi na ravni neuravnoteženosti v razmerju pogostnosti oznake v korpusu v primerjavi s številom lem , ki jih oznaka pokriva , in sicer na ravni : - neuravnoteženosti med vrednostmi znotraj kategorije ( npr. vrednost elativ nasproti drugim vrednostim kategorije stopnja pri pridevniku in prislovu ) , - neuravnoteženi razpršenosti posameznih oznak ( npr. vrednost svojilni kategorije nanašanje , ki je pripisana samo zaimkovni lemi svoj ) .
Projekt JOS .
Revizija ter nadgradnja nabora oblikoskladenjskih oznak je potekala prvi polovici leta 2007 v sklopu projekta JOS ( Jezikoslovno označevanje slovenščine ) , katerega glavni cilj je zagotoviti slovenski raziskovalni javnosti prosto dostopen večnivojsko ( oblikoskladenjsko , skladenjsko , semantično ) označen milijonski korpus besedil vsakdanje rabe – korpus JOS ( več o projektu Erjavec in Krek , 2008 ; http://nl.ijs.si/jos/ ).
Revizijo ter nadgradnjo so vodila načela , v večji meri povzeta po priporočilih za oblikoskladenjsko označevanje korpusov EAGLES ( http://www.ilc.cnr.it/EAGLES/ annotate / annotate.html ) , pri čemer pa je bilo glavno vodilo pri izdelavi prenovljenega označevalnega sistema izhajanje izključno iz slovenskega jezika , z upoštevanjem potrebe po primerljivosti oznak z obstoječimi standardi .
V pomoč slednjemu je bila ohranjena struktura kodnih tabel Multext-East , ki za vsako od besednih vrst predvidevajo na besedno vrsto vezane kategorije ter znotraj le-teh nabor vrednosti z enočrkovno reprezentacijo ( prim. Tabeli 1 in 2 ) .
Analiza kvalitete označenosti korpusa .
FidaPLUS Tekom večletne rabe označevalnega sistema MultextEast so se v jezikovnotehnoloških krogih pojavljale pobude za revizijo sistema .
Prva empirična analiza problemov označevanja pa je bila analiza kvalitete oblikoskladenjske označenosti korpusa FidaPLUS , ki je bila po označitvi referenčnega korpusa izvedena na podjetju Amebis , d. o. o. , Kamnik .
V raziskavi je bilo ročno pregledanih 78.000 vrstic označenega korpusnega besedila .
Na tej ravni analize so se za najbolj problematične izkazale kategorije oz. vrednosti , ki za ustrezno določitev zahtevajo upoštevanje okolice obravnavane besedne oblike – tj. označevanja na višjem nivoju ( skladenjskega , pomenskega ) , vendar mora biti njihovo označevanje podprto z ustrezno programsko infrastrukturo , ki za slovenščino trenutno še ni na voljo .
Na ravni oblikoskladenjskega označevanja je torej smiselno vztrajati pri kategorijah , ki so pripisljive na osnovi informacij , ki jih izkazuje besedna oblika kot taka .
Za vsako od besednih vrst je bila izvedena natančnejša analiza potencialnih označevalnih kategorij , pri kateri so bili upoštevani nabori kategorij ter vrednosti , kot jih prinašajo za slovenščino relevantni sistemi označevanja – poleg že omenjenih slovenskih ISJ ZRC SAZU ( Jakopin in Bizjak , 1997 ) in LC-STAR ( Verdonik , Rojc , Kačič , 2004 ) so bili pregledani še označevalni sistemi češkega nacionalnega korpusa ( http://ucnk.ff.cuni.cz/bonito/ ) ter sistema Claws ( http://ucrel.lancs.ac.uk/claws/ ) in Ajka ( http://nlp.fi.muni.cz/projekty/ajka/tags.pdf ).
Pri pregledu potencialnih kategorij so bili upoštevani tudi razpoložljivi jezikoslovni priročniki ( Slovenska slovnica , SSKJ , Slovenski pravopis , Besedišče slovenskega jezika itd. ) – predvsem v zvezi z vprašanji določanja mej med posameznimi vrednostmi znotraj kategorij – vedno pa v kombinaciji z analizo primerov dejanske jezikovne rabe , kakor se kaže v referenčnem korpusu .
V primerih suma , da so meje težko določljive , je bil za problematično kategorijo ali nabor vrednosti izdelan testni nabor korpusnih primerov , ki so bili na ravni obravnavanega problema ročno označeni s strani treh označevalcev , oznake pa v nadaljevanju pregledane ter primerjane .
Vzporedno s pregledom kategorij je potekala analiza že aktualiziranih oznak Multext-East v referenčnem korpusu s stališča podatkov o : - pogostnosti zastopanosti obravnavane oznake v korpusu , - številu različnih lem , ki so v korpusu z obravnavano oznako označene – v večini primerov je sledila tudi analiza nabora teh lem .
Na osnovi teh informacij je bila z upoštevanjem zgoraj navedenih načel za nadgradnjo pripravljena nova kodna tabela za oblikoskladenjsko označevanje .
Analiza kvalitete označevanja ( glej 3.3.1 ) in netrivialnost postopka prekodiranja oblikoskladenjskih oznak Multext-East v oznake JOS , ki je poleg samih oznak zajemal tudi spremembe v pripisovanju lem , sta med drugim pokazali tudi probleme označevanja na ravni zlasti funkcijskih besednih vrst , zato je bila sprejeta odločitev , da se za označevanje v projektu JOS izdelajo leksikoni za izbrane zaprte besedne vrste ( zaimek , predlog , veznik , členek ) .
Pri izdelavi so bili upoštevani tako podatki iz korpusa kot tudi obstoječih jezikovih priročnikov , uvrstitev posameznih besed v izbrani leksikon pa je bila v nadaljevanju preverjena še na osnovi ročnega označevanja korpusnega vzorca , kot bo razvidno iz sledečega poglavja5 .
V sklopu projekta JOS je bil razvit postopek pretvorbe izvornih oznak Multext-East v oznake JOS ( Erjavec in Krek , 2008 ) .
Vsak segment besedila sta pregledala najmanj dva označevalca , v večini primerov po trije .
Na osnovi v tej fazi pridobljenih informacij so bili nova kodna tabela ter leksikoni še enkrat evalvirani .
V samem testnem podkorpusu so bile razlike v označevanju naknadno poenotene – slednji je bil kot tak na voljo kot izhodišče za naslednje stopnje projekta JOS , tj. za označevanje korpusa JOS velikosti milijon besed .
Tabelarni prikaz sprememb .
Do razhajanja v vrednostih kategorij obeh sistemov prihaja že na ravni označevanja vrst glagolov .
Razlog za spremembo nabora vrednosti je dejstvo , da vrednost naklonski glagoli izstopa glede na hierarhijo pomembnosti informacij , ki jih označevalni sistem nudi , pri čemer je potrebno upoštevati dva argumenta .
Če je bil pri vzpostavitvi sistema Multext-East za slovenščino razlog za umestitev te vrste glagolov v posebno skupino na prvem hierarhičnem nivoju formalnoskladenjski ( tj. tvorjenje zvez z nedoločnikom ) , bi pričakovali , da bodo v to skupino vključeni vsi glagoli , ki takšne zveze lahko tvorijo ( npr. tudi fazni glagoli , ki po tem sistemu ostanejo nezajeti ) .
Do obstoja kvalitetnega skladenjskega označevanja slovenščine bo v korpusnih virih podatke o času ( in naklonu ) glagolske oblike mogoče razmeroma enostavno poiskati z upoštevanjem značilne sintagmatike glagolskih pojavnic , pri čemer je relevantno tudi dejstvo , da informacije o glagolskem času in načinu nekaterih besednih oblik prinašata vrednosti sedanjik in prihodnjik , ki ju označevalni sistem JOS prinaša v sklopu kategorije glagolska oblika .
Kategorija glagolski način je bila iz sistema oznak JOS izpuščena tudi zato , ker se je pri analizi skladnosti ročnega označevanja pri označevalcih izkazalo , da je diskrepanca med pripisanimi vrednostmi za potencialno kategorijo glagolskega načina prevelika , da torej označevalci v realnih besedilih med trpnimi strukturami in strukturami s pomenom stanjskosti pogosto ne razločujejo – kar je seveda indikacija za to , da z metodami avtomatskega razdvoumljanja relevantnega podatka o tej kategoriji najbrž ne bo mogoče dobiti .
V sistemu JOS so torej kot deležniki v okviru besedne vrste glagol obravnavani samo opisni deležniki na - l , ostali deležniki so umeščeni med pridevnike .
Da bi zadostili kriterijema strnjenosti in berljivosti oznak , je bila v označevalnem sistemu JOS kategorija vid prestavljena na drugo pozicijo v kodni tabeli .
Obravnava te kategorije v korpusu je leksikonskega tipa .
Določanje vrednosti kategorije vid je torej odvisno od razpoznave semantičnih informacij o pojavnicah , vendar pa so slednje v ustrezni meri nadomestljive s podatki , ki jih prinaša leksikalnopodatkovna zbirka ustreznega tipa .
Gradnja tovrstne zbirke je za slovenščino predvidena ( in za kvalitetno avtomatsko označevanje naravnega jezika na vseh nivojih zaželena ) , za potrebe označevanja korpusa JOS pa je bila oblikovana manj obsežna leksikonska baza podatkov o glagolskem vidu glagolskih lem .
Za določanje vidskega statusa vseh ustreznih glagolskih pojavnic v ročno pregledanem 100.000- besednem podkorpusu so bili analizirani vzorčni segmenti konkordančnih nizov iz korpusa FidaPLUS z ustrezno glagolsko pojavnico v jedru niza in upoštevani podatki v leksikonskih virih ( SSKJ , SP , Besedišče slovenskega jezika , Veliki slovar tujk ipd. ) , opravljena pa je bila tudi analiza razlik v pripisovanju vidskih vrednosti pojavnicam .
Na podlagi zgoraj opisanih kriterijev so bile zasnovane tudi spremembe nabora kodne tabele pri drugih besednih vrstah ( in njim podobnih uporabnostnih kategorijah ) .
Vsa dokumentacija o spremembah kodnih tabel je zato na voljo na internetni strani JOS ( http://nl.ijs.si/jos/ ), skupaj z navodili za označevanje ter označenimi korpusi .
Predvidena je tudi robustizacija sistema oznak JOS , katere rezultat bi bil možnost označevanja z različno granuliranimi nabori oznak , kot je za označevanje angleščine na voljo denimo v sistemu Claws ( http://ucrel.lancs.ac.uk/claws/ ).
Razen v okviru projekta Jezikoslovno označevanje slovenščine ( http://nl.ijs.si/jos/ ) je predvideno nadaljnje delo tudi v okviru projekta Sporazumevanje v slovenskem jeziku ( http://www.slovenscina.eu ), s ciljem razvoja označevalnega sistema za skladenjsko označevanje slovenščine oz. prosto dostopnega avtomatskega skladenjskega razčlenjevalnika ( ang. parser ) za slovenski jezik .
P Kategorija Vrednost Koda 0 besedna vrsta glagol G 1 vrsta polnopomenski naklonski vezni p n v 2 glagolska oblika povednik velelnik pogojnik nedoločnik deležnik namenilnik p v g n d m 3 čas sedanjik prihodnjik nesedanjik s p r 4 oseba prva druga tretja 1 2 3 5 število ednina množina dvojina e m d 6 spol moški ženski srednji m z s 7 način tvornik trpni deležnik t r 8 nikalnost nezanikani zanikani n d …
P Kategorija Vrednost Koda 0 besedna vrsta glagol G 1 vrsta glavni pomožni g p 2 vid dovršni nedovršni dvovidski d n v 3 glagolska oblika nedoločnik namenilnik deležnik sedanjik prihodnjik pogojnik velelnik n m d s p g v 4 oseba prva druga tretja p d t 5 število ednina dvojina množina e d m 6 spol moški ženski srednji m z s 7 nikalnost nezanikani zanikani n d 9 Slovenski glagoli kategorij določnost , klitičnost , sklon , živost , klitičnost s - s ter vljudnost , ki jih sistem Multext-East predvideva na pozicijah 9 – 13 ter 15 , ne izkazujejo .
Besedna vrsta Kategorije in št. vrednosti ( MTE ) Kategorije in št. vrednosti ( JOS ) Razlike v številu ( kategorij ; vrednosti ) Samostalnik vrsta ( 2 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) živost ( 2 ) vrsta ( 2 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) živost ( 2 ) Glagol vrsta ( 3 ) vid ( 2 ) oblika ( 6 ) čas ( 3 ) oseba ( 3 ) število ( 3 ) spol ( 3 ) način ( 2 ) nikalnost ( 2 ) vrsta ( 3 ) vid ( 3 ) oblika ( 7 ) oseba ( 3 ) število ( 3 ) spol ( 3 ) nikalnost ( 2 ) 2 ; 7 Pridevnik vrsta ( 3 ) stopnja ( 4 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) določnost ( 2 ) živost ( 2 ) vrsta ( 3 ) stopnja ( 3 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) določnost ( 2 ) 1 ; 3 Prislov stopnja ( 4 ) stopnja ( 3 ) deležje ( 2 ) 1 ; 3 Zaimek vrsta ( 9 ) oseba ( 3 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) število svojine ( 3 ) vrsta ( 9 ) oseba ( 3 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) število svojine ( 3 ) 3 ; 8 spol svojine ( 3 ) oblika ( 3 ) nanašanje ( 2 ) skladenjska vloga ( 3 ) živost ( 2 ) spol svojine ( 3 ) oblika ( 2 ) Števnik zapis ( 3 ) vrsta ( 4 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) določnost ( 2 ) živost ( 2 ) zapis ( 3 ) vrsta ( 4 ) spol ( 3 ) število ( 3 ) sklon ( 6 ) določnost ( 2 ) .
Korpus FidaPLUS je bil obenem tudi vir za izdelavo podkorpusa JOS ( glej 3.1 ) .
Priporočila so se kot abstrakcija zgledov dobrih praks zaradi pragmatičnih potreb izoblikovala v nekakšen neformalni standard oblikoskladenjskih oznak , zato je njihovo upoštevanje ( ob hkratnem upoštevanju namembnosti korpusa , ki ga oblikoskladenjsko označujemo ) pomembno zlasti z vidika primerljivosti in izmenljivosti korpusnih podatkov .
Raziskava je internega tipa , primarni cilj analize je bila izboljšava jezikovnega analizatorja , s pomočjo katerega je označevanje referenčnega korpusa potekalo , vendar se je ob analizi izkazalo , da številni primeri neustrezne označenosti izvirajo pravzaprav iz zasnovanosti oblikoskladenjskih kodnih tabel .
Slednja ima v jezikoslovju neizpodbitno tradicijo in je kot taka med uporabniki korpusnih virov močno zasidrana ( po tipologiji oznak EAGLES gre npr. za t. i. obvezne oznake ) .
Na ravni pregibnih besednih vrst je vsekakor primerna tudi za avtomatsko obdelavo jezika , problemi se pojavljajo na ravni nepregibnih besednih vrst oz. besednih oblik , ki so glede besednovrstne uvrstitve tudi na ravni leksikona dvoumne ( npr. razmerje med členki in prislovi ) .
Pri čemer je potrebno izpostaviti dejstvo , da so na tak način preverjene seveda le tiste oblike , ki se v korpusnem vzorcu dejansko pojavljajo , ne pa ves leksikonski potencial .
Slednje so brez dvoma pomemben vir podatkov za izboljšavo postopka avtomatskega pripisovanja , žal pa na tem mestu za to temo ni dovolj prostora ( nekaj več informacij je na voljo v Erjavec in Krek , 2008 ) .
Potrebna konsistentnost pri pregledovanju označevanja je bila omogočena na osnovi pripravljenih navodil za označevalce ( ki so na voljo na internetni strani projekta JOS ) .
Pri glagolu kot najkompleksnejši besedni vrsti so se med primerjanimi sistemi oblikoskladenjskega označevanja kazale tudi največje razlike .
" Zloženih glagolskih oblik ( tj. kategorij , ki se izražajo z zloženo glagolsko obliko , op. N. L. ) na oblikoskladenjski ravni označevanja ne obravnavamo , ker v večji strukturi združujejo kombinacijo več glagolov .
Trpnik s se v oblikoskladenjskih označevalnih sistemih navadno ni predpostavljen zaradi kompleksnosti avtomatske določitve statusa besede / morfema se ( prim. Verdonik , Rojc in Kačič , 2003 ) .
Potreben je poudarek , da oblikoskladenjsko označevanje ni vezano na leksikonske informacije samo v primerih , ki so izpostavljeni v članku .
Korpus FidaPLUS , katerega oznake so izhodišče za pretvorbo večine oznak , je bil v celoti označen na osnovi informacij iz leksikalne baze ASES podjetja Amebis .
Razvoj skladenjskega razčlenjevalnika pa je eden od ciljev projekta Sporazumevanje v slovenskem jeziku .
Cilj projekta je zgraditi primerljivi in delno vzporedni korpus besedil s področja turizma v slovenskem , italijanskem in angleškem jeziku , ki bo uporaben kot prevajalski vir , za jezikoslovne raziskave in raziskave turizma .
Cilj projekta je zgraditi primerljivi in delno vzporedni korpus turističnih besedil v slovenskem , italijanskem in angleškem jeziku .
Odločitev za takšen korpus izhaja iz dejstva , da je potrebno turizem pojmovati kot sestavljeno dejavnost , zaradi česar bi moralo biti preučevanje turizma izrazito interdisciplinarno .
Korpus bo uporaben predvsem kot prevajalski vir , za raziskave turizma ter naravne in kulturne dediščine ter za analizo turističnega diskurza ter različne jezikoslovne raziskave .
Pri projektu bo kot pomemben terminološki vir uporabljen tudi Tezaver turizma in prostočasnih dejavnosti Svetovne turistične organizacije ( World Tourism Organization , 2001 ) .
Ključni kriterij pri izboru besedil je bila prisotnost besedila v slovenskem jeziku , zato smo želeli v korpus vključiti čim večji obseg institucij , pri katerih lahko pričakujemo , da se bo ob tujejezičnih besedilih pojavilo tudi besedilo v slovenščini .
Korpus tako vključuje pretežno besedila v slovenskem , angleškem in italijanskem jeziku , v približnem obsegu 30 milijonov besed , kar ga uvršča med večje večjezične korpuse , ki vključujejo slovenski jezik .
Prvo skupino sestavljajo strokovne organizacije , ki se ukvarjajo s turizmom kot dejavnostjo , skrbijo za turistično promocijo države ali regije in predstavljajo ter tržijo turistično ponudbo , ter ponudniki turističnih storitev , ki neposredno tržijo določene turistične destinacije ali znamenitosti .
V to skupino lahko uvrstimo npr. Slovensko turistično organizacijo , Turistično zvezo Slovenije , Skupnost slovenskih naravnih zdravilišč , Urad za turizem Furlanije Julijske krajine , Agencijo Kompas .
V drugo skupino lahko umestimo strokovne ali raziskovalne organizacije , ki proučujejo turizem ali skrbijo za razvoj turistične stroke in vede , ne tržijo pa neposredno turistične ponudbe .
V tretji skupini najdemo medije in založbe , ki pišejo o turizmu ali predstavljajo turistično ponudbo , npr. nekatere večje slovenske časopise , kot sta Delo in Dnevnik , ter specializirane revije za turizem , kot je revija Horizont .
Po končani fazi zbiranja in označevanja gradiva je bil za korpus izdelan konkordančnik , ki je dostopen na www.jt.upr.si/turisticnikorpus .
Z metabesedilnim označevanjem mislimo na označevanje besedil glede na nekatere njihove lastnosti ; gre za podatke , ki bodo vidni nad vsakim izpisanim zadetkom .
Besedila so se razvrščala po za ta namen pripravljenih kategorijah .
Poudariti je potrebno , da je tipologija oznak pri prvih dveh lastnostih omogočala zelo natančno opredelitev besedila , saj so bile oznake razdeljene na več nivojev oz. stopenj ; na splošnejši stopnji sta natančnost in informativnost manjši , na podrobneje razvrščeni pa večji .
Oznake glede na prenosnik , lektoriranost in jezik .
Ker korpus govorjenih besedil ne zajema , sta v poštev prišla le elektronski in pisni prenosnik .
Kriterij lektoriranosti , ki je prav tako povzet po korpusu FidaPLUS , loči le med oznakama ' da ' za besedila , ki so opredeljena kot lektorirana oz. kot tista , pri katerih lahko na lektoriranost nedvoumno sklepamo ( npr. pri časopisnih člankih , diplomskih nalogah , monografijah ) , ter ' ne ' za besedila , ki so nelektorirana ( npr. takšna , ki nastajajo v interni ali zasebni komunikaciji ) .
Ker korpus zajema besedila v slovenskem , angleškem in italijanskem jeziku , je tudi nabor oznak glede na jezik razdeljen le na tri : ' slovenščino ' , ' angleščino ' in ' italijanščino ' .
Primerov , ko se v okviru enega besedila pojavljata dva ali več različnih jezikov ( npr. nekatera besedila spletnih strani ) , v korpus nismo vključevali .
Delno indikacijo o tem , ali je besedilo prevod ali izvirnik , lahko dobimo iz informacije o besedilodajalcu .
Na osnovnem nivoju razlikovanja besedil glede na zvrstnost korpus ločuje med ' umetnostnimi ' in ' neumetnostnimi ' besedili ; prvih korpus turističnih besedil ne vključuje .
Strokovna besedila se členijo na ' naravoslovna in tehnična ' ter na ' humanistična in družboslovna ' , slednja pa še naprej na ' strokovne monografije ' , ' strokovne članke ' , ' poljudnoznanstvene monografije ' , ' poljudnoznanstvene članke ' , ' diplomske naloge ' , ' učbenike ' in ' drugo ' .
Oglasna besedila se delijo na ' oglasna sporočila ' , ' letake , prospekte , brošure , kataloge ' , ' prodajne oglase ' , ' oglase na prostem ' , ' vodnike ' in ' drugo ' .
Pravna besedila so edina skupina , ki ostaja le pri tej prvostopenjski oznaki .
Po drugi strani pa se je treba zavedati , da takšno označevanje vedno vključuje tudi določeno mero interpretativnosti , saj je od posameznega označevalca odvisno , ali bo šel pri posameznih oznakah globlje ali se bo ustavil že na višji ravni in tako zadostil večji nedvoumnosti .
Definiranje turističnih zvrsti oziroma dejavnosti v procesu priprave korpusa in tudi samega označevanja besedil je zaradi kompleksnosti in širine področij , ki jih turistična dejavnost obsega , predstavljalo avtorjem in označevalcem precejšen izziv .
Ob pregledu obstoječih klasifikacij in delitev posameznih zvrsti znotraj turistične dejavnosti je bil za potrebe označevanja besedil v sklopu korpusa v veliki meri upoštevan Tezaver turizma in prostočasnih dejavnosti Svetovne turistične organizacije ( World Tourism Organization , 2001 ) , ki s svojim podrobnim vsebinskim razločevanjem turističnih dejavnosti ( 24 podzvrsti ) jasno definira poglavitne zvrsti znotraj te ekonomske dejavnosti .
Dodane zvrsti so » igralniški « in » kulinarični turizem , « ki se navezujeta na relevantne turistične aktivnosti znotraj teh podzvrsti , ter splošna kategorija » turizem « , v katero so bila uvrščena besedila , ki jih bodisi zaradi pomanjkanja ključnih pojmov bodisi zaradi prepletanja več podzvrsti ni bilo mogoče umestiti v posamezno podzvrst .
Večjezičnost in namembnost korpusa – uporaben naj bo kot prevajalski vir , podatkovna baza za jezikoslovne raziskave in analize turizma – je porodila razmišljanja , kako oz. koliko oblikoslovno označevati .
Kratek pregled literature o oblikoslovnem označevanju korpusov v slovenskem raziskovalnem področju , ki bi v tem pogledu ponudil uporabne informacije , je vezan predvsem na razvoj in aplikacijo označevalnih naborov za enojezične korpuse : korpus Fida in nadgradnjo FidaPLUS ( Erjavec 1998a , 1998b , 2003 ) ter korpus Beseda in Nova beseda ( Jakopin 1997 , 1999 ) .
Podatkov o označevanju večjezičnih korpusov , ki vsebujejo slovenščino , je manj ali niso javno dostopni .
Razvoj interneta in dejavnosti semantičnega spleta gotovo sili v razmislek , kakšne naj bodo uporabne in hkrati kakovostne informacijske baze , in s tem tudi jezikovni korpusi , v prihodnosti .
Pri korpusu turističnih besedil pa gre za tradicionalni korpusni postopek – zbiranje že dostopnega gradiva in njegova obdelava .
Korpus je bil oblikoslovno označen po naboru JOS , razvitem na Inštitutu Jožefa Štefana v Ljubljani .
Vprašanje označevanja je v korpusnem jezikoslovju že samo po sebi pereče vprašanje za vse snovalce jezikovnih korpusov , saj je vsako označevanje korpusa vedno nujno tudi že interpretacija samih podatkov , pri čemer » ne gre za pripisovanje lastnosti , ki bi bile za vselej veljavne jezikovne resnice « ( Gorjanc , 2002 : 262 ) .
Pri Večjezičnem korpusu turističnih besedil se je za težavnejše izkazalo metabesedilno označevanje , saj so orodja za oblikoslovno označevanje korpusov tudi za slovenščino že zelo razvita in dostopna .
Pri poteku samega metabesedilnega označevanja smo ugotovili , da smo navkljub dokaj razdelanemu naboru oznak naleteli na veliko besedil , ki jih je bilo težko natančno in nedvoumno označiti .
Najpomembnejši razlog za to sta gotovo kompleksnost in razvejanost same turistične stroke , ki pa prav zato potrebuje sistematično analizo tipologije turističnih besedil glede na različne kriterije .
Poleg tega pa takšno metabesedilno razlikovanje in označevanje narekujejo tudi različni nameni gradnje korpusa , ki bo uporaben kot prevajalski vir , za raziskave turizma in različne jezikoslovne raziskave .
Metabesedilno označevanje korpusa je zato zelo pomembna faza v gradnji večjezičnega korpusa turističnih besedil v najširšem smislu .
Namen projekta Turistični terminološki slovar je na osnovi rezultatov projekta Večjezični korpus , tj. urejenega korpusa turističnih besedil ter opravljenih jezikovnih analiz v njem , zbrati terminologijo turizma in jo urediti v slovarski ( knjižni in elektronski ) format , ki je uporabnikom bolj poznan in zato bližji , hkrati pa preko povezave slovarja s korpusom pokazati na pomen in prednosti sodobnih elektronskih jezikovnih virov , tudi za področje strokovnega jezika s področja turizma .
Težave z avtorskimi pravicami pri zajemu besedil v korpus , ki lahko močno vplivajo tudi na reprezentativnost korpusa , so v strokovni literaturi dobro izpričane , gl .
med drugim Gorjanc ( 2005 ) , Stabej ( 1998 ) .
Poleg tega naj omenimo še večjezične korpuse manjšega obsega , ki so bili narejeni z namenom specifične jezikoslovne raziskave ; več o tem v Beguš , Dukič ( ur .
Gre za sorazmerno lahko prepoznavna besedila z visoko stopnjo konvencionaliziranosti oblike , kot so zakoni , pogodbe , odločbe , akti , sklepi ipd.
Kot podpora slovarju je bil že pred leti zasnovan tudi korpus računalniških besedil , a so bili v njem doslej le zborniki konferenc DSI , poleg tega pa korpus nikdar ni bil uporabljen za sistematično terminografsko analizo ali samodejno luščenje izrazja .
Prispevek predstavlja nadgradnjo in označevanje novega iKorpusa , nato pa opisuje rezultate samodejnega luščenja računalniškega izrazja iz njega .
Korpus DSI je urednikom slovarja služil predvsem kot vir informacij o pogostosti izrazov , za številne temeljne izraze pa je bilo iz njega mogoče pridobiti podpomenke in terminološke kolokacije ( Puc in Erjavec 2006 ) .
Ker pa je korpus DSI obsegal le besedila ene besedilne vrste , se pravi konferenčne prispevke , in so bila vsa besedila iz istega vira , je bila njegova uporabnost za slovaropisne namene omejena ( prim. Gorjanc in Logar 2007 ) .
Pričujoči prispevek predstavlja dopolnjeni in precej povečani korpus , ki je tudi na novo oblikoskladenjsko označen in lematiziran ter javno dostopen preko posodobljenega spletnega iskalnika .
Rezultati eksperimenta kažejo nekatere presenetljive zaključke , denimo da pogostost v korpusu ni dober indikator terminološkosti , saj se številni izrazi iz iSlovarja v iKorpusu pojavijo le enkrat .
Dopolnili smo ga z računalniškimi besedili iz korpusa FidaPLUS , in sicer iz revij Monitor , Moj mikro , Connect , PC Mediji , Joker in Računalniške novice .
Tako stari DSI kot FidaPLUS sta sicer že bila avtomatsko označena z oblikoslovnimi oznakami ter lematizirana , vendar pa je bilo v oznakah korpusa DSI razmeroma veliko napak , korpus FidaPLUS pa nima pripisanih oznak neznanim besedam , torej tistim , ki niso zajete v leksikonu Amebisovega označevalnika , poleg tega pa oblikoslovne oznake obeh korpusov med seboj niso bile povsem skladne .
Ta korpus je služil za učno množico označevalniku in lematizatorju , s katerima sta bila na novo označena korpusa DSI in iFpX .
iKorpus tako vsebuje bolj kvaliteten nabor oznak , ki so dostopne tako v slovenskem kot v angleškem jeziku .
Čeprav formalna primerjava med starim in novim označevalnim modelom še ni bila narejena , pregled posameznih primerov nakazuje , da je v novih oznakah tudi manj napak .
Nekatere od preostalih napak gotovo vplivajo tudi na kvaliteto luščenih terminov , vendar pa večina napak zadeva bodisi pregibne lastnosti besed ( npr. sklon ) , ali pa nekatere funkcijske besedne vrste , kar pa ne vpliva na kvaliteto luščenja .
Iskalne kriterije lahko podamo kot regularne izraze in jih poljubno kombiniramo , izpis pa je lahko v obliki seznama zadetkov ali pa v formatu KWIC ( keyword in context ) .
Vnešene izraze pregleduje in dopolnjuje uredniški odbor , zato so izrazi opremljeni z oznakami ureditve ( predlog , pregledano , strokovno pregledano in urejeno ) .
Urednica Islovarja je Katarina Puc , uredniški odbor pa sestavljajo še Vladimir Batagelj , Katja Benevol Gabrijelčič , Jurij Jaklič , Jože Kranjc , Niko Schlamberger in Tomaž Turk .
V pričujoči raziskavi smo primerjali besedišče Islovarja in iKorpusa .
Za namene eksperimenta je bil uporabljen geslovnik Islovarja v takšnem obsegu in obliki , kot ga je imel marca 2008.
Skupno število slovenskih gesel je bilo 4.742 , Tabela 2 pa kaže dolžino gesel v besedah .
Med daljšimi gesli so tudi poslovno-ekonomski izrazi , kot je pogodba s povračilom stroškov in stimulativnim plačilom za delo , a tudi opisni računalniški izrazi , npr. koda za shranjevanje in prenašanje črkovnih in numeričnih znakov .
Za potrebe primerjave gesel Islovarja in samodejno izluščenih terminoloških kandidatov iz iKorpusa smo geslovnik Islovarja lematizirali s spletnim lematizatorjem CLOG .
Statistični sistemi se razvijajo predvsem za jezike in aplikacije , kjer predhodno oblikoskladenjsko označevanje korpusa ni mogoče , bodisi ker programi za samodejno razčlembo niso na voljo bodisi gre za preveliko količino besedil in / ali jezikov , kar velja za spletne aplikacije .
Osnovna predpostavka tega pristopa je , da so specializirane enote v besedilu večinoma večbesedne in tipično sestavljene po določenih oblikoskladenjskih pravilih , denimo pridevnik in samostalnik ( operacijski sistem ) , samostalnik in samostalnik v rodilniku ( kraja identitete ) , dva pridevnika in samostalnik ( omrežno priklopljeni pomnilnik ) itd.
Uporabljeni so bili vzorci za enote dolžine od 2 do 4 besed , in sicer skupno 10 vzorcev , ki poleg zaporedja besednih vrst določajo tudi jedrno besedo .
Izluščene enote se nato uredijo po terminološki relevantnosti .
Naša metoda je prirejena in normalizirana primerjava relativnih pogostosti posameznih besed v izluščeni enoti , ki jo pomnožimo s kvadratom pogostosti cele enote v korpusu .
Za primerjavo relativne pogostosti uporabljamo referenčni besedni seznam iz korpusa FidaPLUS .
Že prvi pregled kandidatov je pokazal , da je med njimi ogromno lastnih imen , in sicer tako osebnih imen kot imen proizvajalcev računalniške in fotografske opreme ( Vladimir Djurdjič ; Sony , Fujitsu , Canon , Microsoft ) .
Vladimir Djurdjič je strokovni urednik Monitorja , Jaka Mele pa sodelavec revije Moj mikro , zato se njuni imeni znajdeta med prvimi dvajsetimi terminološkimi kandidati .
Čeprav lahko pri aplikacijah za luščenje terminologije vse imenske sestavine navadno samodejno izločimo , je na področju računalništva opaziti precej terminoloških enot , ki vsebujejo ime .
Islovar denimo vsebuje izraze Bayerjevo drevo , datoteka Shape , Arnes , Bluetooth itd. , zato imen tudi iz seznama izluščenih kandidatov ne moremo neselektivno izločiti .
S primerjavo lematiziranih oblik izluščenih enot in lematiziranega geslovnika Islovarja ugotovimo , da je 1.154 slovarskih gesel tudi med izluščenimi kandidati .
Ker so izluščeni terminološki kandidati urejeni po terminološki uteži , sestavljeni iz ključnosti posameznih besed in pogostosti cele enote , nas je zanimalo , kako se priklic spreminja z zviševanjem mejne terminološke uteži , ali z drugimi besedami , ali so " pravilne " terminološke enote iz Islovarja zgoščene v prvem delu seznama izluščenih enot .
Poleg tega je pojmovanje terminološkosti na eni strani izrazito subjektivno , saj se strokovnjak odloča drugače kot terminolog , na drugi pa odvisno od ciljne aplikacije , saj sistemi za iskanje podatkov izhajajo iz drugačne definicije termina kot terminografsko usmerjeni sistemi .
Evalvacija izluščenih terminov s pomočjo referenčnega seznama izrazov področja , denimo geslovnika terminološkega slovarja , se uporablja redkeje ; El Hadi in soavtorji ( 2006 ) pri enem takih eksperimentov poročajo o natančnosti okrog 4 %.
40-odstotno pokrivanje med geslovnikom Islovarja in samodejno izluščenimi termini iz iKorpusa lahko sproža različna vprašanja , med drugim tudi o terminološkosti preostalih 60 % izrazov v Islovarju , ki jih stroka očitno ne uporablja prav pogosto .
Ker pa Islovarja - tudi po mnenju njegovih urednikov - kljub obsežnosti ne moremo jemati za zaključeno in popolno zbirko računalniško-informatičnih izrazov , je opisani eksperiment le korak v smeri korpusno podprte terminografije na tem področju .
Ročna evalvacija izluščenih enot tako ostaja na seznamu načrtov za prihodnost .
Tip enote Št. izluščenih Lastna imena 40.433 Akronimi 12.725 Vsebuje število 848 Kanonična oblika 125.528 Vsi 309.418.
Tipi izluščenih enot .
Priklic v odvisnosti od števila enot .
Odkar je bila narejena pričujoča raziskava , je bil korpus DSI posodobljen še z zbornikom konference 2008 , tako da sedaj vsebuje 721 besedil oz. 1.404.372 besed .
Potreba po izdelavi referenčnega govornega korpusa slovenščine je bila v zadnjem desetletju v slovenskem jezikoslovnem prostoru večkrat eksplicitno izražena .
Prvi je na to opozoril Stabej , ko je pri predstavitvi besedilnovrstne sestave korpusa FIDA poudaril , da bi bil " seveda v slovenskem prostoru še bolj dragocen korpus , ki bi vseboval tudi govorjena besedila " ( Stabej , 1998 : 100 ) ; ideja je bila podrobneje predstavljena l. 2000 ( Stabej , Vitez , 2000 : 79 ) .
Širitev korpusa na spontani nejavni govor vzbuja upanje na drugačne čase " ( Kenda Jež , 2004 : 271 ) , v okviru govornih tehnologij pa je bila potreba po vključitvi spontanega govora v raziskave izražena med drugim v Verdonik ( 2006 : 40 ) .
Tekom dela je korpus dobil ime GOS ( korpus GOvorjene Slovenščine ) in bo konec leta 2010 v celoti dokončan in na voljo uporabnikom .
Enako kot sam korpus je za njegovo širšo dostopnost in uporabo pomemben tudi spletni vmesnik – konkordančnik – za iskanje po korpusu .
Sofinanciranje projekta izdelave konkordančnika , prirejenega posebej za govorni korpus GOS , je jeseni 2009 odobrilo Ministrstvo za visoko šolstvo , znanost in tehnologijo ob sofinanciranju iz Evropskega regionalnega sklada , in tako bo od jeseni 2010 na spletnem naslovu www.korpus-gos.net na voljo konkordančnik GOS , s katerim bo mogoče spočetka iskati po delu korpusnega gradiva , po celotnem gradivu zaključenega korpusa GOS pa od januarja 2011.
V tem prispevku se bomo po uvodnem kratkem pregledu nekaterih sorodnih tujih konkordančnikov in skupin potencialnih uporabnikov osredotočili predvsem na predstavitev iskalnih funkcij in informacij o gradivu , ki jih bo ponujal konkordančnik GOS .
Britanski nacionalni korpus ( http://www.natcorp.ox.ac.uk/ ) je prosto dostopen na spletu , vendar govorna podsekcija zajema samo transkripcije brez izvornih zvočnih posnetkov .
Iskanje po korpusu je med drugim omogočeno z vmesnikom XAIRA , s pomočjo katerega dobimo informacije o frekvencah besed , slovničnih struktur in kolokatorjev ter primerih konkordanc .
Tudi pri ruskem nacionalnem korpusu ( http://www.ruscorpora.ru/en/index.html ) je govorna podsekcija korpusa dostopna samo z zapisom , brez zvoka .
Iščemo lahko po jeziku ( zastopani so namreč vsi govorjeni jeziki v Franciji ) , po besedah ali frazah ali po metapodatkih o diskurzu in govorcih .
Uporabniki konkordančnika GOS Pri zasnovi slovenskega spletnega konkordančnika za iskanje po govornem korpusu GOS smo upoštevali predvidene potrebe naslednjih potencialnih skupin uporabnikov konkordančnika : - raziskovalci – zahtevni uporabniki , ki jim je treba omogočiti čim več iskalnih funkcij in podatkov o gradivu - izobraževanje – v izobraževanju ( pri učenju slovenskega jezika ) so pomembni predvsem enostavnost iskanja , kratka , jasna in priročna navodila ter grafična privlačnost konkordančnika - poklici v stiku z govorom ( razni pisci , tolmači in prevajalci , poklicni govorci ...
) – po eni strani enostavnost in privlačnost uporabe , po drugi strani pa vseeno ustrezno pester nabor iskalnih funkcij , zlasti glede na metapodatke o govorcih in diskurzih Glede na ta predvidevanja ter glede na podatke , ki jih vključuje korpusno gradivo , in z navezavo na predvideni prenovljeni konkordančnik za pisni korpus slovenskega jezika , ki nastaja prav tako v okviru projekta Sporazumevanje v slovenskem jeziku , bo imel konkordančnik GOS iskalne funkcije , kot so opisane v sekciji 4.
Razlika med enim in drugim zapisom je naslednja : - Pogovorni zapis : Govor je zapisan v veljavnem slovenskem črkopisu ( ni fonetični zapis ) in upoštevane so veljavne strategije predstavljanja posameznih glasov z določenimi črkami .
- Standardizirani zapis : Pri pretvorbi v standardizirani zapis so odpravljene glasoslovne premene , ki so prisotne pri posamezni besedni obliki , ob upoštevanju pogostosti rabe .
Ciljna oblika je knjižna različica istega leksema .
Metapodatki o govorcih vključujejo naslednje izbire : - spol - starost - izobrazba - regionalna pripadnost : o enotna ( posameznik je vse življenje preživel v eni regiji ) o razpršena ( posameznik je del življenja [ vsaj eno leto : šolanje , služba , selitev ...
] preživel v kateri drugi regiji / - ah ) - prvi jezik ( slovenski ali tuji ) Regionalna pripadnost je v korpusu GOS označena glede na večja regionalna mestna središča , h katerim gravitira posamezno področje in ki sovpadajo z registrskimi območji v Sloveniji ( MB , MS , SG , CE , KK , NM , LJ , KR , PO , GO , KP ) , oz. glede na pripadnost regijam zunaj Slovenije ( zamejski Slovenci : Italija , Avstrija , Madžarska , življenje v tujini ) .
Pri naprednem iskanju lahko poleg iskalnih funkcij , ki jih omogoča že enostavno iskanje ( torej iskanje po pogovornem ali po standardiziranem zapisu in filtriranje rezultatov glede na podatke o govorcih in / ali podatke o diskurzih ) , uporabljamo še dve funkciji : - Iskanje po bližini : Omogoča iskanje glede na bližino / nebližino drugih besed .
- Iskanje po oblikoslovnih oznakah : Samo pri iskanju po standardiziranem zapisu lahko iskano besedo tudi dodatno omejimo z besedno vrsto in ostalimi oblikoslovnimi oznakami ( iščemo po kanalu oblikoslovnih oznak ) .
Ker bo korpus GOS v prvi fazi samo avtomatsko označen z označevalnikom , naučenim na pisnih besedilih , še ni znano , kolikšna bo natančnost kanala z oblikoslovnimi oznakami .
Drugi način iskanja po korpusu GOS je iskalna funkcija seznam : /.../
Filtriranje po tipih diskurzov in govorcev v prvi fazi ne bo omogočeno , je pa predvidena tovrstna nadgradnja naknadno .
Rezultati iskanja pri seznamu niso prikazani v obliki konkordanc , tako kot pri iskanju po konkordančnem nizu , ampak v obliki seznama besed s podatki o frekventnosti posamezne besede in njeni standardni obliki .
Iskalna načina seznam in konkordančni niz sta med seboj povezana : s klikom na besedo v seznamu se v zavihku konkordančni niz izdela ustrezen konkordančni niz , ki vsebuje primere rabe v kontekstu za besedo s seznama .
Rezultati iskanja se prikažejo : - v obliki seznama konkordanc pri iskanju po konkordančnem nizu - v obliki seznama besed s podatki o frekvenci in standardizirani obliki pri iskanju po seznamu Rezultati iskanja pri konkordančnem nizu so : - prikazani v pogovornem zapisu - označeni glede na tip diskurza ( JI – javni informativno-izobraževalni , JR – javni razvedrilni , NN – nejavni nezasebni , NZ – nejavni zasebni ) Desno od vsake konkordance je zvočnik .
Prikažejo se naslednji podatki : - razširjeni kontekst v pogovornem zapisu ( tj. izjava ali izjave , v kateri ( h ) je bil izgovorjen iskani niz + 1 predhodna + 1 naslednja izjava ) - podatki o diskurzu , iz katerega je konkordanca ( tip diskurza , kanal , opis govornega dogodka , regija , kjer je potekal diskurz , datum in čas poteka diskurza , vir posnetka , opis diskurza ) - podatki o govorcu ( spol , starost , izobrazba , regionalna pripadnost , prvi jezik ) če želimo še več informacij , imamo na voljo : - da poslušamo razširjeni kontekst - da pogledamo standardizirani zapis razširjenega konteksta - da pogledamo korpusne oznake ( lema , oblikoslovne oznake ) - da shranimo podatke v odložišče Rezultate lahko tudi : - sortiramo - izvozimo Pri urejanju rezultatov iskanja lahko le-te razvrstimo : - glede na jedrno besedo / besede - glede na levo sobesedilo - glede na desno sobesedilo Zaključek .
o uporabi in bo na voljo tudi v angleški različici .
Korpus bo ob zaključku v okviru sedanjega financiranja obsegal 1 mio .
besed avtentičnih pogovorov nemogoče zajeti vso pestrost govorjene slovenščine .
Za rabo v jezikoslovju in jezikovnih tehnologijah pa bi si poleg večjega obsega želeli tudi dodano opremljenost gradiva , npr. skladenjsko označevanje , fonetični zapis ipd.
Pregled iskanj glede na klasifikacijo diskurzov .
Lastnik korpusa GOS je Ministrstvo za šolstvo in šport Republike Slovenije na podlagi pogodbe » Pogodba o sofinanciranju izvedbe projekta Sporazumevanje v slovenskem jeziku v okviru Operativnega programa razvoja človeških virov za obdobje 2007-2013 « , št. pogodbe 3311-08-986003 , sklenjene med Republiko Slovenijo , Ministrstvom za šolstvo in šport , ter podjetjem Amebis , d.o.o. , Kamnik .
Poslušanje zadetkov omogoča npr. nemški vmesnik ( http://dsav-oeff.ids-mannheim.de/DSAv/SUCHMASK.H TM ) , mnogi drugi pa ne , npr. češki - http://ucnk.ff.cuni .
Samodejno razpoznavanje govorcev v prostoru supervektorjev .
V prispevku predstavljamo postopke samodejnega razpoznavanja govorcev , ki temeljijo na predpostavki , da lahko posameznega govorca obravnavamo kot točko v visoko razsežnem prostoru , ki mu pravimo prostor supervektorjev .
V prispevku podrobneje predstavimo tudi konkreten primer takega sistema , katerega učinkovitost ovrednotimo na uveljavljeni zbirki za vrednotenje sistemov razpoznavanja govorcev .
Ker pa je vrstni red akustičnih dogodkov — za razliko od razpoznavanja govora — za ( tekstovno neodvisno ) razpoznavanje govorcev v večji meri nepomemben , je fleksibilnost , ki nam jo ponujajo modeli HMM , nepotrebna .
Osnovna predpostavka razpoznavanja govorcev s pomočjo modelov GMM je , da lahko vsakega govorca predstavimo kot točko v prostoru parametrov modela GMM .
Ko želimo preveriti identiteto nekega govorca , moramo znati izračunati le razdaljo med dvema točkama v tem prostoru .
Čeprav bi lahko parametre modela GMM ocenili neodvisno za vsakega govorca posebej , je smiselneje , če to storimo posredno preko modela GMM , ki smo ga naučili z uporabo govorne zbirke , v kateri imamo na voljo veliko število posnetkov čim večjega števila govorcev .
Takemu modelu pravimo splošni model govorca ( angl. universal background model , UBM ) ( Reynolds et al. , 2000 ) .
V takem primeru , ko je količina podatkov premajhna za zanesljivo oceno parametrov , je bolje , če kriterij ML nadomestimo s kriterijem največje vrednosti posteriorne porazdelitve ( angl. maximum a posteriori , MAP ) .
Uporaba kriterija MAP povzroči , da bodo ocenjene vrednosti parametrov odvisne od količine podatkov .
Ta slika bo zaradi končne dolžine govornega signala nepopolna — krajši kot bo posnetek , bolj bo zamegljena , daljši kot bo posnetek , bolj bo ostra .
Razliko med dinamično in statično informacijo lahko še nazorneje ponazorimo z naslednjim miselnim eksperimentom .
Denimo , da imamo fotografski aparat z zelo omejenim zornim kotom , ki se v vsakem trenutku usmeri na naključno mesto in posname majhno sličico .
Pri tem se moramo zavedati , da zaradi končnega časa snemanja najverjetneje nismo zajeli dovolj sličic , da bi lahko sestavili sliko celotnega obraza in da za posamezno sličico ne vemo a priori , iz katerega dela obraza ( ali celo ozadja ) izhaja oz. povedano drugače , sličice niso opremljene s podatkom , na katero mesto je bil usmerjen aparat , ko je zajel sličico .
Opisani miselni eksperiment je zelo podoben realni situaciji , s katero se soočamo pri besedilno neodvisnemu razpoznavanju govorcev .
Vzroke za sejno spremenljivost ponavadi pripišemo različnim lastnostim akustičnega kanala , čeprav so za sejno spremenljivost pogosto odgovorni tudi manj oprijemljivi dejavniki kot so psihofizično stanje govorca , staranje , izgovorjeno besedilo ter celo dolžina govornega posnetka .
Proti sejni spremenljivosti se lahko borimo na različne načine .
Prva metoda je projekcija motečih lastnosti ( angl. nuisance attribute projection , NAP ) ( Solomonoff et al. , 2005 ) , druga pa metoda analiza vezanih faktorjev ( joint factor analysis , JFA ) ( Kenny et al. , 2007 ) , na katero se bomo osredotočili v tem prispevku .
Ta zahteva je smiselna , saj bi v nasprotnem primeru bilo mogoče , da bi kanal preslikal enega govorca v drugega .
eigenvoice ) V , standardno-normalno porazdeljen vektor z in diagonalna matrika D. Če želimo uporabiti JFA kot model sejne spremenljivosti , moramo imeti na voljo obsežno govorno zbirko z velikim številom različnih govorcev , posnetih v čim večjem številu različnih sej .
Opozorimo le , da je izvedba teh postopkov v splošnem precej zahtevna , prav tako pa so postopki zahtevni tudi s stališča prostorske in časovne kompleksnosti .
Če želimo odgovoriti na to vprašanje , moramo na podlagi govornih posnetkov znati izmeriti podobnost med govorci .
Merjenje podobnosti dveh posnetkov ( oz. govorcev ) poteka tako , da enega izmed posnetkov ( po navadi daljšega , označimo ga z D1 ) uporabimo za oceno parametrov modela GMM oz. za določitev govorskega supervektorja , drug posnetek ( označimo ga z D2 ) pa prilegamo na ta model tako , da izračunamo vrednost funkcije verjetja pri ocenjeni vrednosti parametrov .
Razmerje verjetij izračunamo tako , da obe izračunani vrednosti med seboj delimo .
Govorski supervektor izračunamo tako , da poiščemo največjo vrednost posteriorne porazdelitve prikritih spremenljivk , kar zapišemo kot : /.../
Poleg razmerja verjetij se je na področju razpoznavanja govorcev kot način merjenja podobnosti uveljavil tudi postopek , ki temelji na diskriminatorni metodi podpornih vektorjev ( angl. support vector machine , SVM ) .
Prvi govorski supervektor nato uporabimo za oceno modela SVM , ki ga predstavimo s hiperravnino , ki ločuje govorski supervektor od vnaprej izbrane množice neodvisnih supervektorjev .
Iz dobljenega niza vektorjev značilk smo izločili tiste vektorje , ki so ustrezali negovornim delom signala .
Za učenje parametrov modela UBM smo uporabili NIST-ove govorne zbirke iz let 2004 , 2005 in 2006.
Po odstranjevanju negovornih odsekov nam je za ocenjevanje parametrov modela UBM ostalo približno 600 ur govornega gradiva .
Učenja smo se lotili tako , da smo najprej ocenili le eno Gaussovo porazdelitev in nato s postopno delitvijo povečevali število porazdelitev vse do številke 2048.
Podatke smo razdelili na dve množici ; večjo množico smo uporabili za učenje matrik U in V ter vektorja m0 , manjšo pa za oceno matrik D in Σ. Pri tem smo se zgledovali po postopku , ki so ga predlagali Kenny et al. ( 2008 ) .
Podobnost smo merili na dva načina , ki smo ju že predstavili v razdelkih 4.1. in 4.2.
Znano je , da lahko z združevanjem rezultatov razpoznavanja — če le-ti vsebujejo dovolj komplementarne informacije — izboljšamo učinkovitost razpoznavanja , zato smo poskusili rezultate , ki smo jih dobili s kriterijema razmerja verjetij in metodo podpornih vektorjev združiti tako , da smo posamezne rezultate sešteli .
Sistem smo preizkusili na uveljavljeni zbirki NIST SRE 20087 , ki je namenjena vrednotenju sistemov za verifikacijo govorcev .
Dobljeni rezultati so v skladu s standardnim načinom predstavljanja rezultatov biometričnih postopkov podani v tabeli 1 in na sliki 1.
Vidimo lahko , da so rezultati primerljivi s tistimi , ki so jih dosegli najuspešnejši sistemi v okviru NIST-ovega vrednotenja sistemov za razpoznavanje govorcev iz leta 2008 , kljub temu , da smo v nasprotju z uveljavljeno prakso uporabili spolno-neodvisen sistem UBM in da nismo izvedli normalizacije značilk in rezultatov razpoznavanja .
Bayesovske metode so bile namreč zaradi računske zahtevnosti do nedavnega omejene na manj kompleksne probleme , z večanjem računske moči računalnikov in z napredkom na področju aproksimativnih Bayesovskih metod pa prihajajo vse bolj v ospredje ( glej npr. ( Kenny , 2010 ) ) tudi pri kompleksnejših ( angl. large-scale ) problemih , kakršen je tudi problem samodejnega razpoznavanja govorcev .
Rezultati v obliki vrednosti EER in DCF , ki smo jih dobili z uporabo različnih mer podobnosti : razmerja verjetij ( LR ) , metode podpornih vektorjev ( SVM ) in njuno kombinacijo ( LR + SVM ) .
Tukaj smo opisali izkustveno interpretacijo ocenjevanja parametrov po kriteriju MAP .
Enačba ( 4 ) nastopa v najbolj splošni obliki modela JFA .
Vse podatke v zvezi s to zbirko in pripadajočimi eksperimentalnimi protokoli je mogoče najti v dokumentu , ki je dostopen na naslovu http://www.itl.nist.gov/iad/mig/tests/sre/2008/ sre08 evalplan / release4.pdf .
Članek predstavlja korake pri pridobivanju govornega materiala in postopke označevanja Slovenske baze izgovarjav z Lombardovim efektom ( SiLSD – Slovenian Lombard Speech Database ) , katere snemanje se je začelo v letu 2008.
Namen tega članka je opisati strojno platformo , ki je bila uporabljena za pridobivanje govornega materiala , opis poteka snemanja , predstavitev strukture baze izgovarjav in predstavitev orodja , ki je bilo uporabljeno za obdelavo baze izgovarjav .
Baza izgovarjav zajema posnetke desetih slovenskih govorcev , od tega petih moških in petih žensk .
Struktura korpusa je podobna strukturi , ki je bila uporabljena v bazi izgovarjav SpeechDat II. Posneto je bilo približno 30 minut govornega materiala na enega govorca in na eno snemalno sejo .
Govorni material je bil ročno obdelan in označen z orodjem LombardSpeechLabel , razvitim na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru .
Govorni material in pripadajoč označevalni material je shranjen na 10 DVD medijih ( en govorec na enem DVD mediju ) .
Namen članka je predstaviti strojno platformo , ki je bila uporabljena za pridobivanje govornega materiala , potek snemanja , strukturo baze izgovarjav in orodje , ki je bilo uporabljeno za obdelavo Slovenske baze izgovarjav z Lombardovim efektom ( SiLSD – Slovenian Lombard Speech Database ) .
Baza izgovarjav je bila posneta z namenom , da bi v posnetkih govora zajeli Lombardov efekt .
Skozi zgodovino sta se pojavili dve interpretaciji Lombardovega efekta .
Ker povečanje glasnosti govora privede do sprememb karakteristik govornega signala , ima to pri avtomatskem razpoznavanju govora največkrat za posledico slabšo uspešnost avtomatskega razpoznavanja govora .
Uspešnost avtomatskega razpoznavanja govora pa upade tudi zaradi sprememb karakteristik govornega signala , ki so se zgodile zaradi vpliva Lombardovega efekta na govorni signal .
Raziskave na področju Lombardovega efekta kažejo , da se Lombardov govor razlikuje od normalnega govora na več načinov .
Glavne spremembe značilnosti Lombardovega govora so lahko vidne v zvišanju osnovne harmonske frekvence , v povečanju časovnega trajanja vokalov in v premiku formantov F1 in F2 .
Baze izgovarjav posnete v realnem okolju zagotavljajo dragocen material za sisteme avtomatskega razpoznavanja govora , vendar je v primeru glasnejšega šumnega okolja ( hrup v avtomobilu , govor v ozadju , …)
Z namenom nadaljevati raziskave na tem področju smo zasnovali snemalno okolje in izvedli snemanje baze izgovarjav SiLSD .
Namen baze je omogočiti raziskave vpliva Lombardovega efekta v primeru različnih šumov okolja , različnih šumnih nivojev , ki jih v času snemanja sliši govorec in analizirati konsistentnost Lombardovega efekta glede na čas snemanja .
Želeli smo tudi analizirati konsistentnost Lombardovega efekta znotraj dveh snemalnih sej , saj je med snemanjem posameznih sej s posameznim govorcem bilo vsaj en teden razmika .
V petem poglavju bomo podali zaključke .
Pridobivanje govornega materiala Baza izgovarjav SiLSD je bila posneta v studijskem okolju .
Hkrati smo izvedli snemanje štirih kanalov :  prostoročni mikrofon ,  obustni mikrofon ,  laringograf in  snemanje šuma ozadja , pomešanega z govorom govorca , ki je bil predvajan na slušalke govorca med samim snemanjem .
Nivo predvajanega šuma je bil pred začetkom vsakega snemanja nastavljen na način , kot je bilo predlagano v ( Bořil in dr. , 2006 ) .
Za dosego Lombardovega efekta smo izbrali nivo šuma 80 dB SPL2 in 95 dB SPL pri navidezni razdalji med 1 in 3 metri .
Znotraj ene snemalne seje so bila izvedena tri snemanja :  referenčno snemanje brez prisotnega šuma ,  snemanje pri 80 dB SPL in  snemanje pri 95 dB SPL .
Baza izgovarjav zajema tako čiste posnetke brez dodanega šuma , kot tudi posnetke s šumom , ki so bili predvajani na slušalke govorca med snemanjem .
Govorni material je bil ročno pregledan , obdelan in označen s pomočjo programskega orodja Lombard - SpeechLabel ( slika 1 ) , ki je bilo razvito na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru .
Programsko orodje je napisano v programskem jeziku Tcl / Tk / Tix , ki omogoča vizualno programiranje .
Čeprav je bilo razvito na platformi operacijskega sistema Microsoft Windows , ga lahko brez večjih težav z manjšimi spremembami prenesemo na druge platforme operacijskih sistemov .
Vse posnetke je možno predvajati oz. poslušati s pritiskom na gumbe , ki se nahajajo na desni strani zgornjega polja .
Spodnji del orodja je razdeljen na dva dela .
Na levi strani se nahaja informacija o govorcu in snemanju .
Na desni strani pa so podani dodatni podatki o snemanju in sama ortografska transkripcija posnetega signala .
Struktura korpusa je podobna strukturi , ki je bila uporabljena v bazi izgovarjav SpeechDat II ( Kaiser in Kačič , 1997 ) .
Več informacij o sami bazi izgovarjav bomo podali v naslednjih podpoglavjih .
Govorni signal je zapisan v avdio datotekah kot zaporedje otipkov kvantiziranih s 16-bitno linearno kvantizacijo pri frekvenci vzorčenja 96 kHz .
Imena datotek sledijo datotečnemu zapisu ISO 9660 ( 8 + 3 znaki ) glede na osnovni standard zgoščenk .
Zaradi velike količine avdio materiala so bili vsi podatki shranjeni na DVD mediju .
Struktura map je postavljena tako , da so posnetki vsakega govorca shranjeni na svojem DVD mediju .
Vsak govorec je posnel svoj del baze izgovarjav v dveh sejah .
V bazi izgovarjav smo definirali za vsak korpus besedil eno črko , ki določa korpus besedil , in dve številki , ki določata zaporedno številko posnetka v samem korpusu .
Takšno označevanje je vneseno tudi v imena datotek , da bi uporabnik enostavno razbral iz imena datoteke , v kateri korpus besedil sodi njena vsebina .
Definicija kod korpusov besedil je podana v Tabeli 3.
Baza izgovarjav zajema posnetke desetih slovenskih govorcev , od tega petih moških in petih žensk .
Vsak govorec je posnel besedila osmih različnih korpusov in to v dveh snemalnih sejah v razmiku vsaj enega tedna med snemanji .
V prihodnosti želimo izvesti poglobljeno analizo posnetega govornega materiala baze predvsem v smeri ugotavljanja vpliva različnih nivojev šuma ozadja na jakost Lombardovega efekta , odvisnost od vrste šuma ozadja in oceniti konsistentnost prisotnosti Lombardovega efekta v govornem signalu različnih govorcev .
Programsko orodje LombardSpeechLabel za ročno obdelavo in označevaje govornega materiala .
A Koda govorca ( A-Z ) S Koda seje ( 1-9 ) – uporabljeni samo 1 in 2 T Koda tipa šuma : - R : brez šuma - C : hrup v avtomobilu - B : govor v ozadju R Koda snemanja : - N : snemanje referenčnega signala brez prisotnosti šuma - L : snemanje signala brez prisotnosti šuma - M : snemanje signala s prisotnostjo šuma pri nivoju šuma 80 dB SPL - H : snemanje signala s prisotnostjo šuma pri nivoju šuma 95 dB SPL NNN Koda korpusa besedil ( A00 – Z99 ) : A – aplikacijske besede B – povezane števke D – datumi I – izolirane števke N – naravna števila S – fonetično bogati stavki T – časi W – fonetično bogate besede C Koda snemalnega kanala : - 1 : prostoročni mikrofon - 2 : obustni mikrofon - 3 : signal laringografa - 4 : signal , ki je bil predvajan na slušalke govorca med snemanjem LL Dve črki jezikovne kode ISO 639 F Koda tipa datoteke : O – datoteka z ortografsko označevalno vsebino A – datoteka z avdio vsebino .
Opis datotečne nomenklature .
< session > Določena kot : SES _ < s > kjer < s > predstavlja naraščajočo številko od 1 do 9.
Ta številka je enaka drugi številki v imenu datoteke ( glej poglavje 4.2 ) .
Črka korpusa Zaporedna številka Vsebina korpusa besedil A 00-29 aplikacijske besede ( 30 besed ) B 00-04 povezane števke ( sekvenca 10 števk izgovorjena 5 krat ) D 00-04 datumi ( 5 datumov ) I 00-11 izolirane števke ( 12 števk ) N 00-04 naravna števila ( 5 števil ) S 00-29 fonetično bogati stavki ( 30 stavkov ) T 00-06 časi ( 7 časov ) W 00-49 fonetično bogate besede ( 50 besed ) .
Definicija kod korpusov besedil .
Lastnik baze izgovarjav je podjetje SVOX , ki namerava ponuditi bazo izgovarjav preko organizacije ELDA / ELRA .
Prvi temelji na linearni transformaciji po kriteriju največjega verjetja ( MLLR ) , drugi pa predstavlja skupek akustičnih značilk ( frekvenca spremembe predznaka , energija RMS , osnovna frekvenca , razmerje zvenečenega proti nezvenečenemu delu govora in koeficienti MFCC ) , ki je v literaturi velikokrat zaznamovan z terminom " state-of-the-art " .
Rezultati pokažejo , da udejanjen razvrščevalnik emocionalnih stanj s " state-of-the-art " sklopom značilk bolje ločuje med testnimi vzorci obeh razredov ( AR 70 , 42% ) kot udejanjen razvrščevalnik z značilkami MLLR ( AR 59 , 12% ).
Želja raziskovalce na področju komunikacije med človekom in strojem je nedvomno , da bi lahko ljudje komunicirali s stroji na ljudem najbolj prijazen način .
Za razvoj uspešnega in bolj naravnega sporazumevanja ni dovolj , da se stroj ne zaveda le vsebine sporočila , ampak tudi samega načina sporočanja .
Pridobitev podatkovne zbirke , ki vsebuje spontan emocionalni govor , je v razvoju avtomatskega razpoznavalnika emocionalnih stanj govorca ena zahtevnejših nalog .
Surov govorni signal posameznika , ki mu je pripisana primerna oznaka emocionalnega stanja , sam po sebi ni primeren za razpoznavanje emocionalnih stanj govorca .
To delo preizkuša dva postopka izpeljave značilk z namenom razvrščanja normalnega in vzbujenega emocionalnega stanja .
Prvi se opira na linearno transformacijo MLLR ( ang. Maximum Likelihood Linear Regression ) , drugi pa na uveljavljen skupek značilk , ki zajema akustične značilke govornega signala ( frekvenca spremembe predznaka , energija RMS , osnovna frekvenca , razmerje zvenečenega proti nezvenečenemu delu govora in koeficienti MFCC ) ter dodatne parametre pridobljene s pomočjo statistične analize ( povprečna vrednost , standardna deviacija , ekstreme , koeficiente linearne regresije , itd. ) ( Schuller et al. , 2009 ) .
Raziskovalci se velikokrat odločijo za pridobivanje nove zbirke podatkov , namenjenih za znanstvene raziskave ali določeno aplikativno uporabo .
Njena uporaba je namenjena nalogam identifikacije ali verifikacije ter detekcije emocionalnih stanj udeležencev v pogovoru .
Namen prve je snemanje govornih signalov z naravnimi ( spontanimi ) emocijami .
Pri drugi strategiji se avtorji zbirk opirajo na vsebino posnetkov igranega govora .
Končne oznake posameznih govornih odsekov govorcev so se pripisale avtomatsko , glede na večinsko število oznak vseh označevalcev .
Zbirka AvID ponuja dve vrsti snemalne seje .
Uporabljen govorni material obsega sedemnajst govorcev , od tega 7 moškega spola in 10 ženskega spola .
Tistih , ki so označeni kot ne-emocionalni govor , je skoraj 10 krat več , kar napeljuje uporabo tehnik , ki omogočajo po postopku izpeljave značilk umetno tvorjenje novih vzorcev značilk manj zastopanega razreda .
Za prenos ključne informacije o emocionalnem stanju govorca s pomočjo transformacije MLLR potrebujemo za vsako oceno značilke dovolj govornega materiala .
S stališča razpoznavanja vzorcev so bistvene lastnosti objektov tiste , ki poudarijo posebnosti posameznih razredov vzorcev .
Objektu razpoznavanja želimo prirediti množico značilk , katere naj bi opisale lastnosti posameznih emocionalnih stanj .
Do zdaj se raziskovalci še niso poenotili kaj predstavlja na splošno dobro množico značilk za razpoznavanje emocionalnih stanj iz govornega signala .
Linearne transformacije prikritih Markovovih modelov so splošno uporabljene na področjih adaptacije modela na akustično okolje .
Pri tem predpostavljamo , da se informacija o okolju ali govorca nahaja v parametrih linearne transformacije , ki se uporablja za prilagajanje parametrov akustičnega model ali značilk .
Informacijo o okolju ali govorcu se nahaja v linearni transformaciji , ki se kasneje nahaja v kombinaciji s parametri akustičnega modela ali na značilkah .
Obstaja več vrst tovrstnih linearnih transformacij , glede na različne možnosti vezave parametov celotnega govornega modela .
Matriko A in vektor b ponavadi združimo v matriko W = [ Ab ] , ki nato enovito predstavlja iskano linearno transformacijo .
S tem pridemo do linearnih transformacij W ( s ) , ki vektorje akustičnih značilk prilagodijo akustičnemu govornemu modelu .
V tem prispevku smo na emocionalni zbirki govornih posnetkov AvID izpeljali značilke , ki so bile tudi preizkušene na tuji zbirki emocionalnega govora ( Schuller et al. , 2009 ) .
V postopku izpeljave značilk orodje sestavi vektor značilk , ki ga opisuje 16 nizkonivojskih akustičnih značilk .
To so frekvenca spremembe predznaka ( ang. zero-crossing-rate ) v časovni predstavitvi govornega signala , energije govornega signala , osnovna frekvenca ( ang. pitch frequency ) normirana na 500Hz , razmerje zvenečenega proti nezvenečenemu delu govora ( ang. harmonic-to-noise ratio ) ter prvih 12 koeficientov melodičnega frekvenčnega kepstra ( MFCC ) .
Predhodnemu vektorju značilk se dodajo še značilke , ki imajo temeljijo na statistični analizi akustičnega signala .
To so na primer , povprečna vrednost , standardna deviacija , tretji in četrti standardiziran moment ( ang. skewness , kurtosis ) govornega signala , maksimalna in minimalna vrednost signala , relativna pozicija ekstrema v signalu in območje ekstrema kot tudi linearni regresijski koeficienti ter srednjo kvadratno napako linearne regresije .
Orodje tako vsakemu govornemu posnetku priredi 384 razsežni vzorec z oznako vzbujeno ali normalno stanje .
Kot smo že nakazali v drugem poglavju , zbirka emocionalnega govora AvID vsebuje posnetke , ki pa žal niso enakomerno porazdeljeni med oba razreda razpoznavanja .
Kot smo navedli v drugem poglavju je priporočena za dosego bolj robustne ločilne meje med normalnim in vzbujenim emocionalnim stanjem govorca uporaba postopkov , ki omogočajo bolj enakomerno porazdeljeni moči obeh razredov razpoznavanj .
Postopek tvori umetni vzorec tako , da vsakemu vektorju značilk realnih vzorcev manj zastopanega razreda razpoznavanja poišče izbrano število najbližjih sosedov .
Postopek ponavlja toliko časa , dokler ne pridobi želenega števila umetnih vzorcev .
Algoritem omogoča naključno izbiro točke v območju med dvema vrednostma značilke obravnavanega vzorca ter njegovega najbližjega soseda .
Programsko okolje predstavlja zbirko algoritmov strojnega učenja ter algoritmov za manipulacijo nad podatki .
V posamezni iteraciji učenja in preverjanja je posamezen sklop predstavljal testno množico , ostali štirje pa učno množico .
Na ta način smo poskrbeli , da so bili podatki vedno razdeljeni v učno in testno množico z razmerjem vzorcev 4 : 1.
Izbira metode podpornih vektorjev za udejanjanje razvrščevalnike emocionalnih stanj izhaja iz dejstva , da so vektorji značilk , ki vpisujejo govorni signal , visoke dimenzije .
Metoda podpornih vektorjev omogoča v visoko dimenzionalnem poiskati prostoru poiskati hiperravnino , ki ločuje vzorce posameznih razredov razvrščanja .
Tako udejanjen razvrščevalnik omogoča tudi posplošeno razvrščanje vzorcev , ki niso enaki vzorcem v učni množici razvrščevalnika , saj hiper-ravnino postavi tako , da je na obeh straneh razdalja do najbližjega vzorca največja ( Boser et al. , 1992 ) .
Preizkušali smo različna jedra ( ang. kernels ) ter ugotovili , da za značilke MLLR najbolje ustreza simodialno jedro , medtem ko za skupek akustičnih značilk najboljše rezultate pridobimo z polinomskim jedrom tretje stopnje .
Pri sistemih za razpoznavanje čustev se je uveljavil preklic R ( ang. recall ) kot mera za primerjavo delovanja različnih sistemov .
Velikokrat se v rezultatih poleg priklica pojavljajo tudi druge mere , ki omogočajo podrobnejši vpogled pri tolmačenju rezultata .
Udejanjen razvrščevalnik na podlagi metode podpornih vektorjev bolje ločuje med vzorci z oznakami normalno in vzbujeno emocionalno stanje , kot v primeru značilk MLLR .
Neuteženi povprečni priklic se razlikuje za več kot 11% .
Rezultat razvrščanja z uporabo " state-of-the-art " skupka značilk je primerljiv z razvrščanjem emocionalnih stanj tudi na drugi emocionalni zbirki podatkov , kas so pokazali Schuller , Steidl in Batliner Schuller et al. ( 2009 ) .
V prihodnosti si želimo poiskati način , ki bi iz matrike A in vektorja b omogočal izpeljavo boljše ocene med razdaljami transformacij in ne le nad posameznimi elementi matrike W = [ Ab ] , kot smo to pokazali v tem prispevku .
V sklopu projekta Univerzalni vmesnik inteligentnega doma je bilo treba narediti navideznega sogovornika , ki pomaga pri upravljanju televizijskega sprejemnika .
Projekt je sofinanciran v okviru Javnega razpisa za spodbujanje raziskovalno razvojnih projektov razvoja e-vsebin in e-storitev v letih 2009 in 2010.
Prenova sistema dialoga Kolos .
Glavna sprememba v sistemu dialoga Kolos je uporaba Amebisovega stavčnega analizatorja , ki je bil razvit za potrebe Presisa4 in Besane5 .
Novi analizator pozna občutno več besed kot stari , pri neznanih besedah pa zna tudi ugotavljati , ali gre morda za zatipkano besedo ( vendar Kolos to upošteva le pri iskanju po lemah , ne pa po samih besedah ) .
Jezik K. Jezik K temelji na vzorcih , ki jih išče v danem vprašanju , in seznamu možnih odzivov .
Dodani so bili še pomeni , ki so zapisani med dvojnimi oglatimi oklepaji ( npr. » [ [ peta ( noga ) { 0:0:0 } ] ] « ) .
Jezik K2.0 je sicer predvideval globalne spremenljivke , ki bi bile prenosljive med več moduli , vendar ta del ni bil nikoli izveden .
« ) , # # 5 največja zanesljivost odgovora , # # 6 pa je uporabljen za primere , ko gre za odziv na uporabnikov odgovor na prejšnje vprašanje , in mora Miki obvezno uporabiti ta odgovor .
Z uporabo referenc je tako lahko nadomeščeno veliko število vzorcev , hkrati pa je tudi olajšano dodajanje novih elementov , saj jih je treba dodati le na enem mestu ( isti šifrant programov lahko uporabimo tako pri preklapljanju programov kot pri iskanju po sporedu ) .
Ideja je bila , da se uporabijo enostavčne povedi , ki jih uspe analizator uspešno razčleniti in določiti pomene , ter da zna Micka potem odgovoriti na vsa vprašanja v zvezi s tem stavkom .
To je področje računalniške lingvistike , ki se ukvarja s tem , kako dobiti pravilen odgovor na vprašanje , napisano v naravnem jeziku , iz zbirke besedil ( Ledeneva , Sidorov , 2010 ) .
Možnih variant vprašanj pa je seveda še več .
Baza znanja izhaja iz vmesnega jezika , ki ga naredi analizator .
Vmesni jezik vsebuje vse potrebne slovnične podatke ( stavčno analizo ) , besede so tudi razdvoumljene ( ločeno vprašanje je seveda uspešnost razdvoumljanja ) , načeloma omogoča celo to , da so vprašanja v drugem jeziku , kot je vhodno besedilo ( Cardeñosa , Gallardo , De la Villa , 2009 ) , torej CLIR7 , vendar tega še nismo preizkusili ( težava je , da dobijo pri sedanji izvedbi izpeljane baze pomeni ( in tudi leme in oblikoskladenjske oznake ) vsakič drugačne kode , tako da bazi za različna jezika nista primerljivi ; morali bi razviti verzijo baze , ki bi hkrati podpirala več vhodnih jezikov ali pa uvesti stalne kode ) .
Stavek razbije na naslednje delce ( stavčne člene ) : povedek ( pomen glagola ( glagolske predloge8 ) in dodatni podatki o glagolskem naklonu , času , dovršnosti in trdilnosti ) , elementi glagolske predloge ( osebek , predmeti , lahko tudi predložni deli ali v nekaterih primerih prislovna določila ) , prislovna določila in členki ( vezani na glagol ) .
Kadar vsebuje stavek modalni glagol , je povedek sestavljen iz obeh glagolov , elementi glagolske predloge pa imajo dodan podatek , na kateri glagol se nanašajo .
Vmesni jezik vsebuje nekatere podatke , ki so za potrebe zapisa znanja odvečni ( oz. celo moteči ) , kot so kode lem besed , kode oblikoskladenjskih oznak besed in položaji besed v stavku .
Zato vmesni jezik očistimo teh podatkov : /.../
Stavek se tudi sam doda v bazo in je možen rezultat iskanja ( ob posameznem delcu , kjer pa se rezultat naredi s pomočjo generatorja iz vmesnega jezika ) .
Luščenje znanja iz korpusa Fida+ .
Že pri zadnjem preizkusnem označevanju korpusa Fida + ( v okviru razvoja izboljšane in razširjene verzije korpusa , ki se bo imenovala KOS ) smo kot stranski izdelek pripravili seznam vseh enostavčnih povedi ( žal so se v seznamu znašle tudi neglagolske povedi , ki jih je bilo treba dodatno izločati ) , ki smo jih uspešno analizirali , kar je osnovni pogoj za zajem v bazo znanja .
Na ta način programu za zajemanje ni treba analizirati celotnega besedila Fide + , ker bi vzelo zelo veliko procesorskega časa ( v mesecih na posameznem računalniku ) , ampak ima za vhod bolj obvladljivo množico .
Kljub tej predhodni obdelavi traja zajem kar nekaj časa ( okoli 30 dni ) , saj je v vhodnem spisku dobrih 10 milijonov povedi ( v vsem korpusu je sicer dobrih 45 milijonov povedi ) .
Od tega števila jih je program uspel zajeti dobrega 3,5 milijona , pri drugih pa kaj ni bilo v redu ( ni bil glagolski stavek ali pa katera od besed ni imela določenega nobenega pomena ) .
Poleg izboljšave nekaterih splošnih modulov , ki so bili že del Klepca ( npr. sklanjanje besed , vprašanja o trenutnem času , zemljepisna vprašanja ( položaji krajev v Sloveniji , razdalje med njimi ipd. ) ) , smo posebej za Micko razvili specializirane module za projekt UVID .
Vgradili smo podporo za prestavljanje programov ( z uporabo naprednih zunanjih referenc ) in nastavljanje glasnosti televizijskega sprejemnika .
Podpora tem ukazom sama po sebi v tem trenutku ni posebno uporabna — uporaba običajnega daljinca je mnogo preprostejša — vendar je kljub temu dodana zaradi popolnosti , polna uporabnost pa se bo pokazala v primeru , če bo v prihodnosti v inteligentni dom dodana tudi razpoznava govora , s čimer bodo ti ukazi res postali uporabni .
NTB na zahtevo vrne podatke o sporedu v formatu XML EPG10 .
S pomočjo sporeda pa Micka odgovarja na vprašanja tipa : » Ali bo danes zvečer na sporedu kakšen film ?
Vse zgoraj opisane izboljšave so bile uspešno uvedene v sistem Klepec , Micka napisana v jeziku K2.5 .
Nekateri primeri odzivov Micke so napisani že zgoraj , zato bodo na tem mestu bolj podrobno predstavljeni le rezultati baze znanja .
Kadar je več možnih odgovorov , je naključno izbran od njih ( s čim daljšim iskanim delcem ) , tako da isto vprašanje običajno ne bo dalo istega odgovora v prvem poskusu .
Na začetku so primeri , kjer so odgovori ustrezni ( ustreznost v tem primeru pomeni , da najdeni stavek res lahko odgovor na zastavljeno vprašanje , čeprav ni nujno , da je to res pravi in najustreznejši odgovor ) .
« ) pa kaže , kako program najde rezultat , kadar je na isti pomen vezanih več sinonimov .
Ker pa v vmesnem jeziku ( po vzoru angleščine ) ni dvojnega zanikanja , je v vmesnem jeziku ta trditev zapisa kot trdilna in jo baza znanja tako obravnava .
Primer » Koga poznam ?
« kaže , da vmesni jezik ne ločuje med osebami in drugimi pomeni in tako ne more ugotoviti , kateri pomeni ustrezajo kateri vrsti vprašalnih zaimkov .
Naslednji primer kaže na napačno analizirano besedilo .
Prislovno določilo » iz strahu « je v analizi označeno kot prislovno določilo načina namesto vzroka .
Pri zadnjem primeru je težava to , da je stavek pravilno razdvoumljen , vprašanje pa je tako dvoumno , da program ne more ugotoviti pravega pomena brez sobesedila .
Kako naprej .
Uporabo sporeda bi bilo smiselno razširiti še s podatki o igralcih , režiserjih , dobitnikih filmskih nagrad , žanrih ipd. , kar bi lahko dobili s pomočjo spletne podatkovne baze IMDb11 , precejšen del teh informacij pa zbirajo tudi že sami ponudniki digitalne televizije .
Za realni preizkus sem poiskal na spletni strani uciteljska.net nalogo iz bralnega razumevanja za 3. oz. 4. razred osnovne šole .
Navodilo je , da učenec prebere besedilo in odgovori na vprašanja o besedilu .
Besedilu sledi seznam vprašanj , ki v dani nalogi sicer podana v obliki kviza ( učenec izbira med odgovori a , b in c ) , za preizkus baze znanja , naučene iz zgornjega besedila , pa sem uporabil le vprašanja : /.../
Rezultat je bil , da program ni znal odgovoriti niti na eno od postavljenih vprašanj , kar kaže , da bo pred uporabo baze znanja v praksi treba narediti še marsikaj .
Analiza je pokazala naslednje razloge za neuspeh programa : - pri 1. in 2. vprašanju vprašanje ni neposredno povezano z besedilom novice ; - pri 3. in 6. vprašanju je v stavkih , kjer je odgovor , osebni zaimek namesto besede slon ; - pri 3. vprašanju je vprašanje tudi v pretekliku , odgovor pa v stavku v sedanjiku ; - na 5. vprašanje ni neposrednega odgovora v besedilu ; - pri 7. vprašanju ni bilo odgovora , ker v besedilu piše , da je policija slona vrnila , vprašanje pa je , kdo ga je vrnil nazaj ( če bilo obratno , torej » vrniti nazaj « v besedilu in le » vrniti « v vprašanju , bi program uspešno našel odgovor , vprašanja pa ne zna posplošiti ) ; - pri 4. vprašanju je prišlo do razlike pri razdvoumljanju glagola » pobegniti « med besedilom in vprašanjem ; besedilo je bilo razdvoumljeno z » P:G:pobegniti iz PR2 / NIOS KAM « , vprašanje pa z » P:G:uiti { PR3 / OS } KAM « .
Druga nadgradnja , ki pa bo zahtevala temeljito dopolnitev analizatorja , bo razreševanje osebnih in kazalnih zaimkov ( kar bo prišlo prav tudi pri Presisu , ker se kdaj spol zaimka v prevodu spremeni , česar Presis še ne zna upoštevati ; poznavanje izvorne besede bo koristno tudi pri razdvoumljanju ) .
Kot začasna rešitev se za odgovor uporabijo čim bolj zapleteni delci ( kadar je več možnih odgovorov ) , kar zmanjša verjetnost , da bi bili odgovori osebni zaimki .
Tretja nadgradnja bi lahko bila časovna orientacija , da torej analizator ugotovi , na kateri datum se nanaša jutri , danes , včeraj ipd. , ter na vprašanja odgovarja s perspektive današnjega dne .
Še ena dopolnitev bi bila upoštevanje živosti pri odgovarjanju na vprašalne zaimke kdo / kaj .
Ases sicer pri veliki večini pomenov ima podatek , ali gre za osebo , vendar to za zdaj ni zapisano v vmesnem jeziku , tako da iskanje tega ne zna uporabiti .
Veliko pa bo treba narediti tudi na kakovosti samega analizatorja ( predvsem pri razdvoumljanju ) in baze v Asesu ( največ pri glagolskih predlogah ; tako bo npr. treba dodati predlogo za » vrniti nazaj « in jo povezati na isti pomen kot » vrniti « ( spotoma se lahko označi še , da uporaba » vrniti nazaj « slogovno ni najboljša in bi lahko Besana priporočala izbris besede » nazaj « ) ) .
Vendar v analizator šele uvajamo višjo raven vmesnega jezika , ki bo opisala odnose med stavki ( oz. polstavki in pastavki ) v povedi , tako da tega za zdaj še ni na voljo .
Nadaljnji razvoj jezika K. Nadaljnji razvoj jezika bo najbrž šel v smer uporabe vmesnega jezika pri opisu vzorcev in odgovorov , vendar bo kot temelj treba prej še izboljšati analizator in dodati analizo povedi .
Smiselno je tudi , da bo uporaba novih funkcij le dopolnilo , saj vprašanja / zahteve uporabnikov v splošnem niso pisane slovnično pravilno , kar naredi analizatorju precej težav .
Najdeni delci za vprašanje .
glagolska predloga je element v Asesu , ki pove , na kakšen način se glagol uporablja v stavku , tj. s katerimi skloni predmetov in s katerimi predlogi se tipično lahko veže ipd. ( primeri so npr. » [ posaditi ] PR4 KAM « , » [ poslati ] { PR3 } PR4 KAM « , » [ zaljubiti ] se { v PR4 } « , » imeti krompir « ) .
Jezikovni viri projekta JOS .
Namen jezikovnih virov JOS je spodbuditi razvoj jezikovnih tehnologij in korpusnega jezikoslovja za slovenski jezik .
V prispevku predstavimo posamezne vire , s poudarkom na jos100k , ki je enojezični vzorčeni in uravnoteženi korpus slovenskega jezika s 100.000 besedami in z ročno označenimi oz. pregledanimi oznakami za tri nivoje jezikoslovnega opisa .
Na ravni skladnje so stavki v korpusu označeni z odvisnostnimi površinskoskladenjskimi povezavami med pojavnicami .
Na pomenski ravni so vse pojavitve 100 najbolj pogostih samostalnikov v korpusu označene z njihovim pomenom glede na slovenski semantični leksikon sloWNet .
Jezikovni viri JOS so označeni po mednarodnih standardih in priporočilih , oblikoskladenjske specifikacije skladno s sistemom MULTEXT-East V4 , tako specifikacije kot korpusa pa skladno z navodili Text Encoding Initiative Guidelines , TEI P5 .
Vsi viri so dostopni za raziskovalne namene po licenci Creative Commons na naslovu http://nl.ijs.si/jos/ .
Jezikoslovno označeni korpusi predstavljajo osnovo za jezikovne tehnologije in korpusno jezikoslovje , vendar za mnoge jezike še vedno niso na voljo , še posebej v obliki zaključenih podatkovnih zbirk .
Prvi korak na poti od korpusa FidaPLUS do korpusa JOS je bila pretvorba v format XML , da bi s tem dobili korpus v standardnem formatu in omogočili uporabo orodij za delo s XML , predvsem XSLT .
Korpusa jos100k in jos1M sta bila izdelana iz korpusa FidaPLUS z dvostopenjskim procesom filtriranja in vzorčenja z namenom , da pri končnem rezultatu dosežemo uravnoteženost in reprezentativnost , poskrbimo za kvaliteto besedil ( zaključeni stavki , primerna dolžina stavka itd. ) in zagotovimo varovanje avtorskih pravic .
Format korpusov je XML , s shemo , ki je narejena s parametrizacijo priporočil Text Encoding Initiative P5 ( TEI Consortium , 2007 ) .
Korpusa vsebujeta tudi obsežne metapodatke , kjer so navedene bibliografske informacije o posameznih besedilih , taksonomija zvrstnosti besedil , nabor oblikoskladenjskih oznak , opisi posameznih značilk v naborih itd.
Korpus jos1M je označen le oblikoskladenjsko , korpus jos100k v verziji 2.0 pa vsebuje tri ravni jezikoslovnega označevanja .
Slika 1 ilustrira oznake , uporabljene v treh ravneh jezikoslovnega opisu korpusa jos100k .
Skladenjske povezave so shranjene ločeno , pri čemer sta s pomočjo odvisnostne oznake medsebojno povezani po dve pojavnici .
Semantične oznake iz slovenskega leksikona sloWNet ( Fišer , 2009 ) , ki so enake identifikatorjem sinsetov princetonskega WordNeta ( PWN1 ) , so pripisane posameznim terminološkim enotam .
V Tabeli 1 navajamo število TEI elementov , uporabljenih v korpusu jos100k : v korpusu so deli besedil iz skoraj 250-ih besedil s 1.600 vzorčenimi odstavki , ki vsebujejo 6.000 stavkov .
Korpus vsebuje preko 5.000 semantičnih oznak in nekaj manj kot 6.000 stavkov z odvisnostnimi oznakami .
Specifikacije so tako kot korpusi formatirane skladno s TEI P5 in so kompatibilne s slovenskim delom večjezičnih oblikoskladenjskih specifikacij MULTEXT - EAST , verzija 4 ( Erjavec , 2010 ) .
Ročno označevanje , ki ga je pod nadzorom izvajala skupina študentov , je vključevalo popravljanje MSD-jev in lem v obeh korpusih JOS .
Izvorne oznake iz korpusa FidaPLUS so bile pretvorjene v skladu s specifikacijami JOS .
Oznake v korpusu jos100k so bile ročno preverjene dvakrat s strani dveh različnih označevalcev in kjer so se rešitve razlikovale , je bila končna odločitev preverjena s strani tretjega .
Poskusi pa so pokazali , da kljub napakam korpus jos1M kot učni korpus proizvede boljše označevalne modele kot jos100k .
Spletni vmesnik omogoča prikazovanje in iskanje po besedah ali po njim pripisanih oznakah : lemah , MSD-jih in celo po posameznih oblikoskladenjskih lastnostih ( podpira denimo iskalne pogoje , kot je [ število = " dvojina " & naslonskost = " klitična " ] ) , kar pomeni , da je omogočeno tudi podrobno raziskovanje slovničnih značilnosti korpusa .
Oblikoskladenjski označevalnik in lematizator ( Erjavec in Džeroski , 2004 ) sta bila naučena na korpusu jos1M in sta del spletnega servisa JOS .
Izhodni format je kompatibilen s formatom za storitev Sketch Engine ( Kilgarriff in dr. , 2004 ) , tako da uporabniki , ki imajo dostop to tega servisa , obdelana besedila lahko naložijo v Sketch Engine in uporabljajo zmogljiva orodja za analizo svojih korpusov .
Pri ročnem razčlenjevanju tega korpusa pa se je izkazalo , da je model izjemno zapleten in zato študenti težko sledijo navodilom .
Pri njem je število odvisnostnih razmerij zmanjšano na 10 , navodilom za ročno razčlenjevanje pa je relativno enostavno slediti .
V prvem koraku je bil razvit sam model , napisana so bila navodila in korpus s 500 vzorčnimi stavki je bil natančno razčlenjen , da bi testirali model in zagotovili bazo zgledov za označevalce .
Vsi stavki so bili s pomočjo posebej prirejenega grafičnega orodja razčlenjeni s strani dveh označevalcev , kjer je prišlo do razlik pri odločitvah , je končno odločitev sprejel tretji označevalec .
Rezultat je prvi ročno površinskoskladenjsko razčlenjen korpus slovenskega jezika .
Podrobna razlaga njihove rabe pri razčlenjevanju presega okvire tega prispevka , kljub temu pa jih v nadaljevanju na kratko opišemo .
» Modra « povezuje abstraktno vozlišče stavka ali povedi z elementi , ki tvorijo nadaljnje povezave v odvisnostnem drevesu .
» Del « povezuje elemente brez odvisnostnega razmerja v običajnem pomenu jedro-določilo .
Ta razmerja so posledično opredeljena le kot deli besedne zveze , tipično deli povedka .
» Dol « povezuje jedra z njihovimi določili v besednih zvezah .
» Ena « , » Dve « , » Tri « in » Štiri « povezujejo osebke , predmete in prislovna določila , vendar ta odvisnostna razmerja ne ustrezajo povsem definicijam v tradicionalnih slovenskih slovnicah .
» Prir « povezuje dele prirednih struktur na besednozvezni ravni , » Vez « pa s povezavo na veznike skupaj s » prir « povezuje dve jedri v priredni strukturi v trikotnik .
Korpus bo služil kot učna in testna podatkovna zbirka za učenje odvisnostnih razčlenjevalnikov .
Desetkratno prečno preverjanje je pri poskusih z razčlenjevalnikom MST pokazalo 80 % natančnost razčlenjevanja , če gledamo tako povezavo kot odvisnostno oznako , oz. 84 % , če gledamo samo pravilnost povezave med pojavnicama .
Primerjava besedišča v sloWNetu in korpusu jos100k pokaže , da sloWNet vsebuje 30 % samostalnikov iz korpusa , pri čemer pokriva 90 % tistih , ki po pogostnosti sodijo v zgornjo tretjino .
Da je ciljno označevanje učinkovitejše od sekvenčnega , poudarjajo številni avtorji ( glej Kilgarriff 1998 ) , saj na ta način semantične lastnosti določene besede obravnavamo hkrati , zaradi česar je označevanje bolj konsistentno .
Ker je bil sloWNet izdelan polavtomatsko in sloni na tujejezičnem semantičnem leksikonu , smo poleg ciljnega označevanja v raziskavi uporabili koordiniran pristop ( Agirre in dr. , 2006 ) , v skladu s katerim smo vzporedno z označevanjem preverjali in popravljali tudi sloWNet , s čimer smo zagotovili boljše ujemanje med pomeni v leksikonu in v korpusu .
Najpogostejši samostalnik je leto s 346 pojavitvami , ostale besede so precej redkejše , saj se jih več kot 100-krat v korpusu pojavi le še šest ( dan , delo , čas , človek , država in svet ) , seznam pa se konča s sedmimi besedami , ki se v korpusu pojavijo 30-krat ( besedilo , oče , pogled , predstavnik , projekt , razvoj in cesta ) .
Skupno število pojavitev samostalnikov , ki smo jih v korpusu označili , je 5.431 oziroma povprečno 53,2 pojavitev na besedo .
Med validacijo sloWNeta so označevalci pregledali vse sinsete , v katerih se njihova beseda pojavlja ( vse pomene te besede ) , pa tudi vse večbesedne zveze , v katerih se njihova beseda v sloWNetu pojavlja ( ponavadi , ne pa vedno , v vlogi podpomenke dodeljene besede ) .
Pregledovanju sloWNeta je sledilo označevanje izbranih besed v korpusu .
Označevalci so v korpusu označili 5.431 pojavnic , ki so jim pripisali 517 različnih pomenov oz. povprečno 5,1 pomen na samostalnik .
Največ ( 19,6 %) besed so označili s tremi različnimi pomeni .
Več kot deset pomenov je bilo pripisanih še trem besedam : prostor , konec in življenje .
46 pojavnic je bilo označenih kot lastno ime , ki ga ni v sloWNetu , 25 pojavnic ( 0,1 %) pa je ostalo neoznačenih , saj označevalci zanje v sloWNetu niso našli nobenega ustreznega pomena .
V večini teh primerov gre za kulturno-specifične pomene , ki jih bo potrebno naknadno dodati v sloWNet ( npr. voda na nekogaršnji mlin ) .
Rezultati so sicer nekoliko nižji kot pri sorodnih eksperimentih v drugi jezikih , vendar je pri tem treba upoštevati dejstvo , da smo pri tem projektu označevali izključno najpogostejše samostalnike , ki ponavadi izkazujejo tudi najvišjo stopnjo večpomenskosti , zato je bilo delo naših označevalcev težje .
V osnovi bo korpus služil kot učna in testna podatkovna zbirka za razvoj slovenskih oblikoskladenjskih označevalnikov , odvisnostnih razčlenjevalnikov in programov razreševanje večpomenskosti .
Poleg rabe za namene razvoja jezikovnih tehnologij je korpus namenjen tudi jezikoslovcem , čeprav se sistem označevanja v določeni meri razlikuje od tradicionalnega pojmovanja jezikovnih pojavov .
Korpusi JOS in z njimi povezani viri so na voljo v formatu XML TEI P5 , pa tudi v drugih , izvedenih formatih , ki so bolj primerni za specifične namene nadaljnjega procesiranja .
Poleg jezikovnih virov sta rezultat projekta tudi dva spletna servisa , zanimiva za jezikoslovno rabo : spletni konkordančnik za oba korpusa in spletni označevalnik , ki omogoča tokenizacijo , lematizacijo in oblikoskladenjsko označevanje slovenskih besedil .
Viri projekta JOS so na voljo na spletni strani projekta , korpusa pod licenco Creative Commons Priznanje avtorstva-Nekomercialno 3.0.
Predstavljena korpusa sta prvi tovrstni javno dostopni vir za slovenščino in bi zato lahko pomembno prispevala k razvoju jezikovnih tehnologij za slovenski jezik .
Delo na jezikovnih virih JOS za slovenski jezik se nadaljuje z dolgoročnim projektom » Sporazumevanje v slovenskem jeziku « , v okviru katerega je predvidena nadaljnja gradnja učnega korpusa in razvoj leksikona besednih oblik , milijardnega referenčnega korpusa , leksikalne baze ter drugih jezikovnih virov in priročnikov za slovenski jezik .
Primer stavka iz jos100k : » To je turističen kraj .
Element n Razlaga div 248 vzorčeno besedilo korpusa FidaPLUS p 1,599 odstavek s 6,151 stavek term 5,430 literal iz baze WordNet w 100,003 besedna pojavnica c 18,391 ločilo S 98,890 presledek linkGrp 5,961 skladenjska analiza stavka link 112,442 skladenjsko odvisnostno razmerje .
Strojno prevajanje in slovenščina .
Uporabljene metodologije evalvacije kakovosti prevodov so bile : samodejni objektivni metodi na osnovi metrik BLEU in METEOR ter subjektivni ročni metodi , prva temelječa na metriki WRR ( Word-Recognition Rate ) ter metoda , temelječa na smernicah LDC .
Primerjani sistemi so : Google translate , Microsoft Bing translator , Amebis Presis ter GUAT .
Rezultati raziskave so pokazali velik napredek sistemov temelječih na statističnih metodah , vendar ti sistemi kažejo sistematske napake , ki jih bo z opisanimi metodami težko odpraviti .
Kakovost strojnega prevajanja je v zadnjih leti zelo napredovala , s prihodom velikih korporacij pa je tudi dostopnost prevajalnih sistemov olajšana .
Predstavljeni so vsi sistemi , ki med podprtimi jezikovnimi pari ponujajo slovenščino .
Pri primerjavi sistemov so bile uporabljene samodejne ter ročne metodologije evalvacije kakovosti prevodov , rezultati kažejo , da je korelacija med samodejnimi metodami ter ročnim testiranjem pri nekaterih sistemih zelo nizka .
Izdelan je bil povedno poravnan korpus besedil , ki je bil uporabljen v testne namene pri vseh metodologijah evalvacije .
Nadaljevanje članka je razdeljeno , kot sledi : v Razdelku 2. so prikazani razlogi za izbiro jezikovnih parov , uporabljenih v eksperimentu , v podrazdelkih je vsak jezikovni par obširneje predstavljen z vidika strojnega prevajanja .
V Razdelku 5. so predstavljeni osnovni izsledki , nakazano je tudi možno nadaljnje delo .
Evalvacijo smo razdelili na dve skupini ; na testiranje sistemov s prosto izbiro jezikovnih parov ter na sisteme sorodnih jezikov .
Za jezikovne pare prve skupine smo izbrali skupni jezikovni par slovenščina-angleščina , ki je v povezavi s slovenskim jezikom tudi največkrat uporabljan .
Slovenščina in angleščina nista sorodna jezika , najpomembnejše razlike so na morfološkem ter skladenjskem nivoju .
Z vidika strojnega prevajanja ( Machine Translation - MT ) je pomembno , da lahko angleščina kaže večjo stopnjo dvoumnosti posameznih besednih oblik v odvisnosti od njihovih morfoloških oznak , še posebej besednih vrst ; ista besedna oblika je lahko samostalnik , glagol ali kaj drugega .
To se lahko zgodi tudi v slovenščini , vendar v veliko manjšem obsegu .
Druga lastnost angleščine , ki vpliva na kakovost prevodov , je njena sposobnost za gradnjo zapletenih samostalniških zloženk ( npr. long term car park courtesy pickup vehicle ) , medtem ko slovenščina ( in tudi drugi slovanski jeziki ) veliko pogosteje uporabljajo kombinacijo pridevnikov in samostalnikov ( dostavno vozilo dolgoročnega parkirišča ) , kar pomeni , da je običajno potrebno prevesti pridevnik kot samostalnik ali obratno , kar je seveda izziv za vsak strojni prevajalni sistem .
Tako slovenščina kot srbščina pripadata skupini južnoslovanskih jezikov , ki jih govorijo večinoma prebivalci z območja bivše Jugoslavije .
Jezika si delita skupne korenine ter še pomembneje skupno polpreteklo zgodovino ; oba jezika sta bila uradna jezika skupne države , celo predavana v šolah kot materina jezika ter jezika okolja .
Obstaja niz pomembnih razlogov za postavitev prevajalnega sistema za predstavljen jezikovni par , omenimo le najpomembnejša : ekonomiji obeh novih držav , Slovenije ter Srbije , sta še vedno tesno povezani ; mlajše generacije imajo jezikovne težave v medsebojni komunikaciji .
Oba jezika sta visoko pregibna ter morfološko bogata .
Začetni načrt testiranja je predvideval uporabo naključno izbranih povedi vzporedno poravnanega večjezičnega dela korpusa MULTEXT-EAST ( Dimitrova et al. , 1998 ) , romana 1984 Georga Orwella .
Podnapisi filmov že vsebujejo informacijo o času prikaza na zaslonu , kar omogoča enostavno izdelavo poravnanih korpusov .
Izdelali smo povedno poravnan korpus dveh jezikovnih parov z enim skupnim jezikom .
Segmente , kjer je bilo časovno ujemanje podnapisov dvoumno , smo izpustili .
Po pregledu spleta ter pogovoru s strokovnjaki področja smo se odločili za naslednji izbor prevajalnih sistemov : Google Translate , Microsoft BING translator , Amebis Presis ter GUAT .
Vrstni red sistemov je naključen .
Vse izbrane sisteme lahko uvrstimo v dve paradigmi strojnega prevajanja .
Glavna prednost statističnega pristopa je , da so metode neodvisne od jezika ( čeprav uporabnejše za določene jezike , med temi ni slovenščine ) .
Glavna pomanjkljivost sistemov strojnega prevajanja na osnovi pravil je slab pregled nad delovanjem sistema , sistematske napake je zelo težko odpraviti , uvajanje lingvističnega znanja je le delno mogoče oziroma celo nemogoče .
Način zapisa pravil se razlikuje med sistemi , veže pa jih skupno dejstvo , da je postavitev takšnega sistema dolgotrajno opravilo .
V to skupino sodi večina današnjih komercialnih prevajalnih sistemov , čeprav se pri gradnji poslužujejo nekaterih manj standardnih prijemov .
Sistemi te paradigme izvorno besedilo najprej morfološko ter skladenjsko analizirajo ter izdelajo predstavitev vhodnega besedila , ponavadi v obliki skladenjskega drevesa izpeljave .
Ta predstavitev se še dodatno abstrahira s poudarkom na zahtevah strojnega prevajanja .
Proces transferja prevede abstraktno predstavitev vhodnega besedila v izvornem jeziku v podobno predstavitev v ciljnem jeziku , to predstavitev sistem uporabi kot osnovo za generacijo besedila v ciljnem jeziku , v bistvu uporabi inverzne metode prvega dela na ciljnem jeziku .
Sistem ne uporablja dodatnega jezikovnega znanja , zanaša se samo na korelacijo med znanimi pari že prevedenih vzporednih besedil .
Statistične metode zahtevajo ogromne količine besedil ter veliko računalniške moči za obdelavo teh besedil .
Opisane lastnosti so omogočile Googlu izdelavo prevajalnih sistemov za kar 58 svetovnih jezikov , torej za kar 58 ∗ 58 = 3364 jezikovnih parov .
O natančnem delovanju prevajalnega sistema Google Translate ni veliko znanega , znane so le osnovne metode .
Pri uporabi sistema za prevode ter pri izvajanju evalvacije prevajalnega sistema smo prišli do podobnih zaključkov kot nekaj avtorjev , ki je svoja mnenja predstavilo na odprti debati na dopisnem seznamu Corpora ( List , 2010 ) .
Za večje jezike ter pogostejše jezikovne pare , kot so angleščina-nemščina , angleščina-francoščina ali angleščina-kitajščina , so sistemi naučeni posebej , medtem ko so manjši jeziki , mednje sodi tudi slovenščina , prevajani prek vmesnega jezika .
To pomeni , da prevajanje v slovenščino ne poteka neposredno iz izvornega jezika , ampak se najprej besedilo prevede v angleščino ( ponovno špekulacija ) ter šele nato v slovenščino .
Kakovost prevodov je slabša kot pri večjih jezikovnih parih , kar potrjujejo tudi rezultati testiranja , prikazani v Razdelku 4.
Predstavljeno špekulacijo lahko potrdimo le z empiričnimi primeri prevodov , kot je primer prikazan na Sliki 1 /.../
Sistem temelji na statističnem strojnem prevajalniku , obširneje je predstavljen v Razdelku 3. , ki uporablja tudi pravila , ki so odvisna od jezika ter določeno mero analize izvornega besedila .
Sistem je v osnovi statistični sistem za strojno prevajanje na osnovi fraz , ki vključuje jezikovno odvisno analizo besedila , drevesa odvisnosti ( dependency trees ) ter drevesa izpeljave ( parse trees ) in pravila za poravnavo besed ( word alignment rules ) za generalizacijo naučenih fraz .
Amebis Presis .
Ena glavna odlik sistema Presis je možnost prilagoditve prevajalni domeni z vključitvijo dodatnih slovarjev vendar primerjava tako spremernjenega sistema ne bi bila objektivna , zato smo to možnost opustili .
Pri testiranju smo uporabili spletno različico prevajalnega sistema Amebis Presis 2.0-pre37 .
GUAT 5 je rezultat akademskih eksperimentov metod za hitro postavitev prevajalnih sistemov za sorodne jezike .
Prevajalni sistemi za skladenjsko različne jezike , kot sta slovenščina in angleščina bi dosegali slabše rezultate .
Del sistema VoiceTran je tudi sistem za prevajanje besedila .
Sistem temelji na posebni različici orodja Presis , ki je opisano v Razdelku 3.3.
Storitev uporablja Googlovem prevajalnik , ki je opisan v Razdelku 3.1.
Metodologija vrednotenja ter rezultati .
Testni primeri , uporabljeni pri testiranju so predstavljeni v Razdelku 2.3. , za ponovljivost rezultatov raziskave so vsa gradiva na voljo na naslovu : http://jt.upr.si/ mt _ v _ sloveniji / .
Pri uporabi samodejnih metrik smo izvorne povedi poravnanega korpusa predstavljenega v Razdelku 1 prevedli s prevajalnim sistemom .
Obe metodi ročnega vrednotenja sta bili izvedeni na podoben način : evalvacija je obsegala naključno izbiro 100 povedi iz obsega vseh testnih povedi , prevod teh povedi s prevajalnim sistemom in izvedbo ročne evalvacije .
Slovenščina je bila obema ocenjevalcema materin jezik , za angleščino pa smo uporabili enega ocenjevalca , ki mu je angleščina materin jezik in enega , ki aktivno obvlada ta jezik .
Berljivost ter slovnična pravilnost nista upoštevani .
Sprememba z osnovno preciznost naj bi poskrbela za lastnost sistemov strojnega prevajanja , ki težijo k daljšim prevodom .
Rezultati so prikazani na Sliki 2 , večje vrednosti predstavljajo boljše rezultate .
Rezultati testiranja z metriko BLEU kažejo na veliko prednost sistema Google translate .
Metrika temelji na harmonični sredini natančnosti ter priklica unigramov ( unigram precision and recall ) , kjer je priklic močneje utežen kot natančnost .
Vsebuje še več metod jezikovnih tehnologij , ki niso prisotne pri ostalih samodejnih metrikah strojnega prevajanja kot so krnjenje in ujemanje sinonimov kot pomoč pri iskanju ujemanja besed .
Rezultati so predstavljeni na Sliki 3 , večje vrednosti predstavljajo boljše rezultate .
Dovoljene spremembe so vstavitev , brisanje ter zamenjava besede .
Definicija dovolj dobrega prevoda , ki smo jo uporabili pri tem eksperimentu , je prevod , ki je sintaktično pravilen ter izraža poln pomen izvorne povedi .
Rezultati na Sliki 4 predstavljajo WRR , Word Recognition rate ( 1 - WER ) , ki predstavlja uspešnost prevajalnega sistema in ne velikosti napake sistema , torej večje vrednosti so boljše .
Uporabljeni sta bili dve pet-točkovni lestvici , ena opisuje ustreznost prevodov ( adequacy ) , druga pa slovnično pravilnost prevodov ( fluency ) .
Vrednosti lestvice ustrezajo : 5 = Slovnično popoln prevod / Flawless translation , 4 = Slovnično dobro besedilo / Good target language , 3 = Besedilo ni materin jezik / Non-native target language , 2 = Slovnično nepravilno besedilo / Disﬂuent target language , 1 = Nerazumljivo besedilo / Incomprehensible text .
Rezultati so predstavljeni na Slikah 5 , 6 , 7 Vsaka slika kaže primerjavo sistemov za določen jezikovni par .
Standardna deviacija kaže odstopanja vrednotenja posameznih povedi .
Večje vrednosti predstavljajo boljše rezultate .
Dva od predstavljenih sistemov spadata v skupino prevajalnih sistemov paradigme RBMT in sta se pri tej metriki zelo slabo odrezala .
Podajamo možno razlago , ki pa pojasni le del problema : statistični prevajalni sistemi za izbiro končnih kandidatov uporabljajo jezikovne modele ciljnih jezikov , jezikovni model za slovenščino je naučen na veliko manjši učni množici kot jezikovni model za angleščino , učno množico pogojuje število dostopnih besedil v elektronski obliki .
Ta razlaga je brezpredmetna pri sistemu Presis , ki temelji na pravilih .
Pregled osnovnih napak sistemov : glavna napaka statističnih sistemov je problem lokalnega ujemanja besed v leksikalnih kategorijah .
Kot primer navedimo ujemanje samostalnikov ter pridevnikov v spolu , sklonu ter številu .
Ta problem je še posebej prisoten pri sistemu GUAT , ki ima dvojezični slovar ter slovar ciljnega jezika ( srbščine ) izluščen iz relativno majhnega korpusa .
Sistemi za strojno prevajanje se nenehno izboljšujejo , primerjava prikazana v tem članku bo ob rednih podobitvah dostopna na naslovu : http://jt.upr.si/mt_v_sloveniji/ .
Rezultati testiranja z metriko BLEU .
Sistem Google dosega najboljše rezultate .
Pri jezikovnem paru s srbščino dosega GUAT signifikantno boljše rezultate kot Google , pri jezikovnih parih z angleščino so signifikantno slabši rezultati sistem Bing , razlika med ostalima sistemoma ni signifikantna .
Sistem Presis dosega rezultate primerljive z Googlom , sistem Bing dosega signifikantno slabše rezultate .
Rezultati evalvacije sistemov jezikovnega para EN - SL po smernicah ( LDC , 2005 ) .
Sistem Presis dosega rezultate primerljive z Googlom , sistem Bing dosega signifikantno slabše rezultate .
Rezultati evalvacije sistemov jezikovnega para SL - SR po smernicah ( LDC , 2005 ) .
Primer prevoda iz slovenščine v srbščino , kjer se v prevodu pojavljajo angleške besede .
V prispevku predstavljamo rezultate raziskave , v kateri smo s pomočjo slovenskega in angleškega wordneta skušali izboljšati strojno prevajanje na leksikalni ravni , kjer je problematično predvsem ustrezno prevajanje večpomenskih besed in večbesednih zvez .
Za potrebe raziskave smo najprej izdelali vzporedni korpus novic EU , ki smo ga avtomatsko semantično označili in razdvoumili s pomočjo angleškega in slovenskega wordneta .
Rezultati so spodbudni , saj smo s pomočjo wordneta v obeh smereh in pri obeh uporabljenih prevajalnikih izboljšali precej prevodov , kar še posebej velja za prevajanje iz angleščine v slovenščino s prevajalnikom Presis .
Predvsem za kombinacije z večjimi svetovnimi jeziki sodobni strojni prevajalniki že omogočajo prevode , ki so povsem sprejemljivi v okoliščinah , kjer prevajamo besedila z zelo omejenega področja in so napisana v nadzorovanem jeziku , zadovoljivo uporabno vrednost pa imajo tudi prevodi splošnejše narave , za katere natančni prevod niti ni potreben ali pa si ga zaradi finančnih , kadrovskih ali časovnih omejitev preprosto ne moremo privoščiti .
Kljub temu pa strojni prevodi še zdaleč niso popolni ; poleg neustreznih slovničnih konstrukcij v generiranih prevodih pogosto nastopajo težave na leksikalni ravni , kjer je uporabljen sicer legitimen prevod neke besede , vendar v napačnem pomenu , kjer so prevedeni posamezni deli večbesednih zvez namesto cele zveze , kjer besede ostajajo neprevedene , ker manjkajo v prevajalnikovem leksikonu , in podobno .
Wordnet so kot spodnji del ontologije učinkovito uporabili v strojnem prevajalniku PANGLOSS ( Knight 1993 ) .
Pri strojnem prevajanju korejskih besedil so se s pomočjo latentne semantične analize in semantične podobnosti besed v wordnetu spopadli s prevajanjem kolokacij ( Yuseop idr. 2002 ) , za razdvoumljanje večpomenskih izrazov v izvirniku in izbiro ustreznega prevoda pa so ga uporabili pri statističnem prevajanju iz angleščine v bengalščino ( Salam idr. 2009 ) .
Wordnet so uporabili tudi za prevajanje samostalniški zvez iz arabščine v angleščino ( Ali idr. 2009 ) .
Na leksikalni ravni ostajamo tudi v tej raziskavi , pri čemer je naš namen pokazati učinkovitost vključevanja wordneta in semantičnega razdvoumljanja v proces strojnega prevajanja , ne pa razvoj strojnih prevajalnikov samih , zato tudi ne generiramo prevoda celotnega stavka .
V prispevku najprej predstavljamo korpusne in slovarske vire , ki smo jih uporabili v raziskavi .
Sledi opis semantičnega označevanja korpusa in razdvoumljanja , nato pa še strojnega prevajanja .
V petem razdelku analiziramo in ovrednotimo rezultate raziskave , prisevek pa sklenemo z razpravo in načrti za prihodnje delo .
V pričujoči raziskavi smo uporabili angleško-slovenski vzporedni korpus novic EU , ki smo ga sestavili in obdelali sami , ter že obstoječa angleški in slovenski wordnet , ki smo ju zgolj preoblikovali v ustrezen format za potrebe semantičnega razdvoumljanja .
Stavčno poravnavo korpusa smo opravili z orodjem WinAlign .
Slovenski del korpusa smo tokenizirali , oblikoskladenjsko označili in lematizirali s pomočjo spletnega servisa JOS ( Erjavec idr. 2010 ) , angleškega pa z orodjem ToTaLe ( Erjavec idr. 2005 ) .
Pojavnice smo v vsaki novici posebej oštevilčili in jim pripisali oznako 1 , če obstajajo v korpusu in jih želimo semantično označiti , oz. oznako 0 , če temu ni tako .
V tej fazi smo v korpusu označili tudi večbesedne zveze , ki jih najdemo tudi v wordnetu .
Slika 1 vsebuje izsek iz slovenskega dela korpusa , ki je pripravljen za semantično označevanje .
Za določanje pomena besedam v korpusu smo uporabili wordnet za angleški in slovenski jezik .
Princeton WordNet ( PWN ) je še danes največji , saj vsebuje približno 155.000 različnih literalov oz. 117.000 sinsetov .
Slovenski wordnet ( sloWNet ) je veliko mlajši in manjši , izdelan pa je bil s polavtomatskimi metodami ( Fišer 2009 ) na podlagi PWN in trenutno vsebuje petino angleških sinsetov , kar številčno pomeni približno 17.000 sinsetov oz. 20.000 literalov .
Slovenski wordnet za pojme v semantični mreži uporablja iste identifikacijske kode kot angleški , zato ju lahko uporabljamo tudi kot dvojezični vir , ki omogoča iskanje prevodnih ustreznic v obeh jezikih , kar je ključno za našo raziskavo .
Kot je razvidno iz Tabele 2 , primerjava besedišča v slovenskem delu korpusa in sloWNetu pokaže , da jih od nekaj več kot 116.000 pojavnic v korpusu skoraj 85.000 oz. 73 % najdemo tudi v sloWNetu ( med temi je okoli 3.300 različnic ) , med katerimi je tudi nekaj manj kot 2.500 večbesednih leksemov .
V angleškem delu korpusa , ki šteje nekaj nad 143.000 pojavnic , se s Princeton WordNetom prekriva skoraj 100.000 oz. 70 % pojavnic ( med temi je nekaj več kot 8.000 različnic ) , med katerimi je okoli 4.600 večbesednih leksemov .
Za potrebe semantičnega označevanja smo wordneta preoblikovali v bazo znanja v predpisanem formatu , pri čemer smo normalizirali literale v male tiskane črke in lematizirali večbesedne literale , da jih bo mogoče prepoznati v prav tako lematiziranem korpusu .
Semantično označevanje korpusa in razdvoumljanje .
Cilj semantičnega označevanja korpusa je , da večpomenskim pojavnicam v korpus pripišemo ustrezen pomen , na podlagi katerega bo nato prek medjezikovne povezave v slovenskem in angleškem wordnetu mogoče najti njene prevodne ustreznice .
Za to smo uporabili prosto dostopno orodje za razreševanje večpomenskosti UKB ( Agirre in Soroa 2009 ) , ki za določanje pomena besede glede na sobesedilo , v katerem se pojavlja , upošteva relacije med sinseti v wordnetu .
Iz množice grafov , ki se za besedo in njeno sobesedilo v semantični mreži izdelajo , program izbere tisti pomen , ki je na podlagi števila in moči povezav med pojmi v mreži ocenjen z najvišjo stopnjo verjetnosti .
Poleg tega , da je UKB mogoče uporabiti za vse jezike , za katere obstajajo semantični leksikoni tipa wordnet , je njegova prednost tudi v tem , da pomene vseh besed v istem sobesedilu razreši hkrati , zato je postopek pripisovanja pomenov zelo hiter .
Rezultat označevanja je seznam pojavnic iz korpusa , ki so jim pripisane identifikacijske kode izbranih sinsetov .
Za lažjo primerjavo s strojnimi prevodi v naslednjem koraku smo za pripisane semantične oznake izpisali še ustrezne literale iz slovenskega in angleškega wordneta .
Primer semantično razdvoumljenega korpusa prikazuje Slika 2.
Strojno prevajanje korpusa .
Ker namen te raziskave ni ocenjevanje kvalitete slovenskega wordneta ali avtomatskega semantičnega označevanja za slovenščino , temveč razvoj metodologije za izboljšavo strojnih prevodov s pomočjo wordneta na splošno , smo se odločili postopek preizkusiti v obeh smereh .
Pri tem uporablja ročno napisana pravila , dvojezični leksikon in druge jezikovne informacije iz zbirke Ases , ki vključuje tudi ločevanje med posameznimi pomeni besed ( Holozan 2008 ) .
Presisov prevod celotnega korpusa v obe smeri je prijazno zagotovilo podjetje Amebis .
Googlov prevajalnik uporablja vzporedna besedila na spletu , denimo nekdanje dokumente Združenih narodov in Evropske komisije , v katerih je » identična vsebina profesionalno prevedena v mnogo jezikov « ( Softky 2007 ) .
Osnova za razvoj statističnega prevajalnika je bil šestjezični korpus z 20 milijardami besed , s pomočjo katerega je Google izpilil statistične algoritme za učenje jezikovnih modelov , pri izboljševanju prevoda – denimo besednega reda ali izbiri ustreznice glede na kontekst – pa se opira še na gigakorpuse besedil v ciljnem jeziku .
Googlov prevajalnik ima vgrajeno avtomatsko vrednotenje prevoda , pomaga pa si še s funkcijo » Prispevaj boljši prevod « , kjer skuša jezikovne modele izboljševati s pomočjo povratnih informacij uporabnikov .
Strojno prevedena besedila smo nato lematizirali in jih na podlagi oznak za segmente , ki smo jih pridobili pri stavčni poravnavi korpusa , primerjali s semantično razdvoumljenim izvirnikom in prevodnimi ustreznicami , pridobljenimi preko medjezikovnih povezav iz wordneta .
V slovenskem delu korpusa smo zaznali nekaj čez 38.000 večpomenskih pojavnic , kar je približno 4.000 večpomenskih različnic .
Primerjava strojnega , wordnetovega in referenčnega prevoda iz slovenščine v angleščino pokaže , da se v približno 40 % primerov wordnetov predlog ujema z referenčnim prevodom .
V prvem primeru je besedo koza Presis prevedel z napačnim pomenom smallpox , medtem ko smo z avtomatskim razdvoumljanjem s pomočjo wordneta prišli do pravilnega prevoda goat , ki ga vsebuje tudi referenčni človeški prevod iz korpusa .
Ročni pregled naključno izbranih 200 primerov , kjer se prevod z wordnetom ne ujema niti z referenčnim niti s strojnim prevodom , pokaže , da je med njimi 73 takih primerov , ki so pravilno razdvoumljeni , le 127 pa takih , kjer je pojavnicam v korpusu glede na sobesedilo pripisan napačen pomeni .
Razlogi za neujemanje so številni : v prevodu je uporabljen sinonim , v prevodu je uporabljen isti besedni koren v drugi besedni vrsti , v prevodu je opazovana beseda izpuščena , prevod je svobodnejši .
Taka sta tudi primera v spodnji sliki ; prvi ponazarja izpust besede vrsta v referenčnem prevodu , drugi pa svobodnejši prevod za spomin : Zanimivo je , da je v ročno pregledanem vzorcu samo ena beseda razdvoumljena dvakrat različno : meso - meat in meso - flesh , pulp , pa še to obakrat narobe ; prvič je bilo meso v zvezi goveje meso , za katero se pravilni prevod glasi beef , drugič gre za opis revščine , ko si družina ne more privoščiti mesa .
Wordnet lahko pomembno izboljša tudi prevajanje večbesednih enot .
V korpusu smo našli kar 166 primerov , kjer je bil strojni prevod pomanjkljiv zaradi neustrezne obravnave stalne besedne zveze , medtem ko je wordnet predlagal pravilno ustreznico ; npr. biotska raznovrstnost – biotic diversity namesto biodiversity ; vezani les – tied wood namesto plywood .
Ročno vrednotenje naključno izbranih 200 primerov pokaže , da je med negativnimi primeri kar polovica pravilno razdvoumljenih ( 99 pravilno : 101 napačno ) .
Če primere pogledamo pobliže , opazimo , da so glagoli veliko slabše razdvoumljeni od samostalnikov ( npr. dosledna napaka be - živeti , namesto biti ) , vendar je pri tem treba poudariti , da je razdvoumljanje glagolov veliko težje kot razdvoumljanje samostalnikov .
Primera , v katerih je bilo razdvoumljanje in prevajanje v slovenščino s pomočjo wordneta uspešnejše od strojnega , vsebuje Slika 5.
V prvem primeru je Presis z besedo prikuha narobe prevedel izraz vegetable , medtem ko smo z wordnetom dobili ustrezen predlog zelenjava .
V prispevku smo predstavili poskus izboljšave strojnih prevodov na leksikalni ravni s pomočjo semantičnega razdvoumljanja in iskanja prevodnih ustreznic v angleškem in slovenskem wordnetu .
Analiza in vrednotenje rezultatov sta pokazala , da je z uporabo že obstoječih jezikovnih virov in tehnologij na enostaven in hiter način v številnih primerih mogoče učinkovito ugotoviti pravi pomen , s tem pa tudi prevod večpomenskih izrazov , s čimer imajo strojni prevajalniki dandanes še precej težav , ne glede na to , ali za prevajanje uporabimo sisteme , ki temeljijo na ročno napisanih pravilih , ali statistične prevajalnike .
Dejstvo , da je Google Translate v obeh smereh dosegel boljše rezultate , bi lahko utemeljili s tem , da smo v korpus vključili vzporedna besedila , objavljena na svetovnem spletu , in to s področja delovanja EU .
Ker Googlov prevajalnik svoje jezikovne modele gradi prav s pomočjo tovrstnih vzporednih besedil , lahko upravičeno pričakujemo , da se bo pri njihovem prevajanju zelo dobro odrezal .
Pri vrednotenju rezultatov se je izkazalo , da je ustreznost prevodov zelo težko vrednotiti avtomatsko , kljub temu , da smo imeli na voljo človeški referenčni prevod .
Ta je namreč velikokrat svobodnejši in namesto sicer pravilno razdvoumljenega izraza vsebuje njegovo približno sopomenko , izraz v spremenjeni besedni vrsti , izraz preprosto izpusti , ali pa je bolj idiomatski od izvirnika .
Zato je pri tovrstnih preizkusih nujen tudi ročni pregled vsaj vzorca dobljenih rezultatov , s čimer dobimo natančnejši vsebinski vpogled v prevode .
V okviru bilateralnega projekta z madžarsko akademijo znanosti nameravamo v prihodnje raziskavo razširiti še na jezikovni par angleščina-madžarščina in postopek preizkusiti na prevajalnem sistemu MorphoLogic .
Članek govori o zamisli projekta uvedbe in oblikovanja slovenskih ( strokovnih : pravnih ) ontologij ali semantičnih mrež kot vira , obogatitve ali nadgradnje terminološke zbirke pravnih izrazov .
Sestavljanje ontologij nasploh je v zadnjem času zelo razširjena disciplina v evropskih in svetovnih projektih računalniškega jezikoslovja .
Ključni izrazi : ontologije , semantične mreže , leksikalne taksonomske zbirke , terminologija , korpusi področnih besedil ( pravni strokovni jezik ) , računalniško podprto sestavljanje .
Leksikalne ontologije .
Predlagani projekt ( o ) bogatitve terminoloških virov ( nasprotni proces kot pri T. Vealeju ) z ontologijami zajema podatke iz znanstvenih , strokovnih in poljudnoznanstvenih besedil ( najbolje v obliki ( označenih ) korpusov ; na področju prava npr. neoznačeni : Eur-lex , slovenska zakonodaja , besedila iz strokovnih revij , dvo - in večjezični korpusi : SVEZ-IJS Acquis Corpus – označeni , Evrokorpus ipd. ) , ki omogočajo ' ročno ' ali ' računalniško obdelavo ' ( s pripomočki za rudarjenje podatkov , sestavljanje semantičnih oz. ontoloških mrež in njihovo ponazoritev ) .
Vizualizacija pojmov in razmerij med njimi je odvisna od predstavitvenega in oblikovnega programa ter od množice podprogramov , ki pomagajo pri iskanju pojmov , ki nastopajo v sobesedilu v značilnih relacijskih razmerjih , ki jih predhodno definiramo za vsako strokovno področje posebej ( največkrat ob sodelovanju jezikoslovca in strokovnjaka ) .
Pri tem so nam v pomoč nekateri že obstoječi prosto dostopni programi na internetu .
Ontologije nasploh – kaj so ontologije ?
) , zateka k modifikacijam ali postavljanju omejitev človekovega razmišljanja in uvaja pogoj ' po splošnem pojmovanju ' ( ubesedeno dob .
' kar po splošnem pojmovanju šteje ( za ) ' ) , sklicujoč se na človeka nasploh , ki ima ob splošni razgledanosti o stvareh tudi izkušnjo , kakšna je narava teh stvari v njihovem običajnem stanju .
Tako je v omenjenem SPZ kot predmet posesti navedena tudi energija ( v opredelitvi temeljnih pojmov – ' stvar ' , 15. ( 2 ) člen : ' Za stvar se štejejo tudi različne oblike energije in valovanja , ki jih človek lahko obvladuje ' ) .
b ) Ontologija v računalništvu in računalniškem jezikoslovju : Izraz ' ontologija ' izhaja iz filozofije in se je skozi zgodovino uporabljal na različne načine .
in različne vrste povezav med njimi ( razmerja ali relacije , odvisnosti in predikatna razmerja v smislu propozicij itd. ) .
V računalniškem jezikoslovju in umetni inteligenci ( sistemi znanj ) se razvija zlasti logično formalizirana komponenta na eni strani in vizualizacija ontologij na drugi .
Ontologija , pojmovana kot nova disciplina , je še vedno oprta na svoj izvor v filozofiji in zlasti fenomenologiji .
Najbolj prepoznavne analitične kategorije so : stvari , stanje stvari , deli , celote ( mereologija ) ter razmerja med deli in celotami , zapisana v smislu odvisnostnih zakonov .
Nasprotno pa opora v formalizabilnem sistemu daje podlago za računalniško podprto gradnjo ontologij kot zbirk znanj različnih strokovnih področij , pa tudi njihovo združevanje v enovitejši sistem , ki omogoča iskanje entitet , razmerij , podatkov , informacij in njihovo strojno učenje ter izdelavo računalniških modelov strok ter generira specifična strokovna razmišljanja , sklepanja ( na logičnoformalnem sistemu inferenc ) v njih .
Prvi korak pri tej vzpostavitvi mreže sloni na gradivu , ki je po obliki podobno ' miselnim vzorcem ' , ali t. i. preglednicah ( brošurah , tabelaričnih in povzemalnih prikazih , ki spominjajo na ontološke prikaze pojmov ) , ki jih profesorji na pravni fakulteti uporabljajo pri svojem pedagoškem delu .
V konkretnem strokovnem področju , tj. posamezni pravni disciplini , najprej vzpostavimo ob poznavanju stroke tudi semantična razmerja med pravnimi pojmi , ki jih sproti dopolnjujemo in gradimo širšo semantično mrežo pravnih pojmov ( v JurWordNet oz. LOIS WordNet ) .
Ponuja se nam primerjava z obstoječimi sistemi semantičnih mrež ( v drugih jezikih ) , ki so kot ontologije definirane za konkretni pravni jezik .
Vsak pravni jezik gradi lastne pravne ontologije ali semantične mreže / taksonomije in ima podlago v veljavnem pravnem sistemu oz. pozitivnem pravu na ozemlju neke države ( jezikovne in državne meje si seveda vedno ne ustrezajo , npr. nemški pravni jezik v Švici ali Nemčiji ter francoski pravni jezik v Franciji , Kanadi ali Luksemburgu itd. ) .
Večjezični sistemi povezanih ontologij praviloma niso neposredne preslikave iz enega pravnega jezika ( terminologije , ontologij ) v drugi , ampak so razmerja zapletenejša , čeprav je sama primerjava možna tam , kjer so pravne ureditve med seboj podobne ( npr. zakonodaja EU in zakonodaje posameznih držav članic , ali pa zakonodaja srednjevevropskih držav z obsežnim vplivom nemške zakonodajne prakse , zakonodaja držav z romanskim uradnim jezikom tudi kot primer ' kontinentalne zakonodajne prakse ' z velikim poudarkom na izhodiščnem rimskem pravu , z ustaljenimi leksikalnimi ( latinskimi ) pravnimi formulacijami ter britanska zakonodaja , ki izhaja bolj iz same pravne prakse t. i. case law .
Slovenska zakonodajna praksa se od leta 1990 – ob nastanku prvih zakonov – ustave kot prvega državnega akta novonastale oz. takrat nastajajoče , države , v večji meri zgleduje po nemški , predvsem pri sestavljanju okvirnih zakonov , in nekaterih drugih sorodnih zakonodajnih praksah ( pri pisanju in sprejemanju zakonov ) , saj so bili slovenski odvetniki in pravniki nasploh ' vajeni ' branja in tolmačenja zakonov , napisanih v nemščini v času Habsburške monarhije , nekateri pravni izrazi so bili že takrat oblikovani bodisi kot kalki ali kot ( po smislu ) prevodne ustreznice nemških pravnih izrazov ) veliko novosti pa so v slovensko zakonodajo prinesli predvsem danes vodilni slovenski pravni strokovnjaki .
Predlagani projekt obogatitve terminoloških virov z ontologijami na področju prava zajema tako iz različnih virov , ki so na voljo na spletu ( npr. Eur-Lex , slovenska zakonodaja – na različnih spletnih straneh , med drugim v Registru pravnih predpisov Slovenije ( ki ga ureja Služba vlade za zakonodajo ) : www.rps.si , na www.zakonodaja.si ali na straneh Državnega zbora www.dz-rs.si , kjer so na vpogled tudi zakoni v pripravi ; besedila iz strokovnih revij , komentarji k publiciranim pravnim aktom različnih založb , zlasti založb Uradni list in IUS-INFO ipd. ) ter predvsem iz že vzpostavljenih semantičnih oz. ontoloških mrež zunaj slovenskih spletnih strani ( JurWordNet , LOIS Legal WordNet , Legal Taxonomy Syllabus , EuroWordNets , SloWNet , ProtégéOntoLT , Polaris , NeON , Cyc ter drugi ontološki , urejeni strokovni in enciklopedični viri ) .
Program za urejanje , gradnjo ontologij je običajno večmodulski , vsebuje več podprogramov , ki omogočajo vnos , urejanje , preverjanje konsistentnosti , določanja razmerij ter vizualizacije in iskanja izrazov , ki se nahajajo v okviru definiranih semantičnih razmerij ( med obstoječimi programi se je kot testni program za urejanje slov. ( pravnih ) ontologij izkazal kot dosleden , zmogljiv , nadgradljiv , standarden in dovolj prijazen za uporabnika – program NeON Toolkit ) .
Pri omenjenem projektu je nujno sodelovanje pravnih , jezikoslovnih in računalniških strokovnjakov , sestavljanje oz. gradnja ontologij sprva poteka sprva ' ročno ' s sprejemanjem standardov za definiranje temeljnih pravnih pojmov in razmerij med njimi , kasneje pa tudi ' računalniško podprto ' .
Med obstoječimi pravnimi ontološkimi zbirkami sta predvsem dve , ki bosta služili kot zgradbena podlaga za gradnjo slovenskih ontologij , v prvi fazi projekta pa kot primer za bogatitev terminoloških zbirk , zlasti spletnih ( npr. Evroterm ) , kjer je treba ponatančiti zlasti opise pravnih terminov in jih postaviti v povezave ( semantična razmerja : nadpomenskost , podpomenskost , sopomenskost , protipomenskost ipd. ) , kar prevajalcu ali drugemu uporabniku bistveno olajša delo .
Predstavitev uporabe že izdelanih ontologij ( LOIS Wordnets , Taxonomy Syllabus ) kot podlago k zamisli za oblikovanje slovenskih pravnih ontologij – ter hkratno dopolnjevanje terminološke zbirke , zlasti z mikroelementi ontoloških prikazov , kot so definicije pojmov , raba izrazov ( ustrezne kolokacije v pravnem jeziku ) , razmerja med izrazi / pojmi in njihova pojmovna razčlenitev , ponatančitev .
Uvodne težave – razpoložljivi viri : pičlost dosegljivih pravnih virov , obdelanih primerno za jezikoslovno , pomenoslovno ( leksikalno , pojmovno ) , ontološko obravnavo .
S pravnega vidika so na voljo vsi zbrani zakoni , podzakonski akti in ustava Republike Slovenije , kakor so bili objavljeni v tiskanem Uradnem listu Republike Slovenije ( www.uradni-list.si ), tudi v spletni obliki ; druga oblika istih virov je proti plačilu naročnine dosegljiva za uporabnike pod imenom zbirke IUS-INFO ( vsebuje dodatne komentarje k zakonom , zbrane iz strokovnih revij ali posebnih izdaj …
V zadnjem času GV založba ob izdajanju dveh pravnih strokovnih revij ( nista dosegljivi v elektronski obliki , razen na portalu IUS-INFO ) , Pravnika in Pravne prakse , izdaja tudi predstavitveni , definicijski material pravne teorije za interesente ( študente prava in druge ) pod imenom Pravne preglednice ( katerih avtorji so trenutni nosilci predavanj posameznih pravnih disciplin na ljubljanski pravni fakulteti ) .
Definicije pravnih pojmov se da iskati tudi na drugačen način , predvsem na Googlovem spletnem naslovu ( www.google.com ) s posebnimi iskalnimi prijemi ( npr. Term:definition , kjer Term pomeni kateri koli iskani izraz ) , vendar dobimo tako večinoma le tujejezične , največkrat angleške izraze , ki nam zaradi drugačnega pristopa k zakonodaji in pisanju zakonov ter pravne prakse in pravnega sistema pri slovenski pravni terminologiji ne pomagajo prav veliko , opozorijo nas pa lahko , na katere tuje izraze in pojme smo še lahko pozorni , te seveda preverimo tudi s približnimi ustreznicami v dvo - in večjezičnih pravnih ali splošnih slovarjih , večinoma dostopnih na spletu ali v elektronski obliki ( plačljivo ) , namestljivi kot programska oprema .
Ta faza se nanaša predvsem na raziskavo formalnih zgradbenih elementov ontologij , po eni strani na pojmovni ravni ( pravna zgradba pojmov , definiranih v splošnejših pravnih aktih , t. i. zakonikih ) , po drugi strani pa na zgradbo v tehničnem smislu , ki se kaže predvsem v rabi konkretnega normiranega , standardiziranega zapisa pravnih besedil , ki omogoča tudi njihovo izmenjavo , samodejno računalniško branje ipd.
V zadnjem času je bilo več poskusov standardizacije obeh , tako se kot jeziki omenjajo označevalni jeziki ( angl. mark-up languages ) , kot ' osnovna zgradba ' za zapis ontologij pa je tako v terminologiji kot v ontologijah uveljavljen standardiziran zapis v formatu XML ( ki je imel več predhodnih in vzporednih oblik , npr. SGML , HTML , PAT , RTF z oblikovnimi formati SIM , OPC , CDD , EnAct …
V grobem okvirju opisujejo predvsem dogodke ( events , hipne , tudi situacije ) in dogajanja / ukrepe ( actions ) , tretja kategorija so transakcije ( transactions , odškodnine , nadomestila , povračila , plačila itd. ) .
( primer zapisa ontoloških gesel z uporabo standardov ) MetaLex in CEN OWL16 vsebujeta poleg navedenih še druge opisne parametre za opisovanje pravnih predpisov ( zapisane v formatu RDF ali XML ) , zlasti besedilne modifikatorje , medsebojne ( zakonske , normativne ) reference , citate ipd.
z določenimi semantičnimi vrednostmi , npr. področje delovanja instrumenta ( ukrepa ) – npr. finančni , šolski , kmetijski sektor ; območje delovanja ( prostor – neka država ali njen del ) ; časovno obdobje ; spremembe predpisov , ki vplivajo na veljavnost predpisa ali ga v določenih komponentah omejujejo ali tudi razširijo njegove pristojnosti ; ter drugi atributi in kazalci ( staro besedilo , novo besedilo predpisa , prečiščene različice ipd. ) .
Tretja faza – samodejno sestavljanje ontoloških zbirk .
Trenutno je v fazi testiranja program NeON Toolkit , ki omogoča vnašanje in primerjavo med vnesenimi pojmi na podlagi uvrščanja v razrede ( pojmi – word-senses , literals – leksikalni izrazi , variants – njihovi sinonimi ) , številčenje ali indeksiranje pojmov in leksikalnih enot , jezikovno opredelitev slovničnega razreda ( PoS – besedna zveza ) , opredelitev razmerij do drugih pojmov ( generični pojem , vsebuje podpomenko , nadpomenko , sinonimni izraz , antonim ipd. ) .
Samodejno sestavljanje sledi poskusnemu ročnemu vstavljanju in preverjanju lokacij ontoloških enot ( pojmov ) v ontologiji , predvsem je nujen program , ki oblikuje drevesne mreže in omogoča širjenje le-teh po izbiri sestavljavca .
Zato je nujno , da je program čim bolj elastičen in prilagodljiv potrebam vsebinskega dela sestavljanja osnovnih pravnih ontologij .
V tem smislu se tudi določi vrstni red , količina , vrsta končnega izdelka in njegova uporaba .
Projekt sestaviti osnovno zbirko pravnih ontologij v smislu ontološke vede , glede na razmerja , v kakršnih ti pojmi dejansko obstajajo v slovenskem pravnem jeziku je obsežen in dolgotrajen projekt .
Kot uvodni stranski produkt gradnje ontologij je lahko pri zamisli gradnje ontologije koristno predvsem dopolnjevanje terminološke zbirke z mikroelementi .
V nadaljevanju je po vzpostvitvi ožje ali širše zasnovane ontološke ( pravne ) zbirke z ustreznim prikazom mreže razmerij med pojmi potreben razmislek bodisi o združevanju s terminološko zbirko ( obratna pretvorba formatov : OWL v XML ) , prelitjem ontologije v tako zbirko ( kar tako zbirko tudi notranje obogati ) , bodisi kot možnost zunanjega navezovanja med enakimi izrazi ( pojmi ) v terminološki in ontološki zbirki v obliki mrežnega prikakovalnika ( vizualizacija ) .
konzorcij LOIS na Inštitutu ITTIG v Firencah : izdelal ontološko zbirko LOIS Legal WordNet : spletna stran : www.ittig.cnr.it ;.
Razpoznavalnik tekočega govora UMB Broadcast News 2010 : nadgradnja akustičnih in jezikovnih modelov .
Verzijo sistem predstavljeno leta 2008 smo nadgradili z izboljšanimi akustičnimi in jezikovnimi modeli .
Jezikovne modele smo nadgradili s podporo za trigrami , ki boljše modelirajo tekoči govor .
V učni nabor za jezikovno modeliranje smo vključili dodatni besedilni korpus FidaPLUS .
Kadar želimo v takšni količini gradiva poiskati želeno informacijo , smo prisiljeni uporabiti metode avtomatskega iskanja po vsebini .
V članku bomo predstavili nadgradnjo sistema avtomatskega razpoznavanja tekočega govora UMB Broadcast News , ki je trenutno najkompleksnejši sistem za razpoznavanje slovenskega govora .
Domena sistema so dnevno-informativne televizijske oddaje .
Prva različica sistema UMB BN je bila predstavljena leta 2006 ( Žgank et al. , 2006 ) in je delovala samo za bran govor v studijskem okolju brez zvočnega ozadja .
Sistem s polno podpora za različne tipe govora in akustična ozadja smo predstavili leta 2008 ( Žgank et al. , 2008a ) .
Verzijo iz leta 2008 smo nadgradili z izboljšanimi akustičnimi modeli , kjer smo spreminjali predvsem lastnosti povezane s parametri izločanja značilk .
Izboljšanje modeliranja je potreben korak za razširitev možnosti dodajanja različnih modulov za predprocesiranje ( npr. avtomatska segmentacija in klasifikacija , grozdenje govorcev ) .
Slednje se je pokazalo kot potreben korak pri pripravi sistema razpoznavanja govora za delovanje v dveh iteracijah , kar predstavlja naslednjo fazo razvoja .
Na področju jezikovnih modelov smo vključili uporabo trigramov , ki zaradi modeliranja daljših besednih zaporedij bistveno izboljšajo pravilnost delovanja .
V nadaljevanju članka bomo najprej predstavili jezikovne vire , ki smo jih uporabili pri izgradnji sistema avtomatskega razpoznavanja govora .
V tretjem poglavju bo sledila predstavitev nadgradnje akustičnih in jezikovnih modelov eksperimentalnega sistema .
Rezultate in analizo vrednotenja razpoznavanja govora bomo predstavili v četrtem poglavju .
Jezikovni viri predstavljajo ključno komponento v postopku izgradnje avtomatskega razpoznavalnika govora , saj so potrebni tako za gradnjo akustičnih kot tudi jezikovnih modelov .
Analize so tako pokazale , da slovenski jezik s tega vidika sodi med kompleksnejše jezike .
Za jezikovne vire v domeni Broadcast News je značilno , da je praviloma v njihovo izdelavo potrebno vložiti dosti ročnega dela ( označevanje , zapisovanje izgovorjenega ) , kar pomembno vpliva na razpoložljivi obseg gradiva .
Govorna baza BNSI Broadcast News .
Osnovno učenje akustičnih modelov sistema UMB BN smo izvedli z govornim korpusom slovenske baze BNSI Broadcast News ( Žgank et al. , 2004 ) , ki obsega 36 ur zapisanega govornega materiala iz obdobja 1999-2003.
Slovenska baza BNSI je dostopna pri evropski organizaciji ELRA / ELDA ( ELRA , 2008 ) .
Postopek priprave na učenje akustičnih modelov zahteva dodatno ročno delo za pripravo in uskladitev vseh vključenih jezikovnih virov , predvsem če želimo doseči visoko kvaliteto razpoznavanja govora .
V primerjavi s sistemom UMB BN , predstavljenim leta 2008 ( Žgank et al. , 2008a ) tokrat nismo dodatno povečevali govornega korpusa .
Za učenje jezikovnih modelov smo obstoječim besedilnim korpusom dodali še korpus FidaPLUS .
FidaPLUS obsega 621 mio besed in dodaja besedila iz tekstovnih virov iz obdobja 1999-2006.
Večji del korpusa predstavljajo časopisni in revijalni članki ter knjige .
Korpus je lematiziran in označen z morfosintaktičnimi značkami , ki pa v pričujočem članku niso bile uporabljene .
Uravnotežen vpliv različnih jezikovnih virov smo dosegli z linearno interpolacijo na BNSI-Devel korpusu .
Nadgradnja sistema UMB BN. Okvirne karakteristike sistema UMB BN iz leta 2008 so predstavljene v tabeli 1 , več informacij je na voljo v ( Žgank & Kačič , 2005/1 ; Žgank et al. , 2005/2 ; Žgank et al. , 2008a ; Young et al. , 1994 ; Odell , 1995 ; Grašič et al. , 2008 ) .
Predstavljen sistem avtomatskega razpoznavanja govora je ob uporabi ročne segmentacije dosegel pravilnost razpoznavanja besed 66,0% , kar je predstavljajo izhodišče za nadgradnje trenutnega sistema .
Dosedanji sistem je uporabljal dolžino 32 ms .
Na osnovi preliminarnih rezultatov dobljenih na avtomatskem razpoznavalniku govora za govorno vodene telefonske storitve ( IVR ) smo povečali število mel filtrov v izločanju MFCC značilk iz 26 na 42 ( HTK , 2010 ) .
Na takšen način povečana razločljivost je pri IVR sistemu pokazala tendenco izboljšanja rezultatov .
Kot zadnji korak v nadgradnji akustičnih modelov smo pripravili vzporedni sistem , ki uporablja namesto 12 mel kepstralnih koeficientov samo 8 koeficientov .
S takšnim pristopom sicer nekoliko poslabšamo rezultate razpoznavanja govora , vendar lahko zaradi zmanjšane kompleksnosti akustičnih modelov bistveno pohitrimo razpoznavanje .
Tako okrnjeni akustični modeli bodo uporabljeni v prvi iteraciji naslednje verzije sistem UMB BN , ki bo uporabljala dve iteraciji .
Na osnovi besedilnih korpusov smo zgradili bigramski in trigramski model .
Jezikovni model je sestavljen iz štirih komponent : prvo komponento smo zgradili na korpusu BNSI-Speech , drugo na korpusu BNSI-Text , tretjo na korpusu Večer in četrto na korpusu FidaPLUS .
Do velikosti 64.000 smo ga dopolnili z najpogostejšimi besedami iz korpusa Večer .
Perpleksnost bigramskega interpoliranega jezikovnega modela na BNSI-Eval je znašala 359 , trigramskega modela pa 246.
Vrednotenje različnih konfiguracij sistema razpoznavanja govora UMB BN smo izvedli na evalvacijskem naboru baze BNSI , pri tem pa smo tokrat uporabljali izključno ročno segmentacijo , ki ne vnese dodatne napake v rezultate razpoznavanja govora ( Žgank et al. , 2008a ; NIST , 2010 ) .
V prvem koraku ( tabela 3 ) smo ovrednotili vpliv trigramskih jezikovnih modelov na pravilnost razpoznavanja govora .
Teste smo izvedli za oba tipa značilk ( MFCC in PLP ) , saj smo želeli preveriti , ali je v kombinaciji trigramov in različnih tipov značilk prišlo do kakšne spremembe .
Tudi rezultati razpoznavanja utemeljujejo prehod iz bigramskih na trigramske jezikovne modele .
Primerjava obeh tipov značilk je pokazala , da se tudi z uporabo trigramskih jezikovnih modelov ohrani prednost PLP značilk .
Pri sistemih , katerih rezultati so predstavljeni v tabeli 4 , je bil pri izgradnji jezikovnega modela dodatno uporabljen besedilni korpus FidaPLUS .
V verziji JM _ FP1 , je bil korpus FidaPLUS dodan h preostalim trem osnovnim besedilnim korpusom .
V verziji sistema JM _ FP2 pa smo iz učenja jezikovnega modela izločili korpus Večer , saj je ta v veliki meri tako že vsebovan v korpusu FidaPLUS .
Razlog vidimo predvsem v povezavi komponente Večer in načinom izbire besed , ki so v slovarju .
Ker slovar vsebuje pretežno najpogostejše besede korpusa Večer , le-te najuspešneje modelira komponenta Večer interpoliranega modela .
Čeprav je korpus Večer vsebovan v korpusu FidaPLUS , je zaradi obsega korpusa njegov vpliv bistveno bolj oslabljen kot v primeru uporabe ločene komponente , učene izključno na tem besedilnem gradivu .
Z vključitvijo trigramskih jezikovnih modelov in korpusa FidaPLUS smo dosegli 71,1% delež pravilno razpoznanih besed , kar predstavlja absolutno izboljšanje za 5,1% .
Sistem podobne kompleksnosti ( slovar 60k , 8% OOV ) , razvit za češki jezik je dosegel 70,8% delež pravilno razpoznanih besed ( Podversky & Machek , 2005 ) .
Primerjava sistemov UMB BN z dolžino okna izločanja značilk 32 ms in 25 ms je podana v tabeli 5.
Za različne kombinacije tipov značilk ( MFCC , PLP ) , dolžin okna ( 32 ms , 25 ms ) in jezikovnih modelov ( bigrami , trigrami ) smo sicer dobili manjše razlike v rezultatih , ki pa niso statistično signifikantne .
Povečanje števila mel filtrov ( oznaka FB42 v tabeli 6 ) je v sistemu UMB BN poslabšalo rezultat za 0,5% ( bigrami ) oz. 0,3% ( trigrami ) .
Na osnovi analize in primerjave rezultatov s preliminarnimi rezultati na sistemu IVR je možno predpostaviti , da je za poslabšanje rezultatov kriv različen tip govora .
Sistem IVR namreč podpira samo izolirane in vezane besed v telefonskem okolju , sistem UMB BN pa tekoč govor v različnih akustičnih okoljih .
V primeru uporabe samo 8 mel kepstralnih koeficientov ( oznaka 8+1 v tabeli 6 ) je po pričakovanjih prišlo do poslabšanja rezultatov .
Uporaba akustičnih modelov s tako okrnjeno kompleksnostjo je pohitrila delovanje razpoznavalnika govora za cca. 16% v primeru bigramov , ter za cca. 19% v primeru trigramov .
Z uporabo različnih nadgradenj akustičnih in jezikovnih modelov smo uspešno izboljšali rezultate razpoznavanja govora , ter dosegli najvišjo pravilnost razpoznanih besed 71,3% .
V naslednjem koraku razvoja bomo sistemu UMB BN dodali dodatno iteracijo razpoznavanja govora .
Rezultati razpoznavanja govora z interpoliranimi trigramskimi jezikovnimi modeli .
Rezultati razpoznavanja govora z dodanim besedilnim korpusom FidaPLUS .
Rezultati razpoznavanja govora z jezikovnimi modeli JM _ FP1 in različnim tipom značilk ter dolžino okna .
Rezultati razpoznavanja govora z jezikovnimi modeli JM _ FP1 in različnimi konfiguracijami modula za izločanje značilk .
Ta standardizirana in povezana množica jezikovnih virov pokriva veliko število predvsem srednje - in vzhodnoevropskih jezikov in vsebuje ( 1 ) oblikoslovne specifikacije , ki definirajo oznake za opis skladenjskih lastnosti besed , ( 2 ) oblikoslovne leksikone srednje velikosti in ( 3 ) označene vzporedne , primerljive in govorjene korpuse .
Najpomembnejša komponenta je jezikovno označen korpus , ki vsebuje roman " 1984 " G. Orwella v angleškem originalu in prevodih .
MULTEXT-East je doživel že več izdaj , pri čemer je zadnja t.i. verzija 3 , kjer so glavni dodatek viri za srbski jezik .
Čeprav je kompleksnost jezika neodvisna od števila govorcev , industrijski razvijalci jezikovnih in govornih tehnologij zaradi ekonomskega potenciala osredotočajo svoja prizadevanja na velikih jezike , kar na žalost posledično velja tudi za raziskovalno-razvojne programe EU .
Predstavitev bo opremljena s primeri takih neverbalnih govornih segmentov , ki vključujejo smeh in mrmranje , kot tudi pogoste fraze in idiome .
Pokazano bo , kako lahko njihova raznolikost razkrije več vrst podatkov o stanju govorca oziroma poslušalca .
Razumljivost pri telefonskem pogovoru je pomemben kliničen dejavnik , saj predstavlja ključen del pacientove socialne interakcije .
Za izboljšanje govorne terapije po laringektomiji je zaželen objektiven način ocenjevanja razumljivosti nadomestnih glasov pri telefonskem pogovoru .
S sistemom za samodejno razpoznavanje govora ( SRG ) je bilo pregledanih 41 visoko kakovostnih posnetkov pacientov po laringektomiji .
Sistem SRG so učili z normalnim , nepatološkim govorom .
Odstotek pravilno razpoznanih besed je bil 36 , 9 % ± 18 , 0 % ; v primerjavi z ocenami razumljivosti , ki jih je podala skupina strokovnjakov , je imel sistem SRG korelacijski koeficient -,88.
Po znižanju frekvence vzorčenja 41 posnetkov na telefonsko kakovost je sistem SRG dosegel naslednji odstotek pravilno razpoznanih besed : 26 , 4 % ± 13 , 9 % oziroma korelacijski koeficient -,80.
Ti rezultati potrjujejo , da je sistem SRG primeren za objektivno ocenjevanje razumljivosti telefonskega govora .
Predstavljamo govorni korpus MRBA , ki je bil sestavljen za podporo učenju madžarskih sistemov za razpoznavanje govora z velikim besednjakom .
Poleg govornih podatkov je bilo zbrano tudi veliko število zdravniških izvidov za pomoč pri pripravi jezikovnih modelov za omenjeno področje uporabe .
Podatkovna baza vsebuje informacije o predstavah v določenem gledališču ali mestu .
Sistem za dialog je mogoče uporabiti za pridobivanje informacij o predstavah bodisi v govorjeni ali pisni estonščini .
Modul za vodenje dialoga je bil razvit na Univerzi v Tartuju , medtem ko so module za razpoznavanje in sintezo govora dodali na Tehniški univerzi v Talinu .
Razvili smo sistem za samodejno vrednotenje , ki ocenjuje govor na podlagi rezultatov samodejnega razpoznavalnika govora .
Subjektivno vrednotenje razumljivosti , ki sta ga opravila dva strokovnjaka , je bilo soočeno s samodejnim vrednotenjem govora .
Slednje se je ujemalo z oceno razumljivosti strokovnjakov .
Poleg tega predstavljamo rezultate , pridobljene pri kontrolni skupini s 45 posnetki govora otrok brez motenj govora , in jih primerjamo z rezultati posnetkov govora otrok z zajčjo ustnico in volčjim žrelom .
Experimentalni rezultati so dobljeni na podlagi podatkov zveznega telefonskega govora .
Normiranje vokalnega trakta na podlagi lege formantov V prispevku so predstavljeni začetni rezultati novega pristopa k normiranju vokalnega trakta ( NVT ) .
Namesto uporabe postopka NVT v testni fazi je bil končni rezultat razpoznavanja prepoznano zaporedje , ki je bilo ocenjeno kot najbolj verjetno med zaporedji , temelječimi na različnih množicah akustičnih modelov .
Glede na besedno obliko poznamo stalno mesto naglasa , kot npr. v francoščini na zadnjem zlogu , delno omejeno mesto naglasa , kot npr. v hrvaščini , kjer zadnji zlog ni nikoli naglašen , ter prosto mesto naglasa .
Mesto naglasa je določeno za vsako besedo posebej in se ga naučimo hkrati z učenjem jezika in besed .
Slovar izgovarjav , ki vsebuje fonetične prepise besed , vključno z oznakami za naglasno mesto , je nujno potreben jezikovni vir za razvoj jezikovno-tehnoloških izdelkov ter za jezikoslovno študije .
Za slovenski jezik so bili zgrajeni številni slovarji izgovarjav , noben izmed njih pa ne pokriva celotnega besedišča iz Slovarja slovenskega knjižnega jezika .
Seznam osnovnih besednih oblik smo razširili s številnimi pregibnimi oblikami .
Skupaj z Onomastico predstavlja SI-PRON dragocen jezikovni vir za izgradnjo govornih aplikacij .
Vgrajen je bil v sintetizator govora za slovenski jezik , Proteus , prav tako je bil uporabljen za izgradnjo zvočnih podob gesel SSKJ , ki so predstavljene na spletni različici slovarja SSKJ , na strani http://bos.zrc-sazu.si/sskj.html .
Pragmatično označeni korpusi v strojnem simultanem prevajanju govora .
Namen tega prispevka je definirati nekatere pragmatične jezikovne kategorije , ki jih lahko uporabimo kot atribute v pragmatično označenih govornih korpusih , zlasti tistih , ki se uporabljajo pri razvoju sistemov strojnega simultanega prevajanja govora .
Raziskovalci , ki delajo na področju tehnologije strojnega simultanega prevajanja govora , opozarjajo , da je v pogovoru polno elementov , kot so obotavljanja , menjavanje vlog , samopopravljanja , napačni začetki , premori ...
Te značilnosti so problematične za strojno simultano prevajanje govora in zahtevajo ustrezne rešitve .
Preučevanje krivulje učenja statističnega odvisnostnega razčlenjevalnika za štiri jezike Ve čjezično odvisnostno skladenjsko razčlenjevanje postaja v zadnjih letih vse bolj privlačno zaradi vrste razlogov .
Odvisnostno razčlenjevanje je lahko koristen prispevek področjem , kot so luščenje podatkov , strojno prevajanje in sistemi za odgovarjanje na vprašanja .
Poleg tega so skladenjski pari jedro-odvisnica dobri vmesniki med tradicionalno frazno strukturo in pomenskimi vlogami .
Besedne skice v slovenščini .
Prvič so bile uporabljene pri sestavljanju enojezičnega angleškega slovarja založbe Macmillan ( Rundell 2002 ) .
Rezultati kažejo , da besedne skice znatno olajšajo delo leksikografom slovenskega jezika , tako kot se je izkazalo pri angleščini .
To semantično podobnost je mogoče uporabiti pri odvisnostih dolgega dosega , ki so inherenten problem za tradicionalne , na besedah temelječe n-gramske modele .
Primerjava modelov LSA in modelov s predpomnilnikom pokaže tudi , da prvi vsebujejo več semantičnih informacij kot ponavljanje besednih oblik .
Zatorej je optimiziranje priprave , vzdrževanja in širjenja leksikalnih virov ključno pri nalogah procesiranja naravnih jezikov , posebej tistih , povezanih z razumevanjem jezika .
Leksikalni viri so bili zgrajeni z veliko človeškega truda v več letih , zato bi bilo koristno omogočiti njihovo združevanje in tako oblikovati obsežne globalne vire , prav tako pa določiti standardne pristope za delo s tovrstnimi pomenskimi zbirkami .
Upamo , da bo ta razširitev izboljšala metamodel glede vključevanja pomenskih informacij , uporabnih pri pomenski interpretaciji besedila , kot se je to potrdilo pri raziskavi procesiranja oznak pomenskih vlog .
Tvorjenje zaimkov v sistemih povzemanja besedila in odgovarjanja na vprašanja Predstavljen je algoritem za tvorjenje zaimkov kot del sistema povzemanja in odgovarjanja na vprašanja .
Algoritem uporablja LingPipe kot ključno komponento postopka za tvorjenje ustreznega zaimka .
Na koncu so predstavljeni prvi rezultati delovanja sistema na zbirki dokumentov DUC ( Document Understanding Conferences ) .
Za učenje pregibnih paradigem makedonskih besed smo uporabili sistem Clog , ki temelji na induktivnem logičnem programiranju .
Razčlenjevalnik ima zmogljiv jezik za tvorjenje pravil , ki enostavno in učinkovito tvori nabor pravil .
Pomembne značilnosti jezika za tvorjenje pravil so ujemanje ne glede na besedni red , vgrajena podpora referenčnim izrazom , razvrstitev pravil , omejitve in opravilne funkcije .
Na podlagi primera izjave so prikazane prednosti vpeljanih lastnosti .
Povečana kompleksnost procesiranja zaradi zmogljivega jezika za tvorjenje pravil obvladujemo z novim pristop k skladenjski analizi , ki ima zadosten učinek pri naboru pravil , značilnih za sisteme dialoga .
Off-line luščenje odgovorov z uporabo vzorcev je metoda na korpusu temelječega sistema za odgovarjanje na vprašanja , ki se je izkazala za zelo učinkovito .
Z uporabo razrešitve anafore lahko pretvorimo slabo informativne izluščene izraze ( npr. ona je nizozemska kraljica ) v možne odgovore ( npr. Beatrix je nizozemska kraljica ) .
V prispevku predstavljamo novo tehniko za ekstrakcijo deskriptorjev za nepovezana zaporedja v besedilu .
Na podlagi koncepta najpogostejšega zaporedja omogoča ta pristop učinkovitejšo ekstrakcijo kakovostnih deskriptorjev zgoščenega besedila v primerjavi z doslej uporabljanimi tehnikami .
Poleg tega je z njim mogoče obdelovati zbirke dokumentov vseh velikosti , medtem ko drugi pristopi navadno odpovejo pri večjih zbirkah .
Na koncu predstavimo eksperimente , katerih rezultati kažejo prednost predstavljene metode in njeno uporabnost v resničnem življenju .
Pristop , ki ga uporabljamo , je posebej primeren za obdelovanje besedila na podlagi uporabe morfoloških elektronskih slovarjev in tehnologije končnih avtomatov .
Predstavljeni rezultati niso izčrpni ; njihov namen je namreč ponazoritev možnosti .
Ena od teh možnosti je , da tvorjenke , ki so obdelane na predlagani način , lahko uporabljamo zelo podobno kot netvorjene besede .
V članku je predstavljena vloga leksikona kot tudi tesnih povezav med gradniki in funkcijsko zgradbo .
Teoretični modeli so preverjeni z izobraževalno verzijo modela LFG .
članek se osredotoča na rudarjenje po dokumentih , ki opisujejo razmere v določenem območju in delovanje kot posledico tovrstnih razmer .
Pri razvrščanju besedil se ponavadi dobro obnesejo algoritmi strojnega učenja , kot je naivni Bayesov klasifikator .
Opišemo novo metodo , ki temelji na induktivnem logičnem programiranju in daje rezultate z visoko točnostjo in pokritjem .
Metoda je bila uspešno uporabljena pri analizi poročil o poplavah v Srednji Evropi l. 2002.
Sistemi dialoga za dajanje informacij običajno uporabljajo eno od strategij , značilnih za dialog : takšno , ki temelji bodisi na končnih avtomatih , na okvirih ali agentih .
Najnovejše širitve se ukvarjajo s hibridnimi modeli , pri katerih se kombinirata pristopa avtomatov in informacijskega stanja .
Poskus uporabe hierarhičnega razvrščanja v skupine za določanje pomena besed .
Uporabljene tehnike so pred nami uspešno uporabili že številni avtorji in so priljubljene predvsem zato , ker zanje razen besedilnih zbirk posebni jezikovni viri niso potrebni .
Strojno prevajanje iz slovenščine v angleščino s korpusi različnih velikosti in morfo-sintaktičnimi oznakami .
Statistično strojno prevajanje na osnovi besed se kaže kot zelo obetavni pristop na področju strojnega prevajanja .
Težavnost pregibnih jezikov je razpršenost podatkov .
V pričujočem članku analiziramo vplive različnih tipov jezikovnih informacij in različnih velikosti učnih korpusov .
Programsko orodje za polavtomatsko oblikoskladenjsko označevanje in pripisovanje stavčnega poudarka v srbskem jeziku .
V članku je prestavljeno programje za polavtomatsko oblikoskladenjsko označevanje , pripisovanje oblikoslovnih kategorij in mesta naglasa / poudarka besedilom v srbskem jeziku .
Rezultat je bil dosežen s preizkušanjem algoritma na besedilnem korpusu velikosti 36.692 besed , izkazal pa se je za v veliki meri odvisnega od tipa besedil .
V zgoraj omenjenem preizkusu je bila na osnovi avtomatično pripisanih oblikoskladenjskih oznak pri ugotavljanju naglasnega tipa in mesta naglasa pri posamezni besedi dosežena natančnost 97,2 %.
V okviru projekta iTEMA nameravamo razviti aplikacijo računalniško podprte telefonije za telefonski dostop do elektronske pošte .
Namen projekta je omogočiti skupini slepih in slabovidnih oseb ter ostarelim , da preko govornega vmesnika dostopajo do elektronske pošte .
Telefonski bralnik elektronske pošte je zanimiv tudi za individualno in poslovno uporabo , saj omogoča oddaljen dostop do elektronske pošte preko telefona , denimo na poti v službo , na služenem potovanju , ipd.
Podajamo opis arhitekture sistema ter posameznih sistemskih modulov .
Nadalje opisujemo jezikovne vire , ki smo jih uporabili pri izgradnji sistema , ter preskus sistema .
Diskusijo omejujemo na govorne aplikacije .
Obravnavamo predpogoje — učni podatki , označevanje — in najnovejša dognanja v razpoznavanju in sintezi govora , osredotočamo se na uporabnost možnih aplikacij ob upoštevanju omejitev v industrijskih okoljih .
Predlagani akustični model temelji na kontekstno odvisnih trifonskih modelih in na fonetičnih pravilih hrvaškega govora .
Za učenje akustičnih modelov je izbran formalizem prikritih Markovovih modelov in korpus hrvaškega govora .
Članek poda kratek pregled razvoja sistemov samodejnega razpoznavanja govora in samodejnega tvorjenja govora iz besedil za srbski , hrvaški in makedonski jezik na Fakulteti za inženiring Univerze v Novem Sadu .
Sistemi , ki so bili razvit pri tem projektu , omogočajo dvosmerno komunikacijo med človekom in računalnikom .
Tovrstni sistemi so predhodniki mnogih komercialnih storitev , kot so glasovni portali in interaktivni govorni odzivniki .
Ob tem bodo opisani tudi razpoložljivi programski vmesniki ( API ) in vmesniki , ki smo jih razvili za uporabo programskih komponent pri uporabniških aplikacijah .
Pretvarjanje besedila v govor za slovaščino – od sintetizatorjev na osnovi pravil do sintetizatorjev , ki temeljijo na izbiri govornih enot .
Opisane so različne vrste sintetizatorjev , ki so jih od leta 1990 do danes razvili na Oddelku za sintezo in analizo govora Inštituta za informatiko Slovaške akademije znanosti .
Za komercialne aplikacije so dodali nekatere zanimive lastnosti , kot npr. večjezičnost , sintezo pojočega glasu in ilustrativnih zvokov ( akustičnih ikon ) .
V prispevku sta predstavljeni zasnova podatkovne baze za sintezo govora in izkušnja načrtovanja in testiranja Kempelena 2.0.
Cilj tega je preprečevanje združevanja osnovnih govornih enot na problematičnih delih govornega signala in izbor kandidatov za osnovne govorne enote na podlagi fonetičnega konteksta .
V drugem delu procesa izbire se upoštevajo še akustični vidiki .
V prispevku je opisano , kako smo spremenili sistem Nextens v flamsko govorečo aplikacijo .
Tipičen sistem razpoznavanja govora uporablja pri procesiranju za predstavitev govora akustične značilke .
V zadnjem času so se z istim namenom začele uporabljati tudi artikulatorne značilke .
Uporabo leteh je motiviralo jezikoslovno znanje , zato lahko morda omogočajo boljšo ali komplementarno predstavitev govornega signala .
V prispevku predstavljamo raziskavo o tem , kako z metodo podpornih vektorjev ( MPV ) razpoznavamo artikulatorne značilke s tremi vrstami jeder z linearnim jedrom in z dvema polinomskima jedroma .
Kot vhodne podatke za razpoznavalnike uporabljamo standardno množico melodičnih frekvennih kepstralnih koeficientov , razširjenih z vrednostmi formantov in osnovnih period govornega signala .
V članku je predstavljena gradnja slovenskega besedilnega korpusa televizijskih informativnih oddaj SiBN in njegova uporaba pri statističnem jezikovnem modeliranju , namenjenemu samodejnemu razpoznavanju govora .
Zgrajeni so bili trije različni tipi jezikovnih modelov : besedni 4-gramski model , razredni model s statistično pridobljenimi razredi in interpolacijski model , ki je kombinacija prejšnjih dveh .
Jezikovne modele smo primerjali med seboj na podlagi ocenjenih perpleksnosti , ki smo jih pridobili na testnem besedilu ene tretjine in ene desetine celotne zbirke .
Prvi koraki v izdelavi leksikona slovenščine devetnajstega stoletja čedalje več slovenskih historičnih besedil je digitaliziranih in dostopnih na spletu v okviru digitalnih knjižnic , vendar zaenkrat še ni na voljo jezikovnotehnološke podpore za obdelavo , iskanje in branje takšnih gradiv .
Ustrezni leksikalni viri za historično slovenščino bi lahko z omogočanjem popravkov avtomatsko prepoznanega besedila , iskanja po celotnem besedilu in modernizacijo arhaičnega jezika občutno izboljšali tako podporo .
Proces gradnje slovarja se naslanja na korigirani korpus slovenskih knjig 19. stoletja , obsežen leksikon sodobnega slovenskega jezika in orodje , ki omogoča tako preslikavo historičnih oblik v njihove sodobne ustreznice s pomočjo prepisovalnih pravil kot urejevalno okolje za gradnjo slovarja .
Avtomatska izdelava wordneta z uporabo strojnega prevajanja in jezikovnega modeliranja Wordnet velja za enega najbolj uporabnih leksikalnih virov na področju računalniške obdelave naravnega jezika , vendar za makedonščino še ne obstaja .
V prispevku predstavljamo metodo za izdelavo wordneta v izbranem ciljnem jeziku , pri čemer izhajamo iz angleškega Prinecton WordNeta , za generiranje sinsetov pa uporabimo dvojezični slovar , Googlov spletni strojni prevajalnik in iskalnik .
Izdelan wordnet tudi preizkusimo na sistemu za avtomatsko klasifikacijo besedil in s tem preverimo njegovo uporabnost v praksi .
Pri implementaciji izboljšane verzije bomo dodatno upoštevali predvsem informacijo o identiteti ter lokaciji uporabnika , kar v prvotni različici sistema ni bilo upoštevano .
Namen raziskave je analiza razlik v formantni produkciji ( F1 in F2 ) 33 otrok , starih od 5 do 9 let , ki so polnočutni ( 11 otrok ) , naglušni ( 9 otrok , boljše uho = 68 , 53 , SD = 18.90 ) ali gluhi ( 13 otrok , boljše uho = 106.70 , SD = 4.82 ) .
Sedem samoglasnikov slovenskega jezika ( polglasnik smo opustili ) smo analizirali iz zvočnih posnetkov imenovanja ali branja besed artikulacijskega testa .
Rezultati opozarjajo na vlogo slušne povratne zanke za samoglasniško produkcijo .
Aktualnost korpusov v zadnjih dvajsetih letih , njihova široka uporabnost tako za jezikoslovne kot tudi nejezikoslovne študije , novi pristopi k analizam , ki omogočajo širše in globlje razumevanje jezika , so le nekateri od razlogov za označevanje zadnjega desetletja 20. stoletja kot desetletja korpusnega jezikoslovja .
Sodobni korpusi namreč lahko veliko pripomorejo ne le h kultiviranju in razumevanju jezika , ampak tudi k razumevanju in opisovanju sodobne družbe , 2 kot odseva v jeziku .
Korpusi so v jezikoslovno delo vnesli besedilno gradivo , ki je količinsko in kakovostno absolutno preseglo predračunalniške gradivne zbirke , hkrati pa pokazalo na njihove omejitve in izpostavilo pomanjkljivosti .
1 Tipologija korpusov Z razvojem različnih korpusov je nastopila tudi potreba po njihovi tipologizaciji in oblikovanju vsaj osnovnih kriterijev za njihovo vrednotenje .
S tipologijo korpusov , tipologijo besedil in drugimi aktualnimi vprašanji korpusnega jezkoslovja se ukvarja evropska pobuda EAGLES < http://www.ilc.pi.cnr.it/EAGLES/home.html >; njeni dokumenti in priporočila v veliki meri predstavljajo neke vrste standard pri gradnji različnih tipov korpusov.3 Tu opišemo in komentiramo najbolj bistvene tipe korpusov in njihove karakteristike .
So večjega obsega , zanje je glede na tradicijo tudi najnatančneje izdelana metodologija gradnje ; predstavljajo izhodišče za temeljne jezikoslovne raziskave predvsem s področja slovnice in slovarja .
Za njihovo gradnjo se v izhodišču predvideva mreža kriterijev za zajemanje raznoterih besedil v korpuse glede na vrsto predvsem besediloslovnih in sociolingvističnih kriterijev .
Za referenčne korpuse v glavnem niso zanimive prozodične jezikovne lastnosti , ampak le slovnično-leksikalne ; ne gre torej za korpuse , namenjene raziskavi govora , ampak le za zajetje posebnosti govorne komunikacije v referenčnih priročnikih ( Atkins et al. 1992 : 2 ) .
Metodologija gradnje je pri slednjih v veliki meri prekrivna z referenčnimi , za doseganje reprezentativnosti pa so glede na specifiko strokovne komunikacije oblikovani posebni parametri za njihovo uravnoteženost .
V začetku korpusnega pristopa v jezikoslovju sta predvsem zaradi tehnoloških omejitev zaradi izjemne dinamike razvoja strok terminologija in terminografija v veliki meri uporabljali tradicionalne pristope ( Mayer in Mackintosh 1996 : 285 ) , z vzpostavljeno dinamiko gradnje korpusov in njihovega nenehnega nadgrajevanja pa sta postali to področji , ki prav zaradi možnosti hitrega sprotnega opazovanja jezikovnih sprememb vse bolj temeljita na delu s korpusom .
Korpus podjezika pa lahko zajame le specifično govorno situacijo , npr. dialogi med piloti in kontrolorji letenja ( Erjavec 1996 / 97 ) ali npr. poizvedovanja o letaliških informacijah ( Gros 2000 ) .
Korpusi prve generacije , ki so bili z današnjega vidika sorazmerno majhni , so se v težnji po zajemanju čimbolj raznoterih besedil odločali za načelo vzorčenja , tj. enako dolgih fragmentov besedil različnih zvrsti in vrst .
Besediloslovne študije so kasneje z jezikoslovnega vidka opozorile na neustreznost metode , saj besedilo kot fragment v bistvu izgubi status besedila , korpus pa zaradi posebnosti posameznih delov besedila ne zajame nekaterih značilnosti besedilnih vrst .
Z razvojem tehnologije , ki je omogočala zajemanje večjih količin besedil , so tovrstni korpusi postali manj aktualni , z vidika korpusnega jezikoslovja pa ostajajo zanimivi , saj so postavili neke vrste standard za zajemanje raznoterih besedil v korpuse .
Prvo temelji na povečanju korpusa , novo besedilno gradivo se le dodaja , zaradi velike količine jezikovnih podatkov pa naj bi bili parametri za zajemanje besedil bolj ohlapni ( Kennedy 1998 : 61 ) .
Dinamičnost jezika naj bi spremljal neke vrste megakorpus , danes se pri tem govori o velikosti milijarde besed ( Sinclair 1991 : 9 , 25 ) .
Zaradi vse lažjega dostopa do velike količine besedil , nerešenih vprašanj v zvezi z zajemanjem raznoterih besedil v korpuse , tehnologije , s pomočjo katere lahko brez večjih težav iz velikega korpusa pridobimo relevantne podatke , in novih dokazov , kako tudi količina pri korpusih prinaša novo kakovost ( Scott 2000 : 56 ) , se zdi trenutno prvo načelo privlačnejše .
Ideja referenčnega korpusa , prisotna npr. pri snovalcih poljskega korpusa , ki se gradi po načelih angleškega BNC , je sporna , saj predvideva zajetje različnih tipov besedil glede na sociolingvistične raziskave in lastnosti besedil v angleškem prostoru .
V slovenskem prostoru bi med primerljive korpuse lahko uvrstili segmente korpusa , nastale v okviru mednarodnega projekta MultextEast < http://nl.ijs.si/ME/ >, v katerega je vključena tudi slovenščina ( Erjavec 1996 / 97 ) .
Tovrstne korpuse je v osnovi težje graditi , ker je zagotavljanje ustreznih jezikovnih virov zahtevnejše , zato se pri tem velikokrat odpoveduje načelom reprezentativnosti , pri gradnji pa se odloča podobno kot pri korpusih podjezikov samo za segment jezika ( Vintar 2001 : 232 ) ; prav odločitev samo za npr. določeno področje ali določen besedilni tip nam z vidika prevajalstva da tudi boljše ( nerazpršene ) rezultate .
Izhodišče korpusnega pristopa je velika količina jezikovnih podatkov , izražena v številu besed , definiranih zgolj izrazno .
Ob velikosti celotnega korpusa pa je pomembna tudi velikost njegovih komponent , saj ni vseeno , v kakšnem razmerju so posamezni deli korpusa .
Pri referenčnih korpusih so zaenkrat zunaj uveljavljenih razmerij komponent korpusa govorni podkorpusi , ker količina zajetja govora dejansko ne odseva realnosti količine govorne komunikacije glede na pisno .
Morebitne vplive na nerealnost komunikacije je potrebno v korpusu označiti .
Tovrstna " čiščenja " korpusa bi lahko vodila tudi do uničenja dragocenih jezikoslovno relevantnih informacij , popravljanje bi namreč lahko brisalo npr. podatke o distribuciji predponskega obrazila v - / u - ( uliti kalup : vliti v steklenico ) in podatke o razmerju jezikovne rabe do jezikovne norme ali npr. pritisk rabe na poenotenje sklanjatvenega vzorca pri orodniku množine samostalnika otrok .
Enostavnost pri elektronskem zapisu je predvsem z jezikoslovnega vidika nekoliko kontradiktoren pojem , saj je besedilo , vključeno v korpus , na prvi pogled vse prej kot enostavno .
A pomembno je , da oznake , pripisane besedilu v korpusu , nikoli ne motijo prepoznavanja besedila samega , da torej lahko kadarkoli pridemo do neprekinjenega besedilnega niza , golega besedila torej .
Zapis korpusa nam mora hkrati omogočiti , da v besedilu lahko ostane označeno kaj , kar bi se pri vnosu besedila v korpus izgubilo , npr. izpust dela besedila naslov , izpust slike ipd. , torej podatki , ki so z jezikovnega vidika relevantni .
3.1 Predkorpusne besedilne zbirke Kljub temu da začetke dela s korpusi , kot jih poznamo danes , postavljamo v šestdeseta leta prejšnjega stoletja , pa ima jezikoslovno delo , ki temelji na delu z realnimi jezikovnimi podatki , bistveno daljšo tradicijo ( Kennedy 1998 : 13-14 ) .
Načrtno zbrano besedilno gradivo je bilo osnova tako jezikoslovnim kot tudi nejezikoslovnim raziskavam , a so bilo bile tovrste besedilne zbirke , tradicionalno grajene kot ekscerpirano listkovno gradivo , količinsko omejene , velikokrat pa je bil izbor izrazito subjektiven .
Tradicionalno je na realne prodatke prisegala leksikografija , a so tovrstne zbirke v jezikoslovnih raziskavah hkrati uporabljali tudi za vrsto slovničnih jezikovnih opisov , saj so bile v predračunalniškem času najzaneslivejši vir podatkov o določenem jeziku ali segmentu jezika .
Zbirka je bila osnova za izdelavo slovarja , na žalost pa se v času , ko je bila aktualna , ni uporabila za celovit slovnični opis slovenskega jezika .
Korpusu se tovrstne gradivne zbirke najbolj približajo v tistih segmentih , kjer gre za izpise celotnih besedil ali načrtno posameznih zaključenih besedilnih segmentov .
Začetek gradnje korpusa sega v leto 1955 , leta 1959 pa je R. Quirk sestavil načrt zbirke 200 besedilnih vzorcev , ki bi vsak imel približno po 5000 besed , zbirka naj bi predstavljala govorjeno in pisno britansko angleščino ; tako sestavljeni enomilijonski korpus bi bil temelj slovničnega opisa britanske angleščine < http://www.ucl.ac.uk/english-usage/ >.
3.2 Korpusi prve generacije Predračunalniške besedilne zbirke so zahtevale izjemno veliko časa in energije za pripravo , prav tako pa tudi njihova analiza .
S prihodom računalnikov pa se je v drugi polovici 20. stoletja odprla možnost hranjenja velike količnine jezikovnih podatkov in avtomatizacijo njihove analize .
Razvoj informacijske tehnologije je radikalno spremeni možnosti za pridobivanje in hranjenje jezikovnih podatkov tako glede njihove kvantitete kot tudi kvalitete , hkrati pa je prav tako radikalno posegel v postopke njihove analize .
Povečane možnosti za hranjenje velike količine podatkov in njihvo obdelavo so jezikoslovju prinesle možnosti hitrega vpogleda v podatke o jezikovni realnosti , natančnost reprodukcije jezikovnih podatkov pa tudi statistično verodostojnost ( Kennedy 1998 : 5 ) .
Osnovno izhodišče pri gradnji korpusa je bila reprezentativna sinhrona besedilna zbirka pisne ameriške angleščine velikosti milijon besed .
Projekt se je začel l. 1961 , korpus pa je bil zgrajen do leta 1964.
Pri gradnji so ameriški jezikoslovci , predvsem W. N. Francis in H. Kučera , sodelovali z angleškimi , predvsem pobudnikom in glavnim organizatorjem korpusa SEU R. Quirkom in nekaterimi uredniki slovarjev , predvsem P. B. Govom , urednikom Webster's Third International Dictionary ( Kennedy 1998 : 24-27 ) .
Zgradba korpusa Brown Besedilni tip št. besedil odstotek dnevnik tednik I Informativna prozna 374 75,0 A Časopis : reportaže 44 8,8 politika 14 10 4 šport 7 5 2 družba 3 3 0 pomembne novice 9 7 2 finance 4 3 1 kultura 7 5 2 B Časopis : uredniška besedila 27 5,4 ( med ) institucijska 10 7 3 osebna 10 7 3 pisma uredništvu 7 5 2 C Časopis : kritike 17 3,4 Č Religija 17 3,4 knjige 7 periodika 6 traktat 4 D Priročniki , hobiji 36 7,2 knjige periodika E Popularna zgodovina in kultura 48 7,2 knjige 23 periodika 25 F Beletristika , biografije , spomini 75 15,0 G Drugo 20 6,0 vladni dokumenti 24 ustanovitveni akti 2 industrijska poročila 2 šolski katalogi 1 industrijska navodila 1 H Didaktična besedila 80 16,0 naravoslovje 12 medicina 5 matematika 4 družboslovje 14 politika , pravo , izobraževanje 15 humanistika 18 tehnologija 12 II Imaginativna proza 126 25,0 A Splošna 29 5,8 romani 20 kratka proza 9 B Detektivska 24 4,8 romani 20 kratka proza 4 C Znanstvenofantastična 6 1,2 romani 3 kratka proza 3 Č Pustolovska 29 5,8 romani 15 kratka proza 14 D Ljubezenska 29 5,8 romani 14 kratka proza 15 E Humoristična 9 1,8 romani 3 kratka proza 6
Problematike avtorskih pravic se korpus SEU sploh ni zavedal , tako da še danes lahko dostopamo le do polovice korpusnih podatkov , mrežo kriterijev za uvrščanje določenih tipov , kot jih je oblikoval Brown , pa angleški korpusi še danes v veliki meri upoštevajo , kar bomo lepo videli tudi pri angleškem korpusu BNC .
Dobro desetletje po Brownu pa so njegovi sestavljalci ugotovili , da je milijon besed premalo , da bi korpus lahko predstavljal reprezentativno besedilno zbirko ; nekateri v jeziku ne prav pogostni jezikovni elementi in strukture se v tako majhnem korpusu enostavno ne pojavijo .
Velik razvoj tehnologije je omogočal vse lažje oblikovanje korpusov večjega obsega , o katerih se resno začne razmišljati v začetku osemdesetih ( Kennedy 1998 : 28 , 46 ) .
Nekako deset let po prvem večjem korpusnem projektu Brown so tudi na Hrvaškem , konkretno na Zavodu za lingvistiko Filozofske fakultete v Zagrebu , začeli načrtovati gradnjo podobnega korpusa .
Delo je formalno steklo l. 1975 , cilj projekta pa je bila izgradnja milijonskega korpusa sodobnih hrvaških besedil .
Kljub temu da velik del korpusa sestavljajo literarna besedila in tudi zaradi drugih organizacijskih težav manj goste mreže kriterijev za njegovo gradnjo , pa projekt kaže na izjemno odzivnost hrvaškega jezikoslovnega prostora na takrat aktualne pojave v ameriškem in evropskem jezikoslovju.7 Korpus so sredi devetdesetih let prenesli na sodobne elektronske nosilce , tako da je danes dostopen za raziskave hrvaščine tistega časa .
V kolikšni meri je takratna jezikoslovna skupina poznala projekt korpusa Brown , govori tudi dejstvo , da so na Zavodu pripravili tudi neke vrste vzporedni korpus .
Za namene kontrastivnih raziskav so prevedli polovico korpusa Brown , prav na podlagi tega gradiva pa je nastala vrsta kontrastivnih ( srbo ) hrvaško-angleških raziskav < http://www.ffzg.hr/zzl/index.html >.
Ta korpus danes na žalost ni dostopen v elektronski obliki , o izjemni količini zanimimvih jezikovnih podatkov , ki jih je prinesel , pa kažejo iztisi konkordanc celotnega korpusa v arhivu Zavoda .
4.2 Korpusi druge generacije Razvoj tehnologije je prinesel nove možnosti za zajemanje in shranjevanje besedil v osemdesetih , tako da hranjenje velike količine informacij v elektronski obliki ni bilo več problematično , v aktivnosti v zvezi z zbiranjem jezikovnih podatkov pa se je vse bolj vključevala tudi industrija .
Prelomni dogodek pri gradnji enojezičnih korpusov v angleškem prostoru je sodelovanje Univerze v Birminghamu z založniško hišo Collins , kjer se l. 1980 predvsem za leksikografske namene začne graditi obsežen stomilijonski korpus ( Kennedy 1998 : 45-46 ) , danes znan kot The Bank of English .
Uvajanje korpusov v leksikografsko delo je pomenilo pravo revolucijo na tem področju , pri čemer so pionirsko vlogo odigrali slovarji za tujce ( Collins Coubild oz. Harper Collins ) , šele v devetdesetih pa so jim sledili tudi drugi eno - in dvojezični slovarji .
Problem starejših besedilnih zbirk je bil ob hitro razvijajoči se računalniški tehnologiji v veliki meri njihovo zastarevanje .
Prav analiza in klasifikacija jezikov brez pisne tradicije v jezikoslovju narekuje načrtno zbiranje jezikovnih podatkov - ameriško strukturalno jezikoslovje , oprto na delo Bloomfielda , ima korpus ne le za nepogrešljivo praktično orodje , ampak nujno potrebno gradivno osnovo .
Pri tem gre za temeljni premik • od končnega nabora besedil mrtvih jezikov kot edinega gradivnega vira za jezikoslovne raziskave h končnemu naboru besedil živih jezikov , kjer se prvič pojavi vprašanje izbora besedil kot osnove jezikovne analize in • od opazovanja pisnega jezika k opazovanju tudi govornih besedil oz. transkripcije govora.8 Diskusija med predstavniki jezikoslovja , ki temelji na delu z obsežnim načrtno zbranim gradivom , in delom jezikoslovja , ki tovrstne podatke o jeziku zavrača , se zaostri v šestdesetih letih 20. stoletja ob diskusiji s predstavniki tvorbno-pretvorbne slovnice ( Malmkjær 1996 : 74 ) .
Jezikoslovna šola okrog Chomskega je zavračala veliko količino podatkov za osnovo jezikoslovnih raziskav , prvi poskusi gradnje korpusov pa so bili označeni kot " popolna izguba časa " , saj naj bi govorec določenega jezika v desetih minutah ustvaril za jezikoslovce več relevantnega gradiva , kot ga je na voljo v večmilijonskih korpusih ( Biber in Finegan 1991 : 204 ) .
Jezikoslovje , ki je utemeljevalo principe korpusnega jezikoslovja v šestdesetih letih , pa se je v veliki meri organiziralo prav kot jezikoslovni pristop v opoziciji do jezikoslovnega dela Chomskega .
Malmkjær je zavračanje korpusnih podatkov s strani Chomskega na eni in zagovornikov na korpusu temelječega jezikoslovja na drugi strani strnil v naslednje točke ( Malmkjær 1996 : 74-75 ) ; tu jih na kratko tudi komentiramo : • Vprašanje absolutne zadostnosti korpusa ali absolutne zadostnosti intuicije , ki jo predvideva Chomsky , je pravzaprav umetno ustvarjena dilema .
Delo s korpusom res temelji na veliki količini zbranih besedil , ki so podlaga za jezikovno analizo , a se ne odreka intuiciji .
Šestdeseta leta tudi v slovenskem prostoru izpostavijo jezikovne opise , temelječe na načrtno zbranem gradivu , in v slovarskih priročnikih zavrnejo možnost opisa jezikovnih elementov , ki nimajo podlage v jezikovni realnosti : Slovenci smo navajeni , morda bolj kakor drugi narodi , da zaradi narodnostne ogroženosti zelo pazimo , da se v knjižni jezik ne vnaša preveč tujega , oz. tega , česar ne izkazuje literarna tradicija .
Hoteli smo prikazati knjižni jezik v najširšem pomenu besede : živ , poln , z dubletami , notranjimi nasprotji , vzporednimi iztočasnimi normami , jezik sredi zagona in razvoja .
Slovar bo registriral dejansko stanje v jeziku , torej osnove njegove norme , s kvalifikatorji in kvalifikatorskimi pojasnili pa bodo vstavljene v ta okvir posebnosti , dvojnosti in izjeme ( Suhadolnik 1968 : 4-5 ) .
Jezikovni podatki v korpusu ne morejo biti smiselno interpretirani brez interpretativnih zmožnosti raziskovalcev .
Pri uporabi korpusnih podatkov je dragocena tako intuicija rojenih govorcev kot jezikoslovcev .
Že večkrat je bilo opozorjeno na dejstvo , da se pri introspekciji izpraševalci velikokrat srečujejo z odgovorom : " Da , lahko rečem to - a tega nikoli ne bi rekel .
Kritika Chomskega , da korpusni podatki niso jezikoslovno relevantni , saj se nekateri stavki ne bodo pojavili , ker " so povsem očitni , drugi , ker so nepravilni , spet nekateri , ker so nevljudni " ( Kennedy 1998 : 23 ) , kažejo na dva v osnovi res drugačna pristopa v jezikoslovju , povezana v veliki meri z normativnim vrednotenjem jezika , pa tudi vprašanjem stilistične vrednosti besedil oz. dobrega / slabega jezika .
Popolnoma jasno je , da noben korpus ne more vsebovati neskončnega števila slovnično pravilnih ( in komunikacijsko ustreznih ) stavkov .
Korpusno gradivo je v teh okoljih pomenilo pravi razcvet anglistike in v veliki meri pripomoglo k še večji metodološki raznolikosti angleškega jezikoslovja .
Izhodišče rojenega govorca tako v bistvu izključuje velik del današnjega jezikoslovja , ki se ukvarja z analizo neprvega jezika .
V zadnjem času se pri interpretaciji jezikovnih podatkov vse bolj uveljavlja tudi ta vidik , to je vidik jezikovne analize angleščine raziskovalcev , ki jim angleščina ni prvi jezik .
Ravoj uporabnega jezikoslovja je zahteval podatke o jezikovni rabi , in sicer tako rojenih govorcev kot govorcev nekega jezika kot drugega ali tujega jezika .
Posebej je ta segment podatkov o jezikovni rabi relevanten za študije učenja jezika in raziskave nekega jezika kot tujega jezika .
V angleškem okolju je bilo to področje tudi zaradi razvoja v pomembno industrijsko panogo , ki je spodbujala in financirala tovrstne raziskave , že zgodaj izjemno razvit samostojni segment uporabnega jezikoslovja .
Na področju uporabe korpusov je samostojno izoblikovalo tudi metodologijo gradnje korpusov za specifične raziskovalne namene .
Analize napak na podlagi tovrstnih korpusov so podlaga za nove sodobne jezikovne učbenike.10 • Zanašanje na intuicijo je v generativni slovnici privedlo tudi do definiranja idealnega govorca .
Predvsem sociolingvistične raziskave in utemeljitev funkcijskega pristopa v jezikoslovju so pokazale na nevzdržnost takega izhodišča .
Takoj ko je bil v izhodišče postavljen vidik nemonolitnosti jezikovne pojavnosti , je idealni naravni govorec nezadosten , saj njegovo jezikovno vedenje ne more zajeti celotne jezikovne pojavnosti in njene variabilnosti .
• Analize korpusov angleščine so pokazale na vrsto jezikovnih rab , ki bi jih z vidika jezikovne intuicije ( pa tudi z normativističnega gledišča ) označili kot napake .
Zgodilo se je , da je bila posamezna beseda ali zveza že dolgo v splošni rabi , pa je ta ali oni odkril , da gre za kalk ali vsaj paralelo v tujem jeziku , in že je bila obsojena kot germanizem ali romanizem ali izposojenka .
Vse to bo , upamo , pripomoglo k prenehanju preganjanja izoliranih jezikovnih napak in utrdilo zavest o normalnosti govorjenega oz. pisanega jezika povprečnega izobraženca , istočasno pa poglobilo resnično , široko in poglobljeno zanimanje za slovensko besedo v celoti ( Suhadolnik 1968 : 5 , 6 ) .
• Nenazadnje je navezava procesiranja naravnih jezikov kot potencialnega prihodnjega sistema analize in sinteze besedil naravnih jezikov na realne korpusne podatke nujna , zato da bi v končni fazi tovrstne aplikacije res lahko služile realnemu jeziku .
Jezikovni opisi , ki so za jezikovne tehnologije funkcionalni , namreč vsebujejo veliko več podatkov o besedilnem okolju , ki jih omogočajo le obsežni korpusi .
Za jezikovne tehnologije so namreč veliko bolj uporabni opisi , ki kombinirajo klasične opise jezika s statističnimi podatki o besedilnih sopojavitvah .
Če človek lahko jezikovni opis s pomočjo splošnega vedenja o svetu ustrezno interpretira , pa je za računalniško obdelavo potrebno bistveno več podatkov o tipični besedilni umeščenosti jezikovnih enot ( Teubert 1995 : 109-110 ) .
Delo v zvezi s korpusi je danes povezano z različnimi aktivnostmi , med katerimi lahko izpostavimo naslednje : • Raziskave , vezane na gradnjo korpusov ( Kennedy 1998 : 9 ) ; te združujejo tako jezikoslovce kot računalniške strokovnjake , saj je delo na področju oblikovanja korpusa vezano tako na jezikoslovna načela njihove gradnje kot na zagotavljanje ustreznega elektronskega zapisa , ki v nadaljevanju omogoča analizo jezikovnih podatkov .
• Razvoj orodij za delo s korpusom ( Kennedy 1998 : 9 ) ; tovrstno delo je vezano predvsem na področje računalniškega jezikoslovja , danes pa nekateri široko dostopni programi omogočajo tudi računalniško manj izobraženim uporabnikom korpusa samostojen razvoj manj kompliciranih programskih orodij , ki si jih za svoje specifične potrebe lahko oblikujemo sami ( Erjavec 1995 : 41 ) .
• S pojavitvijo večjega števila širši javnosti dostopnih različnih tipov korpusov pa se njihova uporabnost širi predvsem na tradicionalno gradivno usmerjena jezikoslovna področja , kot so besediloslovje , prevodoslovje , sociolingvistika , stilistika ipd. ( McEnery in Wilson 1996 : 98-101 , 111 ) , vendar osnovne analize korpusa ostajajo vezane na področja tradicionalne slovnice in leksikologije , saj je uporaba temeljnih metodoloških pristopov v analizi korpusov , kot je npr. analiza konkordančnega niza , usmerjena prav na tovrstne raziskave in ne omogoča npr. besediloslovnih analiz besedila kot celote ali njegovih večjih sestavnih delov ( Kennedy 1998 : 8 ) , vendar se z označevanjem korpusov z vidika besedilne funkcije ( npr. anaforično-kataforičnih besedilnih elementov ) danes postopoma približujemo tudi tovrstnim raziskavam .
Prav zaradi zavedanja obremenjenosti analiz z obstoječimi jezikoslovnimi koncepti se danes raje govori o korpusu kot viru za preverjanje hipotez na eni in viru za gradnjo hipotez na drugi strani .
Delo s korpusi je usmerjeno izrazito uporabniško , v svoj strokovni diskurz korpusno jezikoslovje tako izrazito vključuje dialog z uporabniki vedenja , ki se ustvarja in posreduje .
Kljub programski odprtosti področja za vse veje jezikoslovja pa je komunikacija s tradicionalnimi jezikoslovnimi šolami in strokovnimi praksami lahko tudi ote ena , še posebej takrat , ko tradicionalni diskurz vrednostno hierarhizira pojavljajoče se nove strokovne diskurze , ki jih narekujejo spremembe v sodobni dru bi .
Ob tem in prav zato si ne dovoljuje sodbe z apriorno vzvišene pozicije enega pogleda , ki svoj tip znanstvenega diskurza ocenjuje kot edino relevantnega , relavantnost dosega znotraj ozkega strokovnega kroga , vse ostale pa hierarhično vrednoti ali jih celo izključuje s področja » pravega « znanstvenega diskurza .
2 Lep primer , kako korpusna analiza lahko odkriva subtilna družbena razmerja , je statistična analiza korpusa srbskega časopisja devetdesetih let ( Vitas in Krstev 2001 ) .
4 Korpus TRANS je nastal pri predmetu Uvod v terminologijo in baze podatkov pod mentorskim vodstvom Špele Vintar na Oddelku za prevajanje in tolmačenje , dostopen je na naslovu < http://nl.ijs.si >.
5 Gre za podobno metodo besedilnega pristopa k jezikovnemu gradivu , kot je bila uporabljena pri popolnih izpisih za SSKJ , žal v njegovem Uvodu besedila , pri katerih se je uporabila metoda popolnega izpisa , niso navedena .
Tudi v 80-ih se je področje računalniške obdelave jezikovnih podatkov v slovenskem prostoru dinamično razvijalo , kar dokazujejo tudi zborniki znanstvenih srečanj s tega področja ( Računalniška obdelava lingvističnih podatkov , 1982 , XXX ...
al 1982 ) , v glavnem pa je področje ostalo zunaj interesa slovenistike , tako da so v celoti pobudo prevzeli računalniški strokovnjaki .
Res je škoda , da v tem času ni prišlo do večje angažiranosti slovenističnega jezikoslovja v smeri jezikovnotehnoloških raziskav , slovenistično jezikoslovje je tako zamudilo enkratno priložnost , da razvije področje jezikovnih tehnologij za slovenščino , saj je bil slovenski prostor z aktualnim stanjem na tem področju res dobro seznanjen .
10 Tudi slovenščina kot drugi / tuji jezik je danes že izoblikovano samostojno raziskovano področje ; tovrstnega besedilnega gradiva je vsekakor dovolj , tuje izkušnje pa kažejo na izjemne učinke korpusnega pristopa tudi pri teh raziskavah , zato bi kazalo o korpusu usvajanja slovenščine na Centru za slovenščino kot drugi / tuji jezik razmišljati čim prej .
Kako dragoceni so tovrstni podatki , kaže že krajša raziskava , narejena na podlagi gradivne sonde jezikovnih testov Centra ( Požgaj Hadži in Ferbežar 2001 ) .
Tomaž Erjavec in Jerneja Gros , Ljubljana , Institut Jožef Stefan , 174 str. II Gradnja korpusov V poglavju iz izhodiščnih premislekov o gradnji korpusov preidemo na opazovanje rešitev pri različnih referenčnih korpusih , na koncu pa predstavimo še standarde za zapis korpusov in njihovo označevanje .
V osnovi bi jih lahko strnili v naslednje sklope ( Atkins et al. 1992 : 2 ) : • specifikacija korpusa in njegova oblika , • strojna in programska oprema , • zajem besedil in označevanje korpusnih dokumentov , • procesiranje zbranega gradiva , • končna oblikovanost korpusa in povratne informacije v zvezi z njim .
V največji meri so jezikoslovni premisleki v zvezi s korpusom povezani s prvo alinejo , torej specifikacijo korpusa in njegovo obliko .
Da bi z gradnjo sploh lahko začeli , je potrebna tehnična podpora , ki mora od samega začetka slediti zahtevam tako glede strojne kot programske opreme ter biti sposobna oblikovati orodja za procesiranje zbranega gradiva .
Prav izkušnje pri korpusih prve generacije , ki vprašanja avtorskih pravic niso zadovoljivo rešile , tako da danes tovrstnih podatkov sploh ni mogoče uporabljati , so korpuse druge generacije prisilile v razmislek ter iskanje ustreznih rešitev .
Pri končni obliki korpusa je smiselno spremljati odzive na rešitve , jih sistematično obdelati in razmisleke v zvezi z gradnjo revidirati ter tako pri njegovi nadgradnji dosegati večjo kakovost ter prijaznost do uporabnikov .
Z jezikoslovnega vidika je pri zajemanju besedil eden od temeljnih premislekov povezan z besedilnimi lastnostmi in njihovim vplivom na odločitev za zajemanje besedil .
Besedilna predpriprava : pripravljen , na podlagi zapiskov , spontano Medij : natisnjen ( knjiga , periodika , obrobna besedila ) , rokopis Besedilna samooznaka : pesem , roman , kratka zgodba ...
Besedilna vrsta in govorni položaj : odprt niz ( jezikovno in kulturno najbolj specifična lastnost ) 1 Stvarnost : stvarna : umetna literatura Besedilni kontekst : izobraževanje , dom , delo , prosti čas ...
S širjenjem računalniških korpusov se je pojavila tudi potreba po vrednotenju in razvrstitvi korpusov .
Z opisom karakteristik , s katerimi lahko korpuse vrednotimo , in z definiranjem zvrsti korpusov , ki jih je med seboj smiselno razlikovati , se je ukvarjala skupina za tipologijo korpusov pri evropski pobudi Eagles - Expert Advisory Group for Language Engineering ( Erjavec 1996/97 : 82 ) .
2 Načela gradnje referenčnih korpusov Britanski nacionalni korpus ( BNC ) < http://info.ox.ac.uk/bnc/ > je zaradi obvladljivega obsega jezikovnih podatkov , ki naj bi hkrati zagotavljali reprezentativnost korpusa , postal v veliki meri zgled za sorodne nacionalne korpuse ; kljub specifikam britanskega prostora ponuja veliko rešitev glede svoje uravnoteženosti .
Korpus velikosti 100 milijonov besed je oblikovan tako , da predstavlja čim širši spekter sodobne britanske angleščine , tako pisne kot govorne .
Znotraj obeh delov korpusa je oblikovana mreža kriterijev , ki zagotavlja čim večjo uravnoteženost glede na regionalnost , razmerje med spoloma , socialno pripadnost tvorcev oziroma govorcev , jezikovnozvrstno in besedilnovrstno pripadnost besedil ipd.
Z novimo lastniško strukturo je v okviru spletnega mesta CollinsWordBanks tako danes na žalost na voljo le izbor iz korpusa The Bank of English® v sorazmerno skromnem obsegu 56 milijonov besed .
Korpusi angleščine se v veliki meri oblikujejo v okviru omenjenih velikih korpusnih projektov .
Založniške hiše , ki uporabljajo BNC , pa za posebne potrebe gradijo še dodatne korpuse in jih povezujejo v korpusna omrežja , kot je to pri Longman Corpus Network ; največkrat gre za dodajanje ameriške in drugih variant nebritanske angleščine .
Okrog gradnje korpusa se v zadnjih desetih letih skuša organizirati tudi ameriško okolje ; v teku je projekt korpusa ameriške angleščine , grajen v veliki meri po zgledu BNC .
V korpus so sicer zajeta različna besedila , od umetnostnih do znanstvenih , izjemna velikost pa gre v največji meri na račun zajemanja besedil nemških časopisov zadnjih let v celoti .
Velika večina besedil je iz časa po l. 1998 , odstotkovna količina besedil glede na leto izida pa z vsakim leto strmo naraste , naječ je tako besedil z letnicama 2001 in 2002 < http://www.ids-mannheim.de/kt/projekte/korpora/arhiv.html >.
V povezavi z Univerzo v Mannheimu nastajajo govorni korpusi nemščine na Univerzi v Freiburgu , kjer sta se oblikovala dva samostojna govorna korpusa s starejšim besedilnim gradivom , freiburški govorni korpus ( 1966-1972 ) in dialoški korpus ( 1974-1977 ) .
Cilj projekta je uravnotežen korpus nemščine velikosti 600 milijonov besed , pri čemer se le za jedrni del korpusa ( 100 milijonov ) predvideva uravnoteženost po podobnih kriterijih kot pri BNC ( Ćavar et al. 2000:112-113 ) .
Projekt je povezan s projektom slovarja sodobne nemščine , pravzaprav prva stopnja tega leksikografskega projekta , a delo napreduje zelo počasi .
Najobsežnejši korpusni projekt v okviru slovanskih jezikov je prav gotovo korpus češkega jezika .
Češki nacionalni korpus predvideva kot celoto sinhrono in diahrono besedilno zbirko tako pisnih kot govornih besedil .
Trenutno je glavnina dela na inštitutu usmerjena k oblikovanju sinhronega referenčnega korpusa češčine obsega 100 milijonov besed ( ČNK 2000 : 10-12 ) .
Pri projektu sodelujejo tri češke univerze , in sicer Karlova univerza v Pragi ( Inštitut teoretične in računalniške lingvistike , Inštitut čeških študij in Oddelek za češki jezik Filozofske fakultete , Inštitut za formalno in uporabno jezikoslovje , Fakulteta za matematiko in fiziko ) , Češka tehniška univerza v Pragi ( Oddelek za računalništvo in inženiring ) in Masarykova univerza v Brnu ( Oddelek za češki jezik Filozofske fakultete , Fakulteta za informacijsko tehnologijo ) ter Češka akademija znanosti < http://ucnk.ff.cuni.cz/ >.
Madžarski nacionalni korpus je nastal v okviru Oddelka za korpusno jezikoslovje na Jezikoslovnem inštitutu Madžarske akademije znanosti v Budimpešti < http://www.corpus.nytud.hu/ >.
Cilj projekta je bil oblikovati korpus sodobnih madžarskih besedil v obsegu 100 milijonov besed , na koncu pa je nastal korpus , velikosti nekaj manj kot 150 milijonov besed ; v glavnem pisnih besedil , vendar tudi s podkorpusom govornih , saj na Inštitutu teče tudi sociolingvistični projekt , v okviru katerega so posneli nad 500 ur govora reprezentativnega vzorca govorcev iz Budimpešte < http://www.nytud.hu/buszi/ >.
Romansko okolje se je pri pripravi referenčnih korpusov organiziralo različno , velikokrat pa je delo na korpusnih projektih zelo razpršeno .
Izstopajo prav gotovo korpusni projekti portugalščine , saj se že od konca osemdesetih let prejšnjega stoletja gradi referenčni korpus portugalskega jezika < http://www.clul.ul.pt/sectores/projecto_crpc.html >, na voljo pa je tudi historični korpus portugalščine , predvsem 16. in 19. stoletja , nastal v okviru projekta AC / DC < http://www.linguateca.pt >.
Obstoječi korpusi vključujejo tako evropsko kot brazilsko portugalščino , da pa bi celovito predstavili slednjo , se je l. 2002 začelo delo na projektu referenčnega korpusa brazilske portugalščine ( Aluísio et .
Eno temeljnih vprašanj korpusnega jezikoslovja je zagotavljanje reprezentativnosti korpusa : kako določiti in uravnotežiti količino raznoterih besedil v korpusu .
Zelo posplošeno povedano bi to pomenilo , da bi reprezentativni vzorec celote govorcev nekega jezika vzeli kot merilo za določitev njihove jezikovne produkcije in recepcije v določenem časovnem obdobju ( Biber et al. 1998 : 247 ) .
Zato se pri gradnji korpusov uporablja stratifikacijski pristop , ki predvideva pregled in neke vrste katalogizacijo besedil določenega jezika z različnih vidikov , kot so jezikovna zvrst , besedila vrsta , prenosnik ipd. ( Biber et al. 1998 : 248 ) .
Prvi še ne elektronski korpus SEU je bil delo angleškega jezikoslovja , tehnološko naprednejše ameriško okolje pa je prispevalo prvi elektronski korpus Brown .
V veliki meri je temu botrovalo uspešno združevanje energij birminghamske jezikoslovne šole okrog J. Sinclairja in založbe Collins Cobuild , po prvih na korpusu temelječih slovarjih pa je gradnja korpusov zaradi interesa založniških hiš v Veliki Britaniji doživela pravi razcvet .
2.1.1 BNC - British National Corpus Britanski nacionalni korpus je bil zgrajen z namenom zagotoviti gradivno podlago sodobne britanske angleščine , je torej enojezikovni korpus .
Na začetku je bil definiran tudi namen korpusa , nekako dvovrstno , in sicer za jezikoslovne potrebe - izdelavo referenčnih priročnikov , različne jezikoslovne raziskave in učenje angleščine - ter za potrebe jezikovnih tehnologij - umetne inteligence , procesiranja naravnih jezikov , govorne tehnologije , iskanje podatkov .
V okviru jezikoslovnih analiz so bila definirana tudi področja raziskav , kjer bo glede na lastnosti tovrstne podatkovne zbirke lahko pridobiti relevantne jezikoslovne informacije : leksematika , pomenoslovje , skladnja , morfologija , ortografija ( DBNC 1994 : 2 ) , vendar z jasnim poudarkom na prvih dveh , ki pa bi jih pravzaprav lahko združili pod pojmom leksikalno pomenoslovje .
Referenčni korpusi se danes glede časovnega zajemanja odločajo zelo različno , velikokrat je to odvisno od sociolingvistične situacije v posameznem prostoru ( npr. katero obdobje že pokrivajo obstoječi referenčni priročniki ) , odločajo pa se tudi glede na dostopnost besedil in urejanje avtorskih pravic v zvezi z njimi .
Statični izsek je fikcija : to ni posebna oblika znanstvenega postopka , ampak njegova pomožna metoda .
Statični korpusi so zavidljivo uravnoteženi , a za izdelavo referenčnih priročnikov premalo aktualni ; angleške založbe , ki sicer uporabljo BNC , si pomagajo s korpusi manjšega obsega , ki vključujejo aktualno besedilno gradivo ( npr. založba Longman s svojimi korpusnimi projekti ) .
Besedila , krajša od 40.000 besed , so bila " zmanjšana " za 10 % , tako da v korpusu le redko naletimo na celotno besedilo .
Vzorčenje je bilo naključno , a naj bi bilo opravljeno tako , da bi upoštevalo besedilne kazalce večjih besedilnih delov ( začetek , konec poglavja ) .
Pri daljših besedilih naj bi bil vzorec sestavljeni , oblikovan tako , da bi se naključno izbralo del besedila na začetku , sredini in na koncu ; neglede na dolžino besedila vzorec ni presegal izhodiščne zamejitve ( DBNC 1994 : 5 ) .
Pri korpusu BNC se glede zastopanosti tipa vzorcev postavlja kar nekaj vprašanj , tudi če zanemarimo izjemno velik del neopredeljenih korpusnih vzorcev .
V zadnjem času je bilo samo načelo vzorčenja že večkrat postavljeno pod vprašaj , saj je besedilo kot celota v svojih delih lahko bistveno drugačno , naključni vzorec pa sploh ne predstavi tipičnih besedilnih lastnosti ( Biber et al. 1998 : 249 ) .
Ker ne obstaja en sam vir z zadovoljivimi informacijami o na novo natisnjenih besedilih , ki bi lahko služil kot merilo za določitev odstotka zajetja določenih besedil v korpusu , so se pri BNC odločili za kombinacijo različnih virov , ki govorijo o besedilni produkciji in posredno ali neposredno o besedilni recepciji tiskanih besedil .
V dodatno pomoč so bili še podatki o vsakoletnih knjižnih nagradah , tako nominiranih kot dejansko nagrajenih knjigah ( DBNC 1994 : 4 , 8 ) .
Število in odstotek besed v korpusu BNC glede na predmetnostno področje
besed % umetnostno ( imaginativno ) 19.664.309 21,91 informativno naravoslovje 3.752.659 4,18 uporabne znanosti 7.369.290 8,21 družboslovje 13.290.441 14,80 svetovna politika 16.507.399 18,39 trgovina 7.118.321 7,93 umetnost 7.253.846 8,08 vera 3.053.672 3,40 prosti čas 9.990.080 11,13 neopredeljeno 1.740.527 1,93
Osnovno razmerje med umetnostnimi in neumetnostnimi besedili tako ni bilo določeno glede na analizirane podatke , ampak je bil njihov odstotek določen vnaprej kot sorazmerni delež umetnostnega besedila glede na njegovo kulturno vlogo .
V končni obliki korpusa je bil delež umetnostnih besedil vseeno nekoliko znižan , a je še vedno nad 20 % , za vsa ostala področja so bili deleži zajemanja besedil določeni glede na podatke iz omenjenih virov za zadnjih dvajset let ( Aston in Burnard 1998 : 29 ) .
Tudi sicer velja , da pri gradnji korpusov to razmerje v glavnem ni pojasnjeno.6
Število in odstotek besed v korpusu BNC glede medij
Med neobjavljena pa sodijo šolski in univerzitetni eseji , neobjavljena besedila kreativnega pisanja , interna obvestila v podjetjih ipd. ( DBNC 1994 : 9 ) .
Ker je področje zakonsko zelo strogo urejeno , besedila v korpus niso vključili , če se z nosilci avtorskih pravic ni dalo dogovoriti , četudi je bilo besedilo za korpus izredno dragoceno ( DBNC 1994 : 9 ) .
Besedilom so bili poleg omenjenih treh uravnoteževalnih lastnosti pripisani še nekateri podatki .
Oznake , ki so bile besedilom pripisane v tej fazi , niso vplivale na sam izbor besedila , so pa pripisane , ker so za različne jezikovne analize lahko relevantne .
Število in odstotek besed v korpusu BNC : ciljna publika glede na starost
Predvsem pri tistih , kjer je odstotek označenih besedil izjemno majhen , kot je to pri starosti avtorjev besedil , se postavlja vprašanje smiselnosti označevanja sploh ; ti podatki na samo uravnoteženost tako ali tako ne vplivajo , za resnejšo jezikoslovno analizo pa na tak način označena besedila tudi niso primerna .
Referenčni korpusi so želeli z vključevanjem transkripcije govora ugotoviti specifiko govorne komunikacije , kot rečeno , glede na namen korpusa predvsem v okviru leksikalnega pomenoslovja , pa tudi širše skladenjske problematike .
Demografski kriteriji so sicer sorazmerno dobro pokrili dialoške situacije , niso pa zajeli komunikacije , ki za povprečnega uporabnika jezika ni značilna , torej tiste , ki je vezana na zožen obseg govorcev , a dosega veliko število naslovnikov , kot npr. medijski in pedagoški govor ( Aston in Burnard 1998 : 31 ) .
Pri starostni skupini pod 15 let so bili k sodelovanju vključeni sodelavci Univerze Bergen , v sklopu katere je tekel projekt COLT - projekt analize jezika najstnikov ( DBNC 1994 : 10-12 ) .
besed % 0-14 265.716 6,30 15-24 668.947 15,88 25-34 847.236 20,11 35-44 839.026 19,92 45-59 956.474 22,71 60+ 633.817 15,05
Tudi tu razmerje ni pojasnjeno .
Vsi , ki so pristali na sodelovanje pri projektu , so bili zaprošeni , da se srečajo s sodelavcem korpusa v časovnem obdobju 2-7 dni .
Pri tovrstnih projektih se vedno postavlja vprašanje avtentičnosti govora .
Da bi jo dosegli , so sodelujočim zagotovili varstvo osebnih podatkov ( ti se v končni fazi korpusa nikjer ne pojavljajo ) , hkrati pa se je snemanja zavedal samo sodelavec korpusa .
Izkušnje so pokazale , da je po krajšem času spoznavanja konverzacija nemoteno stekla ; tudi v primerih , ko so se sodelujoči zavedali snemanja , je bil problem le pri začetnem delu konverzacije , kasneje pa to ni bil več moteči element .
Povprečna dolžina korpusnega prispevka na govorca je bila 7000 besed ( DBNC 1994 : 13 ) .
besed % izobraževanje in informiranje 1.265.318 20,56 poslovna komunikacija 1.321.844 21,47 institucionalni govor 1.345.694 21,86 prosti čas 1.459.419 23,71 neopredeljeno 761.973 12,38 Kategorija " izobraževanje in informiranje " je zajela predavanja in interakcijo v razredu , govore , radijske in televizijske komentarje .
Pri različnih govorih so bili kriteriji različni ; pri predavanjih je veljala nadaljnja vsebinska členjenost po področjih in temah , pri novinarskih komentarjih razmerje med nacionalnimi in regionalnimi mediji , pri interakciji v razredu prav tako regijska pripadnost , starostna skupina in tema .
Vprašanje reprezentativnosti znotraj korpusnega jezikoslovja še ni rešeno .
V. G. ) , da je tipičen in osrednji vidik jezika in zagotavlja dovolj veliko pojavnost posameznih besed in fraz za leksikografe in druge , ki proučujejo jezik ; tako da uporabniki korpusa verjamejo , da imajo dovolj korpusnih dokazov za natančne trditve o obnašanju leksike ( Summers1993:190 ) .
Longman je zavrnil sinhroni pristop , ki sta ga uveljavljala tako takratni korpus Birmingham Collection of English Text , predhodnik BoE , kot tudi BNC , in se odločil za zajemanje besedil v daljšem časovnem obdobju , in sicer za celotno 20. stoletje , pri čemer je večji odstotek starejših besedil umetnostnih kot neumetnostnih , količinsko težišče zajemanja besedil pa je vseeno po l. 1970.
Kot je razvidno iz dokumentacije , je bilo zanje pomembno pokriti predvsem ameriško angleščino ( Summers 1993 : 193 ) , zunaj interesa pa nekako ostaja vse ostalo , v veliki meri predvsem Avstralija in Nova Zelandija .
Če je BNC ob zavedanju , da kršijo količinske kriterije , pridobljene s sociolingvističnimi raziskavami , nekoliko znižal prvotno načrtovani delež umetnostnih besedil , so se pri Longmanu odločili za t. i. diskrecijski odstotek umetnostnih besedil , ki je kar 40 %.
Ne v tolikšni meri zaradi njihovega posebnega kulturnega statusa , ampak predvsem zaradi večje vplivnosti teh besedil na širši krog naslovnikov , najbrž pa v veliki meri zaradi podatkov , povezanih s testi ELT / ESL8 ( Summers 1993 : 192-193 ) , kjer se v okviru gradiv za učenje angleščine in na seznamih priporočenega branja pojavlja veliko umetnostnih besedil .
Longman pa je utrdil idejo korpusa BNC o prenosu težišča uravnoteženosti z vidika jezikovnih zvrsti , kar je bila ideja starega korpusa Brown , na predmetnostno področje .
Prvi je dinamični korpus , velikosti sto milijonov besed , zgrajen deloma po kriterijih korpusa Longman / Lancaster , deloma pisnega dela BNC < http://www.longman.com/dictionaries/corpus/lcawritt.html >, govorni pa je petmilijonski korpus vsakodnevne konverzacije , zgrajen na Kalifornijski univerzi v Santa Barbari < http://www.longman.com/dictionaries/corpus/lcaspoke.html >.
Demografski vzorec zajema govorce glede na etnično in geografsko pripadnost , spol , starost , izobrazbo in poklic ( Wallace et al. 1991:69 , 71 ) .
Korpus usvajanja angleščine predstavlja podatkovno bazo o jeziku v procesu njegovega usvajanja .
Je obsežna zbirka angleških besedil , obsega nad 600 milijonov besed , sestavljena pa je iz : • pisnega korpusa britanske angleščine ( 400 milijonov ) , • govornega korpusa britanske angleščine ( 17 milijonov ) ; pri tem gre za korpus CANCODE , nastal v sodelovanju založbe Cambridge University Press in Univerze v Nottinghamu , • pisnega korpusa akademske britanske angleščine ( 20 milijonov ) , • pisnega korpusa poslovne britanske angleščine ( 30 milijonov ) , • pisnega korpusa ameriške angleščine ( 175 milijonov ) , • govornega korpusa ameriške angleščine ( 22 milijonov ) , • pisnega korpusa akademske ameriške angleščine ( 7 milijonov ) , • pisnega korpusa poslovne britanske angleščine ( 25 milijonov ) , • korpusa usvajanja angleščine ( 20 milijonov ) .
Opazimo lahko , da so pri obeh založbah povezani do neke mere podobni korpusi , torej korpusi britanske in ameriške angleščine ; zaradi specifičnih potreb založb , ki so v veliki meri usmerjene v izdelavo gradiva za učenje angleščine , pa igra pomembno vlogo tudi korpus usvajanja angleščine .
Zelo velik korpus naj bi deloval nekako samoočiščevalno : novo besedilno gradivo naj bi pri statističnih obdelavah podatkov povzročilo , da se ne bi izpostavljali nerelevantni podatki iz starejših besedil , ohranjalo pa bi časovno relevantne ( Váradi 2000 : 2 ) .
S predpostavko , da je za kakovostno analizo jezika s tako obsežnim besediščem in razvejanimi pomeni potreben zelo velik zajem besedil , da bi v njih lahko odkrivali vso pestrost jezikovnih rab .
Tako je verzija korpusa januarja 2002 obsegala 450 milijonov besed , od tega je 20 milijonov transkripcije govora ( CCED 2001 : x ) .
Prav pri tem projektu lahko govorimo o sinhronem korpusu angleščine , ki res udejanja izvorno idejo sinhronosti o nestatičnem opazovanju jezika .
Tudi pri BoE se želi zajeti to , kar ljudje največ " berejo , pišejo , govorijo in slišijo " , osnovna ideja o zajemanju pa je poleg čim večje količine podatkov tudi zajetje čim širšega spektra besedilnih tipov tako pisnih kot govornih besedil .
Danes je besedil v elektronski obliki , še posebej angleških , toliko , da do njih ni težko priti , težava je vseeno njihov izbor ( CCED 2001 : x ) ; kljub temu je osnovna mreža kriterijev zajemanja zelo enostavna .
Zajemanje besedil v BoE Avstralija avstralski časopisi Velika Britanija knjige revije neformalni govor obrobna besedila10 BBC World service Radio Times Today ZDA knjige nacionalni radio obrobna besedila
Nabor uravnoteževalnih parametrov je res zelo okviren , poleg britanske predvideva zajemanje tudi ameriške in avstralske angleščine ; prav po teh parametrih zbrano gradivo se deli v količinsko približno enakovredne podkorpuse .
Seveda se glede na izvirno idejo BoE vključujejo besedila v celoti in ne besedilni vzorci , kot je to pri BNC ( Sinclair 1991:19 ) .
Uporabniki korpusa naj bi na podlagi korpusne dokumentacije ocenjevali samo gradnjo korpusa ločeno od vrednotenja podatkov v njem ; le tako bi se lahko samostojno oblikovala metodologija gradnje korpusov ( Sinclair 1991 : 13 ) .
Na žalost pa prav dokumentacija o korpusu BoE ni dostopna oz. so objavljena le zelo okvirna načela oblikovanja tega korpusa .
Ideja splošnega korpusa je zajeti v jeziku tipično , kar v veliki meri izključuje umetnostna besedila .
Seveda pa so to za določene jezikoslovne raziskave dragocena besedila , zato je priporočljiva gradnja posebnih korpusov za posebne namene ( Sinclair 1991 : 17-18 ) .
Načela gradnje korpusa BoE v razmerju do BNC lahko strnemo v naslednje : • jasna opredelitev za zajemanje časovno aktualnih besedil ; • zajemanje besedil v celoti in ne besedilnih vzorcev ; • sprotno spremljanje jezikovnega razvoja s pomočjo korpusa za razliko od predstavitve zamrznjene podobe jezika v BNC ; • posledično s tem sprotna rast korpusa glede na trenutne zmožnosti zajemanja besedil ; • ohlapnejši kriteriji zajemanja besedil za doseganje uravnoteženosti s težnjo po zajetju aktualnega stanja tudi glede različnih tipov besedil ; • umetnostnostno besedilo brez posebnega statusa s težnjo po zajetju v jeziku najbolj tipičnega .
Cilj projekta je oblikovati referenčni korpus ameriške angleščine , pri katerem naj bi bil po uravnoteženosti jedrni korpus velikosti 100 milijonov besed primerljiv z BNC , dodatno gradivo pa bi povečevalo korpus ne glede na parametre uravnoteženosti ( Ide in Macleod 2001 ) .
Iz tega sledi njegova dvodelnost , tj. glede na celoten korpus sorazmerno manjši jedrni natančno uravnoteženi del in po obsegu večji del , pri katerem uravnoteženost ni več bistvenega pomena .
2.2 Srednjeevropski korpusi Prav zanimivo je , da se je prav v srednjeevropskem prostoru organiziralo jezikoslovje tudi okrog gradnje korpusov ; vsekakor je tu daleč pred vsemi češki prostor s samostojnim inštitutom .
Madžarski nacionalni korpus in Korpus slovenskega jezika FIDA sta nastala oz. nastajata v povsem drugačnih organizacijskih okvirih , a sta se na začetku glede gradnje v marsičem zelo podobno odločala , že kar dolgo pa je ideja nacionalnega korpusa prisotna tudi pri Hrvatih .
Tu nas bo zanimal sinhroni del projekta in načela za njegovo oblikovanje , torej korpus sodobne pisne češčine v obsegu 100 milijonov besed , ki je že oblikovan in poimenovan SYN2000 , ter korpus praškega govora v obsegu nekaj manj kot 700.000 besed ( ČNK 2000:12 ) .
Besedila , ki so ustrezala tema pogojema , bila pa natisnjena v devetdesetih letih , so bila ocenjena kot dovolj aktualna za vključitev v korpus ( ČNK 2000 : 13 ) .
Za odločitev v zvezi z zajemanjem besedil pri ČNK so bili uporabljeni podatki o branju časopisov , revij in knjig ( Opinion Window Prague ) , statistika knjižnične izposoje v letih 1990 , 1993 in 1994 , podatki o strukturi knjižničnega fonda v l. 1994 , raziskave o branju novih knjig v letih 1994 in 1995 , katalog domače periodike Nacionalne knjižnice v Pragi in katalog domačega in zamejskega tiska podjetja Myris Trade ( Šulc 1999 : 61 ) .
% imaginativna 15,00 poezija 0,81 drama 0,21 proza 11,38 stvarna literatura12 2,60 informativna 85,00 publicistika 60,00 strokovna besedila 15,00 vede o umetnosti 3,48 družbene vede 3,67 pravo in varnost 0,82 naravoslovne vede 3,37 tehnika 4,61 ekonomija in navodila 2,27 vera , nabožnost 0,74 življenjski slog 5,55 administracija 0,49
Pri poimenovanjih v zvezi z jezikovno zvrstnostjo in predmetnostnimi področji je pri Čehih kar nekaj kolebanja med tradicionalnimi poimenovanji jezikovnih zvrsti in tistimi , ki so prevzeta iz angleškega okolja za tipe besedil .
Dosledno se govori o imaginativnih besedilih v razmerju do informativnih pri Čermáku ( 1995a ) in Šulcu ( 1999 ) , pri navodilih za uporabo ČNK pa se uporablja tudi tradicionalna poimenovanja , pri imaginativnem se tako pojavi krásná literatura ( ČNK 2000 ) , poimenovanju po mediju časopis ( Šulc 1999 ) pa konkurira jezikovnozvrstno poimenovanje publicistika ( ČNK 2000 ) .
Prav tako je v tej shemi problematično poimenovanje strokovno besedilo , saj se v tem kontekstu pojavljata podkategoriji " vera , nabožnost " in " življenjski slog " , kjer po vsej verjetnosti ne gre za strokovna besedila ; očitno je namreč , da podkategorije niso vezane le na strokovno področje , ampak se mešajo z besedilnimi vrstami in predmetnostnimi področji , saj se pri podkategoriji ekonomija pojavlja še besedilna vrsta navodilo .
Oblikovalci korpusa so se problematike zavedali , saj opozarjajo na to , da se " tematska področja prekrivajo z besedilnimi vrstami in jezikovnimi zvrstmi " ( Šulc 1999 : 61 ) ; križanje tradicionalnega jezikovnozvrstnega modela in pri angleških korpusih utemeljenega modela delitve na predmetnostna področja odpira vprašanja ustrezne tipologije predvsem v okoljih , kjer je v jezikoslovni tradiciji močno zakoreninjen model jezikovne zvrstnosti ; podobno velja tudi za slovenski prostor .
Vsekakor je vprašanje zanimivo , saj kaže , da kljub želji po oblikovanju korpusa , ki bo določil razmerja med besedili na podlagi objektiviziranih podatkov ( Čermák 1997 : 192-193 ) , to pri umetnostnih besedilih lahko tudi odpove .
Zajemanje umetnostnih besedil v večjem obsegu namreč pomeni pri korpusnih podatkih spet izkrivljeno sliko jezikovne realnosti .
Osnova tega dela korpusa je bil raziskovalni projekt Inštituta bohemističnih študij na Filozofski fakulteti Karlove univerze v Pragi ( 1988-1992 in 1992-195 ) , vezan na pogostnostno analizo govorjenega jezika , v nadaljevanju pa tudi opisa govorjene češčine sploh ( Šulc 1999 : 63 ) .
Nadgradnja govornega dela je povezana s sodelovanjem Filozofske fakultete in Fakultete za informatiko Masarykove univerze v Brnu , kjer so po prekrivnih načelih s korpusom praškega govora med l. 1994 in 1999 že zbrali govorjena besedila Brna in njegove okolice .
Oba segmenta ČNK sta za nekomercialne namene dostopna prek interneta ( s podpisom izjave se zavežemo , da bomo korpus uporabljali le v raziskovalne namene ) ; del sinhronega korpusa ( vzorec 10 % korpusa SYN2000 , ki je tudi sam uravnotežen tako kot celotni korpus ) pa je od januarja 2002 skupaj z elektronsko zbirko češkega leposlovja 20. stoletja dostopen tudi na CD-ROM-u .
2.2.2 Slovaški nacionalni korpus Po zgledu češkega korpusa je bil na Slovaškem ustanovljen Oddelek slovaškega korpusa pri jezikoslovnem inštitutu L'udovíta Štúra Slovaške akademije znanosti v Bratislavi < http://korpus.juls.sawba.sk/ > .
V naslednji fazi pa se načrtuje korpus , ki bo zajel slovaščino med l. 1550 in 2005 , korpus pa naj bi v naslednjih par letih narasel na 200 milijonov in bil tudi oblikoskladenjsko označen .
Podobno kot na Češkem je bila tudi tu ustanovljena posebna raziskovalna enota , in sicer Oddelek za korpusno jezikoslovje pri Jezikoslovnem inštitutu Madžarske akademije znanosti ( Váradi 1999 : 57 ) .
Tako kot v Češkem primeru se je tudi na Madžarskem v okviru korpusnega projekta zdužujejo še nekateri drugi projekti ; za korpus je predvsem zanimiv projekt sociolingvističnega intervjuja , ki poteka na omenjenem jezikoslovnem inštitutu .
Rezultat projekta je okrog 600 ur posnetega govora reprezentativnega vzorca 250 govorcev Budimpešte < http://www.nytud.hu/buszi/bsi.htm >; izbor gradiva je oblikovan kot govorni podkorpus Madžarskega nacionalnega korpusa .
Sam korpusni projekt namreč ni dovolj finančno podprt , da bi si lahko privoščil gradnjo obsežnega podkorpusa govorjene madžarščine , je pa pri govoru v prvi fazi začel z zajemom , podobno kot korpus FIDA , transkripcijo parlamentarnih razprav ( Váradi 1999 : 58 ) .
Vprašanja uravnoteženosti se je lotil podobno kot ČNK in slovenski korpus FIDA ; na podlagi dostopnih podatkov o besedilni recepciji in besedilni produkciji je oblikoval razmerja med posameznimi sodobnimi besedili , izhodiščni premislek je predvideval zelo gosto mrežo uravnoteževalnih kriterijev , na koncu pa je ta , podobno kot pri angleškem BoE in s podobnimi argumenti postavljena zelo okvirno ( Váradi 2002 ) .
Začetne težave z zajetjem sodobne madžarske literature , ki jo je bilo za korpusne namene težko pridobiti , je rešil nacionalni projekt objave sodobne madžarske literature na elektronskih nosilcih ; ta je rešil tovrstne težave , hkrati pa si je korpus na področju umetnostnega besedila pridobil zares reprezentativno zbirko besedil .
Družbene spremembe v tem delu Evrope , kar same nekako postavljajo letnico zajemanja besedil v referenčne korpuse , zanimivo pa je , da se pokrivajo tudi z idejo angleškega korpusa BoE , kjer pa je ta odločitev seveda nikakor ni družbeno pogojena ( Tadić 1998 : 338 ) .
Kriteriji prvega in drugega nivoja pri HNK pisna knjige proza publicistika znanost učbeniki priročniki zakoni časopis dnevni nadregionalni regionalni tednik štirinajstdnevniki revije tednik štirinajstdnevnik mesečnik večmesečnik brošure , prospekti korespondenca privatna uradna govorna formalni govorni položaj neformalni govorni položaj
Na drugem nivoju se mešajo različne kategorije , tako da se prekrivajo različni nivoji uravnoteževanja , predvsem gre za nenavadno križanje jezikovnozvrstnih z besedilnovrstnimi .
Najbrž bo korpus na ta način težko uravnotežiti , saj se pojavlja jezikovnozvrstna oznaka publicistika med knjižnimi publikacijami , v nadaljevanju pa se v tem okviru navaja kot besedilna vrsta tudi članek , pri zakonih kot podkategoriji pri knjižnih publikacijah se navajajo Narodne novine ( pri nas Uradni list ) in pravniški časopisi .
% imaginativna 7,7 proza 7,7 informativna 86,6 časopisi 59,0 revije 1,8 knjige 25,8 miscellaneus 5,7
Kakšna bo dokončna odločitev , bo najbrž jasno šele ob končni obliki korpusa ; načrtovano je sicer bilo , da bo delo končano l. 2000 , a zaradi težav s financiranjem projekt že kar nekaj časa stoji .
Pri zajemanju besedil veljajo poleg časovne še nekatere izhodiščne zamejitve , med njimi je na prvem mestu zajemanje besedil samo hrvaških avtorjev in ne prevodov ( Tadić 1998 : 345 ) .
Če se angleško okolje pri BNC odloča za izvorna besedila , je to razumljivo , saj želi predstaviti ekskluzivno britansko angleščino , je odločitev pri neangleških nacionalnih korpusih za izključno neprevodna besedila zelo sporna , saj se velik del predmetnostnega sveta sodobne družbe prevzema prav prek prevodnih besedil ; HNK bo tako izločil velik del hrvaške družbene stvarnosti .
Res bo prikazal tisto , kar se bo prek hrvaškega avtorja vključilo v hrvaški jezik , a pri tem v veliki meri izpustil res aktualna besedila , s katerimi se govorci hrvaščine vsakodnevno srečujejo , četudi jih sami res ne tvorijo .
Kot besedila , ki za korpus niso zanimiva , saj ne nastajajo v realni komunikaciji , pa predvideva literarna besedila ( Tadić 1998 : 345 ) , a se jim pri gradnji korpusa ne odpoveduje v celoti , kot bi lahko sklepali iz izhodiščnih predpostavk .
2.3 Slovenska korpusa V slovenskem prostoru sta trenutno na voljo dva korpusa .
Na drugi strani nastaja korpus Nova beseda na Inštitutu za slovenski jezik Frana Ramovša ZRC SAZU , ki je že presegel 100 milijonov besed < http://bos.zrc-sazu.si/s_beseda.html >.
Oba želita biti ali postati referenčni korpus slovenskega jezika ; kako sta se pri oblikovanju odločala , si natančneje ogledamo v nadaljevanju .
2.3.1 Korpus slovenskega jezika FIDA Korpusno jezikoslovje v izhodišču , kot smo opazili , odpira vrsto novih vprašanj , še preden se sploh lotimo izdelave besedilnih zbirk .
Odprtih vprašanj je toliko , da bi teoretični premislek večine vzel izjemno veliko časa .
Pri korpusu FIDA je padla odločitev za drugo pot ; oblikovati korpus ne glede na v celoti še neizdelana načela njegove gradnje .
Na veliko vprašanj pa je mnogo lažje odgovoriti po tem , ko je korpus že oblikovan , saj izkušnje tako pri gradnji kot tudi pri uporabi korpusnih podatkov v jezikoslovnih raziskavah odgovarjajo na vrsto prej nerešenih vprašanj .
Ker je v glavo korpusnih dokumentov vključen tudi podatek iz Cobissa , je posredno pripisan tudi podatek o jeziku originala .
Zajetje prevodnih besedil v korpusu FIDA glede na jezik originala
Ker v zalogo besedil FIDA , iz katere se je oblikoval korpus , nekatera besedila še vedno pritekajo sprotno z izidom , živi ideja o nadgrajevanju korpusa po zgledu BoE ; trenutno je edina ovira pri postavitvi korpusa FIDA kot dinamičnega korpusa financiranje.13 V naslednjih letih se načrtuje njegova nadgradnja , in sicer tako kakovostna kot količinska ; predvidoma naj bi novi korus z delovnim imenom FIDAplus obsegal okrog 300 milijonov besed .
Govorna sestavina je izjemno pomemben del vsakega referenčnega korpusa , a bi se za govorni del morala oblikovati posebna delovna skupina , ki bi pripravila izhodišča gradnje in postopoma začela z zbiranjem besedil in njihovo pripravo za vključitev v korpus .
Ta je v taksonomiji FIDA " prenosnik " že predvidena , saj elektronski medij pomeni drugačen tip komunikacije s samosvojo obliko in slogom , ki je značilna samo zanjo ( Strehovec 2004 ) .
V okviru korpusnega jezikoslovja še ni enotnega dogovora o statusu elektronskih besedil in njihovem razmerju do obeh tradicionalnih prenosnikov .
Korpus FIDA je predvidel zajemanje tudi elektronskih besedil , torej takih , ki se pojavljajo samo v elektronskem mediju , a je njihov delež zaenkrat zanemarljiv .
V dokumentih evropske pobude EAGLES so podani le predlogi o zajemanju govornih besedil glede na formalnost položaja in glede na doseg naslovnikov v razmerju do pisnih , kot je npr. Sinclairjev predlog , ki ga povzema EAGLES ; prenosniki in govorni položaji so pri tem nanizani glede na predvideno količino v korpus zajetih besedil ( od zgoraj navzdol količina zajetih besedil pada ) .
Korpus FIDA se je pri zajemanju skušal držati tovrstnih priporočil pri zajemanju pisnih besedil .
S to odločitvijo se je nekako izravnalo pri Eaglesu predvideno zajemanje govornih in pisnih besedil , hkrati pa na tem nivoju korpus FIDA tako tudi regionalno uravnoteži zajemanje besedil .
Pri vključevanju umetnostnih je bila že na samem začetka zavrnjena ideja o diskrecijskem odstotku umetnostnega besedila ( Stabej 1998 : 103 ) .
Zajetje besedil glede na zvrst
Danes bi bilo na voljo veliko več podatkov , saj so podatki o knjižnični izposoji zaradi pospešenega uvajanja avtomatske elektronske izposoje lažje dostopni , več je tudi podatkov o vplivu različnih medijev , njihovem dosegu ipd.15 Podatek Mediane je bil relevanten tudi pri zajetju revij .
Na podlagi podatkov o tiskanih medijih , ki izhajajo v Sloveniji , so jih pri Mediani razdelili v predmetnostne sklope , ki pokrivajo več področij ; pri korpusu FIDA smo zbiranje besedil načrtovali prav glede na te podatke , saj se zdi smiselnejše izhajati iz realnega stanja slovenskih tiskanih medijev kot prevzeti model , oblikovan po vzorcu angleškega okolja .
dom / narava / hišni ljubljenci + družina / moški / ženske + glasba / film / radio / televizija + gospodarstvo / finance / podjetništvo + izobraževanje + kulinarika / gostinstvo / turizem / promocija + kultura + mejne znanosti + otroci / mladina + potrošniški časopisi / prodajni katalogi - računalništvo + razvedrilo / enigmatika + religija / duhovna kultura + splošni interesi / aktualni dogodki + šport / avtomobilizem - zdravje +
Ker dogovora z nekaterimi besedilodajalci ni bilo mogoče skleniti , sta ostali dve področji nepokriti ; področje potrošniških časopisov in prodajnih katalogov je glede na doseg vsekakor zanimivo in bi ga bilo nujno potrebno pokriti , saj se s tovrstimi besedili res vsi vsakodnevno srečujemo ; šport in avtomobilizem sicer v veliki meri pokrivajo tudi posebne rubrike v dnevnem časopisju , a bi bilo glede na množičnost medijev , ki pokrivajo samo to področje , v korpusu potrebno zagotoviti tudi zajetje teh .
Tudi sicer je korpus FIDA vztrajal pri zaščiti avtorskih pravic ; z besedilodajalci je bila podpisana pogodba o odstopu besedil za namene korpusa .
Zaradi posebnih jezikovnokulturnih razmer v Sloveniji je vprašanje avtentičnosti besedil še posebej aktualno .
Zaradi specifičnega normativnega vrednotenja besedil , ki se pojavlja pri lektoriranju besedil , 16 je bila besedilom , če je ta podatek obstajal , pripisana informacija o lektoriranju ; podatek o lektoriranju pa ni bil uravnoteževalni kriterij .
Ker je v glavo dokumenta korpusa FIDA vključen tudi zapis Cobiss , je tako posredno vsem besedilom , za katere ta zapis obstaja , pripisana še serija bibliografskih podatkov , spletni iskalnik po korpusu pa omogoča iskanje tudi glede na te podatke .
odbora ipd. ) naslov naslov originala založništvo : kraj založbe , naslov založbe , založnik , leto izdaje izdaja ( podatki o izdaji , podatki po ponatisu ) jezik predloge : jezik besedila , jezik izvirnega dela , jezik posrednega besedila ( ko delo ni prevedeno iz izvirnika ) vrsta gradiva : tiskano , rokopis , računalniški medij ...
bibliografski nivo : analitična raven ( članek , sestavek ) , zaključena publikacija , tekoča publikacija ...
vrsta serijske publikacije : časopis , časnik , revija , ostalo Projekt Korpusa slovenskega jezika FIDA je uspešno združil ustvarjalne energije sodelavcev z različnih področij , ki bi jih bilo tudi v nadaljevanju smiselno obdržati ; pri samem korpusu FIDA pa je v nadaljevanju razmišljati v osnovi v dveh smereh : • Za kakšen korpus se pri nadgradnji korpusa odločiti ?
Drugo načelo je načelo korpusa BoE , ki v izhodišču postavi ohlapne parametre uravnoteženosti , a res dinamično sledi jezikovnemu razvoju .
Ker tehnologija praktično ne predstavlja nobene ovire več , pri jezikoslovnem označevanju pa razlike med stomilijonskim in večstomilijonskim korpusom tudi ni , se zdi trenutno veliko mikavnejša ideja korpusa BoE , tudi zato , ker novejše raziskave kažejo , da dejansko količina daje tudi novo kakovost ; obvladovanje velike količine podatkov pa tehnološko ni več problem .
Odločitev o uravnoteževanju jedrnega dela korpusa za seboj potegne tudi raziskave za doseganje čim večje uravnoteženosti ; v tem okviru bi bilo potrebno s sociolingvističnimi raziskavami predvsem ugotoviti značilnosti slovenskega prostora glede zajemanja različnih besedil .
• Čim prej bi bilo potrebno oblikovati skupino , ki bi začela s pripravami govornega dela korpusa ; tu je potrebno izoblikovati metodološka izhodišča gradnje podkorpusa govora , izhajajoč iz deloma že oblikovanih predvsem za angleški jezik , vendar z nujnim upoštevanjem posebnosti slovenščine , hkrati pa z izdelavo tudi začeti , saj s transkripcijo medijskega govora , za katerega se pri Eagelsu predvideva zajemanje v največjem obsegu , kljub zavedanju problematike transkripcije govora in določitve nabora osnovnih oznak ne bi smelo biti večjih težav.19 Hkrati z gradnjo korpusov pa je potrebno premisliti tudi druga področja jezikovnih tehnologij za slovenščino , ki bi skupaj s korpusi oblikovala sodobno jezikovno infrastruktro za slovenščino .
Velik del jih je vezanih prav na korpus ; gre na eni strani za vprašanja , povezana z jezikoslovnim označevanjem korpusa ( lematizacija , oblikoskladenjsko označevanje ) , na drugi pa z razvojem orodij za jezikoslovno analizo korpusa .
Nadgradnja tega korpusa pa je bistveno obsežnejši korpus Nova beseda < http://bos.zrc-sazu.si/s_beseda.html >.
Ideja korpusa je postati referenčni korpus slovenskega jezika , zato lahko predpostavljamo , da bo v naslednjih korakih gradil predvem na uravnoteževalnih kriterijih za dosego reprezentativnosti .
Trenutno je Nova beseda sestavljena iz nekaj večjih zaključenih celot ( stanje april 2004 ) : • slovensko leposlovje ( 5,6 milijona besed ) • slovensko polleposlovje ( 1 milijon ) • znanstvene in tehnične publikacije ( 1,6 milijona ) • dnevnik Delo ( 88,5 milijona besed ) • računalniška revija Monitor ( 3,2 milijona ) • revija Viva ( 0,5 milijona ) Posamezni segmenti bi se postopoma lahko kot neke vrste podkorpusi z dodajanjem novih segmentov povezali v korpusno celoto .
Glede načel gradnje je popolna kopija BNC < http://www.uni.lodz.pl/pelcra/corpora.htm >, kar je izpostavljeno celo kot njegova prednost .
Zajemanje različnih besedil pri BNC je rezultat angleške družbene stvarnosti , tako razmerja med besedili , kot jih določa BNC , s poljščino nimajo prav nikakršne povezave .
Trenutno je korpus velikosti 50 milijonov besed , v nasprotju z drugimi referenčnimi korpusi pa je zanimiva izhodiščna uredniška odločitev , da večinoma zajame leposlovje , in sicer zaradi tradicije poljskega jezikoslovja , ki avtorja umetnostnega besedila definira kot " kulturno avtoriteto , ki je kriterij jezikovne pravilnosti " < http://korpus.pwn.pl/ >.
Več manjših korpusov ruščine nastaja na različnih koncih sveta , med njimi sta najbolj znana korpusa na Univerzi Uppsala < http://www.slavistika.uu.se/ingrid/korpus.htm > in na Univerzi v Tübingenu < http://www.sfb441.uni-tuebingen.de/b1/en/korpora.html >.
Vendar se tudi ta načrtuje ; gre za nadaljevanje tradicije ruskega prostora , ki je že v osemdesetih letih prejšnjega stoletja sledil aktualnim težnjam pri gradnji korpusov z ne v celoti realiziranim projektom elektronskega nabora ruskih besedil .
Načrtovani projekt se v veliki meri zgleduje po korpusu BNC ( Staroff 2003 : 680 ) , hkrati pa se tudi preizkušajo postopki označevanja in testirajo orodja za korpusno analizo < http://corpora.vandex.ru >.
3 Označevanje korpusa V poglavju bomo najprej na kratko predstavili standarde za zapis korpusov , ki omogočajo enovite in trajne načine za pripisovanje različnih oznak besedilom v korpusu ; prav slednjemu se bomo natančneje posvetili v drugem delu poglavja , ko bomo razpravljali o različnih nivojih jezikoslovnega označevanja korpusa in o dilemah , ki se ob tem pojavljajo .
3.1 Zapis korpusa Da bi zagotovili predvsem trajnost in izmenljivost jezikovnih podatkov , so se že kmalu po nastanku prvih obsežnejših jezikovnih virov začele pojavljati pobude za standardizacijo njihovega zapisa .
Standard SGML danes predvsem zaradi večje enostavnosti vse bolj nadomešča XML .
Rešitev , ki jo je izdelal konzorcij za svetovni splet W3C ( World Wide Web Consortium ) , je bila podmnožica SGML , ki ohranja dobre lastnosti standarda , vendar pa izpusti elemente , ki vnašajo pretirano kompleksnost .
Za razliko od SGML je XML postal izjemno popularen in dejansko postaja univerzalni medij zapisa jezikovnih podatkov .
Priporočila TEI so bila načrtno oblikovana za pripravo elektronskih zbirk , tako za besedilne kot tudi nebesedilne , npr. leksikografske in terminografske , podatkovne zbirke .
Glava besedila korpusa Fida Krepko so poudarjeni deli glave besedila , ki označujejo različne ravni posegov v besedilo .
ID = 79227648 LN = 0000391359 M V10 02.11.1998 NUK::IRENA _ K < / p > < p > Updated : 02.02.1999 PEFMB::ZINKA Copied : 02.02.1999 < / p > < p > 001 an - novi zapis ba - tekstovno gradivo - tiskano cm - zaklju & ccaron ; ena < / p > < p > publikacija d0 - ni hierarhi & ccaron ; nega odnosa t2.02 - Strokovna < / p > < p > monografija < / p > < p > 010 a86-341-2223-9 < / p > < p > 021 asvn - Slovenija b9807086 < / p > < p > 100 c1998 hslv - slovenski bd - monografska publikacija , zaklju & ccaron ; ena < / p > < p > ek - odrasli , zahtevni ( neleposlovje ) < / p > < p > 1010 aslv - slovenski < / p > < p > 102 asvn - Slovenija < / p > < p > 105 aa - ilustracije gb - osebna biografija < / p > < p > 2000 aRudolf Maister , general in pesnik fBruno Hartman g [ & ccaron ; rnobele in < / p > < p > barvne posnetke je prispeval Bojan Nedok ] < / p > < p > 210 aLjubljana cDZS d1998 e [ Ljubljana ] gMladinska knjiga < / p > < p > 215 a132 str. cilustr .
% ONE-TEXT [ < langUsage > & FIDAlangusage ; < / langUsage > ]]> < textClass > < catRef target = " Ft.P.P.O.K " > < catRef target = " Ft.Z.N.S.H " > < catRef target = " Ft.L.N " > < / textClass > < / profileDesc > < revisionDesc > < change > < date value = " 2000-06-02 " > 2000-06-02 < / date > < respStmt > < name > JZ < / name > < resp > Segmentacija swc < / resp > < / respStmt > < item > OZNSWC v0.564 < / item > < / change > < change > < date value = " 2001-06-06 " > 2001-06-06 < / date > < respStmt > < name > ET < / name > < resp > Zapis SGML < / resp > < / respStmt > < item > Patch FName , ID , XML , C-TYPE < / item > < / change > < / revisionDesc > < / teiHeader >
V glavi so podatki , povezani z dokumentiranostjo besedila , telo dokumenta pa je besedilo samo .
Vsak dokument v formatu SGML se začne ( in konča ) z elementom , s katerim je določen temeljni tip dokumenta ( document type ) , gre za izhodiščni element ( root element ) , npr. < korpus > < / korpus > ali < slovar > < / slovar > .
< / encodingDesc > < profileDesc > .
< / tei.2 > < !
Korpus kot celota ima osnovne podatke o korpusu dokumentirane v glavi korpusa , posamezen korpusni dokument , vključen vanj , pa svojo dokumentacijo v svoji glavi , z oznako TEI < teiHeader > .
V tem korpusnem elementu so štiri vrhnje oznake : ( a ) opis dokumenta samega < fileDesc > s podatki o korpusu oz. besedilu , vključno z bibliografskimi podatki , ( b ) opis zapisa < encodingDesc > z opisom oznak , uporabljenih v korpusu oz. besedilu ; tu je podano , katere in kolikokrat se posamezne oznake v besedilu uporabijo in v primeru , da so dodatno definirane glede na nadrejeno dokumentacijo , kaj pomenijo ; v glavi celotnega korpusa je tudi definirana taksonomija korpusa FIDA ; ( c ) oznaka < profileDesc > podaja nebibliografske podatke o besedilu : tu so v glavi korpusa FIDA definirani identifikatorji jezikov , v glavi besedil pa , kam spada besedilo v taksonomiji korpusa FIDA ; ( č ) opis sprememb < revisionDesc > , kjer so dokumentirane vse spremembe v korpusu oz. besedilu ( Erjavec et al. 1998 : 126 ) .
Korpus je sestavljen iz serije dokumentov , ki niso nujno prekrivni z besedilom , saj korpusni dokument sestavljajo lahko vsa besedila enega izvoda časopisa , ena številka revije , zbirka pesmi ipd. ( Atkins et al. 1992 : 2).24 Ker se oznake v korpusu nanašajo na celotni korpusni dokument , je potrebno to pri predvidenih oznakah upoštevati , saj je npr. odločitev za jezikovnozvrstno oznako publicistika zato lahko popolnoma zavajujoča .
3.2.1 Poenotenje zapisa Čeprav se zdi postopek poenotenja elektronskega zapisa trivialen , pa lahko že poenotenje zapisa včasih predstavlja nepredvidene težave .
Prepletanje različnih formatov , različnih kodnih tabel , ustvarjanje besedil z različnimi programi , z različnimi verzijami istega programa v različnih operacijskih sistemih ...
Ker je že pri tokenizaciji potrebo ugotoviti , ali so ločila končna , je prepoznavanje segmentnih mej enostavnejše , čeprav pri različnih tipih besedil ne vedno popolnoma rutinsko .
Kljub temu da se zdi dilema o označevanju ali neoznačevanju korpusa umetno ustvarjena , saj zavedanje metajezikovnosti oznak to razmerje pravzaprav briše , pa pripomore k uzaveščanju dejstva , da jezikoslovne oznake prav nič ne govorijo o realnosti in avtentičnosti korpusnih podatkov ( Leech 1997a : 4 ) .
Da pa bi se izognili morebitnim napačnim interpretacijam jezikoslovnih oznak , je pri tovrstnem označevanju potrebno zagotoviti vsaj naslednje ( Leech 1997a : 6-7 ; McEnery in Wilson 1996 : 25-26 ) : • Vedno mora biti mogoča vrnitev v prvotno stanje , obstajati mora torej možnost , da iz označenega korpusa dobimo nazaj surovi korpus , kar nam omogoča , da isti korpus lahko označimo popolnoma na novo .
• Uporabnik korpusa mora imeti dostop do dokumentacije , ki vsebuje podatke o ( a ) naboru oznak , ki so bile uporabljene , ( b ) načinu , po katerem je bil korpus označen , saj ni vseeno , ali je korpus označen ročno ali avtomatsko ; predvsem avtomatsko označevanje , ki je za velike korpuse edino zares sprejemljivo , namreč prinaša s seboj vrsto napak in dvoumosti , ki se jih moramo pri analizi zavedati .
• Jasno je , da je označevanje le priročno sredstvo , ne pa zlato pravilo , ki pripiše jezikovnim podatkom enkrat za vselej status absolutne jezikovne resnice ; zavedanje tega dejstva bo seveda približalo korpus enemu od osnovnih namenov , tj. iskanju novih jezikovnih pojavnosti ; od vsakega , ki korpus analizira , pa se pričakuje , da zna tovrstne podatke v korpusu izrabiti sebi v prid in si olajšati analizo , lahko pa jih pri analizi tudi popolnoma zanemari .
• Nobena jezikoslovna načela označevanja ne morejo biti postavljena kot standard ; služijo naj praktičnim potrebam pri označevanju in ne razvijanju jezikovnoteoretičnih modelov ; to je še posebej pomembno pri avtomatskem označevanju , kjer je potrebno pristopiti izrazito pragmatično in s postopnimi koraki sisteme označevanja dopolnjevati .
Danes je večina korpusov tako ali drugače jezikoslovno označenih ; tip označevanja je odvisen predvsem od namena določenega korpusa .
Referenčni korpusi so v glavnem oblikoskladenjsko označeni , zahtevnejši tipi označevanja pa so trenutno vezani na korpuse manjšega obsega .
V okviru korpusnega jezikoslovja ta tip označevanja dolgo ni bil posebej aktualen , saj za angleščino velja , da je zaradi izjemno majhne oblikoslovne variantnosti postopek nekako redundanten ( Leech 1997a : 15 ) , toliko bolj pa je pomemben za jezike z bogato morfologijo .
Tako kot to velja za vse postopke označevanja , je tudi lematizacija lahko ročna ali avtomatska , za večje korpuse je seveda aktualna le druga ; to pa je zaradi pogoste homografije25 zelo kompleksen postopek , zato za slovenščino velja , da besede v korpusu sicer lahko lematiziramo razmeroma natančno , a v splošnem dvoumno , npr. z uporabo oblikoslovnega leksikona ( Džeroski in Erjavec 2000 : 14 ) .
Pri korpusu FIDA je bil za lematizacijo na njenem začetku uporabljen leksikon z 42.000 oblikoslovno opisanimi osnovnimi oblikami besed , iz katerih je bilo generiranih 1.500.000 različnih oblik .
Leksikon se na podlagi korpusnih podatkov sprotno dopolnjuje ; iz abecedno in pogostnostno urejenega spiska besed , ki jih leksikon še ne pozna , se izbira najpogostnejše , po pravopisni in slovarski preverbi pa se jih prek posebej prirejenega programskega okolja vnese v leksikon , ki omogoča generiranje vseh pojavnih oblik izhodiščne besede ( Romih 1998 : 30-31).26
3.3.2 Oblikoskladenjsko označevanje Oblikoskladenjsko označevanje27 je bilo , kot smo to že omenili , aktualno že na samem začetku gradnje korpusov .
Že predračunalniški korpus SEU je postavil neke vrste standard tovrstnega označevanja za angleščino , ideja , da bi bil prvi računalniški korpus Brown tudi jezikoslovno označen , je bila živa takoj po nastanku , prvi projekt morfološkega označevanja korpusa Brown pa je potekal med letoma 1970 in 1978 ; korpus je tudi kasneje služil za preizkušanje različnih modelov označevanja in na tem temelječe kvantitativne analize.28 Težnja po čim bolj natančnem avtomatskem morfološkem označevanju je računalniške jezikoslovce zaposlovala več kot dve desetletji , tako je danes razmeroma uspešnih programov za avtomatsko morfološko označevanje angleščine kar nekaj ( Leech 1997b : 20-24 ; Kennedy 1998 : 212-224 ) .
Osnovna funkcija tovrstnega avtomatskega označevalnika je besedam v besedilu pripisati njihovo pravilno kontekstno odvisno morfološko oznako ; problemi so podobni kot pri lematizaciji , avtomatski označevalniki pa se jih lotevajo na različne načine .
V slovenskem prostoru je znanih kar nekaj poskusov označevanja ( Jakopin in Bizjak 1997 ; Romih 1998 ; Zupan 1999 ; Džeroski in Erjavec 2000 ) ; zanimivo bi jih bilo enkrat vse preizkusiti na obsežnejšem korpusu in primerjati rezultate.29 Avtomatsko oblikoskladenjsko označevanje , ki je bilo uporabljeno pri korpusu FIDA , je problematično .
Oblikoskladenjske oznake so besedam sicer pripisane z veliko natančnostjo , a dvoumno , kar pomeni , da je zaradi prekrivnosti oblik različnih morfosintaktičnih kategorij besedam pripisano več nizov variantnih oznak , ne pa le tisti , ki je kontekstualno aktualen .
Del označenega besedila iz korpusa FIDA Zaradi lažje orientacije so v zgledu krepko tiskani deli telesa korpusa , ki so golo besedilo .
Razlago oblikoskladenjskih oznak korpusa FIDA lahko najdemo tako pri dostopu do korpusa na spletnem naslovu < http://www.fida.net > kot tudi v posebnem dokumentu na naslovu < http://nl.ijs.si/et/project/Fida/tag/msd-sl/msd-sl/ >; tu za zgled navajamo tiste , ki se pripisujejo samostalnikom , primerjamo jih tudi z oznakami , ki jih predvidevajo pri oblikoskladenjskem označevanju na Inštitutu za slovenski jezik ZRC SAZU ( Jakopin in Bizjak 1997 : 515-519 ) .
Alternativni model je predlog , ki je nastal v okviru priprav za gradnjo Slovenskega nacionalnega korpusa ( Jakopin in Bizjak 1997 ) .
Omenjene pomanjkljivosti so popolnoma tehnične in prav nič vsebinske , sprememba poimenovanj in šifer ali tip zapisa pa povsem trivialen ; pri korpusu FIDA so tako uporabljena slovenska poimenovanja , njim pa sledijo tudi šifre .
Ker v bistvu ne gre za vsebinsko oporekanje oznakam MULTEXT-East , tako med enimi in drugimi glede pripisovanja kategorialnih lastnosti samostalnika ni večjih razlik :
Primerjava morfoloških oznak za samostalnik pri MULTEXT-East / FIDA ter na Inštitutu za slovenski jezik ZRC SAZU
vrsta občno ime , lastno ime samostalnik , glagolnik , osebna imena , imena prebivalcev , veroslovna imena , živalska imena , zemljepisna imena , mitološka imena , stvarna imena spol m , ž , s m , ž , s število e , m , d e , d , p31 sklon i , r , d , t , m , o 1 , 2 , 3 , 4 , 5 , 6 živost n , d -
Ločevanje med občnimi in lastnimi imeni je pomembno , ker lematizacija briše podatek o veliki začetnici in tako posredno velikokrat tudi podatek o lastnoimenskosti .
Podatek je vsekakor zanimiv , a pri naboru oblikoskladenjskih oznak nekoliko nenavaden , saj bi bilo za jezikoslovno analizo korpusa veliko relevantnejše pripisovanje kategorialne lastnosti števnosti , pri tistih brez oznake števnosti pa snovno , pojmovno in skupno , ki bi bilo za leksikografsko delo veliko relevantnejše .
Prav tako je nenavadna tudi trditev , da so se precejšnje težave pri označevanju pojavile pri večbesednih lastnih imenih ( Jakopin in Bizjak 1997 : 518 ) .
Pri oznakah MULTEXT-East / FIDA je predvideno tudi označevanje kategorialne lastnosti živo , na drugi strani pa se kategorijo izpušča , " ker jo lahko dobimo iz slovarja besed in njihovih pregibnih skupin " ( Jakopin in Bizjak 1997 : 518 ) .
Prav tako je tudi kategorija spola slovarska kategorialna lastnost ( Vidovič Muha 2000 : 33 ) in jo prav tako lahko dobimo iz slovarja besed .
Odločitev je popolnoma legitimna , a se zaradi odločitve po širjenju oznak na ravni lastnoimenskosti zdi nenavadna , saj nam oznaka pri korpusni analizi lahko izloča sicer predvidljiv , a za laksikalno analizo vsekakor zanimiv del besedišča .
Čeprav se zavedamo , da je oseba kategorialna lastnost samostalnika , neposredno vezana le na 1. in 2. osebo , 3. pa je vse , kar ni 1. in 2. , torej sem sodi vsa občnoimenskost ( Vidovič Muha 2000 : 33 ) , se prav iz tega razloga , pa tudi zaradi samega dejstva , da se morfemsko izraža v glagolski zvezi , ta lastnost pripisuje pri glagolu .
3.3.3 Skladenjsko označevanje Zdi se , da so najdlje med morfološko bogatimi jeziki prišli na Češkem , naredili so še korak naprej , in sicer v smer skladenjskega oz. pomenskoskladenjskega označevanja .
Spodbujeni s tovrstnim označevanjem korpusa Penn Treebank tovrstno označevanje razvijajo pri projektu korpusa Prague Dependency Treebank ( PDT ) .
Postopek označevanja je trinivojski .
Pri zadnjem nivoju označevanja so postopoma prešli iz manjšega na večji nabor oznak , tako da danes poleg udeleženjskih vlog ( vršilec , prizadeti , naslovnik ) , različnih tipov okoliščin in modifikacij , kar bi seveda pričakovali pod imenom tektogramatični , označujejo tudi členitev po aktualnosti , torej tematsko-rematsko strukturo ; skupaj tako na tem nivoju pripisujejo nad 40 različnih oznak ( Böhmová in Hajičová 1999 ) .
Seveda tako označevanje omogoča vrsto zanimivih jezikoslovnih analiz , v velikem delu korpusnega jezikoslovja pa so do tovrstnega označevanja skeptični , saj ponavadi tako označeni korpusi le potrjujejo izhodiščno jezikoslovno teorijo ; zapleteni modeli namreč vzamejo izjemno veliko časa , hkrati pa ne omogočajo odkrivanja zares novega , največji možni domet je namreč potrditev teoretičnih izhodišč oz. morebitna njihova dopolnitev .
Pri korpusih govora je zanimivo označevanje na fonetično-fonološki ravni ; tovrstni opisi so še kako pomembni pri analizi in sintezi govora ( Gros 2000 ) , vsekakor pa bi bili pri sodobnih fonetično-fonoloških študijah že manjši bogato označeni korpusi lahko v veliko pomoč .
V zadnjem času je bilo veliko energije vložene v še eno področje označevanja , tj. besediloslovno , predvsem na področju slovnične kohezije .
Identifikacija jezikovnih elementov , ki vzpostavljajo kohezivne vezi , vsaj v osnovi niti ni tako zelo zapletena , določanje tipa referenčnosti , identifikacija besedilnega nanosnika in nanašalnice ter usmerjenosti besedilnih vezi pa zahteva zelo kompleksne označevalske postopke , ki pa so vse bolj uspešni ( Gerside et .
Tovrstna označevanja postopoma omogočajo tudi vse večjo prisotnost korpusov na tradicionalno besedilno usmerjenih področjih , npr. besedilosovju , teoriji diskurza , sociolingvistiki ipd.
2 Kot kažejo tuje izkušnje , akademske ustanove niso prav perspektivno okolje za korpusne projekte , velikokrat se delo v okviru akademskih projektov zaradi njihove dolgoročne naravnanosti zelo zavleče , kar povzroči hitro neaktualnost korpusa .
Kot razlog za dolgotrajnost postopkov se kljub stalno zaposlenim sodelavcem na korpusnih projektih nenehno navaja pomanjkanje sredstev .
3 Količinski podatki v različnih dokumentih in publikacijah o BNC precej variirajo ; v vseh preglednicah so navedeni s spletne strani BNC < http://www.hcu.ox.ac.uk/BNC/what/balance.html >, ki je bila nazadnje obnovljena 29. 2. 2000.
4 Navedba , da so korpusi devetdesetih let praviloma stokrat večji kot korpus Brown , " še vedno pa sestavljeni iz odlomkov " ( Jakopin 2001 : 412 ) , enostavno ne drži .
6 Izjema je danski korpus , ki je kriterije zajemanja glede na obtežitev podatkov z vidika recepcije in produkcije razmejil 88 % : 11 % , a pri tem vseeno ni pojasnil razlogov za tako odločitev ( Čermák 1997 : 192 ) .
Korpus je sestavljen iz po 500 besedilnih vzorcev velikosti 2000 besed , zajeta pa so besedila po l. 1990 ( Greenbaum 1991 : 83 ) .
10 V kategorijo sodijo različna besedila , ki niso formalno objavljena , pri katerih ne gre za bibliotečne registrirana besedila , od npr. oglasnih sporočil , letnih in drugih poročil , obvestil za javnost pa vse do npr. besedil na avtobusnih vozovnicah .
11 Pri tem gre najbrž za korpuse različnih strokovnih jezikov in ne terminološke podatkovne zbirke , ki niso besedilni korpusi ; do takega poimenovanja je lahko prišlo tudi pod vplivom tipologij korpusov v angleškem okolju ( Atkins et al. 1992 : 6 ) ; danes uveljavljena tipologija Eagles je poimenovanje popravila .
Na sploh se v prevodoslovju ne upošteva ustaljene tipologije korpusov v okviru korpusnega jezikoslovja ( Hirci 1998 : 115 ) , tako da se tudi tu , podobno kot pri besediloslovju , ne moremo izogniti občutku , da se prevodoslovje skuša kot samostojno jezikoslovno področje v veliki meri utemeljiti na poimenovalni in na novo urejevalni ravni in ne na novi vsebini .
Tako je Mladina uvrščena v kategorijo časnik , Mag pa v kategorijo časopis , kamor sodi tudi npr. Slavistična revija .
Kategorija " časopis " v korpusu FIDA v grobem pokriva Cobbisove publikacije z oznako " časnik " , pod kategorijo " revija " pri korpusi FIDA pa sodijo tako publikacije , pri Cobissu opredeljene kot " revija " in " časopis " , saj je delitev v smislu strokovno - nestrokovno , ki jo implicira delitev časopis - revija pri Cobissu , izpeljana pri jezikovnozvrstnih oznakah .
Četudi pri iskanju po korpusu FIDA lahko zanemarimo tipologijo FIDA in v iskalno polje vpišemo ustrezno kodo Cobissa , bi bilo pri nadgradnji smiselno poimenovanja uskladiti .
15 Na spletnem naslovu < http://home.izum.si/cobiss/top_gradivo/ > je od začetka l. 2002 objavljen seznam največkrat izposojenih naslovov v slovenskih knjižnicah , ki daje posredno tudi ( sicer nezanesljivo ) informacijo o branosti .
19 V slovenskem prostoru sta se glede govornega korpusa pojavila dva predloga o njegovi gradnji .
Prvi prinaša le informacijo o potrebi po gradnji tovrstnih korpusov , je pa z naslovom " Govorjena besedila in korpus slovenskega jezika " zavajajoč , saj v resnici le uvodoma zvemo nekaj zelo posplošenih informacij o govoru v razmerju do pisnega prenosnika , v resnici pa se ukvarja z navezovanjem v otroškem govoru ( Kranjc 1998 : 109-110 ) .
Drugi prispevek pa prinaša idejno zasnovo slovenskega korpusa govorjenih besedil ( Stabej in Vitez 2000 : 79-81 ) , pri konkretni realizaciji pa se bo potrebno odločiti za osnovni namen korpusa ; če bi kot podkorpus postal del referenčnega korpusa , bi za njegovo gradnjo potrebovali popolnoma drugačne uravnoteževalne kriterije , kot če gre za korpus , namenjen govornim tehnologijam .
20 Glede ideje Slovenskega nacionalnega korpusa se na Inštitutu za Slovenski jezik Frana Ramovša ZRC SAZU pojavlja tudi idejni osnutek P. Weissa ; ta je glede zbiranja besedil sicer bistveno realnejši , a o samih načelih gradnje , razen da je potrebno pridobiti " čim več raznovrstnih besedil " , ne govori , veliko bolj se namreč ukvarja s tehničnimi detajli , ki pa za samo vsebinsko zasnovo korpusa niso zanimivi ( Weiss 2001:419-427 ) .
21 Poleg poljskega nacionalnega korpusa v tem okviru nastaja tudi korpus usvajanja angleščine s poljščino kot prvim jezikom in poljsko-angleški vzporedni korpus < http://www.uni.lodz.pl/pelcra/corpora.htm >.
22 V zadnjem času se je na področju korpusnega jezikoslovja razvila zanimiva diskusija o smiselnosti priporočil TEI , saj so se razvila v izjemno kompliciran sistem označevanja zbirk , ki po mnenju nekaterih ne pripomore h kvalitetnejšim jezikovnim virom , ampak po nepotrebnem obremenjuje označevanje dokumentov .
Po drugi strani pa taka priporočila omogočajo prenosljivost podatkov med zbirkami in njihovo primerljivost , hkrati pa tudi enovito vključevanje vrste jezikoslovno zanimivih informacij , ki so lahko v pomoč pri analizah in interpretacijah rezultatov .
23 Pri standardu SGML gre samo za načela oblikovanja elektronskih dokumentov .
V formatu SGML tako nastaja veliki angleško-slovenski slovar Oxford / DZS , predviden pa je tudi pri korpusnem geslovniku za dvojezične slovensko-x slovarje manjšega obsega ( Gorjanc in Krek 2001 : 46 ) .
26 Podjetje Amebis je na tej podlagi razvilo program besedne analize BesAna , njihove aplikacije na tej osnovi pa so del slovenske verzije programskega paketa Microsoft Word .
Glede na podatke v avtorjevi disertaciji je bilo namreč za namene avtomatskega morfološkega označevalnika , ki ga je pripravil P. Jakopin na Inštitutu za slovenski jezik Frana Ramovša ZRC SAZU , angažiranih kar nekaj ljudi , ki so del korpusa - v tem primeru zadnja tretjina romana Pomladni dan in roman Prazna ptičnica - ročno označevali ( Jakopin 1999 : ix-x , 37 ) .
Za korpus Brown - mimogrede , Brown je velikosti milijon in ne dva milijona besed ( Jakopin 1998 : 35 ) - tako velja , da je bilo z avtomatskim označevanjem zadovoljivo označenih 77 % korpusa , preostalih 23 % pa ročno , za kar je skupina , ki je ta del korpusa označila , porabila skoraj deset let ( Kennedy 1998 : 210-212 ) .
29 V skupini , ki je oblikovala korpus FIDA , že dolgo zori ideja o pripravi srečanja domačih in tujih raziskovalcev s področja jezikovnih tehnologij , ki se ukvarjajo z različnimi sistemi označevanja in analize elektronskih besedilnih zbirk , tudi t. i. jezikovno neodvisnimi metodami .
Na voljo bi jim bil korpus FIDA ali kakšen od podkorpusov , na koncu pa bi na enem mestu strnili rezultate in jih ovrednotili .
30 Pri Novi besedi zaenkrat besedilom še niso pripisane morfološke oznake , korpus pa tudi ni lematiziran .
Ker so bili v literaturi predstavljeni rezultati avtomatskega označevalnika , ki je bil razvit na ZRC SAZU ( Jakopin in Bizjak 1997 ) , zelo spodbudni , je dokaj nenavadno , da korpus ni označen .
Veliko natančnost lahko pripišemo že prej omenjenemu ročnemu označevanju za te namene sorazmerno velike količine besedil .
32 Pri oblikoskladenjskih oznakah se avtorja v celoti sklicujeta na Slovensko slovnico J. Toporišiča iz l. 1984 , pri lastnih imenih pa jima je po vsej verjetnosti bil za podlago Slovenski pravopis 1991.
Razvoj metodologije korpusne analize je v jezikoslovje prinesel tudi nove jezikovne opise ; omogočajo jih po eni strani velike količine podatkov , ki jih pred pojavom kopusov ni bilo na voljo , kot tudi postopki analize , s pomočjo katerih lahko na novo z veliko natančnostjo opazujemo jezikovno realnost .
V tem poglavju prikažemo nekatere od postopkov korpusne analize in predstavimo programska orodja , ki služijo tovrstnim namenom .
1 Postopki korpusne analize Velika količina besedil predstavlja dragoceno gradivo , za pridobivanje želenih podatkov pa je bilo potrebno po izgradnji prvih večjih korpusov premisliti načine korpusne analize , saj na prvi pogled korpusi predstavljajo neobvladljivo količino podatkov .
Lista besed nam da osnovno informacijo o besednem gradivu v korpusu ( Sinclair 1991 : 30-31 ) .
Prvih 30 najpogostnejših različnic v korpusu FIDA11 1 Lista besed je za posebne raziskovalne namene dostopna ožji skupini , ki je oblikovala korpus , saj je to podatek , ki je za komercialna partnerja izjemno dragocen ; na podlagi liste besed so namreč grajeni korpusni slovarji , uporabna pa je seveda tudi kot osnova za druge jezikovne opise in jezikovnotehnološke aplikacije .
Tudi angleški korpusi so objavili liste besed šele po izidu na njih temelječih slovarjev .
Objava podatkov , ki se navajajo tu , je dogovorjena s komercialnima partnerjema projekta FIDA .
IV Korpusni opisi slovenskega jezika Namen korpusov je v veliki meri jezikovna analiza .
V korpus zajeti jezikovni podatki so namreč osnova za adekvaten jezikovni opis .
V prejšnjem poglavju smo s predstavitvijo postopkov korpusne analize že pristopili h korpusni analizi , v tem poglavju pa predstavimo rezultate analize Korpusa slovenskega jezika FIDA , tako kot celote kot tudi izbranega podkorpusa , ob tem pa tako pridobljene podatke nenehno soočamo z obstoječimi jezikovnimi opisi .
V angleškem okolju se v zadnjem desetletju leksikalnim vse pogosteje pridružujejo celoviti slovnični korpusni opisi .
1 Lista besed korpusa FIDA in nabor slovarskih iztočnic Na podlagi korpusov narejene liste besed so danes izhodišče za oblikovanje nabora slovarskih iztočnic , zato je zanimivo primerjati listo besed slovenskega korpusa z naborom iztočnic obstoječih slovarjev .
Za ta namen smo uredili podatke o pogostnosti z liste besed korpusa FIDA , v nadaljevanju pa se posvetili tistim različnicam , ki so glede na nabor iztočnic v SSKJ nove , ter nekaterim v SSKJ zabeleženim , ki so glede na korpus FIDA doživele večje spremembe na ravni pomenskega polja .
Tako dobljen seznam je bil prečiščen z analizo konkordanc ; s tem smo želeli izločiti predvsem korpusni šum , pojavitev nekaterih elementov v nenavadnih ali specifičnih besedilnih okoljih .
Podobno je tudi s sopojavnicami : najvišjo vrednost MI3 v okviru 3 pri pojavnici vrtnica ima pridevnik žameten , a se izkaže , da gre v celoti za korpusni šum , saj se zveza pojavi samo v naslovu radijske odddaje Žametne vrtnice .
Z liste besed tako dobljeni seznam smo primerjali z naborom iztočnic in podiztočnic pri črki b v SSKJ .
Primerjava nam razkrije serijo v SSKJ še nezabeleženega besedja ; tako razkriva spremembe na ravni leksikalne norme slovenskega jezika v zadnjih dvajsetih letih .
Če upoštevamo še Besedišče , pa se nabor novih zoži le na tri samostalnike : biatlonka , biotehnologija , bejba .
Besedišče zabeleži besedo bejbi , korpus pa pokaže na pogostost rabe besede bejba .
Da ne gre za pomen , ki bi bil zožen le na mlajšo žensko , dokazujejo zgledi rabe v konkordančnem nizu , npr. : Razumete , ne - moški so le dveh sort : na eni strani so tisti , ki se palijo na bejbe v beli poročni obleki , na drugi strani pa so oni , ki se palijo na usnje in bič .
Kar seveda pomeni , da se bejbe delijo le na matere in kurbe .
Za zgled , kako se za isto predmetnost lahko spremenijo poimenovanja , vzamemo besedo broker , ki je v času nastajanja SSKJ le zabeležena v Besedišču , SSKJ pa nam glede na stanje v takratnem gradivu opiše terminološko zvezo s področja ekonomije borzni mešetar .
Rezultati so presenetljivi , saj kažejo na spremembo poimenovanja v časovnem obdobju petih let .
Glede na pravilo bi bila predpostavka popolnoma korektna , saj bi beseda flêš , kot je danes v pogovorni rabi , enostavno dobila naglasno ožino in sovpadla s poimenovanjem za bliskavico .
1 priprava za močno trenutno osvetlitev pri fotografiranju Da sem bil dokaj zbran , dokazuje to , da sem vzel s sabo fleš za fotoaparat in da sem ga celo očistil .
5 žargon sinopsis v časopisnem članku Naslov mora izražati bistvo sporočila , v nekem smislu je naslov že tudi informacija .
Na fleš , kar pomeni , da je uspel v prvem poskusu .
Zgornji primer nam dokazuje , da prihaja do velikih sprememb znotraj obstoječih jezikovnih elementov s širjenjem pomenskega polja .
Tovrstni primeri lepo kažejo , da ideje o " popravljanju " oz. nadgrajevanju obstoječih slovarjev po določenem času niso več aktualne , saj je zaradi sprememb tudi znotraj obstoječih jezikovnih elementov potrebna popolnoma nova slovarska redakcija .
Pridevniki tvorjeni vrstni izlastnoimenski na - ski : barcelonski , baški , begunjski , beltinski / beltinški , beograjski , bežigrajski , bistriški , bizeljski , bonski , bostonski , bovški , brežiški , brionski , brniški , budimpeštanski , burmanski ; bošnjaški vrstni izlastnoimenski na - ni : bližnjevzhodni vrstni iz vršilca dejanja , nosilca stanja / povezave : biatlonski , bralski , brokerski netvorjeni : body , bed , the best ; Boolean
Korpusna analiza pokaže , da gre pri tovrstne besednih zvezah večinoma za poimenovanja meddržavnih pogodb .
barcelonski ~ konvencija ' mednarodni dogovor iz l. 1975 o varstvu Sredozemskega morja pred onesnaževanjem ' beograjski ~ sporazum ~ sporazum ' dogovor iz l. 1944 med Josipom razpršeno : 1. sporazum med Srbijo in Brozom Titom in predstavnikom Hrvaško , 2. sporazum o volivah v R Srbski , kraljeve vlade Ivanom Šubašičem 3. sporazum o urejanju odnosov med Srbijo o delovanju političnih strank ' in Kosovom drugi ~ sporazum ' dogovor Jugoslavije z vladama Velike Britanije in ZDA iz l. 1945 o mirovni konvenciji z Italijo in določitvi Morganove črte , s katero je bila Primorska razdeleljena na dve okupacijski coni A in B ' ~ protokol ' dogovor iz l. 1966 med Jugoslavijo in Vatikanom , s katerim je Jugoslavija v duhovnih zadevah priznala Svetemu sedežu jurisdikcijo nad katoliško cerkvijo ' bonski ~ a deklaracija ' mednarodni dogovor iz l. 1997 o prihodnji informacijski integraciji Evrope ' ~ a resolucija ' dogovor iz l. 1997 o rokih in načinu izvedbe daytonskega sporazuma ' bostonski ~ a čajanka ' upor Američanov l. 1765 , ko je britanska vlada v dokaz svoje moči želela uvesti davek na čaj ' ~ i terier ' ameriška pasma psa , vzrejena za družnega psa v Novi Angliji ' brionski ~ a deklaracija ' dogovor iz l. 1991 med EU in Slovenijo , po katerem se za določen čas ustavni akti o osamosvojitvi in na njegovi podlagi sprejeti predpisi niso uporabljali , Slovenija pa je bila z vidika mednarodnega prava še zmeraj sestavni del SFRJ ' ~ i moratorij ' čas od podpisa brionske deklaracije do mednarodnega priznanja Slovenije ' budimpeštanski ~ a pogodba ' mednarodna podgodba iz l. 1970 o priznanju depozita mikroorganizmov za namene postopkov patentiranja ' burmanski ~ pisava ' izvedenka indijske pisave , ki zaznamuje tudi tonemsko naglaševanje ' bližnjevzhodni ~ mirovni sporazum ' sporazum iz l. 1993 o miru na Bližnjem vzhodu med Palestinci in Izraelci '; sporazum iz Osla ~ mirovni proces ' poskus vzpostavitve miru na Bližnjem vzhodu med Palestinci in Izraelci po mirovnem sporazumu l. 1993 '
Med novimi pridevniki je zanimiv bralski ; SSKJ namreč pozna le iztočnico bralen , z njo zabeleži torej le vrstni pridevnik na - ni .
Analiza korpusa pa glede na besedilno okolje pokaže , da se ob enem in drugem oblikujeta dva različna niza sopojavnic : bralski / krog , užitek , občinstvo , publika , anketa / ; bralni / značka , krožek , kultura , zmožnost , navada / .
Niza sopojavnic kažeta na pomensko delitev glede na povezavo z vršilcem dejanja bralec pri pridevniku bralski in z glagolom brati pri pridevniku bralni .
Pri drugih dveh pa gre tudi za knjižna poimenovanja ; oblikuje se namreč serija besednih zvez , s prvim delom v funkciji določila besedne zveze , ki je citatni , in jedrnim delom , ki je citatni , polcitatni , podomačeni ali tudi domači : body art , body painting , body building , body piercing , body pump ; body artizem , body artistka ; Boolean parameter , Boolean spremenljivka , Boolean vrednost .
Punca je d'best .
Predvsem s področja računalništva in telekomunikacij prihaja v splošni jezik veliko kratičnih občnoimenskih poimenovanj .
V težnji po gospodarnosti že v izvornem jeziku iz večbesednih poimenovanj nastanejo kratična , taka se prevzamejo v slovenščino , hitro pa dobijo tudi slovensko glasovno vrednost .
Kratice se umeščajo v večbesedna poimenovanja , tako da se kot pogost tip besednozveznega poimenovanja pojavlja besedna zveza s kratičnim določilom besedne zveze , npr. BIOS virusna zaščita , BIOS namestitveni program , BBS arhiv , BBS sistem , BMX kolo , BMX šport ...
Samo s primerjavo liste besed korpusa in nabora iztočnic v SSKJ lahko opazimo še naslednje težnje , ki smo jih preverili tudi z izpisom ustreznih konkordančnih nizov : • Prevlada podomačenega zapisa nad citatnim , v SSKJ pri necitatni iztočnici kazalka glej na citatno : bež : beige , blef : bluf , bridž : bridge .
Korpus kaže na težnjo po podomačenju zapisa .
Tu nikakor ne želimo kritizirati SSKJ , nasprotno , odločitev o pogostnejši iztočnici je bila pravilna , bolj ažurna priprava referenčnih priročnikov za slovenščino pa bi tovrstne spremembe lahko hitreje opisala in tako referenčni priročnik ne bi po nepotrebnem dajal vtisa favoriziranja citatnega zapisa .
• V korpusu je opazno uveljavljanje skladenjskega vzorca , ki ga sistemsko slovenščina ne predvideva , tj. nepridevniško določilo pred jedrom besedne zveze : body artizem , body artistka , Boolean spremenljivka , Boolean vrednost , bio masa , bio hrana , bio jabolko , bio odpadek , bio pridelovanje , bio vas , bianco pogodba , bianco menica , bianco ček , bianco zahteva ...
SSKJ sicer s pomenskimi kvalifikatorskimi pojasnili že opozarja na rabo v določeni besedilni vrsti , npr. s pojasnilom pri cerkveni poroki ob besedi oklic ( Vidovič Muha 1999 : 20 ) .
Velika količina gradiva pa lahko izpostavi tudi prevladujočo besedilno vrsto , tako npr. v SSKJ s pomenskim kvalifikatorskim pojasnilom v angleškem in ameriškem okolju označena beseda bus v korpusu FIDA kaže po eni strani na pogovorno rabo , po drugi pa je raba izrazito omejena na besedilno vrsto , in sicer na turistični prospekt , kratica BTV za barvni televizor na mali oglas ipd.
Pokazali smo , da delo z njimi temelji na veliki količini načrtno zbranega gradiva in predstavili postopke avtomatske analize .
Hkrati pa se s postopki korpusne analize razvijajo tudi novi postopki slovarskega opisa , ki jih v korpusu zajeti jezikovni podatki omogočajo .
Šele na realnem jeziku temelječi jezikovni opis je lahko osnova za učinkovit jezikovni predpis - če tu zaenkrat pustimo ob strani dilemo o potrebi po jezikovnem predpisu , ko imamo na voljo verodostojne in učinkovite jezikovne opise - saj le na podlagi dejanskega stanja lahko ugotovimo , v katerih segmentih je morebiti potrebna tudi jezikovna intervencija in kako jo usmeriti , jezikoslovno delovanje ne more biti delovanje s pozicije moči in uveljavljanja avtoritativnega nadzora nad jezikom , ampak na podlagi dejanskega jezikovnega stanja ( Gorjanc 2003a : 187 ) .
Ker smo konec l. 2001 za slovenščino dobili pravopisni slovarski priročnik , ga bomo skušali predvsem z vidika aktualnega zajetja slovenske družbene stvarnosti na poimenovalni ravni z nekaterih vidikov ovrednotiti .
Glede na to , da se je SPS gradivno v veliki meri oprl na SSKJ , bomo primerjali tudi rešitve v obeh priročnikih , aktualnost pa preverjali v korpusu FIDA .
Gradivna osnova je torej v celoti nebesedilna , opira se na slovaropisno sito , ki je bilo opravljeno že pri drugih slovarskih priročnikih in celo v tujejezičnem okolju .
Glede na gospodarsko-politični sistem je zanimivo pomensko kvalifikatorsko pojasnilo v kapitalistični ekonomiki ; leksikalne enote , ki so nosilci tega pojasnila , so po l. 1991 dobile možnost ponovnega aktiviranja .
V preglednici prikažemo pomene in besedne zveze z omenjenim pomenskim kvalifikatorskim pojasnilom , in sicer na začetne črke A-E , M-O in T-Z , tako da dobimo predvsem pregled načina prikaza tovrstnega besedišča v SPS glede na aktualno besedilno gradivo .
aport naturalni prispevek h kapitalu gosp .
| vpliv bank ; - oblast , moč bankirjev | bankrot ustavitev izplačil , ~ banke finančni polom gospodarski polom , stečaj finančni polom , stečaj bankrotirati narediti bankrot , | finančno propasti , finančno propasti gospodarsko propasti iti v stečaj | borza igrati na borzi - - dekartelizacija odpravljanje kartelov gosp .
visko razvit ~ 1 vodenje podjetja , ustanove ( vodenje , upravljanje ) 2 vodstvo podjetja skup .
razvoj ~ vodenje podjetja , ustanove ~ v športu mera profitna mera v odstotkih izražen fin .
državni ~ v stanje na trgu , ko je en odpraviti medsebojno konkurenco industriji ; dobiti ~ sam ponudnik blaga za trgovino z zlatom monopolen monopolna organizacija , zveza ~ razmere ~ položaj združenje podjetij , ki ima namen odpraviti medsebojno konkurenco multinacionalka veliko podjetje , ki posluje prakt .
- zbankrotirati narediti bankrot , povzročiti finančni - gospodarsko propasti zlom , stečaj zveza monopolna zveza združenje podjetij , - - ki ima namen odpraviti medsebojno konkurenco
SP se je glede uvrstitve tovrstnega besedišča zelo nenavadno odločal ; brez kakršnekoli časovne oznake predstavi namreč tisto , ki danes sploh ni več aktualno : apotr , ažiotaža , bankar , dekartelizacija , efekti , kartelist , veleindustrijalec , velepodjetnik , veletovarnar ; profitna mera , monopolna zveza ; petrolejska družba , premogokopna družba ; 14 kartelirati se , notirati , zbankrotirati ; igrati na borzi .
Pri glagolu notirati sicer pripiše nadrejeni sinonim kotirati , a je beseda zabeležena kot nevtralna , čeprav se sploh ne uporablja .
Še večja napaka je storjena pri izglagolskem samostalniku notacija ; ta sploh nima nikakršne sopomenke , kljub temu da se v korpusu pojavlja le samostalnik kotacija .
Kaže , da si je SPS pri naboru besed res v veliki meri pomagal s SSKJ , saj je tam stanje podobno , v sopomenskem paru nastopata glagola kotirati in notirati , le slednji pa ima tudi izglagolski samostalnik notacija .
Vprašanje , kdaj se iztočnicam pripisuje določen tip razlage , še posebej pa , kakšno normativno vrednost jim pravopis pripisuje , pa ostaja odprto vprašanje .
Kaže , da z vpeljevanjem nadrejene sopomenke SPS vzpostavlja normativno vrednotenje besedišča na popolnoma neustrezen način , tj. tudi s sopomenskimi pari , ko v pravopisu nadrejeni korpusno ni izpričan oz. ni izpričan v prekrivnem pomenu , npr. menedžer - poslovodski upravljavec ; principal - podjetnik , in tako na poimenovalni ravni po nepotrebnem na novo vzpostavlja jezikovnosistemsko nestabilnost .
Pri sopomenkah , ki so vezane le na denotativni pomen , lahko v korpusu pričakujemo primerljivo besedilno okolje , v veliki meri prekriven niz sopojavnic .
interesna sfera interesno področje / || principal podjetnik območje
Besedilno okolje pokaže , da gre v prvem primeru res lahko za besedilno zamenljiva elementa , kljub temu da ubesediljenje ni popolnoma prekrivno .
Pri drugem pa se oblikujeta dva ločena niza sopojavnic , ki kažeta na popolnoma drugačno ubesediljenje , pa tudi potencial za tvorbo stalnih besednih zvez ni enak , tako da tu sploh ne moremo govoriti o sopomenskem paru .
Najpogostnejša je podomačena varianta v primeru izpeljanega tvorbenega postopka v slovenščini menedžerski oz. popolna prevlada pri tvorjenki menedžerstvo , kar povratno lahko vpliva tudi na besedo , ki je bila tu v podstavi tvorjenke , tj. menedžer .
Največji delež polcitatne variante pa je pri poimenovanju , ki je bilo že kot tvorjeno prevzeto v slovenščino .
Na zmedo glede označevanja kažeta dva primera : • Pri poimenovanju različnih podjetij glede na tip lastništva se nam tako pojavita brez področne oznake delniška družba in družba z omejeno odgovornostjo , medtem ko družbi z neomejenim jamstvom pripiše področno oznako pravniško .
Pri različnici delnica je obtežitev veliko večja v neumetnostnih nestrokovnih besedilih kot v strokovnih , v strokovnih je pravzaprav zanemarljiva , prav tako je obtežitev pri multinacionalki največja v podkorpusu nestrokovnih besedil .
C1 - neumet .
Kot smo videli , nam postopki korpusne analize omogočajo tudi objektivizacijo v zvezi s podatki o jezikovnozvrstni in besedilnovrstni vezanosti posameznih jezikovnih enot - tudi pri označevanju besedišča nam tako ponuja vrsto podatkov , ki pripisovanje oznak preusmerja od intuicije k dejanski rabi .
2.2 Vrstnost in besednozveznost Neposredna spodbuda za tovrstno analizo je poseben poudarek na tovrstni problematiki že v predstavitvenem gradivu na tiskovni konferenci ob izidu SPS 2001 pa tudi njena izpostavljenost v Uvodu SP : " Predsednik komisije J. Toporišič je /.../ predelal način zapisovanja tonemskih naglasov ( glede na SSKJ ) .
Ob tem se zavedamo , da se vrstni pridevnik za vezjo , ko se besedna zveza pojavi z elipso jedra , rabijo tako z obrazilom - ən kot - ni , a besedila pri morebitni napačni interpretaciji pridevnika dilemo razrešujejo , npr. porojen : porojeni ( graf ) , šibek : šibki ( tok ) , in izključujejo možnost napačne interpretacije pomena pridevnika ( Gorjanc 1999 : 153 ) .
Korpus nam pri tem daje podatke posredno , saj se razlika izrazno kaže le v imenovalniku moškega spola ednine .
Poleg razlik v kategorialnih lastnostih enih in drugih ( Vidovič Muha 2000 : 35-36 ) nam besedilno okolje izloča stalne besedne zveze ; pri vseh tistih , kjer prihaja do spremembe pomena vsaj ene sestavine besedne zveze , pa lahko iz niza sopojavnic razberemo tipične kolokatorje .
železen 1 iz železa [ vrata , ograja , konstrukcija ] Današnji most stoji na železni konstrukciji .
Drži , da smo železnega zdravja .
železni : železna zavesa 1 meja med zahodnimi in vzhodnimi državami od konca 2. svetovne vojne do razpada Sovjetske zveze [ padec , odstiranje , odstranitev ] ; [ izza , onkraj , onstran ] ; [ zrušiti , postaviti ] Odprtje meja je bilo ključno pri odstiranju železne zavese .
Pobuda je nastala še v času železne zavese .
železna doba doba v zgodovini človeštva , ki jo opredeljuje uporaba železa [ mlajša , starejša , zgodnja ] V arheoloških plasteh so odkrili del hiše iz mlajše železne dobe .
Železna Lady / železna lady 1 nekdanja predsednica britanske vlade Leta 1979 je Železna Lady v Veliki Britaniji postala predsednica vlade .
svetlikajoča se temno rjava žival , ki živi zlasti na vlažnih tleh , Julus terrestris Železne kačice se hranijo z odmrlimi rastlinami .
Čeprav nam korpus neposredno ne more odgovoriti na nekatera odprta vprašanja v zvezi z izrazno podobo vrstnega pridevnika , pa nam zaradi izjemne količine kakovostnih jezikovnih podatkov o dejanski jezikovni rabi ponuja dovolj gradiva za odločanje o konkretnih slovarskih rešitvah tudi pri tovrstni problematiki , hkrati pa izzivalno konfrontira izključno jezikovnosistemske opise z jezikovno realnostjo .
2.3 Družbena ( ne ) občutljivost slovenskih slovarjev Ko se je sredi devetdesetih let v slovenskem prostoru odprla razprava o seksizmu v jeziku , je pri slovenističnih jezikoslovcih sprožila zelo različne odzive , velikokrat povezane tudi z napačnim težiščem , tj. vprašanjem spola kot kategorialne lastnosti , ne pa vprašanji spola kot se kaže z družbeno socializacijo in s tem povezanimi jezikovnimi sredstvi ( na vseh pomenonosnih ravninah jezika ) .
Kljub temu ostaja dejstvo , da se je v slovenskem prostoru prvič odprla tako široko zastavljena diskusija o problematiki , ki se hočeš nočeš povezuje z jezikom in posledično tudi jezikoslovjem ; opozorila je na nekatere jezikovne samoumevnosti , ki so res rezultat družbene realnosti , a jih demokratična družba skuša presegati .
Čeprav se je vprašanje seksizma s področja poimenovanja pri sociolingvističnih raziskavah preselilo k vprašanjem moške in ženske komunikacije ( Stabej 1997 : 61 ) , pa ostaja dejstvo , da se prav na ravni poimenovalnih možnosti najbolj očitno kaže prevlada družbeno močnejših skupin nad šibkejšimi - ženskami , ljudmi druge rase , drugače spolno usmerjenimi , invalidi ...
Ker je negativno čustveno označenega besedišča za poimenovanje žensk v SPS veliko , smo si natančneje ogledali tisto , ki je v SSKJ prvotno negativno čustveno zaznamovano in ga je prevzel SP , čeprav je tudi drugotnega , predvsem tistega , kjer prihaja do možnega prenosa iz živalskega in predmetnega sveta na človeka , kar nekaj , npr. gos , kača , koza , sova , vešča ; brenta , bunka , butara , kljuka .
Iskanje po korpusu FIDA nas je prepričalo , da gre večinoma za besedišče , ki ga danes v rabi ni ( več ) ; tudi pri tistih , ki so zabeležena , je pogostnost tako nizka , da v slovar sodobne slovenščine brez pogostnostne ali časovne oznake ne bi več sodile ; nabor realnih negativno čustvenih poimenovanj za ženske pa je glede na SPS izjemno zožen .
Negativnih čustvenih oznak za ženske je že v SSKJ več kot za moške , hkrati pa to ni značilno le za slovenščino , ampak je bilo tako stanje povod za opozarjanje na tovrstno problematiko tudi v angleškem jeziku ( Goddard in Patterson Meân 2000 : 76 ) .
Glede na SSKJ prvotno čustveno negativno zaznamovano besedišče za poimenovanje žensk v SPS in podatki o njem iz korpusa FIDA
Ne le , da je SPS iz SSKJ prevzel večino negativnih oznak , dodal je še svoje , in sicer samo take , ki jih raba ne izkazuje ; za sodobni slovar slovenščine bi jih bilo tako aktualnih sorazmerno malo .
20 Iz korpusnega gradiva je razvidno , da gre pri ubesediljenju za poimenovanje , ki je lahko tudi prekrivno z angleško besedo nigger , tako pri besedi zamorec kot zamorka , torej za izrazito negativno vrednotenjsko poimenovanje .
Dogajanje sta skinheada ' popestrila ' z glasnim zmerjanjem : " Zamorca !
Pojdite v Zoo !
Stigmatizirane družbene skupine pri poimenovanjih , ki imajo v družbi negativno konotacijo , lahko sistematično skušajo obrniti poimenovanje sebi v prid , najprej se to zgodi le znotraj same skupine , a že to zahteva izjemno angažiranost marginaliziranih družbenih skupin ( Goddard in Patterson Meân 2000 : 82 ) .
SP prinaša iztočnice gej , homoseksualec , lezbijka , z oznako nizko še peder in buzarant , v zgledih pa še zvezo topli bratec z oznako šaljivo .
Ker je znano , da nova poimenovanja v družbi sprožajo potencirano rabo , podobno kot funkcionira satira v literaturi ( Goddard in Patterson Meân 2000 : 70 ) , je naravnost odprta pot k nadaljnji stigmatizaciji določene skupine ljudi , še posebej , ker se SPS pri heteroseksualcih ne obnaša podobno .
pederastičen 3 Kako so lahko povezani seksualnost , ocena predstave oz. iracionalni občutek krivde in performansa samokaznovanje , sta utelesila Američana Ron Athey v avtoerotičem pederastičnem performansu Solarni anus pederastija 12 Sprva so istospolno usmerjenost imenovali besedila , ki govorijo o sodomija ali pederastija , današnje ime zgodovini homoseksualnosti homoseksualnost pa se je pojavilo šele leta 1851 , ko je v družbi še vedno veljalo prepričanje , da je nagnjenje k istemu spolu neozdravljiva duševna bolezen .
Z razvojem informacijske družbe je kot jezik mednarodne komunikacije popolnoma prevladala angleščina , ki prihaja v stik z drugimi jeziki tako neposredno , še bolj pa posredno , prek pisnih besedil .
Nadaljnja analiza novih poimenovanj znotraj desetletja pa izpostavi tudi prav konkretne dogodke , ki so bili pobudni za nova poimenovanja ( Ayto 1999 ) .
Ker korpus FIDA zajema besedila devetdesetih , si bomo ogledali poimenovanja s področja interneta , ki so bila v tem času uvrščena v angleške slovarje ; zanimalo nas bo , kakšen je bil odziv nanje v slovenščini in kako lahko v korpusu ta odziv spremljamo .
Citatnost kot popolnoma pasiven odziv uporabnikov jezika prejemnika se potrjuje kot začasna in pušča odprto možnost za nova poimenovanja ; izkaže se , da v primeru , ko je poimenovanje motivirano tako , da je za uporabnike sprejemljivo , pri uvajanju slovenske variante ni nikakršnih težav .
V korpusu prvi dve leti po pojavitvi najdemo izključno citatno poimenovanje ; ko se pojavi slovensko , pa je to takoj konkurenčno , tako da povzroči postopno umikanje citatne variante .
V pisnih besedilih je še bolj izrazita prevlada domače sopomenke nad citatno pri še eni ključni besedi s področja interneta , tj. home page .
Izkaže se , da so nizi pri pridevnikih internetni , internetski in internetovski prekrivni / storitev , stran , iskalnik , podjetje , trgovina , knjigarna , ponudnik ...
Korpus FIDA pri iskalnem pogoju internet * in medmrež * pokaže razmerje 13.638 : 308 , hkrati pa lahko ugotovimo , da medmrežje ni besedotvorno pobudno , tako da bi ob dosledni intervenciji SPS moral sugerirati tudi vrsto novih tvorjenk s podstavo medmrežje .
Ob tem SPS greši še na obvestilni ravni , saj zvezi svetovni splet pripiše identifikacijo internet , kar pa je pomensko napačno ; SPS tako vzpostavi sopomenski niz svetovni splet , medmrežje , internet , pri čemer svetovni splet dejansko ni sopomenka za internet oz. medmrežje .
Pojav interneta je na ravni poimenovanja spodbudil tvorbo dveh nizov tvorjenk , ki se z razvojem interneta zdita tvorbeno zelo odprti .
Korpus na prvi pogled daje izjemno razpršene rezultate ; gre namreč za izjemno produktivno tvorbo , kjer sta tvorbeno pobudna tako citatni kot podomačeni jezikovni element .
V tem primeru gre za prav neverjeten nabor poimenovanj , ki dokazujejo dinamično poimenovalnost v slovenščini , korpus pa že kaže na prevlado poimenovanj s sestavino kiber - ( nekaj nad 60 % ) , hkrati pa je raba tudi dokaz , na katerih mestih je jezikovni sistem pri prevzemanju poimenovanj še posebej občutljiv .
Razmerje med ustreznostjo in sprejemljivostjo poimenovanj je v veliki meri nepredvidljivo , četudi je poimenovanje jezikovno ustrezno , upošteva terminološke in splošnojezikovne zakonitosti , lahko pri uporabnikih povzroči njegovo zavrnitev , po drugi strani pa poimenovanje , ki ni jezikovno ustrezno , lahko uporabniki takoj sprejmejo ( Pavel 1993 : 23-24 ) .
Korpus pri novih sicer pokaže na veliko variantnost , povezano tudi s težnjo po izvirnem domačem poimenovanju , hkrati pa nakazuje prevladujočo rabo ; velikokrat je z novimi tudi nepredvidljivimi rešitvami izziv pri opisovanju jezikovnega stanja , prav tako pa tudi pri normiranju .
V tem poglavju pa se bomo ukvarjali s podkorpusom strokovnih besedil , predvsem naravoslovno-matematičnih .
Že sobesedilo različnice nam v različnih podkorpusih pokaže na popolnoma drugačno ubesediljenje .
Tudi tokrat se bomo pri analizi omejili na postopke , ki jih lahko izpeljemo s pomočjo iskalnika ASP32 , predvsem tiste , ki so zanimivi za terminološke raziskave .
Zavedamo se , da je polje raziskav , povezanih s pridobivanjem terminološko relevantnih podatkov iz besedilnih zbirk , pridobivanje terminov , izjemno široko ; tu prikazani postopki sodijo pravzaprav med klasične postopke korpusne analize , le da so aplicirani na specifično besedilo ( Pearson 1998 : 191 ) .
Za primer vzamemo različnico žuželka , ji izračunamo statistične vrednosti MI3 , konkordančni niz pa potem uvozimo kot datoteko v orodje WordSmith in izračunamo dvočlenske besedne skupe ; iz tako zbranih podatkov izločimo imenske zveze .
Krila se gibljejo s pomočjo mišic znotraj trupa žuželke .
Če bi iz te snovi lahko naredili žogo , bi ta poskakovala precej dalj časa kot običajna žoga iz gume .
Iz pridobljenih podatkov o sobesedilnih nizih in besednih skupih lahko izločimo tudi glagole in tako dobimo osnovne podatke o besedilnih dogodkih , povezanih z različnico : hraniti se , proizvesti , jesti , opraševati , loviti , leteti ; imeti , soditi med. Slednja ne sodita več v skupino pravih dogodkov , ampak med tiste , ki označujejo besedilne relacije lastnosti , istovetnosti in prisojanja ( Dijk 1977 : 103 ) .
Besedilni pristop s pomočjo korpusnih podatkov tako izpostavi terminološko realnost .
Izhodišče analize je določitev besedilnih označevalcev pomenskih razmerij .
Na podlagi podkorpusa naravoslovno-tehničnih besedil in zgledov v tuji literaturi ( Meyer et al. 1999 ; Pearson 1998 : 174-175 ) so bili ugotovljeni nekateri tovrstni besedilni elementi ( Vintar in Gorjanc 2000 ) ; tu ugotovitve na kratko povzamemo : - za sopomenskost : ali , ali tudi , imenujemo ( tudi ) , imenovan tudi , sinonim , je sinonim za , znan tudi kot , znan tudi pod imenom , je poimenovan , nosi ime ...
Kot primere , kako lahko iz korpusa pridobimo podatke o hierarhizaciji terminologije , si oglejmo razmerja sopomenskosti , nad - in podpomenskosti ter meronimije .
Izbrali bomo tiste , za katere je bilo ugotovljeno , da v slovenskem korpusu dajejo boljše rezultate ( Vintar in Gorjanc 2000 ) , ter skušali ugotoviti , kako bi dobljene rezultate v prihodnje lahko izboljšali .
Slednje pojasnjujejo razmerja znotraj terminološkega sistema in so tako tudi predvidljiva lastnost strokovnih besedil , ki pojasnjujejo terminološka razmerja tudi širši , ne le strokovni javnosti .
Drugače pa je pri pomenskih označevalcih , kot sta imenovan tudi oz. imenujemo tudi in znan kot .
Del konkordančnega niza iskalnega pogoja " imenovan tudi / imenujemo tudi "
že kdaj slišal ( - a ) , da Zemljo imenujemo tudi modri planet ?
Označevalec sopomenskega razmerja imenujemo tudi dejansko izloči prave sopomenske pare , npr. dušikov oksid - smejalni plin , vitamin B1 - tiamin , vitamin B2 - riboflavin , dostop do kode - doseg procedure , spletna stran - HTML dokument ipd.
Prav pri tovrstnih besedilnih povezavah pa se izkaže , da se besedila gradijo z vmesnim besedilnim navezovanjem , tako da poimenovanje in parafraza nista v stičnem položaju ; v takih primerih konkordančni niz za zajetje obeh elementov ne zadostuje .
Ko iščejo alge in haloge , se potapljajo tudi do deset metrov globoko .
Ta samotarski kuščar , imenovan tudi žlezoglavi legvan , je v preteklosti zelo trpel zaradi podivjanih mačk in psov .
Gre za v strokovnih besedilih predvidljivo navezovanje med deli besedil in imensko zvezo s kazalnim zaimkom v anaforični funkciji , ki z jedrom poimenuje del besedila , s katerim vzpostavlja besedilno vez ; hkrati z vzpostavitvijo besedilne vezi pa se nanosnik tudi poimenuje ( Gorjanc 1999 : 149 ) .
Del konkordančnega niza iskalnega pogoja " znan kot "
Zaradi pojava , ki je danes znan kot rdeči premik , je lahko iz spremembe barvne kot jih je imel slavni člen lambda ( bolj znan kot kozmološka konstanta ) , ki ga je eksplozije pred približno 17 milijardami let .
Tudi ta označevalec daje podobne rezultate kot imenovan tudi , izpostavlja tako razmerje med leksikalnimi sopomenkami , med termini in opisi ; te povezave pa so prav tako pogosto nestične z uporabo vmesnega anaforičnega navezovanja .
Imel je veliko knjižnico ; znana je tudi njegova zbirka mineralov .
Na podlagi tega zakona je fizikom uspelo izračunati prvi približek temperature površine Sonca .
Kot označevalci neustaljenosti terminologije se pojavljajo tudi ločila v svoji neskladenjski vlogi , predvsem narekovaj in oklepaj ; tako v besedilu zaznamujeta sopomenske pare največkrat tako , da se v narekovaju ali oklepaju pojavi sopomenka , ki je manj pogosta , še ne ustaljena ali tujejezična ( Gorjanc 1996 : 256-257 ) .
Če pa iskanje zožimo le na podkorpus naravoslovnih besedil ( koda Cobissa Naravoslovne vede ) in na stični položaj dveh samostalnikov , so rezultati vzpodbudni .
Vodik se nabira na negativni elektrodi ( katodi ) , kisik pa na pozitivni negativni elektrodi ( katodi ) , kisik pa na pozitivni elektrodi ( anodi ) .
Pri gorilni celici je postopek lastnosti dimnih zaves temeljijo na optičnih pojavih disperzije ( razprševanja ) in absorpcije ( vsrkanja ) svetlobe zvišamo , olje začne zgorevati in pri tem nastane oglen prah ( čad ) , ki lebdi v zraku kot dimni oblak črne barve ptiče bogov in kraljev , ki se v času ženitve ( spomladi ) v resnici prelevijo v pravljična bitja .
Če naprej je pri svojih operacijah uporabljal karbolno kislino ( fenol ) , da je preprečil zastrupitve .
Poskus je trajal nekaj mesecev kemijski postopek , kako iz slanice pridobivati natrijev hidroksid ( lug ) , ki je za izdelavo mila neprimerno boljši lastnosti sta hitro učinkovanje in visoka stopnja strupenosti ( toksičnosti ) ; so brez barve , vonja in okusa .
Ko prečistimo konkordančni niz in nam ostanejo le sopomenski pari , se izkaže , da se pri oklepaju kot označevalcu sopomenskosti v besedilu največkrat pojavijo leksikalizirani pomenski pari , npr. rdeče krvno telesce - eritrocit , karbolna kislina - fenol , odnašanje prsti - erozija ipd. , redki so sopomenski pari , kjer se kot sopomenka pojavlja besedilna aktualizacija , npr. čas ženitve - spomladi .
Besedilni vzorec se tako izkaže kot učinkovit za zajemanje sopomenskih parov iz besedila .
Po večini pri njih sploh ne gre za neustaljeno terminologijo , ampak za ustaljeno , do sopomenskosti v terminološkem sistemu pa prihaja večinoma zaradi medjezikovnega razmerja prevzeto - domače oz. kratično poimenovanje v razmerju do besednozveznega .
je vrsta 90/19 13/4 0,21 0,31 je * vrsta 156/25 20/0 0,15 0 prištevamo med 12/9 5/5 0,75 1 sodi med 182/45 79/39 0,24 0,49 spada med 168/34 65/30 0,20 0,46 sodi v družino 13/4 0/0 0,30 0 uvrščamo med 60/22 7/3 0,36 0,43
Med gliste spadajo številni zajedavci in škodljivci , kot so talne glistice , rudarska glista , pljučna glista in številne filarije , ki pri sesalcih povzročajo elefantijazo .
Nabor označevalcev tovrstnih relacij je v primerjavi z drugimi sorazmerno majhen , hkrati pa se izkaže , da so najpogostnejši označevalci tudi zelo uspešni pri zajemanju terminologije v tovrstnem razmerju .
Besedna zveza je sestavljen iz se tako pokaže v podkorpusu kot besedilnofunkcijsko v glavnem omejena na vzpostavljanje meronimičnih razmerij .
Del neprečiščenega konkordančnega niza iskalnega pogoja " je sestavljen "
Predlagani model je šele začetek uvajanja postopkov za tovrstno delo ; iskanje besedilnih vzorcev , ki bi zajeli tudi tiste termine , ki nastopajo v manj predvidljivem besedilnem okolju , se bo lažje nadgradilo takrat , ko bo korpus oblikoslovno bolj nedvoumno označen in bo omogočal večjo kombinacijo iskanj tudi glede na skladenjske vzorce .
2 Tu kot netvorjeno izrazje navajamo tisto , pri katerem tvorbeni postopek ni bil izpeljan v slovenskem jeziku ; besede pa so lahko kot tvorjene že bile prevzete v slovenski jezik .
Za žensko obliko pri dekanu v korpusu FIDA tako dobimo naslenje razmerje : dekanica ( 24 ) , dekanja ( 14 ) , dekanka ( 1 ) .
4 Seveda mislimo na splošni jezik in ne na jezik v specifični funkciji ; znanstveni jezik definira prav razvojna dinamika na ravni poimenovanja .
10 Družba z neomejenim jamstvom je uvrščena pod iztočnico neomejen , natančneje podiztočnico neomejeni , družba z omejeno odgovornostjo pa pod iztočnico odgovoren , natančneje podistočnico odgovornost .
13 V Korpusu FIDA sicer najdemo 6 pojavitev veleposestnika , a v besedilih , ki govorijo o Ilirskih provincah in času med obema vojnama .
15 Da pri SPS sploh ni šlo za opis in normativno vrednotenje slovenskega jezika glede na realno jezikovno stanje lepo kaže Toporišičeva argumentacija v zvezi s tem , ko pravi : " od Gorjanca obširno obravnavani glagol kotirati prav tako najdemo v Webstru ( quote to state price , to state the current price ) ipd.
" ( Toporišič ( 2003 : 167 ) .
To , ali nam daje Toporišič prav ali ne , nas čisto nič ne zanima , zanima nas samo aktualno stanje v slovenskem jeziku , ki ga lahko ugotovimo s pomočjo korpusnih podatkov .
Seveda pa se upravičeno sprašujemo , kako smo se lahko znašli v položaju koncentracije razsojevalne moči v zvezi z normativno podobo slovenščine v rokah enega samega človeku .
Ko se pojavita tako vrstni kot kakovostni pridevnik , je potrebno v slovarju to rešiti tako , da iztočnici nista razdruženi .
19 Ločevanje pomenov je odvisno od velikosti leksikalne / leksikalnopomenske podatkovne zbirke ; tu predpostavljamo geslovnik manjšega obsega ( približno 20.000 iztočnic ) , predlog , ki podajamo tu , je nastal na podalgi izhodišč za pripravo slovenske leksikalnopomenske podatkovne zbirke za dvojezične slovarje manjšega obsega ( Gorjanc in Krek 2001 ) .
Tu nimamo namena celovito predstaviti metod za avtomatsko pridobivanje terminologije iz korpusov , ampak nanje le opozoriti .
Gradivno usmerjene raziskave tudi v slovenskem prostoru niso nič novega , vendar korpusi v raziskovanje vnašajo tako količinsko kot kakovostno bistveno drugačno gradivno osnovo .
Pojav korpusov v jezikoslovju pomeni mnogo več kot zgolj gradivo za jezikoslovne raziskave ; korpusno jezikoslovje je ob metodologiji gradnje korpusov oblikovalo tudi metodologijo korpusne analize in novih jezikovnih opisov .
1.1 Z razvojem korpusov je nastopila tudi potreba po njihovi tipologizaciji in oblikovanju kriterijev za njihovo vrednotenje .
Specializirani predstavljajo jezik v določeni funkciji , med njimi so za terminološke raziskave najbolj zanimivi korpusi strokovnih jezikov .
Predvsem zaradi izjemne dinamike strokovnega razvoja pomenijo možnost hitrega sprotnega opazovanja jezikovnih sprememb in temu primerno dinamičnih jezikovnih opisov .
Vzorčni korpusi ne zajemajo besedil v celoti , ampak na podlagi metodologije vzorčenja zajemajo le dele besedila in jih skušajo medsebojno uravnotežiti .
Glede na razvoj tehnologije so danes to neke vrste anahronizem , kljub temu da so nekateri referenčni korpusi , kot npr. BNC , grajeni prav kot vzorčni korpus .
Tovrstni korpusi so sicer glede zajemanja različnih besedil bistveno bolj uravnoteženi , a zaradi dinamike jezikovnega razvoja postanejo hitro neaktualni .
Prav slednje je bila velika pomanjkljivost starejših besedilih zbirk , ki so z razvojem tehnologije postale neuporabne .
Prav analiza in klasifikacija jezikov brez pisne tradicije je v jezikoslovju narekovala načrtno zbiranje jezikovnih podatkov ; ameriško strukturalno jezikoslovje je tako imelo besedilno gradivo ne le za nepogrešljivo praktično orodje , ampak nujno potrebno gradivno osnovo .
Delo s korpusom res temelji na veliki količini zbranih besedil , ki so podlaga za jezikovno analizo , ne odreka pa se intuiciji .
Jezikovni podatki v korpusu nikoli ne morejo biti smiselno interpretirani brez intuicije in interpretativnih zmožnosti raziskovalcev .
Korpusi prve generacije so bili glede na današnje korpuse sorazmerno majhni , nekakšen standardni obseg korpusa je pomenila velikost okrog milijona besed .
Na začetek njihove gradnje sodita dva korpusna projekta , in sicer angleški korpus SEU in ameriški Brown .
Prvi na korpusu temelječi slovar pa šele povzroči pravi zamah razvoja korpusov , v osemdesetih letih najprej samo v angleškem okolju , v devetdesetih pa se jim postopno pridružujejo tudi drugi jeziki .
V veliki meri so bila oblikovana v angleškem prostoru ; upoštevanje specifik drugih jezikovnih okolij pa je odvisno od uredniške politike pri gradnji korpusa .
Pri zajemanju pisnih besedil so njegove rešitve predvsem zaradi odločitve o gradnji statičnega korpusa po načelu besedilnega vzorčenja danes v marsičem presežene , kar dokazujejo tudi korpusi , ki nastajajo v okviru založniških hiš , pri katerih je BNC temeljni gradivni vir .
Dodajajo se namreč predvsem sodobna besedila in nebritanska angleščina .
Po drugi strani pa je njegov govorni del nepresežen ; oblikoval je namreč mrežo kriterijev zajemanja govornih besedil , ki predvideva uravnoteženost korpusa tako z vidika demografskih kot tudi kontekstualnih kriterijev .
Glede uravnoteženosti pa ne vzpostavlja togih kriterijev , saj naj bi ti onemogočali spremljanje jezikovne dinamike , ker se ne morejo odzvati na nepredvidene jezikovne rabe .
Poleg britanske zajema tudi nebritansko angleščino , med besedili pa ne izpostavlja umetnostnega besedila in ne predvideva večjega zajemanja tovrstnih besedil zaradi njihovega kulturnega statusa .
Ameriško okolje se sicer dinamično priključuje korpusnim raziskavam , v nekaterih segmentih je tudi pobudno , a nenehno ostaja korak za angleškim ; slednje ima prednost predvsem zaradi velikega interesa založniških hiš pri gradnji korpusov , povezanih najprej z leksikografskimi projekti angleščine za tuje govorce .
2.1.3 Najobsežnejši korpusni projekt v okviru slovanskih jezikov je prav gotovo korpus češkega jezika .
Slednji se v celoti naslanja na načela gradnje BNC in ne upošteva specifičnih lastnosti poljskega jezikovnega prostora , tako da je glede rešitev , ki jih na novo ponuja , za poljščino zanimivejši projekt založbe PWN , grajen za potrebe leksikografije .
Pobude obstajajo tudi za vrsto drugih korpusov slovanskih jezikov , a so to zaenkrat le manjši korpusi , večji projekti so namreč tudi finančno zahtevni , zato npr. zaenkrat ni navolju referenčnega korpusa ruskega jezika .
2.1.4 Za slovenščino sta aktualna dva korpusa , Korpus slovenskega jezika FIDA in Nova beseda .
Oblikovana je široka mreža parametrov za zajemanje besedil ; pri tem korpus sledi tujim izkušnjam , na podlagi analize stanja v slovenskem jezikovnem prostoru pa merila zajemanja preoblikujejo , dodajajo pa se tudi nova .
Korpus Nova beseda je v osnovi drugačen , saj ne sledi nobenim tujejezičnim zgledom ter splošno sprejetim priporočilom in standardom predvsem glede uravnoteženosti .
Ker želi postati slovenski nacionalni korpus , bi pri odločitvah pričakovali tako upoštevanje mednarodnih standardov kot analizo slovenskega jezikovnega prostora in temu primerne odločitve pri gradnji korpusa .
Označevanje je lahko zelo priročno sredstvo , zato je vnaprejšnje odrekanje označevanju nesmiselno , saj lahko oznake v korpusu kadarkoli tudi odmislimo .
V okviru korpusnega jezikoslovja ta tip označevanja dolgo ni bil posebej aktualen , saj za angleščino velja , da je zaradi izjemno majhne oblikoslovne variantnosti postopek nekako redundanten , toliko bolj pa je pomemben za jezike z bogato morfologijo .
Oblikoskladenjsko označevanje korpusa je bilo aktualno že na samem začetku gradnje korpusov , tudi tu pa je bistveno več težav pri morfološko bogatih jezikih .
Pri avtomatskem oblikoskladenjskem označevanje , ki je bilo uporabljeno pri korpusu FIDA , velja , da so oznake pojavnicam sicer pripisane z veliko natančnostjo , a dvoumno , kar pomeni , da je zaradi prekrivnosti oblik različnih morfosintaktičnih kategorij pripisano več nizov variantnih oznak , ne pa le tisti , ki je kontekstualno aktualen .
Pri korpusih govora je zanimivo označevanje na fonetično-fonološki ravni ; tovrstni opisi so še kako pomembni pri analizi in sintezi govora , vsekakor pa bi bili pri sodobnih fonetično-fonoloških študijah že manjši bogato označeni korpusi lahko v veliko pomoč .
Razmišljanja glede različnih tipov označevanja gredo še od besedotvornega do leksikalnopomenskega in besediloslovnega : pri prvem bi se v korpusu tako različnim obrazilom pripisalo njihovo funkcijo in pomen , pri drugem pa vsakemu leksemu aktualni pomen ; slednje bi omogočilo tudi povezavo med slovarjem in korpusom , torej povezavo med izborom in obdelavo besedišča z veliko količino podatkov o aktualni rabi .
3.2 Velika količina besedil predstavlja dragoceno gradivo , za pridobivanje želenih jezikoslovnih podatkov pa je bilo potrebno po izgradnji prvih večjih korpusov premisliti načine korpusne analize , saj na prvi pogled korpusi predstavljajo res neobvladljivo količino podatkov .
Ta nam da res le osnovno sliko o besediščnem naboru .
Nadaljnje analize gredo v smeri izpisa konkordančnih nizov , njihovega urejanja in hranjenja .
S procesiranjem korpusnih podatkov sorazmerno hitro pridemo do tovrstnih podatkov , a za resne jezikoslovne analize niso dovolj relevantni , zato se za določanje povezovalne moči elementov korpusa uporabljajo različni statistični izračuni ; za potrebe leksikologije in leksikografije največkrat vrednost MI. Kljub široki uporabnosti vrednosti MI v leksikografiji pa je bil ta rezultat že velikokrat tudi kritiziran , saj je zaradi premajhnega upoštevanja absolutne pogostnosti korpusnega elementa neprimeren za merjenje vzajemne odvisnosti tistih elementov , ki imajo v korpusu zelo nizko pogostnost , hkrati pa je problematičen pri korpusu , ki ni v celoti lematiziran , saj nelematizirani korpusni elementi pokvarijo razmerja med statističnimi vrednostmi različnic in pojavnic .
Večina referenčnih korpusov , predvsem komercialnih , danes ob dostopu do korpusa ponuja tudi svoja orodja za analizo .
Velikokrat so prilagojena jeziku korpusa , torej jezikovno odvisna , lahko pa se pojavijo tudi jezikovno neodvisna , samo delno prilagojena posameznemu jeziku .
Pri obdelavi tako pridobljenih podatkov je možno urejanje konkordančnega niza , uporaba sita pri konkordančnem nizu ter statistična obdelava podatkov ( pogostnost , MI , MI3 ) ; izbrani podatki se lahko s pomočjo ASP32 tudi hranijo .
4.1 Primerjava liste besed korpusa FIDA in obstoječih jezikovnih opisov razkriva jezikovne spremembe na ravni besedišča slovenskega jezika ; korpusna analiza izkazuje izjemno jezikovno dinamiko na ravni poimenovanj , saj se pojavlja vrsta novih , tako eno - kot večbesednih , hkrato pa se dinamično spreminjajo tui pomenska polja že obstoječih .
4.2 S pomočjo korpusa lahko sledimo tudi postopnemu umeščanju posameznega jezikovnega elementa v jezik .
Korpus nam tako pokaže odzivnost slovenskega jezika ob soočanju npr. z visoko razvitimi tehnologijami , ki v vse neangleške jezike skupaj s predmetnostjo prinašajo tudi izraz zanjo ; ob tem pa razkriva tudi tiste dele jezikovnega sistema , ki so ob stiku z angleškimi poimenovanji najbolj občutljivi .
Za slovenščino lahko rečemo , da uporabniki takrat , ko nova poimenovanja prinašajo ustrezno predstavo o predmetnosti , ta sprejemajo konstruktivno .
5 V današnji družbi znanja se načini ustvarjanja in prenašanja znanja ter intelektualnih veščin oblikujejo v demokratičnem dialogu med ustvarjalci vedenja in tistimi , ki to vedenje potrebujejo .
Tudi delo s korpusi je usmerjeno izrazito uporabniško in v tako usmerjenih opisih jezika in njegovega delovanja se oblikuje tudi novi strokovni diskurz , ki se v jezikoslovju sopostavlja tradicionalnemu .
Novi strokovni diskurz , ki je lasten korpusnemu jezikoslovju , je odprt za dialog , hkrati pa tudi nenehno izpostavljen presoji uporabnikov jezikovnega znanja .
Terminologija Terminološka veda in računalniško podprta terminografija Kazalo vsebine
Predgovor 4 1 Uvod 6 1.1 Splošno in strokovno v jeziku 6 1.2 Razmerje med strokovnim in splošnim jezikom 7 1.3 Predmet terminološke vede 10 1.4 Temeljne razlike med terminologijo in leksikologijo 12 2 Pojmi in poimenovanja 14 2.1 Pojmovno načelo 14 2.2 Razmerja med pojmi 19 2.2.1 Hierarhična razmerja 19 2.2.2 Strokovno specifična razmerja 21 2.3 Pojmi v medjezikovnih stikih 22 2.4 Terminologija in semantika : od slovarja do ontologije 23 3 Prepoznavanje in opis terminološkosti 25 3.1 Klasične in pragmatske definicije termina 25 3.2 Besedilni pristopi k terminološkosti 25 3.3 Oblika terminov 27 3.4 Terminološke variacije 29 3.5 Terminološkost s stališča uporabnikov 32 4 Terminotvorje 36 4.1 Prevzemanje 36 4.1.1 Izlastnoimensko izrazje 38 4.1.2 Kalkiranje 38 4.2 Tvorjenje novih poimenovanj v okviru lastnega jezika 39 4.3 Prevajanje kot terminotvorna dejavnost 40 5.
Terminografija 42 5.1 Terminografske dejavnosti na Slovenskem 42 5.2 Struktura terminografskega vnosa 44 5.3 Definicije in razlage pojmov 47 5.4 Terminografija za prevajalske namene 48 6 Standardizacija terminoloških virov 51 6.1 Mednarodni terminološki standardi 51 6.2 Standardizacija v Sloveniji 55 7 Računalniško podprta terminografija 57 7.1 Gradnja specializiranih korpusov 57 7.1.1 Vrste korpusov 57 7.1.2 Reprezentativnost 59 7.1.3 Homogenost 62 7.1.4 WebBootCaT 63 7.2 Obdelava korpusa 65 7.2.1 Označevanje 65 7.2.2 Obdelava korpusa z orodjem Wordsmith Tools 66 7.2.2.1 Besedni seznami 67 7.2.2.2 Konkordance 72 7.2.2.3 Ključne besede 73 7.3 Samodejno luščenje terminologije 74 7.3.1 Statistični pristopi k iskanju terminov 76 7.3.1.1 TF-IDF 77 7.3.1.2 Drugi indikatorji terminološkosti 77 7.3.1.3 Statistike za luščenje kolokacij 78 7.3.2 Luščenje terminov s pomočjo oblikoskladenjskih vzorcev 81 7.3.3 Iskanje prevodnih ustreznic 83 8.
S terminologijo se ukvarjajo različne skupine uporabnikov , na eni strani gotovo strokovnjaki v okviru sporočanja specializiranih vsebin , prevajalci in tolmači ob njihovem prevajanju , terminografi ob gradnji terminoloških slovarjev in baz , lektorji in redaktorji v različnih fazah revizije besedila , dokumentalisti in bibliotekarji ob klasifikaciji gradiva , računalničarji ob razvijanju sistemov za poizvedovanje po besedilnih zbirkah in tehnologij znanja .
Pri tem je posebna pozornost namenjena večjezikovnemu vidiku , s katerega terminologijo obravnavajo prevajalci in terminografi večjezikovnih terminoloških zbirk za prevajalske namene .
Programska orodja , spletne strani in računalniške tehnologije se navadno povsem zamenjajo vsakih nekaj let , a vsaj osnovna načela bodo - upajmo - uporabniku koristna .
Pričujoča knjiga želi tako s teoretičnimi izhodišči in praktičnimi napotki spodbuditi razvoj predvsem v tej smeri .
1.1 Splošno in strokovno v jeziku Jezikovna komunikacija opravlja številne sporočevalne naloge in največkrat gre pri tem za sporočanje o določeni temi ali področju .
Takorekoč vsaka tema v komunikaciji pomeni , da bomo pri govorjenju ali pisanju o njej uporabili izraze , povezane s to temo .
Besedilna vrsta Pri nekaterih besedilnih vrstah intuitivno pričakujemo več specializiranega izrazja kot pri drugih .
V znanstvenem članku bomo navadno našli več specializiranih terminov kot v novinarskem prispevku o isti temi , objavljenem v dnevnem časopisu .
Termini so namreč pretežno besede in besedne zveze , zato je ukvarjanje z oblikoslovnimi ali etimološkimi lastnostmi terminov v resnici ukvarjanje s temi lastnostmi besed .
1.2 Razmerje med strokovnim in splošnim jezikom Čeprav imamo na voljo precej intuitivnih kriterijev , ki nam pomagajo razlikovati med strokovnim in splošnim jezikom , je ta dva pojma težko nedvoumno opredeliti .
V slovenščini nam dela težave že izraz strokovni jezik , ki ga razumemo kot jezik stroke , se pravi jezik neke uveljavljene , posebno znanje zahtevajoče človeške dejavnosti.1 Po tej razmeroma široki definiciji stroke bi mednje sicer lahko šteli tudi športne in druge prostočasne dejavnosti , še vedno pa bi težko našli ljudi , ki bi govorili o stroki balinanja ali likanja .
Mnogih človeških dejavnosti torej ne moremo uvrščati med stroke , pa vendar tudi te dejavnosti uporabljajo svojo enoznačno terminologijo ali svoj žargon .
V angleščini za strokovni jezik ni pravega prevoda , v rabi pa sta izraza sublanguage in special language ; oba brez sporne navezave na stroko in bolj neobremenjena z uveljavljenostjo področja , na katerem se uporabljata .
Splošni in strokovni jezik se po tej shemi nahajata na ravni resničnosti , saj sta udejanjena v diskurzu .
Leksikalne enote so na drugi strani po svoji esenci abstraktne in šele raba jih umesti v splošni ali strokovni diskurz .
Kljub tej raznovrstnosti pa v vsakem jeziku obstaja skupni nabor enot in pravil , ki jih poznajo vsi govorci .
Ta nabor naj bi sestavljal splošni jezik , enote splošnega jezika pa se uporabljajo pretežno v nezaznamovanih situacijah .
Pri zgornjem širokem pojmovanju strokovnega jezika pa je tudi samostojnost -- ali sam obstoj -- splošnega jezika na majavih nogah , saj , kot piše Klinar ( 2004 : 103 ) , » vse človeške dejavnosti nazadnje porabijo vse besedišče jezika , [ in ] smo v skušnjavi , da bomo vse besedišče -- razen funkcionalnih besed ( ali v jezikoslovju nemara celo te ?
Strokovni jezik nikakor ni jasno zamejena podmnožica , temveč dopušča številne različice glede na rabo in komunikacijsko situacijo .
Spremenljivi parametri pri tem so : a. stopnja abstrakcije , ki je odvisna od strokovnega področja , sprejemnikov informacij in govorčevega namena , b. komunikativni cilj , ki določa različico besedilne vrste , c. geografski , zgodovinski ali socialni dialekt , d. osebni stil .
7.
Strokovni jeziki so podsestavi v okviru jezika kot takega .
Pri tem se delno prekrivajo s splošnim jezikom , in sicer ne le tako , da prevzemajo večino njegovih pravil , ampak med njima neprestano teče obojestranska izmenjava jezikovnih enot in konvencij .
Vzemimo za primer spodnji izsek iz besedila Živinozdravstvo.2 Gre brez dvoma za besedilo , ki je namenjeno kmetom in živinorejcem v najširšem smislu , pri čemer je iz besedila razvidna časovna -- in s tem tudi kulturna -- oddaljenost od današnjega časa .
Rejci konj nedvomno uporabljajo strokovno terminologijo , v spodnjem besedilu denimo celak , bencelj , krona .
Raven specializiranosti je prilagojena tipu diskurza , se pravi komunikaciji strokovnjak -- polstrokovnjak ali laik .
Pojmi niso le predmetnosti določenega področja , ampak tudi procesi , lastnosti , dejavnosti ali načini .
Danes imamo za večino strokovnih področij na voljo tudi pisna gradiva v elektronski obliki , ki omogočajo lažje in hitrejše zbiranje terminoloških podatkov .
Kadar za isti pojem obstaja več izrazov , je primerno in zaželeno , da terminograf poda priporočila glede prednostne rabe .
Tako korpusna terminologija lahko pomaga ugotavljati , kakšna je dejanska jezikovna raba na strokovnem področju in za to ponuja tudi statistične dokaze , a za udejanjanje predpisovalne vloge je te vsekakor potrebno še kvalitativno ovrednotiti .
S tem pa korpusna terminologija premošča številne vrzeli , ki jih klasični terminološki vedi danes lahko očitamo .
Predvsem tu mislimo na nezmožnost terminološke vede , da bi v naglo spreminjajočem se svetu globalnega tehnološkega razvoja še izpolnjevala zgoraj navedene naloge , še posebej pa na njeno neodzivnost na globoke spremembe v načinih in medijih strokovne komunikacije .
Nadalje so termini včasih prepoznavni že po svoji obliki in zgradbi , saj vključujejo več tujejezičnega gradiva in lahko vsebujejo tudi numerične znake , simbole in druge neabecedne sestavine .
Poleg tega naj bi bila večbesedna terminološka enota ustaljena in čimbolj nespremenljiva , medtem ko je pri večbesednih leksikalnih enotah uporabniku prepuščeno več svobode .
Glavne razlike med terminološkimi in leksikalnimi enotami povzema Tabela 1.
terminološka enota leksikalna enota • ena od možnih reprezentacij pojma • en pomen , v besedilu in v stroki • pomensko določena z definicijo • lahko vsebuje tudi numerične znake , simbole , logotipe itd. • se loči od neterminoloških enot po specializirani referenčnosti • več možnih pomenov ( konotativni vs .
denotativni ) • ekspresivna raba • pomensko opisana v splošnem slovarju ; pomensko polje se spreminja v odvisnosti od sobesedila • oblikovno svobodnejša • načeloma vsebuje zgolj besedni material Tabela 1 : Razlike med terminološkimi in leksikalnimi enotami Zdaj ko smo primerno poudarili razliko med terminom in leksemom , moramo prej povedano postaviti v realnejšo luč .
Termini so večinoma leksemi , zato se pri obeh vedah slej ko prej ukvarjamo z besedami in besednimi zvezami .
Za ponazarjanje kompleksnih pomenskih razmerij je naravni jezik pogosto precej omejeno orodje , zato se na številnih strokovnih področjih pojmovna polja na nejezikovni način predstavljajo s pomočjo slik , grafov , simbolov , shem ipd. ( Galinski in Picht 1995 ) .
Slika 2 : Pojmovno polje okrog kožnega malignoma Zgornji primer pojmovnega polja , ki se konstituira okrog pojma kožni malignom na podlagi znanstvenega besedila ( Bartenjev in dr. 2006 ) , izkazuje različna pojmovna razmerja , pogojena z značilnostmi in vzročno-posledičnimi povezavami na tem strokovnem področju .
Druga razmerja na zgornji sliki pa niso hierarhična v smislu pod - ali nadpomenskosti , ampak tematska , na primer vzročno ( izpostavljanje soncu povzroča kožni malignom ) , terapevtsko ( obsevanje z ionizirajočimi žarki je oblika zdravljenja kožnega malignoma ) , simptomatsko ( ulceracija je eden od simptomov pri rasti bazalnoceličnega karcinoma ) ali subjektno ( bolnik zboli za kožnim malignomom ) .
2.1 Pojmovno načelo Kot rečeno je pojem miselna enota , zato je njegovo jezikovno poimenovanje ali termin le neke vrste nalepka , ki mu jo priredimo .
Če podamo primer , se na področju vojaštva v angleškem jeziku uporablja glagol dock za pristajanje plovila in glagol land za pristajanje zračnega plovila .
Oba pojma , se pravi miselni predstavi , obstajata tudi v slovenščini , vendar razlikovanja pri poimenovanju ni ; za oba pojma se uporablja izraz pristajati .
En pojem ima kot abstraktna miselna enota lahko torej le en pomen , ki pa mu seveda lahko pripišemo več poimenovanj .
Slika 3 je zaslonski posnetek pojmovnega vnosa v Evrotermu , kjer sta za slovenski jezik navedeni dve konkurenčni poimenovanji za pojem aneks / priloga , raba pa je priporočena s kvalifikatorjem .
Slika 4 kaže primer iz ene najobsežnejših terminoloških baz na svetu , pojmovnega sistema za področje medicine UMLS ( Unified Medical Language System ) , ki združuje različne medicinske nomenklature in vire v prepleteno semantično omrežje .
Pri danem primeru je iskani niz HIV-1 privedel do pojma z oznako CUI ( Concept Unique Identifier ) C0019704 , ki ima v angleščini 26 poimenovanj .
Primer ponazarja pojmovno načelo v praksi , kjer je osnovni element pojem ( concept ) , ki ustreza enemu pomenu .
Sinonimija ali istoimenskost na ravni pojmov ne more obstajati , saj vsak pojem označuje svojo miselno enoto , na ravni terminov pa namesto o sinonimih govorimo o različnih poimenovanjih , ki jih skušamo na tak ali drugačen način tudi ovrednotiti s kvalifikatorji .
V praksi so vzporedna poimenovanja ali dvojnice , pa tudi terminološke variacije , neizogiben in nikakor ne nezaželen pojav .
" » Življenje " terminov je tesno povezano z evolucijo strokovnih področij , ki jim pripadajo ( Jaquemin 2001:3 ) , zato je normiranje terminologije v obliki klasičnih , tiskanih terminoloških zbirk vse manj smiselna dejavnost .
Njegova raziskava , ki je sicer temeljila na nekoliko skromnem besedilnem vzorcu , je potrdila izhodiščno hipotezo , da so t. i. eksaktne vede ( hard sciences ) pretežno darovalke , manj oprijemljive vede ( soft sciences ) pa prejemnice .
V resnici se pojmi tako znotraj strok kot v miselnih svetovih uporabnikov neprestano spreminjajo .
Na področju medicine je nešteto pojmov , ki so lahko z enega vidika simptomi , uporabljeni v diagnostičnem postopku , z drugega pa bolezenska stanja , ki zahtevajo terapevtske ukrepe .
Pojmovni sistemi in z njimi povezana ( večjezična ) poimenovanja nam danes služijo predvsem v okviru tehnologij znanja , kjer lahko sodobna terminološka veda ponuja svoj instrumentarij za učinkovitejšo gradnjo modelov znanja .
Čeprav se utegne medtem razvoj obrniti še v kako nesluteno smer , pa pojmovni sistemi in terminološko modeliranje svojo moč pokažejo šele v okviru določene ( inteligentne ) aplikacije.3 2.2 Razmerja med pojmi Večina znanstvenikov se strinja , da je znanje človekova stvaritev .
S pomenskimi razmerji nove predmetnosti navezujemo na znanje , ki ga že imamo , in tako ustvarjamo novo znanje .
Pomenska razmerja so zato pomemben del terminoloških virov , ki klasični zbirki na tak ali drugačen način predstavljenih izrazov določenega področja dodajajo novo razsežnost v smeri baze znanja .
Brez povezav med pojmi je terminološka baza zbirka samostojnih drobcev predvsem jezikoslovnih podatkov .
Z vključevanjem pojmovnih razmerij začnejo ti drobci tvoriti pojmovne mreže in omrežja , z ustrezno formalizacijo vsebovanih podatkov pa se klasična terminološka zbirka tako približa večnamenskemu semantičnemu leksikonu ali ontologiji , primerni za uporabo v semantičnih aplikacijah .
2.2.1 Hierarhična razmerja Pojmovna polja se ustvarjajo z razmerji med pojmi .
Čeprav so hierarhična razmerja na nekaterih področjih temeljnega pomena za urejanje znanja , denimo na področju biologije za razvrščanje organizmov v taksonomijo živih bitij ali na področju tehnike za opisovanje naprav in njihovih sestavnih delov , pa se na številnih drugih strokovnih področjih izkaže , da je za urejanje pojmov v pojmovne sisteme nujno opredeliti tudi vidik oziroma kriterij , po katerem razvrščamo .
Angleški WordNet je prosto dostopen na spletu za brskanje , celotno bazo s pregledovalnikom vred pa si lahko tudi prenesemo na lastni računalnik .
V besedilih se hierarhična razmerja izražajo z določenimi ustaljenimi besednimi zvezami , ki bralcu pomagajo miselno razvrščati informacije in si ustvarjati celostno sliko o predstavljenem predmetnostnem področju .
Z vidika metabesedilne organizacije tako lahko prepoznamo tiste stalne dele besedil , s pomočjo katerih besedilo organiziramo , klasificiramo , interpretiramo oz. ocenjujemo propozicijsko vsebino besedila ali se nanjo odzivamo , vendar k njej ne dodajamo kaj novega ( Pisanski 2002 : 184 ) .
Na podlagi podkorpusa naravoslovno-tehničnih besedil v korpusu FIDAplus in zgledov v tuji literaturi ( Meyer idr. ; 1999 ; Pearson 1998 : 174-175 ) so bili za slovenščino ugotovljeni nekateri tovrstni besedilni elementi ( Gorjanc in Vintar 2007 ) : • povezovanje alternativnih poimenovanj za isti pojem : ali , ali tudi , imenujemo ( tudi ) , imenovan tudi , sinonim , je sinonim za , znan tudi kot , znan tudi pod imenom , je poimenovan , nosi ime ...
• povezovanje pojmov v razmerju del - celota : ima , ima * dele , je iz , je sestavljen iz , vsebuje ...
Spodnji primer je konkordanca iskalnega pogoja je _ vrsta z omejitvijo na naravoslovnotehnična besedila korpusa Fidaplus ( Slika 5 ) .
Slika 5 : Konkordanca je _ vrsta iz naravoslovnotehničnih besedil korpusa Fidaplus 2.2.2 Strokovno specifična razmerja Na vseh predmetnih področjih pa se med pojmi vzpostavljajo tudi razmerja , ki niso hierarhična .
Takšna tematska razmerja opredeljujejo odnose med pojmi , specifične za določeno strokovno področje .
Ta razmerja so nato uporabljena za povezovanje 134 semantičnih razredov , ki jih prav tako opredeljuje UMLS , na primer : Antibiotic causes Disease or Syndrome Neoplastic Process associated _ with Mental or Behavioral Dysfunction Hormone disrupts Gene or Genome Na ta način so vsi medicinski pojmi , vsebovani v večjezičnem metatezavru UMLS , del semantičnega omrežja .
S pomočjo računalniškega označevanja strokovnih besedil s koncepti in semantičnimi razredi UMLS je bilo zgrajenih že precej naprednih aplikacij , sprva le za poizvedovanje in iskanje ustreznih dokumentov v zbirki Medline , nato pa tudi za odkrivanje novega znanja .
Strokovno specifično razmerje je asimetrični in nehierarhični odnos med najmanj dvema paroma pojmov na določenem strokovnem področju .
Z vprašanjem , kako se naše zaznavanje okolja odraža v jeziku in kako - obratno - naš jezikovni sistem vnaprej oblikuje naše miselne strukture in dojemanje sveta , se je ukvarjala množica jezikoslovcev , filozofov , psihologov in biologov skozi stoletja .
Novi pojmi se prenašajo iz jezika v jezik prek svojih poimenovanj , zato ta sooblikujejo tvorjenje miselne enote .
Kadar je pomensko pokrivanje le delno oziroma gre za večje razlike v pojmovnih strukturah , je sicer še vedno naloga terminologije , da te razlike primerno opiše in poišče ravni ustrezanja , vendar pa se nam v takšnih situacijah pogosto zazdeva , da je razmerje med pojmom in poimenovanjem precej bolj intimno , kot ga razlaga pojmovno načelo .
Za primer vzemimo Felberjevo shemo delitve zračnih plovil , iz katere je razvidno , da v angleškem pojmovnem sistemu aeroplane ni nadpomenka pojma glider , medtem ko v slovenščini jadralno letalo vsekakor uvrščamo med letala .
Semantika pri svojem ukvarjanju s pomeni ne dela razlik med splošnimi in specializiranimi leksemi , ker pa so slednji pogosto enopomenski , z vidika semantike niso najbolj zanimivi za raziskovanje .
Razlika med semantiko in terminologijo je tudi v smeri pristopanja k urejanju pomenov .
Prva pretežno izhaja iz leksemov in definira pomenska razmerja na podlagi leksikaliziranih enot , se pravi obstoječih jezikovnih prvin .
Druga pa , vsaj teoretično , izhaja iz pojmov določene stroke in se v prvi fazi ukvarja z razmerji med njimi , nato pa na tako pridobljeni model področja pripenja jezikovna poimenovanja ( in druge reprezentacije ) .
Ko pa govorimo o strukturiranju znanja , ne moremo mimo ontologij .
Ontologija je teoretično jezikovno neodvisna , čeprav se za reprezentacijo pojmov in razmerij v njej uporablja naravni jezik .
Če bo namreč semantični splet bodočnosti ponujal celo vrsto inteligentnih novih storitev , temelječih na znanju , formaliziranem v ontologijah , nam grozi , da nas bo globalni razvoj tehnologij znanja na široko zaobšel .
3 Prepoznavanje in opis terminološkosti Osnovni problem vsakega ukvarjanja s terminologijo , pa najsi gre za gradnjo terminološke baze ali slovarja , klasifikacijo strokovnega besedila ali strokovni prevod , je odločanje o tem , kaj je termin in kaj ne .
V nadaljevanju se tako posvetimo različnim teoretskim pristopom k definiciji termina , nato spregovorimo o oblikah terminov ter njihovih variacijah , nazadnje pa še o uporabniških vidikih terminološkosti .
Resničnost strokovnih jezikov je vse kaj drugega .
Obstoječi pojmi se spreminjajo , nastajajo novi , njihova poimenovanja pa zaostajajo za samo predmetnostjo .
Poimenovanja za nove pojme se pogosto delno prekrivajo s starimi in nikakor ne drži , da so razmerja med njimi vselej jasno opredeljena .
Ker strokovno izrazje ni omejeno zgolj na strokovni in znanstveni diskurz , ampak se delno prekriva s splošnim jezikom in z drugimi področji , je predpisovalno načelo , ki naj bi zagotavljalo enoznačnost , nemogoče udejanjati .
V prvo skupino bi torej uvrstili termine , ki sodijo v stroko , ki jo besedilo obravnava , v drugo tiste izraze , ki jih sicer zaznavamo kot strokovne , a si jih delijo številne stroke , in v zadnjo besede splošnega , nestrokovnega jezika .
Če na primer srečamo izraz reševanje problema ali sklepanje v besedilu , ki govori o gradnji ekspertnih sistemov z umetno inteligenco , ju lahko na podlagi njune specifične reference uvrstimo med strokovno specifične izraze .
Splošnejše strokovne izraze , kot so sistem , kontrola , program pa bi po tej shemi uvrstili v drugo skupino .
Kot pokaže Pearsonova ( Pearson 1998 ) , je ta pristop intuitivno sicer naraven , saj izhaja iz besedil , vendar je za potrebe utemeljenega razlikovanja med termini in netermini neuporaben , saj lahko v vmesno skupino splošnega strokovnega izrazja pospravimo vse mejne primere , ne da bi dejansko ugotovili stopnjo specifične reference oziroma terminološkosti .
Kriterij razvrščanja je nujno subjektiven , saj temelji na ( ne ) poznavanju določenih izrazov - nemogoče je namreč jasno ugotoviti , kaj je splošno in kaj ne .
Terminološkost je značilnost določenih komunikacijskih situacij , zato je analiza te situacije ključna postavka pri ugotavljanju , ali je jezik določenega diskurza terminološki ali ne .
Najbolj tipične situacije , kjer se pojavljajo termini , so komunikacija strokovnjak - strokovnjak , strokovnjak - strokovno poučeni , strokovnjak - strokovno nepoučeni , učenec - učitelj , pri čemer ima vsak diskurz svoje značilnosti glede rabe terminologije .
Nenazadnje na našo presojo , ali je neko jezikovno sredstvo termin ali ne , precej vpliva tudi poznanost oziroma razširjenost izraza , ali z drugimi besedami , delež oseb v celotni populaciji nekega jezika , ki jim je izraz poznan .
Ta kriterij je sicer izrazito subjektiven , po drugi strani pa izrazito intuitiven , kar pomeni , da ga v okviru svojega jezikovnega čuta lahko uporablja prav vsakdo , brez kakršnih koli znanj o načelih terminologije .
Tipologija krajšav je povzeta po Pravilih Slovenskega pravopisa ( Toporišič in dr. 2003 ) , členi 1020-1025.
Večina terminov je samostalniških , se pravi so sestavljeni bodisi iz enega samostalnika bodisi iz besedne zveze , v kateri je jedro samostalnik .
Najpogostejši besednovrstni vzorec v Evrotermu je P S , med tipične terminološke vzorce v slovenščini pa prištevamo še S Sg , P P S , P S Sg , S D S in druge .
Vzorec Primeri P S aromatična snov , fiskalni agent , človekove pravice ; brezžična aplikacija , protivlomna naprava S S emisija snovi , agent ladje , stalež govedi ; vir podatkov , zbirka podatkov S S S odbor načelnikov štabov ; način stanje pripravljenosti P S S človekove pravice žensk ; dosežena raven storitve S P S stalež lovljenih rib ; obdelava naravnega jezika S D S odpravnina za vdovo ( ca ) , prošnja za azil ; izobraževanje na daljavo P P S govorno podprta aplikacija , izvajalna podatkovna shramba , predmetno usmerjen jezik S D S S Odbor o gibanju blaga S P S S določitev kemične sestave snovi Tabela 3 : Besednovrstna sestava slovenskih terminov
Še posebej v pravni in politični terminologiji so lahko termini dolgi tudi po deset in več besed , denimo kadar gre za poimenovanja različnih teles ( npr. Odbor Evropskih skupnosti za bombažno in sorodno industrijo ( Eurocoton ) , Odbor pristojnih organov za Direktivo o uporabi genetsko spremenjenih organizmov v zaprtih sistemih , Agencija ZN za pomoč in zaposlovanje palestinskih beguncev na Bližnjem vzhodu ) .
Ker si tudi pojme zamišljamo kot statične predmetnosti , nam glagoli kot poimenovanja za pojme ne pridejo ravno prvi na misel .
Če se ozremo naokoli , glagole vsebuje precej terminografskih del novejšega časa , tako denimo Vojaški slovar ( Korošec 1998 ) , iSlovar ( Puc in Erjavec 2006 ) , Planinski terminološki slovar ( Klinar 2004 ) in drugi .
To pomeni , da se večbesedni strokovni izrazi v besedilih obnašajo podobno kot večbesedne fraze splošnega jezika in tako prehajajo skozi različne postopke oblikoslovnih , skladenjskih in pomenskih transformacij .
Z besedilno motiviranimi metodami pa se terminološke variacije postavljajo v ospredje , saj jih na eni strani lažje odkrivamo - nenazadnje nam že običajna konkordanca jedra terminološke zveze razkrije vse njene variacije - , na drugi strani pa nam variabilnost terminologije otežuje samodejno prepoznavanje v programskih aplikacijah za luščenje izrazja .
Variabilnost izrazja se razlikuje od področja do področja , odvisna pa je tudi od besedilne vrste in registra .
Uveljavljena strokovna področja , kjer je izrazje v veliki meri standardizirano in vsebovano v normativnih terminoloških priročnikih , naj bi bila manj nagnjena k variacijam , čeprav konkretni primeri pogosto tudi tu kažejo drugače .
Morda je na prvi pogled videti , da bi takih pravil potrebovali le nekaj , pa bi že zajeli velik del variacij , vendar stvar ni tako enostavna .
Transformacijska pravila so zato formalizirana in prirejena slovnična pravila , ki opisujejo teoretično možne strukturne vzorce določenega jezika .
Če imamo na primer za angleščino definirano pravilo , da je termine oblike SZ1 + of + SZ2 kjer je SZ samostalniška zveza , možno pretvoriti v kanonično obliko SZ2 SZ1 nam sistem lahko samodejno predlaga pretvorbo replacement of the steam generator v steam generator replacement .
Naslednjih nekaj primerov je iz korpusa besedil s področja jedrske tehnike , kjer v terminološkem gnezdu ob besedi reaktor zasledimo naslednje variacije : reaktorski hladilni sistem sistem reaktorskega hladila sistem reaktorskega hladiva cev reaktorskega hladiva cev sistema reaktorskega hladila cevovod reaktorskega hladilnega sistema cevni vod reaktorskega hladilnega sistema reaktorska stavba stavba reaktorja reaktorska zgradba
Problematično je tudi uvrščanje pomensko sorodnih terminov med variacije , še posebej glede na primer language comprehension in speech comprehension , ki ga navaja Jacquemin .
Primer pomenske variacije iz našega korpusa bi lahko bil reaktorska stavba in reaktorska zgradba .
Terminološka variacija je tako v tem primeru posledica morfemske variacije , ki se prenese na termin .
Ker je podobne pare vzporednih in potencialno sinonimnih morfemov mogoče zaslediti tudi v drugih jezikih , na primer - ic in - ical v angleščini , se nam zdi smiselno ta tip variacije obravnavati kot posebno kategorijo .
Tako se večbesedni termin ob prvi omembi pojavi v kanonični obliki , na primer dokumentacija za pridobitev gradbenega dovoljenja , ob nadaljnjih omembah pa v skrajšani različici gradbena dokumentacija .
Očitno je , da se tipi variacij med seboj prekrivajo in da se pogosto zgodi transformacija na številnih ravneh hkrati .
Pri avtomatski obdelavi , ki naj bi vključevala razpoznavanje , morda pa tudi predvidevanje terminov in njihovih variacij , potrebujemo natančna transformacijska pravila , ki vključujejo polno skladenjsko analizo dane strukture ter slovnična pravila za njene možne pretvorbe .
Večina trenutno dostopnih leksikonov slovenskih besednih oblik navaja zgolj oblike in oznake iste paradigme , se pravi v okviru ene besedne vrste , ne povezuje pa med seboj besedotvorno sorodnih lem .
3.5 Terminološkost s stališča uporabnikov Podobno kot se jezik ne tiče le jezikoslovcev temveč vseh njegovih uporabnikov , je tudi terminologija področje , s katerim nimajo opraviti le terminologi .
Strokovno izrazje se pogosto prepleta s splošnim jezikom in se tako uporablja tudi pri nestrokovnih vrstah komunikacije , vendar takšna raba ni v središču naše pozornosti .
Opredelimo lahko naslednje skupine uporabnikov terminologije : Strokovnjaki Ti potrebujejo strokovno izrazje pri svojem delu za sporočanje strokovnih vsebin .
Neposredna posledica tega je , da so si pojmovanja vprašanja , kaj je termin , precej nasprotujoča , saj vsaka skupina terminološki inventar obravnava drugače .
Zanje je gospodarnost izrazja pogosto pomembnejša od jezikovne neoporečnosti , zato se lažje sprijaznijo s prevzetimi izrazi ali akronimi , če so ti bolj funkcionalni .
Po drugi strani strokovnjaki številne besede splošnega jezika uporabljajo s specifičnim pomenom , ki ga ostale skupine pri svojem delu zlahka spregledajo .
Pri odločanju , kateri izrazi najbolje povzamejo besedilo , je glavni kriterij učinkovitost v iskalni situaciji ; izbrati je torej treba besede in fraze , ki jih bo iskalec najverjetneje uporabil za dostopanje do v besedilu vsebovanih informacij .
Poznavanje prevodnih ustreznic samih terminov zanje ne zadostuje , saj morajo za ustrezen prevod prenesti pomen v celoti .
Po drugi strani prevajalcev ne zanima tisti del izrazja , ki je splošno znan in pri katerem ne pričakujejo prevajalskih težav .
To odražajo tudi številni terminološki slovarji in priročniki , ki so zato za prevajalce bistveno manj uporabni .
Razlike med temi štirimi skupinami zelo nazorno pokaže raziskava , ki jo je izvedla Estopà Bagot ( 1999 ) v okviru svoje doktorske disertacije .
Da bi empirično ugotovila , kako vsaka od omenjenih uporabniških skupin pojmuje termine , je za vsako zbrala tri strokovno usposobljene predstavnike , ki so dobili nalogo , da v izbranem besedilu s področja medicine označijo strokovne izraze .
• Strokovnjaki s področja medicine : " Označite vse specializirane leksikalne enote , ki po vašem mnenju označujejo pojme , specifične za medicino .
" • Dokumentalisti : " Označite vse specializirane leksikalne enote , ki bi lahko služile za klasifikacijo oziroma indeksacijo dokumenta .
" • Prevajalci : " Označite vse specializirane leksikalne enote , ki po vašem mnenju otežujejo prevod besedila .
" • Terminografi : " Označite vse specializirane leksikalne enote , ki bi jih vključili v medicinski terminološki slovar .
" Rezultati preskusa so izredno zanimivi , saj se že število izbranih leksikalnih enot po skupinah močno razlikuje ( Slika 7 ) .
Tako največ izrazja izberejo terminografi , ki sicer niso področni strokovnjaki , vendar se jim zdi potencialno skoraj vsaka besedna zveza specifična za medicino .
Tako je morda tudi spodbudno , da se njihov izbor še v največji meri pokriva z izborom strokovnjakov .
Zanimiv podatek je morda še , da je ta skupina edina označevala tudi lastna imena , ki imajo pri iskanju dokumentov vsekakor precejšnjo vlogo , čeprav jih ne pojmujemo kot strokovne izraze .
Še najmanj izrazov so označili prevajalci .
Posebej poučna je ugotovitev , da je presečna množica vseh štirih skupin , tj. izrazi , ki so jih označile vse skupine , obsegala le 119 enot ali približno 10 odstotkov vseh označenih terminov .
Tu se že kar šokantno pokaže problematičnost definicije termina in neustreznost posplošujočih pristopov , ki ne upoštevajo uporabniškega vidika .
4 Terminotvorje Strokovna področja se spreminjajo in razvijajo , z novimi tehnologijami in znanji nastajajo nova , pa tudi na že uveljavljenih področjih se strokovno izrazje neprestano posodablja in dopolnjuje .
Nova poimenovanja nastajajo po različnih poteh , pomemben dejavnik pri tem pa je , ali gre za povsem novo predmetnost ali se tvori le poimenovanje v določenem jeziku pod vplivom že obstoječega poimenovanja v tujem jeziku .
Ta faza je lahko tako bežna , da zajema le govorno rabo , v pisno pa sposojenka niti ne pride , lahko pa seveda predstavlja tudi zaključno terminotvorno fazo , ko se sposojeni izraz usidra v jezik , se govorno prilagodi in tvori besedno družino .
Pri prevzemanju določenega izraza iz enega jezika v drugega gre skoraj vedno za neenakovredno razmerje med jezikom dajalcem in jezikom prejemnikom .
Tako je v današnjem času jezik dajalec največkrat angleščina , ker je angleškogovoreče območje sveta ekonomsko in kulturno privilegirano ter iz njega izhaja največ tehnoloških in drugih novosti .
Seveda je na določenih strokovnih področjih lahko tudi kak drug jezik v vlogi dominantnega dajalca .
Spodnja tabela kaže število zadetkov za besedo wellness in njene ( delno ) podomačene izpeljanke v korpusu FIDAplus .
wellness 1303 wellnes 117 welness 64 velnes 33 welnes 2 Če je motivacija za prevzem skoraj vedno leksikalna praznina , ki nastopi ob pojavu nove predmetnosti , pa so razlogi za ohranitev prevzete besede zelo raznoliki .
Načeloma namreč za večino strok lahko trdimo , da se trudijo uporabljati domače izrazje povsod , kjer je to mogoče , se pravi kadar obstaja primerna ustreznica .
Tudi za splošni jezik velja , da izrazi , ki so močno zaznamovani z izhodiščno kulturo , navadno ne dobijo slovenske ustreznice ( pizza , tofu , jazz , citroën , ...
blanket barje ) .
Številne prevzete besede iz angleščine , še posebej tiste s končnicami - ness , - ing ipd. , so nerodne že pri sklanjanju , še bolj pa pri tvorbi pridevniških izpeljank ( bodybuilding - bodybuildinški ?
Kaže torej , da od naštetih kriterijev nekateri ne vplivajo bistveno na ohranitev prevzete besede v jeziku , drugi - denimo dolžina - pa odločilno .
Takšni izrazi se pišejo z malo začetnico .
Po Odredbi o merskih enotah naj bi imele prednost v celoti poslovenjene oblike : herc , džul , njuten , paskal , vat itd. , vendar se raba v naravoslovnih znanostih pretežno drži citatnega zapisa .
Po drugi strani pa kalka sploh ne bomo opazili , če tujega izraza ne poznamo ali preprosto nismo pozorni ( več o tem Vidovič Muha 2000 in Logar 2005 ) .
Gorjanc ( 1996 : 252 ) opozarja , da je prav pri kalkiranju metaforičnega poimenovanja večkrat težko govoriti o jezikovnosistemski neustreznosti , kajti metaforična poimenovalna pot kot vir novih terminoloških poimenovanj zaradi skupne kulturne izkušnje lahko ustreza tudi jeziku prejemnika .
4.2 Tvorjenje novih poimenovanj v okviru lastnega jezika Nova poimenovanja se v slovenščini načeloma lahko tvorijo na tri načine ( prim. Logar 2005 : 213 ) : • z derivacijo oziroma tvorjenjem besed po jezikovnosistemskih pravilih ( npr. ogled - pred-ogled ) , • s pomenotvorjem oziroma dodajanjem pomena obstoječim besedam ( npr. mreža kot " priprava za ribolov " in mreža kot " več medsebojno povezanih računalnikov " ) , • s tvorjenjem stalnih besednih zvez ( npr. haptični + vmesnik - haptični vmesnik ) ; tu imamo v okviru terminologije v mislih le tvorjenje terminoloških besednih zvez , ne pa denimo splošnojezikovnih frazeoloških enot , kot je pljuniti v roke .
Za angleščino je denimo značilna konverzija oziroma prehod iz ene v drugo besedno vrsto brez obrazil ( npr. iz glagola assist prehod v samostalnik assist , ki na področju košarke pomeni podajo ali asistenco ) .
Ob navajanju možnih načinov za tvorjenje poimenovanj pa se postavlja vprašanje , v kolikšni meri so ti postopki sploh predmet terminološke vede .
Besede in besedne zveze se v strokovnih jezikih tvorijo po istih načelih , ki veljajo za jezikovni sistem nasploh , se pravi tudi za nastajanje novih besed in poimenovanj v okviru splošnega jezika .
Kageura ( 2002 : 48 ) zato predlaga , naj se terminološka teorija raje sploh ne ukvarja s potencialnimi načini terminotvorja , ampak naj se posveti predvsem svoji opisovalski vlogi .
Terminotvorne procese je tako mogoče opisovati le za posamezno strokovno področje , in sicer na podlagi kvantitativnih podatkov , pridobljenih iz reprezentativnega vzorčnega korpusa izbranega področja .
Ker ima vsako področje neko pojmovno strukturo , je edini možni način za opis poimenovalnih postopkov izhajanje iz pojmovnega sistema ter pojmovnih kategorij , opaženih na tem področju .
Izdelava pojmovnega sistema in opredelitev pojmovnih kategorij ter značilnosti terminov in njihovih sestavnih delov , 2. opredelitev opaženih razmerij med termini oziroma vzorcev za specifikacijo pojmov , 3. opis prednostnih kombinatoričnih vzorcev z uporabo pojmovnih kategorij , razmerij med termini in vzorcev za specifikacijo pojmov , pri čemer ta opis odraža strukturo pojmovnega sistema izbranega področja .
4.3 Prevajanje kot terminotvorna dejavnost V številnih strokah pri nas , ki se vsebinsko naslanjajo na tujejezične vire , tvorjenje slovenske terminologije poteka na pasiven način .
To v praksi pomeni , da sta najmočnejša kriterija pri izbiri poimenovanj funkcionalnost in gospodarnost , in dokler s strani uporabnikov terminologije ni podana pobuda po dejavnem iskanju slovenskih izrazov , ostaja prevzemanje prevladujoče terminotvorno načelo .
Omenjena pobuda se pogosto zgodi v obliki potrebe po prevodu obsežnejšega ali temeljnega dela v slovenščino , ob tem pa se - v idealnem primeru - vzpostavi tudi dialog med jezikoslovci / prevajalci in strokovnjaki z namenom oblikovanja ustreznejše , enotnejše in morda tudi bolj slovenske terminologije .
Prvi korak sekcije je bil nadomeščanje besedne družine latinskega izvora komunicirati , komuniciranje , komunikacija s slovenskimi sporočati , sporočanje , sporočilo .
Prevzete besede angleškega izvora , denimo feedback , input , output , referent , agenda-setting , gatekeeper , so prav tako dobile predlagane slovenske ustreznice : povratna informacija , vnos , iznos , nanašanec , prednostno tematiziranje , odbiratelj .
Bolj nazorno povedano so nameni terminografije naslednji : • zbiranje in izbiranje terminološkega gradiva • opisovanje terminologije , ki je trenutno v rabi na določenem področju ( deskriptivna terminografija ) , • predpisovanje terminologije za določeno področje ; svetovanje prednostnih terminov ( preskriptivna ali normativna terminografija ) , • predstavitev zbranih in obdelanih terminov v terminološki zbirki Končni cilj vsake terminografske dejavnosti je torej izdelava terminološke zbirke , pa najsi gre za obsežen terminološki slovar , ki pokriva izbrano stroko v celoti , ali za osebni glosarček , ki denimo nastane pri prevajanju določenega projekta .
V zadnjih letih je tam nastalo osem obsežnih terminografskih del , in sicer : Slovenski tehniški slovar ( 1. snopič A-B ) 2007 Geološki terminološki slovar 2006 Geografski terminološki slovar 2005 Gemološki terminološki slovar 2005 Planinski terminološki slovar 2002 Pravni terminološki slovar 1999 Gledališki terminološki slovar Čebelarski terminološki slovar Na isti ustanovi so v času pisanja v delu še Botanični terminološki slovar , Farmacevtski terminološki slovar , Slovar elektronike , elektrotehnike in informatike , Slovar kemijske tehnologije , Sodobni pravni slovar , Pravnozgodovinski slovar , Smučarski terminološki slovar , Terminološki slovar urejanja prostora , Umetnostnozgodovinski terminološki slovar , Slovar evropske zakonodaje in Veterinarski terminološki slovar .
Terminološki slovarji se tako oblikujejo v večletnem obdobju na terminoloških sejah .
Glavna pomanjkljivost ostaja v tem , da slovarski opis ne nastaja na podlagi analize sodobnega gradiva , temveč na podlagi jezikovne intuicije skupine avtorjev .
[...]
Pogled na spletišče Prosto dostopnih slovarjev na internetu8 nam naglo ponudi številne primere za vse te skupine : • s področja bančništva ponujajo glosarčke Abanka , NKBM , SKB , Raffeisen Krekova banka , s področja borzništva pa Ljubljanska borza in Poteza , nadalje objavlja Probanka pojasnila v zvezi z vrednostnimi papirji , nenazadnje pa tudi Microsoft na svojem strežniku objavlja prevode svojih izdelkov v 43 jezikih sveta , • med izobraževalnimi in akademskimi ustanovami , ki objavljajo svoje terminografske dosežke oziroma izdelke svojih študentov , je vodilna Filozofska fakulteta Univerze v Ljubljani z glosarčki astronomije , ekonomije , elektronskega poslovanja itd. , poleg nje pa so dejavne še druge članice UL , denimo Biotehniška fakulteta , kjer je nastal obsežen večjezični živalski geslovnik in Agrotezaver , ali Fakulteta za gradbeništvo in geodezijo z Geodetskim slovarjem in tezavrom , • pomembnejše terminografsko delo , ki je nastalo v prevajalskem okolju , je nedvomno Evroterm , sicer pa glosarčke javno objavljajo tudi prevajalske agencije ( BE-Consult ) , prevajalci , ki delujejo v okviru javnih ustanov ( Statistični urad RS ) in samostojni prevajalci ( Katja Benevol Gabrijelčič , Nada Vukadinovič ) .
Slovar zajema informacijsko izrazje , to je temeljno izrazje informatike , informacijske tehnologije in telekomunikacij , pa tudi posebnih področij , kot so baze podatkov , uporabniški vmesniki , poslovna informatika , objektna tehnologija , umetno zaznavanje in sociološki vidiki .
Vnešene izraze pregleduje in dopolnjuje uredniški odbor , zato so izrazi opremljeni z oznakami ureditve ( predlog , pregledano , strokovno pregledano in urejeno ) .
Čeprav je vzdrževanje takega slovarja potrebno precej truda in dela , bi si sorodnih slovarskih projektov gotovo želeli še več .
Cilji projekta so opredeliti osnovna terminološka in terminografska načela v skladu z mednarodnimi standardi , zbirati obstoječe terminografske zbirke in jih dati na razpolago v enovitem zapisu TBX , ponujati pretvorbo iz najbolj ustaljenih zapisov terminoloških podatkov v standard TBX in ponuditi spletni dostop do orodja za samodejno luščenje izrazja iz slovenskih strokovnih besedil .
5.2 Struktura terminografskega vnosa Obstoječi terminografski priročniki v tiskani obliki , ki jih zasledimo v slovenskem prostoru , so glede strukture gesel in obširnosti opisov tako raznoliki , da bi jih težko celovito predstavili .
Oznaka terminološki slovar se v najširšem smislu uporablja za zbirke strokovnih izrazov zelo različnih obsegov , ki so po opremljenosti iztočnic lahko povsem rudimentarne in vključujejo zgolj tujejezično ustreznico , lahko pa v opis dodajajo slovnične podatke , sorodne izraze , definicijo ali razlago , frazeološke podatke , vire , primere rabe , navedbo podpodročja , slikovne prikaze in drugo .
V praksi se pokaže , da pri mnogih slovarjih raba teh konvencij ni dosledna in se denimo s poševnim tiskom piše včasih razlaga , včasih pa sopomenka , poleg tega pa je pri večjem številu podatkovnih kategorij tak vnos neizbežno nepregleden , kot ponazarja spodnji primer .
Je ukrep za zagotovitev obdolženčeve navzočnosti v kazenskem postopku namesto pripora in predstavlja denar ali premoženje , ki ga obdolženec ali oseba , ki zanj jamči , položi na sodišču kot varščino .
V nadaljevanju pričujočega razdelka tako govorimo o terminoloških bazah , ki zaradi elektronske oblike in sodobnih programskih orodij , s katerimi jih gradimo , avtorju in / ali uporabniku omogočajo lastno zasnovo strukture terminološkega vnosa .
Pri uporabi določenih programskih orodij , denimo programa MultiTerm , pa tudi pri zapisovanju terminoloških baz v skladu s standardom TBX se pojavi zadrega , kajti čeprav so določeni podatki sicer vezani na pojem in tako teoretično jezikovno neodvisni , so vendarle zapisani v določenem jeziku .
Prav vsak terminografski projekt ima svoje značilnosti , zato je nemogoče podajati splošna priporočila za strukturo terminoloških baz .
Elementarnost , s čimer poimenujemo načelo , da se v vsako podatkovno kategorijo zapiše le en podatkovni element .
Če je polje za slovenski izraz denimo izpolnjeno z jezikovne tehnologije ( JT ) , smo vanj zapisali dva elementa , in sicer termin jezikovne tehnologije in njegov akronim na ravni sinonima JT. Pravilno bi bilo ta dva podatka vnesti v ločeni podatkovni polji .
Če baza vsebuje polje Slovnični podatki , kamor zapišemo m , pl kot oznako za moški spol in množino , smo v eni podatkovni kategoriji pomešali dve različni slovnični informaciji .
Podrobneje o metodah , ki nam pomagajo pri izdelavi geslovnika , govorimo v razdelku Error !
Podrobna opredelitev ciljnih uporabnikov vpliva na izbor vnosov ter način njihove predstavitve .
Ob reševanju te dileme se je koristno vprašati , ali poznamo " matično " področje spornega izraza in ali je prekrivanje med našim izbranim področjem ter matičnim področjem spornega izraza širše , tj. sistemsko , ali gre za tematsko ali kontekstno pogojeno povezavo gostujočega izraza z našim področjem .
Tu gre predvsem za spoštovanje pojmovnega načela tudi v tem smislu , da baza za določeni pojem vsebuje njegovo celotno pojmovno polje , ne pa da v geslovnik vključimo le eno od podpomenk , na ostale pa pozabimo .
5.3 Definicije in razlage pojmov Predstavitev pojma v terminološki bazi ali slovarju pogosto vsebuje tudi opredelitev njegovega pomenskega polja .
Tako se z ustrezno oblikovano definicijo obenem vzpostavlja pojmovni sistem terminološke zbirke in vnosov ni potrebno posebej opremljati s polji za nadpomenke in sorodne pojme .
Primer je iz Pojmovnika jedrske tehnike in varstva pred sevanji:10 kroglični reaktor - Reaktor , v katerem je del snovi ali vsa snov ( npr. gorivo , oplodna snov , moderator ) v obliki mirujočega kupa majhnih krogel , ki se dotikajo ena druge .
: carnivore Pflanze f. , tierfangende Pflanze f. lat .
5.4 Terminografija za prevajalske namene Pri prevajanju specializiranih besedil prevajalci posegajo po vseh razpoložljivih virih , zato je vsak terminološki slovar , če je le dovolj sodoben in kredibilen , koristen pripomoček za prevajalca .
Prevajalec se kot uporabnik terminološkega priročnika razlikuje od strokovnjaka po nekaterih bistvenih značilnostih : a ) Poznavanje področja .
Čeprav se mnogi prevajalci specializirajo za določeno področje in ga po dolgoletni prevajalski praksi tudi že podrobno poznajo , za večino prevajalcev strokovnih besedil vendarle velja , da njihova raven poznavanja stroke ne dosega tiste , ki jo srečamo pri " pravih " strokovnjakih , se pravi tistih , ki se z določenim področjem poklicno ukvarjajo in se na tem področju tudi izobražujejo .
Po drugi strani potrebuje manj jezikoslovnih podatkov o terminih ( kot so izgovorjava , sklanjatev in spol v domačem jeziku ) .
Prevajalec ga uporablja z namenom , da oblikuje besedilo v ciljnem jeziku , ki bo pomensko in funkcionalno čim bolje ustrezalo danemu izvirniku .
Strokovnjaki sicer tudi pogosto posegajo po večjezičnih terminoloških virih takrat , ko tvorijo besedila v tujem jeziku , vendar je med prevajanjem in tvorjenjem besedila brez predloge velika razlika .
Iz teh razlik izhajajo nekateri napotki za snovanje terminoloških priročnikov , da bodo ti čim bolje pisani na kožo prevajalcem .
Predvsem naj bi bili večjezični terminološki priročniki , in tu mislimo v prvi vrsti na terminološke baze v elektronski obliki , zasnovani po onomaziološkem oziroma pojmovnem načelu .
Spodnji primer nam kaže prepletanje pomenov , ki nastane kot rezultat semaziološkega pristopa v terminologiji .
SL AN tabela table miza spreadsheet Če je v terminološko bazo vključenih več jezikov , in nekatere obstoječe zbirke vsebujejo denimo vse jezike EU , v času pisanja triindvajset , je pojmovni pristop edini možni pristop , saj se sicer zapletemo v nepregledno mrežo večpomenskih izrazov ali - na drugi strani - leksikalnih praznin .
Nadalje naj bi terminološki priročniki za prevajalske namene vsebovali razlage pojmov , ki omogočajo spoznavanje področja in hkrati razkrivajo osnovna medpojmovna razmerja .
Posebej pomembna lastnost prevajalcem namenjenih priročnikov pa je dobra predstavitev terminološke frazeologije , se pravi morebitnih kolokacij , skladenjskih posebnosti idr. Prav v tem segmentu so obstoječi terminološki priročniki najrevnejši , saj le redki vsebujejo posebne podatkovne kategorije za frazeološke podatke , kot so kolokacije in primeri rabe .
Če slovar denimo vsebuje več poimenovanj za določeni pojem , je za prevajalca koristno vedeti , od kod izvirajo našteta poimenovanja in kje so bila že uporabljena .
Slika 8 : Dokumentiranje podatkovnih polj v Evrotermu
Standardizacija se zato nanaša predvsem na izdelke in storitve , proizvodne metode in postopke , merske enote , varnost ljudi in blaga ter terminologijo in simbole , o čemer podrobneje govorimo v nadaljevanju .
V splošnem jeziku so mnoge besede večpomenske , obenem pa lahko obstaja za določeni pojem več izrazov , ki so med sabo sopomenski .
V ožjem pomenu se standardizacija nanaša na institucionalno normiranje izrazja , ki ga izvajajo mednarodni in nacionalni organi za standardizacijo , konkretno tehnični odbor ISO / TC 37 in njegovi štirje pododbori , na nacionalni ravni pa Slovenski inštitut za standardizacijo ( SIST ) .
6.1 Mednarodni terminološki standardi V mednarodnem prostoru je tehnični odbor Izrazoslovje v okviru Mednarodne zveze standardizacijskih združenj ( ISA ) že leta 1947 začel uresničevati standardizacijo terminoloških načel in metod za terminološko delo , pripravo slovarjev in računalniško podprto slovaristiko .
S pripravo metodoloških terminoloških standardov je po ustanovitvi Mednarodne organizacije za standardizacijo ( ISO ) leta 1952 njegovo delo nadaljeval tehnični odbor ISO / TC 37 Izrazoslovje - načela in koordinacija .
• ISO / TC 37 / SC1 : Načela in metode terminologije Cilj : Standardizacija temeljnih načel in metod za razvoj znanstvenih in tehničnih terminoloških zbirk in drugih jezikovnih virov .
Najpomembnejši objavljeni standardi : ISO 704:2000 Terminology work - Principles and methods ISO 860:1996 Terminology work - Harmonization of concepts and terms ISO 1087-1:2000 Terminology work - Vocabulary - Part 1 : Theory and application • ISO / TC 37 / SC2 : Terminografija in leksikografija Cilj : Standardizacija terminoloških in leksikografskih delovnih metod , postopkov in kodnih sistemov ter upravljanje kulturne raznolikosti Najpomembnejši objavljeni standardi : ISO 639-1:2002 Codes for the representation of names of languages - Part 1 : Alpha-2 code ISO 639-2:1998 Codes for the representation of names of languages - Part 2 : Alpha-3 code ISO 1951:1997 Lexicographical symbols and typographical conventions for use in terminography ISO 10241:1992 International terminology standards -- Preparation and layout ISO 12199:2000 Alphabetical ordering of multilingual terminological and lexicographical data represented in the Latin alphabet ISO 12616:2002 Translation-oriented terminography ISO 15188:2001 Project management guidelines for terminology standardization • ISO / TC 37 / SC3 : Sistemi za upravljanje terminologije in povezljivost vsebin Cilj : Standardizacija načel in zahtev za semantično povezljivost , terminologijo in sisteme za upravljanje vsebine ter urejanje znanja Najpomembnejši objavljeni standardi : ISO 1087-2:2000 Terminology work - Vocabulary - Part 2 : Computer applications ISO 6156:1987 Magnetic tape exchange format for terminological / lexicographical records ( MATER ) - umaknjen ISO 12200:1999 Computer applications in terminology - Machine-readable terminology interchange format ( MARTIF ) - Negotiated interchange ISO 12620:1999 Computer applications in terminology - Data categories ISO 16642:2003 Computer applications in terminology - Terminological markup framework • ISO / TC 37 / SC4 : Upravljanje jezikovnih virov Cilj : Standardizacija specifikacij za računalniško-podprto upravljanje z jezikovnimi viri Najpomembnejši objavljeni standardi : Ker gre za najmlajši pododbor , objavljenih standardov še ni .
Standardi v pripravi : ISO / AWI 21829 Terminology for language resources ISO / CD 24610-1 Language resource management - Feature structures - Part 1 : Feature structure representation ISO / WD 24611 Language resource management - Morphosyntactic annotation framework ISO / WD 24612 Language Resource Management - Linguistic Annotation Framework ISO / WD 24613 Language resource management - Lexical markup framework ISO / AWI 24614-1 Word segmentation of written texts for mono-lingual and multi-lingual information processing - Part 1 : General principles and methods ISO / AWI 24614-2 Word segmentation of written texts for mono-lingual and multi-lingual information processing - Part 2 : Word segmentation for Chinese , Japanese and Korean ISO / NP 24614-3 Word segmentation of written texts for mono-lingual and multi-lingual information processing - Part 3 : Word segmentation for other languages Posebej pomembno področje standardizacije je zapis terminoloških baz .
Osnutek je dostopen tudi na spletnih straneh Lise.14 Ker gre za standard , ki se je še pred uradnim sprejetjem uveljavil v številnih industrijskih aplikacijah , ga v nadaljevanju podrobneje predstavljamo .
TBX ohranja osnovno strukturo terminološkega vnosa predhodnega standarda MARTIF , zato v opredelitvi strukture najdemo krovni element martif in glavo martifHeader ( Slika 9 ) , v kateri so upravni podatki o terminološki bazi .
Terminološki podatki sodijo v element body .
Slika 9 : Krovna struktura baze v TBX Vsak pojem je predstavljen v elementu termEntry , ki je nato sestavljen iz opisnih polj descrip in polj za posamezne jezike langSet .
Termin je vsebovan v elementu term .
Slika 10 : Primer terminološkega vnosa v TBX
TBX je zelo fleksibilen glede tipov podatkovnih kategorij , ki jih vnašamo v bazo , in opredeljuje 17 podatkovnih kategorij na ravni pojma ( npr. definition , explanation , figure ) , 17 medpojmovnih razmerij ( npr. broaderConceptGeneric , subordinateConceptPartitive ) , 19 kategorij , ki natančneje opredeljujejo termin ( npr. PartOfSpeech , animacy , grammaticalGender ) , 7 kategorij o tipu termina ( npr. abbreviatedFormFor , shortFormFor ) in 17 kategorij za upravne podatke o vnosih ( npr. administrativeStatus , originatingPerson , originatingInstitution ) .
Terminološke dejavnosti se v SIST izvajajo po naslednjem vrstnem redu ( Hočevar in Kiralj 2004 : 203 ) : • privzem in prevod mednarodnih terminoloških pravil ( ISO TC 37 ) , • prevodi mednarodnih in evropskih terminoloških standardov ( npr. SIST EN 45020 ) , • prevodi standardizacijskih dokumentov , vodil ( standardizacija kot stroka ) , • prevodi naslovov standardov EN , • prevodi evropskih standardov , na katere se sklicuje zakonodaja , • revodi osnovnih oziroma temeljnih mednarodnih in evropskih standardov ( npr. skupina standardov s podorčja vodenja in zagotavljanja kakovosti SIST EN ISO 9000 , ugotavljanja skladnosti SIST EN 45000 , veličine in enote SIST ISO 31 , tehnična dokumentacija ) , • prevodi vsebin drugih evropskih in mednarodnih standardov .
Glede računalniške podpore terminološkemu delu tudi sodelavca SIST-a ugotavljata , da je najprimernejša programska oprema Trados MultiTerm , ker omogoča lastno določanje strukture baze , podpira XML , deluje v mreži in ga uporablja precej vidnih ustanov v Sloveniji in v tujini .
Če v sklepnem delu tega poglavja spregovorimo še o dostopnosti standardov na nacionalni in mednarodni ravni , je za začetek smiselno omeniti , da so standardi , ki jih izdaja Mednarodna organizacija za standardizacijo ( ISO ) , plačljivi in stanejo od 100 do 300 švicarskih frankov vsak .
Javno razširjanje besedil standardov , se pravi kopiranje ali objava na spletu , je strogo prepovedano .
Izkušnje z razvojem spleta kažejo , da morajo biti vsaj standardi za zapis računalniških podatkov javni in prosto dostopni , saj sicer nikoli ne dočakajo pravega statusa standarda .
Na področju strokovnih jezikov in njihove dejanske rabe pa je vpliv standardizacije v ožjem pomenu zelo majhen .
Za številne " priložnostne " terminološke potrebe , denimo nekatere tipe prevajalskih projektov , si je tako mogoče zgraditi specializirani korpus iz spletno dostopnih besedil .
Gre torej za zbirko vzporednih besedil v 22 jezikih , kar omogoča izdelavo vzporednih korpusov za 462 jezikovnih parov.15 Seveda pa je to le eden od številnih večjezičnih besedilnih virov , ki jih ponujajo spletišča EU .
Za potrebe podpore terminološkemu delu pa je pri zbiranju in izbiri besedil pomembno upoštevati nekatere kriterije , ki ključno vplivajo na uporabnost korpusa za terminološke namene .
7.1.1 Vrste korpusov Jezikovne korpuse delimo na več vrst glede na različne vidike .
Časovni razpon Korpus lahko predstavlja jezik določenega obdobja v zaključeni besedilni zbirki , lahko pa je zasnovan kot spremljevalni korpus , pri katerem se sproti vključujejo nova besedila in izločajo stara .
Med specializiranimi korpusi je prav tako največ angleških , predstavljajo pa širok razpon različnih vrst specialnih jezikov .
Vzporedni korpus je posebej dragocen jezikovni vir za prevodoslovne in kontrastivne raziskave , obenem pa je to eden zahtevnejših korpusnih tipov , saj je tako z vidika zbiranja besedil kot z vidika poravnave in označevanja vanj potrebno vložiti ogromno dela .
Za slovensko-angleški jezikovni par imamo v času pisanja na voljo tri prosto dostopne vzporedne korpuse : • IJS-ELAN .
Ta korpus je nastal v okviru mednarodnega EU projekta ELAN ( European Language Activity Network ) in vsebuje 15 poravnanih slovensko-angleških besedil v skupnem obsegu milijon besed .
Korpus je prosto dostopen za raziskovalne namene in za spletno iskanje.16 • Evrokorpus .
To je korpus prevodov zakonodaje Evropske unije , ki je nastal iz pomnilnikov prevodov , ustvarjenih med prevajanjem na Službi Vlade RS za evropske zadeve .
Angleško-slovenski korpus vsebuje v času pisanja okrog 970.000 prevodnih enot ( več kot 34 milijonov besed ) , nemško-slovenski korpus vsebuje več kakor 30.000 prevodnih enot ( približno 1 milijon besed ) , francosko-slovenski korpus pa vsebuje več kakor 5.000 prevodnih enot ( več kot 200.000 besed ) .
Za nekatere metode pri ugotavljanju terminološkosti potrebujemo za primerjavo še splošnojezikovni , v idealnem primeru referenčni korpus jezika .
Dvojezično terminografsko delo je močno olajšano , če imamo na razpolago vzporedni korpus , čeprav lahko za številne potrebe zadošča tudi primerljivi korpus .
Strokovni jezik je v veliki meri vezan na pisni medij , zato govornih vzorcev navadno ne vključujemo .
Terminologija je tudi pretežno usmerjena v raziskovanje in opisovanje sodobnega jezika , zato so specializirani korpusi za terminološke namene sinhroni in težijo k vključevanju čim sodobnejših besedil .
V zadnjem času je pri nas nastalo nekaj specializiranih korpusov , ustvarjenih za namene terminografije : • DSI .
To je korpus s področja informatike , ki vsebuje zbornike srečanja Dnevi slovenske informatike od leta 2003 do vključno 2007 , vsako leto pa se dopolni s svežim zbornikom .
Trenutno vsebuje 1,2 milijona besed in je prosto dostopen za iskanje.17 Ker je informatika s terminološkega stališča izredno živahna veda , je korpus dragocena podpora pri terminografskem projektu Islovarja18 ( Erjavec in Vintar 2004 ) .
Obsega 1,824.699 besed in zajema besedila iz obdobja od leta 1994 do leta 2007.
Je rezultat 1. faze projekta Slovar slovenskega izrazja odnosov z javnostmi , katerega izvajalec je Center za družboslovnoterminološko in publicistično raziskovanje Fakultete za družbene vede , naročnik in glavni financer pa podjetje Pristop , d. o. o. Projekt se je začel leta 2006.
Pobuda za izdelavo terminološkega slovarja odnosov z javnostmi je prišla s strani dr. Dejana Verčiča , vodenje projekta je prevzela dr. Monika Kalin Golob , korpus pa je kot del svoje doktorske disertacije izdelala mag. Nataša Logar .
O tem , kdaj lahko korpus upravičeno obravnavamo kot reprezentativen vzorec opazovane populacije , v našem primeru jezika , je razpravljalo že mnogo avtorjev .
Predvsem pri raziskavah jezikovnih zvrsti in jezikovne norme je uravnotežena sestava korpusa ključni dejavnik , saj so v nasprotnem primeru pogostostna razmerja v korpusu zamaknjena in onemogočajo vrednotenje statističnih rezultatov .
Pravzaprav se kaže , da je pojem splošni jezik } povsem abstrakten , saj ima vsaka besedilna vrsta oziroma vsak register lastne vzorce jezikovne rabe .
• Velikost Čeprav se večina razprav o sestavi korpusov osredotoča na skupno velikost korpusa v besedah , vprašanje o velikosti vključuje tudi število besedil iz posamezne zvrsti , število vzorcev iz posameznega besedila in število besed v posameznem vzorcu.20 Biber v eni svojih vplivnih študij pokaže , da je za ugotavljanje lastnosti določene jezikovne zvrsti 10 besedil že dovolj velik vzorec , od vsakega besedila pa zadošča naključno izbran vzorec v dolžini 1000 besed .
Po drugi strani je jasno , da je za leksikografske namene potrebno ogromno besedilnega materiala ; tu se številke danes gibljejo od 100 milijonov besed naprej , zgornje meje pa pravzaprav ni .
O načelih gradnje specializiranih korpusov je bilo povedanega mnogo manj , predvsem pa so kriteriji tu močneje vezani na namembnost korpusa .
Gorjanc to situacijo povzema takole ( Gorjanc 2002 : 79 ) : Korpusi strokovnih jezikov so se pojavili precej kasneje kot splošni referenčni , zato se načela za njihovo gradnjo zares šele oblikujejo ; glede splošnih postopkov gradnje tudi pri njih veljajo ista izhodišča , a se glede na to , da zajemajo le jezik v točno določeni funkciji , dopolnjujejo in na novo premišljajo .
Korpus strokovnih besedil naj bi čim bolje predstavljal določeno stroko in vseboval kar največ strokovnih izrazov .
Prekrivanje med področji in strokami ter prehajanje strokovnih izrazov v splošni jezik se med drugim kaže v vse večji večpomenskosti posameznih izrazov , če jih obravnavamo izven njihovega konteksta .
Skoraj vsa besedila namreč tu in tam posegajo na druga področja , govorijo o drugih temah in uporabljajo " gostujoče " izrazje .
Pri korpusni obdelavi terminološkega inventarja se navadno osredotočamo na določeno področje , zato so izrazi z drugih področij pri rezultatih nezaželeni šum , čeprav so morda informativni za besedilo .
Korpusna terminografija tako zahteva besedila , ki so čim tesneje povezana s področjem in ne vsebujejo preveč ekskurzov na druga področja .
Velik časovni razpon besedil zato pomeni slabše rezultate pri avtomatski obdelavi terminologije , saj moramo računati z nedoslednimi izrazi , razlikami pri zapisu terminov in podobno .
Kadar je naš namen iskanje izrazja v dvojezičnem okolju na podlagi vzporednega korpusa , se ob zgornjih vprašanjih pojavijo še specifični pomisleki v zvezi s prevodom besedil .
Pri snovanju vzporednega korpusa je najprej pomembna odločitev , ali je smer prevoda pomembna ali ne .
To pomeni , da izberemo le en jezik izvirnika in en jezik prevoda , vsa vzporedna besedila v korpusu pa so torej prevodi v isti jezik .
Kadar korpus vsebuje besedila obeh prevodnih smeri , kot je to na primer pri korpusih IJS-ELAN in TRANS , moramo smer prevoda pri vsakem besedilu označiti , tako da je iskanje po korpusu mogoče omejiti na določeni prevodni par .
Pri terminološkem delu to vprašanje prav tako ni nepomembno , predvsem kar se tiče uporabe dobljenih rezultatov .
Terminolog ali prevajalec , ki bi želel uporabiti vzporedni korpus kot vir prevodnih ustreznic , mora vsekakor poznati sestavo korpusa in naravo besedil v njem , saj bo drugače težko vrednotil status najdenih izrazov in njihovih možnih ustreznic .
Zadnje pomembno vprašanje v zvezi z reprezentativnostjo pa je kakovost besedil in njihovih prevodov , saj je od tega še najbolj odvisna tudi kakovost pridobljenega terminološkega gradiva .
Prevodi besedil z določenega področja , kjer si prevajalci niso prizadevali za terminološko doslednost , kjer so besedilo terminološko osiromašili oziroma izbirali razlagalne rešitve , za terminografske namene niso primerni .
V prejšnjem razdelku smo pokazali , da za namene terminologije raznoterost ni nujno zaželena lastnost , nasprotno pa bi si želeli , da je korpus čimbolj homogen v smislu besedišča , ki ga predstavlja .
Za raziskovanje podobnosti oziroma razlik med dvema korpusoma Kilgariff predlaga metodo primerjave pogostosti besed , ki temelji na Mann-Whitneyevem testu uvrstitev na lestvici pogostosti .
Kilgarriff metodo uporabi za primerjavo korpusa Brown ( ameriška angleščina ) in LOB ( britanska angleščina ) in z njo identificira besede , ki so tipične za vsakega od korpusov .
Na podoben način lahko ugotavljamo tudi homogenost korpusa .
S temi kontrolnimi skupinami lahko testiramo različne metode merjenja podobnosti med korpusi .
Primerjava različnih statistik pri tej metodi pokaže , da je najzanesljivejša χ2 , ki se obnese bolje kot Spearmanov korelacijski koeficient uvrstitev in precej bolje kot različne metode z uporabo entropije .
Na splošno se v korpusnem jezikoslovju pokaže , da ta statistika ni uporabna za preverjanje jezikoslovnih hipotez , kajti korpus ni nikdar naključni vzorec besed .
Vendar pa v tem primeru Kilgarriff predlaga nekoliko drugačno rabo testa , ki se obnese .
To ustreza intuitivni predpostavki , da so bolj pogoste besede boljše merilo različnosti oziroma podobnosti korpusov kot manj pogoste .
WebBootCaT nato uporabi spletni iskalnik ( Google ali Yahoo !
) za zbiranje spletnih strani , pri tem pa sproti odstranjuje podvojene strani ali strani , ki ne vsebujejo dovolj besedila .
Ko je korpus na podlagi vnešenih ključnih besed zgrajen ( za korpus v slovenščini velikosti 70.000 besed program porabi približno dve minuti ) , ga lahko uporabljamo prek iskalnika SketchEngine ( Kilgarriff in dr. 2004 ) , lahko pa si ga tudi naložimo na lastni računalnik v goli ali tokenizirani obliki .
Pomanjkljivost WebBootCaT-a je morda le , da je pri določanju jezika besedila prav tako nenatančen kot spletni iskalniki , zato se nam v korpus mimogrede prikradejo tudi besedila v angleščini .
7.2 Obdelava korpusa Ko smo ustvarili specializirani korpus , potrebujemo programsko infrastrukturo za njegovo obdelavo , iskanje in preverjanje hipotez .
Če gradimo vzporedni korpus , je pomemben korak stavčna poravnava besedil , za naprednejše iskanje in morebitno samodejno luščenje izrazja pa je neizogibno tudi oblikoskladenjsko označevanje .
Na spletu so brezplačno na voljo označevalniki za številne jezike , enega boljših seznamov prosto dostopnih označevalnikov vzdržuje stanfordska univerza na spletišču Statistical natural language processing.22 Za slovenščino in druge pregibne jezike je poleg oblikoslovnega označevanja pomembna tudi lematizacija .
Tabela 5 podaja primer rezultatov obeh algoritmov za spodnji besedilni odsek , napake so označene s krepkim tiskom : Monitoring ribolovnih virov s pridneno vlečno mrežo je biološko raziskovanje , ki v slovenskem morju poteka od leta 1995.
Vprašanja , ki si jih utegnemo zastaviti , so naslednja : • Kako dobro moj korpus predstavlja izbrano področje ?
Eno takih orodij je Wordsmith Tools , 24 ki ga v nadaljevanju uporabimo za vse podane primere , na razpolago pa je še precej sorodnih proizvodov , nekaterih tudi brezplačnih , ki povečini omogočajo statistične obdelave .
Vhodni podatki za delo z Wordsmithom morajo biti pretvorjeni v golo besedilo ( .
Pri delu z označenimi besedilnimi formati , denimo korpusi v XML , je Wordsmith okoren in omogoča le zelo primarne načine obdelave .
Ob zagonu programa se najprej odpre Wordsmithov kontrolnik , ki ponuja glavne tri programske komponente , Concord , Keywords in Wordlist .
V nadaljevanju na kratko predstavimo vse tri z vidika uporabnosti za terminološke raziskave .
Program omogoča delo s številnimi datotekami in velikimi besedilnimi zbirkami , če so ta le vsa v enakem kodiranju in shranjena kot golo besedilo .
Ko smo izbrali eno ali več besedil , imamo na voljo tri možnosti , in sicer izdelavo enega besednega seznama za celoten korpus ( Make a wordlist now ) , izdelavo več seznamov ( Make a batch now ) in izdelavo besednega indeksa ( Make / Add to index ) .
Z izbiro prve možnosti program prečeše izbrane datoteke in prikaže besedni seznam , urejen po pogostosti .
Primer pogostostnega seznama iz zbirke besedil o davčni zakonodaji s področja transfernih cen , iz katerega so izločene prazne besede , kaže Tabela 6.
Ročni pregled vsaj prvih nekaj sto različnic na seznamu nam poda prvi vtis o tem , kako dobro naš korpus pokriva izbrano področje in ali je zastopano besedišče pretežno s tega področja .
Pogostost je eden od kriterijev terminološkosti , čeprav seveda ne edini ali najboljši .
Iz abecedno urejenega besednega seznama lahko razberemo , kateri leksemi se v korpusu pojavljajo v številnih izpeljanih oblikah in kateri ne ; besedotvorno izrazito razvejani leksemi so pogosto indikator terminološkega gnezda .
Slika 13 kaže primer ročne lematizacije besede cena in njenih oblik .
Besedne oblike z miško povlečemo na lemo , program pa samodejno sešteje pogostosti in nato besedni seznam tudi ponovno razvrsti .
Slika 14 kaže seznam dvobesednih enot , med katerimi je znova kar nekaj terminološko zanimivih .
Nadalje statistika poda povprečno dolžino odstavka , povedi in besede , preštete pa so tudi besede po dolžini v znakih ( Slika 15 ) .
Za to ponuja Wordsmith orodje Concord , v katerem prav tako najprej izberemo besedila , nato pa definiramo iskalni pogoj .
Pri iskanju program omogoča uporabo nadomestnega znaka * in poševnice za zapis alternativnih nizov .
Tako denimo iskalni pogoj profit * / dobič * poišče vse pojavitve bodisi besed , ki se pričnejo s profit - , bodisi besed , ki se pričnejo z dobič- .
Urejanje konkordance po levem ali desnem okolju nam že na prvi pogled razkrije kandidate za večbesedne termine in kolokacije , npr. neto profitna marža , porazdelitev dobička , metoda porazdelitve dobička , čisti dobiček itd.
Medtem ko za odkrivanje večbesednih terminov zadostuje opazovanje neposredne okolice jedrnega izraza , pa se kolokacije lahko pojavljajo tudi v precejšnji oddaljenosti od jedra .
V Tabela 7 so navedene ključne besede iz majhnega korpusa farmacevtskih besedil , ki smo ga s programom Keywords primerjali z večjim korpusom splošnih besedil .
pogostost 1 # 632 4,7469 2 MG 112 0,8412 3 R 90 0,676 4 DELOVANJE 56 0,4206 5 TABLETE 49 0,368 6 UPORABA 48 0,3605 7 G 49 0,368 8 SESTAVA 41 0,3079 9 REGISTRACIJSKI 39 0,2929 10 STATUS 39 0,2929 11 DOZIRANJE 36 0,2704 12 INDIKACIJE 35 0,2629 13 KONTRAINDIKACIJE 35 0,2629 14 SREDSTVO 33 0,2479 15 ZDRAVLJENJE 32 0,2403 16 VSEBUJE 30 0,2253 17 UČINKI 30 0,2253 18 STRANSKI 29 0,2178 19 ZDRAVILO 28 0,2103 20 ML 27 0,2028 21 ZDRAVILA 26 0,1953 22 OL 26 0,1953 23 ZDRAVILNO 25 0,1878 24 LEKOVIT 24 0,1803 25 PRIPRAVKI 24 0,1803 26 POMOŽNO 24 0,1803 27 KAPSULE 23 0,1728 28 KAPLJIC 21 0,1577 29 OTROKOM 24 0,1803 30 MENTOKLAR 20 0,1502 31 DELUJE 20 0,1502 32 PRIPOROČAMO 20 0,1502 33 DIVERIN 20 0,1502 34 GEL 20 0,1502 35 KISLINE 20 0,1502 36 LASTNOSTI 21 0,1577 37 PRIMEREN 20 0,1502 38 TRIKRAT 22 0,1652 39 BOLEČINE 19 0,1427 40 ZA 171 1,2844 Tabela 7 : Ključne besede iz korpusa farmacevtskih besedil Za preiskovanje lastnih korpusov imamo torej na voljo programska orodja , ki nam olajšajo iskanje po besedilih , preštevanje pojavitev in računanje njihove statistične relevantnosti .
Teh faz namreč še nekaj časa ne bo mogoče avtomatizirati .
Na rezultate vplivamo že z izbiro korpusa , predvsem pa je v večini aplikacij predvideno , da avtomatsko pridobljene sezname terminov pred nadaljnjo uporabo pregleda terminolog ali strokovnjak .
Nekatere metode so zasnovane tako , da uporabnik pred luščenjem sam določi parametre algoritma , na primer skladenjske vzorce , ali pa luščenje poteka interaktivno , kjer uporabnik sproti preverja predlagane termine .
Kjer je razpoznavanje terminov le modul znotraj širše aplikacije , predvsem imamo v mislih sisteme za iskanje podatkov , poteka postopek povsem avtomatsko , rezultati obdelave pa se neposredno uporabijo pri iskanju dokumentov in njihovem razvrščanju .
V nadaljevanju poglavja pregledno predstavimo najpomembnejše metode pri avtomatskem luščenju terminologije .
Čeprav pristope razdelimo na statistične , jezikoslovno usmerjene in hibridne , posvetimo pa se tudi nekaterim novejšim in naprednejšim tehnikam , je treba poudariti , da je takšna delitev zgolj poskus opredelitve usmerjenosti pristopa .
Pri skoraj vseh gre v resnici za takšno ali drugačno kombinacijo jezikoslovnega znanja o naravi terminov in izrabo matematičnih lastnosti porazdelitve besed in besednih nizov v korpusih .
V tem času je korpusno jezikoslovje doživelo razmah , pogojen z nastankom prvih večjih korpusov , na primer BNC , ki so bili prvič prosto dostopni širši raziskovalni javnosti .
Obenem so procesorske zmogljivosti osebnih računalnikov že dosegle raven , ko je bilo obdelave večjih količin podatkov mogoče opravljati brez Unixovih delovnih postaj , čeprav Unix in Linux v računalniškem jezikoslovju vse do danes ostajata v prednosti pred drugimi operacijskimi sistemi .
Statistični pristopi tega časa so bili precej primitivni in so temeljili na pogostnostnih modelih jezika .
Kmalu je postalo jasno , da je za boljše rezultate potrebno vključiti več jezikovnega znanja , pri čemer je najosnovnejša raven oblikoskladenjska analiza .
A ker za mnoge jezike še danes ni na voljo popolna skladenjska analiza , je luščenje terminologije v zadnjih petih letih ponovno krenilo na bolj računalniško usmerjeno pot .
Sodobne stohastične metode , kot je vektorsko modeliranje podobnosti jezikovnih enot , ki so se najprej razvile za namene iskanja podatkov in avtomatskega indeksiranja , so postale zanimive tudi za terminološke namene .
V času pisanja je ta trend še vedno opazen , pogojuje pa ga nagel razvoj računalniško-statističnih metod obdelave in modeliranja velikih količin podatkov .
Čeprav je naravni jezik v smislu modeliranja eden najkompleksnejših sistemov , saj ni podrejen naravnim zakonom , se te metode kažejo kot zelo obetavne tudi v računalniškem jezikoslovju .
Pri tem statistična obdelava služi preverjanju hipotez , ki jih imamo o lastnostih terminov v primerjavi z netermini , lastnostih strokovnih besedil v primerjavi z nestrokovnimi in o distribuciji strokovnega izrazja v različnih besedilnih vrstah in registrih .
Ključnost smo predstavili že v razdelku o programu WordSmith Tools , na podoben način pa se uporablja tudi pri sistemih za samodejno luščenje terminologije .
Če se v določenem delu strokovnega besedila leksikalna enota večkrat pojavi , je enota verjetneje termin .
Drugačno pojmovanje ključnosti se je razvilo v okviru iskanja podatkov , kjer skušamo v zbirki dokumentov najti tiste , ki najbolj ustrezajo poizvedbi .
Tu naj bi dokumente , ki vsebujejo največ terminov iz poizvedbe , uvrstili na vrh seznama zadetkov , pri tem pa nam zgolj frekvenca termina v celotni zbirki dokumentov ne pomaga kaj dosti .
Doslej smo previdno uporabljali izraz leksikalna enota -- ta je namreč lahko beseda , še večkrat pa so termini večbesedne enote .
Pri avtomatskem luščenju terminologije je zato razpoznavanje večbesednih enot izjemno pomembno , obenem pa se postavi nekaj vprašanj .
Prvo je dolžina enote oziroma največje možno število besed v terminu , drugo problem gnezdenja , na primer sistem polarnega žerjava in v njem vsebovani polarni žerjav , tretje pa morebitna prekinjenost enot , na primer sežigalnica ljubljanskih odpadkov , kjer je termin le sežigalnica odpadkov .
Med prvimi poskusi luščenja terminologije s pomočjo korpusa in analize pogostosti je bil eksperiment Ahmada in soavtorjev ( Ahmad in dr. 1992 ) , v katerem so s pomočjo korpusnega orodja MATE25 primerjali pogostosti pojavnic v strokovnem korpusu s področja mamografije s pogostostmi v izseku iz splošnega korpusa britanske angleščine LOB ( Lancaster-Oslo-Bergen ) .
Strokovni korpus je bil za današnje razmere smešno majhen , saj je obsegal le 28.458 pojavnic , izsek iz LOB-a pa je bil velik približno milijon pojavnic .
Poenostavljeno povedano temelji ta model na dodeljevanju uteži26 besedam v poizvedbi in v zbirki dokumentov , nato pa se na podlagi primerjave uteži posameznih besed v poizvedbi in v izboru dokumentov izvede razvrščanje dokumentov po pomembnosti ( Manning in Schütze 1999 : 543 ) .
Komponenta idf skrbi za to , da obtežimo termine , ki se pojavljajo le v redkih dokumentih , medtem ko je za besede , ki so prisotne v vseh dokumentih , vrednost idf enaka 0.
7.3.1.2 Drugi indikatorji terminološkosti Strokovna besedila pa vsebujejo tudi termine , ki se ne pojavljajo pogosto .
Že med neznanimi besedami opazimo precej imen , krajšav in akronimov .
Terminološka vrednost imen je odvisna od področja in tipa besedila , a v mnogih primerih so imena in eponimsko izrazje pomemben del terminologije stroke .
Ker je avtomatsko iskanje akronimov razmeroma enostavno , v njihovi bližini pa pogosto najdemo tudi razvezano obliko , so koristni tudi pri pomenski analizi besedila .
Ker so strokovni jeziki še bolj odprti do prevzemanja izrazja kot splošni jezik , je v njih mnogo besed s tujimi koreni , ali pa so prevzete povsem citatno .
7.3.1.3 Statistike za luščenje kolokacij Termini so v veliki večini večbesedne enote , ki so glede svoje oblike razmeroma strogo določene .
Za iskanje kolokacij se je v korpusnem jezikoslovju razvila že vrsta metod , pregledno predstavitev najdemo v Manning in Schütze ( 2000 : 151-191 ) .
Tabela 8 in Tabela 9 prikazujeta primer takšnih izluščenih enot iz vojaškega korpusa Grizold .
w1 w2 f ( w1w2 ) f ( w1 ) f ( w2 ) ki so 3070 16293 25239 se je 2778 14567 40293 ki je 2644 16293 40293 da je 2177 12893 40293 pa so 2056 10301 25239 pa je 2055 10301 40293 je bil 1942 40292 2458 naj bi 1915 2306 8204 je bila 1867 40292 2382 da bi 1643 12893 8204 je bilo 1620 40292 2477 so se 1594 25239 14567 da so 1549 12893 25239 je v 1440 40292 27862 tako da 1347 4925 12893 pa je 1294 6308 40293 da se 1282 12893 14567 ki se 1127 16293 14567 so v 936 25239 27862 so bili 852 25239 1137 kar je 774 2641 40293 ki bi 749 16293 8204 pa se 727 10301 14567 so ga 712 25239 3007 ki ga 711 16293 3007 bi se 709 8204 14567 so jih 667 25239 2709 ki jih 658 16293 2709 ali pa 651 5042 6308 Tabela 8 : Dvobesedne enote po absolutni pogostosti w1w2 f ( w1 ) f ( w2 ) še vedno 853 434 svetovne vojne 918 286 svetovni vojni 948 282 oboroženih sil 1239 269 še posebej 523 223 drugi svetovni 299 217 svetovno vojno 353 188 drugi strani 722 168 druge svetovne 323 166 potem ko 2105 166 balističnih raket 1380 163 letalskih sil 1239 144 kratkega dosega 462 142 zračne obrambe 559 130 bojne glave 193 127 zaradi česar 193 126 vse bolj 1150 125 še bolj 1150 124 mornariške pehote 260 122 proti cilju 171 121 srednjega dosega 462 118 še naprej 504 117 vojne mornarice 345 116 sovjetska zveza 146 114 drugo svetovno 196 112 sovjetski zvezi 267 112 operativno uporabo 861 111 prvi vrsti 191 106 vojna mornarica 325 106 smodniških plinov 235 104 Tabela 9 : Dvobesedne enote po absolutni pogostosti z izločanjem praznih besed Očitno je , da zgolj pogostost ni dovolj za odločanje o tem , kaj je kolokacija in kaj ne , čeprav je rezultat po izločanju praznih besed že bistveno boljši .
V korpusnem jezikoslovju se za luščenje kolokacij uporabljajo različne statistike , pri čemer ima skoraj vsaka svoje dobre in slabe lastnosti .
Statistika Χ2 postane nezanesljiva , če imamo opravka z majhnimi pogostostmi .
Skozi desetletja razvoja računalniškega jezikoslovja se je celo bolje izkazala pri drugih nalogah , denimo za iskanje prevodnih ustreznic v vzporednem korpusu ali kot merilo podobnosti med korpusi ( Kilgarriff 2001 ) .
Pri terminološki rabi se tudi tu pojavi problem , da MI na vrh seznama kolokacijskih kandidatov postavi redko opažene besedne dvojke .
w1 w2 rank MI f ( w1w2 ) f ( w1 ) f ( w2 ) dokopati rešilne 1 20.4847 1 1 1 manjšajo enakopravneje 1 20.4847 1 1 1 Iraški lanserji 1 20.4847 1 3 6 pričujočemu testu 1 20.4847 1 1 2 goalkeeper Osnovo 1 20.4847 1 1 5 Vizualni dražljaji 1 20.4847 1 1 1 NASPROTUJEJO Propaganda 1 20.4847 1 1 1 referencami Hughesu / Douglasu 1 20.4847 1 1 1 gusarjev Hajrudina 1 20.4847 1 1 1 perjem U-2 / TR-1 1 20.4847 1 1 1 grabijo podlage 1 20.4847 1 1 1 seeks US 1 20.4847 1 1 5 TOTC Time 1 20.4847 1 1 1 strankinim Veljal 1 20.4847 1 1 1 nezahtevni 10-sedežni 1 20.4847 1 1 1 izpitno Proga 1 20.4847 1 1 1 decembrskega preformiranja 1 20.4847 1 1 1 urejenih cestišč 1 20.4847 1 1 1 hrbtenico Pretres 1 20.4847 1 8 1 Watervliet Arsenalu 1 20.4847 1 1 1 jekleno-aluminijevega kompozita 1 20.4847 1 1 1 hlapljivi komponenti 1 20.4847 1 1 2 Texture Mats 1 20.4847 1 1 1 NEW YORK 1 20.4847 1 1 1 Porschejevih izboklin 1 20.4847 1 1 1 FM USB 1 20.4847 1 1 1 komplicirani Pomaga 1 20.4847 1 1 1 arzenali Dolgo 1 20.4847 1 1 2 Kurt Buhlingen 1 20.4847 1 1 1 Tabela 10 : Primeri dvobesednih enot , izluščenih z vzajemnostjo ( MI ) Daille ( 1995 ) primerja vrsto različnih statističnih metod z ročno označenimi leksikalnimi enotami in ugotavlja , da se statistika logaritma razmerij verjetja ( log-likelihood ratio ) še najbolj ujema z človekovim pojmovanjem večbesednih enot .
i ≠i j a b ≠j c d Danes metode , ki se opirajo izključno na statistiko besednih oblik , za luščenje terminologije niso več najbolj uporabne .
7.3.2 Luščenje terminov s pomočjo oblikoskladenjskih vzorcev Termini so pogosto samostalniške besedne zveze , te pa sledijo predvidljivim oblikoskladenjskim vzorcem .
Izluščene besedne zveze še niso termini , saj denimo vzorcu P + S lahko ustrezata zvezi matična plošča in naslednji primer .
Za razvrščanje besednih zvez po terminološki relevantnosti se uporablja vsota ključnosti oziroma relativnih pogostosti posameznih besed .
Tabela 11 kaže prvih štirideset terminoloških kandidatov , izluščenih z metodo vzorcev in terminoloških uteži , iz vojaškega korpusa Grizold .
Metoda temelji na predpostavki , da je za vsako besedo v korpusu iz prevodnih segmentov , kjer se pojavlja , mogoče izračunati najverjetnejšo ustreznico .
Algoritmi in njihove nastavitve se med seboj sicer precej razlikujejo , vsem skupna lastnost pa je , da program za vsako besedo v korpusu predlaga eno ali več ustreznic skupaj z verjetnostmi prevoda .
V jezikovnih tehnologijah se sorodnice izkorišča predvsem za izboljšanje stavčne poravnave ( Simard in dr. 1992 ) , zanimive pa so tudi s prevodoslovnega vidika ( Vintar in Hansen 2002 ) .
Pri enobesednih terminih so ustreznice seveda vključene že v dvojezični leksikon , problem predstavljajo le primeri , kjer se enobesedni termin prevede v večbesednega ali obratno ( npr. uparjalnik / steam generator ) .
Če je večbesedni termin povsem ustaljen , je ta pojav mogoče ugotoviti na ravni besedne poravnave , saj dobimo za uparjalnik ustreznici steam in generator , vsako z verjetnostjo 0,50.
Ta metoda je zanesljiva le pri pogostih terminih in le , če smo za izdelavo dvojezičnega leksikona uporabili lematizirani korpus .
Ustvarjanje terminoloških baz Zielinski in Ramirez ( 2005 ) v svoji raziskavi ugotavljata , da kar 68,7 odstotkov poklicnih prevajalcev za upravljanje terminologije uporablja specializirano tovrstno orodje , ob tem jih okrog 50 odstotkov občasno za hrambo terminoloških podatkov uporablja tudi Excel ali Word , le 5,4 odstotki pa se zanašajo na sistem listkovne kartoteke .
Ker terminološka orodja zvečine razvijajo prozvajalci prevajalskih tehnologij , so vsi razširjeni programi neposredno združljivi s prevajalskim namizjem istega proizvajalca .
Terminološke baze so lahko mnogojezične , program prek Unicoda podpira različne znakovne nabore , vse baze pa so samodejno obrnljive .
MultiTerm omogoča več načinov iskanja po bazi : • enostavno iskanje po besedi ali frazi ( drsni ležaj ) , drsni ležaj • iskanje z nadomestnimi znaki ( * ležaj * ) , aksialni kotalni ležaj , dinamična nosilnost ležaja , prilagodni kroglični ležaj • megleno iskanje , ki poišče tudi podobne besede ( ~ dinamic ) , basic dynamic load rating Za ustvarjanje nove terminološke baze v MultiTermu lahko uporabimo eno od glosarskih predlog , ki jih ponuja program , za naprednejše uporabnike pa je bolj smiselno , da si strukturo baze definirajo sami .
Ko baza namreč že vsebuje nekaj vnosov , je strukturo razmeroma zahtevno spreminjati - nove podatkovne kategorije sicer lahko brez težav dodajamo , spreminjanja že zapolnjenih polj pa program ne dopušča .
Za primer vzemimo , da ustvarjamo dvojezični nemško-slovenski glosar puškarstva.31 Glosar je namenjen slovenskim uporabnikom , zato bodo predstavljeni puškarski pojmi vsebovali razlago v slovenskem jeziku , poleg slovenskih in nemških poimenovanj pa bodo vključeni še primer rabe v slovenščini , oznaka spola za nemške termine , ponekod pa tudi slika , saj glosar vsebuje precej poimenovanj delov pušk , ki jih je brez slikovnega gradiva težko opisati .
Glosarski vnosi bodo razdeljeni na podpodročja puškarstva .
Primer možne strukture prikazuje Slika 7.
Slika 16 : Primer strukture terminološkega vnosa
Če želimo podatke v bazi čimbolj poenotiti , lahko za vse podatkovne kategorije z vnaprej določljivo vsebino določimo izbirni seznam ( npr. Spol : m , ž , s ) .
Zdaj lahko v programu MultiTerm ustvarimo novo bazo , in sicer z ukazi Termbase - Create Termbase ....
Ko smo določili , v katero mapo naj program shranjuje datoteke nove baze , vstopimo v čarovnika , ki nas vodi po posameznih korakih ustvarjanja baze .
V prvem koraku imamo na voljo tri načine ustvarjanja baze ( Slika 17 ) .
Prva možnost je ustvarjanje lastne baze s strukturo vred , se pravi brez uporabe predlog , ki so priložene programu .
V drugem koraku bazo poimenujemo .
Ime , ki ga izberemo tu , bo MultiTerm uporabljal le za prikaz baze v okviru programa .
Vse datoteke , ki jih program samodejno ustvari ob novi bazi , se bodo imenovale drugače .
Privzeti tip vseh teh podatkovnih kategorij je besedilo ( Text ) , kar pa zlahka spremenimo s klikom na tipko Advanced ....
Odpre se okence , kjer lahko izbiramo med različnimi tipi podatkovnih polj , za izbirna polja ( Picklist ) pa lahko tudi določimo možne vrednosti ( Slika 18 ) .
Slika 18 : Določanje tipa podatkovne kategorije
V naslednjem koraku določimo še strukturo baze .
MultiTerm ima vnaprej določene tri ravni , na katere se uvrščajo podatkovne kategorije , in sicer raven pojma oziroma vnosa ( Entry level ) , raven jezika ( Index level ) in raven termina ( Term level ) .
V skladu s prej opisano strukturo baze bomo uvrstili kategoriji Slika in Področje na raven vnosa , kategorijo Razlaga na raven jezika in kategoriji Spol in Primer rabe na raven termina .
Ko smo pod en terminološki vnos dodali vse podatke , ga shranimo s tipko F10 ali menijskim ukazom Entry - Save ali desnim klikom in izbiro Save .
Drugi način za vnašanje je s pomočjo vnosne maske ( Input Model ) , ki si jo definiramo v meniju Entry - Input Models ....
V primeru , da želimo podatkovne kategorije zgolj preimenovati , lahko bazo izvozimo v obliko XML in spremembe opravimo s funkcijo Zamenjaj v enem od urejevalnikov besedil .
Privzeta oblika , v katero lahko izvozimo podatke , je XML , pri čemer program uporablja zapis , ki je podoben standardu TBX , ni pa z njim skladen ( Slika 20 ) .
Druge oblike izvoza so še HTML , zapis MultiTerm5 , RTF in golo besedilo , kjer so podatkovni stolpci ločeni s tabulatorji .
Pretvarjanje obstoječih glosarjev v MultiTermovo obliko je bilo nekoč kompleksno in zamudno opravilo , od različice 8 naprej pa MultiTerm neposredno podpira uvoz iz Excelove tabele .
8.2 Pogoste napake O izdelavi terminoloških glosarjev smo doslej povedali že kar nekaj , za resno terminografsko delo pa so zagotovo potrebne tudi ustrezne izkušnje .
Slika 21 : Primer iz študentske terminološke baze o ekološkem kmetovanju
Slika 22 : Primer vnosa iz študentske terminološke baze o vinarstvu
Na Slika 22 je primer iz baze o vinarstvu , ki že na ravni termina krši načelo elementarnosti .
To je pri neukih uporabnikih MultiTerma zelo pogosta napaka , ki se pojavlja v različnih oblikah , na primer z vključevanjem določnega člena v indeksno polje ( angl. the Big Bang [ astronomija ] , nem .
To napako izkazuje tudi baza , iz katere je vzet primer na Slika 21.
Stvarno kazalo akronim besednovrstni vzorec , 28 citatni prevzem , 36 , 37 definicija diskurz , 6 , 7 , 25 , 26 dokumentalist , 33 dolžina termina , 28 FIDAplus , 20 , 37 gospodarnost , 33 , 37 , 40 holonim istoredni pojem izlastnoimenski termini , 38 kalk , 39 kalkiranje , 39 ključnost , 73 kolokacija konkordanca , 21 , 72 konverzija , 39 korpusna terminologija , 11 krajšava , 27 , 78 kratica , 27 leksem , 12 leksikografija , 42 , 52 leksikologija , 12 LISA , 53 meronim MultiTerm , 45 , 55 , 86 , 87 , 88 , 89 , 90 , 91 načelo enoznačnosti , 11 oblika terminov , 27 ontologija , 19 podatkovna kategorija , 45 , 46 poimenovanje , 11 , 12 , 14 , 18 , 19 , 25 , 36 , 39 pojavnica , 68 pojavnice , 76 , 78 pojem , 11 , 14 , 15 , 18 , 21 , 25 , 45 , 47 , 51 , 54 , 60 pojmovna razmerja , 14 pojmovnik pojmovno načelo , 15 , 22 pojmovno polje , 18 , 47 pomen pomenotvorje , 39 prevzemanje , 36 razlaga različnica , 68 razmerja razmerja med pojmi , 14 , 19 , 20 , 21 , 22 , 25 , 46 , 49 , 60 semantični splet , 19 semantično omrežje , 15 seznam praznih besed , 68 sinonim skladenjski vzorec , 27 strokovni jezik , 6 , 7 , 8 , 36 strokovno-specifična referenca , 26 struktura baze taksonomija TBX , 44 , 45 , 53 TEI , 53 termin , 11 , 14 , 20 , 25 , 26 , 28 , 33 , 45 , 46 , 47 , 54 , 76 , 77 , 83 , 89 terminografija , 1 , 11 , 42 , 43 , 57 , 61 terminolog , 34 , 74 terminologija , 6 , 10 , 11 , 12 , 33 terminološka baza , 45 terminološka veda , 10 , 11 , 19 , 40 Terminološka veda , 10 terminološka kolokacija , 27 , 28 , 73 terminološka variacija , 18 , 29 , 61 terminološki slovar , 29 , 34 , 42 , 44 , 48 terminološkost , 26 , 27 terminotvorje , 36 tezaver variacija Wordsmith , 66 , 67 , 72 , 73 XML , 53 , 55 , 67 , 90 , 91 1 Po SSKJ celo le gospodarska dejavnost ali znanstvena panoga .
4 http://wordnet.princeton.edu 5 http://olp.dfki.de/ontoselect 6 Z neslovenskostjo medicinskega izrazja se še posebej kritično ukvarja Toporišič ( 1968/2006 : 449-461 ) , ki " nepotrebno tujčevanje " pripisuje vsesplošni jezikovni lagodnosti zdravnikov , pa tudi potrebi po dajanju vtisa učenosti oziroma " poskrivnostenju preprostih resnic našega telesa in njegovih stanj " .
Kot je razbrati iz spremne polemike , medicinska stroka na te očitke odgovarja predvsem z argumentom , da je z uporabo izrazov latinskega izvora medicinski jezik eksaktnejši , po drugi strani pa je takšna raba omejena na znanstvena medicinska besedila , medtem ko se v strokovnih in poljudnih besedilih izrazje prilagaja laiku v smislu rabe pretežno slovenskih izrazov , kjer ti obstajajo .
7 Splichal , S. ( ur .
27 http://www.star-ts.com/STAR/eng/products5_webterm.htm 28 http://www.sdl.com/en/products/products-index/multiTerm.asp 29 http://www.lexicool.com/soft.asp 30 http://club.cycom.co.uk/termManage.html 31 Primeri so vzeti iz glosarja puškarstva , ki ga je v okviru predmeta Prevajalska orodja v študijskem letu 2007/2008 izdelala Vida Frelih .
Korpusne metode v jezikoslovju pri izdelavi osnutka konjeniškega terminološkega slovarja IZVLEČEK Vsaka dejavnost je povezana z rabo specializiranih izrazov , oblikovno različnih od običajno rabljenih besed , ki so zaradi umeščenosti na določeno strokovno področje rabljeni terminološko .
Zato je vse več uporabnikov specifičnih terminov s tega področja , na katerem se terminologija pravzaprav šele oblikuje .
Magistrska naloga predstavi metodologijo gradnje osnutka konjeniškega terminološkega slovarja .
Osnova za izbor gesel so samodejno izdelani seznami terminoloških kandidatov , besed in besednih zvez , ki na podlagi statističnih obdelav izstopajo kot pomembne za stroko .
Ročni pregled tako pridobljenih seznamov pokaže njihovo uporabnost in probleme , povezane z razlikovanje terminov od neterminov .
Kot gradivo za izdelavo korpusa sem izbrala elektronsko obliko nekaterih izvodov » Revije o konjih « , revije » Horses « , knjigi » Osnovo šolanje jahača in konja « , » Nadaljevalna šola jahanja « ter knjigo » Njegovo veličanstvo , konj « .
Pri delu sem uporabila Wordsmith Tools za identifikacijo potencialnih terminov , SketchEngine za primerne rabe in kolokatorje izbranih slovarskih iztočnic , za izdelavo poskusnega terminološkega slovarja pa Tradosov program MultiTerm .
Predstavljena sta analiza konjeniškega izrazja in osnutek konjeniškega terminološkega slovarja v XML obliki .
Osnutek slovarja vsebuje sedemindevetdeset vnosov in sto petnajst različnih terminov .
Vendar pa v leksikologiji in leksikografiji pomeni bistveno spremembo metodologije jezikoslovnega raziskovanja in tako oblikuje samostojno raziskovalno področje .
Ključne besede korpus , korpusni pristop , konjeniška terminologija , terminografija , terminološki slovar
1 1.2 TERMINOLOŠKI SLOVARJI IN KORPUSNO JEZIKOSLOVJE ..........................
3 2.
OBDELAVA KORPUSA KKB IN NJEGOVA ANALIZA Z ORODJI WORDSMITH TOOLS .....................................................................................................
24 5.4 KOLOKACIJE ...........................................................................................................
36 7.3.1 METODA 1 : Ključne besede ..................................................................................
39 8.
70 9.4 ANALIZA SLOVARSKEGA GRADIVA IN TERMINOLOŠKEGA SLOVARSKEGA VZORCA ...........................................................................................
78 11.
98 PRILOGA 4 : Tabela 4 : Sketch Engine ( primer 15 ) ........................................................
Slika 1 : Primer konkordance za besedo » kas « ........................................................................
38 Slika 3 : Večbesedna enota » pleča bočno « v programu Konkordance WST ............................
40 Slika 5 : Slika prikazuje iskanje po metodi » clusters « v programu WST .................................
58 Slika 10 : Primer vnosa v MultiTerm z vsemi podatki .............................................................
70 Slika 11 : Primer vnosa enobesednega termina ........................................................................
71 Slika 12 : Primer vnosa večbesednega termina ........................................................................
72 Slika 13 : Primer vnosa sinonimov ...........................................................................................
72 Slika 14 : Primer navzkrižnega navezovanja ( podčrtane besede ) ............................................
19 Tabela 4 : Vzorec ključnih besed iz posameznih enot korpusa .................................................
51 Tabela 15 : Primeri konkordanc v kombinaciji s predlogom » v « ............................................
69 Tabela 18 : Podatki , ki jih lahko vsebujejo vnosi v MultiTerm .................................................
UVOD V magistrski nalogi je predstavljen korpusni pristop v fazah gradnje osnutka konjeniškega terminološkega enojezičnega slovarja .
Korpus nam omogoča , da terminologijo zberemo in opazujemo v besedilih , se pravi v naravnem okolju , postopek iskanja izrazov pa je mogoče v precejšnji meri tudi avtomatizirati .
Magistrska naloga vsebuje postopno gradnjo slovarja in opisano priporočeno programsko opremo , ki pa gradnje ne podpira v celoti .
1.1 NAMEN IN METODE MAGISTRSKE NALOGE Odkar se je začela gradnja korpusov , nekje leta 1964 ( Brown ) in leta 1980 ( The Bank of English ) , se morajo sestavljalci slovarjev nujno zavedati , da sodobni leksikografski pristop terja vključitev korpusov , četudi samo delno ( Logar 2009 ) .
Trenutno nastajajo slovenski terminološki slovarji večinoma brez korpusov .
Večina strok pri nas še vedno nima lastnega slovarja , zato je vsaka gradnja ali poskus gradnje dobrodošel .
1 http://www.islovar.org Korpus strokovnih besedil omogoča pridobitev jezikovnih podatkov za terminološki slovar določene stroke .
Sledi faza gradnje korpusa , ki bo kot stranski proizvod ključnega pomena pri pridobivanju informacij za terminološki slovar , nato pa izbor terminov oz. faza luščenja terminologije , ki je zaradi korpusnega pristopa in raznih metod luščenja terminologije manj zamudna .
Geslovnik je predpogoj za izdelavo terminološke baze , saj je najprej treba določiti podatke , ki bodo vključeni v vnos .
Končni izdelek bo vzorčni konjeniški slovar , izdelan v programu Trados Multiterm .
V prvem delu naloge so izpostavljeni izbira besedil in gradnja korpusa ter obdelava podatkov s programom WordsmithTools , v drugem delu pa sledijo luščenje terminologije , izdelava poskusnega geslovnika ter izdelava vzorčne terminološke baze .
1.2 TERMINOLOŠKI SLOVARJI IN KORPUSNO JEZIKOSLOVJE Delo jezikoslovca Mateja Cigaleta Znanstvena terminologija s posebnim ozirom na srednja učilišča ( 1880 ) velja za prvi slovenski terminološki slovar .
Glavna pomanjkljivost ostaja v tem , da slovarski opis ne nastaja na podlagi analize sodobnega gradiva , temveč na podlagi jezikovne intuicije skupine avtorjev .
H gradnji terminoloških slovarjev pristopa naravnost iz besedil , ki so dokazi jezikovne rabe oz. tega , kaj se bo verjetneje pojavilo v jezikovni rabi .
Šele elektronska oblika jezikovnih podatkov je zares omogočila empirično analizo dejanskih vzorcev jezikovne rabe .
Kakovost ter količina gradiva , možnost njegove avtomatske in parametrske obdelave ter vse , kar je še povezano z gradivom , je torej tisto , kar loči predkorpusni način izdelave terminoloških slovarjev in podatkovnih zbirk od korpusnega ( Logar 2009 ) .
Poleg tega ima korpusni pristop še nekaj prednosti .
V tem poglavju velja omeniti tudi Slovenski terminološki portal2 , ki je raziskovalni projekt , katerega temeljni cilj je ustvariti skupna teoretična , metodološka in tehnološka izhodišča za zbiranje in razširjanje strokovne terminologije v slovenskem prostoru .
2 http://lojze.lugos.si/stp/index.html
Gre za obsežno elektronsko besedilno zbirko , ki obsega vzorčni delež besedil slovenskega jezika .
Osnovni namen takega korpusa je , da omogoča temeljit vpogled v jezik na najrazličnejših ravneh in področjih .
3 http://www.fidaplus.net/ Korpus FidaPlus vsebuje besedila najrazličnejših zvrsti iz večine slovenskih dnevnih časopisov , mnogih revij ter knjižnih publikacij različnih založb ( literarna besedila , učbenike , stvarno literaturo ) .
Tako ponuja možnost natančnega raziskovanja slovenskega jezika , kot se je pojavljal v besedilih , objavljenih od l. 1990 do 2006.
Z uporabo računalniške tehnologije prinašajo tudi novo metodologijo dela .
Področje konjeništva sem izbrala , ker na tem področju aktivno delujem že dvajset let .
Namen magistrskega dela je preizkus novih , računalniško podprtih načinov gradnje terminološkega slovarja .
Namen gradnje korpusa KKB so predvsem zaključne ugotovitve o njegovi homogenosti ali uravnoteženosti , pa tudi o njegovi uporabnosti za nadaljnje terminološke raziskave ter terminografske namene .
2.
KORPUSNO PODPRTA TERMINOGRAFIJA Zajemanje in opisovanje besedišča s pomočjo računalniških konkordanc je neprimerno lažje in hitrejše kot na osnovi listkovnega gradiva .
Pridobljeni korpus in njegova podrobnejša analiza služita za pridobitev jezikovnih podatkov , potrebnih za izdelavo terminološkega slovarja neke stroke .
Terminološki slovar zahteva svoje termine , ki jih poiščemo in prepoznavamo na podlagi pridobljenega korpusa .
Za terminografsko prakso to pomeni , da vnos v terminološki zbirki ustreza enemu pojmu , pod isti vnos pa beležimo vsa njegova poimenovanja .
Njena osnovna enota je pojem .
Vendar strokovno izrazje žal ni omejeno samo na strokovni in znanstveni diskurz , ampak se delno prekriva s splošnim jezikom in z drugimi področji .
Ta izhaja iz strokovnega besedila , ki naj bi vsebovalo tri kategorije izrazja , glede na kriterij strokovne specifičnosti ( Vintar 2008 , str. 37 ) .
Analiza komunikacijske situacije je ključna postavka pri ugotavljanju , ali je jezik določenega diskurza terminološki ali ne .
Vintarjeva tudi ugotavlja ( 2008 ) , da na našo presojo , ali je neko sredstvo termin ali ne , precej vpliva tudi poznanost in razširjenost izraza oz. delež oseb v populaciji nekega jezika , ki jim je izraz poznan .
Ta kriterij je izrazito subjektiven , pa tudi intuitiven , saj ga v okviru svojega čuta lahko uporablja prav vsakdo , brez predhodnih znanj iz terminologije , ki se kot veda posveča izrazju strokovnih jezikov , kjer izraze išče , določa in ureja ( Vintar 2002 ) .
Z drugimi besedami , več ljudi ko uporablja izraz , bolj se ta posplošuje in vse manj je izraz termin .
Na začetku gradnje korpusa strokovnega jezika je vsekakor pomembna določitev predmetnostnega področja in s tem možnega nabora besedil ( Gorjanc , Logar 2007:640 ) .
Odločitev je sledila pičli izbiri dosegljivih besedil v slovenskem jeziku .
Učbenika » Osnovno šolanje jahača in konja « ter » Nadaljevalna šola jahanja « sta dragocen vir zgoščenosti konjeniških terminov .
Korpusi strokovnih jezikov ne gradijo na količini , ampak na kakovosti besedilnih virov ( Meyer , Mackintosh 1996:268 ) .
Predvsem zaradi količine besedilne produkcije ni pričakovati korpusov tako velikega obsega kot ga imajo referenčni , hkrati pa je velikost odvisna od tega , katero predmetno področje bo korpus zajel .
KKB ne vsebuje govornih besedil , ampak samo pisna besedila .
Za besedilno uravnoteženost je nujno , da korpus zajema tri osnovne tipe besedilnih vrst , in sicer znanstvena , didaktična in poljudna ( Gorjanc , Logar 2007:642 ) .
Za znanstvene razprave , mogoče na meji s poljudnim , bi lahko veljali knjiga g. Humarja » Njegovo veličanstvo konj « ter nekaj člankov iz » Revije o konjih « , v didaktično vrsto besedil bi umestila dva učbenika » Osnovno šolanje jahača in konja « in » Nadaljevalna šola jahanja « , med poljudno pa obe reviji .
Pri dobesednih prevodih različnih agencij se pogosto dogaja , da se v prevodu pojavljajo izrazi , ki nimajo nobene veze s pravim pomenom besede .
3.2.3 Homogenost Homogenost korpusa v smislu besedišča , ki ga predstavlja , je pri korpusih strokovnih besedil aktualnejši pojem kot pokritost čim več različnih zvrsti , kot jo pričakujemo pri splošnih korpusih ( Vintar 2003:32 ) .
Pri gradnji korpusa za namen luščenja terminologije se je izkazalo ( Vintar 2003:30-31 ) , da je luščenje tem bolj uspešno , čim manj je v korpusu različnih besedilnih vrst , boljši pa so rezultati tudi pri luščenju besedil , med katerimi je bil manjši časovni razpon besedil , ki so vsebovala malo ekskurzov na druga področja ( Gorjanc , Logar 2007:643 ) .
Pri natančnejši analizi korpusa KKB in njegovih delov se je izkazalo , da nekateri deli korpusa , kot sta npr. dva učbenika , zagotavljajo njegovo homogenost , drugi deli pa ne .
Več o homogenosti KKB bo razvidno iz analiz v nadaljevanju .
Na koncu raziskave in obdelave podatkov se bo pokazalo , ali ustreza zahtevam parametrov za uravnoteženost .
KKB je nastal zaradi poskusa gradnje , obdelave podatkov in izločitve nekaj sto terminov , na podlagi katerih se bodo odločitve glede izbire besed izkazale za pravilne oz. nepravilne .
Te leme se nato lahko uporabljajo pri leksikalni analizi besedil .
TXT Na začetku navajam tri različice istega besedila ter potek čiščenja in obdelave besedila za kasnejšo uporabo v izbranem programu WordSmith 4.0.
WordSmith Tools deluje na UNG , kjer je tudi na voljo za brezplačno uporabo z geslom za raziskovalne namene .
Pripravljena besedila je bilo potrebno samo še vnesti v program Oxford Word Smith Tools 4.0 ter začeti z obdelavo podatkov .
Program je primeren za delo z enojezičnimi korpusi , kar korpus KKB tudi je .
Piše o delu klubov in konjeniških zvez , o športnih dosežkih doma in v tujini .
Le nekateri avtorji člankov so konjeniški strokovnjaki , iz česar sledi , da je v tem delu korpusa zajeta le splošnejša , tudi širši javnosti razumljiva konjeniška terminologija .
2 Na drugem mestu po številu pojavnic ( 12% ) je revija » Horses « , in sicer izvodi od maja 2008 , ko je revija prvič izšla , pa do februarja 2009.
3 Na tretjem mestu , in sicer z 11% pojavnic , je knjiga Iztoka Humarja » Njegovo veličanstvo konj « .
Opozarja tudi na licemerstvo , ki se pojavi , ko naš prijatelj konj ni več sposoben služiti človeku , tako da ga slednji po desetletju vdanosti , pomoči in lajšanja težav odpošlje na zadnjo postajo - v klavnico .
Knjiga je izšla leta 2005. I. Humar je dolgoletni strokovnjak na svojem področju , zato bi njegovo knjigo umestila na bolj specializirano področje , zatorej tudi med terminološko bogatejša besedila .
4 Četrto mesto po številu pojavnic ( 9% ) si delita knjigi Osnovno šolanje jahača in konja ter Nadaljevalna šola jahanja , obe prevedeni iz nemškega jezika .
Čeprav po številu pojavnic predstavljata skoraj najmanjši del korpusa , sta knjigi v primerjavi s preostalimi besedili najbolj specializirani in zato terminološko najbogatejši .
Večinski delež korpusa » ROK « ter revija » Horses « je namenjen preveritvi in besedilnemu opazovanju predvsem širše rabljene konjeniške terminologije , ki je glede na leto izida tudi najaktualnejša .
Najmanjši del korpusa , knjiga I. Humarja , je bil vključen kot del strokovno-poljudne zvrsti ob zavedanju , da gre za prvi poskusni korpus konjeniških besedil , zato je bil pomemben vsak vir besedil , ki sem ga lahko dobila brezplačno v elektronski obliki .
Program omogoča delo z velikimi besedilnimi zbirkami in datotekami , če so vse v enakem kodiranju in shranjene kot golo besedilo .
Za izdelavo seznama besed lahko izberemo eno besedilo ali pa celoten korpus .
Tabela 1 : Seznam prvih šestdesetih besed iz KKB ; WST
Seznam besed je prva vstopna točka za terminološko delo s korpusom .
Iz tabele 2 lahko utemeljeno sklepamo , da so na področju konjeništva besede streme , bič , vadba , lonža , trening termini ali deli terminov .
V fazi pregledovanja enobesednega seznama lahko posamezno besedo že preverimo v sobesedilu , in sicer z neposrednim preklopom v program Concord , kjer se za izbrano besedo izdela konkordanca .
V programu » Word list « ( Seznam besed ) lahko dobimo tudi podatke vseh besedil , kot je predstavljeno v tabeli 3.
Absolutni in standardizirani TTR predstavlja razmerje med različnicami in pojavnicami ter omogoča vpogled v bogastvo besedišča posameznih besedil in korpusa samega .
Prav tako je za korpusno terminografijo nujno zavedanje , da še tako obsežen reprezentativen korpus ne more zajeti vsega izrazja z določenega področja , zato je potrebna nadgradnja z drugimi viri ( Vintar 2008 : 96 ) .
5.2.
To namreč niso najpogostejše besede , kakršne dobimo na vrhu besednih seznamov , npr. vezniki , členki itd. , ampak besede , ki se nepričakovano pogosto pojavljajo v nekem besedilu .
Za uporabo programa » Key words « je poleg besednih seznamov potreben tudi referenčni korpus in njegov pogostostni seznam besed .
Za referenčni korpus je bil uporabljen 1 milijonski referenčni korpus » jos1M « 8 , ki je korpus z delno ročno preverjenimi oznakami .
Korpus v XML vsebuje kolofon TEI ( metapodatki o korpusu , tako v slovenskem kot angleškem jeziku ) in vzorce besedil .
Zapis korpusa v XML vsebuje slovenske oblikoskladenjske oznake in knjižnice lastnostnih struktur .
Korpus KKB je bil razdeljen na tri enote , ki naj bi jih tvorila tematsko preklopna besedila , in sicer enota » O+N « ( Osnovno šolanje jahača in konja , Nadaljevalna šola jahanja ) , enota dveh revij » R+H « ( Revija o konjih , Horses ) ter enota knjige » Njegovo veličanstvo , konj « .
Ključne besede enote » R+H « pretežno prekrivajo termine iz tekmovanj , reje ter rekreacije , ključne besede zadnje enote pa zadostijo redkim pogojem iskanja , saj se po uporabi terminov knjiga izkaže kot pretežno poljudna ali pa so se besedne zveze nekje v obdelavi izgubile .
Pogrešanih je bilo nekaj enobesednih in večbesednih terminoloških kandidatov , za katere je zelo verjetno , da jih je g. Humar v svoji knjigi uporabil ( hlapanje , medvedja hoja , itd. ) , v seznamu ključnih besed pa jih nekako ni .
Kratka analiza pokaže , da je enota združenih učbenikov » O+N « pretežno ugodila merilom homogenosti vsaj glede besedišča , ki ga predstavlja .
Ob misli , da je imela » Revija o konjih « bistveno prevladujoče število pojavnic , je treba dodati , da je pri korpusih strokovnih jezikov bolj pomembna kakovost besedil kot količina pojavnic .
Vsekakor pa je korpusno jezikoslovje razmeroma kvantitativno , zato večji ko je korpus , zanesljivejši so rezultati .
V tabeli 5 bo predstavljenih nekaj terminoloških kandidatov iz seznama ključnih besed KKB .
Seznam ključnih besed je na voljo v dodatku .
5.3 KONKORDANCE Konkordančnik nam omogoča vpogled v številne primere umeščenosti besed in besednih zvez v sobesedilu ter opazovanje , kako se obnašajo v njem .
Zaradi velikega števila primerov so bili iskalni pogoji omejeni na prvega levega soseda besede » kas « .
Slika 1 : Primer konkordance za besedo » kas «
Od prostih besednih zvez se razlikujejo predvsem po tem , da se besede pojavljajo skupaj pogosteje , kot bi se po naključju .
Te besedne zveze so v jeziku ustaljene in jih ne moremo spreminjati , sicer to niso več kolokacije10 .
10 http://sl.wikipedia.org/wiki/Kolokacija Tabela 6 : Primer izbranih kolokacij besede » kas « Seznam nam nakazuje vse kolokacije , njihovo število pojavitev in natančno mesto pojavljanja .
Tabela 7 prikazuje kolokacije besede » naslon « .
Kot poznavalka konjeniške stroke lahko takoj izluščim nekaj večbesednih terminoloških kandidatov : rahel naslon , enakomeren naslon , zanesljiv naslon ( doseči naslon , ostati v naslonu ) itd.
V » prečiščenih « kolokacijah že najdemo vrste nosnikov .
ANALIZA KORPUSA Pri korpusih strokovnih jezikov je kakovost besedil pomembnejša od števila pojavnic .
Vanj so vključena različna besedila od leta 1995 do leta 2008.
Za specializirane korpuse je značilno , da je bolj kot količina pojavnic , pomembna kakovost besedil .
Po številu pojavnic je prevladovala « Revija o konjih « ( 59% ), vendar se je že po krajši analizi izkazalo , da kljub velikemu številu pojavnic , ne dosega parametra homogenosti .
Analiza ključnih besed celotnega korpusa KKB poda dejstvo , da je bilo pri ročnem pregledu prvih dvesto besed opaženo pojavljanje besed iz dokaj raznovrstnih področij konjeništva .
Pričujoči korpus KKB služi za nadaljnjo analizo in iskanje potencialnih terminov pri oblikovanju konjeniškega terminološkega slovarja .
ISKANJE TERMINOLOŠKIH KANDIDATOV OZ. LUŠČENJE TERMINOLOGIJE Strokovno izrazje navadno luščimo iz korpusa besedil neke stroke .
Odgovor je lista ključnih besed , na kateri seveda niso zgolj termini , vendar pa te besede natančno označujejo področje , kamor sodita besedilo in njegov terminološki inventar .
7.1 IZBOR TERMINOV Načeloma lahko termin vsebuje vse besedne vrste ( Vintar 2008 ) .
Termini , ki so bili izbrani za nadaljnjo obdelavo , so izključno samostalniki kot enobesedni termini in kombinacija pridevnik+samostalnik kot večbesedni termini .
Na končnih seznamih je bilo sicer zanemarljivo število glagolov .
Zato tudi veliko terminov iz tega področja izvira prav iz teh dveh jezikov , nekaj tudi iz angleščine .
Prav to je tudi najpomembnejši dejavnik : ali so novonastala pojmovanja za poimenovanje v določenem jeziku pod vplivom že obstoječega v tujem jeziku ali pa gre za povsem novo predmetnost .
Terminotvornih procesov je več , zato bo del osmega poglavja posvečen analizi vsakega termina posebej ter opisu predvidenega terminotvornega procesa .
Izbrani termini predstavljajo izbor gesel , ki bodo vnešena v bazo podatkov .
Izdelava baze neposredno sledi fazi nabora gesel .
7.2 ISKANJE ENOBESEDNIH TERMINOLOŠKIH KANDIDATOV Pri iskanju enobesednih terminoloških kandidatov sem uporabila seznam ključnih besed , izdelan z orodji WordSmith Tools .
Treba je upoštevati , da večja pogostost v korpusih strokovnih besedil ni nujno pogoj za večjo terminološkost , kar pomeni , da je velik del specializiranih terminov nujno iskati v spodnjem delu seznama oz. kjer je število pojavitev majhno .
Te besede izstopajo iz splošnega besedišča , bodisi po svoji relativni pogostosti , bodisi po nepoznanosti .
Seznam ključnih besed se natančneje pregleda najprej na mestih , kjer se besedni nizi ne pojavijo v referenčnem korpusu .
Nato se seznam pregleda še z vidika pogostosti pojavnosti oz. ključnosti .
Zanimivo , da med prvimi 100 besedami ni veliko terminov , kajti prevladujejo besede , ki spadajo bolj v splošno in ne v specifično rabo , kot so npr. konj , tekmovanje , hlev , pokal .
Termini so v tem delu seznama skriti , čeprav seveda ne moremo zanikati , da jih ni .
Vse to vodi k domnevi , da je to izbirno izrazje s področja konjeništva tudi del splošnega jezika .
Možno je tudi , da je korpus z vidika » luščenja « terminov neugoden , čeprav zajema besedila določene stroke .
Seznam je ročno prečiščen in vsebuje 153 terminov , med katerimi so tudi pridevniki , ki so potencialni indikatorji večbesednih terminov , kot sem že omenila , npr. » dresuren « .
Tabela 10 prikazuje deset terminoloških kandidatov , ročno izluščenih z metodo seznama ključnih besed , kjer so izpeljane že večbesedne enote .
Iskanje besed po ključnosti temelji na pogostosti pojava besednih enot ter besednih kolokacij v besedilu .
Slabost statističnega pristopa je tudi , da izbere samo izraze , ki se v korpusu pojavijo večkrat , termini pa se velikokrat skrivajo v eni sami pojavitvi .
7.3 ISKANJE VEČBESEDNIH TERMINOLOŠKIH KANDIDATOV Termini so v strokovnem jeziku večinoma sestavljeni iz več besed , zato je prepoznavanje večbesednih enot osrednjega pomena .
Na podlagi korpusa lahko izračunamo verjetnost , da se neka beseda pojavi poleg druge ter opazujemo njeno širše okolje .
Prednost statističnih metod je v njihovi neodvisnosti od jezika , saj je razvite metode možno uporabiti na kakršnemkoli korpusu ( tudi če je sestavljen iz nesmiselnih kombinacij znakov in presledkov ) .
Druga metoda je luščenje terminov s pomočjo oblikoskladenjskih vzorcev .
V nalogi je uporabljena statistična metoda , saj jo podpirajo programi , ki sem jih imela na razpolago .
7.3.1 METODA 1 : Ključne besede S pomočjo programa WST lahko iščemo večbesedne termine na dva načina .
S pomočjo konkordančnika se izbistri dvobeseden termin » pleča bočno « , katerega zgradba S+P je prava redkost v mojih doslej odkritih terminih .
Iskanje termina s pomočjo konkordančnika je prikazano na sliki 2.
Kot je razvidno , večina zadetkov kaže uporabo besedne zveze , torej lahko » pleča bočno « opredelimo kot dvobesedni termin .
S tem pristopom pridobimo zelo malo večbesednih terminov , predvsem pa je iskanje zelo zamudno in nesistematično .
7.3.2 METODA 2 : » WordSmith Clusters « Druga metoda , ki jo ponuja program WST , je metoda » clusters « .
Predstavljajo malce tesnejšo zvezo , kot so kolokacije , in so neke vrste večbesednih enot .
Slika 4 : Slika prikazuje iskanje po metodi » clusters « v programu WST .
Slika 5 : Slika prikazuje iskanje po metodi » clusters « v programu WST
Ti rezultati seveda ne kažejo dejanskega števila večbesednih terminov po publikacijah , ampak samo pridobljeno število terminov s pomočjo omenjenega programa in metode .
Na sliki 6 sledi pridobljeno število večbesednih terminov po besedilih .
Slika 6 : Slika prikazuje pridobljene večbesedne termine po besedilih z orodjem WordSmith Clusters
Daleč največje število terminov je iz besedil ROK ( 5.610 ) , sledi revija Horses ( 1.338 ) , za njo pa še tri knjige Osnovno šolanje konja ( 764 ) , Nadaljevalna šola jahanja ( 840 ) in Humarjeva knjiga ( 607 ) .
Iz tega seveda ne sledi , da je več tudi bolje , saj , kot sem že omenila , se termini lahko skrivajo tudi za izrazi , ki se pojavijo samo enkrat .
Ta metoda oz. program z veliko manj truda prinese vrsto večbesednih terminov , za katere se je potrebno po prejšnjem seznamu ključnih besed pošteno potruditi .
Seveda niso vse izluščene besede termini .
Končni rezultat je seznam 9.159 besednih zvez , kar je zelo spodbudno , saj naj bi bilo iz vseh teh besednih zvez predvidoma treba izluščiti obilico večbesednih terminov , vendar se po ročnem prečiščevanju izkaže drugače .
Že na prvi pogled je očitno , da je treba seznam pošteno pretresti za kakršnekoli terminološke raziskave .
prislove − rezala na začetku in koncu , če pa je ostala le ena beseda , sem jo zavrgla ( kajti to ni večbesedni termin ) , - terminološka besedna zveza mora vsebovati enobesedne termine , in sicer po načelu " pol ali več " .
To pomeni , da sem uporabila prej opisani seznam enobesednih terminov in izločila vse dvobesedne zveze , ki niso vsebovale nobenega termina , in vse tro - in štiribesedne , ki niso vsebovale najmanj dveh .
Razmerja med dolžino seznamov besednih zvez iz posameznih besedil in pridobljenih terminov iz njih sem ponazorila na sliki 7.
Iz slike je razvidno , da je največ večbesednih terminov izluščenih iz dveh knjig oz. učbenikov .
0 , 00 % 1 , 00 % 2 , 00 % 3 , 00 % 4 , 00 % 5 , 00 % 6 , 00 % 7 , 00 % 8 , 00 % Humar 607Osnovnošolanjekonja 764Nadaljevalnašola jahanja840Horses1338Rok 5610besedila po številu besednih zvezterminiNiz1 Večbesedni termini , pridobljeni s programom Term Extraction Demo , so prikazani na tabeli 13.
Naslednja slika prikazuje količino izluščenih večbesednih terminov po različnih besedilih z dvema različnima metodama WST ( clusters ) in Term Extract Demo .
IZDELAVA GESLOVNIKA Za obdelavo terminov , iskanje gesel in definicij ter preverjanje kolokacij , skratka analize , sem uporabila program Sketch Engine12 , v katerega je bil predhodno nameščen korpus KKB .
V programski modul Sketch Engine je dr. T. Erjavec naložil korpus z imenom » konji « .
12 http://www.sketchengine.co.uk/ Program Sketch Engine se odlikuje še po velikem številu funkcij za obdelavo jezika , najpomembnejše pa so konkordančnik višje kvalitete , besedne skice in skice razlik , ki so uporabne za prepoznavanje sinonimov in razlikovanje med podobnimi besedami , ter tezaver , ki zazna besede s pomensko podobnostjo .
Rezultati kažejo , da besedne skice znatno olajšajo delo leksikografom slovenskega jezika .
8.1 PRIKAZ PRIPRAVE VZORČNIH PRIMEROV TERMINOLOŠKIH KANDIDATOV ZA VNOS V TERMINOLOŠKO BAZO IN NJIHOVA ANALIZA Izbrani termini za podrobnejšo analizo so pridobljeni z enobesednih in večbesednih seznamov iz poglavij 7.2 in 7.3 , dodani sta dve kratici .
Med njimi je šestindvajset terminov , deset dvobesednih , štirinajst enobesednih in dve kratici .
Izbrani termini so sledeči : krotilna uzda , lonžirni bič , parkur , širinska zapreka , maneža-jahališče-jahalnica , lonža , kazenske točke , navadna žvala , stroga brzda , ovira in zapreka , sedelni pas , stremenski pasovi , CI , zamah , kandara , podsedelnica , ganaša , baraž , nosnik , mehikanski ali križni nosnik , angleški nosnik , drog , FEI , naslon , kasač .
Izbrani primer so obdelani v programu Sketch Engine .
Prikazana bo izbira definicij ter kolokacij iz omenjenih programov in analizira nekaterih terminov .
Poznanemu terminu je bila dodana krajša razlaga .
Pridobljeni primeri rabe bodo služili za vnos neposredno v terminološko bazo .
Terminološke baze lahko še naprej gradimo s programi Word in Excel , vendar je tudi za te vnose smiselno uporabiti namenska računalniška orodja .
Uporabila sem program SDL Trados Multiterm14 , katerega prednost je , da s svojo zasnovo omogoča oblikovanje poljubnih podatkovnih kategorij , obenem pa predlaga njihovo strukturiranje po pojmovnem načinu ( Vintar 2008 , 114 ) .
Globalno lahko poišče tudi samo dele izraza , pri meglenem iskanju pa prebere celotno terminološko bazo , ustvari meglene podobe vseh izrazov in naredi kazalo .
Megleno iskanje je učinkovito tudi pri iskanju terminologije ( Ponikvar 2002 ) .
V bazi se opravlja redakcija , ki je primarna funkcija MT. Dodaja se nove podatke in briše napačne , kar pomeni , da je MultiTerm živa in ne statična terminološka baza .
To pomeni , da vnos vsebuje vse termine , ki opisujejo isti pojem oz. vsebuje vsa poimenovanja istega pojma kot tudi dodatne informacije , povezane s pojmom , npr. definicijo .
Vsak vnos v MultiTerm vsebuje najmanj en izraz v slovenskem jeziku in definicijo .
9.2 STRUKTURA TERMINOGRAFSKEGA VNOSA Terminološke baze , uporabljene v Multitermu , avtorju omogočajo lastno zasnovo strukture terminografskega vnosa .
Pri oblikovanju baze sem se odločila za naslednjo izbiro podatkovnih kategorij : - na ravni pojma : področje , ki je bilo omejeno na določeno število vnaprej definiranih področij ( splošni pojem je konjeništvo , ki se deli še na : oprema , reja , preskakovanje ovir , dresura ) , - na ravni jezika je definicija , - na ravni termina pa termin sam , primeri rabe , vir in možne opombe .
Tabela 18 opisuje vzorec vnosa termina v terminološko bazo .
Primer na sliki 10 vsebuje izraze v angleškem jeziku , zato nam je za lažje razumevanje v pomoč tabela 18.
Primer na sliki 10 prikazuje vnos , ki vsebuje vse možne podatke , ki so bili vstavljeni v masko vnosa .
Slika 10 : Primer vnosa v MultiTerm z vsemi podatki
9.3 ZAJEM PRIMEROV Vzorčna terminološka baza vsebuje sto šestnajst obdelanih terminov .
Definicije in primeri rabe so vzeti iz Slovarja slovenskega knjižnega jezika ali iz besedil , ki so bila na uporabo oz. korpusa , in sicer s pomočjo programa Sketch Engine .
Dodala sem tri kratice in deset terminov iz pravilnika disciplin , saj je njihova uporaba zelo razširjena .
Vsekakor je vzorčna terminološka baza ustvarjena za dodajanje terminov z namenom , da bi nekoč oblikovali pravi konjeniško terminološki slovar s čim več vnosi .
9.4 ANALIZA SLOVARSKEGA GRADIVA IN TERMINOLOŠKEGA SLOVARSKEGA VZORCA 9.4.1 Vnos enobesednih in večbesednih terminov ter vnos sinonimov Vzorčni slovar zajema sedemindevetdeset vnosov v terminološko bazo .
Večbesedni termini so sestavljeni iz besedne zveze pridevnik-samostalnik .
Slika 11 : Primer vnosa enobesednega termina
Slika 12 : Primer vnosa večbesednega termina
Slika 13 : Primer vnosa sinonimov
9.4.2 Vnosi z navzkrižnimi navezovanji Termini , ki imajo sorodne pojme , imajo dostop do njih v opombah z navzkrižnimi navezovanji .
Slika 14 : Primer navzkrižnega navezovanja ( podčrtane besede )
Z navzkrižnimi povezavami je mogoče skakati neposredno od enega terminološkega vnosa do drugega .
Navzkrižne povezave je mogoče ustvariti samo v besedilnih poljih .
9.4.3 Oblikovanje definicij in primeri rabe Nekaj definicij je iz SSKJ , večino pa sem jih je izpeljanih iz konteksta , ki ga je vseboval korpus KKB , s pomočjo konkordančnika Sketch Engine .
To seveda ne spada v korpusni pristop in kaže na možne pomanjkljivosti omenjenega pristopa .
Primeri vnosa v terminološko bazo so opremljeni z definicijo , področjem , primeri rabe ter viri primerov rabe in ponekod tudi z opombami .
Vendar je definicija največkrat subjektivna izbira avtorja oz. avtorjev slovarja , zato je pravi pomen besede največkrat bolje razviden iz konteksta .
Primeri rabe so vzeti iz korpusa KKB .
Vnosi v terminološki slovar so bili subjektivna izbira avtorice .
Subjektivna izbira so zato , ker so seznam ključnih besed in drugi pridobljeni seznami izluščenih terminov veliko daljši , kot je bilo število ciljnih vnosov v terminološko bazo .
Analize zato večinoma temeljijo na celotnem slovarskem gradivu in ne samo na slovarskih vnosih , ki ne morejo pokazati prave slike konjeniškega terminološkega izrazja , saj terminološki slovar deluje samo kot vzorčni primer .
Najdenih večbesednih zvez je okrog 45% , kar govori v prid tezi , da konjeniški termini pogosto nastajajo z ožjo opredelitvijo splošnega besedja .
Konjeniško izrazje se po teh splošnih značilnostih bistveno ne razlikuje od izrazja drugih strok .
Na seznamu ključnih besed je mogoče izluščiti le manjše število glagolov ( 17 ) , in še ti so v glavnem različice glagola jahati .
Pričakovati bi bilo , da je konjeništvo kot športna panoga polno glagolov , ki opisujejo konjeniške dogodke , kajti šport lahko definiramo kot živo dogajanje in nek ustvarjalni proces .
Na to misel me napeljuje poznavanje pogovorne rabe konjeniškega izrazja , kjer je število glagolov zagotovo večje , kot je pokazala analiza korpusnih podatkov .
Drog sicer usmerja uporabnika h knjižni rabi tega termina , vendar v stroki ni uveljavljen .
Pojmi , kot so baraž , refiz , parkur so že doživljali poskuse poslovenjenja , a nikoli zares uspešno .
9.4.5 Sklepne ugotovitve Nastali Konjeniški terminološki slovar vključuje pet področij , ki na splošno pokrivajo celotno področje .
Eno od petih je splošno , to je področje konjeništva , ostala štiri področja , reja , oprema , preskakovanje zaprek in dresura , pa so del bolj specifične rabe .
K temu me je privedlo dejstvo , da so manjkajoči termini nepogrešljivi v vsakodnevni rabi na omenjenem področju .
Korpusni pristop me je pripeljal do večjega , zadovoljivega števila terminov .
Trinajst terminov je bil vnesenih » po lastni izbiri « , kar kaže na manjši primanjkljaj v celotnem korpusu .
Glede na to , da je bil korpus že od začetka mišljen kot vzorčni , je bilo tak primanjkljaj terminov , ki kaže na nehomogenost korpusa , mogoče predvideti .
Več dostopnih virov bi verjetno omogočilo tudi več terminoloških kandidatov .
Primeri rabe so bili vzeti izključno iz korpusa , zato trinajst dodanih terminov ne vključuje primerov rabe .
Ker pa so kot pogoj vnosa vsaj termin in definicija , so tudi ti primeri zadovoljili minimalne pogoje vnosa .
Opravljena analiza konjeniškega izrazja prinaša ugotovitev , da za jezikovno raven ni značilna večja pogostost terminoloških glagolov , kot bi bilo pričakovati za športno področje .
Na razvoj slovenskega konjeniškega izrazja je vplival tudi publicistični jezik , saj uporabljeni reviji edini objavljata zapise o tekočih konjeniških dogodkih .
9.4.6 Izvoz v HTML Terminološke baze izvažamo iz MT za izdelavo varnostnih kopij ali za posredovanje baze drugim .
Nujno je , da izbrana programska oprema zna hraniti in izvoziti slovarske podatke v strukturiranem formatu XML .
Končna verzija vzorčnega Konjeniškega terminološkega slovarja je dostopna na priloženi zgoščenki , na kateri je baza v XML in HTML obliki .
Konjeniški terminološki slovar je v obliki Wordovega dokumenta v prilogi 8.
ZAKLJUČEK Vzorčni konjeniški terminološki slovar je nastal z namenom preveriti uporabo korpusne metodologije .
Poleg tega nudi s pomočjo računalniške tehnologije hitro obdelavo velikih količin podatkov , lažjo izmenjavo in distribucijo le-teh , posodabljanje , iskanje po podatkovnih bazah , urejanje vnosov delov besedil ter avtomatizacijo iskanja terminologije .
V nalogi se je izkazalo , da v primerih iskanja terminov ( npr. glagolov ) to dejstvo ne velja , vendar bi krivdo lahko iskali v pomanjkljivih dostopnih tehnologijah za slovenski jezik in nedostopnosti nekaterih elektronskih virov za izgradnjo večjega in homogenega korpusa konjeniških besedil .
Prav tako bi lahko izboljšali luščenje terminologije z različnimi drugimi metodami .
Luščenje terminologije je potekalo samo s pomočjo metode statističnega pristopa , kot ga podpira program WST .
Faze , ki so bile v nalogi deležne korpusnega in računalniškega pristopa , so bile : - izdelava korpusa - priprava korpusa za nadaljnjo analizo - izdelava besednih seznamov in seznamov ključnih besed ( WST ) - luščenje terminologije in iskanje terminoloških kandidatov ( WST , Term Extract Demo ) - obdelovanje terminov ( Sketch Engine )
- delna izdelava definicij in primerov rabe ( Sketch Engine ) - izdelava terminološke baze - izvoz v HTML / XML Pri zbiranju in urejanju izrazja za terminološki slovar konjeništva so se uporabili predvsem dostopni nespletni viri .
Zadovoljive rezultate sta dali edino dve metodi , in sicer metoda iskanja po WST s pomočjo » Clusters « , ter metoda s pomočjo programa TermExtractDemo .
Način iskanja bi bilo mogoče poenostaviti , saj je bilo kljub avtomatskemu luščenju terminologije potrebno tudi ročno prečesavanje seznamov .
Rezultati iskanja so bili za tako majhen korpus zadovoljivi , saj je bilo z omenjenimi metodami pridobljenih čez tristo terminoloških kandidatov .
V nekaterih primerih so najdeni primeri rabe zelo nazorni , celo toliko , da je iz njih možna izpeljava definicije , v drugih pa spet zelo pomanjkljivi .
Primeri rabe manjkajo le pri dodatno vnesenih terminih , ki niso bili najdeni v korpusu KKB .
Pri iskanju pogostosti uporabe posameznih izrazov in opredeljevanju pomena pri oblikovanju definicij , so bili v pomoč slovarji , ki so dostopni na svetovnem spletu , ter uporaba kolokacij in konkordanc v omenjenem programu .
Izdelava geslovnika , ki je procedurni predpogoj za terminološko bazo , se izvrši pred konkretnim vnosom terminov v terminološko bazo .
Pripravljena gesla so bila vnesena v program MultiTerm , kjer je nastala baza podatkov s sedemindevetdesetimi vnosi in stopetnajstimi termini .
Ker se v MultiTermu smatrajo različna poimenovanja enega termina za en vnos , je terminov v bazi več kot vnosov samih .
Vnosi v terminološki zbirki so preglednejši kot v knjižnih izdajah slovarjev .
V knjižni obliki slovarja je število primerov rabe omejeno .
Popolnosti bi se lahko približali , če bi slovar priredili tako , da bi iskal primere rabe neposredno v korpusu .
Omenjeni avtor navaja probleme , kot so : - vsak avtor ima omejeno znanje in nekaterih primerov ne vključi v slovar , - avtor morda poskuša dokazati kako svojo hipotezo in izbere tiste primere , ki potrjujejo njegovo mnenje , nasprotnih pa ne uvrsti v slovar , - avtorji slovarjev so običajno ljudje z večdesetletnimi izkušnjami , zato se v slovarju znajdejo tudi besede in besedne zveze , ki jih v sodobni rabi redkeje srečamo .
V tem je tudi prednost dinamičnih slovarjev , ki niso neka zaključena enota , ampak se termini lahko brišejo ali pa dodajajo novi .
Nastali slovar je terminološki in je namenjen predvsem strokovnjakom , jezikoslovcem in prevajalcem , vendar njegove definicije in razlage niso enciklopedične , zato je dostopen tudi vsem nestrokovnjakom , ki jih zanima slovensko konjeniško področje in njegova terminologija .
Kot sem pokazala na primeru vzorčnega terminološkega slovarja , nam uporaba korpusa ter korpusnega pristopa zanesljivo pokaže pogostost in pomene posameznih izrazov v sodobnem konjeništvu .
Korpus KKB zaenkrat ne zadovoljuje potreb , ki jih zahteva celoten terminološki slovar .
Da bi ugotovili , koliko in v kakšni meri ne ustreza , bi bilo potrebno preveriti , koliko terminoloških izrazov dejansko prekriva področje konjeništva .
1 Korpusni pristop v jezikoslovju Ko pride do opredeljevanja mesta korpusnega jezikoslovja znotraj jezikoslovja , je med pogosto navajanimi Leechev prispevek iz leta 1992 , Corpora and theories of linguistic performance .
Korpusno jezikoslovje mu pomeni nov raziskovalni podvig , obenem pa novo filozofijo pogleda na jezik , ki pred pojavom korpusa kot metodološkega orodja ni bila mogoča .
Na tem mestu vprašanja zgodovine korpusnega jezikoslovja puščamo ob strani , s stališčem , da novosti v obravnavi jezika , ki jih korpusno jezikoslovje brez dvoma prinaša , ne gre iskati apriorno v razmerju do ostalih obstoječih jezikoslovnih paradigem , ampak ob osredotočanju na izkušnje korpusnojezikoslovne prakse , kakor o tem piše denimo Teubert : » Dokler ni bilo mogoče obdelati velikih količin jezikovnih podatkov na sistematičen proceduralen način , ni bilo nobene možnosti , da bi kompleksne povezave sopojavljanja med elementi besedila ( tj. besedami ) opisali drugače kot s skladenjskimi pravili .
Korpusno jezikoslovje je metodološko sposobno opisati sopojavljanje kot statistični pojav .
Nove metodološke možnosti , ki jih je iznajdba korpusa prinesla s sabo , so predpogoj za nove ugotovitve , ki šele v sekundarni fazi spreminjajo pogled na jezik oz. jezikoslovje do te mere , da je o korpusnem jezikoslovju mogoče govoriti o več kot novi metodi .
Po letih korpusne gradnje , razvoja programske opreme za označevanje ter obdelavo korpusnih besedil , predvsem pa uzaveščanja raznovrstnih tipov vprašanj , na katera korpusi lahko odgovarjajo , zveza korpusno jezikoslovje ohranja dvojni značaj .
Kvantitativna analiza pomeni avtomatski ( strojni , računalniški ) del analize , ki ga – upoštevajoč raziskovalčeva navodila – izvede program .
Jezikoslovčeva interpretacija jezikovnih podatkov nastopi v večji meri šele za tem , ko je stanje ugotovljeno na podlagi jezika oz. iz jezika samega .
Glede na zapisano je možna opredelitev pričujoče raziskave kot korpusnojezikoslovnega dela , ki korpus uporablja kot vir gradnje hipoteze , s poudarkom , da v raziskavi preučevana metoda temelji na oblikoskladenjsko označenem ter lematiziranem korpusu .
2 Računalniško jezikoslovje in obdelava naravnega jezika Pred definicijo obdelave naravnega jezika ( ang. natural language processing ) je potrebno zapisati nekaj besed o pojmu računalniško jezikoslovje ( ang. computational linguistics ) .
Poskus zamejitve interesov računalniškega jezikoslovja s strani jezikoslovca podaja Karlgren , ko na začetku devetdesetih piše takole : » Po dvanajstih uglednih mednarodnih konferencah v organizaciji Mednarodnega odbora za računalniško jezikoslovje [ International Committee for Computational Linguistics ] in po vse večjem številu publikacij in lokalnih srečanj , posvečenih tej temi , bi lahko sklepali , da do zdaj vsi , ki nam je kakor koli do zadeve , vemo , za kaj v računalniškem jezikoslovju gre .
[…]
V uvodu v The Oxford Handbook of Computational Linguistics lahko preberemo , da je izraz nastal v jezikovnotehnoloških krogih , ko je postalo očitno , da se interes financerjev od strojnega prevajanja obrača k splošnejšim k avtomatski obdelavi jezika usmerjenim raziskavam ( Mitkov ( ur .
V pričujoči raziskavi predstavlja obdelava naravnega jezika – predvsem kar se tiče namena raziskave ter uporabljenih metod , dopolnitev korpusnojezikoslovnemu raziskovalnemu izhodišču .
Kar obe raziskovalni smeri druži in vedno bolj zbližuje , je ( I ) vezanost na razvoj novih tehnoloških možnosti za obdelavo naravnega jezika , kar pomeni podobno metodo pridobivanja podatkov iz jezikovnih virov ter ( II ) naravnanost k uporabnosti – kot bo vidno v nadaljevanju korpusno jezikoslovje stremi k produkciji nove generacije jezikovnih priročnikov , obdelava naravnega jezika pa k razvoju jezikovnih tehnologij .
Vsaka interpretacija je dejanje in je ravno zato ni mogoče algoritmizirati .
Ker je primarni namen luščenja leksikalnih podatkov dopolnjevanje leksikalnih zbirk za slovenščino , te pa so , kot bo razloženo v poglavju III-1 , lahko namenjene tako za razvoj jezikovnih tehnologij kot za pripravo jezikovnoopisnih virov za človeškega uporabnika , je dvojnost raziskovalnega izhodišča toliko bolj očitna .
3 Korpusi in leksikografija Nov pogled , ki ga obravnavi jezika prinaša korpusno jezikoslovje , izvira predvsem iz ugotovitev , ki jih je s sabo prinesel projekt COBUILD ( Collins Birmingham University International Language Database ) , tj. gradnja ter analiza korpusa Bank of English za potrebe izdelave enojezičnega angleškega slovarja za neangleške govorce ( Collins COBUILD English Language Dictionary , prva izdaja 1987 ) .
Statistična obdelava velike količine jezikovnega materiala se odraža v identifikaciji sopojavitvenih odnosov med besedami , od katerih sta za pričujočo raziskavo zanimivi predvsem kolokacija ter koligacija ( Sinclair 1998 : 12 – 13 ) .
Za besedi ni nujno , da si v besedilih neposredno sledita , prav tako ni v obravnavo zajet skladenjski nivo .
Primer : pridevnik oranžen se sopojavlja s kolokatorji barva , abonma , odtenek , cvet , ton , svetloba , revolucija .
Že leta 1987 Sinclair navaja naslednje ugotovitve , izvirajoče iz leksikografske obravnave korpusnih primerov : ( I ) v večini primerov obravnave korpusnih pojavitev se v jezikovni strukturi izkazujejo določeni vzorci , ( II ) izkazuje se , da vzorec ne prinaša samo tipične skladnje , ampak tudi nabor tipičnih leksikalnih kolokatorjev , ( III ) pomena ne prinašajo posamezne besede , postavljene ena za drugo po določenih pravilih , pomen se tvori s simultano izbiro ter vzpostavitvijo daljših leksikalnih enot ( Sinclair 1987 v Sinclair 1996 : 160 ) .
Predvsem pri obdelavi naravnega jezika je bilo v osemdesetih in tudi še devetdesetih letih prejšnjega stoletja osredotočanje na posamezno besedo kot nosilko pomena oz. pomenov pogosta praksa , saj je določitev besedne meje kot meje leksikalne enote računalniško ( relativno ) enostaven postopek .
Takšna obravnava jezika je v neskladju z dvema dejstvoma : ( I ) mnogo pomenov zahteva za realizacijo v kontekstu prisotnost več kot ene besede ter ( II ) vzorci sopojavljanja besed ( ki je v jeziku precej močnejše , kot to običajno izkazuje predkorpusni jezikoslovni opis ) so neposredno povezani s pomenom ( Sinclair 1998 ) .
Navedene ugotovitve tvorijo izhodišče pričujoče raziskave v dveh točkah : ( I ) na eni strani nas zanima premik od obravnave posamezne besede kot nosilke ( potencialnega ) pomena k obravnavi večbesednih leksikalnih enot ter na drugi ( II ) jezikovni vzorec kot kombinacija koligacijskih ter kolokacijskih informacij , saj ponuja združenje tradicionalno ločenega pogleda na slovar ter slovnico .
Navedene ugotovitve seveda ne prinašajo sprememb samo na področje leksikografije , ampak tudi na druga področja , predvsem se o njih veliko piše v povezavi s prevodoslovjem , besediloslovjem ( predvsem v zvezi s primerjavo različnih jezikovnih žanrov ) , poučevanjem jezika ( v angleškogovorečem prostoru intenzivno na področju poučevanja angleščine kot drugega oz. tujega jezika ) itd.
V pričujočem delu skušamo izbrane segmente novega pogleda na leksikografijo prenesti še na področje ( slovenske ) obdelave naravnega jezika , in sicer v segment , ki je z leksikografijo tesno povezan , tj. gradnja leksikalnih podatkovnih zbirk .
leksikalnih podatkov ) , ( II ) izdelava leksikalnih zbirk za strojno rabo ter ( III ) izdelava leksikalnih zbirk za človeško rabo ( Ooi 1998 : 30 ) .
Korpus pri tem pristopu ni obravnavan le kot vir primerov jezikovne rabe , ampak kot nerazdružljiva celota jezikovnih podatkov .
Teoretične jezikoslovne ugotovitve izvirajo neposredno iz korpusa , ki ni na nikakršen način prilagojen jezikoslovnim kategorijam nekorpusnega izvora .
Obenem so nova spoznanja o možnostih obdelave označenih jezikovnih podatkov botrovala razvoju programske opreme t. i. drugega korpusnojezikoslovnega vala : razvijalci programov sledijo specifičnim raziskovalnim potrebam , programi so ciljno usmerjeni v pridobivanje , organizacijo in prikaz samo tiste vrste podatkov , ki jih uporabnik za določeno nalogo potrebuje .
Stopenj tovrstnega označevanja je lahko toliko , kolikor velika je potreba in kolikor jih je mogoče računalniško ( programsko ) uspešno vključiti in uveljaviti [.]«
Pričujoča raziskava temelji na stališču , da kvalitetna uporaba korpusa ne pomeni vztrajanja pri obdelavi neoznačenih besedil , ampak uzaveščenje ( potencialno ) šibkih mest označenosti uporabljenega vira s strani korpusnega uporabnika , s strani korpusnega graditelja pa evalvacija ter stremljenje k izboljšavam metod označevanja – zlasti v primeru avtomatskega označevanja širše uporabljanih korpusnih virov , k čemur se vračamo v II-1.2.4 .
1.2 Oznake korpusa FidaPLUS V pričujočem delu se osredotočamo na oznake trenutno aktualnega referenčnega korpusa FidaPLUS , ki je ( kot bo vidno poglavju IV-2.1.1 ) vir za pripravo v doktorski raziskavi uporabljenega podkorpusa .
Ostali projekti označevanja slovenskih korpusnih besedil na tem mestu ostajajo ob strani , tako npr. vprašanja skladenjskega ter semantičnega kot vseh drugih oblik označevanja slovenščine .
V primeru neobstoja v korpusnem besedilu najdene besedne oblike v leksikonu sta predvidena dva koraka : ( I ) vključitev upoštevanja tipičnih odklonov od knjižne norme v sodobnem pisnem jeziku : oblika stricom se lematizira v stric , nevem v vedeti itd. , ( II ) avtomatska tvorba leme na osnovi besedne končnice , npr. oblika Pomurci se lematizira v Pomurec ter Goodyearju v Goodyear ( o problemih tovrstne lematizacije v Arhar in Gorjanc 2007 : 102 ) .
V primeru , da leme ni mogoče avtomatsko uganiti , ostane besedna oblika v korpusu nelematizirana ( in je kot taka označena ) , njen obstoj pa je zabeležen v ločeno datoteko , ki je osnova nadgradnje oblikoslovnega leksikona .
Iskanje prave možnosti poteka v več korakih : ( I ) izločitev lem , ki so za dano obliko na osnovi slovničnih pravil najmanj verjetne ( npr. pri primerih , ki sredi stavka izkazujejo veliko začetnico , so ohranjene le lastnoimenske leme itd. ) , ( II ) izločitev manj verjetnih lem glede na rezultate avtomatske stavčnočlenske analize besedila – slednja poteka s stavčnim razčlenjevalnikom , prav tako razvitim na omenjenem podjetju , ter ( III ) izbor najverjetnejše leme z delnim upoštevanjem skladenjskega konteksta .
Primer lematiziranega besedila prinaša Tabela 1 v naslednjem poglavju : nazoren primer razdvoumljanja lem je denimo pridevniška oblika belim , za katero je iz začetnega nabora možnih lem bel , beliti , Belo uspešno izbrana ustrezna bel .
Prva verzija nabora oznak Multext-East je nastala med letoma 1995 in 1997 , trenutno je na voljo v tretji različici , ki prinaša tabele oblikoskladenjskih oznak in pojasnila o sistemu njihove rabe za deset evropskih jezikov , med njimi tudi slovenskega ( Erjavec 2004 ) .
Na osnovnem nivoju sistem predvideva besednovrstno uvrstitev obravnavane besedne oblike , na drugem nivoju pa se označuje njene nadaljnje lastnosti glede na slovarske ter slovnične kategorije , ki jih posamezni besedni vrsti ( lahko avtomatsko ) pripišemo – pridevniku v opisanem sistemu npr. vrsto , stopnjo , spol , število , sklon , določnost ter živost .
V besedilu pripisana oznaka ima obliko črkovnega niza , v katerem vsaka od črk predstavlja vrednost ene od kategorij ( oznaka Soser npr. označuje samostalnik , občno ime , srednji spol , ednino , rodilnik ) .
Tudi pripisovanje oblikoskladenjskih oznak je za korpus FidaPLUS v celoti izvedeno z označevalnikom podjetja Amebis ; v veliki meri temelji na podatkih , zajetih v leksikalni zbirki ASES ( glej poglavje III-2 ) .
V besedilu najdena oblika je primerjana s podatki iz leksikalne zbirke , posledično ji je v prvi vrsti pripisana besedna vrsta , na podlagi tega podatka pa še vrsta kategorialnih vrednosti , ki so posamezni besedni vrsti pripisljive .
Podobno kot leme so tudi oblikoskladenjske oznake ( oz. oznake MSD , kot se v tem kontekstu pogosto imenujejo ) v korpusu FidaPLUS razdvoumljene .
Označeni korpusni dokument je v Konkordančniku ASP32 , s katerim korpus FidaPLUS uporabljamo na internetu , dostopen s klikom iz konkordančnega niza .
Spodnji primer prinaša primer označenosti stavka Pogosti avstralski pajek z belim zadkom je veljal za povzročitelja gnitja mesa .
Razdvoumljenost oznak se kaže v trostopenjskosti označevanja : oznaki lemmass ter msdss prinašata celoten nabor možnih oznak , lemmas ter msds vmesno stopnjo razdvoumljanja , lemma ter msd pa končno stanje po razdvoumljanju ( več v Arhar in Gorjanc 2007 : 101 – 103 ) .
Ker pa so v doktorski raziskavi že uporabljene nove oblikoskladenjske oznake ( glej poglavje IV-2.1.1 ) , ki jih v nadaljevanju pričujočega dela ne razvezujemo oz. razlagamo , so označevalne tabele sistema oznak JOS za lažje razumevanje na voljo tudi kot Priloga 1.
V raziskavo , ki jo avtorja predstavljata v navedenem prispevku , je bila zajeta primerjava treh označevanj istega nabora korpusnih besedil .
Korpus jos100k – približno 100.000 besed velik podkorpus korpusa FidaPLUS ( o pripravi korpusnega vira Erjavec in Krek 2008 : 50 ) – je bil označen z označevalnikom podjetja Amebis ter s statističnim označevalnikom TnT , oznake pa so bile tudi ročno pregledane ter popravljene .
: 52 ) : število besed razlaga 1 100.003 vse besede v korpusu JOS 100k 2 86.617 oznake , ki jih je pripisal TnT , se ujemajo z ročno pripisanimi 3 85.719 oznake , ki jih je pripisal Amebisov označevalnik , se ujemajo z ročno pripisanimi 4 78.011 oznake obeh označevalnikov se ujemajo z ročno pripisanimi 5 7.708 oznake Amebisovega označevalnika se ujemajo z ročno pripisanimi , oznake TnT-ja ne 6 8.606 oznake TnT-ja se ujemajo z ročno pripisanimi , oznake Amebisovega označevalnika ne 7 3.238 oznake nobenega od označevalnikov se ne ujemajo z ročno pripisanimi , avtomatsko pripisane oznake so enake 8 2.440 oznake nobenega od označevalnikov se ne ujemajo z ročno pripisanimi , avtomatsko pripisane oznake so različne Tabela 2 : Natančnost označevanja korpusa jos100k .
Prvima dvema od naštetih , tj. primerom , kjer eden od označevalnikov pripiše pravilno oznako , drugi ne – z izhodiščno predpostavko , da informacija o tem , katera od obeh oznak je pravilna , ni na voljo – se posveča prispevek Rupnika in drugih ( 2008 ) .
Iz povedanega sledi , da je na poti k izboljšavi kvalitete oblikoskladenjskega označevanja smotrno veliko pozornosti posvetiti poskusom izboljšave uspešnosti ( vsakega od posameznih ) avtomatskih označevalnikov , ki so za slovenščino na voljo .
V doktorski raziskavi se osredotočamo na oblikoskladenjske oznake , pripisane z Amebisovim označevalnikom , in sicer predvsem s stališča vpliva označevalnih napak na kvaliteto luščenja podatkov iz korpusa .
Podatki , ki jih iz korpusov pridobivamo , so lahko različnih vrst : v pričujoči raziskavi se osredotočamo na luščenje večdelnih besednih nizov , v katerih nastopajo izbrane enobesedne iztočnice , kakor bo natančneje predstavljeno v poglavju II-2.2 .
Za luščenje podatkov se uporabljajo različni metodološki pristopi , ki jih lahko v osnovi delimo na ( I ) statistične , ( II ) jezikoslovno osnovane ter ( III ) hibridne .
Prvi pristop temelji zgolj na upoštevanju pogostnosti in sopojavljanju podatkov v korpusnem viru , pri drugem se obenem uporabljajo tudi pravila , ki vključujejo jezikoslovne ( npr. na skladnjo vezane ) pogoje luščenja , tretji pristop pa združuje prva dva ( Vintar 2002 : 78 ; Vintar 2008 : 100 – 101 ) .
V pričujoči raziskavi uporabljena metoda je luščenje podatkov na osnovi oblikoskladenjskih oznak .
Za slovenščino je bila metoda že preizkušena za pridobivanje terminoloških besednih zvez – usmerjena v pridobivanje specifičnega nabora leksikalnih enot je metoda temu ustrezno specializirana ( glej npr. Vintar 1999 ; 2002 ; 2008 ; Logar in Vintar 2008 ; Vintar in Erjavec 2008 ) .
V nadaljevanju je na kratko prestavljen primer luščenja terminologije , kakor ga opisujeta Vintar in Erjavec ( 2008 ) , sledi pa primerjalna opredelitev luščenja podatkov v sklopu pričujoče raziskave .
2.1 Luščenje terminoloških besednih zvez Namen raziskave , ki jo opisujeta Vintar in Erjavec , je luščenje samostalniških terminoloških besednih zvez s področja informatike .
Luščenje poteka na osnovi vnaprej pripravljenega nabora skladenjskih vzorcev , ki prinašajo opredelitev sosledja besednih vrst v besedni zvezi ter njenega jedra ( v tabeli podčrtano ) , kakor prikazuje spodnja tabela ( ibid .
Skladenjski vzorci torej opredeljujejo besedne zveze , ki se iz korpusa luščijo na osnovi opredelitve besedne vrste , ki jo posamezni besedni obliki v korpusu pripisuje oblikoskladenjska oznaka .
Skladenjski vzorci v gornji tabeli so , kot pišeta avtorja , pridobljeni na osnovi podatkov obravnavanega specializiranega korpusa ( ibid .
2.2 Luščenje večdelnih besednih nizov Namen pričujoče raziskave je dopolnjevanje leksikalne zbirke za obdelavo naravnega jezika z večbesednimi leksikalnimi enotami ( več o tem sledi v poglavju III-3 ) .
Zaporednost besed pomeni , da so izluščeni besedni nizi v izvornem besedilu zaporedne enote , pri čemer tekom samega luščenja v isto skupino zajemamo tako proste kot stalne besedne zveze oz. tako neidiomatične kot idiomatične ( frazeme , idiome ) .
V isto skupino so denimo zajeti primeri tipa rdeča mravlja ter tipa rdeča bluza , s čimer odpade ločevanje prostih besednih zvez od stalnih ( tj. večbesednih leksemov ; o tem npr. Vidovič Muha 2000 : 26 – 28 ) .
V isto skupino so obenem uvrščeni primeri tipa rdeča četrt ter rdeči petelin .
Z vprašanjem razmerja med navedenimi tipi besednih zvez se natančneje ukvarja Gantar , tudi v razmerju do korpusnih podatkov : » Relativnost razmerij med eno in večbesednimi leksikalnimi enotami ter med pomensko transparentnimi in pomensko netransparentnimi SBZ se v korpusu zabrisuje , kar seveda ne pomeni , da je na podlagi korpusnih podatkov nemogoče določiti temeljni predmet leksikalne problematike , pač pa predvsem preseči skrajnostno delitev na besede in besedne zveze na eni strani ter na stalne in proste zveze na drugi .
« ( Gantar 2006 : 158 ) Pomenska analiza izluščenih nizov , kot rečeno v poglavju I-2 , ostaja izven interesa pričujoče raziskave , ki se osredotoča predvsem na pripravo ter evalvacijo uporabljene metode ; je pa leksikografska analiza podatkov predvidena kot nujni vmesni korak med luščenjem ter nadaljnjo uporabo pridobljenih podatkov .
Pri pridobivanju večdelnih nizov iz korpusa ne uporabljamo nobene od kolokacijskih statistik , ampak se opiramo le na pogostnost izluščenih nizov v korpusu .
Glede na specifične potrebe nadaljnjih raziskav je seveda mogoče statistike izračunati naknadno , trenutno pa se zdi smiselno ugotoviti , kakšne podatke je možno pridobiti v primeru ugotavljanja tipičnosti rabe zgolj na osnovi visoke pogostnosti nizov v korpusnih besedilih .
Raziskava se osredotoča na obravnavo vseh skladenjskih vzorcev , ki jih za obravnavan nabor iztočnic v korpusu najdemo .
Na ta način želimo skladenjske vzorce obravnavati v prvi vrsti kot koligacijske informacije o izbrani besedi , na osnovi vzorcev izluščeni besedni nizi pa podajajo kolokacijske informacije o obravnavani besedi ( glej poglavje I-3 ) .
Skladenjski vzorci so v raziskavi obravnavani ne le s stališča tipičnosti ter relevantnosti , temveč tudi obratno – interes je posvečen tudi vzorcem , ki za obravnavane iztočnice ne prinašajo za luščenje zanimivih rezultatov ( pojmovanje relevantnosti izluščenih podatkov je opredeljeno v IV-1.2 ) .
Kot rečeno je v raziskavi veliko pozornosti posvečene pripravi končne oz. prikazne oblike izluščenih podatkov , tj. oblike , v kateri je izluščeni besedni niz poslan v ročno analizo .
Dotikamo se torej še enega problema , ki je v literaturi že bil identificiran : » Žal se pri vzorcih razkrije kakovost označevanja , saj se morebitne napake pokažejo bodisi v obliki nepravih zvez bodisi v obliki nižjega priklica .
Poglavje prinaša opredelitev leksikalne podatkovne zbirke s poudarkom na razlikah med zbirkami , namenjenimi obdelavi naravnega jezika , ter zbirkami , namenjenimi pripravi jezikovnih virov za človeškega uporabnika .
Poglavje prinaša predstavitev treh primerov gradnje leksikalne zbirke za slovenščino in je sklenjeno z izpostavitvijo možnosti nadgradnje jezikovnotehnološke zbirke ASES s korpusnimi podatki .
Glede na vrsto podatkov , ki jih zbirka zajema , način organiziranosti , namen gradnje itd.
lahko leksikalne zbirke delimo na različne načine .
Na tem mestu je primarna delitev , kot je že bilo nakazano v poglavju I-3 , glede na namen uporabe podatkov .
Jezikovnotehnološka se na drugi strani osredotoča na za računalniško obdelavo uporabne leksikalne podatke , glavni namen je zagotoviti tehnologiji informacije , ki jih uporabnik slovarja kot govorec naravnega jezika poseduje oz. jih je sposoben inferirati .
Namen na tem mestu ni opis celotne situacije na področju gradnje leksikalnih zbirk za slovenščino , temveč zgolj natančnejša opredelitev pomenskega polja leksikalne zbirke .
1.3 Slovarska leksikalna zbirka za slovenščino V našem prostoru prvi elaborirani primer snovanja slovarske leksikalne podatkovne zbirke , temelječe na podatkih iz ( referenčnega ) korpusa , je prispevek Vojka Gorjanca , Simona Kreka ter Polone Gantar iz leta 2005.
Realizacija v prispevku začrtane leksikalne zbirke je predvidena v sklopu projekta Sporazumevanje v slovenskem jeziku .
Pri gradnji jezikovnih virov za manjše jezikovne skupnosti , kakršna je tudi slovenska , je pred začetkom projektov smiselno premisliti o načinih omogočanja širše uporabnosti vira , predvsem v smislu dostopnosti zainteresiranim raziskovalnim skupnostim ter posledično o standardiziranem formatu zapisa podatkov , ki bi omogočal njihovo enostavno izmenljivost ter uporabo .
Kot je razvidno iz gornjega navedka , je leksikalna zbirka , predvidena v sklopu projekta Sporazumevanje v slovenskem jeziku , zasnovana na način , ki bo omogočal njeno čim širšo izrabo , tudi s stališča dvojnosti namena gradnje ( za leksikografske potrebe ter za obdelavo naravnega jezika ) .
Zaradi proste dostopnosti je wordnet izredno priljubljena osnova razvijanja raznovrstnih postopkov za obdelavo naravnega jezika , ima pa nekaj pomanjkljivosti , ki iz izbrane metode gradnje izvirajo .
Jezikovna neodvisnost pojmov predvideva lahko prenosljivost sistema relacij iz enega jezika ( običajno je to angleščina , za katero je wordnet najbolje razvit ) v drugega .
Drugi problem , na katerega opozarja avtorica , je nekonsistentnost organiziranosti leksike v izvorni , angleški besedni mreži ( ibid .
Avtorica se skuša omenjenim problemom izogniti s pridobivanjem leksikalnih ter relacijskih podatkov iz razširjenega nabora slovenskih jezikovnih virov ; poleg angleškega wordneta uporablja korpus FIDA , podatke iz enojezičnega ter dvojezičnih slovarjev ter izbranih strokovnih priročnikov .
Problem , ki se ob takšnem kombiniranju pojavi ( poleg odmika od želene avtomatiziranosti gradnje zbirke ) , so razlike v jezikovnih podatkih iz posameznih virov , pa tudi razkorak med stremljenjem po formalizaciji naravnega jezika ter sočasnim upoštevanjem dejanske jezikovne rabe ( ibid .
Novejši opis stanja slovenskega wordneta je na voljo denimo v Fišer in Erjavec ( 2008 ) .
Poleg posodobljenih podatkov o obsegu zbirke , ki so navedeni spodaj , prinaša prispevek tudi predstavitev preizkusa novih metod avtomatskega dopolnjevanja zbirke : » Slovenski wordnet trenutno vsebuje skoraj 20.000 različnih literalov [ pomensko opredeljenih iztočnic ] , ki pokrivajo večino osnovnih konceptov ter kar precej specifičnih , ki so bili večinoma pridobljeni iz Wikivirov in so s področja biologije .
Kar se tiče nabora leksike , se zadnja leta zbirka posodablja predvsem iz referenčnih korpusov , ni pa osnovana na korpusnojezikoslovnih načelih .
V prispevku iz leta 2002 najdemo takle opis zbirke : » Osnovne enote sistema ASES so med seboj povezani pojmi , preko katerih se slovenske besede povezujejo z besedami v drugih jezikih .
Pojmi poleg nekaterih pomenskih in drugih statističnih informacij vsebujejo še povezave na ustrezne besede oz. besedne zveze , sinonimne in antonimne povezave itd.
Same besede vsebujejo osnovne morfološke informacije ter podatke o zlogovanju in izgovorjavi .
« ( Romih in Holozan 2002a : 166 ) Ker je sistem ASES trenutno najrelevantnejša leksikalna zbirka za avtomatsko obdelavo slovenskega jezika in ker v literaturi še ni bil podrobneje predstavljen , je v pričujočem delu predstavitvi namenjenega več prostora .
Sistem ASES v nadaljevanju poglavja obravnavamo predstavitveno , z namenom osnovnega očrta sistema oz. organizacijske strukture , ki jo prinaša ; pri tem si pomagamo z analizo treh iztočnic : glagolske izdati , samostalniške pajek ter pridevniške moder .
2.1 Organizacija leksikalne zbirke Sistem ASES prinaša nabor besed ter besednih zvez ( število vseh iztočnic marca 2009 je blizu 872.500 ) , in sicer skupaj za slovenščino in druge jezike , aktualne za razvoj avtomatskega prevajanja .
Povezava med jeziki je vzpostavljena s pomočjo elementov , imenovanih pomeni , ki so formalizacija semantičnega dela posameznega ( enobesednega ) jezikovnega znaka .
Jedrni del zbirke predstavlja abecedno urejen seznam iztočnic različnih vrst ( vrsto iztočnice v zbirki predstavljajo enočrkovne oznake , ki so v nadaljevanju navedene v oglatih oklepajih ) .
Za poimenovanje različnih tipov iztočnic se v leksikalni zbirki ASES uporablja besedišče , ki je v jezikoslovju običajno definirano drugače kot v zbirki ( tu je npr. privzet dvojnostni odnos med besedo ter pomenom , ne pa obliko in pomenom ) .
Povezan je na besede različnih jezikov , ki so v tem kontekstu imenovane izvori .
) , mogoče pa jih je tudi kvalificirati glede na rabo ( npr. napačno , pogovorno , strokovno , redko , množinsko , britansko , ameriško , …);
( III ) zveza [ Z ] prinaša besedne zveze , ob katerih je informacija o njihovi sestavljenosti ; ( IV ) skupina [ S ] prinaša nabor besed , ki jih je smiselno združiti zaradi potreb obdelave naravnega jezika , npr. nedovršno ter dovršno varianto glagola , samostalnik in iz njega izpeljani svojilni pridevnik , britansko ter ameriško različico zapisa besede itd. ; ( V ) glagolska predloga [ G ] prinaša informacije o glagolski vezljivosti .
V nadaljevanju sledi nekaj slik za boljšo predstavo organizacije leksikalne zbirke in raznovrstnih iztočnic , ki jih sistem prinaša .
Iztočnice vrste zveza ter skupina niso nadalje obravnavane , saj zgolj organizirajo leksikalno zbirko na sekundarnem nivoju ( združujejo enote prvega reda ) .
Glagolske predloge so kot vmesna stopnja med povezavo glagolskih besednih oblik ter pomenov bolj komplicirane in zato podrobneje razložene ob primeru izdati v poglavju III-2.2.3 .
3 Nadgradnja zbirke na osnovi korpusnih podatkov Kljub temu da je leksikalna zbirka ASES primarno zasnovana na enobesednih iztočnicah , se v njeni organiziranosti na različnih mestih kaže želja po vključevanju kompleksnejših leksikalnih informacij : od nabora stalnih besednih zvez , v katerih se iztočnica pojavlja , do informacij o glagolski vezljivosti , različnih vrstah odnosov med besedami ( pomenskih , besedotvornih , izvirajočih iz védenja o svetu ) , o tipičnem ter netipičnem sopojavljanju besed itd.
Obenem je iz primerov , predstavljenih v prejšnjem poglavju , razvidno , da so podatki naštetih vrst na različnih mestih zbirke različno zastopani , kar se lahko odraža v neuravnoteženi vsebini leksikalne zbirke .
Glede na zapisano je smiseln razmislek o posodobitvi leksikalne zbirke na način , ki upošteva v poglavju I-3 izpostavljene korpusnojezikoslovne ugotovitve , obenem pa seveda potrebe obdelave naravnega jezika .
V nadaljevanju poglavja so predstavljena izhodišča nadgradnje , pri čemer je pozornost posvečena naslednjim vprašanjem : ( I ) izhajanje iz korpusnih podatkov , ( II ) upoštevanje enopomenskosti leksikalne enote ter ( III ) odločitev za polavtomatsko metodo nadgradnje .
Doktorska raziskava se v empiričnem delu posveča enemu od segmentov nadgradnje , tj. luščenju večdelnih besednih nizov iz besedilnega korpusa , z željo dopolnitve enobesednih iztočnic zbirke z ustreznimi kolokacijsko-koligacijskimi informacijami ( za opredelitev metode luščenja podatkov glej II-2.2 , za opredelitev ciljev in opis poteka raziskave pa poglavje IV ) .
5.1 Izhajanje iz korpusnih jezikovnih podatkov Za osnovo leksikalne zbirke , ki naj bi služila večnamenski avtomatski obdelavi slovenščine , je najbolj smiselno uporabiti referenčni korpus slovenskega jezika , ki kot uravnoteženi vzorec jezika vsakdanje rabe prinaša podatke o splošni jezikovni rabi .
S tega stališča je bistvenega pomena ohranjanje informacije o jezikovnem viru , od koder je bil podatek pridobljen , v leksikalni zbirki .
Pri razvoju avtomatskega prevajanja jezika je npr. mogoča predpostavka , da je na vhodu programa jezikovno nespecializirano besedilo , kar pomeni pripis višje prioritete leksikalnih podatkov iz referenčnega korpusa ( slednje se odraža npr. v prilagojenem vrstnem redu prevodnih različic , ki jih prevajalnik po obdelavi besedila ponudi ) .
Prvi korak pri nadgradnji zbirke predstavlja dopolnitev obstoječih iztočnic s podatki o pogostnosti v referenčnem korpusu FidaPLUS in glede na to nadaljnja obdelava iztočnic , ki se v korpusu izkazujejo za najpogostejše .
V prvih fazah nadgradnje je tako večina pozornosti usmerjene k sodobni slovenščini vsakdanje rabe , v nadaljevanju pa je predvideno dopolnjevanje podatkov glede na trenutne razvojne potrebe , pri čemer pridejo v poštev specializirani korpusi in tudi nekorpusni jezikovni viri .
5.2 Upoštevanje enopomenskosti leksikalne enote Vključevanje semantičnih podatkov v obdelavo naravnega jezika je problem , ki se ga raziskovalci lotevajo na tak ali drugačen način , kljub številnim poskusom pa celostna avtomatska prepoznava pomena še vedno ostaja nedosežen cilj .
Kljub temu da se v jezikoslovju že desetletja pojavljajo ideje o premiku pozornosti od enobesedne k večbesednim enotam , ostaja obdelava naravnega jezika še vedno v veliki meri vezana na enobesedno izhodišče , ki je temelj obravnavi večbesednih ter znotraj tega frazeoloških enot , avtomatskemu razdvoumljanju besednega pomena itd.
Kontekstualne informacije , ki jih prinaša jezikovni vzorec , so po ugotovitvah korpusne leksikografije v veliki večini dovoljšen indikator za razdvoumljanje pomena , kakor ga razume obdelava naravnega jezika – ali če pogledamo na problem z drugega zornega kota : problem » dvoumnosti besed « je posledica napačnega prepričanja , da je samostojna beseda običajno nosilka pomena .
Nekatere besede so pomenske enote , mnoge niso – pri čemer je pomenska enota beseda skupaj z vsemi besedami besedilnega konteksta , ki so potrebne za razdvoumljenje te besede ( Teubert v Halliday et al. 2004 : 83 ) .
V praksi to pomeni , da posamezne besede niso kvalificirane , povezane s prevodnimi ustreznicami , pomensko členjene ipd. , pač pa je besedna oblika zgolj vodilka do kompleksnejših podatkov , ki so ustrezno metajezikovno obdelani .
Vprašanju načina vključitve koligacijsko-kolokacijskih podatkov v zbirko se na tem mestu ne posvečamo , mogoče so raznovrstne rešitve , končna odločitev pa temelji predvsem na predvideni uporabi podatkov za razvoj posameznih produktov .
5.3 Odločitev za polavtomatsko metodo nadgradnje Na področju obdelave naravnega jezika je odločitev za avtomatske metode pridobivanja ter obdelave podatkov prva izbira , saj je ročna obdelava podatkov draga ter zamudna .
Človeški doprinos h gradnji jezikovnih virov je tipično predviden le na mestih , kjer avtomatske metode ne dosegajo potrebne kvalitete oz. je poseg strokovnjaka neizbežen ( kot je bilo predstavljeno v poglavju II-1.2.4 denimo pregledovanje ter popravljanje avtomatsko obdelanih podatkov za določitev uspešnosti avtomatskega sistema ) .
Pri gradnji leksikalnih zbirk je smotrno razmišljati o polavtomatskih metodah gradnje .
S stališča zmanjševanja časa ter stroškov človeške interpretacije ter organizacije jezikovnih podatkov je smotrno razmišljati o razvoju uporabniku prijaznega programskega orodja , ki bi omogočalo enostavno obdelavo avtomatsko pridobljenih podatkov ( selekcioniranje , sortiranje , klasificiranje , organiziranje v medsebojne odnose itd. ) ter njihov uvoz v leksikalno zbirko .
Na drugi strani je smiselno poskrbeti za pregledno ter za človeškega uporabnika logično strukturirano reprezentacijo podatkov v zbirki sami , saj slednje omogoča boljše raziskovalno oz. razvojno izhodišče za izrabo leksikalnih podatkov .
Poglavje prinaša opis doktorske raziskave , začenši z opredelitvijo namena raziskave , ki prinaša raziskovalno izhodišče , razlago ključnih pojmov ter shemo raziskovalnih ciljev in vprašanj .
Drugi del poglavja je posvečen opisu poteka , predvsem pripravi in obdelavi podkorpusa ter pripravi in prvi obdelavi seznamov vzorcev .
Naslednji koraki raziskave bodo natančneje predstavljeni v poglavju V in deloma VI , zato so na tem mestu opisani le na kratko .
Pričujoče poglavje zaključuje predstavitev programskih skript , ki so bile znotraj doktorske raziskave pripravljene za izvedbo posameznih raziskovalnih nalog .
1 Namen raziskave 1.1 Raziskovalno izhodišče Raziskovalno izhodišče doktorske naloge predstavlja korpusnojezikoslovna opredelitev sopojavitvenih odnosov kolokacije ter koligacije kot odnosa med jedrno , izhodiščno enobesedno enoto in besedami ter slovničnimi kategorijami , ki glede na izbrano statistično metodo opredeljujejo tipični kontekst jedrne besede v rabi ( I-3 ) .
V povezavi z omenjenim je ključna opredelitev pomenske enote kot besede z vsemi elementi konteksta , ki so potrebni za razdvoumljanje te besede ( III-3.2 ) .
Premik od obravnave enobesedne iztočnice k večbesednim leksikalnim enotam skuša doktorska naloga omogočiti v povezavi z nadgradnjo leksikalne zbirke ASES na osnovi korpusnih podatkov ( III-2 ) .
Trenutno najrelevantnejša slovenska jezikovnotehnološka leksikalna zbirka že omogoča vključevanje zahtevnejših vrst leksikalnih podatkov ( besednozveznih , vezljivostnih , pomenskoodnosnih itd. ) , vendar slednje spričo dolgotrajnosti ročnega vnosa v zbirki niso uravnoteženo zastopane ( III-3 ) .
Doktorska naloga skuša zapolniti vrzel na področju vključevanja iz korpusa pridobljenih kolokacijsko-koligacijskih podatkov v leksikalno zbirko , pri čemer je predvidena polavtomatska metoda ( III-3.3 ) : avtomatsko luščenje večdelnih besednih nizov za obravnavano iztočnico , čemur sledi ustrezna interpretacija ter ročna organizacija podatkov .
Doktorska naloga se osredotoča na prvi , avtomatski del metode , v zvezi s čimer je preizkušena metoda luščenja leksikalnih podatkov iz lematiziranega ter oblikoskladenjsko označenega korpusa ( II-2.2 ) .
V raziskavi je uporabljen podkorpus referenčnega korpusa FidaPLUS , označen z naborom oznak JOS ( II-1.2 ) .
1.2 Ključni pojmi Središče interesa doktorske raziskave predstavlja vzorec : iz besedilnega korpusa pridobljena kombinacija izbrane leme ( avtomatsko pripisane osnovne oblike besede ) in obkrožajočih oblikoskladenjskih oznak : dvodelni vzorec ( bigram ) prinaša lemo ter oblikoskladenjsko oznako na levi oz. desni od leme , tridelni ( trigram ) lemo v kombinaciji z dvema oznakama .
Vzorec dopolnjuje informacija o pogostnosti v korpusnem viru : KAG PAJEK ( 88 ) denimo pomeni , da se lema pajek , pred katero se pojavlja oblikoskladenjska oznaka za glavni števnik arabskega zapisa , v korpusu pojavlja 88-krat .
Vzorec kot kombinacija avtomatsko pripisanih oznak ne predstavlja realne podobe jezikovnih podatkov v korpusu , ampak le približek , ki je lahko zanesljiv le toliko , kolikor je zanesljivo avtomatsko označevanje ( glej II-1.2.4 ) .
Povedano drugače : namesto primerom realne jezikovne rabe , ki jih prinaša besedilni korpus , je pri opisani metodi luščenja interes posvečen abstrahirani podobi jezika , kakor se izraža na ravni v korpusu pripisanih oblikoskladenjskih oznak .
Potreben je poudarek , da podatkov , ki jih iz korpusa pridobivamo z luščenjem , ne gre povsem enačiti s podatki v izhodiščnih besedilih : med obdelavo so delci korpusnega besedila iztrgani iz besedilnega konteksta in nadalje obdelani ter organizirani na način , odvisen od uporabljene metode .
Ker vzorci prinašajo oblikoskladenjske oznake , ki so glede prinašajočih kategorij in vrednosti precej bogate ( glej Priloga 1 ) , je v izogib razpršenosti izluščenih podatkov predvideno združevanje vzorcev v vzorčne tipe .
Združevanje vzorcev in posledično uporaba posplošenih kategorij za luščenje se odraža tudi na ravni kompleksnosti obdelave podatkov , kjer postane ključno vprašanje , katere kategorije in vrednosti oblikoskladenjskih oznak upoštevati pri luščenju ter končnem prikazu podatkov .
Na tej ravni namesto o zapolnitvah govorimo o izluščenih besednih nizih , v primeru , da izluščeni besedni niz ustreza jezikoslovni definiciji , pa tudi o izluščenih besednih zvezah .
Kolokacija kot tretji primerljivi pojem vključuje statistično merjenje povezanosti med jedrno besedo ter kolokatorjem , ki sam na sebi na jedro ni skladenjsko vezan ( glej I-3 ) , kolokatorji za pajek so denimo [ SIP , vreteno , lisice , odvoz , kosilnica , zgrabljalnik , prodati ] itd.
Rezultate luščenja , s tem pa tudi izhodiščne vzorce oz. vzorčne tipe , v raziskavi opredeljujemo s stališča relevantnosti za nadaljnjo uporabo , tj. uvrstitev v leksikalno zbirko .
Naštete točke so namenjene opredeljevanju relevantnosti v pričujoči raziskavi , končna odločitev glede uporabnosti določene vrste besednega niza pa je prepuščena graditeljem leksikalne zbirke .
1.3 Raziskovalni cilji in vprašanja V nadaljevanju so glede na namen raziskave opredeljeni glavni raziskovalni cilji in v njihovem okviru temeljna raziskovalna vprašanja .
Priprava podatkovnega vira 1.1 Priprava podkorpusa referenčnega korpusa FidaPLUS , ki ustreza naslednjima pogojema : 1.1.1 kvantitativna obvladljivost z razpoložljivo strojno in programsko opremo ; 1.1.2 oblikoskladenjska označenost z naborom oznak JOS .
Analiza vzorcev / vzorčnih tipov in njihovih zapolnitev / izluščenih besednih nizov za izbrane leme 2.1 Izdelava pogostnostih seznamov vzorcev za izbrane leme .
2.2 Luščenje zapolnitev najpogostnejših vzorcev za izbrane leme in analiza podatkov , pri čemer so v ospredju naslednja raziskovalna vprašanja : 2.2.1 kateri od vzorcev prinašajo za luščenje relevantne podatke in kateri ne ; 2.2.2 ali so možne posplošitve na ravni ne / relevantnosti glede na vsebnost ali mesto določene oblikoskladenjske oznake znotraj vzorcev ; 2.2.3 na kakšen način je glede na vsebnost oz. mesto oblikoskladenjskih oznak znotraj vzorcev možno združevanje vzorcev v skupine ( vzorčne tipe ) .
2.3 Luščenje zapolnitev vzorčnih tipov za izbrane leme in analiza podatkov , pri čemer so v ospredju naslednja raziskovalna vprašanja : 2.3.1 kateri od vzorčnih tipov prinašajo za luščenje relevantne besedne zveze in kateri ne ; 2.3.2 ali so možne posplošitve na ravni ne / relevantnosti glede na vsebnost ali mesto določene oblikoskladenjske oznake znotraj vzorčnih tipov ; 2.3.3 katera mesta oblikoskladenjskih oznak prinašajo informacije , ki jih je potrebno upoštevati pri luščenju podatkov , in katera ne ; 2.3.4 katera mesta oblikoskladenjskih oznak prinašajo informacije , ki jih je potrebno upoštevati pri prikazu podatkov , in katera ne .
2.4 Organizacija vzorčnih tipov glede na izpričano ne / relevantnost za nadaljnjo uporabo .
2.5 Prenos izbranega dela ugotovitev na nove primere ( leme ) , pri čemer so v ospredju naslednja raziskovalna vprašanja : 2.5.1 ali se pri obravnavi vzorcev z novo lemo pojavljajo v raziskavi še neidentificirani vzorci / vzorčni tipi in če da , na kakšen način jih je mogoče uvrstiti med obstoječe podatke ; 2.5.2 ali izluščeni podatki za novo lemo potrjujejo opredelitev relevantnosti in če ne , do kakšnih sprememb prihaja .
Analiza avtomatskega označevanja 3.1 V primeru , da obravnavani podatki na ravni oblikoskladenjskih oznak izkazujejo označevalne napake , analiza označevanja , pri čemer so v ospredju naslednja raziskovalna vprašanja : 3.1.1 ali je mogoče označevalne napake natančneje opredeliti glede na raven , na kateri se pojavljajo ( na besednovrstni ravni , na ravni posamezne kategorije ) ; 3.1.2 ali je mogoče označevalnim napakam s pomočjo obravnavanih podatkov ( izluščeni besedni nizi , korpusne konkordance ) najti vzrok ; 3.1.3 ali je mogoče najti način preprečevanja pojavljanja označevalnih napake v bodoče , in katere informacije so za to potrebne .
4.2 Priprava programskih skript za luščenje ter urejanje vzorcev , vzorčnih tipov ter njihovih zapolnitev / besednih nizov .
Nadaljevanje poglavja prinaša opis poteka doktorske raziskave .
2 Potek raziskave 2.1 Priprava podatkovnih virov 2.1.1 Izdelava podkorpusa Korpus , uporabljen v raziskavi , je podkorpus trenutnega referenčnega korpusa za slovenščino , tj. korpusa FidaPLUS ( oz. njegove različice korpusa Fida+X , o čemer več v nadaljevanju ) .
Priprava podkorpusa temelji na potrebi po kvantitativni omejitvi uporabljenega jezikovnega vira , ki je vezana na zmogljivost razpoložljive programske ter strojne opreme , predvidene za obdelavo korpusnih podatkov .
V podkorpus so bili uvrščeni vsi odstavki korpusa FidaPLUS , ki prinašajo ( vsaj ) eno od 15-ih za analizo izbranih besed ( več o tem v nadaljevanju ) .
Kot rečeno v II-2.2 , se v raziskavi osredotočamo na luščenje podatkov za eno samo izhodiščno besedo ( oz. besedni obliki pripisano lemo ) naenkrat – kar pomeni odločitev za pripravo korpusnega vira , ki prinaša čim večjo količino besedilnega konteksta za obravnavano iztočnico .
Ker na opisani način pripravljen podkorpus na ravni obravnave izbranih besed ohranja reprezentativnost izvornega korpusa , odpade vprašanje uravnoteževanja podkorpusa s stališča zajetih besedilnih zvrsti oz. virov .
Pred pripravo podkorpusa je torej potrebna izbira nabora besed , ki bodo v nadaljevanju raziskave izhodišče za analizo .
Nabor izbranih primerov je naključen in ne skuša biti na nikakršen način reprezentativen , kar s stališča raziskave ni problematično , saj nas nabor zanima predvsem s stališča leksikalnih podatkov , ki jih s testirano metodo lahko iz podkorpusa izluščimo .
Drugi pogoj je zastopanost vsake od štirih polnopomenskih besednih vrst z vsaj enim primerom , saj je v raziskavi predvidena analiza po enega primera za vsako od teh besednovrstnih skupin .
O pripravi korpusa Fida+X , ki je uporabljen tudi za pripravo korpusov v sklopu projekta JOS ( glej II-1.2.3 ) , pišeta Erjavec in Krek : » Prvi korak na poti od korpusa FidaPLUS do korpusa JOS je bila pretvorba v format XML po priporočilih TEI P4 [ …
Format TEI P4 je sicer povratno združljiv s formatom TEI P3 korpusa FIDA in XML je podmnožica formata SGML , vendar končni korpus FidaPLUS kot podatkovna zbirka ni v celoti skladen niti s formatom SGML niti s specifikacijami MULTEXT-East , zato je bil proces pretvorbe zahtevnejši , kot je bilo pričakovati .
Ta je za malenkost manjši kot izvorni korpus , ker smo izpustili besedila , pri katerih hevristični postopki s pomočjo Perl skript niso zadostovali za njihovo kompatibilnost s standardom TEI P4 .
Datoteke prinašajo izluščene odstavke korpusnih besedil , skupaj z informacijo o besedilnem viru v obliki glav korpusnih dokumentov .
Odstavki prinašajo le informacijo o razdvoumljenem stanju korpusnih oznak ( le oznake lemma ter msd – prim. tristopenjsko označeno korpusno besedilo v Tabeli 1 ) .
Sledi primer odstavka korpusnega besedila : < p id = " F0000001.244 " > < s id = " F0000001.244.1 " > < w lemma = " Benko " msd = " Slmetd " > Benka < / w > < w lemma = " Pulko " msd = " Slmei " > Pulko < / w > < c > , < / c > < w lemma = " prvi " msd = " Kbvzei " > prva < / w > < w lemma = " Slovenka " msd = " Slzei " > Slovenka < / w > < c > , < / c > < w lemma = " ki " msd = " Vd " > ki < / w > < w lemma = " biti " msd = " Gp-ste-n " > je < / w > < w lemma = " v " msd = " Dm " > v < / w > < w lemma = " petinpolleten " msd = " Ppnsem " > petinpolletnem < / w > < w lemma = " potovanje " msd = " Sosem " > potovanju < / w > < w lemma = " z " msd = " Do " > z < / w > < w lemma = " motor " msd = " Someo " > motorjem < / w > < w lemma = " obkrožiti " msd = " Ggdd-ez " > obkrožila < / w > < w lemma = " svet " msd = " Sometn " > svet < / w > < c > , < / c > < w lemma = " biti " msd = " Gp-pte-n " > bo < / w > < w lemma = " tudi " msd = " L " > tudi < / w > < w lemma = " februarja " msd = " Rnn " > februarja < / w > < w lemma = " nadaljevati " msd = " Ggnd-ez " > nadaljevala < / w > < w lemma = " multimedijski " msd = " Ppnzmt " > multimedijske < / w > < w lemma = " predstavitev " msd = " Sozmt " > predstavitve < / w > < w lemma = " svoj " msd = " Zp-zer " > svoje < / w > < w lemma = " pot " msd = " Sozer " > poti < / w > < c > .
Kot razloženo v gornjem navedku se različici korpusa FidaPLUS ter Fida+X glede kvantitete zajetih podatkov razlikujeta , zato tabela v nadaljevanju prinaša primerjavo pogostnosti posamezne od 15-ih izbranih lem v korpusu FidaPLUS – leme so štete s pomočjo Konkordančnika ASP32 v internetni različici korpusa – ter podkorpusa Fida+X – leme so štete s pomočjo pripravljenega programa ( glej IV-3.1.1 ) : FidaPLUS podkorpus Fida+X razlika vonj pajek matica Slovenka debata lipicanec oven 23.279 9.122 6.307 14.378** 9.142 4.402 6.415* 23.414 9.222 6.410 14.526 9.258 4.442 6.480 +135 +100 +103 +148 +116 +40 +65 plesati izdati izpeljati sklanjati izsiliti 15.443 82.142 31.529 1.359 5.338 15.662 75.907 27.829 1.380 5.015 +219 -6.235 -3.700 +21 -323 strasten moder 6.263 52.169* 6.337 52.680 +74 +511 temeljito 22.701 22.877 +176 * – upoštevano je število po izločitvi zadetkov , ki so označeni kot lastno ime ** – upoštevano je število po izločitvi zadetkov , ki so označeni kot občno ime Tabela 14 : Razlike v številu lem v korpusu FidaPLUS ter podkorpusu Fida+X .
Razlike v podatkih so za nadaljevanje raziskave pomembne predvsem v sklopu analize avtomatskega označevanja , kjer so za interpretacijo podkorpusnih podatkov uporabljeni konkordančni nizi Konkordančnika ASP32 .
Izhodišče za pripravo seznamov vzorcev – slednji so urejeni glede na pogostnost , ki je za analizo ključen podatek – je torej besedilo , v katerem namesto obravnavane besede nastopa lema , namesto ostalih besednih oblik pa oblikoskladenjske oznake .
Takšen zapis je na strukturni ravni primerljiv z izhodiščnim besedilom : ohranjena sta linearnost zapisa ter vrstni red oznak , ohranjena so stavčna ločila ter oznake formata xml , ki določajo meje povedi ter odstavkov .
Za pripravo seznamov vzorcev je bil v raziskavi uporabljen program Oxford WordSmith Tools ( različica 4.0.0.387 ) , čemur je posvečeno poglavje IV-2.2.1 .
Vsi v nadaljevanju opisani koraki pretvorbe besedil so izvedeni z uporabo v raziskavi pripravljenih programov ( za opis programov glej poglavje IV-3 ) .
Metoda pretvorbe besedil poteka po naslednjem postopku : ( I ) preimenovanje oznak lemma pri obravnavanih 15 lemah , ( II ) odstranitev neželenih oznak iz besedila , ( III ) menjava ločil s posebnimi oznakami ter ( IV ) dodajanje oznak za konec povedi .
2.1.2.1 Preimenovanje oznak za obravnavane leme Ker je v nadaljevanju predvidena posebna obravnava primerov , ki izkazujejo katero od 15 obravnavanih lem ( ostale želimo iz besedila odstraniti , skupaj z oznako lemma ) , je oznaka lemma pri obravnavanih zamenjana z oznako mojalemma .
Kratek opis programa prinaša poglavje IV-3.1.2 .
2.1.2.2 Odstranitev oznak iz besedila V tem koraku so iz besedila odstranjene oznake , vezane na format xml : oznake za začetek in konec besede in ločila ter za napoved lem ( lemma ) in oblikoskladenjskih oznak ( msd ) .
Kot je razvidno iz gornjega primera , sta v tem koraku izvedena še dva postopka : ( I ) vezaji znotraj oblikoskladenjskih oznak so zamenjani z znakom x v izogib razbijanju oznak na več delov ter ( II ) odstranjeni so prehodi v nove vrstice , razen na koncu povedi .
Na tak način je zagotovljena oblika tekočega besedila , potrebna za nadaljnjo obdelavo podatkov .
Kratek opis uporabljenih programov prinaša poglavje IV-3.1.3 .
2.1.2.3 Menjava ločil s posebnimi oznakami Ker je pri luščenju besednih nizov ločila smiselno obravnavati kot mejnike ( več o tem v IV-2.2.2 ) , jih je treba pri pretvorbi besedil zamenjati z besednimi oznakami , ki jih je v nadaljevanju enostavno poiskati , in vzorce , ki oznake vsebujejo , odstraniti iz nadaljnje obravnave .
Kratek opis programa prinaša poglavje IV-3.1.4 .
< p id = " F0000001.244 " > < s id = " F0000001.244.1 " > Slmetd Slmei VMES Kbvzei Slovenka VMES Vd Gpxstexn Dm Ppnsem Sosem Do Someo Ggddxez Sometn VMES Gpxptexn L Rnn Ggndxez Ppnzmt Sozmt Zpxzer Sozer KONC < / s > < / p > Tabela 17 : Menjava ločil z oznakami .
2.1.2.4 Dodajanje oznake za konec besedilnega dela V korpusnih besedilih so pogosti primeri , kjer konci povedi oz. besedilnih delov ne prinašajo končnega ločila ( npr. pri naslovih , tabelarnih podatkih , alinejskem naštevanju itd. ) .
Kratek opis programa prinaša poglavje IV-3.1.5 .
Sledi primer stavka iz korpusnega besedila , v katerem na koncu besedilnega dela ni končnega ločila .
< s id = " F0000001.57.1 " > < w lemma = " 1550 " msd = " Kag " > 1550 < / w > < w lemma = " protestant " msd = " Somei " > protestant < / w > < w lemma = " Primož " msd = " Slmei " > Primož < / w > < w lemma = " Trubar " msd = " Slmei " > Trubar < / w > < w lemma = " izdati " msd = " Ggdste " > izda < / w > < w lemma = " prvi " msd = " Kbvzdt " > prvi < / w > < w lemma = " slovenski " msd = " Ppnzdt " > slovenski < / w > < w lemma = " knjiga " msd = " Sozdt " > knjigi < / w > < / s > < s id = " F0000001.57.1 " > Kag Somei Slmei Slmei izdati Kbvzdt Ppnzdt Sozdt NIKONC < / s > Tabela 18 : Dodajanje oznake za konec povedi .
2.1.2.5 Končno stanje pretvorjenega besedila Končno stanje pretvorjenega besedila prikazuje primer v nadaljevanju .
Ločila so zabeležena v obliki oznak VMES ter KONC , vstavljena je oznaka za manjkajoče končno ločilo NIKONC .
Ostale oznake , vezane na format xml – za označevanje delov besedila , tj. stavkov in odstavkov , skupaj z identifikacijskimi oznakami – ostajajo , ker ne vplivajo na nadaljnjo obdelavo podatkov .
< p id = " F0000001.84 " > < s id = " F0000001.84.1 " > Zkxzei Sozei Ggvste L Ppnsmt Sosmt Ppnmmr Sommr Vp Sozer KONC < / s > < s id = " F0000001.84.2 " > Dm Somem Ggnspmxn Rnn Ppnmmt Sommt VMES Pdnzmi N KONC < / s > < s id = " F0000001.84.3 " > Dt Kbvmdm Kbgmmm Sommm Ggdste Somei Ggnste Somei VMES Vd Ggvste Kbvmei N VMES Rnn Vp Zpxxxdxxk Ggnstm Ppnmeid VMES Ppnmeid VMES moder Vp Ppnmeid Somei VMES Vp Kbvmei N KONC < / s > < s id = " F0000001.84.4 " > Do Ppnmeo Ggdste Ppnmeid Somei VMES Kbvmei Pdnmein VMES Rnn Kbzmeid Somei VMES O NIKONC < / s > < s id = " F0000001.84.5 " > L Dt Sozet Ppnmer Somer Ggnste Somei Ggdn Rnn Sozmr Vp Sosmt VMES L Vp Ppnsei Ggvn Zzxsei Znxsei Slzmr KONC < / s > < s id = " F0000001.84.6 " > Zkxsei Gpxstexn Sozei Sozer Do Pdnmeo Someo KONC < / s > < s id = " F0000001.84.7 " > Rnn Somei Ggnste Zsdmete Sometn Vp Ggnste VMES Rnn Gpxpdexn Pdnmein Dt Ppnzet Sozet KONC < / s > < s id = " F0000001.84.8 " > Rnn Ggnsde Sometn KONC < / s > < s id = " F0000001.84.9 " > Zspmeie Somei Gpxstexn L Ppnzei Soser N Sozed VMES Vd Ggnste Dm Slmem Vp Gpxstexn Somei Ppnmer Somer VMES Kbvmei Pdnmein KONC < / s > < / p > Tabela 19 : Končno stanje pretvorjenega besedila .
Na predstavljeni način je pretvorjen celotni podkorpus .
Nadaljevanje poglavja prinaša opis postopka izdelave pogostnostnega seznama vzorcev na osnovi pripravljenega podatkovnega vira .
Zaradi zmogljivosti ( programska orodja se redno posodabljajo ) in prijaznosti uporabniku , se je uporaba programa zelo razširila – ker zasnova programa to omogoča , tudi na obdelavo drugih jezikov ( v slovenski literaturi je program predstavljen denimo v Vintar 2008 : 90 – 99 ) .
V raziskavi je uporabljena funkcija Clusters znotraj orodja Concord .
Clusters ( slovenska ustreznica angleškemu cluster bi lahko bila skup , kakor je predlagano v Gorjanc 2005 ) glede na izbrane parametre izdela po pogostnosti urejen seznam n-gramov , pri čemer upošteva podatke , ki se pojavljajo v konkordančnem nizu za obravnavano besedo .
Konkordančni nizi sami so zaradi oblike podatkovnega seta manj uporabni , kot je razvidno iz spodnjega primera s konkordančnim jedrom pajek , zato so v raziskavi puščeni ob strani :
S programom Clusters so pripravljeni seznami vzorcev za dvodelne , tridelne ter štiridelne kombinacije leme z okoliškimi oznakami .
N je zaporedna številka vzorca v pogostnostnem seznamu , Freq .
Pregled vzorcev kaže , da gre večinoma za kombinacije z oznakami za ločila : N Cluster Freq .
podobna podredno zloženi , le da je določujoči del prosto pridružen : Prešeren , naš največji pesnik ; sicer pa isto predmetnost imenuje z dveh stališč .
« ( Toporišič 20044 : 558 ) Pristavčno zložene besedne zveze zaradi svoje posebne strukture zahtevajo samostojno raziskavo s prilagojenim postopkom luščenja .
V pričujoči raziskavi je za zveze tega tipa predvideno prenizko število pridobljenih primerov glede na čas , namenjen njihovi identifikaciji , zato jih trenutno puščamo ob strani .
Po prvi selekciji vzorcev se seznami precej skrajšajo – več kot ima vzorec mest , večji je posledično delež odstranjenih vzorcev , kot prikazuje spodnji primer : /.../
Za potrebe luščenja je bilo pripravljenih več specializiranih programov , katerih učinkovitost je bila preverjena na osnovi analize izluščenih besednih nizov v poglavju V. Na več mestih omenjenega kakor tudi pričujočega poglavja so bile izpostavljene možnosti izboljšave metode luščenja oz. opozorila glede predvidenega dodatnega razvoja postopka .
Na tem mestu so ugotovitve za vse stopnje obdelave podatkov strnjeno predstavljene .
Na ravni priprave korpusnih besedil ter formiranja začetnega seznama vzorcev se kot problem kaže predvsem dolgotrajnost obdelave , vezana na omejeno procesorsko moč uporabljenega računalnika ter seveda številne ročne postopke , s katerimi je bilo dopolnjeno avtomatsko luščenje podatkov .
Vsekakor dolgotrajna je tudi analiza podatkov , ki pa v nadaljevanju v takšnem obsegu ne bo več potrebna oz. bo potekala na ravni , nakazani v VI-2.2 .
Za luščenje podatkov iz celotnega referenčnega korpusa je predvidena izdelava celovitega avtomatiziranega postopka , ki na čim bolj enostaven način združuje vse v pričujoči raziskavi opisane elemente ( iskanje relevantnih besednih zvez , razvrščanje in štetje zvez , ustrezen prikaz besednih zvez ) , kar pomeni , da zgoraj opisane težave za nadaljevanje niso pričakovane .
Glede same kvalitete izluščenih podatkov se potrjuje predvidevanje , da so rezultati relevantnejši na mestih , kjer slovenski jezik na skladenjski ravni v okvirih dvodelnih ali tridelnih besednih nizov izkazuje dovoljšno stopnjo regularnosti – iz tega sledi zaključek , da je metoda zanesljivejša na ravni luščenja besednih zvez s samostalniškim , pridevniškim ali prislovnim jedrom .
Na ravni kombinacij , ki vsebujejo glagolsko lemo oz. oblikoskladenjsko oznako , je zanesljivost z opisano metodo izluščenih podatkov nižja , predvsem na ravneh , kjer se v izluščenih besednih nizih izkazujejo kombinacije , ki na skladenjski ravni izvornih stavkov prinašajo različne stavčne člene .
Za luščenje zvez z glagolom so torej potrebne dodatne raziskave , ki jih bo predvidoma omogočila analiza skladenjsko označenih besedil .
V raziskavi se uporablja luščenje na osnovi vzorčnih tipov , ki so večinoma posplošitev nabora sorodnih vzorcev na raven najvišje kategorije oblikoskladenjskih oznak ( tj. besedne vrste ) , obenem pa se na več mestih tekom dejanskega luščenja ter prikazovanja dobljenih podatkov kaže za ključno upoštevanje še katere od označevalnih podkategorij .
Tekom pričujoče raziskave je zato pri posameznem tipu zvez določeno , katere podkategorije je smiselno pri luščenju upoštevati in katerih ne .
V pričujoči raziskavi so najpodrobneje raziskane možnosti luščenja samostalniških besednih zvez .
Pri luščenju zvez ( I ) s samostalniškimi določili je ključno upoštevanje razlik v sklonu samostalnikov , kakor se pojavljajo v izpričanih besednih zvezah ( prim. oven vodnik vs .
Glede na sklonske kombinacije lahko med luščenjem zveze razvrščamo , po razvrščanju pa je zaradi dvoumnosti določenih sklonskih kombinacij potrebna dodatna obdelava podatkovnih tabel .
Metoda luščenja zvez ( II ) s pridevniškimi določili , pri čemer je nujno upoštevati ujemanje pridevnika oz. pridevnikov s samostalnikom v spolu , sklonu in številu , daje dobre rezultate in je ni treba dograjevati – razen na ravni prikaza pridevniških lem v ustreznih oblikah glede na spol jedrnega samostalnika ( prim. javen debata ) .
Luščenje prirednih zvez prinaša ustrezne rezultate na ravni simetričnih vzorčnih tipov , tj. v primeru , da se levo in desno od veznika pojavljata besednovrstno isti besedi ( prim. romantičen in strasten ) .
Na ravni luščenja zvez pridevnika s samostalniškim dopolnilom je ključno upoštevanje sklona samostalnika ( npr. podoben pajku ) Dodaten razmislek je zaželen glede označevanja vrste prislova .
Na eni strani se zdi smiselno iz celotnega nabora ločevanje prislovov mere , ki predstavljajo bolj ali manj zaključeno skupino , znotraj besednih zvez pa so pomensko manj zanimivi ( zelo strasten kadilec ) ; enako velja za prislove , ki so na skladenjski ravni del povedka ( tip treba temeljito prenoviti ) .
Upoštevajoč kategorije v slovnici se zdi glede na sestavljenost prislovnih besednih zvez izvedljivo ločevanje prislovov , ki tipično dobijo prilastek na desni , od tistih , ki dobijo prilastek na levi .
Dodatne raziskave so potrebne v zvezi z ugotavljanjem relevantnosti kategorij števila ter stopnje , saj se na določenih mestih razvrščanja ter prikaza besednih zvez izkazujeta za razločevalni , na drugih ne ( prim. za relevantnost : Slovenke in Slovenci ter uradno najlepša Slovenka ) .
Na prvi pogled se zdi smiselna nadgraditev metode na način , ki bi na evidentirano problematičnih mestih upošteval razpršenost različnih oblikoskladenjskih oznak na ravni posamezne kategorije ( če se določena besedna zveza npr. pojavlja pretežno v enem samem številu , se prikaže v izpričani obliki , če se pojavlja v ustreznem razmerju vseh treh številih , se prikaže v nezaznamovani edninski obliki ) .
Ročna analiza avtomatsko izluščenih podatkov je sicer v vsakem primeru nujna , ker pa je predvidoma zamudna , je smiselno podatke vnaprej selekcionirati .
Na kakšen način in do katere mere selekcija poteka , je predmet nadaljnjih odločitev , vezanih na namen posamezne raziskave .
Kljub nekaterim v pričujočem poglavju izpostavljenim pomanjkljivostim opisane metode so rezultati – predvsem na ravni luščenja samostalniških besednih zvez , ki jim je bilo v raziskavi posvečene več pozornosti – spodbudni in pričajo o visokem potencialu uporabnosti tovrstnega luščenja podatkov za različne namene .
Doktorsko delo zaključujemo z navedkom Wolfganga Teuberta in Ramesha Krishnamurtyja iz uvoda v njun obsežni zbornik prispevkov na temo korpusnega jezikoslovja .
Avtorja utemeljujeta , zakaj obdelava naravnega jezika ne more biti uspešna , dokler se trudi naravne jezike formalizirati , obenem pa opredeljujeta , kako in do katere mere lahko problem opisa nepredvidljivega naravnega jezika reši korpusno jezikoslovje .
Naravni jeziki so pravo nasprotje .
Statistična analiza obsežnih korpusov bo našla ponavljajoče se vzorce in druge vrste verjetnosti .
I Doktorska raziskava združuje korpusnojezikoslovna izhodišča z metodami obdelave naravnega jezika , pri čemer se glede na cilj – avtomatsko pridobivanje leksikalnih podatkov za nadgradnjo jezikovnotehnološke leksikalne zbirke za slovenščino – uvršča na področje računalniške leksikografije .
Glede na nove jezikoslovne ugotovitve , temelječe na korpusnih podatkih , imamo pojav korpusov v jezikoslovju lahko za resnično metodološko revolucijo , ne glede na to , ali korpus pomeni dopolnilo že obstoječih jezikoslovnih metod ali zaključeni jezikovni vir , ki je ( edini lahko ) osnova za postavitev novih hipotez o jeziku .
Doktorska raziskava raziskuje možnosti luščenja leksikalnih podatkov iz lematiziranega ter oblikoskladenjsko označenega besedilnega korpusa .
II-1.1 Vztrajanje pri obdelavi surovih , neoznačenih korpusnih podatkov , ki je značilno za zagovornike popolnega korpusnega pristopa , postane s širitvijo korpusnega jezikoslovja na področja morfološko bogatih jezikov , obenem pa z razvojem zmogljive programske opreme za delo z označenimi korpusi , manj smotrno .
Korpusne oznake so razdvoumljene na osnovi skladenjske analize obravnavanega stavka , v korpusu pa so oznake dostopne tako v nerazdvoumljeni kot razdvoumljeni različici .
Za označevanje korpusa FidaPLUS je bil uporabljen sistem oblikoskladenjskega označevanja , ki je nastal v okviru projekta Multext-East .
V sklopu projekta JOS je potekla tudi evalvacija avtomatskega oblikoskladenjskega označevanja slovenščine , pri čemer je bila za Amebisov označevalnik ugotovljena 85,7 % natančnost .
Izboljšave so mogoče tudi z osredotočanjem na napake , ki se pri označevanju tipično pojavljajo , čemur se posveča tudi pričujoča raziskava .
II-2.1 Omenjena metoda je v slovenščini že preizkušena za luščenje samostalniških terminoloških besednih zvez .
Luščenje poteka na osnovi vnaprej pripravljenih skladenjskih vzorcev , ki prinašajo opredelitev sosledja besednih vrst v besedni zvezi ter njenega jedra .
II-2.2 Luščenje v pričujoči raziskavi je deloma primerljivo z opisanim .
Pomenska analiza izluščenih podatkov ostaja zunaj interesa raziskave , zato se pri luščenju v isto skupino zajemajo tako proste kot stalne besedne zveze oz. tako neidiomatične kot idiomatične .
Izhodišče za luščenje je enobesedna iztočnica ( samostalniška , pridevniška , glagolska ali prislovna ) , za katero so v prvem koraku identificirane koligacije , nato pa na osnovi vzorcev , s katerimi koligacije opredeljujemo , izluščeni besedni nizi , v katerih iztočnica nastopa .
Besedni nizi so urejeni glede na pogostnost , ki nam pomeni glavni indikator tipičnosti jezikovnih podatkov .
III Luščenje leksikalnih podatkov v pričujoči raziskavi je namenjeno posodobitvi leksikalne zbirke ASES z večbesednimi leksikalnimi enotami .
Prve so namenjene računalniški obdelavi jezika , druge pa stremijo k za človeškega uporabnika zanimivemu jezikoslovnemu opisu .
V slovenskem prostoru je poleg jezikovnotehnološke zbirke ASES , s katero se ukvarja pričujoče delo , potrebno omeniti III-1.1 slovarsko leksikalno zbirko , ki nastaja v sklopu projekta Sporazumevanje v slovenskem jeziku , ter III-1.2 gradnjo zbirke ontološkega tipa , tj. slovenskega wordneta .
Osnovni enoti zbirke sta beseda ( prinaša podatke o oblikovnem delu jezikovnega znaka – nabor besednih oblik z oblikoskladenjskimi oznakami ) ter pomen ( prinaša podatke o pomenskem delu jezikovnega znaka , omogoča povezovanje med jeziki , opredeljevanje pomenskih odnosov med besedami ter kvalifikacijo iztočnice glede na rabo ) .
Iztočnice vrste glagolska predloga prinašajo podatke o glagolski vezljivosti .
Ker je gradnja zbirke usmerjena v sprotno reševanje problemov razvoja posameznih jezikovnih tehnologij ( ročno vnašanje podatkov je izredno zamudno ) , prinašajo določena mesta zbirke popolnejše informacije kot druga .
III-3 Za nadgradnjo zbirke ASES je v pričujočem delu predlagana metoda , osnovana na izrabi korpusnih podatkov .
III-3.1 Osnova nadgradnje zbirke je referenčni korpus slovenskega jezika , v nadaljevanju ( ključno je neprekinjeno nadgrajevanje zbirke ) pa je predvidena tudi uporaba drugih jezikovnih virov , npr. specializiranih korpusov , strojnoberljivih slovarjev , interneta itd.
S tega stališča je ključno ohranjanje informacije o jezikovnem viru v zbirki , kar omogoča ločeno urejanje ter prioretiziranje podatkov za potrebe razvoja specifične jezikovne tehnologije .
III-3.2 Temeljni za vključitev v leksikalno zbirko so koligacijski ter kolokacijski podatki o besedah , kar pomeni premik pozornosti od enobesedne k večbesednih leksikalnim enotam .
III-3.3 Podatke za vključitev v zbirko želimo iz korpusa pridobiti avtomatsko , nato pa jih prav tako avtomatsko organizirati v – kolikor je mogoče – berljivo in pregledno obliko za nadaljnjo ročno obdelavo .
IV-1 Središče interesa doktorske raziskave predstavlja vzorec : iz besedilnega korpusa pridobljena kombinacija izbrane leme in obkrožajočih oblikoskladenjskih oznak , skupaj s podatkom o pogostnosti pojavljanja vzorca v izvornem korpusnem viru .
Del besedila , ki ga z uporabo vzorca izluščimo , imenujemo vzorčna zapolnitev .
Ker vzorci vsebujejo oblikoskladenjske oznake , ki so glede kategorij ter vrednosti , ki jih opredeljujejo , precej bogate , je v izogib razpršenosti izluščenih podatkov predlagano združevanje vzorcev v vzorčne tipe .
Deloma obdelane in organizirane podatke imenujemo izluščeni besedni nizi .
V raziskavi so besedni nizi natančneje analizirani , pri čemer so temeljna raziskovalna vprašanja vezana na relevantnost posamezne vrste izluščenih podatkov za vključitev v leksikalno zbirko .
Opisani podkorpus se uporablja kot vir luščenja podatkov , izključno za pripravo izhodiščnih seznamov vzorcev pa se uporablja preoblikovana različica podkorpusa , ki vsebuje le izbrani nabor lem , oblikoskladenjske oznake ter oznake za ločila izvornega korpusnega besedila .
Podatki tako pripravljenega podatkovnega vira so urejeni s pomočjo programa Oxford WordSmith Tools .
Naslednji korak raziskave je ročni pregled vzorčnih zapolnitev za najpogostejše ( okrog 100 za vsak seznam ) vzorce s štirimi lemami , pajek , strasten , plesati ter temeljito .
Pregled podatkov izkazuje , da je mogoče relevantnost vzorca za luščenje v določeni meri predvideti tako glede na vsebnost določene vrste oblikoskladenjskih oznak kot tudi glede na njihovo mesto znotraj vzorca .
Posledično so iz nadaljnje analize izločeni vzorci , ki vsebujejo oznake za : pomožno glagolsko obliko , zaimek , okrajšavo , števnik ali členek .
Med nadaljnjo analizo so vzorci združeni v vzorčne tipe na osnovi redukcije oblikoskladenjske oznake na opredelitev besedne vrste .
Vzorčni tipi so izhodišče za luščenje besednih nizov , analiza katerih se vrača k obravnavi ostalih v oznakah pripisanih oblikoskladenjskih kategorij .
Glavni cilji analize so : ( I ) iskanje tipičnih napak besednim nizom pripisanih oznak , ( II ) poskus ugotovitve , katere kategorije oznak je pri luščenju ter prikazu podatkov smotrno upoštevati kot razločevalne in katere je smotrno združevati v izogib razprševanju podatkov , ter ( III ) klasifikacija vzorčnih tipov glede na ( ne ) relevantnost za luščenje .
Sprotno in problemsko usmerjeno nastajanje programov se odraža v njihovi neintegriranosti , kar je pred nadaljevanjem luščenja podatkov znotraj širše zasnovanih raziskav potrebno odpraviti .
V-1 Najbolj zanimive rezultate prinaša luščenje besednih nizov , ki vsebujejo same polnopomenske besede .
Analizirani vzorčni tipi so : pajek + Sam ( pajek skakač ) , pajek + Sam2 ( pajek širine ) , pajek + Sam3 ( pajek olivi ) , pajek + SamLI ( pajek Pottinger ) ter Sam + pajek ( obračalnik pajek ) , Sam + pajek2 ( vrsta pajka ) .
Na ravni luščenja zvez samostalnika ter pridevnika so zanimive samostalniške besedne zveze s pridevnikom , ki se ujema v spolu , sklonu ter številu , ter zveze pridevnika s samostalniškim dopolnilom .
Analizirani vzorčni tipi so : pajek + Prid ( pajek dvovretenski ) , Prid + pajek ( rdeč pajek ) , pajek3 + Prid ( pajku podoben ) ter Prid + pajek3 ( podoben pajku ) .
Kljub zavedanju da z luščenjem dvo - ter tridelnih vzorcev ni mogoče doseči zadovoljivega priklica zvez , ki posegajo na skladenjsko raven jezika ( npr. med samostalnikom v vlogi osebka ter glagolom v vlogi povedka ) , so vzorci , ki vsebujejo oznako za glagol , v raziskavi analizirani .
Na ravni luščenja zvez samostalnika ter glagola se izkazuje potreba po urejanju podatkov glede na sklon samostalnika , za primer Glag + pajek npr. Glag + pajek1 ( odpeljati pajek ) , Glag + pajek2 ( bati pajkov ) , Glag + pajek3 ( dati pajkom ) , Glag + pajek4 ( poklicati pajka ) .
Analiziran je tudi vzorčni tip pajek + Glag ( pajek odpeljati ) .
V-1.2 Od primerov z besedo pajek ter dvema polnopomenskima besedama sta analizirana vzorčna tipa : Prid + Prid + pajek ( orjaški ptičji pajek ) , Prid + pajek + Sam ( štirivretenski pajek sip ) , relevantne podatke pa prinašajo tudi : pajek + Sam + Sam ( pajek Pottinger HIT ) , Sam + pajek + Sam ( obračalnik pajek SIP ) ter Prid + Sam + pajek ( resnični mož pajek ) .
Drugi analizirani vzorčni tipi so : Sam + strasten ( Slovenci strastni ) , strasten + Prid ( strasten ljubezenski ) , Prid + strasten ( nov strasten ) , Prisl + strasten ( najbolj strasten ) ter Glag + strasten ( preživeti strasten ) .
V-1.4 Od primerov z besedo strasten ter dvema polnopomenskima besedama so analizirani vzorčni tipi : Prisl + strasten + Sam ( najbolj strasten kadilec ) , Glag + strasten + Sam ( preživeti strastno noč ) , strasten + Prid + Sam ( strasten ljubezenski prizor ) , strasten + Sam + Prid ( strasten zbiratelj starih ) ter strasten + Sam + Sam ( strasten igralec golfa ) .
Od primerov kombinacij besede temeljito s še eno polnopomensko besedo so analizirani vzorčni tipi : Prisl + temeljito ( tako temeljito ) , temeljito + Prisl ( temeljito strokovno ) , temeljito + Glag ( temeljito spremeniti ) , Glag + temeljito ( opraviti temeljito ) , Sam + temeljito ( sestavine temeljito ) , temeljito + Sam ( temeljito čiščenje ) ter temeljito + Prid ( temeljito prenovljen ) .
V-1.8 Analizirani tridelni vzorčni tipi pa so : Prisl + temeljito + Glag ( skupaj temeljito premešati ) , Glag + temeljito + Glag ( morati temeljito premisliti ) , temeljito + Glag + Sam ( temeljito umiti roke ) , Sam + temeljito + Glag ( kožo temeljito očistiti ) ter Prid + Sam + temeljito ( prihodnje leto temeljito ) .
Pri obravnavi tridelnih vzorčnih tipov so analizirani : pajek + Pred + Sam ( pajek za seno ) , Sam + Pred + pajek ( odvoz s pajkom ) , Glag + Pred + pajek ( odpeljati s pajkom ) , Pred + strasten + Sam ( v strastno razmerje ) , strasten + Sam + Pred ( strasten odnos do ) , plesati + Pred + Sam ( plesati z volkovi ) , plesati + Pred + Prid ( plesati do zgodnjih ) , Prisl + plesati + Pred ( vedno plesati z ) , Pred + Sam + plesati ( z veseljem plesati ) , Pred + Sam + temeljito ( pred uporabo temeljito ) ter temeljito + Glag + Pred ( temeljito pripraviti na ) .
V-3 V zvezi z luščenjem zvez , ki vsebujejo veznik , so najbolj zanimivi primeri , ki prinašajo dve istovrstni besedni vrsti , povezani s prirednim veznikom : Sam + Vp + pajek ( kača in pajek ) , pajek + Vp + Sam ( pajek in škorpijon ) , Prid + Vp + strasten ( romantičen in strasten ) , strasten + Vp + Prid ( strasten in čustven ) , Glag + Vp + plesati ( peti in plesati ) , plesati + Vp + Glag ( plesati in igrati ) , temeljito + Vp + Prisl ( temeljito in strokovno ) , Prisl + Vp + temeljito ( hitro in temeljito ) .
V-4 Vzorci , ki prinašajo oblikoskladenjsko oznako za pomožni glagol , členek , okrajšavo , zaimek oz. števnik , se izkazujejo za problematične na ravni nezadostnega priklica želenih leksikalnih podatkov z opisano metodo ali na ravni slabe avtomatske pripisljivosti obstoječih oblikoskladenjskih kategorij korpusnim besedilom .
V-5 Prav tako niso natančneje analizirani vzorci , vsebujoči oznako za nelematizirano besedo , saj v prvi vrsti zahtevajo analizo s stališča razvoja označevalnega sistema in ne vnosa podatkov v leksikalno zbirko .
Velik delež nelematiziranih besed odpade na lastna imena ( Clug pleše ) , tuje besede ( pajek umbrella ) , neustrezno tokenizirane ( 9.30Mož pajek ) oz. zatipkane besede ( manjdlje temeljito ) , neknjižne besede ( strasten snifač ) , dosti pa je tudi zvez oz. besed , ki niso označene , ker v leksikalno zbirko do sedaj še niso bile vključene ( plesati sirtaki ) .
V-6 Za samostalnik pajek so nadalje analizirani še vzorci , ki zaradi nižje pogostnosti na prejšnjih mestih niso prišli v obravnavo .
Za vključitev v leksikalno zbirko relevantne rezultate prinašajo naslednji skladenjski vzorci : Sam + Prid + Sam ( različni tipi zvez glede na ujemanje v sklonu , npr. pajek črna vdova , razvoj rdečega pajka , pajku podoben moški ) , Sam + Prisl + Prid ( pajek grozno nevaren ) , Sam + Sam + Prid ( pajek SIP dvovretenski ) , Sam + Prid + Prid ( pajek dvovretenski italijanski ) , Pred + Sam + Sam ( v obliki pajka ) , Prid + Pred + Sam ( nor na pajke ) , Prisl + Pred + Sam ( skupaj s pajki ) , Prisl + Prisl + Sam ( kar nekaj pajkov ) ter primeri , vsebujoči podredni veznik : Sam + Vd + Sam ( pajek kot sredstvo ) , Prid + Vd + Sam ( strupen kot pajek ) ter Prisl + Vd + Sam1 ( urno kot pajek ) .
VI-1 Označevalne napake se v analiziranih besednih nizih pojavljajo na ravni pripisovanja napačne besedne vrste , najpogosteje označevanje prislova za pridevnik ( pajki mnogo predejo ) ali pridevnika za prislov ( temeljito strokovno pripravo ) ter označevanje funkcijskih besed za samostalnike ( pajek kot po čudežu izgine ) , problem je tudi ločevanje med prislovi in enakopisnimi predlogi ( plesati okoli roke ) .
Obenem so pogosti problemi pripisovanja napačnih oblikoskladenjskih kategorij , npr. pripisovanje napačnega spola ali sklona znotraj besednih zvez itd.
Našteti problemi se zdijo rešljivi z nadgradnjo avtomatskega označevanja z vključitvijo kolokacijskih ter koligacijskih besednozveznih informacij , k izboljšavi kvalitete označevanja bi veliko prispevalo že dodajanje na koligacijskih podatkih temelječih pravil na mesto razdvoumljanja lem oz. oblikoskladenjskih oznak .
Pred razvojem kvalitetnega sistema za avtomatsko prepoznavo lastnih imen v slovenščini se kaže kot možna začasna rešitev vključevanje v zbirko tudi najpogostnejših lastnoimenskih besed oz. zvez .
VI-2.1 V končni obliki so vzorčni tipi s primeri besednih nizov strnjeni v treh tabelah .
Za luščenje relevantnih vzorčnih tipov je 31 , glede na izluščene podatke so razvrščeni na : samostalniške besedne zveze ( 17 ) , pridevniške besedne zveze ( 3 ) , priredne besedne zveze ( 4 ) ter pogojno zanimive zveze ( 7 ) .
Za luščenje nerelevantne vzorčne tipe delimo glede na sestavo na vzorčne tipe : s prislovom na koncu vzorca ali pred samostalnikom , s pridevnikom na koncu vzorca , s predlogom na začetku ali koncu vzorca , s prirednim veznikom med različnima besednima vrstama ali na začetku oz. koncu vzorca ter drugo .
Vzorčni tipi , ki vsebujejo glagol , so predstavljeni ločeno zaradi pričakovane višje stopnje posega na skladenjski nivo jezika , kar posledično pomeni manjšo ustreznost obravnavane metode za pridobivanje teh podatkov .
Delijo se glede na to , kaj se v izluščenem besednem nizu ob glagolu pojavlja : samostalnik oz. samostalniška besedna zveza , prislov oz. prislovna zveza , glagol , predlog oz. predložna zveza ali pridevnik .
V celoti relevantne rezultate prinaša luščenje zvez s samostalniškim določilom .
Tudi luščenje zvez samostalnika in samostalniške besedne zveze prinaša relevantne besedne zveze za vse nove samostalniške leme ( naslov Slovenka leta-39 ) .
Luščenje zvez s predlogom na eni strani omogoča pridobitev zvez , ki so za nadaljnjo obravnavo zanimive ( po rodu Slovenka , v znamenju ovna ) , na drugi strani na seznamu najdemo nekončane zveze ( z ovni pasme ) .
Največji problem metode je dolgotrajnost obdelave podatkov .
Za luščenje podatkov iz celotnega referenčnega korpusa je predvidena izdelava celovitega avtomatiziranega postopka , ki na čim bolj enostaven način združuje vse v pričujoči raziskavi opisane elemente ( iskanje relevantnih besednih zvez , razvrščanje in štetje zvez , ustrezen prikaz besednih zvez ) .
Glede same kvalitete izluščenih podatkov se potrjuje predvidevanje , da so rezultati relevantnejši na mestih , kjer slovenski jezik na skladenjski ravni v okvirih dvodelnih ali tridelnih besednih nizov izkazuje dovoljšno stopnjo regularnosti – metoda je zanesljivejša na ravni luščenja besednih zvez s samostalniškim , pridevniškim ali prislovnim jedrom , na ravni vzorcev , ki vsebujejo glagolsko lemo oz. oblikoskladenjsko oznako , pa je zanesljivost z opisano metodo izluščenih podatkov nižja .
Z upoštevanjem dejstva , da so za nadaljnji razvoj metode potrebne raziskave na večjem naboru gradiva , je možno skleniti , da luščenje besednozveznih podatkov iz oblikoskladenjsko označenega korpusa predstavlja dobro izhodišče za nadgradnjo jezikovnotehnološke leksikalne zbirke za slovenščino .
Rezultati – predvsem na ravni luščenja samostalniških besednih zvez , ki jim je bilo posvečene v raziskavi več pozornosti – so spodbudni , in pričajo o visokem potencialu uporabnosti tovrstnih izluščenih podatkov za različne namene .
I Doktorska raziskava združuje korpusnojezikoslovna izhodišča z metodami obdelave naravnega jezika , pri čemer se glede na cilj – avtomatsko pridobivanje leksikalnih podatkov za nadgradnjo jezikovnotehnološke leksikalne zbirke za slovenščino – uvršča na področje računalniške leksikografije .
I-1 Korpusno jezikoslovje je bolj kot z opozicijskega stališča do drugih jezikoslovnih tokov smiselno opredeljevati ob osredotočanju na izkušnje korpusnojezikoslovne prakse .
Glede na nove jezikoslovne ugotovitve , temelječe na korpusnih podatkih , imamo pojav korpusov v jezikoslovju lahko za resnično metodološko revolucijo , ne glede na to , ali korpus pomeni dopolnilo že obstoječih jezikoslovnih metod ali zaključeni jezikovni vir , ki je ( edini lahko ) osnova za postavitev novih hipotez o jeziku .
Ugotovljeno je bilo tudi , da so vzorci sopojavljanja besed ( slednji torej prinašajo tako tipično skladnjo kot nabor tipičnih leksikalnih kolokatorjev ) neposredno povezani s pomenom , kar pomeni premik raziskovalnega interesa od obravnave pretežno enobesednih iztočnic ter nabora njihovih abstrahiranih pomenov k obravnavi daljših leksikalnih enot , ki so praviloma enopomenske .
Doktorska raziskava raziskuje možnosti luščenja leksikalnih podatkov iz lematiziranega ter oblikoskladenjsko označenega besedilnega korpusa .
Korpusne oznake so razdvoumljene na osnovi skladenjske analize obravnavanega stavka , v korpusu pa so oznake dostopne tako v nerazdvoumljeni kot razdvoumljeni različici .
V sklopu projekta JOS je potekla tudi evalvacija avtomatskega oblikoskladenjskega označevanja slovenščine , pri čemer je bila za Amebisov označevalnik ugotovljena 85,7 % natančnost .
Z vključitvijo statističnega oblikoskladenjskega označevalnika TnT ter statistično primerjavo primerov označevanja enega ter drugega označevalnika , je bila uspešnost označevanja nekoliko izboljšana .
Izboljšave so mogoče tudi z osredotočanjem na napake , ki se pri označevanju tipično pojavljajo , čemur se posveča tudi pričujoča raziskava .
II-2.1 Omenjena metoda je v slovenščini že preizkušena za luščenje samostalniških terminoloških besednih zvez .
Luščenje poteka na osnovi vnaprej pripravljenih skladenjskih vzorcev , ki prinašajo opredelitev sosledja besednih vrst v besedni zvezi ter njenega jedra .
V končnem koraku sledi pretvorba izluščenih nizov v končno besednozvezno obliko na osnovi korpusnih podatkov .
Luščijo se dvodelni ter tridelni besedni nizi , pri čemer je glavno vodilo zaporednost besed ter pogostnost niza v izvornem korpusu .
Pomenska analiza izluščenih podatkov ostaja zunaj interesa raziskave , zato se pri luščenju v isto skupino zajemajo tako proste kot stalne besedne zveze oz. tako neidiomatične kot idiomatične .
Izhodišče za luščenje je enobesedna iztočnica ( samostalniška , pridevniška , glagolska ali prislovna ) , za katero so v prvem koraku identificirane koligacije , nato pa na osnovi vzorcev , s katerimi koligacije opredeljujemo , izluščeni besedni nizi , v katerih iztočnica nastopa .
Besedni nizi so urejeni glede na pogostnost , ki nam pomeni glavni indikator tipičnosti jezikovnih podatkov .
III Luščenje leksikalnih podatkov v pričujoči raziskavi je namenjeno posodobitvi leksikalne zbirke ASES z večbesednimi leksikalnimi enotami .
III-1 Leksikalna podatkovna zbirka prinaša na izbrani način formalizirane ter organizirane leksikalne podatke različnih vrst .
V slovenskem prostoru je poleg jezikovnotehnološke zbirke ASES , s katero se ukvarja pričujoče delo , potrebno omeniti III-1.1 slovarsko leksikalno zbirko , ki nastaja v sklopu projekta Sporazumevanje v slovenskem jeziku , ter III-1.2 gradnjo zbirke ontološkega tipa , tj. slovenskega wordneta .
Osnovni enoti zbirke sta beseda ( prinaša podatke o oblikovnem delu jezikovnega znaka – nabor besednih oblik z oblikoskladenjskimi oznakami ) ter pomen ( prinaša podatke o pomenskem delu jezikovnega znaka , omogoča povezovanje med jeziki , opredeljevanje pomenskih odnosov med besedami ter kvalifikacijo iztočnice glede na rabo ) .
Organizacijsko vlogo imajo iztočnice vrste zveza ( prinašajo besedne zveze z obravnavano besedo ) ter skupina ( združujejo posamezne iztočnice , za katere je predvidena enotna obravnava ) .
Iztočnice vrste glagolska predloga prinašajo podatke o glagolski vezljivosti .
III-2.2 Analiza nabora vnosov v zbirki ASES ( pajek , izdati , moder ) se osredotoča na trenutno stanje zbirke , pri čemer je na številnih mestih razvidna želja po vključevanju kompleksnejših leksikalnih podatkov , npr. stalnih besednih zvez , informacij o glagolski vezljivosti , podatkov o tipičnem in netipičnem sopojavljanju besed ter različnih vrstah odnosov med besedami ( pomenskih , besedotvornih , izvirajočih iz vedenja o svetu ) itd.
Ker je gradnja zbirke usmerjena v sprotno reševanje problemov razvoja posameznih jezikovnih tehnologij ( ročno vnašanje podatkov je izredno zamudno ) , prinašajo določena mesta zbirke popolnejše informacije kot druga .
III-3 Za nadgradnjo zbirke ASES je v pričujočem delu predlagana metoda , osnovana na izrabi korpusnih podatkov .
S tega stališča je ključno ohranjanje informacije o jezikovnem viru v zbirki , kar omogoča ločeno urejanje ter prioretiziranje podatkov za potrebe razvoja specifične jezikovne tehnologije .
III-3.2 Temeljni za vključitev v leksikalno zbirko so koligacijski ter kolokacijski podatki o besedah , kar pomeni premik pozornosti od enobesedne k večbesednih leksikalnim enotam .
III-3.3 Podatke za vključitev v zbirko želimo iz korpusa pridobiti avtomatsko , nato pa jih prav tako avtomatsko organizirati v – kolikor je mogoče – berljivo in pregledno obliko za nadaljnjo ročno obdelavo .
Ker vzorci vsebujejo oblikoskladenjske oznake , ki so glede kategorij ter vrednosti , ki jih opredeljujejo , precej bogate , je v izogib razpršenosti izluščenih podatkov predlagano združevanje vzorcev v vzorčne tipe .
Združevanje vzorcev in posledično uporaba posplošenih kategorij za luščenje se odraža tudi na ravni kompleksnosti obdelave podatkov , kjer postane ključno vprašanje , katere kategorije in vrednosti oznak upoštevati pri luščenju ter končnem prikazu podatkov in katerih ne .
V raziskavi so besedni nizi natančneje analizirani , pri čemer so temeljna raziskovalna vprašanja vezana na relevantnost posamezne vrste izluščenih podatkov za vključitev v leksikalno zbirko .
IV-2 V raziskavi je uporabljen podkorpus korpusa Fida+X , ki je različica korpusa FidaPLUS .
Opisani podkorpus se uporablja kot vir luščenja podatkov , izključno za pripravo izhodiščnih seznamov vzorcev pa se uporablja preoblikovana različica podkorpusa , ki vsebuje le izbrani nabor lem , oblikoskladenjske oznake ter oznake za ločila izvornega korpusnega besedila .
Podatki tako pripravljenega podatkovnega vira so urejeni s pomočjo programa Oxford WordSmith Tools .
S funkcijo Clusters so glede na izbrane parametre izdelani po pogostnosti urejeni seznami skupov , vsebujočih eno od obravnavanih lem ter oblikoskladenjske oznake , ki se ob lemi pojavljajo .
Pregled podatkov izkazuje , da je mogoče relevantnost vzorca za luščenje v določeni meri predvideti tako glede na vsebnost določene vrste oblikoskladenjskih oznak kot tudi glede na njihovo mesto znotraj vzorca .
Posledično so iz nadaljnje analize izločeni vzorci , ki vsebujejo oznake za : pomožno glagolsko obliko , zaimek , okrajšavo , števnik ali členek .
V analizo so zajeti primeri , ki vsebujejo oznake za : veznik , predlog ali polnopomenske besede .
Med nadaljnjo analizo so vzorci združeni v vzorčne tipe na osnovi redukcije oblikoskladenjske oznake na opredelitev besedne vrste .
Glavni cilji analize so : ( I ) iskanje tipičnih napak besednim nizom pripisanih oznak , ( II ) poskus ugotovitve , katere kategorije oznak je pri luščenju ter prikazu podatkov smotrno upoštevati kot razločevalne in katere je smotrno združevati v izogib razprševanju podatkov , ter ( III ) klasifikacija vzorčnih tipov glede na ( ne ) relevantnost za luščenje .
Na ravni luščenja zvez samostalnika ter pridevnika so zanimive samostalniške besedne zveze s pridevnikom , ki se ujema v spolu , sklonu ter številu , ter zveze pridevnika s samostalniškim dopolnilom .
Na ravni luščenja zvez samostalnika ter glagola se izkazuje potreba po urejanju podatkov glede na sklon samostalnika , za primer Glag + pajek npr. Glag + pajek1 ( odpeljati pajek ) , Glag + pajek2 ( bati pajkov ) , Glag + pajek3 ( dati pajkom ) , Glag + pajek4 ( poklicati pajka ) .
V-1.3 Pri luščenju samostalniških besednih zvez s pridevnikom je potrebno ločevanje primerov glede na spol samostalnika : strasten + Samm ( strasten kadilec ) , strastna + Samž ( strastna noč ) , strastno + Sams ( strastno razmerje ) .
V-1.8 Analizirani tridelni vzorčni tipi pa so : Prisl + temeljito + Glag ( skupaj temeljito premešati ) , Glag + temeljito + Glag ( morati temeljito premisliti ) , temeljito + Glag + Sam ( temeljito umiti roke ) , Sam + temeljito + Glag ( kožo temeljito očistiti ) ter Prid + Sam + temeljito ( prihodnje leto temeljito ) .
V-3 V zvezi z luščenjem zvez , ki vsebujejo veznik , so najbolj zanimivi primeri , ki prinašajo dve istovrstni besedni vrsti , povezani s prirednim veznikom : Sam + Vp + pajek ( kača in pajek ) , pajek + Vp + Sam ( pajek in škorpijon ) , Prid + Vp + strasten ( romantičen in strasten ) , strasten + Vp + Prid ( strasten in čustven ) , Glag + Vp + plesati ( peti in plesati ) , plesati + Vp + Glag ( plesati in igrati ) , temeljito + Vp + Prisl ( temeljito in strokovno ) , Prisl + Vp + temeljito ( hitro in temeljito ) .
V-4 Vzorci , ki prinašajo oblikoskladenjsko oznako za pomožni glagol , členek , okrajšavo , zaimek oz. števnik , se izkazujejo za problematične na ravni nezadostnega priklica želenih leksikalnih podatkov z opisano metodo ali na ravni slabe avtomatske pripisljivosti obstoječih oblikoskladenjskih kategorij korpusnim besedilom .
V-5 Prav tako niso natančneje analizirani vzorci , vsebujoči oznako za nelematizirano besedo , saj v prvi vrsti zahtevajo analizo s stališča razvoja označevalnega sistema in ne vnosa podatkov v leksikalno zbirko .
Velik delež nelematiziranih besed odpade na lastna imena ( Clug pleše ) , tuje besede ( pajek umbrella ) , neustrezno tokenizirane ( 9.30Mož pajek ) oz. zatipkane besede ( manjdlje temeljito ) , neknjižne besede ( strasten snifač ) , dosti pa je tudi zvez oz. besed , ki niso označene , ker v leksikalno zbirko do sedaj še niso bile vključene ( plesati sirtaki ) .
Za vključitev v leksikalno zbirko relevantne rezultate prinašajo naslednji skladenjski vzorci : Sam + Prid + Sam ( različni tipi zvez glede na ujemanje v sklonu , npr. pajek črna vdova , razvoj rdečega pajka , pajku podoben moški ) , Sam + Prisl + Prid ( pajek grozno nevaren ) , Sam + Sam + Prid ( pajek SIP dvovretenski ) , Sam + Prid + Prid ( pajek dvovretenski italijanski ) , Pred + Sam + Sam ( v obliki pajka ) , Prid + Pred + Sam ( nor na pajke ) , Prisl + Pred + Sam ( skupaj s pajki ) , Prisl + Prisl + Sam ( kar nekaj pajkov ) ter primeri , vsebujoči podredni veznik : Sam + Vd + Sam ( pajek kot sredstvo ) , Prid + Vd + Sam ( strupen kot pajek ) ter Prisl + Vd + Sam1 ( urno kot pajek ) .
VI-1 Označevalne napake se v analiziranih besednih nizih pojavljajo na ravni pripisovanja napačne besedne vrste , najpogosteje označevanje prislova za pridevnik ( pajki mnogo predejo ) ali pridevnika za prislov ( temeljito strokovno pripravo ) ter označevanje funkcijskih besed za samostalnike ( pajek kot po čudežu izgine ) , problem je tudi ločevanje med prislovi in enakopisnimi predlogi ( plesati okoli roke ) .
Obenem so pogosti problemi pripisovanja napačnih oblikoskladenjskih kategorij , npr. pripisovanje napačnega spola ali sklona znotraj besednih zvez itd.
Posebno pozornost za nadaljnji razvoj avtomatskega označevanja zahteva označevanje členkov , saj gre za kategorijo , ki je na oblikoskladenjski ravni – zaradi enakopisnosti členkov s prislovi ter vezniki – avtomatsko težko pripisljiva .
V zvezi s tem je predlagan premislek o označevanju členkov šele na skladenjskem nivoju označevanja .
VI-2.1 V končni obliki so vzorčni tipi s primeri besednih nizov strnjeni v treh tabelah .
Za luščenje relevantnih vzorčnih tipov je 31 , glede na izluščene podatke so razvrščeni na : samostalniške besedne zveze ( 17 ) , pridevniške besedne zveze ( 3 ) , priredne besedne zveze ( 4 ) ter pogojno zanimive zveze ( 7 ) .
Za luščenje nerelevantne vzorčne tipe delimo glede na sestavo na vzorčne tipe : s prislovom na koncu vzorca ali pred samostalnikom , s pridevnikom na koncu vzorca , s predlogom na začetku ali koncu vzorca , s prirednim veznikom med različnima besednima vrstama ali na začetku oz. koncu vzorca ter drugo .
Delijo se glede na to , kaj se v izluščenem besednem nizu ob glagolu pojavlja : samostalnik oz. samostalniška besedna zveza , prislov oz. prislovna zveza , glagol , predlog oz. predložna zveza ali pridevnik .
V celoti relevantne rezultate prinaša luščenje zvez s samostalniškim določilom .
Na ravni dvodelnih vzorcev se kažeta za bolj tipični kombinacija dveh v sklonu ujemajočih se samostalnikov ( mati Slovenka-26 ) ter zveza z drugim samostalnikom v rodilniku ( Slovenka leta-560 ) .
Tudi luščenje zvez samostalnika in samostalniške besedne zveze prinaša relevantne besedne zveze za vse nove samostalniške leme ( naslov Slovenka leta-39 ) .
Tridelne zveze so v skladu s pričakovanji redkejše , vendar nabor primerov kljub temu kaže na dobre rezultate .
Luščenje zvez s predlogom na eni strani omogoča pridobitev zvez , ki so za nadaljnjo obravnavo zanimive ( po rodu Slovenka , v znamenju ovna ) , na drugi strani na seznamu najdemo nekončane zveze ( z ovni pasme ) .
VII V raziskavi je bila uporabljena in s tem preverjana metoda luščenje leksikalnih podatkov na osnovi dvodelnih ter tridelnih kombinacij obravnavane leme z oblikoskladenjskimi oznakami neposredne besedilne okolice .
Glede same kvalitete izluščenih podatkov se potrjuje predvidevanje , da so rezultati relevantnejši na mestih , kjer slovenski jezik na skladenjski ravni v okvirih dvodelnih ali tridelnih besednih nizov izkazuje dovoljšno stopnjo regularnosti – metoda je zanesljivejša na ravni luščenja besednih zvez s samostalniškim , pridevniškim ali prislovnim jedrom , na ravni vzorcev , ki vsebujejo glagolsko lemo oz. oblikoskladenjsko oznako , pa je zanesljivost z opisano metodo izluščenih podatkov nižja .
Rezultati – predvsem na ravni luščenja samostalniških besednih zvez , ki jim je bilo posvečene v raziskavi več pozornosti – so spodbudni , in pričajo o visokem potencialu uporabnosti tovrstnih izluščenih podatkov za različne namene .
Kageura njihovo definicijo delno popravi , saj pravi , da ne bi smeli uporabiti izraza » beseda « , ampak » leksikalna enota « , saj je » celoten namen terminološkega slovarja ločiti termine od besed « ( Kageura , 2002 , str. 10 ) .
Pričujoče delo sicer nima primarno normativnega namena , vendar pa se zdi smiselno rezultate vsaj delno ovrednotiti tudi z normativnega vidika , in sicer v dveh primerih : kjer se postavlja vprašanje , ali določeni izraz ustreza kriterijem za filmski termin , in v primerih , v katerih korpusna analiza pokaže , da se za isti koncept uporabljajo različni izrazi .
2.1 Status termina Pri prepoznavanju , ali je terminološki kandidat , ki ga identificiramo s pomočjo korpusne analize ( postopek , ki je bil uporabljen v tej raziskavi , je podrobno opisan v 5. poglavju , temelji pa na primerjavi specializiranega korpusa z referenčnim korpusom ) , v resnici termin , je nujno upoštevati osnovne terminološke kriterije .
V tretjo Hoffmannovo kategorijo se uvrščajo besede » splošnega , nestrokovnega jezika « ( Vintar , 2008 , str. 38 ) .
Da je taka kategorizacija problematična , je opozarjala že Pearson ( 1998 , str. 38 ) , saj je razvrščanje izrazov vedno subjektivno .
Pearson zato poudarja nujnost upoštevanja komunikacijske situacije , ki je v našem primeru jasna ( pisec v reviji – bralec revije oziroma strokovnjak – strokovno poučeni / nepoučeni ) , in pa nujnost upoštevanja sobesedila .
Izraze v tretji in četrti skupini sta identificirala kot tehnične termine , in to kljub dejstvu , da v tretji skupini lahko opazimo polisemijo z besedami iz splošnega jezika .
Pomemben podatek , ki nam je lahko v pomoč pri odločanju , ali je posamezen izraz termin ali ne , je tudi njegova besedna vrsta .
Načeloma velja , da so po obliki termini lahko eno - ali večbesedni , po besedni vrsti pa je prototip termina samostalnik ( Cabré in Estopá , 2003 ) .
V primeru filmske stroke je takšna značilnost gotovo dejstvo , da se ta stroka zelo hitro spreminja , hkrati pa se močno prepleta z drugimi strokami , kot sta popkultura ali literarna kritika – podobno sta za odnose z javnostmi ugotavljali Logar in Vintar ( 2008 , str. 7 ) – zato v tem primeru ni smiselno takoj izločiti terminov , ki so znani iz drugih strok .
Prav tako meni , da termini niso dokončni , temveč se njihov pomen spreminja , hkrati pa se razvija tudi razumevanje posameznih terminov .
Menita , da se je v zadnjem času zgodil premik od terminoloških baz podatkov k terminološkim bazam znanja ( to poimenovanje so prvi uporabili Meyer in sod. ( 1992 ) ; sprememba pristopa je prinesla spremembo raziskovanja terminov , ti se po novem raziskujejo v besedilih , na podlagi katerih se odkrivajo semantične povezave med termini ) .
Kerremans in Temmerman ( 2004 ) ta premik imenujeta ontološki .
To seveda posledično pomeni tudi velik vpliv angleščine na kovanje novih slovenskih terminov .
Čeprav namen tega dela ni normativen , se zdi smiselno v primerih sinonimije in polisemije navesti tudi podatke o pogostosti ( ali relativni pogostosti ) pojavitev posameznih variant , na podlagi česar je mogoče sklepati tudi o tem , katera od variant je trenutno bolj uveljavljena .
' , se terminograf / terminolog problema tipično loti tako : ' Glede na ta koncept na tem področju – kateri termin bi ga najustrezneje predstavljal ?
' « A potem Brekke poudari , da se je s pojavom leksikografije za strokovni jezik meja med obema močno zabrisala .
Strinjata se , da so terminografi pri svojem delu veliko prej začeli uporabljati elektronske zbirke podatkov kot leksikografi , a poudarjata , da sta zdaj obe vedi zelo računalniško opremljeni , tako da je tudi ta argument izgubil svoj pomen .
3.2 Korpusno jezikoslovje in korpusni pristop k terminografiji Uveljavljanje korpusnega pristopa pomeni velikansko prelomnico za terminografijo in njene rezultate .
Posameznik kot jezikovni uporabnik ali kot raziskovalec preprosto ne zmore razlikovati med neskončnimi možnostmi jezikovnega vzorčenja , upoštevati vseh psiholoških situacij in govornih položajev .
« Korpusno jezikoslovje pa je omogočilo odmik od subjektivnosti in intuitivnih presoj in uveljavilo možnost preverjanja dejanske rabe terminov : takšna metoda pomeni , da so rezultati terminografskega dela , ki temelji na korpusni analizi , odraz dejanskega stanja v jeziku v okviru danega korpusa .
Čeprav kritiki korpusnega pristopa ( npr. Borsley in Ingham , 2002 , str. 5 ) menijo , da končna interpretacija pomena tudi pri delu s korpusom vendarle temelji na intuiciji , Stubbs ( 2002 , str. 9 ) opozarja , da gre tu za napačno razumevanje uporabe intuicije v korpusnem jezikoslovju .
Stubbs se strinja , da je intuicija ( tudi v smislu semantične presoje ) pri interpretaciji korpusnih podatkov gotovo nujna , vendar hkrati opozarja , da intuicija za ustrezno interpretacijo podatkov ne zadostuje , saj primerjava predkorpusnih slovarjev s tistimi , ki temeljijo na korpusni analizi , kaže , da so mnogi ugledni leksikografi v preteklosti prezrli mnoge semantične vzorce , ki so , potem ko so na voljo korpusni podatki , očitni .
Ob tem pa tudi Meyer ( 2002 , str. 17 ) poudarja , da je korpusni pristop v kombinaciji z razvojem teorij leksikalnega pomena , ki temeljijo na korpusnih podatkih o uporabi besed v resničnih kontekstih , pomenil velik napredek za kvaliteto slovarskih definicij .
Naloga jezikoslovca je , da polje diskurznega univerzuma omeji na obvladljiv korpus ( Teubert , 2007 ) .
In medtem ko za prva dva koraka drži , da morata biti kar najbolj avtomatizirana , je za zadnjega nujen človeški uvid , saj je vsako dejanje interpretacije zavestno dejanje in tako ne podvrženo algoritemskim postopkom .
Metodologija korpusnega jezikoslovja je danes uporabna na vseh ravneh jezikoslovja , od semantike in skladnje do pragmatike in diskurza , prav gotovo pa je najpomembnejša za proučevanje leksemov z vseh vidikov .
Gorjanc , Krek in Gantar ( 2005 , str. 4 ) uporabo korpusnega pristopa kot prednost navajajo npr. pri leksikografskem delu , saj tak pristop omogoči ločevanje med » tipičnim in posebnim oz. individualnim , torej prepoznavanje osrednjih in obrobnih jezikovnih pojavov , hkrati pa tudi opazovanje njihove distribucije glede na posamezni tip besedila « .
Teubert ( 2007 , str. 110 ) poudarja , da je leksikografija » področje , kjer je korpusno jezikoslovje ne samo predstavilo nove metode , ampak dejansko razširilo celotno polje raziskovanja « .
Korpusni pristop omogoča boljše razumevanje pomena , rabe in vezljivosti leksema ; v zvezi s slednjo , Gantar ( 2008 , str. 21 ) meni , da je v vsej razsežnosti » preučevanje besedne povezovalnosti prišlo do izraza z razvojem korpusnega jezikoslovja , kjer je mogoče s statistikami izluščiti to , kar izstopa glede na regularnost vzorca , pomena , besedilnega okolja ipd.
» Mnogi avtorji , kot so Picht , Draskau , Rondeau in Dubuc , so že ugotavljali , da je terminografija vedno uporabljala dokumentacijo kot vir konceptualnih in jezikoslovnih informacij , « pravi Popp ( 2001 , str. 198 ) in nadaljuje , da je bila tako vedno prva terminografova naloga , da zbere referenčni korpus , da se lahko zave vsebine področja , ki ga obravnava .
Korpusno jezikoslovje pa je seveda pomenilo pomemben korak k napredku terminografije .
Če bi to počeli ročno , ne bi mogli pregledati celotne dokumentacije ; - s pomočjo elektronskih orodij lahko poiščemo jezikoslovne vzorce , na primer sintaktične , semantične ali pragmatične ; - s pomočjo računalniško berljivega korpusa lahko terminograf vključi sobesedilo , ki da informacijo o rabi ; kar je posebnega pomena za strokovne pisce in prevajalce ; - če želimo , lahko analizo večkrat ponovimo ; - čeprav računalniški korpus sam po sebi ne zagotovi definicij , pa je v veliko pomoč pri ustvarjanju definicij za posamezne termine , tudi zaradi hiponimije oziroma razmerij med termini ; - prav tako je računalniški korpus veliko lažje deliti z drugimi strokovnjaki .
5 METODOLOGIJA IN ORODJA Ker je analitični postopek obsegal delo z različnimi programskimi orodji , so ta v okviru predstavitve metode dela ( 5.1 ) le omenjena , podrobneje pa so predstavljena v razdelkih 5.2 – 5.4. 5.1 Metodologija Metoda dela je temeljila v prvi vrsti na korpusnem pristopu .
Prva faza je obsegala pripravo korpusa filmskih besedil : vsa besedila , ki sestavljajo korpus , so bila shranjena v formatu XML , korpus je bil nato oblikoslovno označen in lematiziran z orodjem JOS ToTaLe text analyser ( http://nl2.ijs.si/analyze/ ) ( Erjavec in drugi , 2005 ) .
Korpus jos1M , ki je nastal v okviru projekta JOS ( to je Projekt jezikoslovno označevanje slovenskega jezika ; podrobnejši podatki so dostopni na spletni strani projekta http://nl.ijs.si/jos/ ), obsega milijon besed .
Korpus vsebuje vzorčne odstavke iz korpusa FidaPLUS in je označen z razdvoumljenimi in ročno preverjenimi lemami in oblikoskladenjskimi oznakami ( Erjavec in Krek , 2008 ) .
Korpus je označen s programom podjetja Amebis ; oznake so delno ročno preverjene .
Korpus je zgrajen tako , da je reprezentativen in uravnotežen ; kvaliteta besedil , ki jih vsebuje , je posebej preverjena , za vsa besedila so bile pridobljene avtorske pravice .
Korpus je primeren za primerjavo , saj vsebuje splošno besedišče slovenskega jezika , in je prosto dostopen ter brezplačen za nekomercialno uporabo .
3 Seznami so bili nato ročno očiščeni : kriterij za ohranitev izraza na seznamu ključnih besed je bil pomenska povezava s področjem filma ( slednjo je mogoče prepoznati iz sobesedila ) , izločeni so bili vsi izrazi , ki bi se po Hoffmannovem ( 1985 ) modelu uvrstili v tretjo kategorijo splošnega , nestrokovnega jezika ( prim. 2.1 ) .
Tak primer je izraz popkorn : seznam konkordanc ( 1 ) nam pokaže , da je popkorn v Korpusu M+P+V navadno rabljen v smislu oznake za vrsto filma , zato bi ga lahko uvrstili med kandidate za termine : ( 1 ) N Concordance 13 telenovelističnih intrig , šekspirjanskega popkorna , ojdipske vrtoglavice , 14 naivni , neobvezni , veseljaški božični popkorn je produkt h'woodske elite .
In 15 epskem , tipično bruckheimerjevskem popkornu nekatere reči zaman iskali , Primerjavi vsakega posamičnega korpusa z referenčnim korpusom jos1M in primerjavi Korpusa M+P+V z jos1M je sledila primerjava podkorpusov med seboj , in sicer tako z orodjem WordSmith Tools s funkcijo KeyWords kot v obliki ročne primerjave izrazov z iskanjem po konkordančnih nizih.4 Vse primerjave podkorpusov so bile narejene na podlagi lematiziranih seznamov besed , vse konkordance pa identificirane v podkorpusih besednih oblik .
2 Funkcija je bila nastavljena tako , da je bilo število ključnih besed s 500 povečanih na 5000 , število pojavitev pa s 3 zmanjšano na 1 , da bi bilo tako zajeto čim širše število ključnih besed .
3 Zaradi specifične sestave korpusa BootCaT so rezultati primerjave pri tem podkorpusu odstopali od rezultatov pri drugih treh podkorpusih , zato omenjeni podkorpus v glavni del analize ni bil vključen ( prim. 4.2 in 6.2 ) .
Peta faza je obsegala podrobnejšo analizo majhnega števila vzorčnih terminov iz glosarja , pridobljenega v četrti fazi .
Orodje omogoča nadaljnjo obdelavo sobesedila , na primer sopojavnic ( Scott , 2001 ) .
Tudi za seznam ključnih besed , ki ga tako pridobimo , je na voljo še nabor statističnih podatkov , a njegova glavna naloga je , da zajame tematiko teksta ( Scott , 2001 ) .
Program ima še vrsto drugih funkcionalnosti , ki pa za namene te raziskave niso bile uporabljene in zato tu niso opisane .
Zelo koristno za uporabo je dejstvo , da je primerjava tako imenovanih besednih skic dobro povezana s konkordančnikom .
Program s svojo zasnovo omogoča » oblikovanje poljubnih podatkovnih kategorij , obenem pa sugerira njihovo strukturiranje po pojmovnem načinu « ( Vintar , 2008 , str. 114 ) .
Terminološke baze v orodju MultiTerm so lahko eno - , dvo - ali večjezične , v njih je terminologija urejena v terminološke vnose .
Jezikovne tehnologije po eni strani s svojo dejavnostjo krepijo tradicionalne jezikovno načrtovalne procese , torej načrtovanje statusa in korpusa jezika , po drugi strani pa imajo tudi druge učinke , ki jih je treba sociolingvistično šele ovrednotiti , saj niso kar apriori pozitivni .
Tako jezik sam kot njegovi govorci so se gotovo sposobni v veliki meri prilagajati spremembam , toda zmožnost prilagodljivosti ni neomejena , še posebej ne pri vseh pripadnikih neke jezikovne skupnosti .
1.1 Načrtovanje korpusa1 in statusa ( standardnega ) jezika kot glavni jezikovno - Gre za terminološko zadrego , ki jasno kaže , kako so se tako v svetovnem kot v slovenskem merilu jezikovne tehnologije razvijale sorazmerno neodvisno od sociolingvistike .
Pričujoči članek te terminološke težave ne misli razreševati , zaradi preprečevanja morebitnega nesporazuma pa bo namesto sociolingvističnega korpusa jezika rabljena zveza podoba jezika , ki je sicer terminološko manj primerna .
načrtovalni dejavnosti naj bi zagotavljala skupnosti učinkovito sporazumevalno ( in socializacijsko ) orodje , šolski sistem kot izvajalec jezikovnega načrtovanja pa naj bi poskrbel za levji delež usvajanja standardnega jezika med predstavniki neke jezikovne skupnosti .
Skupnost naj bi z ustreznim šolskim sistemom in z drugimi oblikami izobraževanja poskrbela tudi za to , da njeni predstavniki pridobijo ustrezno zmožnost v tujih jezikih in da lahko pridejo do jezikovne zmožnosti tudi tisti , ki jim jezik skupnosti ni prvi jezik .
Tu se jezikovne tehnologije pravzaprav ne bi smele ločevati od katerekoli druge jezikovnonačrtovalne dejavnosti , bodisi na področju poučevanja jezika bodisi kodificiranja bodisi zagotavljanja jezikovnega statusa .
Jezikovne tehnologije se praviloma zmeraj usmerijo v delujoče aplikacije na tem ali onem sporazumevalnem oziroma podatkovnem področju , tudi če si delujočo aplikacijo določijo kot zelo oddaljeni cilj , za katerega je potrebno prej doseči še veliko vmesnih , etapnih ciljev .
1.3 Toda razvoj jezikovnih tehnologij postavlja jezikovno načrtovanje oziroma kar jezikovno skupnost pred dilemo : ali je temeljna naloga tehnološko podprtega jezikovnega načrtovanja ohranjati status in podobo nekega jezika / jezikov in v skladu s tem učinkovito servisirati jezikovno zmožnost pripadnikov skupnosti ( oziroma tistih , ki se hočejo tega jezika naučiti kot tujega jezika ) ali pa je naloga načrtovanja ustvarjati učinkovitejše , hitrejše , cenejše , dostopnejše , privlačnejše načine sporazumevanja in iskanja informacij v družbi , pri čemer lahko z upravičenostjo pričakujemo daljnosežnejše spremembe in premike v jezikovni skupnosti , tako glede statusne porazporeditve jezikov kot glede jezikovne zmožnosti posameznikov .
1.3.1 Jezikovne tehnologije že danes omogočajo kompenzacijo določenih delov jezikovne zmožnosti , zlasti pri tehnološko najbolj podprtih jezikih in skupnostih .
Če vam računalniški program preverja črkovanje in slovnično podobo vašega pisnega besedila , če mu lahko narekujete in vam ne le zapisuje po nareku , ampak zraven še stilno prilagaja besedilo , če vam lahko samodejno povzema daljša besedila , če vam lahko prevede besedilo v drug ali vaš jezik , in če vse to dela sorazmerno uspešno ( s pragmatičnega stališča , torej s stališča sporazumevalne učinkovitosti ) , potem se vsa ta opravila zlagoma umikajo iz vaše dejavne jezikovne zmožnosti .
Seveda na ta način človek nekam orwellovsko postaja odvisen od informacijske tehnologije .
@ e v najosnovnejših računalniških programih , ki jih pravzaprav niti ne moremo imeti za prave jezikovnotehnološke aplikacije , se kažejo nekateri jezikovnonačrtovalni paradoksi .
Tvorec besedila lahko hkrati uporablja tudi najpopularnejšo in najbolj razširjeno jezikovnotehnološko aplikacijo , črkovalnik , ki mu Že pri jezikovnem načrtovanju se v slovenskem prostoru kažejo težave , kako najprimerneje zagotoviti sinergijsko obliko stroke in mehanizmov družbenega uveljavljanja ( Stabej 2001a ) , ki bi imela dovolj informacij in vpliva za učinkovito delovanje , hkrati pa ohranjala visoko stopnjo demokratičnosti .
ustanovitev posebnega ministrstva za informacijsko družbo l. 2001. 3 V prejšnjih različicah Worda , ko je bila stopnja prilagojenosti jezikom še bistveno manjša in je bila tudi večina slovenskih računalnikov opremljena z angleško različico programa , je program vztrajno nadomeščal niz teh ( oblika kazalnega zaimka ) s the - snovalci so pač domnevali , da se angleško pišočim pri zelo pogostem določnem členu marsikdaj zatipka ; kdor ni znal popravka zbrisati iz množice predvidenih popravkov , je moral vsakokrat posebej razveljavljati spremembo .
O jezikoslovnih , jezikovnonačrtovalnih in spoznavnih razsežnostih te aplikacije bomo spregovorili nekoliko kasneje ; na tem mestu se moramo ob navedenem primeru vprašati , kako tako avtomatizirano popravljanje vpliva na podobo jezika .
1.3.1.2 Urejevalniki besedila s črkovalniki vred ( in z računalniki , v katerih sploh delujejo ) so seveda plačljiva dobrina ; kdor jih ima ter zanje plača , ima v družbi očitno tudi sporazumevalno prednost , saj lahko z njimi tvori jezikovno ustrezna besedila , tudi če niso v vsem plod njegove jezikovne zmožnosti .
Po drugi strani pa bi tako avtomatizirane aplikacije v široki rabi na dolgi rok takorekoč same sebi spodrezale krila ( zlasti ker lahko upravičeno dvomimo , da je zgornja teza o povratnem vplivu besedil na jezikovno zmožnost splošno veljavna ) .
1.4 Črkovalniki in drugi popravljalniki pisnih besedil so seveda le manjši del področja jezikovnih tehnologij ; nekaj zgornjih premislekov o njihovi morebitni vlogi in posledicah za jezikovno skupnost je le poskus intonacije prepotrebne raz - Pri snovanju jezikovnih virov , zlasti besedilnih korpusov , je tudi zato zelo pomembna avtentičnost zajetega jezikovnega oziroma besedilnega gradiva .
2 V nadaljevanju se bomo dotaknili vprašanj , kakšno povezavo ima področje jezikovnih tehnologij s statusom slovenščine in kakšno je razmerje med jezikoslovno in tehnološko platjo na tem strokovnem področju .
V šestem členu društvenega statuta < http://nl.ijs.si/sdjt/sdjtstatut.html > se društvo neposredno dotakne družbenih razsežnosti jezika : Zavedajoč se pomena , ki ga v sodobnem svetu ima jezik ne le kot sredstvo komunikacije , ampak tudi kot določevalec političnih , ekonomskih in drugih možnosti posamezne nacionalne skupnosti ter njene identitete , razpoznavnosti in kulturne samostojnosti v vse tesnejših mednarodnih integracijah se Društvo za jezikovne tehnologije vključuje tudi v oblikovanje pobud in v prizadevanja , ki bodo pomagala slovenski jezik uveljaviti v teh pogledih .
Seveda ostaja odprto vprašanje , s kakšnimi konkretnimi koraki projekti , dejavnostmi in aplikacijami skuša področje jezikovnih tehnologij ( ki je tudi v Slovenskem prostoru zelo heterogeno , najverjetneje celo močno divergentno ) zgornje poslanstvo res opravljati ; nekaj odgovorov bomo skicirali v nadaljevanju .
Še prej pa si kot neke vrste ekskurz postavimo podvprašanje : se jezikovne tehnologije tudi dejavno zavedajo simbolne vloge jezika oziroma izbire jezika za sporazumevanje ?
2.1.1 Velik del jezikovnih tehnologij se razvija z domnevo , da je večjezičnost evropskega , pa tudi svetovnega prostora vrednota in jo je zato treba ohranjati .
Iz te domneve črpajo svojo moralno in finančno moč zlasti jezikovne tehnologije v tistih jezikovnih skupnostih , v katerih se jezik v javnem mnenju tesno povezuje s samim bistvom oziroma identiteto skupnosti.Po drugi strani je področje jezikovnih tehnologij ( z gradnjo elektronskih jezikovnih virov vred ) zelo močno vpeto v mednarodno raziskovalno prizorišče .
Podobno kot na drugih znanstvenih področjih pa se začne postavljati vprašanje izbire in vloge jezi - Pri tem moralnem in finančnem viru imajo jezikovne tehnologije hudo konkurenco , ki se iz virov bogato napaja že zelo dolgo časa .
To vprašanje je povezano z dejavno , ne le načelno vlogo uveljavljanja simbolne vloge prvega jezika , torej ne le z dejavnostjo za jezik , temveč tudi z jezikovnim obnašanjem .
Tu se je slovenskim jezikovnim tehnologijam že marsikdaj zataknilo , čeprav kaže , da se z razvojem in široko interdisciplinarizacijo strokovnega področja zadeve obračajo na bolje .
Precej jezika v jezikovnih tehnologijah je skritega ; tako v korpusih kot v aplikacijah je velik del ukaznega in označevalnega jezika , ki je potreben za ustrezno delovanje , viden in dostopen samo snovalcem , kvečjemu še zelo zahtevnim in usposobljenim uporabnikom , drugi uporabniki pa se z njim nikoli ne srečajo .
Za tovrstna sporočila torej jezikovna izbira ni zelo pomembna ; precejkrat niti ni prav zares možna , saj so sporočila integralni del standardiziranega računalniškega jezika ali označevalnega sistema .
Vse druge razsežnosti sporočil in sporazumevanja pa so že simbolno občutljivejše , kar navsezadnje velja tudi za strokovno komunikacijo .
Primer problematične izbire jezika sporočanja lahko opazimo v zborniku 3. konference Jezikovne tehnologije ( Erjavec in Gros 2002 ; http://nl.ijs.si / isjt02 / zbornik ) .
Zbornik je že na naslovni strani slovensko-angleško dvojezičen , kar nosi močno sporočilo ( v smislu internacionalizacije nacionalnega in obratno ) .
Vsebina uvodnika namreč v angleščini govori o tem , da pomemben napredek v zadnjih dveh letih na tem področju ( jezikovnih tehnologij , op. M.S. ) ne dokazuje le , da globalizacijski procesi slovenščine ne izrivajo , temveč tudi to , da se lahko slovenščina kosa z razvitimi svetovnimi jeziki .
Dogodki , kot je ta , so bistveni za ohranitev slovenskega jezika in hkrati slovenske kulture.6 Podobno jezikovno podobo najdemo tudi na nekaterih spletnih straneh z jezikovnotehnološkimi vsebinami ( npr. http://nl.ijs.si , t. i. Natural Language Server Odseka za inteligentne sisteme Instituta Jožef Stefan , krovna stran z informacijami o slovenskih jezikovnih tehnologijah , ki je vsa samo v angleščini ) .
2.1.2 Jezikovne tehnologije ponujajo močna orodja , uporabna za podporo pri načrtovanju statusa slovenščine .
Zadnje desetletje je prineslo precej novosti na mednarodnem jezikovnem prizorišču , vsaj na deklarativni ravni se človeštvo zavezuje ohranjati jezikovno raznolikost , še posebej to velja za evropsko situacijo.7 Načrtovanje statusa slovenščine se bo moralo iz doslejšnje pretežno znotrajdržavne nacionalne razsežnosti ( z delnim upoštevanjem slovenskih jezikovnih skupnosti v sosednjih državah ) podati na zahtevno in negotovo , a nujno pot v mednarodno razsežnost .
Globalnost slovenščine lahko definiramo na naslednja dva načina : to lahko pomeni , da bodo slovensko govorečim ( v veliki večini bodo to najverjetneje še naprej predvsem tisti , ki jim je slovenščina materni ali prvi jezik ) sporočila v slovenščini na voljo po vsem svetu tako v realni kot virtualni obliki .
Razvoj svetovnih komunikacij v tej smeri ima zaenkrat kar premočnega protiigralca v izjemno hitri rasti angleščine kot globalnega jezika .
Možnost globalnega komuniciranja servisnega tipa v lastnem jeziku je zelo privlačna , saj je komunikacija v lastnem jeziku najbolj učinkovita , zato najudobnejša ( Gorjanc 2002 ) , posledično tudi emocionalno najugodnejša .
Po drugi strani globalno komuniciranje v globalnem jeziku pomeni veliko poenostavitev načrtovanja sporočil in s tem tudi pocenitev njihove izvedbe .
Seveda v tem primeru ostaja odprto vprašanje učinkovitosti takih sporočil , saj bolj specializirane ali zapletene informacije v globalnem jeziku ostajajo razumljive le ožjemu krogu ljudi .
Gotovo globalnosti slovenščine ne moremo zagotavljati predvsem tako , da bi se je ( na ) učilo zelo veliko ljudi po svetu , čeprav je treba tudi za to razvijati potrebno naj 7 Evropska komisija npr. podpira mnogojezičnost Evrope , v kateri bo vsak državljan lahko uporabljal svoj prvi jezik , hkrati pa naj bi do določene stopnje znal vsaj še dva evropska jezika ( Andersen 1998 , Stabej 2001 ) .
Pri razširjanju slovenščine po svetu namreč ne moremo množično računati na tradicionalne kanale razširjanja jezika ne pri pridobivanju jezikovne zmožnosti v slovenščini kot tujem jeziku , kjer je tak kanal šolska mreža , ne pri ponujanju sporazumevalnih dejanj v slovenščini , kjer so taki kanali izvozna kulturna dejanja in artefakti ( filmi , gledališke predstave , knjige ) , izvozni kapital ( pri čemer je vprašanje , koliko so Slovenci navajeni s kapitalom na kakršenkoli način izvažati tudi svoj jezik in kulturo ) in podobno .
Zato se je gotovo smiselno usmeriti na druge možne načine širjenja jezika , pri čemer seveda vsa tovrstna infrastruktura vse bolj temelji na informacijski tehnologiji , temeljito podprti z jezikovnimi tehnologijami ( spletno učenje slovenščine na daljavo , obsežni jezikovni viri in priročniki , prevajalniki ipd. ) .
Seveda pa je jezik tako zelo blizu bistva človeka kot družbenega bitja , da se v zvezi z njim dogaja zelo veliko družbenih procesov , ki se jezikoslovja sploh ne dotaknejo ali pa iz njega izhajajo le zelo posredno .
Kot smo že omenili , zlasti pri skupnostih , ki jim je jezik vsaj deklarativno vrednota najvišjega ranga , marsikdo ( posamezniki , stroke , ustanove , politika , društva , gospodarske družbe ) svoje delovanje povezuje ( ali utemeljuje ) s tem , da je koristno tudi za jezik , in se s tem skuša uvrstiti na visoko mesto družbene vrednostne lestvice .
V akademskem raziskovalnem okviru so taka spodbuda pogosto mednarodni projekti , kamor se zaradi zagotavljanja konkurenčnosti , financiranja in prestiža vključujejo slovenske raziskovalne skupine , pri čemer pa marsikdaj ne sodelujejo pri oblikovanju izhodiščnih in ciljnih projektnih parametrov .
Mednarodno dogajanje na strokovnem področju je lahko spodbuda tudi izven konkretnih projektnih okvirov , enostavno po sklepanju to se dela tudi zunaj .
Tretji vir nekomercialnih jezikovnotehnoloških dejavnosti pa je privzeto ( ali 8 Navedimo primer , ki dobro ponazarja tipiko jezikovnotehnološke argumentacije lastne dejavnosti : Tuje lastništvo jezikovne infrastrukture // v splošnem pomeni odvisnost v tistem segmentu življenja vsakega naroda , ki najbolj direktno posega v njegovo samobitnost .
privzgojeno ) , toda nereflektirano mnenje raziskovalcev , kaj naj bi bilo za slovenščino dobro .
Ostale spodbude lahko iščemo pri specializiranih nekomercialnih interesentih za jezikovnotehnološke aplikacije ( npr. zveza slepih in slabovidnih ) in pri tistih komercialnih naročnikih jezikovnotehnoloških storitev , ki teh storitev v glavnem ( še ) ne potrebujejo za svojo glavno tržno dejavnost , temveč bolj kot dokaz svoje tehnološke naprednosti in ozaveščenosti , s čimer še ne zaslužijo , pridobivajo si pa dodaten ugled in zaupanje pri potrošnikih in poslovnih partnerjih .
Kot že rečeno , na slovenski jezikovnotehnološki sceni manjka realna ocena potreb jezikovne skupnosti ali njenih sestavnih skupin , za katero pa je najbrž seveda prav tako v dialogu z mednarodnimi teoretičnimi in aplikativnimi spoznanji še vedno najbolj usposobljena stroka prav jezikoslovje .
Seveda ne katerokoli in kakršno koli .
Gorjanc ( 2002 ) o tem pravi : Zaradi samozadostnosti // dela slovenistike , v primerih njenega medstrokovnega sodelovanja pa tudi njena apriorna vzvišena pozicija , povezana predvsem z normativističnimi težnjami in ekskluzivističnim razsojevanjem v zvezi z jezikom , je privedla tudi do situacije , ko so aktivnosti v zvezi z jezikovnimi tehnologijami za slovenščino , ki so postale v slovenskem prostoru dinamično raziskovalno področje v začetku devetdesetih , potekale popolnoma mimo slovenistike , del njenega interesnega področja pa so postale šele proti koncu zadnjega desetletja 20. stoletja .
Slovenistično jezikoslovje se le težko odloča za sodelovanje , saj zelo dolgo obdobje za svojo dejavnost pravzaprav niti ni imelo nobenega naročnika , ki bi terjal konkretne rezultate , ampak je dobilo splošno družbeno koncesijo , bianko menico za opisovanje in predpisovanje slovenskega jezika .
2.3 Tema razmerja med jezikovnimi vsebinami , njihovo tehnološko obdelavo in učinkom jezikovnotehnoloških aplikacij je zapletena , hkrati pa zelo relevantna ; zdi se , da bo morala postati stalna spremljajoča disciplina jezikovnega načrtovanja in jezikovnih tehnologij .
V bistvu tega razmerja pa je neko drugo razmerje , in sicer tisto med slovenskimi jezikovnimi tehnologijami in slovenskim jezikoslovjem .
Toda slovenska izkušnja v marsičem pripoveduje , da se z določenimi jezikovnotehnološkimi aplikacijami šele pokaže , kako nezadostno , neprimerno in neučinkovito je opisan slovenski jezik .
Nadaljnje vprašanje je namreč , kdo lahko presodi , ali je opis jezika za jezikovnotehnološke aplikacije zadosten , primeren in učinkovit .
Kriterij presojanja je seveda lahko delovanje aplikacije in zadovoljnost naročnikov / uporabnikov .
Toda marsikatera aplikacija lahko tehnično odlično deluje na podlagi jezikoslovno spornih podatkov ali pa na podlagi neustrezne rabe jezikoslovno korektnih podatkov , kar pomeni , da je z jezikovnonačrtovalnega stališča neustrezna , lahko celo škodljiva .
Drugi tip nesporazuma pri uporabi črkovalnika je možnost napačnega tvorčevega sklepanja , da je z njegovim besedilom normativno vse v redu , če mu črkovalnik ne predlaga nobenih sprememb .
Tretji tip nesporazuma je , če črkovalnik označuje besede , ki jih pač nima v svojem seznamu , tvorec pa to interpretira kot oznako neknjižnosti , neprimernosti besede.9 Nesporazumom se je mogoče ogniti na več načinov ; prvi korak pri tem je vendarle , da se možnosti nesporazuma snovalci aplikacij dovolj natančno zavedajo in se jim poskušajo čimbolj izogniti .
Navežimo se na primer iz 1.3.1.1 , besedo željen , ki jo Word avtomatično popravlja v želen ; vgrajeni črkovalnik pa v nasprotju s tem besede željen ne označuje za neustrezno .
Toda vse te možnosti lahko izrabi samo informiran in samozavesten uporabnik .
V globini gre zelo verjetno za razliko , ki jo lahko pripišemo različnemu prevladujočemu spoznavnemu postopku tistih strok , ki se prepletajo na področju jezikovnih tehnologij .
Za jezikovnotehnološke aplikacije , ki naj bodo učinkovite in ustrezne s stališča jezikovnega načrtovanja ( pa tudi s stališča informacijskega in družbenega načrtovanja ) , je gotovo potrebna nenehna vzporedna in ne zaporedna sinergija jezikoslovja ( v njegovi humanistični in družboslovni razsežnosti ) ter informacijskih ved ( v teoretični in aplikativni razsežnosti ) .
Shematizirano lahko nastajanje jezikovnotehnoloških aplikacij prikažemo s tremi ponazoritvami : a ) Jezikoslovje pripravi aplikacijo , informacijska tehnologija le ponudi svoj servis za končno podobo izdelka : jezikoslovje informacijska tehnologija jezikovna aplikacija b ) Aplikativni izdelek zasnuje informacijska tehnologija , lahko tudi na podlagi neprilagojenega jezikovnega opisa , jezikoslovje pa se vključi le v zadnji kontrolni fazi izdelave , najpogosteje brez možnosti temeljitega posega v aplikacijo : c ) Jezikovno aplikacijo zasnujeta in gradita v medsebojnem sodelovanju tako informatika kot jezikoslovje : informacijska tehnologija jezikoslovje jezikoslovje informacijske tehnologije jezikovna aplikacija jezikovna aplikacija Edine resnično prave rezultate , tako glede aplikativne kot tudi spoznavne vrednosti , lahko da le proces c. 3 Zdi se , da so jezikovne tehnologije v Sloveniji preživele otroške bolezni , saj je področje ponudilo skupnosti že veliko rezultatov .
Če si malce bolj kritično ogledamo razvoj področja jezikovnih tehnologij v slovenskem prostoru , moramo uporabiti manj prijazno biološko metaforo : marsikateri zarodek se ni razvil , ker se ni mogel prilagoditi okolju , in je odmrl .
Iz doslejšnjih izkušenj se da razbrati , da se je za prve relevantne rezultate morala zgoditi sinteza računalniških oziroma informacijskih tehnologij in jezikoslovja .
To ne pomeni le izdelave kompleksnejših , na korpusnih virih temelječih in kognitivno relevantnih jezikoslovnih opisov .
Potrebna je tudi poglobitev sociolingvističnega razumevanja procesov v skupnosti , z definiranjem , empiričnim ugotavljanjem pa tudi usmerjanjem jezikovnih potreb in navad govorcev , nenavsezadnje pa je potrebno tudi dopolnjevanje in prilagajanje z jezikom in sporazumevanjem povezanih vsebin v izobraževalnih procesih .
Le na ta način bo mogoče polno in smiselno izrabiti navdušujoče možnosti , ki jih ponuja razvoj informacijskih tehnologij tudi na področju jezika in sporazumevanja .
KORPUSI IN JEZIKOSLOVJE S prihodom korpusov je v jezikoslovju na voljo več kakovostnih podatkov o jezikovni realnosti kot kadarkoli prej .
Ob uporabniško usmerjenih gradivnih opisih jezika in njegovega delovanja pa se oblikujejo tudi novi strokovni diskurzi , ki se sopostavljajo tradicionalnim ; v današnji družbi znanja se namreč načini ustvarjanja in prenašanja znanja ter intelektualnih veščin v njej oblikujejo v demokratičnem dialogu med ustvarjalci vedenja in tistimi , ki to vedenje potrebujejo .
Spodbujen s predhodnimi študijami , ki so pokazale , da se je računalniško jezikoslovje v devetdesetih letih popolnoma usmerilo v korpusne podatke , je naredil raziskavo o razmerju med empirično in intuitivno zasnovanimi jezikoslovnimi študijami .
Čeprav se s časovne distance prelom v generativno slovnico ne zdi tako usoden , saj je tudi drugemu delu jezikoslovja bilo omogočeno razvijanje svojih jezikoslovnih konceptov , pa se je diskusija med predstavniki jezikoslovja , ki temelji na delu z obsežnim načrtno zbranim gradivom , in predstavniki generativne slovnice zaostrila v šestdesetih letih 20. stoletja do te mere , da sta področji živeli ločeno in oblikovali tudi dva popolnoma ločena strokovna diskurza .
Jezikoslovje , ki je utemeljevalo principe korpusnega jezikoslovja v šestdesetih letih , se je tako v veliki meri organiziralo prav kot jezikoslovni pristop v opoziciji do jezikoslovnega dela Chomskega ne le glede gradiva kot osnove jezikovega opisa , ampak tudi v razmerju do uporabne vrednosti raziskovalnih rezultatov korpusni opisi so se od samega začetka usmerjali v področje uporabnosti in se potrjevali v stiku z uporabniki jezikovnega znanja in ne le znotraj ozko zaprtega jezikoslovnega kroga .
Delo s korpusom res temelji na veliki količini zbranih besedil , ki so podlaga za jezikovno analizo , a se ne odreka intuiciji .
Šestdeseta leta tudi v slovenskem prostoru izpostavijo jezikovne opise , temelječe na načrtno zbranem gradivu , in v slovarskih priročnikih zavrnejo možnost opisa jezikovnih elementov , ki nimajo podlage v jezikovni realnosti : Slovenci smo navajeni , morda bolj kakor drugi narodi , da zaradi narodnostne ogroženosti zelo pazimo , da se v knjižni jezik ne vnaša preveč tujega , oz. tega , česar ne izkazuje literarna tradicija .
Hoteli smo prikazati knjižni jezik v najširšem pomenu besede : živ , poln , z dubletami , notranjimi nasprotji , vzporednimi istočasnimi normami , jezik sredi zagona in razvoja .
Slovar bo registriral dejansko stanje v jeziku , torej osnove njegove norme , s kvalifikatorji in kvalifikatorskimi pojasnili pa bodo vstavljene v ta okvir posebnosti , dvojnosti in izjeme ( Suhadolnik 1968 : 45 ) .
Jezikovni podatki v korpusu ne morejo biti smiselno interpretirani brez interpretativnih zmožnosti raziskovalcev .
Pri uporabi korpusnih podatkov je dragocena tako intuicija govorcev določenega jezika kot jezikoslovcev .
Kritika Chomskega , da korpusni podatki niso jezikoslovno relevantni , saj se nekateri stavki ne bodo pojavili , ker so povsem očitni , drugi , ker so nepravilni , spet nekateri , ker so nevljudni ( Kennedy 1998 : 23 ) , kažejo na dva v osnovi res drugačna pristopa v jezikoslovju , povezana v veliki meri z normativnim vrednotenjem jezika , pa tudi vprašanjem stilistične vrednosti besedil oz. dobrega / slabega jezika .
Seveda pa vprašanje o kakovosti jezikovnih podatkov ostaja eno ključnih vprašanj korpusnega jezikoslovja : Vprašanje referenčnosti / korpusa / je v svoji globalni razsežnosti pomembno jezikovnofilozofsko vprašanje , povezano z začetkom in razvojem sodobnega korpusnega jezikoslovja .
Prav zanašanje generativne slovnice na intuicijo rojenega govorca je spodbudilo razvoj korpusnega jezikoslovja , v veliki večini vezanega na angleški jezik , v okoljih , kjer je imela anglistika močno tradicijo , a govorcem ni bila prvi jezik , npr. Belgija , Nizozemska , Norveška , Švedska .
Korpusno gradivo je v teh okoljih pomenilo pravi razcvet anglistike in v veliki meri pripomoglo k še večji metodološki raznolikosti angleškega jezikoslovja .
Posebej je ta segment podatkov o jezikovni rabi relevanten za študije učenja jezika in raziskave nekega jezika kot tujega jezika .
V angleškem okolju je bilo to področje tudi zaradi razvoja v pomembno industrijsko panogo , ki je spodbujala in financirala tovrstne raziskave , že zgodaj izjemno razvit samostojni segment uporabnega jezikoslovja .
Predvsem sociolingvistične raziskave in utemeljitev funkcijskega pristopa v jezikoslovju so pokazale na nevzdržnost takega izhodišča .
Ali , kot je bilo tudi v našem prostoru že opozorjeno : / O / staja dejstvo , da tudi referenčni korpus ne more zajeti vseh jezikovnih možnosti , kar bi lahko zajeli v naslednjo formulacijo : v jeziku je lahko tudi tisto , česar v korpusu ni .
Analize korpusov angleščine so pokazale na vrsto jezikovnih rab , ki bi jih z vidika jezikovne intuicije označili kot nemogoče , z normativnega vidika pa označili kot napake .
Zgodilo se je , da je bila posamezna beseda ali zveza že dolgo v splošni rabi , pa je ta ali oni odkril , da gre za kalk ali vsaj paralelo v tujem jeziku , in že je bila obsojena kot germanizem ali romanizem ali izposojenka .
Strah pred resničnimi in navideznimi napakami je bil tako velik , da tudi v primeru , če je bila beseda z mnogimi nespornimi dokazi rehabilitirana , nikoli več ni bila nevtralna .
Zato pri nas pravzaprav ni bilo človeka , ki bi o sebi lahko rekel , da obvlada slovenski knjižni jezik .
Vse to bo , upamo , pripomoglo k prenehanju preganjanja izoliranih jezikovnih napak in utrdilo zavest o normalnosti govorjenega oz. pisanega jezika povprečnega izobraženca , istočasno pa poglobilo resnično , široko in poglobljeno zanimanje za slovensko besedo v celoti ( Suhadolnik 1968 : 5 , 6 ) .
Nenazadnje je navezava procesiranja naravnih jezikov kot potencialnega prihodnjega sistema analize in sinteze besedil naravnih jezikov na realne korpusne podatke nujna , zato da bi v končni fazi tovrstne aplikacije res lahko učinkovito delovale .
Jezikovni opisi , ki so za jezikovne tehnologije funkcionalni , namreč vsebujejo veliko več podatkov o besedilnem okolju , ki jih omogočajo le obsežni korpusi ( Taubert 1995 : 109110 ) .
Pri omenjenih procesih gre za značilnost sodobne družbe , načine ustvarjanja in prenašanja znanja ter intelektualnih veščin v njej .
Na ravni visokošolskega prenosa znanja lahko opazujemo paralelne procese kot pri raziskovalni dejavnosti ; strnjeno gre za sledeče : Tradicionalni diskurzi v visokem šolstvu so čisto samoumevno izhajali iz perspektive tistega , ki vrednost ustvarja in posreduje , poenostavljeno rečeno : iz perspektive profesorja .
Tej Arhimedovi točki akademskega znanja so bile podrejene vse študijske strukture .
Tako je v diskusiji na konferenci Corpus linguistics velik del publike na plenarnem zasedanju zavrnil relevantnost revije Language kot indikatorja stanja na področju celotnega jezikoslovja .
Ob tem in prav zato si ne dovoljuje sodbe z apriorno vzvišene pozicije enega pogleda , ki svoj tip znanstvenega diskurza ocenjuje kot edino relevantnega , relevantnost dosega znotraj ozkega strokovnega kroga , vse ostale pa hierarhično vrednoti ali jih celo izključuje s področja pravega znanstvenega diskurza .
2 Korpusi v jezikoslovju in korpusno jezikoslovje Delo v zvezi s korpusi je danes povezano z različnimi aktivnostmi ; oblikovanje kakovostnih korpusov pa zahteva učinkovito sodelovanje jezikoslovcev z raziskovalci s področja družboslovnih ved in računalništva , predvsem tistega dela , ki se ukvarja z naravnimi jeziki .
Pri načelih gradnje korpusov je najprej potrebno pripraviti okvirni načrt gradnje , ki zajema serijo premislekov in odločitev .
V največji meri so jezikoslovni premisleki v zvezi s korpusom vezani na prvo alinejo , torej specifikacijo korpusa in njegovo obliko .
Temeljni premislek je vezan na tip korpusa , ki ga želimo graditi ; ta za seboj potegne odločitve v zvezi z jezikom besedil ( enojezični ali večjezični korpus ) , s časovnim zajemanjem besedil ( sinhroni ali diahroni korpus ) , premislek o zajemu besedil glede na prenosnik ( pisni ali govorni korpus ) itd.
Prav to so parametri , ki dvigajo kakovost jezikovnim podatkom v korpusu , saj je razumljivo , da korpus , ki zajema samo leposlovna besedila ali samo besedila enega časopisa , ne more biti kakovosten vir za npr. referenčne jezikovne priročnike .
Da bi z gradnjo sploh lahko začeli , je potrebna tehnična podpora , ki mora od samega začetka slediti zahtevam tako glede strojne kot programske opreme ter biti sposobna oblikovati orodja za procesiranje zbranega gradiva .
Čeprav se razmislek v zvezi s postopki zajemanja besedil zdi dokaj trivialen , pa so se korpusi prav na tem nivoju velikokrat znašli pred nerešljivo težavo : kako sploh organizirati zbiranje besedil ter prepričati besedilodajalce , da za namene korpusa svoja besedila odstopijo .
Prav izkušnje pri starejših korpusih , ki vprašanja avtorskih pravic niso zadovoljivo rešile , tako da danes tovrstnih podatkov sploh ni mogoče uporabljati , so oblikovalce kasnejših korpusov prisilile v razmislek ter iskanje ustreznih rešitev .
Pri končni obliki korpusa je z vseh vidikov smiselno spremljati odzive na rešitve , jih sistematično obdelati ter razmisleke v zvezi z gradnjo revidirati ter tako pri njegovi nadgradnji dosegati večjo kakovost ter prijaznost do uporabnikov .
Šele korpusni podatki nam lahko dajo pravo sliko o jezikovnem razvoju in težnjah jezikovnega razvoja ; podatki , zbrani po npr. listkovni metodi za starejše slovarje , za tovrstne raziskave zaradi omejenosti informacij niso primerni ( Čermk 2002 : 268 ) .
2.2 Razvoj orodij za delo s korpusom je vezan predvsem na področje računalniškega jezikoslovja ( Kennedy 1998 : 9 ) , danes pa nekateri široko dostopni programi omogočajo tudi računalniško manj izobraženim uporabnikom korpusa samostojen razvoj manj kompliciranih programskih orodij , ki si jih za svoje specifične potrebe lahko oblikujemo sami ; ob tem se vzporedno razvijajo tudi postopki in metode korpusne analize .
1998 : 5 ) ; šele pojav računalnikov in oblikovanje metod zbiranja ter gradnje korpusov je omogočilo pridobiti veliko količino relevantnih aktualnih jezikovnih podatkov za jezikoslovne študije ; sodobni jezikovni opisi tako lahko temeljijo na empirični analizi zares velike količine avtentičnih besedil ( Biber et .
Gre za značilnosti jezikovnih podatkov , ki jih starejšim zbirkam jezikovnih podatkov ne moremo pripisati ( Čermk 2002 : 265 ) .
Uporaba računalnika z avtomatičnimi in interaktivnimi tehnikami omogoča analizo velike količine jezikovnih podatkov .
Z razvojem tehnik korpusne analize količina jezikovnih podatkov ne predstavlja ovire , pač pa prav obratno , z večjo količino podatkov lahko pridemo do novih informacij ; za določene postopke korpusne analize pa so sploh primerni samo izjemno veliki korpusi .
Z uporabo tako kvantitativnih kot kvalitativnih analiz se lahko gradijo novi jezikovni opisi ; kvantitativne analize se pojavljajo v izhodišču vsakega korpusnega pristopa , pomenijo relevanten jezikovni podatek , ki pa ga je seveda potrebno še interpretirati in razložiti ( Biber et .
Prav zaradi zavedanja obremenjenosti analiz z obstoječimi jezikoslovnimi koncepti se danes raje govori o korpusu kot viru za preverjanje hipotez na eni in viru za gradnjo hipotez na drugi strani .
1 V slovenskem prostoru je prvi pravi korpusni slovarski projekt priprava velikega angleško-slovenskega slovarja Oxford-DZS ; o njem natančneje poročamo v tej številki .
3 Sklep Korpusi so v jezikoslovno delo vnesli besedilno gradivo , ki je količinsko in kakovostno absolutno preseglo predračunalniške gradivne zbirke , hkrati pa pokazalo na njihove omejitve in izpostavilo pomanjkljivosti .
Korpusno jezikoslovje je ob metodologiji gradnje korpusov oblikovalo tudi metodologijo korpusne analize in novih jezikovnih opisov ; ti v svojem izhodišču prisegajo na jezikovno realnost in tudi ob nepričakovanih rezultatih ne podlegajo intuiciji , vključujejo več podatkov o tipičnem besedilnem okolju ter sploh podatkov o komunikacijski realnosti .
Delo s korpusi je usmerjeno izrazito uporabniško , v svoj strokovni diskurz korpusno jezikoslovje tako izrazito vključuje dialog z uporabniki vedenja , ki se ustvarja in posreduje .
JEZIKOVNI PRIROČNIKI IN NOVI MEDIJI Članek opisuje slovenske jezikovne priročnike in druge vire podatkov o slovenskem jeziku , ki se nahajajo v neknjižnem digitalnem okolju .
Začenja s slovarji kot klasičnimi priročniki v različnih računalniških oblikah , preko leksikonov besednih oblik in jezikovnih korpusov kot novih oblik jezikovnih priročnikov do popolnoma računalniških jezikovnih orodij , ki jih najdemo v urejevalnikih besedil , avtomatskih prevajalnih sistemov in govornih tehnologij .
1 Uvod V naslovu razprave nastopata dve kategoriji , ki ju je nujno natančneje opredeliti , vendar izključno za namene te razprave brez zahtev po terminološki občeveljavnosti .
Z izrazom jezikovni priročnik bomo opredelili vse priročniške vire , ki so namenjeni javnosti kot vir podatkov o sodobnem slovenskem jeziku ali pri katerih nastopa slovenščina v paru s tujim jezikom .
Jezikovni priročniki oz. informacije o slovenščini v njih nastopajo v digitalizirani obliki , bodisi na računalniku ali v drugih digitalnih okoljih .
Uporabnost slovarja v elektronski obliki je ob ustrezni programski opremi , ki omogoča kompleksna iskanja po celotni slovarski bazi podatkov , vključno z vsebino gesel ali njegovimi posamičnimi deli , neprimerno večja kot v knjižni obliki .
2.1 Enojezični slovarji Splošnih enojezičnih slovarjev v knjižni obliki , ki opisujejo sodobni slovenski jezik , ni veliko .
S to oznako bi lahko opredelili tri slovarje , med katerimi sta dva izšla v zadnjem času : Slovar slovenskega knjižnega jezika , ki je izšel v petih zvezkih od l. 1970 do 1991 ( SSKJ ) , 1 Slovenski pravopis iz leta 2001 ( SP 2001 ) in Veliki slovar tujk iz leta 2002 ( VST 2002 ) .
V času pisanja te razprave od prvih treh v elektronski obliki obstaja le Slovar slovenskega knjižnega jezika ( skupaj z BSJ in OSSJ ) , ki se je v elektronski obliki prvič pojavil leta 1997 na enajstih disketah v programu ASP za operacijski sistem DOS in Windows podjetja Amebis .
Trenutno je SSKJ dostopen v paketu s programom ASP32 , ki deluje v obliki enouporabniške ali mrežne aplikacije v različicah operacijskega sistema Windows za osebne računalnike in strežnike .
Druga elektronska oblika istega slovarja je javnosti dostopna v programu NEVA , razvitem v Laboratoriju za korpus slovenskega jezika Znanstvenoraziskovalnega centra SAZU , ki od leta 2000 omogoča dostop do SSKJ preko svetovnega spleta na spletnih straneh ZRC SAZU < http://bos.zrc-sazu.si/sskj.html >.
Dostop do slovarja SSKJ preko svetovnega spleta je brezplačen.2 1 Bibliografski podatki vseh jezikovnih virov ter spletnih strani , ki so omenjeni v razpravi , se nahajajo na koncu med navedeno literaturo .
ali niz znakov (*) ter operatorji IN , ALI , NE , BLIZU ter t. i. NOTRANJI NE in NOTRANJI IN , ki delujeta znotraj posameznega niza iskanih znakov .
Iščemo lahko po vseh posebnih znakih , ki se nahajajo v SSKJ , od naglasnih znamenj za izgovarjavo besede do grških črk in matematičnih znakov .
Od nadomestnih znakov pozna znak za niz ( * ) , operatorji pa so naslednji : : vsebuje !=
Pri iskalnem pogoju / ge = peta / nam tako iskalnik izpiše le geslo peta , pri iskanju / peta / pa dobimo začetek spiska 385 gesel , kjer se v vsebini gesla nahaja ta niz črk .
Iskalnik pokaže ob vsakem iskalnem pogoju , koliko je bilo vseh zadetkov , izpis gesel pa je omejen na 25. 2.2 Dvojezični slovarji Dvojezični slovarji so bili poleg črkovalnikov , ki jih obravnavamo kasneje , pravzaprav prvi jezikovni priročniki , ki so ob koncu 80-ih in na začetku 90-ih let še v piratski varianti obstajali tudi v obliki računalniške aplikacije , takrat za operacijski sistem DOS , kar govori o veliki potrebi po njih .
Veliki nemško-slovenski slovar ( Debenjak 1992 ) je bil leta 1994 prvi dvojezični slovar , ki je bil legalno dostopen v računalniški obliki v opisanem programu ASP za DOS in Windows ( Romih in dr. 2002b ) .
Temu so sledili drugi dvojezični slovarji in trenutno so v tej obliki dostopni vsi obsežnejši in novejši dvojezični slovarji založbe DZS , osemjezični Evropski slovar Založbe Mladinska knjiga ( ES 1995 ) ter nekaj manjših avtorskih slovarjev , ki jih je izdalo podjetje Amebis http://www.amebis.si/izdelki/elektronsko_zaloznistvo.htm >.
Kot rahlo kaotično globalno omrežje nudi brezplačen dostop do množice slovarjev zelo različnega izvora , navadno pa so to zbirke , ki so rezultat akademskih projektov , posameznih navdušencev , starejše verzije sodobnih slovarjev in podobno .
V večini primerov je tem slovarjem skupna bodisi nedokončanost , zastarelost , relativno majhen obseg ali fragmentarnost , vendar imajo seveda tudi takšni viri svojo vrednost .
Odlična knjižnica povezav do spletnih virov za slovenski jezik ( in za tuje jezike ) se nahaja na strani < http://www.sigov.si/slovar.htm >.
Večji splošni dvojezični slovarji s slovenščino kot izhodiščnim ali ciljnim jezikov v plačljivi obliki za zdaj še niso dostopni na svetovnem spletu .
Od slovarjev , ki obstajajo tudi v knjižni obliki in na CD-ROM-u , velja morda izpostaviti osemjezični Evropski slovar , ki za vsak jezik po navedbah založbe ponuja 10.000 iztočnic4 in je na voljo brezplačno na spletnem portalu http://www.pinkponk.com >, preko povezave Vedež .
Zanimivo je , da prav dvojezični slovarji navadno prednjačijo pri prehodu v druge tehnologije , saj jih najdemo v okoljih , ki presegajo aplikacije za osebne računalnike ali internet .
Slovenščina je v njem zastopana v dvojezičnem angleško-slovenskem paru .
Čeprav na začetku morda potrebujemo nekaj časa , da se privadimo na pravilno lego pri potegu naprave preko besedila .
Na tej točki je elektronska različica torej prehitela bolj logično predhodno knjižno obliko , saj podjetje Microsoft v svojem programskem paketu Microsoft Office od lokalizirane slovenske različice MS Office 97 ( zadnja je slovenski MS Office XP ) , ponuja tudi orodje , ki uporabniku predlaga sopomenke .
Slovar , ki ga orodje uporablja , je razmeroma nedodelan , saj je za besedo fant denimo zmožen sproducirati sopomenski niz mladenič , deček , fantič , pob , moški , mož , mladinec , paglavec , ki seveda niso sopomenke v strogem pomenu , temveč označujejo osebe moškega spola različnih starosti z različnimi pomeni na različnih stilnih ravninah .
2.4 Terminološki enojezični ali dvojezični slovarji Kot smo že omenili , so terminološki slovarji takorekoč idealni priročnik za medij , kakršen je internet .
Pri slovenskem prevodu gre za izjemno redek pomen angleške iztočnice , ki označuje zdravnike v padalskih enotah ameriške vojske ali civilne zdravnike , ki se v primeru potrebe s padalom spustijo na nedostopna območja .
Iskalnik omogoča tudi iskanje z nadomestnimi znaki , vendar je pri kompleksnejših iskanjih bolje prebrati navodila , kajti namesto ( morda običajnejšega ) vprašaja kot znaka za poljubno črko uporabljamo piko , vprašaj pa pomeni , da se predhodna črka v besedi lahko pojavi ali ne , znak $ na koncu besede pomeni , da se zveza konča na to besedo , v običajnejših vlogah pa lahko uporabimo oglate in zavite oklepaje in druge funkcije t. i. regularnih izrazov .
so s seboj prinesli tudi potrebo in možnost organiziranja t. i. leksikonov besednih oblik pri pregibnih besednih vrstah , ki so nujni zlasti pri jezikih z velikim številom oblikoslovnih paradigem .
Te informacije so bile do računalniške dobe v precej skrčeni obliki navadno dostopne v zaglavju enojezičnih ( ali dvojezičnih ) slovarjev kot denimo v SSKJ rodilniška oblika ednine pri samostalnikih in pridevnikih ali prvoosebna oblika ednine pri glagolih , z občasnimi opozorili pri izjemah , ter v oblikoslovnih razdelkih slovnic slovenskega jezika .
Računalniški medij je za tovrstni priročnik precej bolj primeren kot knjižna oblika , najbrž celo edini možni , kajti izpisovanje vseh oblik določene besede je prostorsko precej potratno , predvidljivost oblik glede na paradigmo , v katero spada , pa vendarle sorazmerno velika .
Zanimivo je , da je logika iskanja pri obeh ravno obratna .
Z orodjem , ki ga najdemo na spletnih straneh ZRC SAZU < http://bos.zrc-sazu.si >, povezava Določanje osnovnih besednih oblik , lahko ugotavljamo osnovno obliko določene besede .
Orodje , ki ga lahko najdemo na spletnih straneh podjetja Amebis < http://www.amebis.si/sklanjanje >, omogoča obratno pot od osnovne oblike iskane besede do razpredelnice z vsemi njenimi oblikami , iščemo pa lahko le samostalnike in pridevnike .
Iskanje po posameznih oblikah besede ne da rezultata , iskalnik prepoznava le obliko za imenovalnik ednine .
S tem orodjem lahko iščemo po osnovnih in po vseh ostalih oblikah , v kombinaciji s slovnično kategorijo , ki je pripisana osnovni obliki.6 Leksikoni besednih oblik so izjemno pomembni za vse mogoče aplikacije na področju jezikovnih tehnologij in obe omenjeni aplikaciji sta pravzaprav stranski produkt drugih orodij ( Romih in dr. 2002a ) , pri katerih nujno potrebujemo informacijo o osnovni obliki besede in njeni oblikoslovni paradigmi črkovalnika in oblikoslovno-skladenjskega označevalnika , potrebnega pri t. i. lematizaciji velikih zbirk besedil .
Računalniški korpusi so nekako pred dvajsetimi leti nadomestili zbirke listkovnega gradiva , na podlagi katerih so v predračunalniški dobi navadno nastajali slovarji med njimi tudi SSKJ v zadnjih desetih letih pa je napredek tehnologije z množično uporabo interneta in skokovitim porastom računalniških kapacitet omogočil , da je korpus skupaj s konkordančnikom postal standardni vir podatkov o jeziku ali kar jezikovni priročnik , na katerega se lahko obrnemo ob jezikovnih zadregah ( Hirci 1998 , Pisanski 1998 ) .
V nadaljevanju opisujemo korpuse slovenskega jezika , ki so javno dostopni na svetovnem spletu .
Korpus je v sorazmerno visokem odstotku lematiziran ( besedam je pripisana osnovna oblika , po kateri je mogoče iskati ) , vendar so v primeru , ko je pri eni od oblik besede možnih več osnovnih oblik , pripisane vse možne oblike .
Korpus ni lematiziran , kematiziran je le njegov enomilijonski del , dostopen preko povezave Oblikoslovno označena besedila .
Konkordančnik omogoča tudi iskanje po listi vseh besed , ki se pojavljajo v korpusu , pri čemer je mogoče iskati po frekvenci besed , dolžini glede na število črk ter z operatorjema IN ter IN NE. Tretji korpus , dostopen preko interneta , je kronološko prvi , vendar bistveno manjši enomilijonski korpus , brezplačno dostopen na straneh Instituta Jožef Stefan < http : / / nl2.ijs.si / / index-mono.html > .
Uporabnost korpusa je glede na količino besedil v primerjavi z gornjima dvema sorazmerno manjša , funkcija in vrednost korpusa pa je pravzaprav v pionirski vlogi , ki je postavila osnove za oblikovanje drugih korpusov , predvsem korpusa FIDA , glede formata , lematizacije in drugih postopkov gradnje korpusov .
Število izpisov je omejeno na 500 konkordančnih vrstic .
Prednosti korpusa Nova beseda sta predvsem prosta dostopnost ter sprotno dopolnjevanje , slabosti pa izrazita neuravnoteženost in nelematiziranost .
Dokončno sklepanje o jeziku večinoma na podlagi vsebine enega časopisa je jezikoslovno sporno in lahko privede do napačnih jezikovnih odločitev .
Korpus je relativno dobro uravnotežen , kaže torej sorazmerno ustrezno podobo slovenskega pisnega jezika , in je tudi lematiziran .
Kot problem pa se kaže nerazdvoumljenost lem pri oblikah , kjer jih je možnih več pri obliki levi je navedena lema lev kot žival , levi kot pridevnik ter glagol leviti ter seveda plačljivi dostop .
Vzporedni korpusi so oz. bi lahko bili izjemno pomembni viri predvsem za prevajalce , slovaropisce in za celo področje jezikovnih tehnologij , ki se ukvarja z avtomatskimi prevajalnimi sistemi .
4.3 Korpusi strokovnih besedil V okviru Sektorja za prevajanje Službe Vlade RS za evropske zadeve je od leta 2002 preko interneta prosto dostopen tudi celoten približno 1,8 milijonski korpus prevodov zakonodaje Evropske unije < http://www.sigov.si/evrokorpus >.
Korpus uporablja isto iskalno orodje v tem primeru v funkciji konkordančnika kot slovar Evroterm , z istimi iskalnimi možnostmi .
Vpisani izraz je lahko v angleščini ali slovenščini , izpis pa je lahko enojezičen ali dvojezičen in od te izbire je tudi odvisno ali ga uporabljamo kot enojezični ali vzporedni korpus .
Iskanje lahko omejimo tudi na različna specializirana področja zakonodaje : finance , kmetijstvo , okolje , primarno zakonodajo , promet ter zunanjo in varnostno politiko .
Spletni konkordančnik deluje sorazmerno počasi , tako da je za enostavna iskanja pravzaprav lažje uporabljati kar splošne iskalnike , konkordančnik pa za raziskovanje okolice iskane besede .
Pri pridobivanju jezikoslovnih podatkov s svetovnega spleta se znajdemo tudi pred znanimi zadregami : besede niso lematizirane , še vedno se pojavljajo težave s krilatimi znaki , predvsem pa je medij preveč kaotičen za dokončna sklepanja o frekvenci , rabi ali pomenu besede ali besedne zveze .
smo omenjali že večkrat ( Košir in dr. 1998 , Romih 1998a ) .
En ( večinski ) del slovensko pišočih uporablja črkovalnik , ki je del Microsoftovega pisarniškega paketa slovenske različice urejevalnika besedil Word 7 do MS Office XP in je delo podjetja Amebis .
Različne generacije istega črkovalnika lahko najdemo tudi v drugih programih , denimo v malce starejšem urejevalniku besedil WordStar , WordPerfectu ( do različice Corel WordPerfect 8 ) , programu za razpoznavo črk OmniPage in drugih programih , lahko pa ga uporabljamo tudi kot samostojno aplikacijo MikroBesAna za operacijski sistem Windows in DOS < http://www.amebis.si/izdelki/crkovalnik >.
Drugi del slovensko pišoče publike uporablja prosto dostopne črkovalnike aspell , ispell in myspell , ki so del projekta GNUsl < http://nl.ijs.si/GNUsl >.
Aplikacija je nastala v okviru skupine za slovenjenje pri društvu Lugos , v sodelovanju s podjetjem Amebis , in uporablja približno enak slovar kot črkovalnik za MS Office ( Košir 2002 ) .
Delilnik podjetja Amebis je podobno kot črkovalnik že vgrajen v pisarniški paket Microsoft Office od slovenske različice urejevalnika besedil Word 7 naprej .
5.3 Preverjanje slovnice Poleg črkovalnika in delilnika besed , najstarejših standardnih komponent v urejevalnikih besedil , v njih najdemo tudi orodja za preverjanje skladenjske pravilnosti stavkov .
5.4 Seznami samopopravkov Seznam samopopravkov je orodje , ki je na voljo v paketu Microsoft Office kot integrirana aplikacija in ni na voljo denimo kot vgradni modul .
Gre za spisek pogostih tipkarskih napak , ki jih delajo uporabniki pri uporabi urejevalnika besedil .
To področje , ki je takorekoč sveti gral računalniškega jezikoslovja in je od petdesetih let prejšnjega stoletja doživljalo vzpone in padce , je v zadnjih letih doživelo nesluten razmah in pri velikih jezikih rezultati že zdavnaj ne zbujajo več le prizanesljivih nasmeškov .
Zavedati se je treba , da avtomatski prevajalniki verjetno nikoli ne bodo v celoti nadomestili prevajalcev , lahko pa spravijo dokument ali npr. spletno stran v obliko , ko uporabnik brez znanja izhodiščnega jezika razbere osnovno sporočilo ali temo .
Za slovenščino kot jezik z majhnim številom govorcev , razmeroma šibko finančno podporo in sorazmerno majhnim številom ljudi , ki se ukvarjajo z jezikovnimi tehnologijami , je sedanje stanje na tem področju dokaj logično .
Za zgodnjo razvojno fazo prevajalnik sorazmerno dobro opravi svoje delo , prevod omogoča osnovno razumevanje originalnega besedila , do ravni , na kateri se nahajajo najboljši prevajalniki med angleščino , francoščino , nemščino itd.
Testno prevajanje preko spleta < http://www.tranexp.com:2000 >, če je na podlagi tega mogoče o čem sklepati , pokaže , da slovenščina v tem prevajalnem sistemu še ni dosegla ravni , ki bi omogočala razumevanje besedila brez znanja izhodiščnega jezika , preizkusiti pa je bilo mogoče le angleškoslovenski in slovensko-angleški par.7 7 Morda le hudomušni utrinek pri prevajanju osnovne strani portala www.CNN.com je prevajalni sistem rubriko Politics prevedel s politična mahinacija .
Najbolj tipični produkt na tem področju , ki bi še vključeval osnovno temo , bi bil fond zapisov izgovarjave besed v slovenskem jeziku , ki bi bil na voljo javnosti , tipično v obliki elektronskega slovarja z izgovarjavo besed , vendar takega priročnika za slovenščino ni .
Še najbliže temu je morda zbirka izgovarjav pogostih izrazov , številk in podobnih uporabnih zvez , namenjenih turistom na spletni strani < http://www.ff.uni-lj.si/sft > v okviru spletnega priročnika Slovenščina za popotnike .
8 Prihodnost Prihodnost slovenskih računalniških jezikovnih priročnikov najbrž lahko vidimo v sedanjem stanju podobnih virov pri drugih jezikih z večjimi finančnimi in človeškimi možnostmi .
Povprečni uporabnik računalnika in drugih tehnologij , ki je govorec jezika , kjer poteka najbolj dinamičen razvoj , lahko tvori besedila v maternem jeziku s pripomočki , ki mu svetujejo glede besedišča in struktur , ki jih uporablja , sorazmerno uspešno lahko razume besedila v tujem jeziku brez poznavanja jezika in lahko govorno komunicira z računalnikom ter drugimi digitalnimi napravami .
Prva zadrega torej nastane že na ravni , ki še ni računalniška , je pa nujen pogoj za kvalitetne jezikovne pripomočke v digitalnem mediju spodobna dokumentiranost stanja sodobnega jezika v obliki , ki je primerna za pre-nos v digitalne aplikacije , od vseh vrst slovarjev do uspešnega oblikoslovno-skladenjskega označevalnika .
Drug pomemben element je racionalnost pri uporabi razpoložljivih finančnih sredstev in človeških potencialov , kajti jasno je , da če ena in ista računalniška aplikacija lahko v primerljivih ekonomskih okoliščinah zadovolji potrebe petdeset milijonov uporabnikov ali dveh milijonov , bodo prvi imeli petindvajsetkrat več možnosti , da do nje pridejo .
GOVORNE TEHNOLOGIJE : PRIDOBIVANJE IN PREGLED GOVORNIH ZBIRK ZA SLOVENSKI JEZIK Govorne zbirke so nepogrešljive pri raziskovalnem delu na področju tehnologij govorjenega jezika .
Vsebujejo predvsem računalniško berljive posnetke govora .
Priloženi podatki so opisi govornih dejavnikov , dejavnikov govorcev ter zapisi in označitve posnetega govora .
Pogosto govorni zbirki priložimo še navodila za uporabo ter rezultate izbranih analiz govornih posnetkov .
Članek opisuje osnovne gradnike govornih zbirk ter postopek zasnove , snemanja , segmentacije , označevanja in analize govornih zbirk .
V sklepnem delu se nahaja pregled govornih zbirk za slovenski jezik .
1 Uvod Govorne tehnologije , predvsem to velja za sintezo in prepoznavanje govora , nezadržno prodirajo v naše življenje .
Na tržišču se je v zadnjih letih pojavilo kar nekaj solidnih sintetizatorjev in prepoznavalnikov govora , nekateri med njimi podpirajo tudi slovenski jezik .
Razvoj in raziskave s področja govornih tehnologij za slovenski jezik se izvajajo na Fakulteti za elektrotehniko Univerze v Ljubljani ( Luks ) , na Fakulteti za elektrotehniko , računalništvo in informatiko na Univerzi v Mariboru ( FERI ) , na Fakulteti za računalništvo in informatiko Univerze v Ljubljani ( FRI ) , na Inštitutu Jožef Stefan ( IJS ) , na Naravnoslovno tehniški fakulteti Univerze v Ljubljani ter v podjetjih Masterpoint d. o. o. ( Masterpoint ) , Hermes Softlab d. d. ( HSL ) in Alpineon razvoj in raziskave d. o. o. ( Alpineon ) .
Razvoj govornih tehnologij , predvsem sinteze in prepoznavanja govora , ni pogojen le s tehnologijo izgovora , temveč tudi z izvajanjem osnovnih raziskav govora in jezika .
Govorne zbirke so nepogrešljive pri raziskovalnem delu na področju govornih tehnologij .
Govorne zbirke vsebujejo predvsem računalniško berljive posnetke govora ( Gibbon 1997 ; Dobrišek 2001 ) .
Zasnovo govorne zbirke lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v nadaljevanju članka .
Prvi korak predstavlja izbira besedila , potrebnega za snemanje govorne zbirke , oz. izbira govorne situacije v primeru , ko gre za snemanje spontanega govora .
Sledi zadnji korak , ki ga sestavljajo segmentacija , označevanje in analiza govornega gradiva .
Članek sklenemo s pregledom govornih zbirk za slovenski jezik , zbranih v laboratorijih , ki na našem prostoru delujejo na področju govornih tehnologij .
Pogosto so priložena še navodila za uporabo zbirke ter rezultati izbranih analiz govornih posnetkov ( Fourcin 1989 ) .
Govorne zbirke navadno vsebujejo samo nekatere od naštetih podatkov .
Govorni posnetki pa so vedno opremljeni vsaj z nekaterimi dodatnimi podatki .
Kateri od naštetih podatkov so dejansko vključeni v zbirko , je odvisno od namena uporabe zbirke ( Dobrišek 2001 ) .
Tako govorne posnetke , ki niso računalniško berljivi ali niso opremljeni s primernimi dodatnimi podatki , ne štejemo za prave govorne zbirke .
Po drugi strani se govorne zbirke razlikujejo tudi od besedilnih zbirk , ki jih pridobivamo za potrebe jezikovnega modeliranja , jezikoslovnih analiz naravnega jezika in za gradnjo samodejnih sistemov za prevajanje .
V te zbirke so vključena večinoma le pisana besedila , pridobljena iz različnih virov ( romani , časopisi , gledališka dela ipd. ) .
Največji tovrstni zbirki za slovenski jezik sta FIDA in Nova beseda .
Uporabljajo pa se tudi vizualni in rentgenski posnetki govoril .
V zadnjem času se pogosto analizirajo tudi posnetki biomedicinskih signalov , ki se pojavljajo v govorilih in tudi v človeških možganih .
Večina raziskav na področju govornih tehnologij se še vedno nanaša predvsem na obdelavo posnetkov govornih zvočnih signalov , pridobljenih s pomočjo mikrofona ( Dobrišek 2001 ) .
Tem signalom pravimo govorni signali .
Vsekakor imajo tudi preostali omenjeni govorni posnetki poseben pomen , saj njihova analiza omogoča bistveno širši vpogled v delovanje človeških govoril in s tem tudi globlje razumevanje človeškega govora .
4 Opisi govornih posnetkov Govorna zbirka vsebuje tudi opise različnih dejavnikov , ki se nanašajo na govorne posnetke .
Govorci Najbolj preproste govorne zbirke so zbirke z nekaj deset govorci ( Gibbon 1997 ) .
Na primer : gradnjo kakovostnih in od govorcev neodvisnih sistemov za prepoznavanje govora omogočajo govorne zbirke z nekaj sto govorci .
Pri razvoju sistemov za samodejno tvorjenje govora pa se uporabljajo zbirke z le nekaj govorci .
Dejavniki govorcev Pri izbiri govorcev moramo upoštevati nekatere značilnosti , ki so povezane z njihovim govorom .
Prehodne značilnosti so morebitne psihološke in fiziološke motnje ( npr. počutje , bolezen , psihično stanje ) .
Govorni dejavniki Med govorne dejavnike uvrščamo prozodijske značilnosti govora , ki se nanašajo na trenutno razpoloženje govorca ter njegov pristop k tvorjenju govornih posnetkov ( Dobrišek 2001 ) .
Govorni signal vsebuje več informacij , kot jih je v besedilu ( npr. čustva , odnos govorca do teme in podobno ) .
Preučuje zvočno podobo jezika od glasu , naglasa v besedi do celotnega besedila .
Govorimo lahko o fonetiki glasov , prozodike , zlogov , morfemov , besednih zvez , stavkov , povedi in besedila .
Oznakovni del govorne zbirke , predvsem njen grafemski prepis , je pogosto zapisan po priporočilih TEI P3 ( Text Encoding Initiative ) .
Za označevanje prozodijskih fenomenov v govorjenem jeziku se uporabljajo posebne prozodijske anotacije ( Mihelič 2000 ; Stergar 2000 ) .
Fonetični zapis govora uporablja osnovne enote , ki so povzete iz glasoslovja .
Tak simbolni zapis govora vsebuje več informacije od grafemskega .
Različna izbira anotacijskih enot predstavlja tudi različne možnosti zapisa ali prepisa govorjenega jezika .
Poleg običajnega grafemskega zapisa tako govorimo o fonemskem , ožjem in širšem fonetičnem ter akustičnofonetičnem zapisu .
Fonetični prepisi besed so zapisani s simboli slovenske MRPA abecede .
Govorne posnetke zato pogosto označujemo tako , da jih razčlenimo na zaporedje odsekov , ki predstavljajo fone fonemov ali alofonov .
Pri označevanju prav tako govorimo o fonemski , širši in ožji fonetični , akustičnofonetični ter prozodijski označitvi govornih posnetkov , podobno kot pri simbolnih zapisih in prepisih govora .
4.3 Opisi analiz in navodila Govornim zbirkam pogosto priložimo raznovrstne rezultate analiz zbirke .
Govorno zbirko opremimo še z navodili za uporabo .
To so podatki o strukturi zbirke , datotečnem sistemu in formatih računalniških zapisov .
Za tehniško modeliranje govora je pomembno navesti še podatek o tem , kateri del zbirke je namenjen učnemu postopku , s katerim določamo parametre modelov akustičnih govornih enot , in kateri del zbirke je namenjen preizkušanju in vrednotenju teh modelov .
5 Postopek pridobivanja govorne zbirke Postopek pridobivanja govorne zbirke lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v tem poglavju .
Prvi korak predstavlja izbira besedila , potrebnega za snemanje govorne zbirke , oz. izbira govorne situacije v primeru , ko gre za snemanje spontanega govora .
5.1 Načrtovanje vsebine zbirke Pri načrtovanju govornih zbirk velja , da naj bodo čim bolj obsežne .
Žal si neomejeno velikih količin podatkov v zbirki ne moremo privoščiti .
Tovrstne ustreznosti govorne zbirke ne moremo zagotoviti z zgolj inženirskim pristopom , ker pri tem potrebujemo tudi jezikoslovno in glasoslovno poznavanje govorjenega jezika ( Dobrišek 2001 ) .
Za govorjeni slovenski jezik nekaj tovrstnega znanja že obstaja , vendar menimo , da bo to znanje dovolj dobro šele , ko bodo izvedene obsežnejše statistične analize slovenskega govorjenega jezika .
5.2 Pridobivanje govornih posnetkov Danes sta v veljavi dva načina pridobivanja govornih posnetkov .
Izbira besedila je ključnega pomena in je odvisna od namena zbirke .
Tudi za pridobivanje govornih posnetkov moramo izvesti načrtovanje in pripravo snemalnega okolja .
Primernost snemalnega okolja določa namen zbirke , vendar pogosto vseh zahtev zaradi pomanjkanja sredstev ne moremo povsem izpolniti .
Med snemanjem govora je priporočljivo preverjati , ali govorec ustrezno izgovarja predloženo besedilo .
Posnetke govora shranjujemo v digitalni obliki na trajne računalniške pomnilniške medije .
Za pridobivanje govornih posnetkov uporabljamo posebne programske uporabniške vmesnike , ki besedilo , ki ga mora izgovoriti govorec , izpišejo na zaslon računalnika ter preverjajo skladnost posnetega govora s predloženim besedilom ( Dobrišek 2001 ) .
Če želimo prouč evati lastnosti spontanega pogovora oz. razliko med govorjenimi in pisanimi besedili , snemanje opravimo v drugačnih razmerah kot denimo snemanje govorne zbirke za difonski sintetizator govora .
Po drugi strani pa želimo pri snemanju pogovorov oz. prostega govora zajeti čimveč prvin , po katerih se tak govor razlikuje od branega besedila , kot so značilni prekrivajoči se govor , ponavljanje , premori , zapolnjevalci vrzeli , samokorekture in napačni starti ( Kranjc 1998 ; Stabej 2000 ) .
5.3 Segmentacija in označevanje govorne zbirke Posneti govorni signal predstavlja le en del govorne zbirke .
Za raziskave na področju govornih tehnologij moramo zbirko navadno opremiti vsaj z oznakami na grafemskem in fonetičnem nivoju .
Ker je ročna segmentacija govora na fonetičnem nivoju naporna in dolgotrajna , se pri tem poslužujemo vsaj delno avtomatiziranih postopkov , ki so bolj učinkoviti , če vnaprej poznamo grafemski prepis govorjenega gradiva .
Rezultat samodejnega siljenega prileganja so , med drugim , tudi podatki o časovnih odsekih , ki pripadajo posameznim glasovom .
Postopek siljenega prileganja posnetkov govora z grafi modelov glasov potrebuje za svoje delovanje natančno zaporedje fonemov v govornem signalu , ki ga obdeluje .
Zato je potrebno grafemski prepis besedila sprva pretvoriti v fonetični prepis , ročno ali pa z uporabo samodejnega postopka za grafemsko fonetično pretvorbo , ki se uporablja tudi pri samodejni sintezi govora ( Gros 2000 ) .
Pogosto sprva s postopkom siljenega prileganja z oznakami opremimo le manjši del govorne zbirke .
Rezultat postopka nato ročno preverimo in popravimo vse napačno postavljene oznake mej med posameznimi fonemi ( Mihelič 2002 ) .
Zelo dobra lastnost omenjenega postopka za avtomatsko označevanje posnetkov je ta , da se je sposoben učiti .
Prva skupina oznak predstavlja potek osnovne frekvence signala , druga skupina oznak so ročno popravljeni položaji mej med glasovi , tretja skupina pa prikazuje samodejno določene položaje mej med glasovi .
Iz posnetkov govornih signalov je možno z metodami obdelave signalov pridobiti standardne akustične značilke govora , kot so potek osnovne frekvence , kratkočasovna glasnost govora ali prvih nekaj formantnih frekvenc govornega signala .
Orodje Sigmark omogoča sočasni prikaz časovne in kratkočasovne frekvenčne karakteristike signala , kar močno olajša preverjanje in popravljanje oznak ter mej med posameznimi govornimi segmenti .
Največja prednost orodja Sigmark je v tem , da omogoča samodejno in konsistentno postavljanje prozodijskih oznak za osnovno periodo .
Slika 2 : Sočasen prikaz časovnega poteka signala in kratkočasovne frekvenčne karakteristike .
6 Pregled govornih zbirk za slovenski jezik V tem razdelku podajamo pregled računalniško berljivih in označenih govornih zbirk za slovenski jezik .
Vse omenjene govorne zbirke , razen posebnih namenskih govornih zbirk , večinoma upoštevajo osnovne zahteve po fonetični uravnoteženosti besedil in narečni pokritosti slovenskih narečnih skupin z izbranimi govorci .
Bolj obsežen opis posamezne govorne zbirke se nahaja v referencah , na katere se sklicujemo ob navedbi posamezne govorne zbirke .
Sprva navajamo obsežnejše govorne zbirke , zbrane pod okriljem posamezne razvojno raziskovalne ustanove , sledi pregled namenskih govornih zbirk .
Na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru so zbrali govorno zbirke Števke ( Rozman 2000 ) .
7 Sklepne misli Pri raziskovalnem delu na področju tehnologij govorjenega jezika se neizbežno srečamo z zahtevo po dostopu do obsežnejših govornih zbirk .
V primerjavi z večjimi svetovnimi jeziki je za slovenski govorjeni jezik govornih zbirk razmeroma malo , pa še te so pogosto nedostopne preostalim razvojnim in raziskovalnim skupinam .
Zato avtorji članka pozivamo razvojno raziskovalne skupine , ki v slovenskem prostoru delujejo na področju govornih tehnologij , da se pri zbiranju govornih zbirk medsebojno povezujejo in da omogočijo dostop do lastnih govornih zbirk tudi svojim kolegom iz drugih skupin , bodisi pod razumnimi finančnimi pogoji ali pa celo brezplačno v primerih , ko se pridobljeno znanje uporablja izključno za nekomercialne raziskovalne namene .
Predstavljeno označevanje temelji na upoštevanju mednarodnih standardov s tega področja , kar doprinese k boljši dokumentiranosti in preverljivosti , enostavnejši uporabi programov za obdelavo in k večji izmenljivosti ter trajnosti .
Korpusi so dandanes že standardno shranjeni na računalnikih , saj ti po eni strani omogočajo kompaktno in poceni hranjenje ter razširjanje velike količine besedil , po drugi strani pa ta besedila lahko z njimi bolj učinkovito izkoriščamo .
Čeprav v pričujočem članku omenimo orodja , ki jih lahko uporabimo za označevanje slovenskih besedil , pa bomo več pozornosti posvetili označevanju v drugemu pomenu , tj. kako so te dodane informacije v korpusu zapisane , ne glede na to , kako smo do njih prišli .
Z dodajanjem oznak v sam korpus namreč omogočimo večjo eksplicitnost in preglednost , s tem pa tudi večjo prenosljivost podatkov .
Oznake v korpusu lahko tudi ročno popravljamo , s čimer povečamo njihovo kvaliteto , obenem pa dobimo učno množico za programe , ki se avtomatsko učijo modele jezika .
V drugem poglavju obravnavamo standarde za zapis korpusov in drugih besedil , tretje poglavje oriše nekaj bolj zanimivih ravni označevanja korpusov , četrto poglavje pa poda zaključke .
2 Standardi za zapis korpusov Precej zgodaj so se že začele pojavljati pobude za standardizacijo zapisa jezikovnih podatkov , pri katerih se skuša predpisati javno dostopne in trajne načine označevanja .
Ta standard naj bi zagotovil način zapisa , ki je prenosljiv med računalniškimi platformami , odporen na tehnološke spremembe in ki omogoča uporabo dokumentov v različne namene .
Velika prednost SGML pred drugimi zapisi je tudi , da je mogoče avtomatsko preveriti , ali je nek dokument zapisan v skladu s standardom .
Standard SGML je bil dobro premišljen , vendar pa zelo kompleksen , zato je svojo nišo našel predvsem v podjetjih , ki posedujejo velike količine dragocenih besedil in so bila pripravljena v standardizacijo njihovega zapisa tudi investirati veliko denarja .
S prodorom svetovnega spleta pa se je pojavila potreba , da se mrežnim aplikacijam zagotovi standardizirani in prenosljivi način zapisa podatkov ; to ni mogel biti HTML , saj ima ta zelo omejene izrazne možnosti , niti SGML , zaradi svoje kompleksnosti .
V izdelavo korpusov , posebej ročno označenih , je potrebno vložiti ogromno dela , potencialno pa so nato uporabni v raznovrstne namene , zato so se tudi tu že zgodaj pojavile pobude za standardizacijo zapisa .
V Sliki 1 vidimo primer dokumenta XML ; kot prvo lastnost zapisa je pomembno izpostaviti , da je dokument berljiv tudi neposredno v obliki XML .
Dokument XML vsebuje elemente , od katerih se vsak začne z začetno oznako , npr. < l > , in zaključi s končno , ki vsebuje poleg lomljenih oklepajev in imena elementa še poševnico .
Izjema so prazni elementi ( primer je < pb / > spodaj , ki naj bi označeval prelom strani ) , ki imajo za razliko od tistih z vsebino samo eno oznako , ta pa se končuje s poševnico .
< / l > < / lg > < / div > Slika 1 : Primer dokumenta XML Drevesni model označevanja je intuitivni in enostaven za računalniško obdelavo , ni pa zadosten za vse vrste struktur .
Obstaja več načinov , kako obidemo takšne probleme ; enega smo že videli v Sliki 1 , kjer je < pb / > zapisan kot prazni element , ki tako označuje prelom , namesto da bi stran vseboval .
V praksi se izkaže , da najboljše rezultate daje mešanica obeh pristopov , saj je bolj splošni model posrednega označevanja ustrezno kompleksnejši , težje preverljiv in zato okoren predvsem za gradnjo virov .
Poleg samih elementov definira XML tudi sredstvo za izražanje njihovih lastnosti , skozi t. i. atribute , ki jih lahko vsebujejo začetne značke elementov ; kot vidimo v Sliki 1 , sledi imenu atributa enačaj in vrednost v navednicah .
Kot zadnjo lastnost dokumentov XML moramo omeniti nabore znakov in entitete za njihov zapis .
Vendar pa je ta zapis 16-bitni in ga je dostikrat iz tehničnih in zgodovinskih razlogov še vedno potrebno prevesti v manjše in manj splošne nabore .
Nize , definirane s to metodo za nadomeščanje , imenujemo entitete .
K temu pojmu se še povrnemo kasneje , tu pa le omenimo , da omogoči npr. prenos poljubnih znakov v naboru ASCII : med znaka za začetek (&) in konec (;) entitete pri tem napišemo kodo znaka iz kodnega nabora Unicode , npr. kr & # x161 ; & # x10D ; ansko , kjer # pomeni , da sledi numerična koda , x pa , da je zapisana v heksadecimalnem zapisu ; 161 in 10D sta v Unicode naboru znakov kodi za znaka š in č. Nekaj bolj uporabnih znakov pa je v XML tudi vnaprej definiranih z mnemoniki ; od teh sta najbolj pomembna & amp ; za & in < za < , saj ju je , kadar sta del besedila , potrebno zapisati z entitetami .
2.2 Definicija tipa dokumentov XML Če bi dokumenti XML lahko vsebovali kakršne koli elemente v poljubnih medsebojnih odnosih in za elemente ne bi vedeli , kaj naj sploh pomenijo , ti dokumenti ne bi bili preveč uporabni .
Seveda je možno , da je znanje o nekem tipu dokumentov vgrajeno v samo aplikacijo ; primer tega so splenti brkljalniki , saj ti na zaslon izpišejo zapis HTML , četudi jim ne podamo formalne specifikacije oznak , ki jih HTML uporablja .
Dokumenti XML , ki vsebujejo ali se sklicujejo na DTD , so pravilni ( valid ) , tisti , ki pa se ne , vendar pa so vseeno zapisani po pravilih XML , pa so dobro oblikovani ( well-formed ) ; primer dobro oblikovanega dokumenta XML je bil podan v Sliki 1. < !
ATTLIST div n CDATA REQUIRED id ID # IMPLIED > Slika 2 : Primer DTD XML DTD-ji omogočajo definicijo še raznih drugih gnezdenj elementov , vrednosti atributov , vsebujejo pa tudi mehanizme za modularizacijo , ki pa jih tu ne bomo obravnavali .
2.3 Pridruženi standardi Uspešnost XML lahko pripišemo tudi obstoju pridruženih standardov , ki XML dodatno osmislijo , in prosto dostopnim orodjem , ki te standarde implementirajo ; v tem poglavju omenimo samo nekatere najpomembnejše .
To je v splošnem izredno dobra lastnost , saj je za uporabnost dokumentov precej bolj pomembno , kaj določen del besedila pomeni in ne kako izgleda .
Prva je RELAX NG , ki je predlog standarda ISO in je osnovana na regularnih izrazih , druga pa XML Schema , ki je predlog konzorcija W3C .
S tem bi se zmanjšalo razdrobljenost obstoječih načinov digitalnega zapisa , poenostavilo računalniško obdelavo in spodbudilo razširjanje in izmenjevanje elektronskih besedil .
Medtem ko sta bila tako P1 kot P2 še osnutka , predstavlja leta 1994 izdan TEI P3 zaključek prve faze dela TEI .
TEI je kot osnovo svojega zapisa vzel SGML .
TEI P3 je nabor fragmentov definicij tipov dokumentov , ki za široko paleto zvrsti besedil določa konkretne oznake in njihovo strukturo .
Skorajda bolj pomembnih pa je 1200 strani dokumentacije , ki podaja pomen posameznih oznak , opisuje posamezne podsklope ter izpelje način za njihovo kombiniranje ter nadgradnjo .
Leta 1999 je izšla popravljena izdaja TEI P3 , ki je odpravila nekaj tipografskih in drugih napak , 2002 pa je bil izdan TEI P4 ( Sperberg-McQueen in Burnard 2002 ) , ki nudi enakovredno podporo za SGML in XML in popravi razne napake iz P3 , pri čemer pa ohranja skladnost s TEI P3 .
Zato je bilo ustanovljenih več delovnih skupin , ki imajo nalogo revidirati P4 , da bo lahko ( predvidoma ) leta 2004 izdana nova različica TEI P5 .
TEI je bil vpliven tudi pri označevanju korpusov , kjer je mogoče najbolj znan primer Britanski nacionalni korpus , pri nas pa so bili v skladu s priporočili TEI zapisani , med drugim , korpusi MULTEXT-East ( Erjavec 2001 ) , IJS-ELAN ( Erjavec 2002a , 2001b ) in FIDA ( Erjavec et al. 1998 ) ; primere iz teh korpusov bomo srečali v nadaljevanju članka .
Središčne oznake ( core tags ) so obvezne v vsakem TEI DTD .
Takih naborov je vsega skupaj devet , med njimi so nabor za analitične mehanizme , npr. skladenjsko analizo , nabor za dokumentiranje uredniških posegov , nabor za imena in datume in končno tudi nabor za jezikovne korpuse .
Kot primer je v Sliki 3 podana parametrizacija TEI , ki jo uporabljamo za korpus MULTEXT-East ; ta definira , da uprabljamo XML različico TEI P4 z osnovnim naborom za prozo ter dodatnimi nabori za povezovanje , jezikoslovne analize , lastnostne strukture in korpuse .
ENTITY % TEI.corpus " INCLUDE " > ]> Slika 3 : Primer TEI DTD 2.5 Standard za zapis korpusov CES TEI podaja med drugim tudi določila za označevanje korpusov , ki smo jih tudi sami uporabljali pri zapisu večine naših korpusov .
vassar.edu / CES / > ( Corpus Encoding Standard ) , je nastal v okviru iniciative Evropske unije Eagles in projektov MULTEXT ter MULTEXT-East .
CES opredeli tri nivoje take standardizacije , kjer vsak višji nivo dodatno standardizira korpus .
3.1 Glava TEI Vsak dokument TEI in s tem vsak korpus oz. korpusna komponenta morajo biti dokumentirani ; element , ki vsebuje metapodatke o dokumentu , je < teiHeader > .
Glava TEI je sestavljena iz štirih elementov , od katerih je samo prvi obvezen .
Opis zapisa < encodingDesc > opisuje odnos med elektronskim besedilom in njegovim virom oz. viri .
Omogoča podroben opis tega , kako ( in če ) je bilo besedilo normalizirano pri transkripciji , kako je označevalec razrešil dvoumnosti v viru , katere ravni analize so bile izvedene itd.
Ta opis je še posebej koristen pri strukturiranih sestavljenih besedilih , kot so korpusi , kjer je dostikrat zaželeno , da vzpostavimo kontroliran opisni besednjak , prek katerega lahko zajemamo besedila glede na zvrst ali izvor .
Za ilustracijo informacij , ki jih najdemo v glavi TEI , je v Sliki 4 podan opis vira < sourceDesc > , ki je del opisa datoteke ene od komponent korpusa IJS-ELAN .
V osnovnem naboru oznak za leposlovje imamo nato na voljo množico oznak , ki opisujejo strukturo besedila , kot so npr. glava < head > , poudarjeno < hi > , opomba < note > , povezava < ref > itd.
Pri pretvorbi iz izvirnega ( elektronskega ) zapisa se dostikrat zastavi vprašanje , koliko in katere oznake naj se ohranijo v korpusu ; tipično ohranimo samo tiste , ki jih je enostavno avtomatsko prepoznati ( npr. odstavek ) , ostale pa izpustimo , saj je pravilna konverzija iz raznovrstnih in slabo struktururanih dokumentov težavna , za name-ne korpusnega jezikoslovja pa dostikrat tudi nepotrebna .
To na prvi pogled preprosto označevanje v sebi skriva kar nekaj pasti ( Grefenstette in Tapanainen 1994 ) , saj npr. pika ne označuje vedno konca stavka , npr. Dr. Prešeren , pa tudi besede imajo lahko kompleksno strukturo , posebej v tehničnih besedilih , npr. B3.2 14,40+/-1,92.
Takšno označevanje je bilo najprej razvito za angleški jezik ( part-of-speech tagging ) , kjer je veliko besed dvoumnih glede na besedno vrsto , naloga označevalnika pa je besedi glede na sobesedilo določiti pravilno besedno vrsto .
Zaradi bistveno bogatejšega pregibanja je tudi nabor oblikoslovnih oznak za slovanske jezike bistveno večji kot za večino zahodnoevropskih jezikov ; če je za angleščino oznak tipično okoli petdeset , jih je v slovenščini prek tisoč .
Za prvi korak potrebujemo slovar ( ponavadi skupaj z oblikoslovnim analizatorjem ) , ki nam za vsako besedo vrne vse njene možne oblikoslovne oznake , npr. za berači , da je glagol v velelniku ali povedniku ali samostalnik v imenovalniku ali orodniku .
Čeprav je pravila za razdvoumljanje mogoče pisati tudi ročno , je to izredno kompleksno in zamudno delo , zato je prevladujoča paradigma ta , da se označevalniki avtomatično naučijo statističnega modela jezika iz korpusa , ki je predhodno ročno označen .
Za slovenski jezik je največja ovira za kvalitetno označevanje oblikoslovnih lastnosti pomanjkanje velikega ročno označenega korpusa , ki bi lahko služil kot učna množica .
Korpus MULTEXT-East ( Erjavec 2001 ) je sicer javno dostopen v raziskovalne namene < http://nl.ijs.si/ME/ >, je pa njegov označeni del majhen ( 100.000 besed ) in vsebuje samo roman 1984.
Takšna imena so mogoče bolj kot za klasično korpusno jezikoslovje pomembna predvsem za zajemanje informacij ( Information Extraction ) , saj predstavljajo kritični prvi korak pri delovanju takšnih sistemov .
Za slovenski jezik na tem področju še ni bilo kaj dosti narejenega ; še najbolj se tej problematiki približa Jakopin ( 2000 ) , ki poskuša identificirati elektronske in spletne naslove v časopisu DELO .
Imena se v TEI označujejo z elementom < name > , ki je del središčnih oznak ; le-te vsebujejo tudi vrsto sorodnih elementov , npr. < date > , < number > itd.
Ti sistemi ponavadi pričakujejo besedilo , ki je že bilo oblikoslovno označ eno ; nekateri od njih nato uporabljajo ročno napisana pravila , večina pa se mode-la nauči iz vnaprej označenih besedil , kjer uporabljajo podobne ( ali celo identične ) metode kot pri oblikoslovnem označevanju .
Identificiranje predvsem samostalniških zvez ima več aplikacij ( Abney 1991 ) : uporablja se lahko , podobno kot oblikoslovno označevanje , kot predstopnja za polno skladenjsko analizo , saj že razreši del dvoumnosti v stavku in tako razbremeni skladenjski modul .
Uporabno je tudi , podobno kot identifikacija imen , v sistemih za zajemanje informacij pa tudi v večjezičnih korpusih ( oz. sistemih za ekstrakcijo leksikonov in avtomatsko prevajanje ) , saj se prevodne ustreznice dostikrat najde šele na ravni besedne zveze in ne besede .
Pri korpusih , ki so oblikoslovno označeni , je možno tudi izkoriščati vzorce z besednimi vrstami , ki omejijo najdene kolokacije .
Drug tip označevanja pa je povezovanje besedila z nekim drugim besedilom , bodisi da gre za prevod ali pa za variantno izdajo .
Vzporedni večjezični korpusi so tipični primer , ko je smiselno vzpostaviti povezave ( vsaj ) med stavki originala in prevodov .
Obstaja več avtomatskih načinov , kako poravnati stavke ; verjetno najbolj znan je statistični program , ki enostavno primerja dolžine stavkov ( Gale in Church 1993 ) ; tega smo uporabili tudi mi pri poravnavi korpusov MULTEXT-East in ( deloma ) IJS-ELAN .
Primer tega lahko vidimo v Sliki 8 , kjer atribut corresp identificira poravnani segment angleškega prevoda .
Slika 8 nam poda primer takšnega označevanja iz korpusa MUL-TEXT-East , kjer je prva poravnava 1-1 , druga 2-1 in tretja 1-0. < link xtargets = " Osl.1.1 ; Oen.1.1 " > < link xtargets = " Osl.1.2 Osl.1.3 ; Oenl.1.2 " > < link xtargets = " Osl.1.4 ; "> Slika 8 : Primer povezav CES Povezovanje se uporablja tudi pri enojezičnih korpusih oz. elektronskih izdajah , bodisi za povezave znotraj dokumenta , predvsem pa , kadar nas zanimajo različne izdaje istega dela .
Ti moduli omogočajo označevanje in povezovanje več branj besedila ( < rdg > reading ) in definirajo tudi elemente za opis grafične podobe besedila .
Predlagane metode imajo prednost , da spodbujajo izmenjavo , trajnost in večnamensko uporabo korpusov .
XML ima toliko očitnih prednosti , da lahko v prihodnosti pričakujemo skoraj univerzalno uporabo tega zapisa za potrebe korpusov in drugih jezikovnih virov .
Vendar pa je večino kompleksnosti TEI možno skriti pred uporabnikom , pa tudi snovalcem in uporabnikom DTD-ja ; spletni vmesnik TEI Pizza Chef < http://www.hcu.ox.ac.uk/TEI/pizza.html >, omogoča interaktivno definicijo definicije tipa dokumentov , izražene v eni datoteki .
Močan argument proti uporabi TEI bi lahko bila tudi anglocentričnost pobude : čeprav je besedilo v poljubnem jeziku , pa so imena vseh oznak angleška .
In čeprav TEI P4 omogoča lokalizacijo imen elementov skozi uporabniško določene entitete , ne podpira prevajanja imen atributov in njihovih vrednosti .
V zadnjem času se je tudi tu zgodil premik , saj je v teku pobuda ( Bia et al. 2003 ) za izdelavo standardiziranih knjižnic večjezičnih imen vseh TEI elementov , atributov in njihovih vrednosti , s katerimi je možno oznake dokumentov TEI avtomatično z uporabo XSLT prevajati med jeziki .
Članek je podal tudi pregled ravni jezikovnega označevanja korpusov , pri tem pa izpostavil predvsem videnje označevanja korpusov , kjer le-te naprej zajamemo , nato pa tokeniziramo , segmentiramo , oblikoslovno označimo in pri vzporednih korpusih še čimbolje povežemo .
Predstavljeno označevanje temelji na upoštevanju mednarodnih standardov s tega področja , kar doprinese k boljši dokumentiranosti in preverljivosti , enostavnejši uporabi programov za obdelavo in k večji izmenljivosti ter trajnosti .
Čeprav v pričujočem članku omenimo orodja , ki jih lahko uporabimo za označevanje slovenskih besedil , pa bomo več pozornosti posvetili označevanju v drugemu pomenu , tj. kako so te dodane informacije v korpusu zapisane , ne glede na to , kako smo do njih prišli .
Oznake v korpusu lahko tudi ročno popravljamo , s čimer povečamo njihovo kvaliteto , obenem pa dobimo učno množico za programe , ki se avtomatsko učijo modele jezika .
V drugem poglavju obravnavamo standarde za zapis korpusov in drugih besedil , tretje poglavje oriše nekaj bolj zanimivih ravni označevanja korpusov , četrto poglavje pa poda zaključke .
Velika prednost SGML pred drugimi zapisi je tudi , da je mogoče avtomatsko preveriti , ali je nek dokument zapisan v skladu s standardom .
Za razliko od SGML je XML postal izjemno popularen in dejansko postaja univerzalni medij zapisa jezikovnih podatkov .
V izdelavo korpusov , posebej ročno označenih , je potrebno vložiti ogromno dela , potencialno pa so nato uporabni v raznovrstne namene , zato so se tudi tu že zgodaj pojavile pobude za standardizacijo zapisa .
V Sliki 1 vidimo primer dokumenta XML ; kot prvo lastnost zapisa je pomembno izpostaviti , da je dokument berljiv tudi neposredno v obliki XML .
Dokument XML vsebuje elemente , od katerih se vsak začne z začetno oznako , npr. < l > , in zaključi s končno , ki vsebuje poleg lomljenih oklepajev in imena elementa še poševnico .
Elementi lahko vsebujejo besedilo ali pa spet elemente oz. mešanico obeh , celoten dokument pa mora vsebovati natanko en vrhnji element ; v Sliki 1 je to < div > .
Dokumenti XML so tako strukture z dobro poznanimi formalnimi lastnostmi , t. i. drevesa .
ukaz mi reče .
Splošni način , kako se izogniti omejitvam neposrednega XML označevanja , pa je uvedba referenčih mehanizmov .
V praksi se izkaže , da najboljše rezultate daje mešanica obeh pristopov , saj je bolj splošni model posrednega označevanja ustrezno kompleksnejši , težje preverljiv in zato okoren predvsem za gradnjo virov .
Poleg samih elementov definira XML tudi sredstvo za izražanje njihovih lastnosti , skozi t. i. atribute , ki jih lahko vsebujejo začetne značke elementov ; kot vidimo v Sliki 1 , sledi imenu atributa enačaj in vrednost v navednicah .
Kot zadnjo lastnost dokumentov XML moramo omeniti nabore znakov in entitete za njihov zapis .
XML definira splošno uporaben način za zamenjavo nizov , tj. enostavno in strojno neodvisno metodo , ki omogoča določiti , da se mora pri obdelavi določen niz znakov v dokumentu XML zamenjati z nekim drugim nizom .
K temu pojmu se še povrnemo kasneje , tu pa le omenimo , da omogoči npr. prenos poljubnih znakov v naboru ASCII : med znaka za začetek (&) in konec (;) entitete pri tem napišemo kodo znaka iz kodnega nabora Unicode , npr. kr & # x161 ; & # x10D ; ansko , kjer # pomeni , da sledi numerična koda , x pa , da je zapisana v heksadecimalnem zapisu ; 161 in 10D sta v Unicode naboru znakov kodi za znaka š in č. Nekaj bolj uporabnih znakov pa je v XML tudi vnaprej definiranih z mnemoniki ; od teh sta najbolj pomembna & amp ; za & in < za < , saj ju je , kadar sta del besedila , potrebno zapisati z entitetami .
2.2 Definicija tipa dokumentov XML Če bi dokumenti XML lahko vsebovali kakršne koli elemente v poljubnih medsebojnih odnosih in za elemente ne bi vedeli , kaj naj sploh pomenijo , ti dokumenti ne bi bili preveč uporabni .
Seveda je možno , da je znanje o nekem tipu dokumentov vgrajeno v samo aplikacijo ; primer tega so splenti brkljalniki , saj ti na zaslon izpišejo zapis HTML , četudi jim ne podamo formalne specifikacije oznak , ki jih HTML uporablja .
ATTLIST div n CDATA REQUIRED id ID # IMPLIED > Slika 2 : Primer DTD XML DTD-ji omogočajo definicijo še raznih drugih gnezdenj elementov , vrednosti atributov , vsebujejo pa tudi mehanizme za modularizacijo , ki pa jih tu ne bomo obravnavali .
2.3 Pridruženi standardi Uspešnost XML lahko pripišemo tudi obstoju pridruženih standardov , ki XML dodatno osmislijo , in prosto dostopnim orodjem , ki te standarde implementirajo ; v tem poglavju omenimo samo nekatere najpomembnejše .
To je v splošnem izredno dobra lastnost , saj je za uporabnost dokumentov precej bolj pomembno , kaj določen del besedila pomeni in ne kako izgleda .
Kot je bilo že omenjeno , mehanizem DTD omogoča preverjanje pravilnosti dokumentov , kar je izredno koristno pri izdelavi in označevanju novih jezikovnih virov .
V DTD npr. ni mogoče določiti , da mora biti vsebina nekega elementa število ali da je vrednost atributa datum .
Prva je RELAX NG , ki je predlog standarda ISO in je osnovana na regularnih izrazih , druga pa XML Schema , ki je predlog konzorcija W3C .
S tem bi se zmanjšalo razdrobljenost obstoječih načinov digitalnega zapisa , poenostavilo računalniško obdelavo in spodbudilo razširjanje in izmenjevanje elektronskih besedil .
Medtem ko sta bila tako P1 kot P2 še osnutka , predstavlja leta 1994 izdan TEI P3 zaključek prve faze dela TEI .
TEI P3 je nabor fragmentov definicij tipov dokumentov , ki za široko paleto zvrsti besedil določa konkretne oznake in njihovo strukturo .
Leta 1999 je izšla popravljena izdaja TEI P3 , ki je odpravila nekaj tipografskih in drugih napak , 2002 pa je bil izdan TEI P4 ( Sperberg-McQueen in Burnard 2002 ) , ki nudi enakovredno podporo za SGML in XML in popravi razne napake iz P3 , pri čemer pa ohranja skladnost s TEI P3 .
Leta 2000 je bil ustanovljen konzorcij TEI < http://www.tei-c.org/ >, ki naj bi skrbel za razvoj standarda TEI .
V okviru konzorcija je bil tako izdan TEI P4 , ob tem pa so bila identificirana področja , kjer bi TEI bil potreben temeljitejše prenove .
Zato je bilo ustanovljenih več delovnih skupin , ki imajo nalogo revidirati P4 , da bo lahko ( predvidoma ) leta 2004 izdana nova različica TEI P5 .
Več kot 80 projektov , ki pokrivajo prek 30 jezikov , je do sedaj uporabljalo priporočila TEI za zapis raznovrstnih virov , npr. za srednjeveške rokopise , tekstnokritične izdaje poezije , slovarje , knjižnične kataloge ipd.
S TEI skladen DTD ustvarimo za potrebe konkretnega projekta s kombinacijo naborov oznak , ki jih definira TEI .
Središčne oznake tako določajo elemente , ki so na voljo v vseh TEI dokumentih ( npr. oznake za naslove in odstavke ) ter glavo dokumenta , ki vsebuje bibliografske in druge podatke o dokumentu .
< !
3.1 Glava TEI Vsak dokument TEI in s tem vsak korpus oz. korpusna komponenta morajo biti dokumentirani ; element , ki vsebuje metapodatke o dokumentu , je < teiHeader > .
Glava TEI je sestavljena iz štirih elementov , od katerih je samo prvi obvezen .
Omogoča podroben opis tega , kako ( in če ) je bilo besedilo normalizirano pri transkripciji , kako je označevalec razrešil dvoumnosti v viru , katere ravni analize so bile izvedene itd.
Opis profila < profileDesc > vsebuje klasifikacijske in kontekstualne podatke o besedilu , npr. tematiko , osebe , ki jih opisuje oz. so sodelovale pri njegovem nastajanju itd.
Za ilustracijo informacij , ki jih najdemo v glavi TEI , je v Sliki 4 podan opis vira < sourceDesc > , ki je del opisa datoteke ene od komponent korpusa IJS-ELAN .
Besedilo je razdeljeno na razdelke < div > , ki se lahko tudi gnezdijo , ti pa naprej iz odstavkov .
V osnovnem naboru oznak za leposlovje imamo nato na voljo množico oznak , ki opisujejo strukturo besedila , kot so npr. glava < head > , poudarjeno < hi > , opomba < note > , povezava < ref > itd.
V slovenščini je sicer takšnih dvoumnosti manj ( pa še vedno precej ) , zato pa jih je toliko več v pregibnih lastnostih besed , predvsem številu in sklonu .
Zaradi bistveno bogatejšega pregibanja je tudi nabor oblikoslovnih oznak za slovanske jezike bistveno večji kot za večino zahodnoevropskih jezikov ; če je za angleščino oznak tipično okoli petdeset , jih je v slovenščini prek tisoč .
Označevanje tipično poteka v dveh fazah .
Za prvi korak potrebujemo slovar ( ponavadi skupaj z oblikoslovnim analizatorjem ) , ki nam za vsako besedo vrne vse njene možne oblikoslovne oznake , npr. za berači , da je glagol v velelniku ali povedniku ali samostalnik v imenovalniku ali orodniku .
Drugi korak , ki predstavlja bistvo označevanja , pa nato določi pravilno oznako besede glede na njeno funkcijo v besedilu ; dodatno funkcionalnost predstavlja določanje oznak tudi neznanim besedam , torej tistim , ki jih ni v slovarju .
Čeprav je pravila za razdvoumljanje mogoče pisati tudi ročno , je to izredno kompleksno in zamudno delo , zato je prevladujoča paradigma ta , da se označevalniki avtomatično naučijo statističnega modela jezika iz korpusa , ki je predhodno ročno označen .
Korpus MULTEXT-East ( Erjavec 2001 ) je sicer javno dostopen v raziskovalne namene < http://nl.ijs.si/ME/ >, je pa njegov označeni del majhen ( 100.000 besed ) in vsebuje samo roman 1984.
Ta označevalnik z naučenim modelom skupaj s še nekaj izboljšavami smo nato uporabili za avtomatsko označevanje slovenskega dela korpusa IJS-ELAN ( Erjavec 2002b ) , ki je tudi prosto dostopen < http://nl.ijs.si/elan/ >.
Takšna imena so mogoče bolj kot za klasično korpusno jezikoslovje pomembna predvsem za zajemanje informacij ( Information Extraction ) , saj predstavljajo kritični prvi korak pri delovanju takšnih sistemov .
Za slovenski jezik na tem področju še ni bilo kaj dosti narejenega ; še najbolj se tej problematiki približa Jakopin ( 2000 ) , ki poskuša identificirati elektronske in spletne naslove v časopisu DELO .
Imena se v TEI označujejo z elementom < name > , ki je del središčnih oznak ; le-te vsebujejo tudi vrsto sorodnih elementov , npr. < date > , < number > itd.
Ti sistemi ponavadi pričakujejo besedilo , ki je že bilo oblikoslovno označ eno ; nekateri od njih nato uporabljajo ročno napisana pravila , večina pa se mode-la nauči iz vnaprej označenih besedil , kjer uporabljajo podobne ( ali celo identične ) metode kot pri oblikoslovnem označevanju .
Identificiranje predvsem samostalniških zvez ima več aplikacij ( Abney 1991 ) : uporablja se lahko , podobno kot oblikoslovno označevanje , kot predstopnja za polno skladenjsko analizo , saj že razreši del dvoumnosti v stavku in tako razbremeni skladenjski modul .
Elemente za označevanje besednih zvez najdemo v modulu TEI.analysis ; tu lahko izberemo med generičnim < seg > , ki ga po možnosti opremimo z atributom type , lahko pa uprabimo tudi namenski element < phr > .
Obstaja vrsta metod , kako identificirati termine , in večina spet temelji na statističnih lastnostih besedila v korpusu .
Pri korpusih , ki so oblikoslovno označeni , je možno tudi izkoriščati vzorce z besednimi vrstami , ki omejijo najdene kolokacije .
Identifikacija terminov , podobno kot samostalniških zvez , je še posebej zanimiva v kontekstu večjezičnih korpusov , saj odpira vrata za avtomatizirano izdelavo večjezičnih terminoloških slovarjev in pomagal .
3.6 Povezave Do sedaj obravnavana označevanja imajo skupno lasnost , da kategorizirajo nek del besedila .
Drug tip označevanja pa je povezovanje besedila z nekim drugim besedilom , bodisi da gre za prevod ali pa za variantno izdajo .
Primer tega lahko vidimo v Sliki 8 , kjer atribut corresp identificira poravnani segment angleškega prevoda .
4 Zaključki V članku smo podali pregled standardov in ravni označevanja , ki se jih uporablja oziroma bi se jih lahko uporabljalo pri zapisu korpusov slovenskega jezika .
Predlagane metode imajo prednost , da spodbujajo izmenjavo , trajnost in večnamensko uporabo korpusov .
Navzočnost TEI v zapisu jezikovnih virov je bolj vprašljiva , saj imajo lastni DTDji prednost , da so tipično enostavnejši in bolj perskriptivni , kar olajša uporabo , lažje pa jih je tudi posloveniti .
Vendar pa je večino kompleksnosti TEI možno skriti pred uporabnikom , pa tudi snovalcem in uporabnikom DTD-ja ; spletni vmesnik TEI Pizza Chef < http://www.hcu.ox.ac.uk/TEI/pizza.html >, omogoča interaktivno definicijo definicije tipa dokumentov , izražene v eni datoteki .
Močan argument proti uporabi TEI bi lahko bila tudi anglocentričnost pobude : čeprav je besedilo v poljubnem jeziku , pa so imena vseh oznak angleška .
V zadnjem času se je tudi tu zgodil premik , saj je v teku pobuda ( Bia et al. 2003 ) za izdelavo standardiziranih knjižnic večjezičnih imen vseh TEI elementov , atributov in njihovih vrednosti , s katerimi je možno oznake dokumentov TEI avtomatično z uporabo XSLT prevajati med jeziki .
cuni.cz / > , ki vsebuje milijon besed , označenih z odvisnostnimi analizami .
PREVAJANJE DANES IN JUTRI : DELO S SODOBNIMI PREVAJALSKIMI VIRI IN ORODJI V prispevku avtorica podaja možnosti dela prevajalcev s pomočjo nekaterih sodobnih prevajalskih virov in orodij v elektronski obliki .
Pregled raznovrstnih jezikovnih tehnologij in elektronskih virov je podkrepljen z nekaterimi primeri dela s tovrstnimi prevajalskimi orodji za slovenski in angleški jezik , ki v času globalizacije in za Slovenijo pomembnih evropskih integracijskih procesov omogočajo vse hitrejše in učinkovitejše prevajanje določenih tipov besedil ; tako morajo biti prevajalci , če želijo biti konkurenčni na vse zahtevnejšem prevajalskem trgu , tehnološko in informacijsko osveščeni in vešči prevajanja s sodobnimi prevajalskimi orodji .
Uvod Sodobni prevajalski proces je neločljivo povezan z novimi jezikovnimi in prevajalskimi tehnologijami , saj živimo v informacijski dobi vse hitrejšega tehnološkega napredka , kar posledično zahteva ne le spremljanje , temveč tudi aktivno uporabo tako računalnika kot elektronskih prevajalskih virov in orodij ; med te spadajo elektronski slovarji , glosarji , terminološki viri , enciklopedije in drugi referenčni viri , elektronska pošta , delo z internetom , korpusnimi viri besedil , računalniško podprto prevajanje , kamor spadajo v širšem smislu vse jezikovne tehnologije , od črkovalnikov , tezavrov , elektronskih slovarjev , do drugih elektronskih virov , in strojno prevajanje .
Dandanes si skorajda ne moremo predstavljati prevajalca , ki bi še vedno prevajal le s pomočjo pisalnega stroja in pisnih virov , brez vpogleda v prevajalske tehnologije .
Takšni prevajalci preprosto ne morejo biti konkurenčni , saj je v času globalizacije in evropskih povezav , ko zahteve po prevodih hitro naraščajo , pri prevajanju nujno poznavanje dela z računalnikom , redna uporaba interneta , komuniciranje po elektronski pošti , in uporaba prevajalskih orodij .
Čeprav je bil ta model mišljen kot model prevajalskega procesa pri literarnem prevajanju , ga lahko apliciramo tudi na neliterarno prevajanje .
Prevajalski proces ostane enak , le besedilo in njegove značilnosti so drugačni .
Delo z elektronskimi viri in orodji , od preverjanja informacij na relevantnih spletnih straneh do iskanja ustreznih prevodnih enot s pomočjo elektronskih slovarjev in glosarjev je torej koristno pri prevajanju tako leposlovnih kot neleposlovnih besedil .
Uporaba interneta in dostopnost prevajalskih orodij Internet predstavlja skoraj neskončen vir bolj ali manj zanesljivih informacij .
Poleg različnih možnosti komunikacije ( elektronska pošta in možnosti neposrednega pogovarjanja v spletnih klepetalnicah ( npr. poštni seznami , novičarske skupine ipd. ) ponuja tudi možnosti iskanja informacij .
Uporabnik lahko išče s pomočjo iskalnika prek hiperpovezav ali pa neposredno vnese naslov želene internetne strani .
com komercialna institucija , organizacija ali podjetje , .
mil stran , ki spada med vojaške spletne strani ameriške vojske , .
int strani , ki so namenjene mednarodnim organizacijam tipa Evropske unije in Nata .
V Sloveniji gov.si predstavlja vladne strani , za internetne strani Univerze v Ljubljani pa uporabljamo drugačne končnice ( npr. za Filozofsko fakulteto : ff.uni-lj.si ) .
Pri iskanju je treba upoštevati tudi določena pravila iskanja in iskane pojme zožiti do tolikšne mere , da so rezultati iskanja relevantni ( ustreznejše od navadnega iskanja je npr. napredno iskanje ) .
Ko prevajalci prevzamejo besedilo v prevod , se ponavadi soočajo z zelo kratkimi roki za oddajo prevoda , zato morajo kar najhitreje in najučinkoviteje priti do prevodnih rešitev .
V naslednjih poglavjih bo predstavljenih nekaj referenčnih virov v elektronski obliki .
Referenčni viri v elektronski obliki Obstaja kar nekaj možnosti iskanja po referenčnih virih , ki jih lahko najdemo tako v papirnati kot v elektronski obliki .
Možnosti elektronskega iskanja pokrivajo iskanje po : spletnih različicah časopisov in revij ( npr. slovenska časopisa Delo in Dnevnik ali angleški The Independent in ameriški Washington Post ) , strokovnih člankih , objavljenih v internetnih različicah revij , spletnih poizvedovalnikih v knjižnicah ( od COBBIS-a in OPAC-a do knjižnice ameriškega kongresa ali LOC ) , referenčnih virih v elektronski obliki ( slovarji , glosarji , enciklopedije , eno - in večjezični terminološki viri , dostopni v internetni različici ali na CD-ploščah ) , korpusnih virih ( eno - ali večjezični , referenčni , specializirani , vzporedni in primerljivi , pisni in govorjeni ipd. ) , spletnih oziroma domačih straneh različnih mednarodnih organizacij , institucij , podjetij .
Ponavadi je dokaj enostavno uganiti naslove virov informacij naslov je sestavljen iz imena institucije in kratice imena države .
Koristne so tudi spletne strani različnih mednarodnih institucij , organizacij ali podjetij , saj ponavadi ponujajo različice predstavitvenega besedila ali pomembnih dokumentov v več svetovnih jezikih , nekatere tudi v slovenščini .
Takšni dokumenti so odličen vir informacij za prevajalce , še zlasti , ker vzporedna besedila nudijo oboje , tako ozadje neke informacije kot pomoč pri prevajanju v tuji jezik .
Nekatere spletne strani večjih mednarodnih organizacij ponujajo tudi glosarje ali baze podatkov s terminološkimi razlagami znotraj svojega področja zanimanja , kar lahko prevajalci s pridom uporabijo pri svojem delu .
Takšne spletne strani se pri prevajanju , še zlasti v tuji jezik , izkažejo kot zelo koristne , saj potrebujejo prevajalci kot nerojeni govorci potrditev svojega intuitivnega jezikovnega in kulturnega znanja ter razumevanja določenega tujejezikovnega okolja .
Nekateri spletni iskalniki , na primer Yahoo , ponujajo tudi iskanje po kategorijah in podkategorijah .
Različni načini iskanja dajo različne rezultate iskanih informacij .
Sledi nekaj naslovov povezav za prevajalce ( slovarji , glosarji , enciklopedije ipd. ) : odlične vire različnih eno - , dvo - ali večjezičnih slovarjev in besedilnih zbirk najdemo na spletnih straneh jezikoslovnega združenja Linguist List < http://linguistlist .
Vire , zanimive za prevajalce na slovenskem delu interneta ( npr. zbirka raznovrstnih slovarjev in glosarjev : < http://www .
Terminološke baze podatkov in elektronski slovarji ( dostopni na CD-ploščah ali na internetu ) so lahko namenjeni tako dekodiranju jezikovnih informacij izhodiščnega besedila kot enkodiranju ciljnega besedila .
Osnovna razlika med tiskano in elektronsko obliko iskanja po takšnih virih je predvsem v tem , da iskanje po elektronskih različicah omogoča veliko hitrejše rešitve , s tem pa je prevajalčev čas izrabljen učinkoviteje .
Poleg prosto dostopnih člankov , vključenih v redni del enciklopedije Britannica , ponuja ta spletna stran tudi dostop do različnih izbranih člankov iz več kot sedemdesetih angleških časopisov in revij , od Newsweeka do Economista in Washington Posta .
Prevajalski sektor Službe Vlade RS za evropske zadeve ( SVEZ ) ureja Evroterm < http://www.gov.si/evroterm/ >, terminološko zbirko izrazov , ki je nastala kot interna baza podatkov med prevajanjem različnih dokumentov , povezanih z EU .
Poleg spletnih strani so na voljo tudi referenčni viri v elektronski obliki , ki se od papirnatih sicer ne razlikujejo toliko v številu samih podatkov ( načeloma sta pisna in elektronska različica določenega slovarja enaki ) , ampak imajo nekatere druge prednosti : od tega , da je CD-plošča veliko manjša in zasede manj prostora , načeloma je cenejša , ima multimedijsko podporo ( grafično , avdio in video ) , do tega , da je iskanje po elektronskih različicah lažje in hitrejše .
Poleg tega elektronske različice omogočajo hiperpovezave z internetnimi viri , podatke pa lahko med delom brez težav prenašamo v Wordove dokumente .
Včasih nam pri reševanju prevajalskega problema ne pomaga niti iskanje po slovarjih in slovnicah ( npr. razlike med rabo slovenskih izrazov atomski in nuklearen ter s čim kolocirata ali razlike med angleškima besedama electric in electrical ) ; dilemo lahko razrešimo s pomočjo korpusnih rezultatov iskanja .
cobuild.collins.co.uk / form.html > Korpus TEC , Translational English Corpus : < http://ceylon.ccl.umist.ac.uk/tec/ > Korpus WEBCORP : < http://www.webcorp.org.uk/ > Korpus FIDA , referenčni korpus slovenskega jezika : < http://www.fida.net/slo/ index.html > Korpus Nova Beseda : < http://bos.zrc-sazu.si/s_beseda.html > Evrokorpus : < http://www.gov.si/evrokorpus/ > Korpusa ELAN in TRANS , ki vključujeta angleški in slovenski jezik : < http : / / nl2.ijs.si / / index-bi.html > .
Koristni so predvsem , ko iščemo besedno pogostost ( kako pogosto se neka beseda pojavlja v določenem okolju in v kakšni slovnični obliki najpogosteje ) , ko nas zanima leksikalno ( katere besede ali besedne vrste se pojavljajo ob iskani besedi in katere pripone lahko beseda nosi ) , skladenjsko ( v kakšnih skladenjskih strukturah se pojavlja ) ali pomensko okolje ( katere pomene ima v določenih besedilih in kako so ti povezani s preostalim besediščem ) ali ko nas zanimajo zvrstne oziroma stilne posebnosti določene besede ( v katerih tipih besedil se pojavlja in ali so v njeni okolici stilno zaznamovane besede ) .
Iskanje po korpusu daje različne rezultate , ki so lahko prikazani v obliki konkordanc govorimo o prikazu vseh delov besedila , kjer se pojavi iskana beseda ali besedna zveza ali v obliki t. i. prikaza KWIC ( angl. Key Word in Context ) , ki je pregledni prikaz konkordanc z iskano besedo ali besedno zvezo , navedeno v sredini .
Korpusni viri so še posebej koristni , kadar moramo preveriti pogostost določene besede ali fraze oziroma njene rabe v dejanskih besedilih .
Poglejmo nekaj primerov rezultatov iskanja po korpusih besedil , ki so prosto dostopni na internetu in ki vključujejo slovenski jezik.1 Najprej primer iz Evrokorpusa , tj. korpusa prevodov zakonodaje Evropske unije pri SVEZ-u : iskani izraz : action plan število zadetkov : 6 prevod iz Evroterma : 1. akcijski načrt 2. delovni načrt 3. načrt ukrepanja Primer : Slovenski prevodi angleške besedne zveze action plan v Evrokorpusu .
Naslednji primer je iz vzporednega slovensko-angleškega korpusa strokovnih besedil TRANS ; sestavili so ga študenti Oddelka za prevajalstvo na Filozofski fakulteti v Ljubljani pri predmetu Baze podatkov ( mentorica Špela Vintar ) , obsega pa okroglih 900.000 besed .
Namen projekta je bil zbrati čim več strokovnih in terminološko bogatih besedil iz različnih virov ( npr. medicina , strojništvo , zakonodaja , geologija ) v izvirniku in prevodu ter zagotoviti dostop do njih prek spletnega iskalnika .
2 Izpis rezultatov iskanja v tem članku je omejen na 10 ; korpus sicer za ta primer nudi 58 zadetkov .
Poleg tovrstnih jezikovnih virov so za prevajalsko delo izjemno pomembni tudi forumi prevajalcev .
V Sloveniji že nekaj let odlično deluje Slovenski forum prevajalcev , čigar moderatorka je Katja Benevol Gabrijelčič .
Vprašanja na forumu se nanašajo na prevajalske probleme pri prevajanju tako iz tujih jezikov v slovenščino kot iz slovenščine v tuje jezike ; navadno so vezana na terminološke izraze ali manj znane pojme .
Ko se prevajalec znajde v zagati , ker ne ve , kakšen je ustaljen prevod za določeno besedo ali besedno zvezo ( npr. kako prevajamo stocking scheme v slovenski jezik , ali pa interkalarne obresti ali premiki v okviru kapitala v angleškega , kakšna je razlika med filitskim in glinastim skrilavcem ipd. ) , lahko pošlje vprašanje na forum prevajalcev .
Imena avtorjev so zaradi varovanja zasebnosti izbrisana .
Primer : Dva odgovora na vprašanje o tem , kdo je avtor verzov iz filma Razkošje v travi Prevajalci se obveščajo tudi o zadevah , pomembnih za njihovo delo , od razpisov za prevajanje pri različnih organizacijah do koristnih spletnih povezav za slovarje ali terminološke glosarje .
Poleg povpraševanj o prevodnih ustreznicah za določene besede , pojme ali termine se na forumu pogosto pojavljajo tudi vprašanja v zvezi s prošnjo o pojasnilu nekega pojma ( na primer , kaj pomeni angleški izraz media briefing ) .
Atrilov Dja Vu , Tradosov Translators Workbench in podobni programi računalniško podprtega prevajanja so računalniški programi , kjer se dopolnjujeta dva sistema raba pomnilnika prevodov in strojno prevajanje , ki deluje na osnovi primerov .
SLOV. : prosim korak ter počakaj vaš miš drsnik nad majhni ljudje niz ila v tolmačiti ujeti stran zato da zagledati a tresk - ki gre gor okno s izmeničen prevod .
Primer : Strojni prevod demantija iz angleščine v slovenščino na spletni strani organizacije Tulip .
Takšne trditve so popolnoma neupravičene .
V Evropski uniji redno prevajajo s pomočjo programa SYSTRAN , saj so lahko avtomatski prevodi ozko specializiranih besedil s ponavljajočimi se stavčnimi vzorci in terminologijo zelo uporabni , prevajanje s tovrstnimi programi pa neprimerno hitrejše kot človeško prevajanje .
Tudi pri nas je to področje sredi živahnega razvoja .
Dejanska uporabnost elektronskih virov in jezikovnih tehnologij je pravzaprav odvisna od narave prevajalskega dela in značilnosti besedil , ki jih prevajamo ; elektronska prevajalska orodja lahko pozitivno vplivajo na prevajanje tako leposlovnih kot neleposlovnih besedil , programi za računalniško podprto prevajanje in strojno prevajanje pa so uporabni predvsem pri prevajanju neleposlovnih , zlasti tehničnih in strokovnih besedil s ponavljajočimi se vzorci tako besediščem in terminološkim izrazjem kot specifičnimi stavčnimi strukturami .
Prav zaradi tega so največji naročniki tovrstnega prevajanja velike mednarodne gospodarske združbe ter mednarodne politične organizacije in institucije .
UPORABA NOVIH TEHNOLOGIJ PRI JEZIKOVNEM POUKU V prispevku je predstavljen pregled možnosti uporabe novih tehnologij pri jezikovnem pouku .
Uporaba novih tehnologij pri jezikovnem pouku je odvisna od pripravljenosti učitelja , da jih sprejme in uporabi v razredu , in od opreme , ki je za pouk na voljo .
Posamezne možnosti za uporabo novih tehnologij so strnjene v tri sklope : namenske ( oziroma za jezikovni pouk pripravljene ) , nenamenske in komunikacijske možnosti .
Poleg kratkega opisa vsake od možnosti so ocenjene tudi najpomembnejše prednosti in slabosti njene uporabe .
Uporaba novih tehnologij pri jezikovnem pouku je danes precej odvisna od pripravljenosti učitelja , da jih integrira v pouk , in od materialnih pogojev , zlasti seveda od opreme , ki je za pouk na voljo .
Toda tako , kot si danes jezikovnega pouka skoraj ne moremo predstavljati brez starejših tehnologij ( npr. kasetofona ) , bodo vsaj nekatere od naštetih možnosti , ki jih novejše tehnologije ponujajo , verjetno že v razmeroma bližnji prihodnosti nepogrešljiv del jezikovnega pouka .
Jasno je , da so možnosti uporabe novih jezikovnih tehnologij pri jezikovnem pouku precej pogojene z razširjenostjo jezika .
V nekaterih vidikih uporabe jezikovnih tehnologij v celoti dominira angleški jezik , prav tako so možnosti uporabe jezikovnih tehnologij bolje izkoriščene za jezike z večjim številom govorcev , ki so v svetovni ekonomiji pomembnejši .
Slovenščina ima kljub razmeroma majhnemu številu govorcev nekatere vidike uporabe novih jezikovnih tehnologij zelo dobro razvite .
Nekoliko skromnejša so pripravljena elektronska gradiva in orodja za pouk slovenskega jezika , vendar tudi ta obstajajo in se bodo verjetno v prihodnosti po vzoru drugih jezikov še bolj razvila .
Za primerjavo trenutnih zmožnosti so navedeni primeri za jezikovni pouk angleščine , ob njih pa tudi primeri za jezikovni pouk slovenščine .
Posamezne možnosti so strnjene v tri sklope : namenske ( oziroma za jezikovni pouk pripravljene ) , nenamenske in komunikacijske možnosti .
2 Namenska gradiva , viri in orodja V prvi sklop možnosti , ki jih jezikovne tehnologije odpirajo za jezikovni pouk , spadajo namensko razvita multimedijska gradiva , elektronski viri in orodja .
2.1 Pripravljena gradiva Čeprav so zmožnosti multimedije ogromne ( kombinacija elektronskega besedila , slikovnega , video - in avdiogradiva ter interaktivni pristop ) , je uporabnih gradiv , pripravljenih za jezikovni pouk , presenetljivo malo .
Za pouk angleščine kot tujega jezika , ki je glede tega seveda najbolj razvita , obstaja nekaj zbirk gradiv na CDromih ; najboljša so tista , namenjena pouku poslovne angleščine .
Izbira na svetovnem spletu je na prvi pogled precej širša , vendar natančnejši pregled pokaže , da gre pogosto za krajša gradiva , ki obravnavajo zelo ozko temo ( npr. slovnični problem ) , namenjena pa so zelo specifičnemu znanju in so zato neuporabna za širše potrebe .
Primer razmeroma obsežnega spletnega kazala elektronskih gradiv za pouk angleščine je spletno mesto < http://polyglot.lss.wisc.edu/lss/lang/esl.html >.
Za iskanje različnih virov za pouk angleščine je eno najboljših spletnih mest stran jezikovnega centra oxfordske univerze Oxford University Language Centre : WWW resources for general language learning < http://www.lang.ox.ac.uk/langlearn .
Za angleščino obstajajo tudi zelo uporabna kazala za nekoliko bolj specifična področja jezikovnega pouka , npr. pouk pisanja OWL Online Writing Lab , spletno mesto v okviru univerze Purdue : < http://owl.english.purdue.edu/ internet / resources / sourceofinfo.html > , za pouk kulturnih študij , npr. za Veliko Britanijo < http://www .
Primer kazala elektronskih gradiv za jezikovni pouk slovenščine pa lahko najdemo na spletnem mestu avstralskega Thezaurus , Institute for Slovenian Studies of Victoria < http://www.thezaurus.com/slovenianlinx/ >; ker je izbira elektronskih učnih gradiv za slovenščino zaenkrat še razmeroma skromna , se to kazalo po obsegu seveda ne more primerjati s podobni kazali za angleščino .
2.2 Referenčni viri , ki so med drugim namenjeni jezikovnemu pouku V to kategorijo sodijo slovarji v elektronski obliki , drugi jezikovni priročniki v elektronski obliki ( npr. slovnice , tezavri , slogovni priročniki itd. ) na CD-romu ali na svetovnem spletu in jezikovni korpusi .
Slovarji in drugi jezikovni priročniki v elektronski obliki , ki so namenjeni predvsem pouku tujega jezika , so pogosto interaktivni , privlačni za uporabnika , večkrat pa vsebujejo tudi multimedijske vsebine ( npr. video - in avdiogradivo ) .
Ker je pouk angleščine kot tujega jezika po svojem obsegu postal prava industrijska panoga , ni presenetljivo , da je daleč največja ponudba tovrstnih slovarjev in jezikovnih priročnikov prav za pouk angleščine kot tujega jezika .
Za slovenščino jezikovnih priročnikov in slovarjev v elektronski obliki , ki bi bili namenjeni učenju tujcev , sicer še ni , vendar pa so elektronske različice slovenskih slovarjev ( SSKJ , dvojezični slovarji DZS ) lahko zelo dobrodošla pomoč pri jezikovnem pouku , saj skrajšajo čas iskanja .
Večina jezikovnih korpusov sicer ni zasnovana z izključnim namenom pedagoške uporabe , vendar so te elektronske zbirke besedil za jezikovni pouk izredno primer-ne .
Njihova velika prednost je možnost razmeroma avtonomnega dela učencev , s čimer je klasičen pristop k pouku presežen .
Za slovenščino je trenutno na voljo en referenčni korpus , to je Fida < http://www.fida .
net / > ( za predstavitev Fide in podatke o njeni zvrstnosti in zgradbi prim. Erjavec , Gorjanc in Stabej 1998 ) , ob njem pa še korpus slovenskega jezika Nova beseda < http://bos.zrc-sazu.si/s_beseda.html >, ki sta z vidika svoje velikosti za jezikovni pouk najprimernejša .
Čeprav je med vsemi tu obravnavanimi kategorijami jezikovnih tehnologij prav kategorija referenčnih virov , ki so med drugim namenjeni jezikovnemu pouku , ena najuporabnejših za jezikovni pouk , je razmeroma velika ovira dejstvo , da je večina kakovostnih jezikovnih referenčnih virov komercialnih , njihova tržna cena pa navadno ni majhna .
2.3 Orodja za jezikovni pouk Svetovni splet že več let ponuja programe , ki jih učitelji lahko uporabijo za izdelavo interaktivnih učnih gradiv , npr. kvizov , testov itd. ( Pisanski 1998 ) .
Iz podobnih razlogov , kot veljajo za pripravljena gradiva , opisana v 2.1 , ta orodja pri jezikovnem pouku niso zelo razširjena , vendar različnih primerov vseeno ni težko najti .
Ta test angleških nepravilnih glagolov je eden od internetnih HTML kvizov za samostojno učenje , ki so del projekta Activities for ESL Students internetne revije The Internet TESL Journal , < http://iteslj.org/ >, namenjene učiteljem angleščine kot tujega jezika , v kateri se sicer pojavljajo zanimivi članki in znanstvene razprave z različnimi temami , kot npr. uporaba računalnika pri jezikovnem pouku , pouk strokovnega jezika , razvoj učnih gradiv , kultura itd. , prav tako pa vsebuje tudi učne načrte , izročke , ideje za pouk in koristne povezave .
Začetke prilagajanja enega od orodij govornih tehnologij za slovenski jezikovni pouk predstavlja Rozman ( 2000 ) .
Nenamenska gradiva in orodja je mogoče dalje razdeliti na več podskupin .
3.1 Nenamenska gradiva Med vsemi nenamenskimi gradivi so daleč najpogosteje rabljena gradiva s svetovnega spleta , saj prav ta ponuja najširši razpon gradiv z najrazličnejšimi temami .
Peterson ( 1999 : S80 ) posebej izpostavlja pomen razširjene izbire vsebin za pouk strokovnega jezika , kajti prav pri tovrstnem jezikovnem pouku klasična gradiva pogosto ne morejo pokrivati vseh potreb .
Ob tem je treba poudariti tudi prednost rabe avtentičnih gradiv v primerjavi z gradivi , ki so nastala za jezikovni pouk : avtentična gradiva predstavljajo resnično jezikovno rabo , če jih ustrezno uporabimo lahko učencem predstavljajo ustrezen izziv , ki presega okoliščine pouka .
V prvi vrsti so za jezikovni pouk primerna gradiva v obliki elektronskih besedil v izbranem jeziku , ki jih je mogoče uporabiti nespremenjena kot avtentična gradiva ali pa jih je mogoče prilagoditi določeni stopnji jezikovnega znanja oziroma izbrani spretnosti .
Nespremenjeno avtentično besedilo v elektronski obliki je lahko namenjeno različnim ciljem : od vaje bralnega razumevanja do osnove za diskusijo ali samostojno predstavitev , lahko služi kot model za izbran žanr pri pouku pisanja itd.
Lahko pa služi tudi kot osnova za razne vrste vaj , od takšnih , ki so namenjene izboljševanju jezikovne rabe , npr. vstavljanje besed ( vaje iz besedišča ali slovnice ) , do vaj iz bralnega razumevanja , npr. takšnih , v katerih morajo učenci premešane odstavke znova urediti v koherentno besedilo .
Prav tako so lahko zanimivi viri gradiv spletne strani različnih organizacij in institucij , promocijska besedila , spletni oglasi itd.
Poleg izključno besedilnih gradiv so uporabna tudi gradiva drugih vrst , ki jih je mogoče najti na svetovnem spletu : npr. slike , skice , videi , zvočni zapisi itd. , ki jih je prav tako mogoče prilagoditi pouku ali pa uporabiti kot avtentična gradiva v zelo različne namene , npr. za vaje iz slušnega razumevanja , kot osnovo za ustno izražanje , za razumevanje kulturnega ozadja , za izboljšavo jezikovne rabe itd.
Velika prednost svetovnega spleta je , da pokriva izjemno širok spekter tem , kar pomeni veliko izbiro med gradivi , ki bi utegnila biti ustrezna , je pa seveda iskanje lahko razmeroma dolgotrajno .
Dejstvo je , da je tudi prihranek časa neke vrste motivacija in prav gotovo je dodatna spodbuda za uporabo elektronskih gradiv njihova lažja prilagoditev želeni obliki : v nasprotju z besedilom na papirju elektronskega besedila navadno ni treba pretipkavati .
Na nekaterih spletnih mestih ( npr. nekateri časopisi , revije ) je mogoče za dovoljenje za uporabo zaprositi neposredno , ponekod so pogoji uporabe natančno razloženi , kjer pa tega ni , se je treba obrniti na avtorja gradiva ali lastnika avtorskih pravic gradiva , kar navadno ni težko , saj so elektronski naslovi lastnikov avtorskih pravic ali drugih kontaktnih oseb zelo pogosto navedeni na izbranih spletnih straneh .
3.2 Referenčni viri Referenčni viri v elektronski obliki , ki sami po sebi niso namenjeni jezikovnemu pouku , npr. enciklopedije ( npr. Encarta , Britannica ) , virtualne knjižnice ( npr. The WWW Virtual Library < http://vlib.org/ > ali Internet Public Library < http://www .
Za jezikovni pouk so dragoceni , ker predstavljajo ogromne zbirke večinoma preverjenega jezikovnega gradiva , ki ga je mogoče pri pouku uporabiti kot avtentično gradivo , lahko tudi za osvetlitev kulturnega konteksta , ali pa prilagoditi določeni stopnji znanja .
Nemajhen problem pri uporabi elektronskih referenčnih virov predstavlja njihova razmeroma visoka cena , zahteva po računalniški opremi , ki je dovolj zmogljiva za multimedijske predstavitve , nenazadnje pa se tudi pri teh gradivih srečujemo s problemom avtorskih pravic .
V prvi vrsti je pomembna značilnost pisanja v elektronski obliki možnost enostavnega spreminjanja besedila z brisanjem in preoblikovanjem delov besedila .
Za uspešen sodoben pouk pisanja je prav poudarek na postopnem izboljševanju besedila skozi različne verzije zelo pomemben , za takšno delo pa je elektronsko besedilo mnogo bolj primerno kot besedilo na papirju .
Med različnimi funkcijami urejevalnika besedil ne moremo spregledati funkcij , kot npr. črkovalnik , slovnični pregledovalnik in tezaver , ki so pogosto vgrajene v urejevalniku besedil .
Črkovalnik je za pouk pisanja nedvomno zanimivo orodje , z ustrezno in osmišljeno uporabo lahko omogoči , da se glavnina revizije premakne na področje vsebine in koherence , med tem ko so osnovnejša jezikovna vprašanja potisnjena v ozadje , posledica pa je seveda lahko tudi negativna : slabo poznavanje pravopisa na sicer razmeroma visoki stopnji jezikovnega znanja .
Ob naštetih možnostih je za pouk pisnega izražanja posebej dragocena funkcija urejevalnika besedil , ki omogoča vpogled v prejšnje verzije istega besedila , s čimer se lahko učitelj natančneje seznani s procesom preoblikovanja besedila in lahko učenca bolje usmerja pri nadaljnjem pisanju .
4 Elektronska komunikacija V svojem bistvu prinaša elektronska komunikacija lažje premagovanje razdalj , bolj neposreden , individualen stik med udeleženci pri pouku in predvsem hitrejši prenos relevantnih informacij ; to pa so prednosti , ki lahko ključno izboljšajo kakršen koli pouk in niso vezane le na jezikovni pouk .
Razpon možnosti , ki jih elektronska komunikacija ponuja , je širok : od manj kompleksnih izmenjava elektronskih sporočil , do zelo kompleksnih kombinacij različnih oblik komuniciranja npr. pouk na daljavo ( eden najboljših zgledov je britanska Open University , s spletnim naslovom < http://www.open.ac.uk/ >).
4.1 Elektronska pošta Čeprav se elektronska pošta od navadne razlikuje predvsem v hitrosti prenosa podatkov , so njene posledične prednosti tolikšne , da je marsikje postala nepogrešljiv del komunikacije med udeleženci pri pouku .
Poleg tega , da je uporabna za izmenjavo informacij o organizacijskem poteku pouka npr. kadar fizična prisotnost ni mogoča ( npr. bolezen , oddaljenost ) je nadvse koristna tudi pri samem jezikovnem pouku , zlasti pri izmenjavi pisnih nalog ( npr. spisov , esejev , osnutkov prezentacij , nalog v elektronski obliki ) in povratnih informacij , največkrat v obliki prilog .
Razlogov , zaradi katerih se nekateri težje odločajo za uporabo elektronske pošte pri pouku , je več , med najpomembnejšimi pa so razmeroma zahtevni predpogoji ( ustrezna računalniška oprema in telefonska linija ter seveda cena telefonskega impulza ) in nevarnost prenosa računalniških virusov ( priporočljiva je namestitev zaščitnih protivirusnih programov na računalnike vseh sodelujočih ) .
4.2 Internetna komunikacija Poleg uporabe elektronske pošte je pri jezikovnem pouku lahko koristno tudi sporazumevanje po različnih komunikacijskih kanalih , ki jih ponuja svetovni splet .
Tako se udeleženci pri pouku lahko v različnih forumih in klepetalnicah virtualnega sveta srečujejo s posamezniki in skupinami z vsega sveta , ki so v podobnem položaju kot oni , ali pa iščejo odgovore na svoja vprašanja pri strokovnjakih , ki v kombinacijah posebnih spletnih strani in elektronske pošte odgovarjajo na zastavljena vprašanja v oblikah posvetovalnic .
Takšne možnosti so lahko zelo koristne , saj udeležencem v učnem procesu omogočajo , da z učno tematiko posežejo izven okvira učne situacije ( npr. razreda ) , pri pouku tujega jezika pa omogočajo enostaven in neposreden stik z rojenimi govorci ( primer interaktivne spletne strani , kjer je mogoče zastaviti vprašanje v zvezi z angleško slovnico in pisanjem je Guide to Grammar and Writing < http://www.ccc.commnet.edu/grammar/ >).
Kompleksnejše oblike virtualne šole vsebujejo tudi druge možnosti multimedije , najpogostejše so videokonference in avdiostik .
Za jezikovni pouk , kjer so pomembni neposredni stiki med učiteljem in učencem , možnost takojšnjega popravljanja napak ( npr. pri izgovarjavi ) in je poudarek na pouku ex cathedra manjši , je bolj kot izključno učenje na daljavo primerna občasna uporaba virtualne šole , npr. za stike z rojenimi govorci pri pouku tujega jezika .
5 Zaključek Iz opisanih treh sklopov možnosti uporabe novih tehnologij pri jezikovnem pouku je razvidno , da so oblike uporabe zelo različne in pokrivajo praktično vse vidike jezikovnega pouka .
Kot je že iz naslova jasno , je ABZ izdal Amebis , d. o. o. podjetje , ki razvija programsko opremo na področju jezikovnih tehnologij in elektronskega založništva , jezikoslovcem pa je morda najbolj znano po svojem sodelovanju pri prenosu SSKJ v elektronsko obliko ali kot eden od partnerjev , ki so izdelali Korpus slovenskega jezika FIDA .
ABZ deluje na sistemu ASP32 , ki je uporabnikom elektronske oblike SSKJ in drugih slovarjev , izdanih v okviru Amebisovega elektronskega založništva , že znan .
Takoj je treba tudi pojasniti , da številka 260.000 ( in več ) dejansko ne predstavlja prav toliko različnih samostojnih besed ( tj. besed kot jezikovnih enot za označevanje pojmov , če si izposodimo razlago iz SSKJ ) , temveč so kot besede v številki 260.000 razumljene tudi posamezne njihove oblike , kar pomeni , da je npr. pri pridevniku kot samostojna beseda bolje bi bilo govoriti o geslih predstavljena oblika za moški , ženski in srednji spol , pridevniki moškega spola imajo kot samostojni gesli podani tudi obliki za t. i. nedoločno in določno obliko , kot samostojni gesli pa se pojavita še primerniška in presežniška oblika , kar pomeni , če si povedano ogledamo na primeru , da je npr. pridevnik prijazen predstavljen v desetih geslih : prijazen , prijazna , prijaznejša , prijaznejše , prijaznejši , prijazni , prijazno , najprijaznejša , najprijaznejše , najprijaznejši ; prislov prijazno pa npr. v petih geslih : prijazneje , prijaznejše , prijazno , najprijazneje , najprijaznejše .
Geselsko so podvojeni tudi samostalniki moškega spola , ki imajo podspol živosti in neživosti , nadalje so samostojna gesla svojilni pridevniki , prav tako tudi deležijske in deležniške oblike glagola ter , kot smo videli pri prej omenjenem primeru , tudi variantne oblike primernikov in presežnikov prislovov tipa ( naj ) prijazneje / ( naj ) prijaznejše .
Pri samostalniških in pridevniških geslih so v vsebinskem oknu podane oblike za vse sklone in vsa števila ( pri pridevniku v tožilniku ednine tudi variantna oblika za živost / neživost ) , pri samostalnikih s podspolom živo pa tudi svojilni pridevniki moškega spola ( ta je sicer v ABZ tudi samostojno geslo ) ; pri pridevniških geslih so v vsebini gesla podane in tako na enem mestu zbrane vse preostale oblike ( npr. pri geslu prijazen še preostalih devet oblik , pri geslu prijaznejši enako itd. ) , ter prislovna in samostalniška višjestopenjska tvorjenka iz pridevnika ( v našem primeru prijazno in prijaznost ) ; pri glagolskih geslih so podane oblike za vse osebe in vsa števila za sedanjik , velelnik , preteklik in prihodnjik ( zadnja dva skupaj s pomožnikom ) ter oblike za deležje , deležnik , glagolnik , nedoločnik in namenilnik ; pri prislovnih geslih osnovniške oblike je podana še informacija o podstavnem glagolu ali pridevniku ( izvor ) , pri prislovih primerniške in presežniške oblike pa poleg izvora še oblika za osnovnik in presežnik oz. primernik ter varianta - eje oz. - ejše ; členki ( 62 jih je ) , vezniki ( 42 ) in medmeti ( 34 ) imajo ob geslu informacijo , da gre za členek / veznik / medmet , nato pa se geslo še enkrat ponovi ( kar se zdi nepotrebno ) , drugih informacij ni ; pri predlogu je imenovan sklon , s katerim se veže ( če gre za predlog , ki se veže z različnimi skloni , je le-ta geselsko ponovljen , zraven je potenčno privzdignjena številka ter ustrezen sklon , npr. na1 ( mestnik ) , na2 ( tožilnik ) ) .
Do geselskih podvajanj prihaja tudi pri števnikih , zlasti pri glavnih , kjer je vsak števnik za vsakega od spolov , ki imajo sicer iste sklonske oblike ( izjeme so števniki do štiri ) , samostojno geslo , kar pomeni , da se npr. šest pojavi kot geslo trikrat , v vsebinskem delu je pri vseh treh razlika le v oznakah glavni števnik , moški spol , glavni števnik , ženski spol in glavni števnik , srednji spol .
ABZ ne vsebuje razlag , zgledov rabe , naglasov , podatkov o stilni vrednosti besed ali o izgovoru prevzetih besed itd.
Zaradi podvajanja besed bi težko ocenili tudi obseg : v primerjavi s SSKJ lahko npr. na hitro samo ugotovimo , da je v SSKJ z veznik označenih 86 gesel ( v ABZ , kot smo videli , 42 ) , z medmet pa 617 gesel ( ABZ 34 ) , poleg tega je izštevniških gesel na - krat v ABZ čez 1.200 ( v SSKJ le dobrih 10 ) , pri čemer pa tudi ni jasno , od kod skoraj vsakokrat kot posebno geslo ob npr. devetkrat tudi devetikrat , ob devetdesetkrat tudi geslo devetdesetikrat itd. ( v korpusu FIDA se ne pojavljajo ) , pa tudi ne , od kod so in kaj pomenijo števniki kot devetstodvestoti ali prislovi devetstodvestotikrat , tristošeststotikrat itd. ( tudi teh ni v korpusu ) .
Ker je namen ABZ podati predvsem informacije o besednih oblikah in ker vsebuje tudi prevzeta lastna imena , preverila sem , kako dosledno upošteva pravopisna pravila o sklanjanju prevzetih lastnih imen moškega spola , in ugotovila , da jih upošteva dosledno , vendar pa redko navaja dvojnice , kar velja npr. tudi za sklanjanje kratic tipa LDS , ki imajo v ABZ samo oblike tretje moške sklanjatve , ne pa tudi prve .
Ker pa ima vsake vrste jezikovni priročnik za slovenščino pogosto nehote tudi normativno vrednost , bi zato morali problematiko variantnosti dobro premisliti , npr. tudi o variantni začetnici pri geslih tipa Parkinsonov , Pitagorov , Ahilov , Valentinovo .
Ponovno problematični so namreč s tega vidika tudi drugi jezikoslovni priročniki , npr. tudi Slovenski pravopis 2001 se je tudi v zvezi z ABZ treba dotakniti vrstnih pridevnikov in fiktivnih oblik kot interneten , mizen , stepalen itd. , ki jih ABZ podaja kot samostojna gesla , po abecedi na ustreznem mestu pa so registrirani tudi internetni , mizni , stepalni itd. ; pri čemer prve ABZ označuje s pridevnik , moški spol , nedoločni , druge pa s pridevnik , moški spol , določni , enako kot pare lastnostnih pridevnikov lep lepi , visok visoki itd. , pri katerih edino je mogoče ločiti skladenjsko lastnost določnosti .
Vsi vrstni pridevniki imajo tako neustrezno oznako določni , zunaj skupine lastnostnih pridevnikov nesmiselno oznako nedoločni pa imajo vsi drugi pridevniki , tudi svojilni .
Tovrstne oznake bi bilo mogoče preprosto izpustiti , pri tovrstnih rešitvah pa bi bilo smiselno sodelovanje slovenističnih jezikoslovcev ( domnevam , da ga ni bilo ) .
V zvezi z ABZ se je treba vprašati tudi , kako to , da njegovi avtorji niso ( v večji meri ) uporabljali podatkov iz korpusa FIDA ( nanj se sicer sklicujejo ) , saj le-ta predstavlja stanje aktualnega slovenskega jezika .
Bolje pa je , da se pri tem na nekatere druge metajezikovne informacije ( vsaj do popravljene verzije , v kateri bo morda upoštevano tudi kaj od zgornjega ) ne zanaša smiselno bi bilo torej pri tovrstnih aplikacijah sodelovanje z jezikoslovci , še posebej zato , ker tovrstni priročniki v slovenskem prostoru , kot je bilo že omenjeno , mimogrede dobijo normativno vrednost .
V zborniku so objavljeni prispevki s konference Jezikovne tehnologije 2002 , ki je 14. in 15. oktobra 2002 potekala v okviru 5. mednarodne multikonference Informacijska družba IS2002 na Institutu Jožef Stefan v Ljubljani < http://nl.ijs.si/isjt02 >.
V zborniku je 37 prispevkov ; več kot dve tretjini je večavtorskih ( skupaj 50 avtorjev ) , kar ni presenetljivo , saj gre tako pri raziskavah kot pri aplikacijah s področja JT zaradi obsežnosti in zahtevnosti postopkov največkrat za timsko delo ; pri tem tudi ni neobičajno ( čeprav v pričujočem zborniku manj pogosto izkazano ) , da se raziskovalne ustanove povezujejo z industrijskimi partnerji , državnimi agencijami in javnimi zavodi .
Teme , ki jih avtorji pri tem obravnavajo , so npr. izgradnja govornih zbirk za potrebe sinteze in analize govora , postopki za generiranje govornega signala iz zapisanega besedila , postopki za izboljšanje kvalitete sintetiziranega govora ( približevanje naravnosti ) , prepoznavanje tonske višine govora ( za določanje spola govorca in za razpoznavanje emocij ) in postopki za naglaševanje neznanih besed ( besed , ki jih ni v slovarju ) .
Pri razpoznavanju govora avtorji predstavljajo različne algoritme za razpoznavo , metode za zmanjševanje vpliva šumov pri avtomatskem razpoznavanju govora ( hrupno okolje na letališču , v avtomobilu ; različni kanali stacionarni telefon , GSM ) ; razpoznavanje govora v hrupnem okolju se lahko izboljša tudi z uvajanjem avdiovizualnih sistemov , kjer se akustična informacija dopolni z vidno informacijo govorčevega obraza ( razbiranje po položaju ustnic ) .
Velika pozornost je pri sistemih za razpoznavo govora namenjena tudi t. i. modeliranju jezika , to je ustvarjanju leksikonov besed , ki predstavljajo model jezika ; danes lahko razpoznavalniki uporabljajo od 20.000 do 65.000 besed , zaradi česar jeziki z veliko pregibnostjo besed v leksikon lahko vključijo manj ( različnih ) besed , kar je za razpoznavalnik seveda slabo .
Zato v primerih jezikov z veliko fleksije , med katere sodi tudi slovenščina , proučujejo možnosti drugačnega modeliranja jezika , in sicer tako , da se beseda razdeli na osnovo in končnico , nato pa se tvorita leksikon osnov in leksikon končnic .
Prehod od teoretičnih modelov k praktični aplikaciji razpoznave govora predstavlja sistem , ki so ga izdelali na Fakulteti za elektrotehniko , računalništvo in informatiko ( FERI ) v Mariboru : šlo naj bi za prvo širšemu krogu uporabnikov predstavljeno aplikacijo slovenskega govora , in sicer za posredovanje informacij o programu Festivala Lent po telefonu .
V grobem sistem sestavljajo trije moduli : razpoznavalnik govora , krmilnik dialoga in modul za generiranje sporočil ( posredovanje informacij ) .
Uporabnik se pri sistemu lahko po telefonu pozanima o programu festivala ; sistem na podlagi vprašanja razpozna govor , se po potrebi dodatno pozanima o podrobnostih ( krmilnik dialoga ) in spraševalcu iz baze podatkov posreduje ustrezne informacije .
Za prvih 20 klicev je bila uspešnost razpoznavanja govora 86 % , pri analizi napačno razpoznanih besed pa se je v 48 % besed izkazalo , da je klicalec uporabil besedo , ki je slovar v tisti točki dialoga ni vseboval .
Sistem danes deluje , priljubljenost storitve pa je bila za snovalce pravo presenečenje , tako da so zaradi množične uporabe morali sistem že nadgraditi .
Gabor Proszeky ( MorphoLogic , Madžarska ) je predstavljal metodo asistence / pomoči pri razumevanju besedila .
Uporabnik se z miško premakne na neznano besedo , nato pa sistem vzame besedo v bližjem sobesedilu in jo poveže s slovarjem , leksikonom in enciklopedijo v bazi ; ustrezni prevodi se samodejno izpišejo v posebnem polju na ekranu .
Da pa avtomatsko prevajanje vendarle ni več samo znanstvena fantastika , je dokazala predstavitev poskusnega modela avtomatskega prevajalnika iz slovenščine v angleščino , ki so ga izdelali na Fakulteti za računalništvo in informatiko ( FRI ) in Institutu Jožef Stefan ( IJS ) in ki temelji na korpusu IJS-ELAN ; izgradnja in možnosti uporabe tega vzporednega slovensko-angleškega korpusa < http://nl.ijs.si/elan/ > je bila sicer predstavljena v posebnem prispevku .
Z leksikalno semantiko se ukvarjajo tudi na Fakulteti za elektrotehniko ( FE ) v Ljubljani : izdelali so semantično analizo vremenskih napovedi in zgradili bazo podatkov , na podlagi katere bo deloval sistem za podajanje vremenske napovedi na internetu .
Uporabnik se bo na internetni strani Hidrometeorološkega zavoda Slovenije lahko ( v pisni obliki ) pozanimal o vremenski napovedi .
Sistem mora vprašanje razumeti , to pomeni , da mora besedilne sestavine najti v svoji podatkovni bazi in jih pravilno uvrstiti v semantični tip časovni ( danes , v ponedeljek ) , krajevni ( na Primorskem , v gorah ) , ključna informacija ( sončno , burja ) , dopolnilna informacija ( zmerno , bodo ponehale ) ali ostalo ( stopinje , km / h , nad , od-do ) .
V obeh slovarjih so za vsako besedo vpisane vse njene oblike , označene so končnice in priponska obrazila , vnešen je jakostni naglas ( tudi dvojnice in pogovorne variante , ne pa narečne ) ; v glasoslovnem slovarju so upoštevane tudi premene po zvenečnosti in izgovorne variante ; oba slovarja sta še v fazi nastajanja , sestavljalci pa zaenkrat o dostopnosti obeh slovarjev ne govorijo .
V demo sekciji konference so bile predstavljene različne oblike elektronskih slovarjev , ki jih izdeluje podjetje Amebis , in sicer najprej t. i. pasivni slovarji , ki so le v računalniško obliko predelani knjižni slovarji ( Knjižna polica ) in računalniški programi , ki omogočajo hitro in udobno delo s temi slovarji ( ASP32 , MKZ , LINA , HIPSIS ) .
Podjetje CDE nove tehnologije in IJS sta skupaj izdelala projekt GIVE govorne informacije v e-prostoru , namenjen slepim in slabovidnim za pridobivanje informacij ; sistem omogoča , da uporabnik posluša poljubno internetno stran , prebere svojo elektronsko pošto in drugo ; povratna informacija je vedno govorna , del pogostih informacij je posnet vnaprej , del pa dinamično generiran iz različnih virov ( za generiranje govora skrbi sistem Govorec ; stara verzija Govorca je v nekomercialne namene brezplačno dostopna na naslovu http://ai.ijs.si/Govorec ).
Zbornik Jezikovne tehnologije 2002 je izčrpen prikaz dela na področju JT na Slovenskem v zadnjih dveh letih , tako na področju znanstvenega raziskovanja kot na področju aplikacij .
Očitno je , da je število raziskovalnih in drugih organizacij , ki se pri nas ukvarjajo z JT , omejeno , trenutno pa obstaja nekaj večjih centrov ( FERI v Mariboru , FE v Ljubljani , IJS ter podjetji Amebis in Hermes SoftLab ) , ob njih pa še nekaj posameznikov ali skupin v drugih ustanovah in podjetjih .
Delo je večplastno v smislu , da se ga lahko bere kot vir splošno koristnih informacij o razvoju informacijske znanosti ali kot specialistično razpravo s področja kvantitativnega jezikoslovja .
Večja je entropija sistema sporočil , več informacije potrebujemo , da bi ga opisali .
Začetki teorije informacij in hkrati teorije entropije pri nas segajo na začetek 60-ih let , ko je prof. Ludvik Gyergyk s študenti ljubljanske fakultete za elektrotehniko na za to pripravljenih besedilih uganjeval manjkajoče črke in sklepal o entropiji štetje je bilo ročno , našteli so jih okoli 40 tisoč ( približno dve avtorski poli ) .
Monografija je z merjenjem entropije in z različnimi statističnimi raziskavami zamejena na izrazno podobo jezika in na obravnavo znakov in znamenj prevladuje obravnava črk , črkja in naglasnih znamenj .
Drugi namen pa je statistična obdelava dveh besedilnih vzorcev s skupnim obsegom tri milijone sto tisoč besed .
Prvi obsežnejši vzorec ( obsega sedem osmin celote ) , vključuje šestdeset del enainštiridesetih avtorjev ( šestinštirideset izvirnih in štirinajst prevodov ) z letnicami izida od 1858 do 1996 , drugi vzorec je zbrano delo Cirila Kosmača ( 52 del , objavljenih od 1931 do 1988 ) ; po avtorjevih izračunih oba vzorca skupaj predstavljata med 0,51 odstotka celotne dosedanje slovenske leposlovne produkcije .
Celo ( četrto ) poglavje obravnava oblikoslovno označevanje besedil s statističnim oblikoslovnim označevalnikom ( part-of-speech tagger ) je označen drugi vzorec .
Ročni pregled označenega besedila je potrdil 92,4 odstotno natančnost označevalnika .
Pomenljiva je avtorjeva statistična ugotovitev , da je slovenščina s 3,24 oznake na besedno obliko najbližje češčini s 3,64 oznake na besedno obliko , kar je v skladu s strukturnoskladenjsko podobnostjo slovenščine in češčine .
Tako oblikoslovno označevanje besedil kot lematizacija sta osnovi za strojno prevajanje .
Pri obravnavi oblikoslovja z oblikospreminjevalnimi vzorci / paradigmami in z oblikotvornimi obrazili ( pridevniška stopenjska obrazila in glagolske oblike ipd. ) ni mogoče brez dodatne pojasnitve govoriti o izpeljankah ( gl .
npr. 33 , Preverjanje s slovarjem izpeljank ) , ker sta izraza izpeljanka in izpeljava v slovenskem jezikoslovju že besedotvorno ( pomensko ) zasedena , primernejše bi bile neimenovalniške besedne oblike ; tudi uporaba beseda namesto besedna oblika ( gl .
Tudi v zvezi s statističnimi ugotovitvami o najpogosteje uporabljanih črkah in črkovnih sklopih , torej o najpogostejših znakih in znakovnih sklopih za glasove in glasovne sklope , bi še z vidika kvantitativnega jezikoslovja pričakovali nekakšen potrditveni komentar , da so pač ( po pričakovanju ) najpogosteje uporabljane črke za zlogotvorne samoglasnike in zvočnike , saj je bilo o načelih zgradbe slovenskih zlogov napisanega že kar precej , od prve slovenske slovnice naprej .
Ravno tako bi bilo smiselno statistične podatke o najpogostejših začetnih in končnih črkah v slovenskih besedah povezati z načelnimi ugotovitvami slovenskega glasoslovja .
Izračunana povprečna dolžina besednih oblik v obeh vzorcih je 4,55 črke .
Navedene so tudi najpogostejše besedne oblike ( biti kot vez ali eksistencialni glagol , priredni in podredni vezniki , predlogi , zaimki idr. ) , bistveni za stavo povedi pa sta pogostnosti začetnih in končnih n-nizov besednih oblik ( slednji z najpogostejšim nizom je rekel izdajajo leposlovna besedila s pogostim premim govorom ) .
Prvič so dolžinsko obdelane tudi povedi in navedeni podatki o lipogramskih povedih .
Prav izračun pogostnosti vseh možnih t. i. n-terčkov oz. n-nizov z n črkami pa je pogoj za računanje entropije v slovenskih besedilih zgornjo mejo entropije v slovenskih leposlovnih besedilih avtor ocenjuje na 2,2 bita na znak , kar naj bi bila po avtorjevih izračunih hkrati tudi povprečna entropija v slovenščini in kar pomeni približno enočetrtinsko možnost uganitve naslednje črke .
Vendar pogoj za verodostojen entropijski model za slovenščino je zvrstno uravnotežen besedilni fond , kar pomeni , da bi tak entropijski besedilni vzorec moral vključevati fond socialno-funkcijsko relevantnih tipov besedil , izbranih po izdelani mreži ( razmernih ) kriterijev .
V zvezi z avtorjevim komentarjem , da napake umetno povečujejo entropijo in zmanjšujejo težo vsake statistične raziskave ( 25 ) pa se je potrebno tudi odločiti , ali se računa idealni oz. v skladu še z drugimi kvantitativnimi izračuni najoptimalnejši entropijski model za slovenščino ali pa se želi izračunati dejansko entropijo za slovenščino .
Upoštevanje samo prečiščenih besedil , brez zatipkanih ali kako drugače napačno napisanih besed , pač ni dejansko stanje ( v svoji pisni podobi to navsezadnje na določenih mestih potrjuje tudi obravnavana monografija ) , temveč kvečjemu umetelna idealizacija jezika .
Navsezadnje sam avtor razpolaga z izčrpnimi statistično obdelanimi seznami najpogostejših ( najpredvidljivejših ) zatipkanih oz. napačno izpisanih črkovnih sklopov .
Med prilogami na koncu sta sporočilni in zato tudi najbolj zanimivi prilogi Č Abecedni seznam najpogostejših lem , njihovih oblikoslovnih oznak in frekvenc v drugem vzorcu , kjer je na primerih različnih besednih vrst predstavljeno uporabljeno oblikoslovno označevanje , in D Zanimivi naslovi na internetu , kjer je naslovniku dana možnost , da se dodatno poduči o nekaterih omenjanih projektih .
Kvantitativno jezikoslovje je vsekakor že učinkovit in tudi že nujni del jezikoslovja , zato mora upoštevati tudi temeljne jezikoslovne ugotovitve in pri svojih kvantitativnih raziskovanjih ( statistikah , merjenjih , izračunih ipd. ) iskati vzajemnih potrditev in razlag tudi v drugih ( že klasičnih ) jezikoslovnih področjih , sicer lahko ostaja samo sebi namen .
Večina preteklih konferenc Complex je gostovala v Budimpešti , kjer je na madžarski akademiji znanosti močan raziskovalni inštitut za jezikoslovje , pobudnik teh srečanj pa je član akademije ter vodja inštituta Ferenc Kiefer .
Complex je skupaj s konferenco Euralex , o kateri je v 1. letošnji številki JIS poročal Vojko Gorjanc , glavna konferenca za to strokovno področje v evropskem prostoru .
Na letošnji konferenci Complex je bilo 12 predstavitev , ki so objavljene tudi v zborniku prispevkov ( 101 stran ) .
Rabo paralelnega korpusa za analizo prevajalskih strategij je vključno s programsko opremo predstavil Dmitrij Dobrovolskij z moskovske akademije znanosti .
Z novimi načini za pridobivanje kolokacij in idiomatskih izrazov iz korpusa ter z orodji za računalniško podprto plemenitenje že izdanih slovarjev s korpusnimi podatki ( projekt za založbi Langenscheidt in Duden ) pa se ukvarjajo predvsem na univerzi v Stuttgartu ( Ulrich Heid , Hannah Kermes ) .
Na konferenci je bil tudi predavatelj iz Slovenije Tomaž Erjavec z Instituta Jožef Stefan ; predstavil je projekt Concede , ki povezuje šest srednje - in vzhodnoevropskih jezikov : bolgarščino , češčino , estonščino , madžarščino , romunščino in slovenščino .
Evropska veja se je lahko tudi bolj posvetila različnim jezikom : na omenjeni konferenci kar tretjina prispevkov ni bila o angleščini , medtem ko sta na matični konferenci ACL le dve predstavitvi od 25 obravnavali druge jezike .
Od 15. do 17. aprila pa je potekal osrednji del konference , ki so ga dopolnjevali praktični prikazi projektov ter študentski prispevki , kot novost na letošnji konferenci pa tudi predstavitve raziskovalnih projektov .
Poleg tega so bile obravnavane tudi tehnike vprašanj in odgovorov za iskanja po svetovnem spletu ; na tem posvetu so bili predstavljeni načini , kako organizirati dokumente in spletne iskalnike , da bi uporabnik dobil tako informacijo , ki bi se kar najbolj približala njegovim potrebam , in se hkrati izognil veliki količini drugih podatkov .
V posameznih državah so že razvili različne pristope , tako za obdelavo enega samega jezika kot tudi za več , vendar pa večina pristopov kljub sorodnostim v jezikih nastane neodvisno , poleg tega pa do zdaj še ni bilo sistematičnega pregleda opravljenega dela .
Slovenijo je predstavljal Tomaž Erjavec , ki je celotno delavnico hkrati tudi vodil , predstavil pa je projekt MULTEXT-East in morfosintaktične specifikacije slovanskih jezikov , ki so vanj vključeni ( med njimi tudi slovenščina ) .
V študentskih raziskovalnih nalogah so bile med drugim predstavljene naslednje teme : tehnike za normaliziranje dokumentov , kohezija in koherenca ter njuna uporaba za avtomatsko izdelavo povzetkov , izboljšave pri obdelavi govorjenega jezika , zlasti za besede , ki jih govorec ne izgovori do konca .
Novi veliki angleško-slovenski slovar Oxford-DZS Uvod V okviru slovarskega oddelka Izobraževalnega založništva DZS d. d. nastaja nov veliki angleško-slovenski slovar , ki bo izšel v naslednjih letih pri založbi DZS .
Poglavitna prednost novega slovarja je , da ne bo zgolj predelava ali nadgradnja katerega od že obstoječih starejših angleško-slovenskih slovarjev , temveč povsem nov slovarski izdelek , soavtorsko delo širše skupine strokovnjakov z različnih področij .
Pri njegovem nastajanju že od vsega začetka sodeluje večje število leksikografk in leksikografov v vlogi primarnih sestavljalcev ter manjša skupina na splošni redaktorski fazi pod vodstvom glavnega leksikografskega svetovalca , prof. dr. D. Gabrovška ; sledijo slovenistična in terminološka redakcija , redakcija angleškega dela slovarja s strani domačih govorcev ter dodatne specializirane redakcije , npr. pregled fonetičnega zapisa iztočnic .
Osnovni cilj je sestaviti visoko kvaliteten in obenem uporabniško prijazen dvojezični slovar , ki bo temeljil na načelih sodobne leksikografije , še zlasti na izsledkih za leksikografijo zdaj že povsem nepogrešljivega korpusnega jezikoslovja , in bo namenjen najširšemu krogu slovenskih uporabnikov angleščine .
Korpusni pristop zagotavlja učinkovit kontrastivni prikaz razmerja med jezikoma , s poudarkom na podobi sodobne ( britanske in ameriške ) angleščine na eni ter slovenščine na drugi strani .
Zaradi svojega obsega , izčrpnosti in sodobnosti bo novi slovar neke vrste unikum na slovenskem trgu in bo kot tak zapolnil dolgotrajno vrzel v ponudbi angleško-slovenskih slovarjev , zagotovo pa bo temeljni priročnik za vse , ki se študijsko , poklicno ali drugače pogosto srečujejo z angleščino .
Slednja se s procesi globalizacije še naprej utrjuje kot svetovna lingua franca , zato aktualni in kvalitetni angleško-slovenski ter slovensko-angleški viri nenehno pridobivajo na pomenu tudi in še posebej v luči pridruževanja Slovenije EU .
Viri Slovarska baza , na podlagi katere je nastal osnovni geslovnik oz. izbor izhodiščnega jezika , je prevzeta iz angleško-francoskega slovarja The Oxford-Hachette English-French Dictionary ( OUP , 1994 ) , vendar temeljito prirejena in dopolnjena za potrebe angleško-slovenske protistave .
Prvi se je razvil iz projekta COBUILD Univerze v Birminghamu in založbe Collins , ki je bil osnovni korpusni vir v začetnih fazah izdelave novega slovarja , kasneje pa je postal dostopen večji , s tem pa tudi relevantnejši stomilijonski BNC , ki predstavlja nepogrešljiv leksikografski vir : podatki o frekvenci pomagajo pri odločanju o ( ne ) vključevanju iztočnic v geslovnik ; kvantiteta zbranih podatkov zagotavlja objektivnejšo pomensko razdelavo gesla ter aktualne primere rabe ; z opazovanjem tipičnega sobesedila iztočnice je mogoče v praksi preveriti njene osnovne slovarske pomene ter pragmatične funkcije .
Zadnja leta se ob razvoju računalniških orodij za iskanje konkordanc prek interneta , npr. WebCorp < http://www.webcorp.org.uk >, kot svojevrsten korpus pojavlja kar sam svetovni splet , čeprav gre rezultate iskanj zaradi nedoločenih taksonomskih kriterijev zaenkrat jemati z veliko rezerve .
b ) Osnovni referenčni viri za ciljni jezik so vsi obstoječi splošni slovenski slovarski viri ( SSKJ , Slovenski pravopis 2001 , Slovar tujk 2002 ) .
Glede na to , da danes le malo resnih slovarjev nastane brez rabe takšnega ali drugačnega elektronskega korpusa besedil , predstavlja pomembno novost referenčni Korpus slovenskega jezika FIDA < http://www.fida.net >, ki je do leta 2000 pri DZS nastajal kot neke vrste stranski produkt priprav na novi slovar Oxford-DZS , in sicer v sodelovanju DZS d. d. , Filozofske fakulte v Ljubljani , podjetja Amebis ter Instituta Jožef Stefan .
Vsak del besedila , ki mora zaradi vsebinskih ali oblikovnih razlogov v končni strukturi ostati izsledljiv , je označen s poljubnim elementom , s čimer je zagotovljen nadzor nad logično strukturo celotnega besedila , ki je ključen za usklajeno in urejeno obdelavo geslovnika .
Najpogostejša lastna imena so s področij geografije , mitologije , astronomije , kulture , umetnosti in zgodovine .
Slovarska iztočnica lahko nastopa kot eno - ( birth ) , dvo - ( birth rate ) ali večbesedna enota ( birth-control pill ) .
Status samostojnega gesla imajo še nepravilne oblike samostalnika ( mice ) , glagola ( rung ) , pridevnika ( better ) ali prislova ( better ) .
Tu dvojezični slovar Oxford-DZS odstopa od večine enojezičnih angleških virov , ki praviloma homonime ločujejo po etimoloških načelih .
Ker je slovar namenjen dekodiranju , so obseg in vrste slovničnih podatkov omejeni , tako na primer ni navajanja podatkov o vezljivosti .
Temu sledi frazeološki del gesla ( C ) , ki ga sestavljajo zveze ( 1 ) , idiomi ( 2 ) in sestavljeni glagoli ( 3 ) .
Kategorija zveze vključuje konvencionalne besedne zveze s stalno besedilno funkcijo .
1 poročilo , pripoved , opis ; pričevanje ; to give an account of sth opisati kaj ; by his account of what happened po njegovi verziji dogodkov ; she is a very good pianist , from all accounts baje je zelo dobra pianistka ; by her own account she was driving too fast po svojih lastnih besedah je vozila prehitro 2 račun ; I have ,,,100 in my account na računu imam sto funtov ; an account with the baker odprt račun pri peku ; an electricity account račun za elektriko ; to buy goods on account kupovati blago na kredit ; ,,,100 on account and the rest in May sto funtov plačate takoj , ostalo pa maja 3 upoštevanje , ozir ; to take sth into account , to take account of sth upoštevati kaj 4 knjiž .
pomen , vrednost ; of some account precej pomemben ; money was of little account to them denar je bil zanje postranskega pomena 5 knjiž .
obrazložitev , pojasnilo , utemeljitev ; zagovor ; razlaga , teorija ; to call sb to account poklicati koga na zagovor / odgovornost ; zahtevati pojasnilo od koga ; she was called to account for failing to finish the job odgovarjati je morala zaradi nedokončanega dela ; Chomskys account of language acquisition teorija Chomskega o usvajanju jezika 6 interpretacija , izvajanje ; a lively account of Beethovens score živahna interpretacija Beethovnove partiture 7 fin .
( stalna ) stranka , ( stalen ) kupec ( stranka , ki ima pri dobavitelju odprt račun ) ; we have secured several big accounts pridobili smo nekaj velikih strank ; they transferred their publicity account to a new agent za področje oglaševanja so najeli drugo firmo 8 fin .
( na borzi ) termin / rok za poravnavo ; evidentiran / terminski posel ; obdobje sklepanja poslov II accounts mn .
finančno poročilo ; računi , poslovne knjige ; the accounts show a profit iz finančnega poročila je razviden dobiček ; to keep the accounts voditi poslovne knjige III preh .
imeti za , šteti za ; ceniti ; he was accounted a genius imeli so ga za genija C1 on account of zaradi ; she cant run very fast on account of her illness zaradi bolezni ne more teči zelo hitro ; dont worry on account of him ne skrbite zanj on no account nikakor ; v nobenem primeru ; pod nobenim pogojem ; on no account must you open the door v nobenem primeru ne smeš odpreti vrat on this / that account glede tega ; there neednt be any more worries on this account glede tega vam ni treba več skrbeti C2 IDIOMI : to give a good / poor account of oneself dobro / slabo se odrezati ; on sbs account ( posebej ) zaradi koga ; komu na ljubo ; .
kako naj to razložimo ?
; to account for ones actions odgovarjati za svoja dejanja ; skin cancer accounts for 1000 premature deaths a year kožni rak je vzrok za tisoč prezgodnjih smrti letno ; is everyone accounted for ?
Osnovno zgradbo slovnično-pomenskega dela določa slovnična delitev oziroma besedne vrste .
Vrstni red besednih vrst je absoluten in ne sledi načelu pogostosti .
Določen je glede na preferenčnost besednih vrst , kjer sta samostalniška in glagolska beseda na prvih dveh mestih , sledita pridevniška in prislovna , na koncu pa so funkcijske besedne vrste .
Delitev pomenov ne sledi angleški pomenski razdelitvi , ampak upošteva pomenska razmerja na slovenski strani .
// Če pri razvrstitvi besednih vrst načelo pogostosti ni upoštevano , pa je to pri razvrščanju pomenov glavno načelo .
Tipično so sicer neoznačeni pomeni in pomeni s stilnimi ali regionalnimi oznakami na vrhu geselskega članka , sledijo starinski in zastareli pomeni , na koncu pa so področno označeni pomeni , vendar načelo pogostosti prevlada nad načelom označenosti , npr. pri samostalniški iztočnici felon , kjer je področno označeni pomen pred neoznačenim pomenom .
1 jur .
hudobnik , hudobnež / nica , zlodej , pošastnik Pri razvrščanju pomenov je kot dodatno načelo upoštevano tudi pomensko načelo , kar pomeni , da če je to mogoče , ostanejo skupaj pomeni , ki so medsebojno povezani , npr. pri samostalniški iztočnici biscuit je neoznačeni pomen piškotna barva razvrščen skupaj s terminom iz umetnosti .
Posamezen pomen , uveden z arabsko številko , ima neposredni niz prevodnih ustreznic , ki mu sledi izčrpen sklop primerov rabe .
1 zavreči ; odvreči , vreči stran ; opustiti ; she bundled up the clothes she had discarded obleko , ki jo je zavrgla , je povila v sveženj ; we discarded our original plan to visit Berlin opustili smo naš prvotni načrt , da bomo obiskali Berlin // Prevedki so načeloma stilno usklajeni z angleškimi iztočnicami .
VB fris , faca , ksiht ; I havent seen his dial before njegovega frisa še nikoli prej nisem videla // Pri edninskih samostalniških iztočnicah , ki se nanašajo na osebe , so moškim oblikam dodane ženske oblike prevedkov .
demonstracije , kjer ljudje kot mrtvi ležijo na tleh Razlage se v obliki kratkih identifikacij pri nekaterih tipih iztočnic pojavljajo tudi ob prevedkih , npr. pri lastnih imenih .
Primeri rabe kažejo tudi s sobesedilom pogojene prevode , kar je v nekaterih primerih tudi ničti prevedek .
strah ; bojazen , skrb ; fear of death strah pred smrtjo ; the future holds no fears for her ni je strah prihodnosti ; my worst fears were confirmed moje najhujše bojazni so se uresničile ; fears are growing that his life may be in danger narašča zaskrbljenost , da je njegovo življenje morda v nevarnosti ; I kept quiet for fear that they would wake up bil sem tiho , da jih ne bi zbudil ; in fear and trembling trepetajoč od strahu ; s strahom in trepetom ; have no fear !
; fear of God bogaboječnost // Prevedki in primeri rabe so opremljeni tudi z metajezikovnimi informacijami v obliki oznak in indikatorjev .
, lingv .
) .
Vse oznake se nanašajo na levo , angleško stran slovarja .
Področne oznake se pojavijo samo pri tistih iztočnicah in pomenih iztočnice , kjer angleški viri izpričujejo , da gre za terminologijo določenega področja .
Prav tako je zaželena široka ekipa sodelavk in sodelavcev za posamezne segmente slovarja .
S takšnim pristopom bi lahko dobili tudi nov , sodoben , predvsem pa uporabnejši slovensko-angleški slovar .
Pridobivanje govorne zbirke za korpusni sintetizator govora Phonectic Povzetek V članku opisujemo snovanje in ustvarjanje govorne zbirke za korpusno sintezo slovenskega govora .
Sprva smo izvedli frekvenčno analizo pogostosti pojavljanja glasovnih sklopov za slovenski jezik nad obsežnim vhodnim besedilom , ki smo ga pretvorili v fonetični prepis .
Sledi opis snemanja in označevanja govorne zbirke , kjer smo uporabili programsko orodje SIGMARK , ki omogoča segmentacijo in označevanje glasovnih segmentov ter samodejno označevanje osnovne periode .
V modernem času je razvoj govornih tehnologij , predvsem to velja za sintezo in prepoznavanje govora , doživel izjemen razcvet in v vsakdanjem življenju se že uporabljajo raznovrstne rešitve s tega področja – v samodejnih informacijskih centrih , v govornih portalih , za glasovno prebiranje elektronske pošte .
Razvoj in raziskave s področja sinteze slovenskega govora se odvijajo na Fakulteti za elektrotehniko Univerze v Ljubljani ( Gros , 1997 ; Vesnicer et al. , 2001 ) , na Inštitutu Jožef Stefan ( Šef , 2001 ) , na Fakulteti za elektrotehniko , računalništvo in informatiko na Univerzi v Mariboru ( Rojc et al. , 1999 ; Rojc et al. , 2000 ) ter v podjetju Masterpoint iz Ljubljane ( Gros et al. , 2001 ) .
V nadaljevanju opisujemo postopek zasnove in realizacije nove , kvalitetne zbirke osnovnih govornih enot , ki je potrebna za delovanje korpusnega sintetizatorja govora za slovenski jezik Phonectic .
Za korpusno sintezo govora potrebujemo glasovno zbirko , ki vsebuje posnete osnovne enote govora ( Conkie , 1999 ; Conkie et al. , 2000 ) .
Za sintezo govornega signala bi v govorni zbirki samo poiskali ustrezno frazo in jo brez spreminjanja njenih prozodičnih lastnosti uporabili .
V splošnem velja , da je sintetizirani govor kvalitetnejši , če uporabljamo za sintezo daljše osnovne segmente s čim manj spremembami prozodičnih parametrov ( Kopeček , 2001 ; Yi , 1998 ) .
Število segmentov povečuje tudi želja po minimalnih spremembah prozodičnih parametrov , saj te vnašajo popačenja v sintetizirani govor .
Zasnovo zbirke za korpusno sintezo govora lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v nadaljevanju članka : - izbira besedila , potrebnega za snemanje govorne zbirke , - snemanje govornega gradiva , - segmentacija in označevanje govornega gradiva .
Pri načrtovanju vsebine glasovne zbirke za novi sintetizator slovenskega govora smo precejšnjo pozornost posvetili prav izbiri optimalnega besedila .
Daljše besedilo namreč pomeni zamudnejše snemanje , predvsem pa se poveča težavnost segmentacije in označevanja obsežnega posnetega govornega gradiva .
Izbira besedila Besedilo za snemanje smo izbirali iz obsežne zbirke slovenskih besedil , ki so pokrivala različne zvrsti , kot so dnevni časopisi , revije , leposlovje .
Besedila teh povedi smo pretvorili v fonetični prepis .
2.1 Analiza pogostosti pojavljanja glasovnih nizov Večina dosedaj izvedenih analiz pogostosti zaporedij glasov v slovenskem jeziku je bila izvedena nad grafemskim zapisom ter se je ukvarjala z zaporedji grafemov .
Nad fonetičnim prepisom besedila smo izvedli frekvenčno analizo pojavljanja glasovnih nizov alofonov , difonov , trifonov in štirifonov .
S tem smo dobili vpogled v pogostost pojavljanja posameznih sklopov alofonov v slovenskem govorjenem jeziku .
Kot zanimivost v sliki 1 predstavljamo rezultate frekvenčne analize slovenskih alofonov .
Odločili smo se za prvih 500 trifonov , kar znaša le 1% vseh možnih trifonov , na katere smo naleteli pri analizi obsežne zbirke besedila .
Vsem povedim smo določili ceno , in sicer na podlagi bogatosti z glasovnimi skupinami , ki smo jih potrebovali .
Štirifonom , ki jih v govorni zbirki še nismo imeli in jih je trenutno obravnavana poved vsebovala , smo predpisali najvišjo ceno , trifonom nižjo in difonom najnižjo .
Posamezne vrednosti smo sešteli in dobili skupno ceno .
Celoten postopek smo ponavljali v zanki , dokler nismo z izbiro povedi pokrili prav vseh želenih glasovnih zvez .
Vendar smo poleg teh pridobili še vrsto drugih glasovnih skupin , ki niso bile navedene v zahtevah .
Najbolje bi bilo poiskati optimalno kombinacijo uteži , ki bi generirala najkrajšo izhodno zbirko povedi po kateri izmed uveljavljenih optimizacijskih metod ( metoda simpleksov , optimizacija z nevronskimi mrežami , najmanjša napaka kvadratov , ipd. ) .
Opisani način izbire povedi , primernih za uvrstitev v glasovno zbirko , se je izkazal za zelo učinkovitega in uporabnega .
2.3 Primerjava postopkov za izbiro povedi Podoben algoritem za izbiro povedi so razvili na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru ( Rojc et al. , 2000 ) .
- Postopek : Iz celotnega besedila izloči vse povedi , ki so krajše od 15 besed in daljše od 25 besed .
Vsakemu glasovnemu nizu določi pogostost pojavljanja v vsaki od 4 majhnih zbirk .
Postopek za optimalno izbiro povedi – sintetizator govora Phonectic : - Velikost uporabljene zbirke besedil : 3.2 milijona besed , ~200,000 povedi , v fonetičnem prepisu ~17.3 milijonov glasov .
- Cilj : Zbirka z vsemi izbranimi glasovnimi nizi , vsemi kombinacijami difonov in najpogostejšimi trifoni ter štirifoni .
Zbirka naj ima kar najmanjši obseg .
Postopek ponavljaj , dokler besedilo zbirke ne vsebuje vseh želenih glasovnih nizov .
Povprečna dolžina povedi v zbirki rahlo presega šest besed oz. 34.4 alofonov .
Prav tako je naša govorna zbirka bogatejša , saj sestoji iz večjega števila različnih glasovnih nizov , pri tem da vključuje vse najbolj pogoste .
Objektivno primerjavo uspešnosti obeh postopkov bi lahko dobili le z obdelavo iste vhodne zbirke slovenskih povedi .
Zelo pomembno je namreč , da govorec skozi vse besedilo govori na enak način , z enakim glasom , z enako intonacijo , skratka z enakimi parametri govora .
Snemanje govornega gradiva je potekalo ob prisotnosti izkušenega snemalnega operaterja z namenom , da bi preprečili neustrezne izgovorjave besed in napake pri snemanju govora .
3.2 Označevanje govorne zbirke Govorni zbirki je bilo potrebno dodati še oznake o začetku ter koncu posameznih glasov oziroma fonemov ter oznake osnovne periode .
Za fonetične prepise posnetega govornega gradiva smo uporabili 36 različnih alofonskih oznak .
Za ročno pregledovanje in označevanje govorne zbirke ter popravljanje oznak smo v Masterpointu razvili poseben računalniški uporabniški vmesnik - SIGMARK , ki omogoča prikaz in spreminjanje posnetih govornih signalov in izbranih akustičnih značilk ter poslušanje poljubnih odsekov signala ( slika 4 ) .
Orodje SIGMARK omogoča sočasni prikaz časovne in kratkočasovne frekvenčne karakteristike signala , kar močno olajša preverjanje in popravljanje mej med glasovi in oznak za glasove .
3.3 Obseg govorne zbirke Končna govorna zbirka za korpusno sintezo govora vsebuje 297 različnih povedi s 1814 besedami ter vsemi potrebnimi difoni oziroma trifoni , ki smo jih izolirali ( pridobili ) iz logatomov .
Vse povedi v korpusu smo opremili s kanoničnimi fonetičnimi prepisi .
V tabeli so za posamezne dele zbirke podani časi trajanja posnetkov ter število vsebovanih besed in glasov .
Po delih zbirke je podano še število vseh besed , število različnih besed in število glasov .
zastopanost alofonov v zbirki besedil aa:b ts tS dEE : e : fghii : I jk lmnOO : o:p rsStuu:U vzZ @ @ : alofoni Slika 1 : Prikaz frekvence zastopanosti alofonov v zbirki povedi , alofoni si sledijo v abecednem vrstnem redu .
Število pojavljanj trifonov Slika 2 : Prikaz frekvence pojavljanja 50 najbolj pogostih trifonov v zbirki povedi .
Število pojavljanj trifonov v zbirki besedil vsota pojavljanj vseh trifonov Slika 3 : Prikaz frekvence zastopanosti trifonov v zbirki povedi .
Prva skupina oznak predstavlja potek osnovne frekvence signala , druga skupina oznak so ročno popravljene oznake mej med glasovi , tretja skupina pa prikazuje samodejno določene oznake mej med glasovi .
Sklep Pri snovanju govorne zbirke za korpusno sintezo govora smo izvedli frekvenčno analizo pogostosti pojavljanja glasovnih sklopov za slovenski jezik nad obsežnim vhodnim besedilom .
Z bistveno manjšo začetno zbirko besedil nam je uspelo ustvariti štirikrat krajše besedilo , kot je to uspelo konkurenčnemu postopku .
Prav tako vsebuje naša govorna zbirka več različnih glasovnih nizov .
Iz tega lahko povlečemo zaključek , da smo postopek optimizacije besedila za govorno zbirko opravili uspešno .
Končni rezultat , govorna zbirka za korpusno sintezo govora z vsemi potrebnimi oznakami , dobro služi svojemu namenu .
V razvoju je že naslednja verzija sintetizatorja slovenskega govora , ki bo vključevala algoritem za odpravo spektralnih nezveznosti na mestih lepljenja glasovnih nizov .
Ugotavljamo , da se zadnji čas raziskovalci največ ukvarjajo s statističnimi pristopi k strojnemu simultanemu prevajanju govora , zato se osredotočamo na jezikovne vire , ki so potrebni za tak pristop .
Ključne besede : jezikovne tehnologije , strojno simultano prevajanje govora , jezikovni viri , LC-STAR .
Tako je takrat Američan Warren Weaver zapisal : " Pred seboj imam besedilo v ruščini , vendar se bom pretvarjal , da je v resnici zapisano v angleščini in zakodirano s čudnimi simboli .
" ( Arnold et al. , 1994 ) Takšen pogled na strojno prevajanje in razlike med jeziki je seveda zelo preprost , vendar je Weaver s tem spodbudil raziskave na tem področju in leta 1954 je bila demonstracija prototipa angleško-ruskega sistema strojnega prevajanja pisanega besedila ( v nadaljevanju samo besedila v nasprotju s prevajanjem govora ) .
Posledica je bila , da ameriška vlada ni bila več pripravljena financirati raziskav s tega področja , delo so nadaljevale le redke skupine zunaj ZDA .
V sedemdesetih so se vendarle zgodili nekateri pomembni premiki : zgrajena sta bila Systran za prevajanje besedil med ruščino in angleščino ( za potrebe ameriškega letalstva ) ter Meteo za prevajanje vremenskih napovedi .
V letu 2002 dobimo prvi večji strojni prevajalnik besedil tudi za slovenščino : podjetje Amebis predstavi slovensko-angleški prevajalni sistem Presis ( Romih , Holozan 2002 ) , poskuse statističnega strojnega prevajanja besedil prav tako iz slovenščine v angleščino delajo tudi na Fakulteti za računalništvo in informatiko v Ljubljani in Inštitutu Jožef Stefan ( Vičič , Erjavec 2002 ) .
V poznih devetdesetih pa se povečuje tudi zanimanje za strojno simultano prevajanje govora .
V Sloveniji se v nekaterih znanstvenoraziskovalnih centrih ukvarjajo predvsem z razvojem razpoznave in sinteze slovenskega govora ( sinteza : Vesnicer , Mihelič , Pavešić 2002 ; Šef , Gams , Škrjanc 2002 ; Rojc 2003 , razpoznava : Rotovnik , Sepesy Maučec , Horvat , 2002 ; Kaiser et al. , 2000 ; Sket , Imperl 2002 ; Pozne , Pavešić , Mihelič 2002 ) , o razvoju govorno orientiranega strojnega prevajanja ne zasledimo nobene objave .
Zaključen sistem strojnega simultanega prevajanja govora za slovenski jezik tako še ni bil predstavljen .
Ustrezni jezikovni viri so osnova za izdelavo sistemov strojnega simultanega prevajanja govora , vendar je najprej potreben temeljit premislek o vrsti in velikosti teh virov , o podatkih , ki naj jih vsebujejo , o zagotavljanju njihove kvalitete , o njihovi usklajenosti s podobnimi viri za tuje jezike .
Članek najprej opozarja na razliko med sistemi strojnega prevajanja besedila in sistemi strojnega simultanega prevajanja govora ter na kratko predstavlja pristope k strojnemu simultanemu prevajanju govora ; v osrednjem poglavju ( 3 ) so specificirani jezikovni viri , ki so potrebni za razvoj statističnih sistemov strojnega simultanega prevajanja govora , pri tem se osredotočamo zlasti na tiste vire , ki so v svetu in pri nas pomanjkljivo zastopani .
V poglavju 4 predstavimo jezikovne vire za slovenski jezik , ki smo jih poleti 2003 začeli graditi na Fakulteti za elektrotehniko , računalništvo in informatiko v okviru projekta LC-STAR posebej za razvoj tehnologij strojnega simultanega prevajanja govora , in izpostavimo , v čem se razlikujejo od že obstoječih virov za slovenski jezik , namenjenih za sisteme procesiranja naravnega jezika ( t.i. natural language processing ) .
V poglavju 5 sledi zaključek .
2 SISTEMI STROJNEGA SIMULTANEGA PREVAJANJA GOVORA 2.1 Razlike med strojnim simultanim prevajanjem govora in strojnim prevajanjem besedila Sistemi strojnega simultanega prevajanja govora se v marsikaterem pogledu razlikujejo od sistemov strojnega prevajanja pisanega besedila .
Razlike med govorno orientiranim strojnim prevajanjem in strojnim prevajanjem besedila pa so pogojene tudi z razlikami med pisnim in govorjenim jezikom .
Prvo predstavlja problem v primerih , ko se v jezikih , med katerima prevajamo , zaimek ne ujema , npr. ang. " I saw a cat .
It was crossing the street .
Prečkala je cesto .
Jezikovni viri , namenjeni za razvoj govorno orientiranega strojnega prevajanja , morajo zato izhajati iz govorjenega jezika in ne iz zapisanega besedila .
2.2 Osnovne strategije in pristopi Pristopi k strojnemu simultanemu prevajanju govora so različni in zahtevajo tudi delno različne jezikovne vire za razvoj tehnologije .
V tem poglavju na kratko predstavimo osnovne strategije in pristope .
Naloga modula za transfer je , da abstraktno predstavitev besedila v enem jeziku prenese na abstraktno predstavitev besedila v drugem jeziku .
Take sisteme imenujemo na vedenju temelječi ( ang. knowledge-based machine translation ) .
V zadnjem času so predvsem zaradi večje uspešnosti ( Ney , 2001 ) popularnejši empirični pristopi k strojnemu simultanemu prevajanju govora ( podobni pristopi se uporabljajo tudi za strojno prevajanje besedila ) .
Prvi taki so na primerih temelječi sistemi strojnega simultanega prevajanja govora ( ang. example-based machine translation ) , pri katerih je treba zbrati dvojezični korpus govorjenega jezika z označenim ujemanjem na različnih ravneh ( ujemanje stavkov , besednih zvez ...
Statistični pristop k strojnemu prevajanju skuša na to področje prenesti postopke , ki so bili razviti za razpoznavo govora .
Osnovna pojma pri tem sta jezikovni model in prevajalni model .
Ker v zadnjem času statistični pristopi k strojnemu simultanemu prevajanju govora dosegajo večjo uspešnost kot na pravilih temelječi ( Ney , 2001 ) , se gradijo predvsem viri za razvoj te vrste sistemov .
Jezikovni viri , potrebni za gradnjo teh modulov , se v grobem ločijo na dvoje : tiste , ki so namenjeni za razvoj razpoznave in sinteze govora , ter tiste , ki so namenjeni za razvoj govorno orientiranega prevajanja .
Korpusi govorjenih besedil so ključni predvsem za razpoznavo , za gradnjo jezikovnih modelov , medtem ko je za gradnjo akustičnih modelov potrebno imeti posnete baze izgovarjav s čim večjim in čim bolj razpršenim vzorcem govorcev .
ELRA ponuja velike slovarje za nemščino , francoščino in italijanščino .
Od slovarjev lastnih imen velja omeniti slovarje Onomastica , ki vsebujejo ortografski in fonetični zapis lastnih imen .
Od ostalih govornih baz je prosto dostopen MobiLuz , govorna baza poizvedovanj o letalskih informacijah , ki vključuje tudi fonetični prepis in oblikoslovne oznake ( Gros et al. , 2000 ) .
V raziskovalne namene je mogoče dobiti tudi oblikoslovni slovar slovenskega jezika , ki je nastal v okviru projekta Multext-East ( Internet # 6 ) , ta obsega 15.000 lem .
Ostali jezikovni viri , ki se lahko uporabijo za razvoj sistemov strojnega simultanega prevajanja slovenskega govora , so bolj ali manj narejeni za lastno uporabo v organizacijah , ki so sodelovale pri njihovem nastajanju , so različno obsežni , vsebujejo različne podatke in so različno kvalitetni .
Govorne baze za slovenski jezik so tako še Snabi ( Kačič , 2002 ) , Polidat ( Zoegling Markuš , Kačič , Horvat , 2000 ) , Luz ( Gros , 1996 ) , Gopolis ( Dobrišek et al. , 1998 ) , govorna zbirka vremenskih napovedi ( Žibret , Mihelič , 2000 ) .
Večjega , referenčnega korpusa govorjenih besedil ( eno - , dvo - ali večjezičnega ) za slovenski jezik nimamo , lahko pa zasledimo objavo , ki napoveduje njegovo gradnjo ( Stabej , Vitez , 2000 ) .
Uspešnost prevajanja se ni s pomočjo skladenjskih informacij prav nič povečala , seveda pa je med razlogi za to lahko tudi ta , da sta kitajski in angleški jezik veliko manj pregibna jezika , kot je npr. slovenščina , in bi za pregibne jezike bili rezultati povsem drugačni .
Glavna ovira pri gradnji korpusov govorjenih besedil je zamudna in draga produkcija , saj je zanje mogoče pridobivati besedila samo z ortografskim prepisom govorjenega jezika .
Znana primera takšnega korpusa za angleški jezik sta Brownov korpus in korpus Wall Street Journala , ki sta bila uporabljena tudi za gradnjo nekaterih oblikoslovno in skladenjsko označenih korpusov govorjenih besedil ( npr. Penn Treebank , Susanne ) , vendar sta enojezična , pri strojnem simultanem prevajanju govora pa želimo vsaj dvojezičen korpus govorjenih besedil .
Sicer pa se je večina takih korpusov snemala v manjšem obsegu in ad hoc , za potrebe posameznega sistema strojnega simultanega prevajanja govora .
Pri tem je mogoče prilagoditi dvo - ali večjezične slovarje , ki že obstajajo v elektronski obliki ( npr. Word Dictionary , Comlex , WordNet , za slovenščino elektronski slovarji DZS ) .
Pri tem cilju so se združila velika podjetja , ki se ukvarjajo ( tudi ) z razvojem jezikovnih tehnologij ( Siemens AG , Nokia , IBM , NSC ) , in univerze ( RWTH Aachen , UPC ) .
Kot zunanji partner sodeluje pri projektu tudi Fakulteta za elektrotehniko , računalništvo in informatiko z Univerze v Mariboru , ki v skladu s specifikacijami projekta LC-STAR pripravlja jezikovne vire za slovenski jezik .
Ob obstoječih jezikovnih virih za strojno simultano prevajanje govora ( glej poglavje 3 ) lahko ugotovimo pomanjkanje standardov , saj viri vsebujejo različne informacije , so različno kvalitetni , različno obširni , prilagojeni posameznim jezikom , pogosto so tudi zakodirani različno .
4.1 Slovar za razpoznavo in sintezo govora Nabor besed za slovar za razpoznavo in sintezo govora se deli v osnovi na dva dela : občna in lastna imena .
Področje Podpodročje pisma uredništvom , elektronske komunikacije ( vendar samo v knjižnem jeziku ) Tabela 1 : Področja , po katerih so razdeljena besedila , iz katerih je bil narejen nabor občnih imen .
Področja Tabela 2 : Velikost surovega in čistega korpusa za slovenski jezik .
Ker s korpusom ne zajamemo vseh besed , ki so potrebne za govorno vodene aplikacije , je bil dodatno narejen referenčni seznam 5.700 besed ali besednih zvez , ki se pogosto pojavljajo v teh aplikacijah .
Večbesedni prevodi so bili razcepljeni na posamezne besede , tako smo za slovenščino dobili dodaten seznam 6040 besed , od tega ok .
Ločeno so bila zbrana lastna imena , razdeljena po področjih , kot prikazuje tabela 3.
Področje Tabela 3 : Prikaz razporeditve lastnih imen po posameznih področjih za slovenski jezik v številu vnosov in v odstotkih .
S pomočjo raznih atlasov in telefonskega imenika smo namreč zajeli večino slovenskih zemljepisnih in stvarnih imen ter morali dodati še nekaj najbolj znanih mednarodnih imen podjetij in krajev , da nismo presegli zgornje dovoljene meje , največ 50 % imen iz enega področja .
Posledično je nabor oblikoslovnih oznak , ki sledijo oznaki o besedni vrsti ( te so samostalnik , pridevnik , števnik , zaimek , glagol , pomožni glagol , prislov , predlog , veznik , členek , medmet ) , nekoliko ožji kot pri slovarjih Multext-East in SImlex , vendar so zajete vse pomembne : spol , število , sklon , oseba ipd.
Oblikoslovni oznaki v slovarju sledita podatek o lemi in fonetični prepis besede z abecedo SAMPA ( Zemljak et al. , 2002 ) .
4.2 Slovar in korpus za govorno orientirano strojno prevajanje Kot ugotavljamo v 3.2 , so najredkejši viri za strojno simultano prevajanje govora ustrezni dvo - ali večjezični korpusi govorjenega jezika , saj je gradnja teh izredno dolgotrajna in draga .
Korpus govorjenih besedil bo obsegal 500.000 besed v posameznem jeziku .
V okviru projekta pa bo narejen tudi manjši večjezični slovar na podlagi referenčnega nabora v angleškem jeziku .
Preveden bo v 9 v projekt LC-STAR vključenih jezikov , tudi slovenščino , vsaka beseda bo označena z lemo in besedno vrsto .
4.3 Zagotavljanje kvalitete jezikovnih virov LC-STAR za slovenski jezik Vse slovarje , ki bodo narejeni v okviru projekta LC-STAR , bodo preverili neodvisni strokovnjaki v validacijskem centru ELRE , SPEX-u ( Speech Processing EXpertise centre ) .
SPEX je pripravil orodja , s katerimi se izvede formalno preverjanje leksikonov , CST ( Center for Sprogteknologi ) iz Danske pa bo opravil ročno pregledovanje oblikoslovnih oznak in fonetičnega prepisa ter t.i. končnih naborov .
Dvo - ali večjezičnega elektronskega slovarja fraz s področja turizma , ki bi bil prilagojen za uporabo v jezikovnih tehnologijah , za slovenščino še nimamo , ta vir bo prvi tak .
Pomembna pridobitev za slovenski jezik pa bi bil tudi poravnan večjezični korpus govorjenih besedil za področje posredovanja turističnih informacij , saj tudi tega za slovenščino še nimamo .
5 ZAKLJUČEK V članku razpravljamo o jezikovnih virih , ki jih je potrebno zagotoviti za razvoj sistemov strojnega simultanega prevajanja govora .
Za slovenščino v nekaterih centrih , kjer se ukvarjajo z jezikovnimi tehnologijami , že razvijajo posamezne module , ki so lahko del sistemov strojnega simultanega prevajanja govora ( razpoznava govora , sinteza govora ) , vendar še nikjer ne obstaja zaključen sistem .
V članku ugotavljamo , da je zadnji čas najboljše rezultate dalo statistično strojno simultano prevajanje govora , zato se osredotočamo na jezikovne vire , ki so potrebni za tak pristop .
V osrednjem delu članka ugotavljamo , da lahko jezikovne vire za sisteme strojnega simultanega prevajanja govora ločimo na vire , potrebne za sintezo in razpoznavo govora , ter vire , potrebne za govorno orientirano prevajanje .
Za govorno orientirano prevajanje je največji problem zagotoviti dovolj velike dvo - ali večjezične poravnane korpuse govorjenih besedil , saj je gradnja teh izredno dolgotrajna in draga .
Za govorno orientirano prevajanje bo zgrajen večjezični slovar 10.000 fraz s področja turizma , ki bo prav tako oblikoslovno označen in fonetično prepisan , obstaja pa tudi možnost za pridobitev večjezičnega korpusa govorjenih besedil ( 500.000 besed , vključeni jeziki so španski , katalonski in angleški ) .
Pomen pridobljenih virov za slovenski jezik je za slovarje zlasti premišljen nabor besed in usklajenost s slovarji drugih , svetovnih jezikov , večjezični slovar fraz in večjezični korpus za področje posredovanja turističnih informacij pa bi bila sploh prva takšna vira za slovenski jezik .
Računalniške tehnologije za prevajanje Povzetek Sodobnemu prevajalcu pomeni računalnik mnogo več kot pisalni stroj .
Prispevek podaja pregled jezikovnih tehnologij in virov za prevajalce od zametkov strojnega prevajanja do programskih orodij , ki so se razvila v zadnjem desetletju , spregovori pa tudi o uporabi korpusov pri prevajanju in vplivu sodobnih informacijsko-komunikacijskih medijev na to področje .
V zaključku orišemo položaj v Sloveniji in nakažemo smernice za učinkovitejše uvajanje teh tehnologij v naš prevajalski prostor , predvsem z oblikovanjem ustreznih študijskih programov .
Razvijanje računalniških tehnologij , ki bi znale ta proces simulirati ali vsaj optimizirati nekatere njegove dele , zato že dolgo predstavlja izziv tako jezikoslovcem kot računalničarjem .
Danes so strojni prevajalniki človeka povsem ali delno nadomestili že v številnih industrijskih vejah , kjer se rutinsko prevajajo določeni enostavni tipi besedil , in pri mnogih prevajalskih nalogah , kjer uporabniku zadošča grobi prevod .
Poznavanje prevajalskih orodij in drugih jezikovnih tehnologij bo v prihodnje tako nujen del prevajalčeve izobrazbe in pogoj za njegovo konkurenčnost .
Ti sistemi vključujejo lastne eno - in večjezične leksikone , programe za morfološko in sintaktično analizo in sintezo , razreševanje večpomenskosti , prepoznavanje večbesednih semantičnih enot in druge kompleksne mehanizme , ki naj bi omogočali avtomatski prevod s čim manj napakami .
Vloga uporabnika pri takih sistemih ni vselej povsem odpravljena , pri interaktivnih sistemih je za razreševanje večpomenskosti predvidena človekova pomoč , skoraj pri vseh sistemih pa je potrebna predpriprava ( pre-editing ) izvirnega besedila in poprava ( post-editing ) rezultatov ( Hutchins , 1992 ) .
Leta 1966 je posebni odbor ameriške vlade ALPAC , ki je imel nalogo ovrednotiti dotedanje rezultate in oceniti možnosti za nadaljnji razvoj , podal znamenito uničujoče poročilo , katerega posledica je bila , da je bila finančna pomoč ukinjena skoraj vsem projektom na tem področju , težišče raziskav pa se je vsaj za naslednje desetletje preselilo v Evropo .
Prvi poskusi so temeljili na t.i. direktnem pristopu , ki razen zelo osnovne morfološke analize ni vseboval drugih modulov za jezikovno analizo in je bilo tako prevajanje bolj ali manj omejeno na zamenjavo posameznih besed s pomočjo dvojezičnega leksikona .
Na podlagi pomanjkljivosti tega pristopa so pri projektu Systran razvili t.i. transferni pristop , ki prevajanje na ravni povedi razdeli v fazo analize , dvojezičnega transfera in sinteze .
Posamezni moduli pri transfernem sistemu so tako zasnovani za določeni par jezikov , pri čemer se v prvi fazi analizira izhodiščna stavčna struktura ( parsing ) , v drugi se ta prevede v ustrezno strukturo ciljnega jezika , v tretji fazi pa se generira ciljna poved .
Žal se je kmalu pokazalo , da stvar ni tako preprosta , zato se je razvoj preusmeril v iskanje medjezikovnih elementov v skupini izbranih jezikov , s čimer je pri izgradnji sistemov za strojno prevajanje mogoče izkoristiti podobnosti med jeziki in se pri odpravljanju napak osredotočiti na razlike ( Hutchins , 1992 ) .
Tako se za razjasnjevanje skladenjske ali leksikalne večpomenskosti uporabljajo vzporedni korpusi , ki računalniku pri vsaki obstoječi negotovost nudijo zbirko primerov iz resničnih besedil , na podlagi katerih se je sistem s pomočjo primerjave frekventnosti sposoben odločiti za prevodno ustreznico .
Strojni prevajalniki so prisotni tudi na internetu , ponekod integrirani v iskalna orodja ( Systran1 v povezavi z Altavisto2 , Langenscheidt T1 Professional3 , Translation Experts4 itd. ) .
V podjetjih , kjer prevajanje deloma ali v celoti poteka strojno , se v produkcijo besedil uvaja t.i. nadzorovani jezik ( controlled language ) , ki z vnaprej definiranim besediščem in stavčnimi strukturami zagotavlja kakovost in terminološko ustreznost strojnih prevodov .
V ta namen so nekateri uporabniki razvili programska orodja za prevajanje besedil v nadzorovani jezik oziroma za preverjanje le-tega pred strojnim prevajanjem .
Za slovenščino uporabnih strojnih prevajalnikov še nimamo , čeprav predstavlja to področje izziv za mnoge , ki se ukvarjajo z jezikovnimi tehnologijami .
Poleg tega , da je slovenščina že zaradi svoje morfološke bogatosti s tega vidika zapleten jezik , pa je mnogo hujša ovira dejstvo , da za slovenščino šele gradimo osnovne jezikovne vire in orodja , ki so za izdelavo strojnega prevajalnika neizogibno potrebni , npr. program za oblikoskladenjsko analizo , dvojezične leksikone , korpus za izdelavo eno - ali dvojezičnega leksikona itd.
Nekaj poskusov izgradnje sistema za strojno prevajanje se je zgodilo na Institutu Jožef Stefan , od komercialnih ustanov pa tu brez dvoma prednjači podjetje Amebis s svojim angleško-slovenskim prevajalnikom Presis , ki je zaenkrat še v eksperimentalni fazi ( Romih , 1998 ) .
V zvezi s strojnim prevajanjem se postavlja vprašanje , ali je ta orodja sploh smiselno razvijati pri nas , saj imajo tuji proizvajalci potrebno znanje in izkušnje že zbrane , po drugi strani pa je pridobivanje lastnih izkušenj na tem področju pomembno zaradi morebitnega sodelovanja z drugimi v bodoče , kar je bil pri podjetju Amebis tudi odločilni argument za razvijanje lastnega sistema .
PROGRAMSKA ORODJA ZA RAČUNALNIŠKO PODPRTO PREVAJANJE Programi za strojno prevajanje prevajalce v nekaterih specifičnih segmentih sicer že nadomeščajo , za veliko večino prevajanih besedil pa še vedno velja , da obstoječa orodja ne morejo izdelati zadovoljivih prevodov oziroma bi bila predpriprava besedil in poprava rezultatov strojnega prevajanja mnogo preveč zamudna .
Stopnja ujemanja oziroma podobnosti je navadno izražena v odstotkih , prag ujemanja pa lahko uporabnik nastavi sam .
Primer:5 Prevodna enota v pomnilniku prevodov : Repairs must be made by trained fitters only .
Ker pomnilnik prevodov nima vgrajenih modulov za morfosintaktično analizo prevodnih enot , ampak je sposoben prepoznavati podobnost le na ravni besed ali besednih nizov , je teoretično uporaben za vse jezikovne pare , praktično pa za vse jezike , za katere je zagotovljena znakovna podpora .
Dejanska uporabnost pomnilnikov prevodov je v veliki meri odvisna od značilnosti besedil , ki jih želimo prevajati , saj temelji na predpostavki , da se v določenih vrstah besedil stavki , besedni nizi ali posamezni izrazi v bolj ali manj nespremenjeni obliki ponavljajo .
To velja predvsem za nekatere besedilne vrste iz družine tehničnih in strokovnih besedil , na primer navodila za uporabo , tehnične opise , nekatera pravna besedila itd.
Poleg t.i. faktorja ponavljanja na učinkovitost dela s pomnilnikom prevodov vplivajo še drugi dejavniki v okviru besedila in izven njega , npr. povprečna dolžina prevodnih enot , obseg prevajalskega projekta ( dolžina besedila ) , velikost , število in kakovost terminoloških bank in pomnilnikov prevodov , ki jih imamo na razpolago pred prevajanjem , ipd.
Dejanska uporabnost tega orodja je tako močno odvisna od narave prevajalskega dela oziroma od značilnosti besedil , ki jih prevajamo .
Program s pomnilnikom prevodov je lahko integriran v urejevalnik besedil ( Word , WordPerfect ) , lahko pa ima lastno delovno namizje , v katerega uvozimo dokument , ki ga želimo prevesti .
Programi za gradnjo , vzdrževanje in izmenjavo terminoloških bank Vsi strokovni in tehnični prevajalci se vsakodnevno srečujejo s termini , ki jih v splošnih slovarjih ni najti , pogosto pa tudi v specialnih in področnih slovarjih ne .
Večina strokovnih in znanstvenih področij se danes razvija tako hitro , da novih izrazov slovaropisje ne more spremljati .
Prevajalec ali prevajalski team si zato pogosto ustvarja lastne terminološke glosarje ali banke , ki naj bi pomagale pri zagotavljanju terminološke enotnosti vsaj za določeni prevajalski projekt , če že ne za celo stroko .
V ta namen so na voljo številna programska orodja , s katerimi je mogoče terminološke vnose strukturirati , posodabljati , povezovati med seboj in po njih iskati .
Standardni terminološki vnos je sestavljen iz številnih polj ( Arntz / Picht , 1995 : 239 ) , ki določeni termin ustrezno opredeljujejo , npr. izvirni termin , definicija , primer iz besedila in vir , klasifikacijski ključ , prevodi , sinonimi in antonimi , grafični prikaz itd.
Pri računalniških programih za gradnjo terminoloških bank se polja pri vnosu v grobem delijo na glavo vnosa , kamor so shranjeni upravni podatki ( datum vnosa , ime vnašalca , datum zadnje spremembe , ime spreminjevalca , zaporedna številka , podatki o prevajalskem projektu itd. ) , indeksna polja ( termin v različnih jezikih , sinonimi itd. ) , besedilna polja ( definicija , opomba , primer itd. ) in atributna polja ( slovnični kvalifikatorji itd. ) .
Starejši sistemi ( npr. Eurodicautom10 , terminološka banka Evropske komisije ) so sicer omogočali vnašanje številnih jezikovnih , strokovnih in upravnih podatkov , niso pa zagotavljali navzkrižnih povezav med vnosi in posameznimi izrazi ter izmenjljivosti podatkov .
Sodobni programi za gradnjo terminoloških bank omogočajo oblikovanje vnosne sheme v skladu s specifičnimi potrebami prevajalskega projekta , navzkrižne povezave , ki terminološke vnose strukturirajo v semantične mreže , grafične prikaze , v zadnjem času pa so bili oblikovani tudi standardi za zapis tovrstnih podatkovnih zbirk , ki zagotavljajo njihovo izmenjljivost ( MARTIF ; ISO 12200 ) ( Reinke / Schmitz , 1998 ) .
Računalniška zbirka besedil z določenega strokovnega področja je izredno dragocen vir pri gradnji terminoloških bank , če pa imamo na razpolago ustrezna računalniška orodja , je mogoče le-to celo delno ali povsem avtomatizirati .
Z uporabo vzporednih korpusov je mogoče iz izhodiščnega besedila avtomatsko izdelati seznam potencialnih terminoloških izrazov in nato na podlagi vzporednih konkordanc iz ciljnega besedila izluščiti predloge za prevodne ustreznice .
Druga programska orodja Za specifična področja prevajanja se razvijajo tudi posebna orodja , posebej tam , kjer je povpraševanje veliko in je od njih mogoče pričakovati tržne prednosti .
Nekaterim velikim podjetjem se celo splača razvijati lastne programe s pomnilnikom prevodov ali sisteme za upravljanje s terminologijo , ki so prirejena posebnim zahtevam uporabnikov in integrirana v celotni pretok besedil in delovne procese .
V zadnjih letih je ena od najhitreje rastočih vej na področju računalništva lokalizacijska industrija , ki s seboj prinaša tudi ogromne količine prevajalskega dela .
Za prevajanje programskih paketov in njihove dokumentacije se na široko uporabljajo prej omenjeni programi s pomnilniki prevodov v povezavi s terminološkimi bankami , poleg tega pa je na tržišču na voljo nekaj posebnih lokalizacijskih programskih orodij , ki so še posebej koristna pri prevajanju programskih datotek in vsebujejo poleg gornjih komponent tudi validacijske funkcije .
KORPUSI PRI PREVAJANJU Računalniške zbirke besedil ali korpusi so za izdelavo vsakršnih jezikovnih virov - najsi gre za eno - ali dvojezične slovarje , slovnice , črkovalnike , tezavre , terminološke banke ali pomnilnike prevodov – neprecenljivega pomena , saj naj bi odražali stanje določenega jezika ali podjezika v njegovi besedilni manifestaciji v danem času in prostoru .
Za angleški jezik sta takšna npr. British National Corpus11 in The Bank of English12 , za nemški daje korpuse na razpolago projekt Cosmas13 .
Orodje za iskanje konkordanc v korpusu nam tako za vsako poizvedbo prikaže zadetke v korpusu skupaj z neposrednim kontekstom v besedilu , pri čemer je ta lahko omejen na število znakov ali besed levo in desno od iskanega niza , na poved , verz ali odstavek , pri nekaterih konkordančnih orodjih je tudi uporabniško nastavljiv .
Posebej pri prevajanju v tuji jezik nas pogosto zanima , v kakšnem kontekstu je določeno besedo ali frazo mogoče uporabiti , s katerim predlogom se veže , ali jo je mogoče uporabiti figurativno in podobno .
Kadar imamo na voljo vzporedni korpus , lahko s pomočjo vzporednih konkordanc iščemo možne prevodne ustreznice .
Če imamo za iskano besedo v izhodiščnem jeziku na voljo npr. petdeset primerov njene pojavitve v stavku skupaj s prevodom , lahko primerjamo frekventnost posameznih prevodnih ustreznic in njihove kontekste , kar močno olajša izbiro primernega prevoda v našem besedilu .
Uporaba korpusov pri prevajanju se uveljavlja šele zadnja leta , ko je vse več korpusov – vsaj za večje jezike - javno dostopnih preko interneta .
Za lastne potrebe si lahko prevajalec ustvari tudi svoj manjši korpus , ki ga nato uporablja bodisi s pomočjo orodij , ki jih nudijo programi s pomnilnikom prevodov ( tudi ti pogosto omogočajo iskanje konkordanc ) , bodisi s pomočjo enega od zgoraj naštetih orodij .
INTERNET – ZAKLADNICA INFORMACIJ ZA PREVAJALCE Internet je v zadnjem desetletju revolucionarno vplival na številna področja človekovega delovanja in življenja , v zadnjih letih pa postaja tudi vse bolj nepogrešljivo orodje za prevajalce .
Pri prevajanju se prevajalec srečuje z najrazličnejšimi besedili s številnih področij , in prevajalski problemi , ki se ob tem pojavljajo , pogosto niso rešljivi zgolj s pomočjo slovarjev in leksikonov na domači polici ali trdem disku .
Včasih se delo zatakne zaradi nerazumevanja izhodiščnega besedila , zaradi manjkajočega izraza v tujem ali maternem jeziku , pogosto pa si je za kakovosten prevod potrebno razširiti strokovno in jezikovno znanje z določenega področja .
Izmed številnih možnosti , ki jih ta medij prevajalcu ponuja , jih naštejmo le nekaj : Iskanje izrazja Na svetovnem spletu je na voljo množica eno - in večjezičnih splošnih in področnih slovarjev , nekaj tudi slovenskih17 , za tuje jezike pa tudi številne terminološke banke .
Obstaja kar nekaj spletnih strani , ki takšne povezave zbirajo , pri nas je ena takšnih domača stran Društva znanstvenih in tehniških prevajalcev Slovenije18 .
Poleg tega številne strokovne ustanove , ministrstva , podjetja ipd.
Poštni seznami in novičarske skupine Jezikoslovcem in prevajalcem je na voljo več mednarodnih poštnih seznamov ( mailing lists ) in novičarskih skupin ( newsgroups ) , v okviru katerih je mogoče postavljanje vprašanj in obveščanje o novostih stroke .
Preko poštnih seznamov imamo hkrati na voljo rojene govorce vseh mogočih jezikov , ki lahko hitro razrešijo dvome pri prevajanju v tuji jezik .
Nekateri poštni seznami imajo tako veliko članov , da lahko na zastavljeno vprašanje pričakujemo več deset odgovorov že v roku ene ure .
Spremljanje stroke in tehnološkega razvoja Preko interneta lahko prevajalci prebirajo strokovne publikacije in revije , izvejo za dogodke in novosti na področju stroke in spremljajo razvoj na področju jezikovnih tehnologij .
ZAKLJUČEK V Sloveniji si prevajalske tehnologije le počasi utirajo pot v prakso , tako da je položaj težko presojati na podlagi konkretnih izkušenj .
Kar se tiče programskih orodij , se ta postopoma uvajajo v proces prevajanja slovenske zakonodaje in drugih meddržavnih dokumentov na prevajalskem oddelku Službe Vlade RS za evropske zadeve ( Krstič , 1998 ) , vse več pa jih uporabljajo tudi prevajalske agencije .
Nekoliko počasneje se zanje odločajo velika izvozno usmerjena podjetja , pri katerih tudi narava prevajalskega dela ni vselej primerna za uvajanje teh orodij .
Pri razvijanju te osveščenosti imajo pomembno vlogo na eni strani študijski programi za prevajalce , na drugi pa pospešena gradnja in zagotavljanje osnovnih jezikovnih virov in tehnologij v slovenskem prostoru .
Če se na kratko posvetimo prvim , študij prevajanja pri nas nudi pred dvema letoma ustanovljeni Oddelek za prevajanje in tolmačenje na Filozofski fakulteti v Ljubljani .
Znanja s področja prevajalskih tehnologij si študenti pridobijo v okviru predmeta Prevajalska orodja , 19 ki mu je v drugem letniku študija namenjenih 30 ur , v tem času pa skušamo študentom posredovati vsaj površen vpogled v področje .
V skladu s temi naj bi v okviru izobraževanja prevajalcev jezikovnim tehnologijam namenili vsaj 10 odstotkov vseh ur po predmetniku , poleg tega pa naj bi predmetniki vsebovali še možnost izbirnih predmetov za poglobljeno spoznavanje področij , kot so strojno prevajanje , računalniško jezikoslovje , terminologija , korpusno jezikoslovje , osnove programiranja za jezikoslovce , programska orodja za lokalizacijo itd.
Tudi izgradnji jezikovnih virov in tehnologij se v zadnjih letih pri nas posveča precej pozornosti .
V teku je projekt FIDA21 ( Erjavec et al , 1998 ) , v okviru katerega nastaja prvi referenčni korpus za slovenski jezik , Institut Jožef Stefan pa se vključuje v različne evropske projekte , v sklopu katerih se gradijo večjezični jezikovni viri - vzporedni korpusi in leksikoni ( MULTEXT-East , 22 ELAN23 , CONCEDE24 ) .
V Evropi je postalo uvajanje , razvoj , strandardizacija in evalvacija prevajalskih tehnologij ena od prioritet v procesu evropske integracije , to pa bo v naslednjih letih - če želimo nadoknaditi zamujeno - še toliko bolj veljalo za slovenski prevajalski prostor .
Špela Vintar je diplomirala iz nemščine in angleščine na Filozofski fakulteti v Ljubljani z diplomskim delom o uporabnosti programov s pomnilniki prevodov .
RAČUNALNIŠKA ORODJA ZA PREVAJANJE Povzetek Prispevek predstavlja sodobne računalniške tehnologije za prevajanje , predvsem pomnilnike prevodov in terminološke banke .
V prvem delu prispevka na kratko orišemo področje in predstavimo glavne prednosti in pomanjkljivosti teh programov , v drugem delu pa sledi preskus programa ATRIL DejaVu na nekoliko daljšem besedilu s področja farmacije .
I. UVOD Povpraševanje po prevajalskih storitvah že nekaj časa tako pri nas kot v svetu narašča , ta težnja pa je še posebej izrazita v nekaterih gospodarskih dejavnostih , državni upravi in mednarodnih ustanovah .
Razlogov za to je več , v zadnjem desetletju pa so k temu največ doprinesle nove komunikacijsko-informacijske tehnologije , ki omogočajo hitrejše in učinkovitejše povezave med pripadniki različnih jezikovnih skupin , in vse bolj intenzivne gospodarske in politične poteze združevanja v Evropi in po svetu .
Hkrati s povečanim povpraševanjem po prevajalcih se od njih pričakuje in zahteva poleg jezikovne kompetentnosti še strokovno poznavanje področja in terminologije , v zadnjem času pa tudi ustrezna znanja o sodobnih prevajalskih tehnologijah in orodjih .
Kakovostne prevajalske storitve so temu primerno visoko cenjene , tega pa si marsikateri naročnik dolgoročno ne more privoščiti .
Želja po popolni ali delni avtomatizaciji prevajalskega procesa je stara že desetletja — prve resne raziskave na področju strojnega prevajanja ( MT - Machine Translation ) so se pričele v ZDA v zgodnjih petdesetih .
Program s pomnilnikom prevodov navadno poleg tega obsega še orodje za izdelavo in upravljanje terminoloških bank , lahko pa ima vgrajeno tudi komponento za vzporejanje ( alignment ) , s katero pomnilnike ustvarjamo iz že prevedenih besedil , preverjanje črkovanja , strojno prevajanje in drugo .
Program besedilo razdeli v segmente ali enote , vsaka prevedena in potrjena enota pa se zapiše v pomnilnik .
Pri vsaki novi enoti , ki jo začnemo prevajati , program samodejno pregleda zbirko prevodnih enot in nam ponudi eno od treh možnosti : • ni zadetka ( no match ) , kadar se nobena enota v pomnilniku do ( uporabniško ) določenega odstotka ne ujema z novo , • megleni zadetek ( fuzzy match ) , kadar je program našel eno ali več enot , ki so novi do določenega odstotka podobne , • poln zadetek ( exact match ) , kadar se najdena enota popolnoma ujema z novo .
Prednosti , ki jih od uporabe tovrstnih orodij lahko pričakujemo , so naslednje ( glej Heyn , 1997 ) : • boljša časovna učinkovitost — prevajalec se ukvarja le še s prevodnimi enotami , ki jih ni še nikdar prevedel , • doslednost v rabi izrazja — terminološka banka in pomnilnik prevodov skrbita za to , da se izrazje v izhodiščnem in ciljnem jeziku dosledno ujema , • referenčni vir — zanesljiv in urejen pomnilnik prevodov je dragocen jezikovni vir za bodoče delo .
Dejanska uporabnost pomnilnikov prevodov je v veliki meri odvisna od značilnosti besedil , ki jih želimo prevajati , saj temelji na predpostavki , da se v določenih vrstah besedil stavki , besedni nizi ali posamezni izrazi v bolj ali manj nespremenjeni obliki ponavljajo .
Tako imenovani faktor ponavljanja se lahko kaže na različne načine in na različnih ravneh besedila , od njega pa je odvisna tudi presoja najbolj primernega prevajalskega postopka .
Poleg faktorja ponavljanja na učinkovitost dela s pomnilnikom prevodov vplivajo še drugi dejavniki v okviru besedila in izven njega , npr. povprečna dolžina prevodnih enot , obseg prevajalskega projekta ( dolžina besedila ) , velikost , število in kakovost terminoloških bank in pomnilnikov prevodov , ki jih imamo na razpolago pred prevajanjem , ipd.
Program s pomnilnikom prevodov je lahko integriran v urejevalnik besedil ( Word , WordPerfect ) , lahko pa ima lastno delovno namizje , v katerega uvozimo dokument , ki ga želimo prevesti .
PROGRAMI ZA GRADNJO , VZDRŽEVANJE IN IZMENJAVO TERMINOLOŠKIH BANK Vsi strokovni in tehnični prevajalci se vsakodnevno srečujejo s termini , ki jih v splošnih slovarjih ni najti , pogosto pa tudi v specialnih in področnih slovarjih ne .
Prevajalec ali prevajalski team si zato pogosto ustvarja lastne terminološke glosarje ali banke , ki naj bi pomagale pri zagotavljanju terminološke enotnosti vsaj za določeni prevajalski projekt , če že ne za celo stroko .
V ta namen so na voljo številna programska orodja , s katerimi je mogoče terminološke vnose strukturirati , posodabljati , povezovati med seboj in po njih iskati .
Pri računalniških programih za gradnjo terminoloških bank se polja pri vnosu v grobem delijo na glavo vnosa , kamor so shranjeni upravni podatki ( datum vnosa , ime vnašalca , datum zadnje spremembe , ime spreminjevalca , zaporedna številka , podatki o prevajalskem projektu itd. ) , indeksna polja ( termin v različnih jezikih , sinonimi itd. ) , besedilna polja ( definicija , opomba , primer itd. ) in atributna polja ( slovnični kvalifikatorji itd. ) .
Starejši sistemi ( npr. Eurodicautom , terminološka banka Evropske komisije ) so sicer omogočali vnašanje številnih jezikovnih , strokovnih in upravnih podatkov , niso pa zagotavljali navzkrižnih povezav med vnosi in posameznimi izrazi ter izmenjljivosti podatkov .
Sodobni programi za gradnjo terminoloških bank omogočajo oblikovanje vnosne sheme v skladu s specifičnimi potrebami prevajalskega projekta , navzkrižne povezave , ki terminološke vnose strukturirajo v semantične mreže , grafične prikaze , v zadnjem času pa so bili oblikovani tudi standardi za zapis tovrstnih podatkovnih zbirk , ki zagotavljajo njihovo izmenjljivost ( MARTIF ; ISO 12200 ) ( Reinke / Schmitz , 1998 ) .
Programi za gradnjo terminoloških bank so navadno vgrajeni v programe s pomnilnikom prevodov ali so del istega programskega paketa .
Z uporabo vzporednih korpusov je mogoče iz izhodiščnega besedila avtomatsko izdelati seznam potencialnih terminoloških izrazov in nato na podlagi vzporednih konkordanc iz ciljnega besedila izluščiti predloge za prevodne ustreznice .
Po nekaj začetnih neuspehih se je na našo prošnjo za sodelovanje odzvalo ljubljansko podjetje Lek in nam v raziskovalne namene prijazno posredovalo besedilo Vademecum Lekove domače lekarne 1995 v slovenskem izvirniku in angleškem prevodu .
Besedilo v celoti obsega približno 12.700 besed ali 88.000 znakov , gre pa za katalog proizvodov Lekove domače lekarne , v katerem so po kratkem uvodniku opisani posamezni preparati v za zdravila tipični obliki ( sestava , delovanje , indikacije , kontraindikacije , doziranje in uporaba , stranski učinki itd. ) .
Besedilo je po svoji makrostrukturi sicer katalog , a ker je pravzaprav sestavljeno iz manjših , ponavljajočih se enot , je prevladujoča besedilna vrsta vložni listek ( tj. navodila za uporabo zdravil ) .
Besedilo vsebuje precej strokovne terminologije s področij medicine , farmacije in farmakologije , zato bi za njegovo prevajanje potrebovali predvsem dobro terminološko banko , ker pa nas je pri preskusu zanimalo delovanje pomnilnika prevodov , terminološke banke za ta projekt nismo izdelali .
Za izdelavo pomnilnika prevodov smo uporabili dve tretjini besedila v izvirniku in prevodu ( približno 9.000 besed ) , pri čemer nismo vključili uvodnika .
Vsa imena zdravil v naslovih posameznih odsekov so bila tako polni zadetek , ker so bila prevedena že v kazalu .
Pomnilnik je po popravkih rezultatov vzporejanja vseboval 840 prevodnih enot .
Preskus je potekal tako , da smo v programu Deja Vu ustvarili nov prevajalski projekt , določili za izhodiščni jezik slovenščino in ciljni jezik angleščino , ter projektu priredili pomnilnik prevodov , ki smo ga ustvarili prej z vzporejanjem .
To opravilo traja nekaj minut , nato pa se na zaslonu v ciljnih poljih pokažejo vsi polni zadetki , označeni z zeleno , in vsi megleni zadetki , označeni z vijolično barvo .
Preskusno besedilo je obsegalo 375 prevodnih enot .
Zaradi boljše preglednosti rezultatov pri polnih zadetkih v celoti navajamo vse , ki se pojavijo več kot dvakrat , kajti ti deloma sodijo v samo shemo besedilne vrste .
Posebej navajamo tudi vse polne zadetke , ki so rezultat prevedenega kazala ( imena zdravil ) .
Meglenih zadetkov ne navajamo posebej , upoštevani pa so bili le " uporabni " predlogi .
Glede na to , da je bil preskusni pomnilnik prevodov še vedno relativno majhen , je gornji rezultat kar zadovoljiv .
Če bi ob tem prevajalskem projektu uporabljali še kakovostno terminološko banko , bi bilo z uporabo programa s pomnilnikom prevodov mogoče prihraniti približno tretjino časa , ali z drugimi besedami , program bi samodejno z uporabnimi prevodi nadomestil okrog 33% besedila , saj bi v vseh prevodnih enotah brez zadetka nadomestil vsaj strokovne termine , teh pa je precej .
Drugih polnih zadetkov je bilo relativno malo , megleni zadetki pa kljub uporabnim predlogom še vedno terjajo prevajalčevo delo .
Že programska oprema je precejšnja denarna investicija , poleg tega pa je treba zagotoviti ustrezno strojno opremo in infrastrukturo , organizirati izobraževanje delavcev in izdelati povsem novo strategijo upravljanja z besedili in podatkovnimi zbirkami .
To je dolgotrajen in zahteven proces , ki ga pogosto otežuje še nenaklonjenost samih prevajalcev do novih tehnologij .
Če si ob vsem tem trudu podjetje lahko v najboljšem primeru obeta za trideset odstotkov večjo učinkovitost prevajalcev , je to morda prešibak razlog za tako globok poseg v obstoječo prevajalsko rutino .
Tu bi bilo " ročno " primerjanje stare in nove različice dolgotrajen in dolgočasen postopek , če pa imamo od prejšnje različice na razpolago že izdelan pomnilnik prevodov , nas ta samodejno opozori na razlike , ostalo pa opravi sam .
Mnogi uporabniki tovrstne programe uporabljajo pretežno v ta namen .
Po drugi strani pa se je pri nekaterih uporabnikih v tujini — podobno kot pred leti v kontekstu strojnega prevajanja — pojavila težnja , da bi z načrtnim poseganjem v samo produkcijo besedil le-ta napravili bolj primerna za računalniško obdelavo , v tem primeru za prevajanje s pomnilniki prevodov ( Brungs , 1996 ) .
• preobčutljivost za acetilsalicilno kislino in ibuprofen , bolniki z razjedo želodca ali dvanajstnika • Gela Diverin ne smejo uporabljati ljudje , ki so preobčutljivi za ibuprofen , druge nesteroidne antirevmatike , in tisti , ki so nagnjeni k alergijam .
Pri povedih se pojavlja precej različnih izraznih variacij za isti pomen , namreč odsvetovanje : ...
preobčutljivi za sestavine zdravila ...
, ...
, pri znani preobčutljivosti za izdelek ...
preobčutljivi za katerokoli sestavino zdravila .
V. ZAKLJUČEK Programi s pomnilnikom prevodov imajo torej svoje omejitve in zaenkrat ne prinašajo revolucije v vse segmente prevajalskega dela .
Tovrstna orodja najbolje služijo podjetjem ali ustanovam , kjer mnogo prevajalcev prevaja velike količine med seboj sorodnih besedil z določenega — čim bolj ozkega — področja , lahko pa gre tudi za prevajalske agencije , ki trajno sodelujejo z velikimi naročniki .
V takem okolju je možno izkoristiti vse prednosti , ki jih tovrstna orodja ponujajo , npr. da več prevajalcev prevaja isti projekt in preko računalniške mreže gradi en obsežen pomnilnik prevodov in pripadajoče terminološke banke , da se projekt prevaja v več jezikov hkrati , da je mogoč vpogled v napredovanje dela itd.
S pomnilnikom prevodov , ki sodi k prevajalskemu projektu , se spreminjajo klasični odnosi med naročnikom in prevajalcem .
Naročnik lahko zahteva , da se za določeni projekt uporabi določena programska oprema in jo celo posreduje , prevajalec ali prevajalska agencija lahko dejstvo , da uporablja določeni program , predstavi kot konkurenčno prednost , naročnik je prek pomnilnika prevodov " vezan " na izbrani prevajalski team , če mu ta pomnilnika ob končanem projektu ne izroči ; vse to so situacije , ki se pojavljajo v prevajanju kot tržni storitvi in vnašajo globoke spremembe v doslej uveljavljeni pretok besedil .
Prvi pogoj , da je prevajanje s pomočjo teh orodij sploh možno , pa je posredovanje izvirnega besedila v elektronski obliki , kar po ugotovitvah prevajalcev pri nas in drugod še zdaleč ni samoumevno .
Za večje evropske jezike je zanimiva integracija programov s pomnilnikom prevodov s sistemi za strojno prevajanje .
Tako program za vse prevodne enote , za katere ni zadetka v pomnilniku prevodov , predlaga strojni prevod .
Novi pristopi se obetajo tudi pri iskanju meglenih zadetkov , predvsem pri definiciji prevodne enote in iskanja zadetkov na podpovedni ravni .
Sodobne prevajalske tehnologije kljub svojim omejitvam prinašajo opazen napredek vsaj v določenem segmentu prevajalskega dela , se pravi pri prevajanju repetitivnih besedil s tehničnih , znanstvenih , pravnih in drugih področij , to pa je hkrati tudi tisti segment , v katerem potrebe po prevodih najhitreje rastejo .
Ključne besede : besedna skica , označenost korpusa , sestava korpusa , slovnična razmerja , statistični izračuni Besedne skice za slovenščino .
1 Uvod Uporaba korpusov za opis jezika v leksikografske in druge raziskovalne namene tudi v slovenskem prostoru ni več novost , kar potrjuje vedno več študij , ki obravnavajo to tematiko .
Korpus nudi obilico jezikovnih podatkov , vendar potrebujemo za njihovo obdelavo in interpretacijo zmogljiva ter » pametna « orodja .
Od teh med dve bistveni funkciji sodijo Konkordance in pa Besedna skica , ki je tudi predmet tega prispevka .
2.1 Sestava besedne skice Slika 1 prikazuje del besedne skice za lemo ogenj .
Iz prvega stolpca z oznako a _ modifier je mogoče razbrati , da je iztočnica ogenj v korpusu FidaPLUS 8.961-krat rabljena kot samostalniško jedro v kombinaciji s pridevnikom .
Stolpec z oznako is _ obj4 vsebuje glagole , ob katerih se ogenj pojavlja kot samostalnik v tožilniku ( npr. zakuriti ogenj ) .
Podobno stolpec is _ subj navaja glagole , ki so najpogosteje rabljeni ob iztočnici v imenovalniku , a ker je zgornja meja absolutne pogostosti v želji po bolj strnjeni besedni skici nastavljena na 50 pojavitev , imamo le en glagol , ki presega to mejo – goreti ( ogenj gori ) .
V stolpcu prec _ prep so našteti najpogostejši predlogi , ki se pojavljajo ob iztočnici ogenj .
Številčne vrednosti desno od kolokatorjev pomenijo naslednje : številka v modri barvi pove absolutno pogostost kolokatorja ob izbrani iztočnici , številka desno od nje v črni barvi pa izpostavljenost posameznega kolokatorja .
Pri razbiranju in interpretaciji podatkov , pridobljenih z besedno skico , je poleg poznavanja same uporabe orodja zelo pomembno tudi , da uporabnik pozna ozadje njegovega delovanja , zato bodo v nadaljevanju predstavljeni dejavniki , ki odločilno vplivajo na dobljene rezultate : besedilna sestava korpusa , naloženega v SkE , označenost korpusa in slovnična razmerja , definirana v datoteki s slovničnimi razmerji .
Ta razmerja so definirana glede na zakonitosti v konkretnem jeziku , namen jezikovnih poizvedovanj ter nabor oznak , uporabljenih pri označevanju posameznega korpusa .
Slovnico , ki je osnova za izdelavo besednih skic za slovenščino na 621-milijonskem korpusu FidaPLUS , je leta 2006 napisal Simon Krek ( Krek in Kilgarriff 2006 ) .
Kot primer slovničnega razmerja za korpus FidaPLUS navajamo recipročno zvezo pridevnika in samostalnika : * DUAL = a _ modifier / modifies 2 : [ tag = " P. * " ] [ tag = " P. * " | word = " , " | word = " se " | word = " si " ] { 0 , 5 } 1 : [ tag = " S. * " ] Razmerje je sestavljeno iz elementov , ki se začnejo in končajo z oglatimi oklepaji [ ] , predstavljajo pa potencialne pojavnice v realnem besedilu .
Zgoraj opisano razmerje predvideva naslednjo situacijo : na prvem mestu se mora pojaviti pridevnik v katerikoli obliki , sledi mu lahko ( ali pa tudi ne ) do pet mest , na katerih se pojavijo pridevnik , vejica , se ali si , na koncu pa se mora nahajati samostalnik , ponovno v katerikoli obliki .
Recipročnost razmerja ( DUAL ) pomeni , da če je npr. naša iztočnica pridevnik ( št. 2 ) , bodo v skici prikazani vsi samostalniški kolokatorji ( št. 1 ) , in obratno , če nas zanima samostalnik , bodo prikazani vsi pridevniški kolokatorji .
Rezultat tega razmerja je en stolpec besedne skice za posamezni samostalnik ali pridevnik ( iskano lemo ) , ki za samostalniško lemo poda najpogostejše pridevnike , ki jo modificirajo , za pridevniško lemo pa najpogostejše samostalnike , ki ji sledijo .
Slika 2 : Vzorec rezultatov za recipročno razmerje pridevnik-samostalnik .
Na dan pisanja tega članka je v slovenski SBS definiranih 18 slovničnih razmerij , osem izmed teh je recipročnih.2 Trenutno je v pripravi nova verzija SBS , ki bo obsegala več slovničnih razmerij ( vključena bodo recimo razmerja z vezniki ) , tokrat s slovenskimi poimenovanji , in izboljšavami , ki so se pokazale za smiselne pri delu s SkE v začetni fazi gradnje leksikalne baze za slovenščino v okviru projekta Sporazumevanje v slovenskem jeziku.3 Kot smo že omenili , je priprava SBS jezikovnotehnološki postopek , ki ni vezan samo na poznavanje tipičnih jezikovnih pojavov v konkretnem jeziku in nabor oznak , uporabljenih v posameznem korpusu , temveč je pri tem zelo ali celo predvsem pomemben namen , za katerega želimo orodje oz. funkcijo izrabljati .
Večina slovničnih razmerij v slovenski SBS , tako trenutni kot nastajajoči , je naravnana izrazito leksikografsko , se pravi za namen izdelave leksikalne baze za slovenščino .
Slovnična razmerja so torej definirana glede na vnaprej določene vzorce , za katere predpostavljamo , da so v ( slovenskem ) jeziku tipični in posledično zanimivi za izdelavo slovarjev in podobnih leksikografskih del .
Kot primer manj vnaprej določuječega pristopa , navajamo del skice iz poskusnega 20-milijonskega dela korpusa FidaPLUS za lemo mesto ( Slika 3 ) .
V ozadju te skice je slovnica , ki je nastala po vzoru slovaške slovnice besednih skic , ki jo je napisal Vladimir Benko in jo je Simon Krek poskusno prilagodil za slovenščino .
Primerjava razmerij , opredeljenih na osnovi slovaške SBS , z razmerji iz slovenske SBS , ki je trenutno v rabi za 621-milijonski korpus FidaPLUS , pokaže , da so v slovaškem primeru razmerja zastavljena ohlapneje .
Iskani kolokatorji namreč niso ločeni glede na besedne vrste ali druge slovnične / jezikovne oznake , ampak so v skupni stolpec združeni samo glede na mesto pojavljanja v relaciji do iskane leme .
Slika 3 : Del skice za lemo mesto .
Na sliki 3 so v levem stolpcu prikazani izrazi , ki se pojavljajo pred povezavo predloga za in iskane leme mesto , v desnem pa izrazi , ki se pojavljajo med predlogom v in iskano lemo mesto .
Iskana lema je zmeraj označena z oznako X , njena sobesedilna okolica , ki jo želimo prikazati , pa z oznako Y. Ker razmerje ni omejeno na nobeno od besednih vrst , se med njimi pomešano znajdejo samostalniki , glagoli , pridevniki , členki , vezniki , predlogi in zaimki .
Ker se poskuša oddaljiti od obstoječih zakonitosti in predvidevati čim manj , tak pristop po eni strani pušča odprtih več možnosti , da odkrijemo obrobnejše , morda nepričakovane pojave v jeziku , po drugi strani pa je prav zaradi tega potrebne več pozornosti in časa za pregled in interpretacijo množice nediferenciranih jezikovnih podatkov , zaradi česar je v praksi , predvsem v splošnoleksikografskih projektih , kjer so časovni in finančni okviri jasno zastavljeni , tak pristop manj primeren .
3.2 Označenost korpusa Za iskanje in povezavo besed v slovnična razmerja , ki so nato predstavljena v besednih skicah , mora SkE vedeti , kako najde besede , ki se nahajajo v nekem razmerju .
FidaPLUS je bila označena avtomatsko , kar s seboj prinaša določen odstotek napak , saj je slovenščina zaradi obremenjene morfologije , pri kateri prihaja do prekrivnosti končnic , zelo težaven jezik za označevanje.4 Posledica tega je pojavljanje napak v besednih skicah , kjer se lahko v nekem razmerju znajdejo izrazi , ki tja ne sodijo ( Slika 4 ) .
Primeri na sliki 4 prikazujejo napačno uvrščene kolokatorje , ki so posledica napačno pripisane leme in oblikoskladenjske oznake , saj je samostalniški kolokator prepoznan kot glagol in je tudi umeščen v stolpec z razmerjem pridevnik-polnopomenski glagol .
Naslednji izsek besedne skice za glagol pobirati ( Slika 5 ) prikazuje razmerje samostalnik v imenovalniku-polnopomenski glagol , v katerem želimo najti osebke , ki se tipično pojavljajo z zadevnim glagolom .
Na vrhu zadetkov smo označili kolokatorja , ki sta sicer pravilno lematizirana , vendar napačno označena kot samostalnika v imenovalniku namesto kot samostalnika v tožilniku , kar potrdijo konkordance v spodnjem oknu .
b ) samostalnik srednjega spola je napačno označen kot glagolska oblika v tretji osebi srednjega spola ( Kakovost slike je osnovno merilo pri nakupu digitalnega fotoaparata .
) ; d ) samostalnik moškega spola v tožilniku je napačno označen kot samostalnik moškega spola v imenovalniku ( Prispevek pobira javno komunalno podjetje …);
Orodje SkE sicer prepoznava tudi odvisnostnoskladenjsko razčlenjeni korpus , za kakršnega je mogoče napisati še kompleksnejšo in s tem natančnejšo SBS od trenutno veljavne za slovenščino , ki upošteva le oblikoskladenjske oznake ( Krek in Kilgarriff 2006).6 V tem primeru so tudi rezultati , dobljeni z besedno skico , pravilnejši , saj so prav odvisnostnoskladenjska razmerja ta , ki bi jih v besedne skice radi zajeli , vendar trenutno nimamo dovolj natančnega sredstva za njihovo razločevanje .
3.3 Besedilna sestava korpusa Ena temeljnih reči , ki najbolj vpliva na to , kakšne rezultate bo dala besedna skica , je besedilna sestava korpusa , saj analiza ne more pokazati ničesar drugega kot preoblikovano sliko tega , kar je bilo vanjo poslano .
Pod besedilno sestavo razumemo vrste besedil , ločene glede na zvrst ( leposlovje , stvarna besedila ) in prenosnik ( govorno , časopis , internet itd. ) , njihov obseg ter razpršenost virov znotraj posamezne vrste besedil .
FidaPLUS kot referenčni korpus vsebuje zelo raznolika besedila , med njimi tudi televizijske sporede , male oglase ipd.
Tovrstna besedila zaradi svoje ponavljajoče se narave vsebujejo veliko istovrstnih zadetkov , poleg tega pa v njih tudi primanjkuje konteksta , ki bi pomagal razdvoumiti , zaradi česar so včasih rezultati , dobljeni iz takšnih besedil , manj relevantni za splošnoleksikografske namene .
Slika 6 : Prikaz tipičnih kolokatorjev iz televizijskih sporedov.Poleg zgoraj omenjenega na dobljeno skico odločilno vpliva tudi odločitev snovalcev korpusa glede velikosti posameznih besedilnih komponent v korpusu ( npr. knjižni proti časopisnemu prenosniku ) .
Situacija v tem primeru je seveda skrajna , saj imamo na eni strani le podkorpus vseh časopisnih besedil iz korpusa FidaPLUS , na drugi strani pa vsa revijalna besedila iz korpusa , referenčni korpus pa je kombinacija obojega .
Kljub temu je razvidno , da z izdelavo dveh podkorpusov oz. tudi z manj izrazito spremembo deležev v referenčnem korpusu sprožimo spremembe v razporeditvi kolokatorjev v besednih skicah .
Televizijski sporedi se namreč pogosteje pojavljajo v časopisnem kot pa v revijalnem gradivu , o čemer pričajo podatki o izvoru levo od konkordanc na sliki 6. 3.3.1 Razpršenost virov Kot že omenjeno , je za to , da dobimo relevantne podatke , pomembno tudi , da so viri čimbolj razpršeni .
Besedna skica ne nudi podatkov o razpršenosti virov , v katerih se pojavljajo kolokatorji , je pa ta podatek mogoče najti v konkordancah .
Za kolokator kredit ( Slika 8 ) , ki je del razmerja samostalnik-predlog " glede " , ob vpogledu v konkordance ugotovimo , da vsi zadetki izhajajo iz enega vira .
Slika 8 : Prikaz kolokatorja in konkordanc iz istovrstnih virov .
3.4 Statistično razvrščanje zadetkov v besedni skici Poleg besedilne sestave in označenosti korpusa , na kar kot uporabniki nimamo vpliva , je za rezultate , ki jih dobimo v besedni skici pomembno tudi to , kakšne nastavitve izberemo pri uporabi orodja .
Vsakič ko želimo izdelati besedno skico , izberemo tudi možnosti prikaza , kar presega zgolj število izpisanih kolokatorjev ipd. ( gl .
Z besednih skic za lemo obdobje , okrajšanih na 16 kolokatorjev , je v slovničnih razmerjih samostalnik-samostalnik v rodilniku in pridevnik-samostalnik mogoče razbrati , da se skici precej razlikujeta – s črnimi kvadratki so označeni kolokatorji , ki jih skica pri drugem statističnem izračunu ne pokaže , s črtami so povezani kolokatorji , pri katerih je porazdeljenost precej različna .
Splošni način njihove uporabe in zlasti njihova neprecenljiva vrednost pri leksikografskem delu sta bila v preteklosti že opisana , zato smo v tem prispevku predvsem opozorili na uporabniku manj očitne vidike in ozadje njihovega delovanja , ki pa pomembno vplivajo na dobljene rezultate .
Dobljeni rezultati so nadalje odvisni od načina obdelave podatkov , kjer igra ključno vlogo slovnica besednih skic , in čisto na koncu tudi od uporabnika samega , ki na rezultate vpliva z izbiro nastavitev orodja .
Neizpodbitno dejstvo je namreč še vedno to , da kljub neizmernemu delu , ki ga z uporabo tega in podobnih orodij za nas opravi računalnik , za vnosom podatkov , potrebnih za nastanek besednih skic in jezikovnotehnoloških aplikacij nasploh , še zmeraj stoji človek , kar pomeni , da to , kar surovim jezikovnim podatkom pripišemo , tudi ( v nekoliko spremenjeni obliki ) iz njih dobimo nazaj .
Dostop 8. 7. 2009. 2 Več o drugih vrstah razmerij glej v Krek in Kilgarriff 2006. 3 www.slovenscina.eu 4 O tem , da je slovenščina v primerjavi z angleščino težaven jezik za označevanje , priča tudi dejstvo , da slovenski nabor oblikoskladenjskih oznak obsega okoli 2.000 elementov ( Erjavec in Krek 2008 : 51 ) .
Za primerjavo , standardni nabor britanskega nacionalnega korpus vsebuje okoli 160 oznak ( Označevalni sistem CLAWS ) .
6 Za korpus FidaPLUS , kot je v SkE , velja nabor oznak MULTEXT-East v.3 , v prihodnje pa bo uporabljen izboljšani nabor oznak JOS v kombinaciji z natančnejšim označevalnikom ( Erjavec in Krek 2008 ) .
7 V novem referenčnem korpusu slovenščine , ki nastaja v okviru projekta Sporazumevanje v slovenskem jeziku , so besedilna razmerja zastavljena drugače , predvsem je načrtovan manjši obseg časopisne komponente ( Logar Berginc in Šuster 2009 ) .
JEZIKOVNE TEHNOLOGIJE OD ŠTUDIJA DO ZAPOSLITVE Prispevek opozarja na nujnost vsebinske prenove univerzitetnih študijskih programov jezikoslovnih smeri z vidika njihove zaposlitvene relevantnosti v dobi informacijske družbe , na čemer temelji tudi bolonjski proces .
Prvi korak , prehod na novo dvostopenjsko strukturo študija in kreditni sistem , je v Sloveniji z Zakonom o spremembah in dopolnitvah Zakona o visokem šolstvu že zagotovljen.1 V kvalitativnem pogledu pa se večina visokošolskih ustanov šele zdaj spopada z najpomembnejšim delom prenove študija , s katero morajo zagotoviti tako akademsko kot zaposlitveno ( profesionalno ) relevantnost obeh študijskih stopenj , to 1 » Študijske obveznosti so v študijskih programih ovrednotene s kreditnimi točkami po ECTS .
Visokošolski strokovni študijski programi in univerzitetni študijski programi obsegajo od 180 do 240 kreditnih točk in trajajo tri do štiri leta .
Magistrski študijski programi obsegajo 60 do 120 kreditnih točk in trajajo eno do dve leti , vendar tako , da na istem strokovnem področju skupaj s študijskim programom prve stopnje trajajo pet let .
Magistrski študijski programi , ki obsegajo 60 kreditnih točk , omogočajo študentom , ki so na prvi stopnji končali študij , ovrednoten s 180 kreditnimi točkami , dodatni letnik , tako da si skupaj pridobijo 120 kreditnih točk , potrebnih za dokončanje magistrskega študijskega programa .
Angleška skupina za povečevanje zaposljivosti študentov ESECT ( angl. Enhancing Student Employability Coordination Team ) jo opredeljuje kot prepletanje posameznikovih sposobnosti , razumevanja in osebnih lastnosti , ki diplomantom povečujejo možnosti za zaposlitev in doseganje uspešnih rezultatov pri delu , s čimer koristijo sebi , delovnemu kolektivu , družbi in gospodarstvu .
Bolonjske kurikularne strategije se zato opirajo na koncept učnih izidov oz. dosežkov ter predmetnospecifičnih in splošnih kompetenc ( zmožnosti in sposobnosti ) diplomanta .
Klasične kompetence že dolgo ne zadoščajo več za uspešno poklicno pot po zaključku študija , ena nepogrešljivih pa vse bolj postaja zmožnost uporabe informacijsko-komunikacijskih tehnologij in sistemov na različnih strokovnih področjih ( Merila za akreditacijo 2004 , 7. Čl. ; Razdevšek Pučko 2004 ) .
Jezikoslovje2 pri tem ni izjema , saj smo v zadnjih letih priča velikemu razmahu najrazličnejših jezikovnih tehnologij in sistemov , ki so se v stroki že uveljavili ali se pravkar uveljavljajo in močno vplivajo na naravo dela ter na spreminjanje kadrovskih potreb delodajalcev .
Če želimo , da bi diplomanti jezikoslovnih študijev pri svojem delu znali uspešno uporabljati sodobne jezikovne tehnologije , je » njihovo uporabo treba vključevati v šolske učne načrte , jo poučevati , pojasnjevati in spodbujati « ( Stabej 2003 : 15 ) .
Prispevek analizira obstoječe jezikoslovne študijske programe z vidika jezikovnotehnoloških vsebin in njihovo vključenost v študij primerja z opredeljenimi cilji študija in likom diplomanta posameznih študijskih smeri .
Glede na to , da tako z uveljavljenostjo jezikovnih tehnologij kot tudi s tržnimi zahtevami po poznavanju dela z njimi močno izstopa prevajalski poklic , podrobneje predstavljamo razmere v prevajalskem okolju in opisujemo uporabno vrednost prevajalskih orodij v delovnem procesu ene od slovenskih prevajalskih agencij .
2 Pouk jezikovnih tehnologij v obstoječih jezikoslovnih študijskih programih Pregled nepedagoških jezikoslovnih študijskih programov na treh slovenskih univerzah in politehniki v Novi Gorici pokaže , da je v Sloveniji mogoče izbirati med študijem splošnega in primerjalnega jezikoslovja , slovenistike , anglistike in amerikanistike , germanistike in skandinavistike , romanistike , slavistike , klasične filologije in prevajalstva .
Izobraževalni cilji , opredeljeni v študijskih programih slovenistike na FF UL , slovenistike na PNG , slovenistike na Fakulteti za humanistične študije UP in prevajalstva na PF UM , so usposabljanje študentov za raziskovanje jezika ( in literature ) , za delo na različnih področjih uporabnega jezikoslovja ( leksikologije in leksikografije , lektoriranja , prevajanja , poučevanja jezika idr. ) in kulture ( novinarstva , publicistike , založništva , knjižničarstva , dokumentaristike , gledališke dejavnosti , animacije na različnih področjih kulture , ljubiteljske kulture in turizma ) , prevajalski programi pa si prizadevajo , da bi študenti pridobili osveščenost , znanja in zmožnosti , potrebne za uspešno medkulturno komunikacijo , prevajanje in tolmačenje .
Med zaposlitvene možnosti diplomantov prevajalskih smeri študijski program prišteva opravljanje prevajalskega dela v podjetjih in državnih ustanovah ali v svobodnem poklicu in pri mednarodnih organizacijah .
Pri pregledu jezikoslovnih študijskih programov smo ugotovili , da jih le peščica ponuja vsebine s področja jezikovnih tehnologij , pa še te so večinoma zelo skromne in se pojavljajo v obliki izbirnih predmetov ( glej tabelo 1 ) .
Podobno se lahko študentje prevajanja na mariborski Pedagoški fakulteti odločijo za računalniško podprto delo z besedili , ki ga prav tako v prvem letniku poslušajo v obliki predavanj ( 15 ur ) in vaj ( 15 ur ) ( študijski program prevajalstva na PE UM ) .
Nekoliko več vsebin o jezikovnih tehnologijah zagotavlja študij slovenistike na novogoriški politehniki , ki študentom prvega letnika s predmetom uvod v računalništvo za sloveniste v obliki predavanj ( 15 ur ) in vaj ( 15 ur ) približa računalnik in programsko opremo ( Windows , MS Word in MS Excel ) in jih skuša navdušiti za njegovo uporabo pri študiju in kasnejših potrebah pri analizi besedil v jezikoslovju .
V drugem letniku študentje v Novi Gorici pri jezikovnih tehnologijah v 30 urah predavanj in 30 urah vaj spoznajo področje jezikovnih tehnologij in računalniškega jezikoslovja ( obdelavo naravnega jezika , korpusno jezikoslovje , iskanje jezikovnih informacij in avtomatsko prevajanje ) ( študijski program slovenistike na PNG ) .
Področje jezikovnih tehnologij je še najbolje zastopano na Oddelku za prevajalstvo Filozofske fakultete v Ljubljani .
V okviru 30 ur trajajočega uvoda v terminologijo študentje spoznajo korpuse na internetu , arhive prevedenih besedil , orodja za iskanje terminologije , korpusna orodja ( MonoConc , ParaConc in Wordsmith Tools ) , preizkusijo se v gradnji vzporednih korpusov ( DejaVu Align ) in izdelajo terminološko bazo ( MS Excel , MultiTerm in TermStar ) .
Uporabo specializiranih jezikovnih aplikacij študentje prevajalstva spoznavajo tudi v okviru izbirnih modulov , kot so podnaslavljanje , sinhronizacija in tolmačenje za prevajalce ( študijski program prevajalstva FF UL ) .
Študijski program Predmet Letnik Št. ur Univerza v Ljubljani , Filozofska fakulteta slovenistika računalništvo za filologe 1. 30 prevajalstvo prevajalska orodja 2. 30 baze podatkov 3. 60 uvod v terminologijo 3. 30 lokalizacija 4. 60 Univerza v Mariboru , Pedagoška fakulteta prevajalstvo računalniško podprto delo z besedili 1. 15+15 Politehnika Nova Gorica slovenistika uvod v računalništvo za sloveniste 1. 15+15 jezikovne tehnologije 2. 30+30 Tabela 1 : Pregled študijskih vsebin s področja jezikovnih tehnologij v Sloveniji .
Zastavlja se vprašanje , kako so diplomanti teh študijskih programov usposobljeni za opravljanje dela , za katero so se izšolali , in kako zanimivi so za trg delovne sile .
3 Kadrovske potrebe po jezikoslovcih Delovna okolja , v katerih se jezikoslovci po končanem študiju zaposlujejo , se med seboj precej razlikujejo .
Za jezikovne službe v državnih in mednarodnih institucijah in velikih podjetjih je značilno , da delo jezikoslovcev , ki so v njih zaposleni , ni samostojna dejavnost , temveč sodi v končni del kompleksnega dokumentacijskega cikla , v katerem posamezni jezikoslovci opravljajo različne vloge in si delo delijo .
Za tako delovno okolje je značilna pripravljenost delovne organizacije za razvoj znanja in sposobnosti zaposlenih , zato imajo ti praviloma precej možnosti za dodatno izobraževanje ( Höge 2002 ) .
Založbe in prevajalske agencije z velikim številom zaposlenih so bolj podobne jezikovnim oddelkom v velikih podjetjih ali institucijah , tiste s pretežno zunanjimi sodelavci pa opravljajo funkcijo posrednika za samostojne prevajalce , lektorje , oblikovalce besedil ipd.
Delovni ritem v tem okolju je izrazito projektno naravnan in vključuje potegovanje za posel , pripravo projekta , dogovarjanje za obseg dela in ceno zanj ter natančno določene roke za dokončanje projekta .
Upoštevali smo zgolj oglase , v katerih je bila zahtevana izobrazba jezikoslovne smeri , nismo pa vključili oglasov za pedagoške poklice , kot so učitelji in profesorji jezika v osnovnih in srednjih šolah ter na zasebnih jezikovnih šolah .
Državne ustanove , mednarodna podjetja z jezikovnimi oddelki in založbe so imeli leta 2004 do kandidatov podobne zahteve kot leta 1999 , močno pa so se spremenile zahteve mednarodnih organizacij ( organov EU ) in prevajalskih agencij .
Zbrani oglasi kažejo , da so se največje spremembe v zadnjih petih letih pojavile v prevajalskem poklicu , saj predvsem prevajalske agencije in mednarodne institucije ( organi EU ) povprašujejo po prevajalcih , ki znajo uporabljati razna orodja za elektronsko komunikacijo ( Lotus Notes ) in za računalniško podprto prevajanje ( Translator ’ s Workbench , MultiTerm , SDLX in Transit ) .
Evropska unija je zaradi ogromne količine prevodov že vrsto let eden najpomembnejših uporabnikov najrazličnejših prevajalskih tehnologij , prevajalske agencije pa se zanje v zadnjem času vse bolj odločajo predvsem zaradi ohranjanja konkurenčne prednosti .
Med 50 zadetki so bile domače strani 16 samostojnih prevajalcev , ki ne iščejo sodelavcev ( uporabo CAT oglašujejo trije ) , 5 podjetij , ki se ukvarjajo predvsem z drugimi dejavnostmi in v svojo ponudbo vključujejo tudi prevajalske storitve ( uporabe CAT ne oglašujejo ) , 14 jezikovnih šol , ki prevajalske storitve ponujajo kot svojo dopolnilno dejavnost ( uporabo CAT oglašujeta dve ) , in 15 prevajalskih agencij in podjetij , ki se ukvarjajo predvsem s prevajanjem in lokalizacijo ( prilagajanje računalniških programov določenemu jezikovnemu in kulturnemu okolju ) .
Med njimi jih deset na svojih spletnih straneh oglašuje redno uporabo sodobnih računalniških tehnologij in orodij za računalniško podprto prevajanje in lokalizacijo , in sicer Trados , StarTransit , SDLX , DejaVu , IBM TM2 in CorelCatalist ( naštevamo jih po abecedi : http://www.amidas.si , http://www.biro2000.si , http://www.euro-translation.com , http://www.icom.si , http://www.iolar.com , http://www.lingo.si , http://www.lomac.net , http://www.mostovi-prevajanje.com , http://www.prevajanje.net in http://www.skrivanek.si ).
Iz zbranih oglasov iz Dela lahko sklepamo , da je za pridobitev dela v državnih institucijah in interne prevajalske oddelke v mednarodnih podjetjih zaenkrat sicer še dovolj poznavanje dela z MS Office in so ti delodajalci nov kader še pripravljeni dodatno izobraževati .
Prevajalci , ki se želijo zaposliti v prevajalskih agencijah ali sodelovati z njimi , pa potrebujejo znanje o jezikovnih tehnologijah .
Pri tem ne smemo pozabiti , da je ponudba prostih delovnih mest v tiskanih medijih ena tradicionalnejših oblik oglaševanja dela , ki ne daje popolne podobe o razmerah na trgu delovne sile .
Na forumu ProZ ( URL : http://www.proz.com ) je bilo za jezikovno kombinacijo angleščina – slovenščina med 1. oktobrom in 31. decembrom 2004 objavljenih 58 ponudb za delo , od katerih je 51 ( 88 %) kot pogoj za sodelovanje postavilo uporabo prevajalskega namizja ( navadno Trados in Transit ) .
Delovi oglasi v zadnjih petih letih kažejo največje spremembe v potrebah delodajalcev v prevajalskem poklicu , povečanje zahtev po poznavanju dela z aplikacijami za računalniško podprto prevajanje pa potrjujejo tudi spletne strani prevajalskih agencij in oglasi za delo na internetnih prevajalskih forumih .
Vendar do podobnih sprememb z dostopnostjo računalniških korpusov , govornih zbirk in drugih jezikovnih orodij , ki strokovnjakom lajšajo in izboljšujejo kakovost dela , prihaja tudi v sorodnih jezikoslovnih poklicih .
Resnega leksikografskega in terminološkega dela si skoraj ne znamo več predstavljati brez uporabe računalniških korpusov in drugih jezikovnih tehnologij , področje računalniške leksikografije pa od sodobnega leksikografa zahteva računalniško znanje , ki presega raven povprečnega uporabnika ( Krek 2003 : 61 ) .
Z zgolj » ročnim « leksikografskim delom se ob spopadanju s tesnimi roki ni več mogoče dokopati do zadovoljivih posebnosti rabe posameznih slovarskih iztočnic ( Derstvenšek 2003 : 78 ) .
Računalniško dostopni viri in tehnologije spreminjajo način poučevanja ( tujih ) jezikov , ne samo kot sodobni nosilci učnih gradiv in referenčnih virov , temveč vse bolj tudi pri učenju na daljavo v obliki virtual-ne univerze , na kateri pouk poteka z uporabo elektronske pošte , interaktivnih spletnih strani in videokonference ( Pisanski 2003 ) .
Pri projektu je vse od njegove zasnove sodelovala avtorica prispevka , ki je delo s prevajalskimi namizji spoznala pri študiju prevajalstva na Filozofski fakulteti in tako bistveno prispevala k uspešnemu uvajanju sodobnih prevajalskih tehnologij v okolje prevajalske agencije , opravila večino pripravljalnih dejavnosti za prehod na delo s Tradosom in pripravila izobraževanje za prevajalce ( glej Fišer 2004 ) .
Opisan projekt dokazuje , da prevajalske in druge jezikovne tehnologije zaradi svojih ugodnih učinkov tako za delodajalce kot za zaposlene nakazujejo smer razvoja delovnih okolij , v katera se vključujejo jezikoslovci , in tako razkrivajo prihodnje potrebe delovnega trga po kompetencah s področja jezikovnih tehnologij .
Naročnik prevodov ni potreboval dnevno , temveč pred sejami nadzornega odbora , zaradi česar je bil ritem dela neenakomeren , roki za dokončanje prevodov pa kratki .
Po prvih naročilih so prevajalci ugotovili , da se v besedilih včasih ponavljajo strokovni izrazi , drugič pa kar celi odstavki ( npr. pri navajanju odločb Banke Slovenije ) .
Uporabo pomnilnika prevodov je predlagala prevajalka , ki je za druge naročnike že uporabljala Wordfast ( URL : http://www.wordfast.net ) in je poznala njegove prednosti .
Za nakup Tradosa ( URL : http://www.trados.com ) se je agencija odločila zaradi povezave z urejevalnikom besedil MS Word , ki so ga prevajalci že dobro poznali .
Ker večina prevajalcev ni poznala dela s prevajalskim namizjem , smo pripravili tudi izobraževanje zanje , na katerem smo jim predstavili koncept pomnilnika prevodov na splošno in način dela z Workbenchem , WinAlignom in MultiTermom , v drugem delu seminarja pa so vsak na svojem računalniku vadili najpomembnejše operacije za prevajanje s Tradosom ( odpiranje baze in priprava delovnega okolja , analiza izvornega besedila , odpiranje in zapiranje prevodnih enot , vstavljanje nespremenljivk in terminologije , iskanje po konkordancah , čiščenje prevoda ) .
Izvorna besedila in njihove prevode smo poravnali z WinAlignom in ročno popravili napake , da smo dobili segmentne pare izvirnik – prevod .
Za izdelavo terminološke baze v MultiTermu smo uporabili slovensko-angleške sezname terminologije , ki so si jih za lažje delo sestavili nekateri prevajalci .
Ob prejemu besedil mora po novem koordinator projekta najprej ugotoviti , kolikšen delež teh besedil je že v pomnilniku prevodov in koliko morajo prevajalci prevesti na novo .
Slika 1 : Prikaz dela pred uporabo Tradosa .
Slika 2 : Prikaz dela s Tradosom .
Te dodatne zadolžitve se še posebej poznajo pri nujnih prevodih , ki morajo biti končani v enem dnevu .
Koordinatorjevega dela ne more opraviti nihče drug , saj administrativno osebje na agenciji pozna dela s Tradosom , poleg tega pa razen koordinatorja in prevajalcev nihče nima nameščenega Tradosa .
Poleg koordinatorjevih nalog se je povečalo tudi število vzdrževalnih opravil , kot so popravljanje prevodnih enot v pomnilniku prevodov in terminološki bazi , posodabljanje terminološke baze in poravnavo besedil za pomnilnik prevodov .
Prevajalci teh opravil ne morejo opravljati iz dveh razlogov : nimajo dostopa do glavnega pomnilnika prevodov , pa tudi časa nimajo dovolj , saj imajo veliko dela že s prevajanjem samim .
Zato se je projektu pridružil še vzdrževalec podatkovnih baz .
Z uporabo Tradosa nastajajo tudi tekoči stroški , ki vključujejo stroške vzdrževanja strojne ( nadgradnje in nove različice ) in programske opreme ( zamenjava in nakup dodatne potrebne opreme ) , stroški vodenja projekta ter stroški vzdrževanja in posodabljanja pomnilnika prevodov in terminološke baze , ki jih ocenjujemo na približno 300.000 tolarjev mesečno .
Število vseh dokumentov , ki smo jih do konca raziskave prevedli , je 1.230.
Pregled dokumentov je pokazal , da so besedila kratka , saj je povprečna dolžina dokumentov 3,59 prevajalske strani.3 Največ dokumentov je bilo dolgih eno stran ali manj ( 448 ) , sledila so besedila , dolga dve do pet strani ( 383 ) in šest do deset strani ( 213 ) , najdaljši ( 94 strani ) pa je bil prevod letnega poročila .
V mesecih , ko so člani nadzornega sveta imeli redne seje ( oktobra , decembra , februarja , aprila in junija ) , je bilo dela več , saj smo takrat poleg rednih prevodov prevajali še gradivo za seje in zapisnike .
Brez Tradosa nam te količine besedil z enakim številom prevajalcev nikakor ne bi uspelo prevesti .
4.4 Koristi uporabe Tradosa za prevajalsko agencijo Z uporabo pomnilnika prevodov nam je uspelo zadržati naročnika tudi po preteku prve enoletne pogodbe .
Začetni pomnilnik prevodov , ki smo ga napolnili s starimi prevodi , je štel 4.825 prevodnih enot , do konca spremljanja projekta pa je narasel na 50.107 prevodnih enot .
S tako bogatim pomnilnikom lahko zagotovimo enako količino prevodov v krajšem času .
Glede na nujnost prevodov smo se z naročnikom dogovorili za tri kategorije : najnujnejše prevode mu vrnemo v 24 urah , prevode besedil , ki jih naročnik pošlje v petek , dobi do ponedeljka , za manj nujne prevode pa imamo tri dni ali več časa .
Pred uporabo Tradosa smo v 24 urah lahko zagotovili samo 10 % prevodov , s Tradosovo pomočjo je najnujnejših prevodov več kot četrtina ( glej graf 2 ) .
Tudi vodenje projekta je bolj učinkovito , saj lahko z analizo novih dokumentov ( tj. primerjava novega besedila s pomnilnikom prevodov ) koordinator zelo natančno ugotovi , koliko dela čaka prevajalce , in naročniku že takoj sporoči , v kakšnem času ga lahko opravijo .
Opisan projekt pa dokazuje , da potrebe po teh znanjih pa ne narekuje samo trg , temveč so še toliko dragocenejša tudi zato , ker lahko jezikovni delavci tudi kot pobudniki novih pristopov v delovnih organizacijah z njimi dosežejo veliko boljše rezultate in se veliko bolje uveljavijo tudi v okoljih , kjer so tovrstne novosti še neizkoriščene .
Snovalci študijskih programov kmalu ne bodo več mogli bodočim jezikoslovcem nuditi kakovostnega in uspešnega študija , če se ne bodo čim prej ozrli po dejanskih razmerah v raznih jezikoslovnih poklicih v sedanjosti in prihodnosti .
Ob upoštevanju vseh skupin delodajalcev , ne samo konservativnejših državnih ustanov , je potrebno jezikoslovne študijske programe prilagoditi tako , da bodo tradicionalne vsebine povezane s prednostmi , ki jih omogoča sodobna informacijsko-komunikacijska tehnologija .
Izgovor , da je za opravljanje nekaterih poklicev zaenkrat dovolj najosnovnejše poznavanje dela z osebnim računalnikom , je kratkoviden in dolgoročno ne more prinesti pozitivnih rezultatov , saj je eno najpomembnejših poslanstev visokega šolstva doseganje trajne zaposljivosti in posredovanje relevantnega znanja , ki bo dolgoročno koristilo tako posameznikom kot tudi trgu delovne sile .
Tudi v Sloveniji si prevajalsko , leksikografsko , terminološko , založniško , novinarsko , oglaševalsko in ne nazadnje učiteljsko delo brez uporabe sodobnih jezikovnih tehnologij komaj še lahko predstavljamo .
Sistem temelji na združevanju osnovnih govornih enot s pomočjo algoritma TD-PSOLA , ki smo ga dopolnili z linearno interpolacijo s spremenljivim številom interpoliranih period .
1 UVOD Z razvojem in čedalje večjo uporabo računalniške tehnologije se je pokazala potreba po sistemih , ki omogočajo komunikacijo med človekom in strojem v naravnem jeziku .
V Sloveniji se trenutno ukvarjata s sintezo govora predvsem dve raziskovalni skupini : Odsek za inteligentne sisteme ( vodja prof. dr. Ivan Bratko ) , ki deluje v okviru Institututa Jožef Stefan v Ljubljani in Laboratorij za umetno zaznavanje ( vodja prof. dr. Nikola Pavešić ) na Fakulteti za elektrotehniko v Ljubljani .
Na Institutu Jožef Stefan je 1993. leta S. Weilguny izdelal sistem za izgovorjavo izoliranih slovenskih besed [ 1 ] .
2 ZGRADBA SISTEMA Sistem STTS1 ( http://zlatoust.ijs.si/stts/stts.htm ) je zasnovan modularno [ 5 , 6 ] , kar omogoča enostavno popravljanje posameznih delov sistema , ki so povsem neodvisni drug od drugega .
Pri nastavljanju prozodičnih parametrov določamo hitrost govora ( nor-malna , hitra , počasna ali katerakoli vmesna stopnja ) , osnovno frekvenco , mesto , število in trajanje premorov , način naglaševanja besed , način spreminjanja časa trajanja glasov , izbiramo lahko med različnimi modeli nastavljanja prozodičnih parametrov , itd. 2.1 Predobdelava besedila V fazi predobdelave vhodnega besedila najprej pretvorimo različne formate besedila v ASCII zapis .
Nato odstranimo vse odvečne simbole , zapišemo okrajšave v njihovi polni obliki , cifre razvijemo v števnike ter poiščemo pomen raznim ostalim zapisom in znakom ( datumi , ure , ideogrami ) [ 9 ] .
Opisani postopki se izvajajo poved za povedjo .
Slovarje najbolj pogostih besed smo razdelili na več podslovarjev : števniki , lastna imena , akronimi , kolokacije , splošne besede ( najobsežnejši del ) , besede iz danega področja uporabe ( v našem primeru je to zaposlovanje oz. prosta delovna mesta ) [ 9 ] .
Pri nastavljanju naglasnega mesta besed si pomagamo še s seznami naglašenih in nenaglašenih enot [ 9 , 11 ] .
Glede na to , da je za slovenski jezik značilno prosto mesto naglasa , ki se ga naučimo hkrati z učenjem jezika in besed , je to vse prej kot enostavno opravilo .
Ta del zato trenutno predstavlja najšibkejšo točko našega sistema .
2.3 Določitev prozodičnih parametrov Pravilna nastavitev prozodičnih parametrov , podanih v obliki osnovne frekvence in časa trajanja fonemov , močno vpliva tako na naravnost kot tudi razumljivost umetnega govora .
Postopek nastavljanja prozodičnih parametrov obsega tri korake [ 9 ] : • nastavljanje trajanja , • nastavljanje osnovne frekvence , • določitev mesta in trajanja premorov .
Ko se besede vključujejo v večje govorne enote , se skrajšujejo ali podaljšujejo v skladu z zahtevami višjenivojskih prozodičnih pojavov .
Pri tem upoštevamo različne parametre , kot so položaj besede v frazi , izbrano hitrost govora in dolžino besede , izraženo s številom zlogov v besedi [ 9 , 11 ] .
Slika 2 : Rezultat modeliranja osnovne frekvence za stavek : " Kje je hodil toliko časa ?
Nad globalni potek osnovnega tona je dodana lokalna komponenta , ki je definirana za poudarjene besede oz. naglašene zloge v intonacijskem segmentu [ 15 ] .
2.4 Združevanje osnovnih govornih enot Baza difonov V posneti bazi osnovnih enot se nahaja 1155 difonov ( ločimo med 33 različnimi glasovi ) [ 5 , 6 ] .
Difoni so bili izrezani iz brezpomenskih besed , logatomov .
Algoritem TD-PSOLA je hiter in zagotavlja visoko kakovost sintetiziranega govora [ 17 ] .
3 ZAPOSLOVALNI AGENT EMA Opisani sistem za sintezo slovenskega govora smo uporabili v zaposlovalnem agentu EMA ( http : / / www-ai.ijs.si / ~ ema / ) [ 9 ] , ki posreduje informacije , vezane na zaposlovanje prek interneta ( slika 3 ) .
Sistem za sintezo slovenskega govora smo uporabili v najbolj obiskanem modulu , ki posreduje informacije o prostih delovnih mestih v Sloveniji .
Besedilo , ki ga sintetiziramo , je deloma omejeno ( npr. vrsta poklica ) , deloma neomejeno ( npr. naslov ) .
4 PREIZKUS SINTETIZATORJA Pri preizkusu kakovosti sintetiziranega govora je sodelovalo 11 poslušalcev v starostnem razponu med 22 in 53 leti .
Večina poslušalcev pred preizkusom še ni slišala sintetiziranega govora [ 9 ] : • Pri prvem testu smo preverjali razumljivost posameznih besed .
Poslušalcem smo predvajali 54 besed in jih prosili , da na pripravljene pole zapišejo vse , kar so slišali .
Iz napisanega besedila smo izračunali odstotek pravilno razpoznanih besed .
Razumljivost izoliranih besed pri prvem testu je znašala 94.6% , kar je primerljivo s podobnimi sintetizatorji v svetu [ 9 ] .
Težave so bile predvsem pri krajših besedah , in še tam so poslušalci velikokrat zamešali le po en znak na besedo ( npr. namesto stop so napisali stot ) ; ponavadi sta bila to dva sorodna glasova .
Nekaj več težav je bilo le pri razumevanju imena in naslova podjetja oziroma organizacije , ki nudi zaposlitev ( slika 4 ) [ 9 ] .
Deli besedila , na katere smo razdelili sporočila o prostih delovnih mestih Odstotek pravilno razpoznanih delov besedila [%] Slika 4 : Odstotki pravilno prepoznanih delov obvestil o prostih delovnih mestih .
Izkazalo se je , da se človek po nekaj urah poslušanja sintetiziranega govora nanj navadi , in z razumevanjem besedil nima več posebnih problemov .
Modularna zgradba sistema omogoča njegovo enostavno popravljanje in dograjevanje .
Avtomatsko naglaševanje nepoznanih besed pri sintezi slovenskega govora Povzetek .
V članku je predstavljen dvostopenjski model naglaševanja nepoznanih slovenskih besed , ki je uporabljen v sistemu Govorec za sintezo slovenskega govora .
To naredimo s pomočjo odločitvenih dreves , ki smo jih dobili z metodami strojnega učenja .
Sledi popravljanje tako dobljenih rezultatov glede na število naglasov v besedi in dolžino besede .
Eksperimenti so potrdili tezo , da je naglaševanje besed v slovenskem jeziku kompleksen problem , ki ga z relativno preprostimi pravili ni mogoče učinkovito rešiti .
Posamezna beseda ima lahko različno število naglašenih mest .
Mesto naglasa je določeno za vsako besedo posebej in velja , da se ga naučimo hkrati z učenjem jezika .
Poleg tega velja omeniti , da se lahko posamezna besedna oblika naglašuje na več načinov .
Na njihovo pravilno naglaševanje in izgovarjavo lahko sklepamo le iz konteksta .
Do sedaj so se v vseh sintetizatorjih slovenskega govora poleg relativno skromnih slovarjev izgovarjav ( nekaj deset tisoč najpogostejših besed ) uporabljala še zelo preprosta pravila , ki so temeljila na nekaj seznamih ( breznaglasnice - enklitike in proklitike ; pripone in predpone - večinoma nenaglašene ; začetnice - večinoma naglašene ; končaji besed z značilnimi naglasnimi mesti ) [ 1 ] in statistikah , ki so podajale verjetnost naglasov za posamezni zlog glede na število zlogov v besedi [ 2 , 3 ] .
Za vse besede , ki so v slovarju , prepišemo mesto in vrsto tako dinamičnega kot tonemskega naglasa ( ob upoštevanju oblikoslovnih podatkov in pravil za obravnavo homografov ) .
Izkazalo se je , da preprosti modeli naglaševanja nepoznanih besed ne dajo želenih rezultatov .
Učinkovita pravila tudi zmanjšajo obseg slovarja ( ta vsebuje le še besede , ki jih pravila ne vključujejo ) , s čimer se zmanjšajo potrebe po pomnilniku .
To je pomembno zlasti pri uporabi tovrstnih programov v dlančnikih , mobilnih telefonih , govorečih slovarjih itd. 3 Metodologija Razvili smo dvostopenjski model naglaševanja nepoznanih slovenskih besed .
Sledi popravljanje tako dobljenih rezultatov glede na število naglasov v besedi in dolžino besede .
Pri najpreprostejši različici algoritma v primeru večih naglasov naključno izberemo enega samega .
Za odločitvena drevesa smo se odločili , ker jih lahko zlahka pretvorimo v pravila .
Učna in testna množica sta bili ločeni .
Rezultate poizkusov smo izračunali na ravni zlogov in na ravni besed .
4 Podatki Prvi pogoj za temeljito analizo naglašenosti je ustrezno velik fonetični slovar , ki vsebuje tudi oblikoslovne oznake .
Tak slovar mora obsegati vse dopustne izgovarjave posamezne besede , in to v vseh njenih pojavnih oblikah .
4.1 Pridobivanje podatkov Slovar slovenskega knjižnega jezika ( SSKJ ) vsebuje le besede v njihovih osnovnih oblikah , zato smo bili prisiljeni zgraditi nov fonetični slovar v elektronski obliki .
Kot osnovo smo uporabili leksikon MULTEXT-East [ 7 ] , ki smo ga dopolnili s podatki o mestu in tipu tako dinamičnega kot tonemskega naglasa .
Večina dela je bila opravljenega avtomatično z uporabo v ta namen razvitega morfološkega analizatorja ( okrog 50.000 vrstic programske kode v C ) in elektronske verzije SSKJ .
Takšna določitev mesta naglasa je bila neuspešna v približno 0,2 odstotka primerih .
V vseh teh primerih smo delo opravili ročno .
Za graditev domene z atributi smo uporabili 192.132 besed .
Kot rezultat smo dobili 700.340 zlogov ( samoglasnikov ) .
Pri tem so besede ( osnovne oblike in izpeljanke ) v testni množici pripadale različnim lemam kot besede v učni množici .
4.2 Opis podatkov Učna in testna množica sta bili razdeljeni v več podmnožic glede na samoglasnike in soglasnik ' r ' .
Število primerov v tako dobljenih podmnožicah prikazuje tabela 1.
Vsak primer je opisan s 66 atributi , vključno z razredom , ki predstavlja tip dinamičnega naglasa .
Dejavniki , ki ustrezajo preostalim 65 atributom , so : • število zlogov v besedi ( 1 atribut ) , • položaj opazovanega samoglasnika ( zloga ) v besedi ( 1 atribut ) , • prisotnost predpone oz. pripone v besedi in razreda , ki mu pripada ( 4 atributi ) , • končnica besede ( 1 atribut ) , levi in desni kontekst opazovanega samoglasnika ( tip in ime grafema za tri znake levo in desno , dva samoglasnika levo in desno od opazovanega samoglasnika ) ( 58 atributov ) .
Slika 1 : Atributi za tretji samoglasnik ( ' a ' ) za slovensko besedo " okopavam " Figure 1 : Attributes for the third vowel ( ' a ' ) of the Slovenian word " okopavam " ( engl .
" I earth up " ) Večina avtomatskih metod učenja izgovarjave nepoznanih besed temelji na predpostavki , da se vsa potrebna informacija v celoti nahaja v nizu znakov , ki sestavljajo besedo .
Za pravilno izgovarjavo besede tako potrebujemo še njene oblikoslovne podatke .
Ugotovili smo , da dobimo boljše rezultate in bolj strnjena odločitvena drevesa , če predstavimo kontekst opazovanega samoglasnika s tipom grafema ( samoglasnik ali soglasnik , tip soglasnika ) in ne z imenom samega grafema .
Ime grafema je označeno posebej v enem od atributov , ki pojasnjujejo posamezne tipe grafemov ( npr. atribut ' Samoglasnik ' lahko vsebuje naslednje vrednosti : ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , '-' ( ni samoglasnik ) ) .
Primer prikazuje slika 1. 5 Poskus Na šestih domenah , ki ustrezajo petim samoglasnikom in soglasniku ' r ' , smo učili odločitvena drevesa ( DT in boosted DT ) , kot je to implementirano v sistemu See5 [ 6 , 8 ] .
Kot parameter za rezanje dreves smo uporabili minimalno število primerov v listih .
Oba načina učenja odločitvenih dreves ( DT in boosted DT ) smo primerjali med seboj , in sicer za parametre rezanja dreves med 2 in 1000 minimalnimi primeri v listih .
Napaka je bila najmanjša pri drugem načinu učenja ( boosted DT ) ob minimalnem rezanju dreves ( minimalno 2 primera v listih ) .
Napaka se v najboljšem primeru ( boosted DT , minimalno 2 primera v listih ) zmanjša za 31,4 odstotka .
Št. primerov v listih Slika 4 : Velikost odločitvenih dreves ( DT ) Figure 4 : Size of the DT learned on the whole set Glede interpretabilnosti modela ugotovimo nekaj značilnosti odločitvenih dreves : ( 1 ) so zelo široka , ( 2 ) so globoka , ( 3 ) koren drevesa ostaja ob naraščanju velikosti drevesa nespremenjen .
Model temelji na metodah strojnega učenja pri uporabi odločitvenih dreves in je sposoben pravilno naglasiti nepoznano slovensko besedo v več kot 83 odstotkov primerih .
Poskusi so potrdili že v uvodu omenjeno tezo , da za naglaševanje slovenskih besed ni preprostih pravil .
Tomaž Šef je diplomiral leta 1995 na Fakulteti za elektrotehniko in računalništvo v Ljubljani .
Zaposlen je na Odseku za inteligentne sisteme na Institutu " Jožef Stefan " , kjer se ukvarja z umetno inteligenco , komunikacijo človek-stroj , procesiranjem naravnega jezika , sintezo govora ter zajemanjem tekstovnih in govornih baz podatkov .
SLOVENSKA ODVISNOSTNA DREVESNICA V RAZISKAVAH O INDUKTIVNEM ODVISNOSTNEM RAZČLENJEVANJU Prispevek prinaša nekaj temeljnih pojasnil o področju skladenjskega označevanja korpusov ter o metodologiji gradnje drevesnic .
Hkrati skladenjsko označeni korpusi omogočajo razvoj različnih jezikovnih tehnologij ( npr. avtomatskih prevajalnikov , sintetizatorjev in prepoznavalnikov govora , črkovalnikov , iskalnikov različnih podatkov ipd. ) , saj lahko z njimi testiramo skladenjske razčlenjevalnike , rezultati njihove analize so namreč odlična osnova za nadaljnjo strojno obdelavo jeziko ( slo ) vnih podatkov .
Ker je potencialnih rab drevesnic veliko , področja njihove uporabe pa so zelo raznorodna , si bomo v nadaljevanju na nekaj primerih ogledali , v katerih raziskavah so bile drevesnice že uporabljene oz. glede na kakšne raziskovalne cilje so bile oblikovane .
Podatki Italijanske skladenjsko-pomenske drevesnice ( ISST ) so imeli ključno vlogo pri izboljšavi prevajalnega sistema za jezikovni par italijanščina – angleščina , ki je sestavljen iz več programskih orodij ( Montemagni et al. 2003 : 204 – 205 ) , nemška drevesnica TüBa-D / Z2 je bila npr. vključena v raziskavo o avtomatski interpretaciji anafor ( kot jih opredeljuje tvorbeno jezikoslovje v enem od modulov vezalnonavezovalne teorije ) v nemščini ( Hinrichs et al. 2005 ) .
Za Slovensko odvisnostno drevesnico načrtujemo , da bo v prihodnosti omogočala tako oblikovanje novih jezikoslovnih opisov kot raziskave na področju obdelave naravnih jezikov .
Zaenkrat je zlasti besedilna sestava drevesnice takšna , da tovrstnih analiz še ne omogoča , izhodiščne raziskave , ki jih v začetni fazi projekta oblikovanja drevesnice izvajamo , in njihovi rezultati pa so namenjeni analizi metodologije avtomatskega skladenjskega označevanja korpusov slovenščine in so ključni za razmislek o tem , kako kompleksen naj bo nabor skladenjskih oznak in posledično pravil , ki jih je pri označevanju smiselno upoštevati .
1.1 Ravni označevanja in kompleksnost označevalnih modelov Korpusi se skladenjsko navadno označujejo na dveh ravneh , na površinskoskladenjski in na pomenskoskladenjski oz. pomenski ravni .
Slovenska odvisnostna drevesnica v raziskavah o induktivnem odvisnostnem ...
Modeli označevanja in nabori skladenjskih oznak za različne korpuse se zelo razlikujejo , vendar pa lahko glede na kompleksnost procesa izpostavimo dva osnovna tipa označevanja:3 popolno ( full parsing ) in skeletno ( skeleton / skeletal parsing ) oz. plitko ( shallow parsing ) skladenjsko označevanje oz. razčlenjevanje.4 Popolno skladenjsko označevanje omogoča zelo natančno in podrobno analizo skladenjskih struktur , saj so pri takem tipu označevanja predstavljeni strukturni ali odvisnostni ( ter tudi pomenski ) odnosi med vsemi pojavnicami v povedi .
Pri polavtomatskem označevanju označevalcem pomagajo inteligentni urejevalniki , pri avtomatskem označevanju pa je rezultate pogosto treba popraviti ročno , saj skladenjski razčlenjevalniki še ne dosegajo zadovoljive stopnje natančnosti ( Abeillé 2003 : XVIII ) .
Pri skladenjskem označevanju po pravilih vnaprej pripravljene slovnice ( tem sistemom je na voljo tudi leksikon besednih oblik ) navadno izberemo eno od uveljavljenih skladenjskih teorij in na njeni podlagi pripravimo sistem zelo formaliziranih jezikovnospecifičnih pravil o funkciji ali zgradbi skladenjskih struktur v določenem skladenjskem kontekstu .
Nato jih vnesemo v računalnik , razčlenjevalnik pa pri analizi jezika v korpusu sistem pravil pregleduje in ugotavlja , s katerim ( i ) bi določeno strukturo lahko opisal .
Če ne najde nobenega ustreznega pravila , strukturo opredeli kot neslovnično – v tem primeru nastopijo težave z robustnostjo razčlenjevalnika .
Postopka v različnih fazah dela drug drugega predpostavljata in dopolnjujeta .
Odločitev za enega od njiju je odvisna od tega , kateri postopek je pri delu na nekem področju gradnje korpusov odločilnejši .
Kljub temu razumemo termin označevanje kot bolj splošen , zato ga bomo uporabljali tudi takrat , kadar bi se lahko nanašali na katerega koli od obeh postopkov .
Slovnice , ki jih razčlenjevalniki pri takšnem označevanju uporabljajo , so zelo podobne opisnim slovnicam , saj je vsem vnaprej pripravljenim sistemom slovničnih pravil skupno , da skušajo ljudje pri njihovi pripravi upoštevati podatke o človeškem znanju jezika in na tej podlagi izdelati opise , ki jih bo lahko uporabil tudi računalnik .
Težava je predvsem v premajhnem pokritju pravil , zelo težko je namreč pripraviti primerno veliko število pravil , ki opišejo , kako naj razčlenjevalniki opravijo analizo natančno in konsistentno ( McEnery in Wilson 1996 : 131 – 132 ; Kennedy 1998 : 232 – 233 ) .
Obetavnejše rezultate v zadnjem času dosegajo razčlenjevalniki , ki delujejo po principu statističnega učenja .
Na podlagi statistične verjetnosti sopojavljanja pojavnic določenega oblikoskladenjskega tipa – oblikoskladenjske analitične oznake dajejo sorazmerno dobro informacijo o potencialni skladenjski strukturi povedi – v takem korpusu ocenjujejo , katere strukture so glede na tipično besedilno umeščenost skladenjskih enot bolj verjetne in katere manj , in na osnovi tovrstnih izračunov skladenjskim strukturam določajo zgradbo ali funkcijo .
Avtomatski označevalniki pri takem označevanju inducirajo slovnico , ki ni podobna opisnim slovnicam jezika .
Pristopi k statističnemu skladenjskemu označevanju so raznovrstni , vendar pa razčlenjevalniki za uspešno analizo neoznačenega besedila vedno potrebujejo natančno označen učni korpus , katerega izgradnja pa je izredno zahtevna , dolgotrajna in draga ( McEnery in Wilson 1996 : 132 – 133 ; Kennedy 1998 : 234 ) .
6 Podatek o stopnji natančnosti razčlenjevalnika sam po sebi sicer ni zadosten , saj je dosežena natančnost odvisna zlasti od razmerja med naborom skladenjskih in oblikoskladenjskih analitičnih oznak in velikostjo učnega korpusa .
Dobri rezultati so načeloma zagotovljeni , kadar se razčlenjevalnik uri ( in je kasneje testiran ) na korpusu , ki obsega vsaj milijon besed , pri čemer na vsaki od označevalnih ravni razločujemo manj kot 50 analitičnih oznak ( Abeillé 2003 : XXII ) .
Glede na Priporočila za skladenjsko označevanje korpusov iniciative EAGLES7 je uporaba označevalnih modelov , ki so razviti na podlagi uveljavljenih jezikoslovnih teorij , koristna zato , ker imajo te teorije že dolgo tradicijo v jezikoslovju nasploh , ker so bili ti modeli pri ročnem in avtomatskem označevanju korpusov tipološko različnih jezikov empirično že testirani in ker za analizo korpusov , označenih na njihovi podlagi , že obstajajo robustni razčlenjevalniki .
Drevesnica , označena na podlagi frazne gramatike , je npr. Penn Treebank9 ( Taylor et al. 2003 : 5 – 22 ) , primerka odvisnostnih drevesnic sta Prague Dependency Treebank ( PDT ) 10 ( LDC 2006 ) ter Slovenska odvisnostna drevesnica11 ( Erjavec in Ledinek 2006 : 162 – 167 ; Džeroski et al. 2006 : 1388 – 1391 ) , po hibridnih principih so npr. označene drevesnice NEGRA / TIGER , 12 SUSANNE13 idr. 7 Glej < http://www.ilc.cnr.it/EAGLES96/segsasg1/segsasg1.html >.
Tako npr. predlaga , da naj kot podstavo za označevalni model izberemo najosnovnejše predpostavke frazne gramatike in ne morda kakšne od njenih bolj specifičnih paradigem , npr. teorije načel in parametrov ( povzeto po McEnery in Wilson 1996 : 25 – 26 ) .
Temeljne predpostavke pri označevanju odvisnostnih drevesnic ( tudi Slovenske odvisnostne drevesnice ) pa so navadno , da so skladenjske strukture sestavljene iz elementov , ki jih povezujejo asimetrična binarna razmerja .
Odvisnostni modeli , po katerih drevesnice označujemo , navadno upoštevajo tudi tri bistvena načela : besedna oblika je podrejena natanko eni drugi besedni obliki , vse besedne oblike v odvisnostna razmerja morajo vstopati , vendar ne smejo biti povezane ciklično ( tj. odvisnosti ne smejo biti predstavljene tako , da tvorijo krog ) ( Nivre 2005 : 1 – 11 ; Samuelsson 2000 : 684 ) .
9 Penn Treebank : < http : / / www.cis.upenn.edu / ~ treebank / > .
10 Prague Dependency Treebank : < http://ufal.mff.cuni.cz/pdt/ >.
Kakšen teoretičen model pri skladenjskem označevanju korpusa izberemo , je vsaj do določene mere odvisno tudi od jezika , katerega korpus označujemo .
Označevanje po načelih frazne gramatike je bolj primerno za jezike s stalnim besednim redom in jasno sestavniško strukturo , odvisnostne drevesnice pa navadno gradimo za morfološko bogate jezike s prostim besednim redom .
Z gradnjo Slovenske odvisnostne drevesnice ( projekt Slovene Dependency Treebank , SDT ) , drevesnice pisnih tekstov , smo začeli leta 2003.
Odvisnostne drevesnice skupaj z javno dostopno dokumentacijo o jezikovnoteoretičnih modelih ter programsko opremo za njihovo izgradnjo ter analizo danes obstajajo za številne tipološko zelo različne jezike .
Kot model korpusa , po katerem gradimo Slovensko odvisnostno drevesnico , pa smo izbrali PDT , saj je češčina po skladenjskih lastnostih slovenščini zelo podobna , hkrati pa je vsaj del slovenistične jezikoslovne teorije tesno povezan s češkim jezikoslovjem .
PDT je posebej relevanten tudi zato , ker gre za eno največjih in najbolje dokumentiranih drevesnic sploh , ustreznost označevalnega modela , ki temelji na teoriji funkcijskega generativnega opisa , pa je bila tudi empirično že preverjena .
Na površinskoskladenjski ravni je funkcijskoskladenjska vloga vsake pojavnice v povedi , tj. njeno odvisnostno razmerje do neposredno nadrejene pojavnice , razločevalno prikazana v acikličnem grafu – skladenjskem drevesu .
Na pomenskoskladenjski ravni pa so prikazana pomenska skladenjska razmerja , koreferenčna razmerja , členitev po aktualnosti oz. rematsko-tematska struktura povedi , fonetično neizražene pojavnice povedi ipd. , v skladenjsko drevo pa so na tej ravni umeščene le polnopomenske besede .
Slovenska odvisnostna drevesnica je trenutno označena le na površinskoskladenjski ravni , v nadaljnjih fazah projekta pa načrtujemo tudi označevanje pomenskoskladenjske ravni .
Z vidika projekta gradnje Slovenske odvisnostne drevesnice ima izbrani označevalni model zlasti to pomanjkljivost , da je zelo kompleksen , zato smo se pri njegovem prilagajanju za slovenščino odločili za nekatere poenostavitve ( zaenkrat smo se večinoma ukvarjali s pripravo označevalnega sistema za strukture , ki jim v slovenskem jezikoslovju navadno pripisujemo funkcijskoskladenjsko vlogo povedka ) ( Ledinek 2005 ) .
Pri površinskoskladenjskem označevanju Slovenske odvisnostne drevesnice vsakemu izrazno ločenemu ali drugačnemu elementu povedi ( besedi , delu besede , ločilu , simbolu , števki ipd. ) , ki je v skladenjskem drevesu označen z vozlom , pripišemo posebno analitično oznako glede na njegovo vlogo na površinskoskladenjski ravni .
Analitične oznake se pogosto ujemajo s funkcijskoskladenjskimi oznakami , kot bi jih besede , ki funkcijskoskladenjsko vlogo imajo , dobile v večini opisov novejšega slovenskega jezikoslovja ( Sb = osebek , Obj = predmet , Pred = povedek ipd. ) .
Slika 1 : Primer skladenjskega drevesa iz Slovenske odvisnostne drevesnice , kot ga vidimo v programu TrEd .
si / sdt / > , se bomo v nadaljevanju opredelili zlasti glede besedilne sestave drevesnice , saj ima ta velik vpliv na rezultate raziskav , o katerih bomo poročali v nadaljevanju .
Slovenska odvisnostna drevesnica trenutno obsega približno 2.800 povedi oz. 45.000 besed .
Različica 0,4 tega korpusa je prosto dostopna za raziskovalne namene .
Drugi korpus drevesnice sestavljajo povedi iz vzporednega angleško-slovenskega korpusa SVEZ-IJS , ki vsebuje pravni red EU ( Erjavec 2006 : 2138 – 2141 ; Erjavec in Sárossy 2006 : 169 ) .
» 1984 « sestavlja eno samo umetnostno besedilo , ki vključuje tudi izmišljen jezik , za upravno-pravna besedila v korpusu SVEZ-IJS pa je tipična skrajna formaliziranost določenih odsekov , » tabelarnost « ter naštevalnost , kar povzroči , da so posamezni deli besedil interpretirani kot niz elips , za besedila pa je značilen tudi visok delež zelo obsežnih in kompleksnih samostalniških zvez .
Oba korpusa drevesnice torej sestavljajo v skladenjskem smislu relativno specifična prevodna besedila , zato je pri njuni analizi ključno vprašanje , ali in v kolikšni meri je tipologija vzorcev pojavljanja skladenjskih struktur v njih za slovenščino tipična .
Da bi dobili okviren odgovor na to vprašanje , se bomo ob razširitvi drevesnice posvetili označevanju vzorca slovenskih časopisnih besedil , ki jih bomo ( verjetno ) pridobili iz referenčnih korpusov Fida oz. FidaPLUS , vključiti pa bomo skušali čim bolj reprezentativne besedilne tipe z različnih tematskih področij .
2.1 Slovenska odvisnostna drevesnica v raziskavah o induktivnem odvisnostnem razčlenjevanju Za jezike z manjšo ekonomsko močjo in z manjšim številom govorcev , ki so posledično z vidika korpusnega jezikoslovja oz. celotnega področja procesiranja naravnih jezikov manj razis ( kov ) ani , se v zadnjem času pojavljajo nove priložnosti za analize .
V raziskavi o natančnosti pri skladenjski analizi zlasti italijanščine ( Chanev 2005 ) z razčlenjevalnikom Malt ( Nivre et al. 2005 ) smo za slovenski korpus kljub urjenju in testiranju razčlenjevalnika na zelo majhnem vzorcu besedila iz prototipne inačice 0,1 korpusa » 1984 « ( testni korpus je obsegal 335 povedi oz. približno 7000 pojavnic ) in dejstvu , da učni in testni vzorec še nista bila označena povsem konsistentno , dobili relativno vzpodbudne rezultate .
Dosežena stopnja natančnosti za označeno povezanost ( razčlenjevalnik je moral pravilno določiti tako hierarhična razmerja med besednimi oblikami kot tip odvisnostnih razmerij , tj. analitične oznake ) je bila približno 58 % , stopnja natančnosti pri določanju neoznačene povezanosti ( pravilno so morala biti določena le hierarhična razmerja , pravilnost analitičnih oznak pa ni bila relevantna ) je bila približno 69 %.
Inačica 0,3 korpusa » 1984 « , ki je obsegala približno 1.500 povedi , je bila nato vključena v mnogo obširnejšno raziskavo , v tekmovanje o natančnosti statističnih odvisnostnih razčlenjevalnikov , ki je potekalo v okviru 10.
Učni korpusi , na katerih so tekmovalci svoje razčlenjevalnike urili , so bili oblikoskladenjsko označeni in lematizirani , vendar so bili različno veliki , češki korpus PDT je bil največji in je obsegal 1.250.000 besed , Slovenska odvisnostna drevesnica pa je bila daleč najmanjši korpus , njegovo učno množico je sestavljalo le 29.000 besed .
Najboljši rezultati so bili doseženi z dvostopenjskim razlikovalnim razčlenjevalnikom14 ( two-stage discriminative parser ) ( McDonald 14 Opis sistema in natančnejši rezultati so dostopni na spletni strani < http://www.cnts.ua.ac.be/conll/pdf/ 21520.pdf > .
Za slovensko drevesnico je zaradi sorodnosti označevalnih sistemov najzanimivejša primerjava rezultatov s češkim korpusom PDT .
Rezultati raziskave so prikazani v Tabeli 1 ( OP = označena povezanost , NP = neoznačena povezanost , O = oznake ) .
Tabela 1 : Rezultati raziskave CoNLL-X za SDT in PDT .
Rezultati pri razčlenjevanju Slovenske odvisnostne drevesnice so le za nekaj odstotkov slabši od rezultatov za drevesnico PDT , kar bi najbrž lahko pripisali zelo veliki razliki v velikosti učnih množic .
Vendar pa je treba upoštevati , da so v češko drevesnico zajeti zelo različni besedilni tipi , razčlenjevalniki morajo biti zato za takšno analizo bolj robustni kot za označevanje enega besedila .
Tretja raziskava15 ( Gjorgjioski 2006 ) , raziskava o natančnosti skladenjske analize z razčlenjevalnikom Malt , v katero sta bila vključena oba korpusa Slovenske odvisnostne drevesnice , je opozorila na za jezikoslovje zelo zanimivo vprašanje , kako pomembno vpliva na frekvenco pojavljanja in vzorce pojavljanja posameznih skladenjskih struktur besedilni tip.16 V prvi fazi raziskave17 je bilo na obeh korpusih drevesnice opravljeno desetkratno križno preverjanje .
V tretji fazi raziskave pa je bil razčlenjevalnik izurjen na združenih podatkih iz obeh korpusov , na celotnem korpusu » 1984 « in devetih desetinah korpusa SVEZ-IJS in obratno , ena desetina posameznega korpusa pa je služila kot testni korpus .
Glede na to , da so v korpusa drevesnice vključena zelo različna besedila , smo pričakovali , da bo stopnja natančnosti pri navzkrižnem avtomatskem razčlenjevanju testnih korpusov ( 2. faza ) nizka , vendar pa so nas rezultati – ugotovljen je bil izjemen razkorak med rezultati druge in prve ter tretje faze raziskave – nekoliko presenetili .
Podatki kažejo , da je obema korpusoma skupen samo minimalen nabor skladenjskih struktur , saj se v korpusu SVEZ-IJS samo približno 15 % struktur , ki jih najdemo tudi v korpusu » 1984 « , pojavlja dovolj sistematično in pogosto , da so statistično signifikantne pri indukciji razčlenjevalnikove slovnice , s katero je mogoče razčlenjevati tudi drugi korpus drevesnice .
Boljše rezultate pri testiranju na korpusu SVEZ-IJS je mogoče pripisati dejstvu , da je nabor vzorcev pojavljanja različnih struktur v korpusu » 1984 « bistveno večji18 kot v korpusu SVEZ-IJS , zato je verjetnost , da bo razčlenjevalnik s pomočjo tega učnega korpusa uspel izdelati slovnico , s katero bo mogoče označiti večji nabor struktur v korpusu SVEZ-IJS kot obratno , večja .
Rezultati 1. faze raziskave hkrati kažejo , da sta oba korpusa ročno označena s približno enako stopnjo natančnosti , vendar je treba pri interpretaciji rezultatov upoštevati še dejstvo , da je korpus » 1984 « približno dvakrat obsežnejši od korpusa SVEZ-IJS .
Če razčlenjevalnik urimo na učnem korpusu , v katerega so vključeni podatki obeh korpusov , se natančnost pri avtomatski analizi posameznih korpusov sicer bistveno izboljša , vendar primerjava rezultatov prve in tretje faze raziskave hkrati kaže , da je specifičnost besedil v obeh korpusih tolikšna , da večja in besedilno raznovrstnejša učna množica glede na množico , ki jo sestavlja eno besedilo oz. enoten besedilni tip , rezultate pri razčlenjevanju v povprečju celo minimalno poslabša .
Dosežena stopnja natančnosti ( zlasti prva in tretja faza ) je posledica dejstva , da je označevalni sistem Slovenske odvisnostne drevesnice tako na oblikoskladenjski kot površinskoskladenjski ravni zelo kompleksen .
Označevalni sistem Slovenske odvisnostne drevesnice kot drevesnice jezika s prostim besednim redom neprojektivne strukture dovoljuje , saj bi bilo načelo projektivnosti19 pri predstavitvi slovenske skladnje preveč omejevalno .
Analiza je pokazala še , da je treba , ko je govora o slovenski skladnji , posplošitve v opisu 18 Podatke o tem so dale izkušnje pri ročnem površinskoskladenjskem označevanju , posredno pa na to opozarja že nabor različnih oblikoskladenjskih oznak , uporabljenih v korpusih ( » 1984 « : 774 , SVEZ-IJS : 452 ) .
zrelativizirati vsaj v tem smislu , da opozorimo , da se od vseh možnih sintagmatskih razmerij , ki jih jezik dovoljuje , v posameznih besedil ( n ) ih ( tipih ) ( lahko ) uresničuje njihov sorazmerno omejen in specifičen nabor .
Cilj projekta gradnje drevesnice , uresničitev katerega pa je v veliki meri odvisna od možnosti financiranja projekta , namreč je , da oblikujemo takšen korpus , ki bo omogočal relevantne jezikoslovne analize na realnih besedilih in razvoj jezikovnih tehnologij za slovenščino , za kar pa bo potreben bolj obsežen in uravnotežen korpus .
KORPUSNI PRISTOP K IZDELAVI TERMINOLOŠKIH SLOVARJEV:OD BESEDNIH SEZNAMOV IN KONKORDANC DO SAMODEJNEGA LUŠČENJA IZRAZJA Prispevek opisuje postopke izbora in obdelave gesel za namen gradnje terminološkega slovarja odnosov z javnostmi .
Ročni pregled tako pridobljenih seznamov pokaže njihovo uporabnost , pa tudi nekatere probleme , povezane z razlikovanjem terminov od neterminov in terminov od terminoloških kolokacij .
1 Uvod Slovenski terminološki slovarji trenutno nastajajo brez korpusov – le redke izjeme , npr. Islovar ( http://www.islovar.org ; Erjavec in Vintar 2004 ; Puc in Erjavec 2006 ) in večjezični vojaški slovar ( Gorjanc in Logar 2007 ) , pravzaprav le pregovorno potrjujejo pravilo .
Ker veliko strok pri nas še nima svojega ( sodobnega ) slovarja , je izid vsakega tovrstnega priročnika – če ta vsaj v grobem ne nasprotuje temeljnim leksikografskim in strokovnopodročnim normam ter spoznanjem – seveda vseeno dobrodošel .
Osrednja slovarska pozornost je bila na Slovenskem v preteklih stoletjih sicer namenjena izdelavi splošnih slovarjev ( čeprav je Levstik na potrebo po tem , da bi imele stroke tudi svoje » posebne slovarje « opozoril že leta 1860 ) .
V osrednjem delu prispevka se bomo posvetili prvim , v zadnjem delu pa tudi drugim , vključno s premislekom o meji večbesednih terminov oz. o razmerju termin : terminološka kolokacija .
Korpusni pristop k izdelavi terminoloških slovarjev ...
Korpus je jezikoslovno označen ( Erjavec 2003 : 70 – 71 ; Erjavec in Vintar 2004 : 100 ; Gorjanc 2005 : 56 – 70 ) , delo z njim pa poteka v Amebisovem konkordančniku ASP32 .
Z zadostitvijo vnaprej opredeljeni mreži meril za nabor in izbor besedil skuša čim bolje prestavljati celotno stroko odnosov z javnostmi in je prvi tovrstni korpus strokovnih besedil v Sloveniji ( več o zgradbi in drugem gl .
Odločitev , da k izdelavi terminološkega slovarja pristopimo na korpusni način , izhaja iz prepričanja , da je zajemanje in opisovanje besedišča s pomočjo računalniških konkordanc neprimerno lažje in hitrejše kot na osnovi listkovnega gradiva .
Gradnja korpusa se je deloma financirala tudi iz ciljnih raziskovalnih projektov Zasnova na korpusu temelječih slovarskih in slovničnih opisov slovenskega jezika ( V6-0122 ) ter Oblikovanje slovenskega korpusnega omrežja ( V6-0121 ) ( www.fidaplus.net , 20. 8. 2007 ) .
Za korpusu FidaPLUS med prvimi 30 lemami ni .
Tabela 1 : Lista 30 najpogostejših lem v korpusu besedil odnosov z javnostmi KoRP in korpusu slovenskega jezika FIDA ter korpusu slovenskega jezika FidaPLUS .
podatke v tabeli se zahvaljujemo koordinatorju projekta Simonu Kreku .
Korpusni pristop k izdelavi terminoloških slovarjev ...
7 Med 30 najpogostejšimi lemami v korpusu besedil odnosov z javnostmi je 13 lem , ki jih ni med 30 najpogostejšimi v korpusu FIDA , in 8 lem ( tiskane krepko ) , ki jih ni med 30 najpogostejšimi v korpusu FidaPLUS .
Od slovničnopomenskih besed med zadnjih 8 sodita zaimek kateri in predlog med , od ostalih besed pa je med najpogostejšimi 30 lemami v korpusu besedil odnosov z javnostmi 6 samostalnikov , ki se v ostalih dveh korpusih niso uvrstili tako visoko , in prav vsi ti samostalniki so v strokovni komunikaciji odnosov z javnostmi terminološki : javnost , odnos , organizacija , podjetje , komuniciranje in medij .
Naše izhodišče razumevanja terminov kot terminov ( tudi ) odnosov z javnostmi ( in ne samo terminov neke druge stroke ) je bilo zato naslednje : vse besede ali besedne zveze , ki imajo specializirano referenco , je treba ne glede na strokovno področje , ki so mu pripadale kot prvotnemu , takrat ko postanejo del slovarja drugega področja , razumeti tudi kot del terminologije tega drugega strokovnega področja ( Pearson 1998 : 13 , 87 ) .
To pa pomeni , da vsaj okvirna odločitev , kakršno lahko sprejmejo avtorji splošnega slovarja , tj. da bodo iz sto - ali večstomilijonskega referenčnega korpusa kandidate za geslovnik izbrali izmed različnic z npr. vsaj sto pojavitvami , 5 pri korpusnem terminološkem slovarju ni ustrezna , pa čeprav bi bilo število mejnih pojavitev ustrezno nižje .
4.1.1 Lista besed – pridevniki Pridevniki samostojno sicer niso termini , ker pa za vrstne pridevnike velja , da skupaj s samostalniki tvorijo stalne besedne zveze ( Vidovič Muha 2000 : 69 , 310 – 328 ) , so Za primerjavo : vprašanje o pogostostni meji , ki še zadošča za vključitev leme v slovar , pri listah besed iz sto - ali večstomilijonskih korpusov si postavlja Šulc ( 2002 ) in pri stomilijonskem referenčnem korpusu predlaga za izhodiščni seznam pred končnim geslovnikom mejo petih pojavitev ( prav tam : 218 , 219 ) kandidati za termine odnosov z javnostmi zveze samostalnikov s pridevniki kot6 komunikacijski , blagovni , javni , lokalni , poslovni , družbeni , organizacijski , medijski , strateški , finančni itd.
Lastnostnih pridevnikov je na listi do 1000 pojavitev malo : velik , različen , pomemben , nov , dober in določen .
Ker so pravi kakovostni pridevniki , pa tudi del mernih pridevnikov v terminološkem slovarju aktualni le kot kolokatorji , si neposredno z liste besed z njimi v slovarju ne moremo pomagati , vsekakor pa je lista besed dobro izhodišče za prepoznanje večbesednih terminov z vrstnopridevniškimi prilastki .
4.1.2 Lista besed – glagoli Terminologija kot nosilec pojmovnega sveta stroke se običajno veže na samostalniško leksiko , prim. npr. prepoznanje večinskosti samostalniške terminološke leksike pri Vidovič Muha ( 2000 : 117 ) oz. povzetek Žele ( 2004 : 78 ) , da so glagoli » prav zaradi svoje organizacijske vloge v stavčnih povedih povsem netipična besedna vrsta za termine « , ob opombi , da je v češki literaturi podan podatek o 7,2 % glagolskih terminov ( nasproti 92,4 % samostalniških ) ( Žele , prav tam ) .
V SSKJ so npr. s terminološkim kvalifikatorjem vojaško označeni glagoli blindirati , degazirati , demaskirati itd. , s kvalifikatorjem športno pa centrirati , deskati , diskvalificirati itd.
Tudi npr. ni dvoma , da naslednje pojasnilo prepoznava glagole dopolniti , izpopolniti , popolniti in nadomestiti kot vojaškoterminološke enote : Postavlja se vprašanje , ali je v vojaškem izrazju med / naštetimi / glagoli mogoče ( in treba ) pomensko razlikovati ali ne .
( Korošec 1998 : 88. ) V zvezi z glagoli kot vojaškimi termini sodi sem kot potrditev vsaj še prispevek O ločevanju med pomenoma glagolov streljati in obstreljevati ( Korošec 1998 : 125 – 127 ) , v katerem uvodoma piše : Vsaka stroka teži h kar se da natančnemu sporočanju o strokovnih vsebinah in to seveda velja tako za poimenovanja predmetnega in pojmovnega sveta , torej na ravni besed – terminov – kakor tudi na ravni izjav o svetu stroke , se pravi na ravni stavkov .
Korpusni pristop k izdelavi terminoloških slovarjev ...
9 obstaja potreba po ločevanju med pomenoma , katerih vsebina sta različni dejavnosti , ena splošnejša , druga specialnejša , je treba za to uporabiti različne besede .
Glagolska gesla imata npr. tudi Islovar ( 2001 ) in Planinski terminološki slovar ( 2002 ) .
Kot samoumevno dejstvo so glagoli med matematične termine prišteti tudi v Gorjanc 1995/96 , saj avtor zanje ugotavlja ( 670 ) : » Med glagolskimi terminološkimi besednimi zvezami so matematične vezavne s tožilnikom : eliminirati neznanko , krajšati ulomek .
Kot kandidati za termine odnosov z javnostmi se na listi besed kažejo glagoli sporočiti , komunicirati , objaviti , skupiniti , prikrojiti , akreditirati , fokusirati , lansirati , dezinformirati , mrežiti itd.
Vendar je za razpoznanje glagolov , ki so v odnosih z javnostmi terminološki , zgolj ogled seznama premalo , saj so ob naštetih terminološko predvidljivejših primerih na listi besed npr. še poslovati , vlagati , svetovati in upravljati ter ugotoviti , upoštevati , temeljiti in obravnavati – za prve bi morda lahko rekli , da so vendarle značilni za odnose z javnostmi , drugi pa so del splošnega slovarja jezika in kot taki pač značilen del tudi strokovnih besedil.7 4.1.3 Lista besed – samostalniki Tudi ločevanje samostalnikov na tiste , ki so zelo verjetno termini , in na tiste , ki so del splošnega jezika , in to zgolj na podlagi seznama , se je izkazalo za vsaj deloma subjektivno .
Na prvi pogled se je zdelo , da med najpogostejšimi samostalniki v korpusu med terminološke kandidate sodijo : javnost , organizacija , podjetje , komuniciranje , medij , znamka , novinar , upravljanje , komunikacija , déležnik , oglaševanje , trg , marketing , management , storitev , potrošnik , kampanja itd. , potem pa smo začeli razvrščati primere v drugo ( splošnojezikovno ) skupino in ugotovili , da npr. potrošnik , podjetje in novinar , ki smo jih uvrstili med terminološke kandidate , po naši presoji vendarle niso nič manj del splošnega jezika kot informacija , okolje , sporočilo , ugled , razvoj itd. , ki so se nam prvotno bolj zdeli del splošnega jezika .
Zadrego , v kateri smo se znašli pri samostalnikih , že prej pa tudi pri glagolih , opisuje že Pearson ( 1998 : 26 – 28 ) .
Avtorica izhaja iz spoznanja , da je način , na katerega ljudje govorijo o stvareh , odvisen od konkteksta , v katerem so , in od védenja , ki ga imajo .
Pearson tudi ugotavlja , da pogostost v splošnem jeziku ne more biti merodajna za opredeljevanje , katera beseda je termin in katera ni , da pa je sporazumevalno okolje ( vključno s sobesedilom ) , v katerem se pojavlja , pri odgovoru na to vprašanje vsekakor treba upoštevati – še več , avtorica verjame ( 35 ) , da je ustrezna opredelitev sporazumevalnega okolja , za katerega je verjetno , da se bo v njem pojavil termin , najboljša pot do ločevanja med terminološko in neterminološko leksiko .
Iz navedenega tudi v kontekstu pričujoče raziskave izpeljujemo spoznanje , da če je strokovno izrazje lastnost strokovnih jezikov in ga lahko opredelimo le na podlagi sobesedila , je edina sprejemljiva metoda za delo korpusni pristop .
Pri luščenju terminov smo uporabili metode , opisane v Justeson in Katz 1995 , Jacquemin 2001 ter Vintar 2003b .
Iz korpusa besedil odnosov z javnostmi smo poskusno pripravili dva seznama izluščenih terminoloških kandidatov : enobesednega in večbesednega .
Razmerje relativnih pogostosti v nadaljevanju imenujemo terminološka utež .
Nastal je seznam z 32.032 enobesednimi enotami , urejen padajoče po terminološki uteži .
Natančneje smo si ga za ta prispevek ogledali na dveh mestih : a ) prvih 1000 enot , ki imajo vrednost nad 100 , kar pomeni , da gre za besede , ki jih v korpusu FIDA ni , in b ) prvih 1000 enot , ki imajo vrednost pod 100 , kar pomeni , da v korpusu FIDA so ( v seznamu zasedajo mesta od 11.124 do 12.124 ) .
K a ) : Pregled prvih 1000 enot na seznamu je pokazal , da so razen enot deležniški in deležnik , ki sta očiten del termina oz. termin ( na seznamu zasedata 1. in 2. mesto ) , preostale enote predvsem : – lastna imena , – zatipkane besede , – številke , – angleške besede ( predvsem kot del bibliografskih enot ) , 8 – redke besede in neologizmi , vendar na prvi pogled ne terminološki ali vsaj ne terminološki v odnosih z javnostmi , npr. spihovati , paternalizem , nudenje , fenski , biltenov , varietejski , etabliran , razminiranje , publicirati , nepremoženjskost , preokupiranost .
Termini so v tem delu seznama dokaj skriti , čeprav seveda so tu .
Domnevamo lahko , da je izrazje odnosov z javnostmi ( verjetno to velja za več družboslovnih ved in tudi širše ) v veliki meri tudi del splošnega jezika , tako da zgolj primerjava ( ne ) pojavitve v splošnem korpusu prinese veliko odvečnega gradiva .
Glagolov je v tem delu okrog 60.
Del teh glagolov je navrgel korpusni šum , drugi so – kot smo že ugotavljali – verjetno značilni za strokovna besedila nasploh ( kar bi lahko statistično potrdila ali ovrgla primerjava s korpusom strokovnih besedil drugega področja ) , tretji pa so značilni za odnose z javnostmi : komunicirati , okvirjati , sporočiti , ciljati , informirati , odločevati .
Seveda bi bil nujen še pregled besedilnega okolja , a seznam razmeroma dobro kaže , katero izrazje si je vredno ogledati še podrobneje .
4.2.2 Seznam večbesednih luščenih terminoloških kandidatov Ta seznam je nastal s kombinacijo statistične in jezikoslovne metode .
Vidovič Muha 1988 ; 2000 : 68 – 70 ) ; po drugi strani ( b ) pa leksikalno in / ali pragmatično povezane ponovljive sopojavitve vsaj dveh leksikalnih enot , ki sta med seboj v neposrednem skladenjskem razmerju ( Bartsch 2004,10 nav .
Povedna sta v tem smislu tudi naslednja dva navedka : Študenti so imeli precej težav pri razlikovanju med terminološkimi kolokacijami /.../ in pravimi termini .
je vsaka poimenovalna enota ( termin , tudi večbesedni ) samostojno geslo , medtem ko so npr. v Splošnem tehniškem slovarju ( 1962 / 64 ) , Vojaškem slovarju ( 1977 / 2002 ) in Pravnem terminološkem slovarju : do 1990 , gradivo ( 1999 ) gesla le enobesedna , torej so kot gesla lahko prikazani le deli poimenovalnih enot ali njihovega besedilnega okolja , npr. v Vojaškem slovarju predlogi čez , na , ob , pridevniki občuten , obkoljen , kalibrski in glagoli iti , delati , odpreti .
( Vintar 2003a : 74. ) Teubert ( 2005/1999 : 106 ) ocenjuje , da je predvsem področje med leksiko in skladnjo tisto , h kateremu lahko prispeva oz. je prispevalo korpusno jezikoslovje , in meni , da lahko korpusno jezikoslovje s tem , ko daje statistične podatke o značilnem sopojavljanju , veliko bolje kot » klasično « jezikoslovje sledi pojavu posebne pomenske kohezije med kolokacijskimi elementi ( 113 – 114 ) .
Za razliko od strukturalnega jezikoslovja , za katerega Gantar ( 2004 : 116 ) ugotavlja , da pri proučevanju kolokacij ni dalo dokončnih odgovorov , ker gre za pojav z nejasno določenimi mejami znotraj strukturalno jasno določenega jezikovnega sistema , se je besedilni pristop ( Firth , Halliday , Sinclair idr. ) osredotočil na besedno povezovalnost , v kateri leksikalnih enot ni več smiselno razumeti kot dokončnih v smislu razmejitve med besedami in zvezami na eni strani ter med kolokacijami in stalnimi besednimi zvezami na drugi .
Vsekakor je proučevanje kolokacij ena od nujnih analiz vsakega korpusa , katerega namen je ( terminološki ) slovar .
Naloga terminografa je zadovoljiti čim več poizvedb različnih uporabnikov slovarja , to pa pomeni , da je treba termine vključiti tako , da bosta celovito terminološko informacijo dobila dokumentalist in prevajalec , pa tudi vsi drugi .
Vprašanje , ki ga je treba rešiti v nadaljevanju , je način umestitve oz. prikaza enih in drugih v geselskem članku .
Ko smo izločili lastna imena , je bilo skoraj vse ostalo prepoznavno bodisi kot termin , npr. blagovna znamka , neprofitna organizacija , korporativna identiteta , komunikacijski menedžment , marketinško komuniciranje , uglednostni kapital , ciljna javnost , mnenjski voditelj , bodisi kot kolokacija , npr. vloga managerja , oddelek za odnose z javnostmi , deležnik organizacije , zadovoljstvo zaposlenih , pozitivna publiciteta .
5 Sklep V prispevku smo predstavili del terminografskega projekta gradnje korpusa in slovarja odnosov z javnostmi , pri čemer smo se še posebej posvetili utemeljitvi korpusnega pristopa , ki po našem prepričanju prinaša tehnološko sodobnejše , metodološko naprednejše in nenazadnje uporabniku prijaznejše rezultate .
Korpusi strokovnih besedil z več sto tisoč ali celo milijoni besed so razrahljali več mej : mejo med terminološko in neterminološko leksiko , mejo , do katere še govorimo o večbesedni poimenovalni enoti in čez katero je že prostor kolokacij , ter mejo , ki določa , ali gre za termin področja , ki ga obravnavamo , ali ne .
Korpus s frekvenco razvidno izpostavi tudi terminološke kandidate , ki so sistemsko termini , zelo verjetno pa jih nobeno področje ne bo vzelo za svojega , ker so del nekakšnega skupnega slovenskega strokovnega jezika .
Zaradi večje količine in boljše kakovosti podatkov se zdi , da je korpusni terminograf še pogosteje prisiljen v tehtanje , zaradi katerega si bo ob konkretnih primerih – paradoksalno – največkrat želel , da bi imel podatkov še več .
Kar se tiče slednjih , smo že v okviru opisanega eksperimenta ugotovili nekatere pomanjkljivosti , ki bi jih bilo mogoče odpraviti z dopolnitvijo seznama luščenih besednovrstnih vzorcev , izločanjem lastnih imen in ciljnim luščenjem nekaterih znanih oblik variacij , denimo kombinacije razvezane oblike termina in njegove kratice .
Načrtujemo , da bo omenjeno vrzel v kratkem zapolnil projekt Slovenski terminološki portal.11 Projekt s šifro L6-9778-0581-06 sofinancira Javna agencija za raziskovalno dejavnost Republike RAČUNALNIŠKA PODPORA PREVAJALSKEMU IN TERMINOLOŠKEMU DELU NA PRIMERU PREVAJANJA V OKOLJU SEKTORJA ZA PREVAJANJE SVEZ RAČUNALNIŠKA PODPORA PREVAJALSKEMU IN TERMINOLOŠKEMU DELU NA PRIMERU PREVAJANJA V OKOLJU SEKTORJA ZA PREVAJANJE SLUŽBE VLADE REPUBLIKE SLOVENIJE ZA EVROPSKE ZADEVE POVZETEK Naloga v prvem sklopu predvsem z vidika uporabnosti in učinkovitosti na kratko predstavi najbolj razširjene računalniške tehnologije , ki jih po svetu in v Sloveniji uporabljajo prevajalci in terminologi pri svojem delu .
Te tehnologije so strojno prevajanje , računalniško podprto prevajanje , kamor sodijo pomnilniki prevodov in terminološki programi , ter korpusi .
V osrednjem delu je kot primer opisano delovno okolje Sektorja za prevajanje Službe Vlade RS za evropske zadeve in računalniška podpora , ki jo nudi prevajanju in upravljanju terminologije .
Za ta dva postopka sta podrobneje predstavljena programa MultiTerm in Translator's Workbench , skupaj z njunima spletnima različicama Evrotermom in Evrokorpusom .
Zadnje poglavje predstavlja sporne točke področja jezikovnih tehnologij pri nas , ki med drugim obsegajo terminološko problematiko strokovnega jezika ter okrnjeno širjenje in zagotavljanje slovenskih jezikovnih virov .
Razvoj sodobnih jezikovnih tehnologij zahteva pospešeno pridobivanje ustreznih jezikovnih virov , za kar v zadnjih letih še posebej intenzivno skrbijo države članice Evropske unije .
Nova odkritja na tem področju in širjenje kroga uporabnikov namreč predstavljajo osnovno infrastrukturo za razvoj sistemov jezikovnih tehnologij , ki bodo omogočili preseganje jezikovnih pregrad v sodobni Evropi .
Ker pa je pri nas računalniška podpora prevajalskemu in terminološkemu delu – tako kot prevodoslovje samo – novo področje , je njeno poznavanje in raba zaenkrat še v začetni fazi .
Težava , s katero se srečuje razvoj teh tehnologij pri nas , je neosveščenost .
Slabo poznavanje prevajalskih orodij je posledica majhnosti trga in zamude pri vključevanju v večje evropske in svetovne združbe .
Uporabnik mora vložiti denar za nakup programskega orodja ( ne vedno , saj je na spletu določena programska oprema brezplačna ) , čas za učenje dela s programom in za gradnjo baze podatkov , poleg tega pa mora znati izrabljati jezikovne vire in imeti določene računalniške spretnosti .
Računalniške tehnologije terminološkemu in prevajalskemu delu omogočajo kompaktno , poceni in dolgoročno shranjevanje , hitro obdelavo velikih količin podatkov , lažjo izmenjavo in distribucijo podatkov , posodabljanje , raznovrstno iskanje po podatkovnih bazah , urejanje vnosov delov besedil , povezave med njimi in z drugimi programi ( npr. urejevalnikom besedil , lokalizacijskimi programi ) ter avtomatizacijo iskanja terminologije in prevodnih ustreznic .
Da bi bralcu omogočili razumevanje tematike , mu v uvodnem delu predstavimo tri vrste računalniških tehnologij , ki jih uporabljajo prevajalci in terminologi po svetu , in ki služijo kot osnova za nadaljnji razvoj tudi v Sloveniji .
Z razvojem in raziskavami na tem področju so se kmalu oblikovala računalniško podprta orodja , ki nič več ne simulirajo prevajalskega postopka , ampak so mu le v pomoč .
Da bi potrebe računalniške podpore v Sektorju lahko pravilno ocenili , ga umestimo v mednarodno okolje in primerjamo z evropsko sorodnico Prevajalsko službo Evropske komisije .
Tretji del je posvečen opisu težav v Sloveniji , ki zajemajo terminološko problematiko strokovnega jezika in okrnjeno širjenje in zagotavljanje slovenskih jezikovnih virov .
Znanje , ki smo ga pridobili v uvodnem delu , pri preučevanju tehnologij in okolij , kjer se uporabljajo , izkoristimo za razmišljanje o prihodnosti terminologije in jezikovnih tehnologij pri nas in po svetu .
1.1SPLOŠNI ORIS PODROČJA Alan K. Melby ( 1998 : 1-2 ) , predsednik Odbora za prevajanje in računalnike Ameriške zveze prevajalcev ( American Translators Association Translation and Computers Committee ) in član pomembnih institucij , ki se ukvarjajo s prevajanjem in terminologijo ( Association for Computing in the Humanities , Association for Computational Linguistics , Association for Literary and Linguistic Computing , ISO itn. ) , razdeli računalniško podporo prevajanju na osem tipov , ki so v uporabi na treh stopnjah prevajanja , na ravni posameznega izraza in celega segmenta ( tj. del besedila , večji od izraza , ponavadi stavek ) : INFRASTRUKTURA IZRAZ SEGMENT PRED PREVAJANJEM • Pol ( samodejno ) luščenje terminoloških kandidatov • Raziskovanje terminologije • Poravnava in označevanje prejšnjih izhodiščnih in ciljnih besedil ter segmentacija novega izhodiščnega besedila MED PREVAJANJEM • Samodejno iskanje in vstavljanje izrazov • Pomnilnik prevodov • Strojni prevajalnik PO PREVAJANJU • Pregled terminološke doslednosti in nedovoljene terminologije • Zaznava manjkajočega segmenta ter pregledi oblike in slovnice PREGLED NAD PREVAJALSKIM POSTOPKOM IN OBRAČUN Slika 1 – Osem tipov prevajalskih tehnologij 1.
Ti so : orodja za pripravo elektronske oblike besedila : orodja za skeniranje in pretvorbo grafičnega zapisa v elektronsko besedilo ( optično čitanje znakov – OCR ) orodja za ustvarjanje in upravljanje dokumenta : urejevalnik besedil ( npr. Microsoftov Word , Sunov StarOffice ) z najpomembnejšimi funkcijami : oblikovanje dokumentov , štetje besed in znakov ( za izračun prevajalskih strani ) , nastavitev jezikovne podpore v operacijskem sistemu , tuji nabori znakov , primerjava različic dokumentov itd.
podatkovne zbirke : elektronski slovarji ( eno - , dvo - in večjezični slovarji ) kot npr. Slovensko-angleški , Collins Cobuild , LINA ( zadnji in najnovejši program istega podjetja , ki omogoča delo z različnimi slovarji hkrati ) , s katerimi je mogočih več načinov iskanja , dodajanje opomb itd.
telekomunikacije ( internet / intranet , elektronska pošta , protokol za prenos datotek ( FTP ) , telefonski stiki ) , ki nam omogočajo dostop tudi do drugih prevajalskih virov in programov : podatkovne zbirke na internetu : slovarji , tezavri , terminološke baze , bibliografske baze ( npr. COBISS ) , zbirke besedil ( različni korpusi ) , primerljiva besedila itn. programi za prevajanje in urejanje terminologije na internetu : programi s pomnilniki prevodov , terminološki programi , strojni prevajalniki , orodja za lokalizacijo računalniških programov ( prilagoditev programske opreme jezikovnim in kulturnim zahtevam okolja , kjer se uporablja ) idr. drugi viri na internetu : serijske publikacije , domače strani proizvajalcev programske opreme , prevajalskih inštitutov , društev , agencij , konferenc , kongresov , druga poročila iz akademsko-raziskovalnih krogov , informacije o prevodoslovju , jezikoslovju , jezikovnih in računalniških tehnologijah ipd. 2.
Program za luščenje terminoloških kandidatov je po nalogi podoben črkovalniku , vendar deluje dosti bolje , saj prevajalcu ponudi tudi izraze , iz katerih lahko nastanejo novi večbesedni izrazi ( npr. ne odločamo se le med izrazoma thermal in layer , ampak lahko izberemo tudi celo besedno zvezo thermal layer ) .
Orodje za iskanje terminologije lahko išče v več virih , npr. v že prevedenih besedilih , na internetu , v večjezikovnih besedilnih zbirkah ipd. 3.
Takšno iskanje terminologije omogoča dosledno uporabo izrazov .
PO PREVAJANJU NA RAVNI IZRAZA : Pregled terminološke doslednosti in nedovoljene terminologije Pregledovalci se sprožijo , ko je prevod že končan .
PRED PREVAJANJEM NA RAVNI SEGMENTA : Poravnava in označevanje prejšnjih izhodiščnih in ciljnih besedil ter segmentacija novega izhodiščnega besedila Poravnava in označitev segmentov izhodiščnega in ciljnega besedila za ponovno uporabo sta nujni za pravilno delovanje programa s pomnilnikom prevodov .
MED PREVAJANJEM NA RAVNI SEGMENTA : Pomnilnik prevodov in strojni prevajalnik Ko so segmenti označeni in poravnani , pomnilnik prevodov pregleda prejšnja prevedena besedila , primerja nove segmente s segmenti v svoji bazi in samodejno prikliče tiste , ki niso ( veliko ) spremenjeni ter jih pripravi za ponovno uporabo .
Pri prevedenih besedilih , ki potrebujejo le nekaj majhnih popravkov , je pomnilnik prevodov še posebej učinkovit .
Strojno prevajanje svojim uporabnikom daje možnost izbire in dopolnjevanja slovarjev .
PO PREVAJANJU NA RAVNI SEGMENTA : Zaznava manjkajočih segmentov ter pregled oblike in slovnice Program opozori na manjkajoče segmente , slovnične nepravilnosti in spremembe oblik .
PREGLED NAD PREVAJALSKIM POSTOPKOM IN OBRAČUN Ta posredni del prevajanja služi spremljanju napredka prevajalskih projektov .
2RAČUNALNIŠKE TEHNOLOGIJE ZA PREVAJANJE IN TERMINOLOGIJO Sanje o samodejnem prevajanju med ljudmi obstajajo že dolgo ( predlog o mehanskem slovarju Descartesa in Leibniza seže v 17. stol .
Sistemi za samodejno prevajanje se tako razvijajo že od časov izuma elektronskega računalnika v štiridesetih letih .
Dolga leta zatem se je tako prevajanje izvajalo neposredno prek dvojezičnih slovarjev in postopek je vključeval skopo analizo drugih jezikovnih prvin .
Ti sistemi so vključevali programe za prepoznavanje besednih oblik ( morfološka raven ) , strukture stavkov ( skladenjska raven ) in razpoznavanje večpomenskosti , homonimov ter leksikalnih razmerij ( leksikalna raven ) .
Skozi zgodovino so bili razviti trije tipi sistemov strojnega prevajanja ( Hutchins 1992 : 4 ) : Pri neposrednem pristopu , ki je najstarejši , gre za strojno prevajanje posameznega para jezikov v eno smer .
Izhodiščno besedilo je analizirano zgolj za potrebe pretvarjanja v ciljni jezik .
Pri tem gre za dva dela postopka : prevod iz izhodiščnega jezika v vmesni jezik , kateremu sledi prevod iz vmesnega jezika v ciljni jezik .
Tako so omogočala večjezično obdelovanje besedil , pošiljanje in sprejemanje dokumentov v elektronski obliki , pretvorbo grafičnih zapisov v besedila elektronske oblike , upravljanje terminologije s konkordančnim iskanjem , pomnilnike prevodov itn. Prevajalska namizja so računalnik prevajalcem predstavila v povsem novi luči .
Pri strojnem prevajanju slovarji in terminologija zahtevajo trud , čas in denar , pomnilniki prevodov pa se zanašajo na zbirko uporabnih prevodov .
Slika 2 – Prevajalski postopek namizja Transit ( http://www.star-transit.com ) Do pred nekaj leti so ti sistemi tekli na velikih računalnikih ( ang. mainframe computers ) in so bili naprodaj za več milijonov dolarjev .
Slovenski GNUsl7 skuša v duhu GNU ponuditi tiste tehnologije , ki so prosto dostopne in vezane na slovenski prostor : internetni črkovalni servis Primož Trubar , prazne besede slovenskega jezika ( predlogi , vezniki , zaimki , pomožni glagoli itn. ) , navodila za prilagoditev nekaterih računalniških orodij slovenskemu jeziku ( npr. kodni nabori , tezaver slovenskega jezika , oblikoskladenjski slovar ) ter nenazadnje orodje za lokalizacijo programov v obliki pomnilnika prevodov SMART8 skupine za slovenjenje Linuxa ( Košir , Peterlin in Erjavec 1998 ) .
Kakšen je dober prevod , je kompleksno vprašanje , na katerega se ne da preprosto odgovoriti .
Pri strojnih prevajalnikih je odločilen podatek , koliko sprememb in popravkov potrebuje prevod ( čeprav zna prevajalnik tudi sam zaznati nekatere napake in sam ponuja načine , kako se izogniti napakam ) , da ustreza prevajalcu , bralcu ali naročniku , in koliko časa se pri tem porabi ( Ilič , Golob in Čurić 1999 ) .
Na srečo so nekatera orodja za pridobivanje slovenskih jezikovnih virov in jezikovni viri drugih jezikov dostopni v tujini ali celo brezplačno na internetu .
Da se izognemo nepotrebnim napakam , je priporočljivo izhodiščno besedilo najprej pripraviti ( ali prenesti v nadzorovani jezik ) , pri čemer moramo paziti na enostavno stavčno strukturo in manjši obseg besedila , ki gre v prevod .
Stavčna struktura takšnih besedil navadno ni zapletena oz. bi jo lahko lažje prilagodili .
Ob nepravi uporabi se lahko strojni prevajalnik res izkaže za zamudnega .
Vseeno uporabniki počasi začenjajo sprejemati prednosti strojnega prevajanja pri enostavno strukturiranih besedilih , saj je uporabno tudi za preverjanje besedila .
Strojno prevajanje je dostopno tudi na internetu .
Dodaten znak velikega vpliva interneta je naraščanje programov za strojno prevajanje spletnih strani , elektronske pošte in pripetih dokumentov ter klepetalnic .
Nekatera orodja lahko za uporabo strojnih prevajalnikov in pomnilnikov prevodov jezik izhodiščnega besedila priredijo nadzorovanemu jeziku .
Strojne prevajalnike uporabljajo tudi poslovni ljudje , in sicer za prevajanje glavnega pomena dokumentov , elektronske pošte , časopisnih člankov , poslovnih pisem ; koristni so pri izbiri besedil , ki potrebujejo prevod strokovnjaka , za posredovanje informacij , ki spremljajo izhodiščno besedilo ter za izdelavo prevodov kot polizdelkov za nadaljnjo uporabo .
V zadnjem času se vedno pogosteje pojavlja težnja po združevanju strojnih prevajalnikov s pomnilniki prevodov .
Translator's Workbench je danes na voljo z integriranim sistemom za strojno prevajanje podjetja Logos11 , ki vskoči pri vseh prevodnih enotah , ki nimajo ustreznic v pomnilniku prevodov .
Slika 3 – Primer strojnega prevajalnika Langenscheidts T1 Professional 4.0 ( http://www.langenscheidt.de ) Podjetja se zavedajo potenciala strojnega prevajanja , zato se v bližnji prihodnosti obetajo nove , izboljšane verzije in sveže ideje .
Sistem omogoča prevajanje ogromnih količin dokumentov za naročnike z vsega sveta , ponuja pa tudi lokalizacijo podjetjem , ki razvijajo programsko opremo za kitajsko govoreči del tržišča ( Hutchins 1999 ) .
Ti programi nam služijo za podporo referenčnega dela , tj. iskanja po slovarjih , vzorčnih besedilih , terminoloških bazah .
« Pomnilnik prevodov je lahko integriran v urejevalnik besedil , lahko pa ima lastno delovno namizje , v katerega uvozimo dokument , ki ga želimo prevesti .
Navadno obsega še orodje za izdelavo in upravljanje terminoloških enot , komponento za vzporejanje , s katero pomnilnike ustvarjamo iz že prevedenih besedil , preverjanje črkovanja , strojno prevajanje , lahko pa ima tudi statistični program , s katerim lahko ugotovimo t.i. faktor ponavljanja v besedilu .
To orodje nima vgrajenih modulov za oblikoskladenjsko analizo prevodnih enot , niti lastnih leksikonov , saj deluje na jezikovno neodvisnem principu , kar pomeni , da ne zaznava podobnosti pomenov .
Sposobno je prepoznavati podobnost na ravni besed ali besednih nizov , zato je uporabno za vse jezikovne pare oz. za vse jezike , za katere je zagotovljena znakovna podpora .
Na učinkovitost in uporabnost pomnilnika prevodov vplivajo naslednji dejavniki ( Vintar 1998 ; Webb 2000 ) : Elektronski izvirnik , ki je nujno potreben za kakršno koli računalniško obdelavo besedila in nenazadnje tudi za obračunavanje prevedenih znakov oz. prevajalskih strani .
Obseg projekta oz. dolžina besedila , saj pri manjši količini obstaja možnost , da se začetna časovna in finančna investicija ne povrne .
Velikost , število in kakovost terminoloških baz in pomnilnikov prevodov , ki jih imamo na razpolago med prevajanjem .
Sorazmerno s časom in posledično s številom prevodnih enot v pomnilniku ter izrazov v bazi se povečuje učinkovitost prevajalskega postopka .
Če za segmente izberemo povedi , potem mora pomnilnik segmente prepoznati glede na končna ločila in ne na ločila , ki jih uporabljamo sredi povedi , kot npr. Mr. , vs .
Za pomnilnik prevodov so primerna besedila , za katera prevajalec ve , da bodo v prihodnosti dopolnjena ali spremenjena , besedila , ki vsebujejo strokovno terminologijo , ponavljanje določenih besednih zvez in stavčnih struktur .
Faktor ponavljanja je tako najvišji v pravnih , poslovnih , tehničnih , strokovnih in znanstvenih besedilih , ne pa v literarnih , publicističnih , esejističnih in drugih ekspresivnih besedilih s stilno-pragmatičnimi lastnostmi .
Poznamo tri tipe ponavljajočih se besedil : terminološko ponavljajoča se besedila Pri teh besedilih bi bila bolj kot pomnilnik prevodov učinkovita terminološka baza s samodejnim vstavljanjem izrazov , saj vsebujejo veliko strokovnega izrazja in malo utečenih stavčnih struktur in fraz .
Zelo pomembno je kakovostno in hitro iskanje meglenih zadetkov .
Taka besedila so npr. vložni listki pri zdravilih , besedila v poslovni korespondenci , ponudbe , ceniki , računi , dobavna pisma itn. Pogoji naročnika so približno enaki , pa naj gre za posameznika , podjetje , prevajalsko agencijo ali državni organ : dobiček ter čim manj stroškov pri prevajanju : Povrnitev začetne denarne investicije je postopna .
Rast produktivnosti rabe pomnilnika prevodov je lahko malce dolgotrajnejša od konvencionalnih prevajalskih postopkov , saj moramo upoštevati spoznavanje z orodjem ( sploh če prevajalec dobi program skupaj z izvirnim besedilom in kratkim rokom , ima pa še težave z nastavitvami ) in postopno kopičenje podatkov v pomnilniku .
Produktivnost dela s pomnilniki prevodov naj bi se s časom povečala za približno 30 do 40 odstotkov , s tem pa bi postalo delo cenejše in hitrejše .
Samostojni prevajalci bodo prej ali slej tudi sami morali začeti uporabljati pomnilnike prevodov , če bodo hoteli konkurirati kolegom , ki jih že uporabljajo .
Poleg tega pa jim orodje zagotavlja doslednost v prevodu , saj lahko pomnilnik prevodov tudi prek mreže predlaga izraz oz. segment , ki se nahaja drugje v dokumentu oz. projektu .
kakovosten prevod : Kakovost prevoda s pomnilnikom prevodov mora ustrezati standardom ( standardi skupine ISO 9000 , SIST ISO 9001:2000 ) .
Čim krajši čas prevajanja : Ker je podatkovna baza ob nakupu orodja prazna , moramo za vnos že prevedenih besedil uporabiti program za vzporejanje , ki navadno zahteva še ročno popravljanje segmentacijskih napak .
Ko je to opravljeno in ko imamo v pomnilniku že večje število prevodov , prevajalec pri delu prihrani več časa , saj se ukvarja samo s prevodnimi enotami , ki jih ni še nikoli prevedel .
prejem prevoda v zaželenem formatu možnost načrtovanja proračuna za prevajanje in ocenjevanja časa , ki je potreben , da prevod pride na trg Možnost uporabe v povezavi s terminološko bazo ali pa s strojnim prevajalnikom , s katerim bi bilo treba prevesti samo še tiste dele besedila , za katere pomnilnik prevodov ne bi našel zadetka ( ang. no match ) .
Ti programi se v svetu najhitreje uveljavljajo v velikih industrijskih podjetjih z mednarodno dejavnostjo in državnih institucijah , kjer se prevajajo velike količine besedil z istega področja in kjer se že prevedena besedila pogosto posodabljajo in izdajajo na novo ( npr. navodila za uporabo , uporabniški priročniki , dokumenti mednarodnih in državnih upravnih organov ) .
Shranjene prevodne enote pa so dragocen jezikovni vir za bodoče delo ( za korpus ali ( pol ) samodejno pridobivanje terminologije ) terminologov in prevodoslovcev .
Prevajanje besedil s področij kot so proizvodnja , energija , pravo , medicina idr. je lahko zato zelo naporno , saj je iskanje izrazov in njihovih prevodov lahko dolgotrajno in neuspešno .
Prevajalec ali skupina prevajalcev , ki večinoma prevajajo besedila določenega področja , si zato sami ustvarjajo terminološko bazo , ki jim v naslednjih prevodih zagotavlja tudi enotnost pri izbiri izrazov .
Delajo pa lahko tudi na različnih jezikih , saj lahko terminološki program za posamezen izraz shranjuje večjezične prevodne ustreznice ( ItoCAT 2002 ) .
Ta ( lahko ) vsebuje orodja , ki : strukturirajo , posodabljajo in povezujejo vnose , omogočajo preproste funkcije iskanja , omogočajo konceptualni prikaz popolnih in meglenih zadetkov , podpirajo shranjevanje grafičnih prikazov , omogočajo samodejno vnašanje izrazov v urejevalnik besedil z jezikovno analizo izhodiščnega in ciljnega besedila prepoznajo in izločijo izraze za uvoz v terminološki program , vključujejo tudi slovarsko upravljanje terminologije , podatkovno bazo izvozijo in uvozijo v druge aplikacije .
V nekaterih pogledih so zelo podobni pomnilnikom prevodov : Podpirajo vse jezike , za katere je zagotovljena znakovna podpora , saj je iskanje tudi tu pogojeno s podobnostjo besed .
Omogočajo globalno iskanje ( iskanje tudi po delih izraza ) , megleno iskanje ( prikaže se kazalo besednih zvez , ki poleg korena iskane besede vsebuje tudi tvorjenke , oblikoslovne različice besed ipd. ) in filtriranje ( prikaz vnosov po kriterijih , kot jih določi uporabnik ) .
Terminološki vnosi so opremljeni s podatki o vnašanju ( vnašatelj , datum vnosa , datum spremembe , področje , kje v besedilu se izraz nahaja itn. ) in o izrazu samem ( o rabi , obliki , lastnostih , definiciji idr. ) .
Terminološka baza je ob nakupu prazna in neuporabna , dokler vanjo ne vnesemo terminoloških vnosov .
Prevajalec lahko uporablja terminološko bazo kot dopolnilo pomnilniku prevodov ali drugim jezikovnim virom .
Zaradi Chomskyjeve podpore preučevanja » notranjega jezika « oz. Človeške sposobnosti produkcije jezika in njegovih drugih vplivnih teorij je zanimanje za korpuse za nekaj let zbledelo in se spet prebudilo v osemdesetih , predvsem zaradi hitrega razvoja najrazličnejših tehnologij , empirične narave raziskovanja in povečanja količine besedil ter kakovosti korpusov ( Hirci 1998 ) .
Raziskovalni projekti se širijo v akademski družbi in nad učinkovitostjo analiz računalniškega korpusa se navdušujeta obe veji .
Seveda pa je za določene vrste analiz ( npr. semantično ali analizo diskurza ) še vedno potrebno pretežno človeško delo .
Prevodoslovci uporabljajo korpuse kot vir za preučevanje prevajanja z opisnimi študijami , strojno prevajanje in druga področja obdelave jezika .
Osnovni namen korpusov je omogočanje temeljitega vpogleda v jezik na najrazličnejših ravneh in področjih .
Tako jih lahko s pridom uporabljamo v jezikoslovju , v humanističnih in družboslovnih vedah in celo v informatiki in matematiki .
Večinoma so uporabni v leksikologiji in predvsem leksikografiji , zdaj pa se z različnimi tipi , ki so dostopni širšemu krogu ljudi , vse bolj širijo na vsa jezikoslovna področja .
Koristno jih torej lahko uporabljamo v slovaropisju , pri jezikovnih študijah , razvoju jezikovnih tehnologij , pa tudi za dinamična in z gospodarstvom neposredno povezana področja jezika , kot je terminologija .
Ta statistični podatek pove , kolikokrat se določena beseda ali besedna zveza v korpusu pojavi , kar olajša izbiro ustreznice pri prevajanju .
Z njimi lahko ugotovimo , v kakšnem sobesedilu je mogoče uporabiti besedo , s katerim predlogom se veže , ali jo je mogoče uporabiti figurativno itn. Če je konkordanca zadosti velika , si lahko pogledamo primere rabe besede v dejanskih besedilih .
Programi , ki naredijo abecedni seznam vseh oblik besed ( pri vzporednih korpusih v dveh poravnanih oknih KWIC ) .
Divje iskanje za dele besed , morfeme in njihove načine obnašanja , besede , ki se z določenim nizom končajo ali začnejo , sopojave dveh ali več besed , rime ipd.
Iskanje idiomatske rabe .
Za raziskave pri enojezičnih korpusih se lahko išče vse pojavitve besede , katere prevod se ne pojavi v prevodu stavka , v katerem se beseda nahaja .
Lahko je zelo draga , dodatne težave pa lahko povzroča še pravno vprašanje , kdo je njegov lastnik ( avtorji , založbe , prevajalci idr. ) Delitev korpusov po nekaterih tipih glede na uporabnost pri prevajanju in v prevodoslovju ( Baker 1995 ) : Vzporedni korpusi ( izvirna besedila in njihovi prevodi ) so nepogrešljivi pri prevajanju , za izdelavo prevajalskih pripomočkov , pri izboljšavah za strojno prevajanje in za izdelavo terminoloških baz , kot orodje pri programih za poučevanje prevajanja , pri učenju jezikov s pomočjo jezikovnih tehnologij in pri terminoloških študijah , kjer so terminološki izrazi izluščeni iz korpusov .
Največji uporabniki vzporednih korpusov so Združeni narodi , Nato , Evropska unija in države z dvema uradnim jezikoma ( npr. Kanada ) .
V vzporednih korpusih lahko iščemo prevodne ustreznice s pomočjo vzporednih konkordanc .
Primerjamo lahko pogostost posameznih prevodnih ustreznic in njihova sobesedila , kar olajša izbiro primernega prevoda .
S prepoznavanjem strokovnih izrazov oz. njihovih prevodov , besed in fraz se približujejo pomnilnikom prevodov in terminološkim bazam .
Pomembno vlogo imajo pri materialih za pisanje , poučevanju prevajalcev in pri izboljšavi programov za strojno prevajanje .
Primer vzporednih in primerljivih korpusov je korpus MULTEXT-East17 , ki zajema šest srednje - in vzhodnoevropskih jezikov ( med njimi tudi slovenskega ) in je nadaljevanje projekta MULTEXT šestih jezikov Evropske unije .
Tako je korpus izvirnih besedil pravzaprav enojezični korpus , ki je prav tako uporaben kot pomoč študentu prevajanja pri razumevanju nematernega jezika in razvijanju sposobnosti izražanja v maternem .
Za prevajalce so lahko uporabni tudi referenčni korpusi ( osnovna zvrst korpusov ) .
Ti služijo kot jezikovni standardi , predstavljali naj bi idealizirano podobo jezika .
Referenčni korpus angleškega jezika British National Corpus18 in spremljevalni korpus Bank of English19 sta dva največjih .
Računalniški korpusi besedil so dandanes zelo priljubljeni tudi v Evropski uniji ( PEDANT20 , Intersect21 ) .
Za iskanje besed in besednih zvez ter večjezikovnih izrazov lahko uporabimo spletne iskalnike kot so Google ( išče tudi po slovenskih izrazih ) , Altavista , Yahoo !
Med iskalniki so za prevajalca učinkovitejši tisti , ki mu poleg z naslovi spletnih strani postrežejo tudi s kratkim povzetkom vsebine .
Korpusi slovenskega jezika so : J. Toporišič ( ur .
) : Besedila slovenskega jezika , 1975. P. Tancig et al. : Napadi na JNA , 198922. M. Hladnik : Literat , 1995 - 200023. T. Erjavec et al. : MULTEXT-East , 199824. T. Erjavec et al. : ELAN , 199925. P. Jakopin : Beseda , 199926 ; Nova beseda , 200027. S. Krek et al. : FIDA , 200028. M. Željko , A. Krstič : Evrokorpus , 2002.
Lahko jih uporabljamo tudi za lastne potrebe , bodisi s pomočjo orodij , ki jih nudijo programi s pomnilnikom prevodov , bodisi z že naštetimi orodji .
Sektor za prevajanje Službe Vlade Republike Slovenije za evropske zadeve ( v nadaljnjem besedilu SP ) je pooblaščen za izvedbo obsežne in zahtevne prevajalske naloge pred vstopom Slovenije v Evropsko unijo ( PraOrSi 1998 : 3 ) .
V skladu s tem : pripravlja slovensko različico pravnih predpisov Evropskih skupnosti ; skrbi za izobraževanje in usposabljanje vseh , ki sodelujejo pri prevajanju pravnih predpisov ; vzpostavlja novo slovensko pravno in strokovno terminologijo na področju evropskih zadev ; ureja terminološko zbirko ; arhivira slovenske različice pravnih aktov Evropskih skupnosti .
Osnova za pregled usklajenosti obeh zakonodaj so prevodi pravnih aktov ES v slovenščino ter ustrezne slovenske zakonodaje v enega od uradnih jezikov EU .
Do takrat je treba prevesti toliko strani uradnih dokumentov , kolikor jih je bilo napisanih od nastanka Evropske skupnosti za premog in jeklo ( 1951 ) do danes in bodo na dan včlanitve veljavni ( približno 85.000 strani dokumentov ) .
SP je prevedel že približno 40.000 strani pravnih aktov in drugih dokumentov , ki so jih izdali organi EU in RS : Državni program za prevzem pravnega reda EU do leta 2002 , ki se je večkrat spreminjal in dopolnjeval , predpristopna strategija , programi PHARE , mnenja in poročila Evropske komisije o napredku Slovenije pri vključevanju v EU itd.
Obvladovanje tolikšne količine prevajanja zahteva veliko število usposobljenih prevajalcev , premišljeno organizacijo dela , spremljanje prevoda od naročila do končnega izdelka , večkratno pregledovanje prevoda , urejanje terminologije in uporabo enotnega izrazja .
Dokumente EU in relevantno slovensko zakonodajo prevaja tudi približno 120 zunanjih sodelavcev , prevajalskih agencij in samostojnih prevajalcev , izbranih prek javnih razpisov .
Celotni delovni potek prevajanja v SP je razdeljen na šest stopenj , ki jih povezuje Oddelek za organizacijo , distribucijo in arhiviranje prevodov ( v nadaljnjem besedilu ODA ) .
Slika 6 – Delovni potek prevajanja v SP Opis stopenj delovnega poteka prevajanja ( PogPrRed 2001 : 1 ; PosPrRed 2002 : 1-7 ; Zužič-Žerjal 1999 : 1-4 ) : 1 – prevod : Prevod pomeni prevod besedila iz izhodiščnega v ciljni jezik , jezikovno redakcijo / pregled prevoda glede na izvirnik ter izročitev prevoda in glosarja izrazov v elektronski obliki .
Izvajajo ga pravniki-redaktorji Službe Vlade RS za zakonodajo ( v nadaljnjem besedilu SVZ ) in imenovani pravniki redaktorji po ministrstvih .
6 – Komisija za pravno redakcijo prevodov ( v nadaljnjem besedilu KPR ) je skupno telo SVZ in SVEZ in je pristojna za koordinacijo projekta priprave slovenske različice pravnih aktov ES na področju pravne redakcije ter potrjuje pravno in vsebinsko istovetnost prevodov pravnih aktov ES z izvirnikom .
Različico še enkrat pregledajo slovenski pravniki-redaktorji v Evropskem svetu in Komisiji .
3.2 RAČUNALNIŠKA PODPORA Za nemoteno delovanje računalniškega sistema SVEZ , njegovo nadgradnjo ter razvoj in povezavo v ostale dele računalniško opremljene državne uprave skrbita Oddelek za informacijsko tehnologijo in Informacijsko dokumentacijski center ( v nadaljnjem besedilu Oddelek IT in IDC ) .
Za učinkovito izvajanje tako velikega prevajalskega projekta , kot je prevajanje evropske in slovenske zakonodaje , je pomembno natančno računalniško spremljanje delovnega poteka in dostop do prevodov za vse , ki jih bodo potrebovali pri pripravah za vstop RS v EU .
Eden od projektov , ki sestavljajo IDC , je tudi projekt Prevodi in terminologija .
Zato se na stopnji strokovne redakcije evidenca stanja prevodov vodi s tabelo v programu MS Excel .
Strokovno revidirani prevodi se nato vložijo v bazo v Lotus Notes , iz koder jih na stopnji pravne redakcije prevzame SVZ .
Tako ima SP dostop do baze pravnih aktov ES Celex in Registra predpisov Slovenije ( na voljo tudi širši javnosti30 ) , v katerem je mogoč vzporedni izpis evropskih in slovenskih pravnih aktov ( skupaj z evidenčnim podatkom o prevodu ) , ki so usklajeni po registru predpisov zakonodaje EU in slovenske zakonodaje .
Zelo uporaben je tudi komercialni Pravni in poslovni informacijski sistem IUS-INFO34 , v katerem je mogoče enostavno in sestavljeno hitro iskanje po več zbirkah hkrati ( zbirke besedil sodišč , Državnega zbora , Uradni list idr. ) .
Spletni različici omogočata celo lažje iskanje , saj sta povezani tako , da ima uporabnik poleg posameznih izrazov na vpogled tudi sobesedilo , ki se nahaja v korpusu .
3.2.1 RAČUNALNIŠKA PODPORA TERMINOLOŠKEMU DELU Zbiranje izrazja in terminološka redakcija potekata na različnih ravneh .
Poleg izrazov iz izhodiščnega besedila mora glosar torej vsebovati ustreznico v ciljnem jeziku ( če prevajalec uporablja izvirnike v drugih jezikih , v glosar vključi tudi te ustreznice ) , podatek o tem , kje v dokumentu se izraz nahaja , ter o viru , ki ga je prevajalec uporabil pri prevajanju .
Zunanji prevajalci , ki prevajajo za SP , se glede terminologije posvetujejo z notranjimi prevajalci , terminologinjama in s strokovnjaki po ministrstvih in drugih institucijah , ki sodelujejo pri redakcijah za SP in so pristojni za to področje .
V primeru večjih razhajanj oz. večje količine spornih izrazov se oblikuje terminološko skupino , ki jo sestavljajo ustrezni strokovnjaki državne uprave , po potrebi zunanji strokovnjak , prevajalec SP , lektor in po možnosti resorni pravnik .
Timsko se je tako opravila redakcija prevodov primarne zakonodaje ( ustanovitveni in pristopni akti ) in pomembnejših aktov sekundarne zakonodaje ( strukturni skladi , kmetijska politika , del carinske zakonodaje ) .
Učinkovito , hitro in kvalitetno prevajanje mora biti podprto z urejeno terminološko bazo , ki med drugim spodbuja doslednost pri rabi terminologije .
Glavni priskrbovalci terminologije so prevajalci , ki po vsakem prevodu izdelajo glosar , in vsi redaktorji , ki jih na vsaki stopnji popravljajo skladno s popravki v prevodih .
Vsak vnos v MultiTerm vsebuje vsaj izraz v izhodiščnem in ciljnem jeziku , področje , v katerega izraz sodi ter navedbo prevajanega dokumenta .
OZNAKA PODATKA projekt , kjer so prevodi nastajali ali so se preverjali izrazi SourceDoc & Lang naslov / številka dokumenta , ki se je prevajal , oz. vir izrazja ; iz podatka je mogoče sklepati , ali se je dokument prevajal iz tujega jezika v slovenščino ( npr. akti ES kot direktive , uredbe , odločbe , včasih označeni s številko Celex ) ali iz slovenščine v tuj jezik ( slovenska zakonodaja , Državni program za prevzem pravnega reda ES ) itd.
Slika 7 – Glavni podatki , ki jih lahko vsebujejo vnosi v MultiTermu MultiTerm se od klasičnih slovarjev razlikuje po tem , da deluje po načelu pojma ( ang. concept ) , kar pomeni , da lahko en vnos ( ang. entry ) vsebuje vse izraze , ki to geslo opisujejo .
Takšno iskanje omogoča iskanje izrazov , pri katerih pride do napak pri črkovanju in tako prikaže besedne zveze , ki ne vsebujejo le korena besede ter tvorjenke in oblikoslovne različice besed .
MultiTerm omogoča tudi t.i. filtriranje vnosov po kriterijih , ki si jih izbere uporabnik sam ( npr. po datumu spremembe , datumu ustvarjenja itn. ) .
Velika prednost tega programa je tudi v tem , da je integriran v urejevalnik besedil MS Word ( omogoča kopiranje ter lepljenje izrazov v Word s preprostim dvojnim klikom ) .
Struktura terminološkega vnašanja v MultiTerm je premišljena , oblikovana v skladu z značilnostmi področij dejavnosti EU , namenom same zbirke in potrebami uporabnikov .
Zbirka ni omejena zgolj na povsem zanesljivo , konsistentno in dokončno izrazje , saj bi ga bilo v tem primeru bistveno manj .
Največ izrazov je dvobesednih , od teh pri obeh jezikih najpogosteje v obliki pridevnik + samostalnik .
Najdaljši izrazi imajo tudi do 30 besed .
Slika 8 – Dolžina izrazov v MultiTermu po besedah ( Vintar 1999 ) Izrazje je različnih oblik : enobesedni izrazi : enostavni ( npr. act ) sestavljeni iz podstav in obrazil ( npr. ubiquitous ) večbesedni izrazi : različni skladenjski vzorci ( npr. Ucits directive ) krajšave ( npr. AAC – annual available cut ) Zaradi razvejanosti in interdisciplinarnosti dvajsetih področij dejavnosti EU ( kolikor jih je v registru veljavne zakonodaje Evropske unije ) je udejanjanje načel enoznačnosti ( izraz znotraj strokovnega področja ne sme imeti več pomenov ) malce manj zastopano .
Slika 9 - Prikaz vnosa v bazi MultiTerm Za ohranitev vseh popravkov je najbolj priporočljivo delo v programu in ne v urejevalniku besedila , saj je naknadno vzporejanje in uvoz besedil v pomnilnik lahko zamudnejše od klasičnega prevajalskega postopka .
3.2.1.2 EVROTERM Delo brez terminološke zbirke si je pri takšni ekipi prevajalcev in zunanjih sodelavcih težko zamišljati , zato jo je Center Vlade RS za informatiko postavil tudi na internetu ( http://www.sigov.si/evroterm ).
Baza Evroterm se dnevno dopolnjuje in revidira ( hkrati z interno bazo SVEZ ) .
Iskanje izrazov je preprosto , hitro in učinkovito , saj je s klikom na podčrtane izraze mogoče dobiti izpis zadetkov o rabi posamezne besede v korpusu prevodov zakonodaje Evropske unije .
Slika 10 – Spletni vmesnik terminološke zbirke izrazov pravnih aktov EU – Evroterm ( http://www.sigov.si/evrokorpus ) 3.2.2 RAČUNALNIŠKA PODPORA PREVAJALSKEMU DELU Pravni akti ES imajo visok faktor ponavljanja , kar je eden od ključnih pogojev za učinkovito rabo programa s pomnilnikom prevodov .
Ti dokumenti namreč vsebujejo večinoma enake začetne in končne dele dokumentov , nekaj utečenih stavčnih struktur in fraz z manjšimi variacijami ter veliko strokovnih izrazov , ki se ponavljajo znotraj istega tematskega področja .
Tudi ta program je SVEZ-u priporočila Tehnična služba za podporo TAIEX .
Danes je prevodnih enot v vseh pomnilnikih prevodov približno 150.000.
Adriana Krstič in upravljavka pomnilnikov prevodov TWB , Jasna Belc ( 2000 : 6-11 ) , opisujeta uporabo TWB-ja od samega začetka uporabe .
Ko so bili pomnilniki prevodov še prazni , jih je bilo potrebno opremiti s tehnično in jezikovno ustreznimi parametri in jim določiti sistemska ( s podatki o uporabniku prevajalskega projekta , prevajalcu , datumu , področju prevajanja ) in vsebinska polja ( vrste obravnavanih besedil , spremljanje izboljševanja besedil skozi redakcije , tematska umestitev besedila , oznaka besedila » Celex « , smer prevajanja in zaznamki prevajalca ) .
Elementi te zbirke so lahko segmenti s stavčne in besednozvezne ravni .
TWB je integriran v urejevalnik besedil ( SP uporablja MS Word ) .
Urejevalnik besedil je funkcijsko v sozvočju s TWB-jem , če vsebuje povezovalni element , t.i. ikone tw4win ( za priklic , zapiranje , shranjevanje ali obnavljanje izvirnega segmenta , kadar prevoda ne moremo takoj zagotoviti , vendar želimo kljub temu delo nadaljevati na naslednjih enotah ) .
Za urejevalnik Word je povezanost s TWB-jem omogočena preko posebne predloge dokumenta ( tw4win.dot ) , ki v vmesniku prikaže dodatne ikone ter Tradosov meni .
Glavni priskrbovalci prevodnih enot pomnilnikov prevodov so notranji prevajalci .
Zunanji prevajalci imajo možnost dela s programom s pomnilnikom prevodov Wordfast , ki je brezplačno na voljo na internetu40 .
Po končanem prevodu pomnilnik prevodov iz programa izvozijo , upravljavka pa ga spet s TWB-jem uvozi v pomnilnik prevodov .
Druga možnost pa je , da upravljavka za prevedeni dokument v TWB-ju izbere funkcijo čiščenje besedil .
Izvirnike , ki jih pošlje v prevod prevajalcem , dobi SP v elektronski obliki ali pa jih v to obliko pretvori .
Ko prevajalec konča prevod , vrne neočiščene dokumente in uporabljeni pomnilnik prevodov upravljavki zbirke .
Za posodabljanje pomnilnika prevodov zadošča upravljavki zbirke že sam neočiščen dokument , vendar pa mora imeti ta zaradi shranjevanja v osrednjo zbirko zabeležena tudi določitvena polja , ki opredeljujejo prevodni dokument .
Iz ODA mora dobiti upravljavka , ki posodablja zbirko , podatek o statusu redakcije , ki je bila tisti hip dokončana .
Pomnilnik prevodov lahko z njihovimi popravki posodobimo z operacijo čiščenje , ki jo izvedemo na popravljenem prevodu .
Na levi strani pa lahko vidimo podatke o segmentu in odstotek ujemanja .
Spodnji del zavzema urejevalnik besedil , ki mora vsebovati orodno vrstico tw4win .
V prevajanem stavku so s posebnimi barvnimi oznakami prikazani izrazi , vsebovani v terminološki zbirki MultiTerm , ter podobnosti in razlike s prevajanim stavkom .
Priporočljivo ujemanje je vsaj 60 – 70 odstotno , saj lahko pomnilnik v nasprotnem primeru najde in primerja med seboj segmente , ki imajo komaj kaj skupnega .
S TWB-jem lahko prevajalci izvajajo tudi samodejno prevajanje oz. predprevajanje , še preden odprejo urejevalnik besedil , saj TWB nudi statistično razčlembo o tem , koliko stavkov se je ponovilo , koliko delnih stavkov je potencialno mogoče uporabiti iz pomnilnika prevodov in koliko izrazov iz terminološke zbirke MultiTerm .
TWB omogoča tudi filtriranje , npr. po kronološkem vrstnem redu ali po prevajalcu , kar je še posebno pomembno pri večjih prevajalskih projektih , na katerih dela več prevajalcev na istem jezikovnem paru .
prepoznavalnik terminologije Da si prihranimo dolgotrajno iskanje izrazov po slovarjih in zagotovimo njihovo dosledno uporabo , uporabimo prepoznavalnik , ki terminologijo išče v MultiTermu .
Slika 12 – Primer iskanja konkordanc v pomnilniku prevodov Težav , ki se pojavljajo pri tako zapletenem postopku prevajanja , tudi pri TWB-ju ni malo .
Ob okvari pomnilnika prevodov lahko prevajalec tudi brez upravljavke pomnilnika ustvari novo zbirko , tako da posname standardno in dogovorjeno zgradbo stare .
Tako se v novi pomnilnik prenesejo vsi takrat obstoječi izbrani parametri in njihove vrednosti , skupaj z vsebinskimi polji .
Pravilna izbira segmentacijskih možnosti igra pomembno vlogo pri pravilni delitvi besedila na segmente in povzroča manj zapletov pri delu prevajalcev .
Do težav lahko pride tudi pri namestitvi drugih programov v sistem in pri koliziji sistemskih parametrov .
Upoštevati je treba tudi dejstvo , da preveliko število izbirnih polj ( splošna postavitev , postavitev polj , pisava , samodejne zamenjave , delitvena pravila na segmente , ravnanje z neprevedljivimi elementi kot so simboli , povezave in hiperpovezave ) lahko obremeni hitrost dostopanja do zbirke prevodov .
Za ključno slabost pomnilnika prevodov navajajo dejstvo , da pri iskanju upošteva dolžino besed , delež ponovljenih besed in znakov , premalo pa podobnost med smiselnimi deli besed , besednih zvez , slovničnimi kategorijami , kot so koreni in osnove besed , pretvorbe iz ednine v množino , iz tvornika v trpnik , ujemanje v slovničnih kategorijah , kot so spol , število , oseba itd.
SP v sodelovanju z ministrstvi vsaj dvakrat na leto sestavlja , prevaja in pošilja v Bruselj letno poročilo o napredku v prilagajanju nacionalne zakonodaje zakonodaji EU .
Vsebino pomnilnikov prevodov so pretvorili v tekstno obliko in jo grupirali po področjih .
Trenutno vsebuje več kot 1,5 milijona besed , ki pa še niso povsem prečiščene , saj je korpus šele v testni obliki .
Miran Željko ( 2002 : 4-5 ) opisuje tri načela , po katerih se uporablja Evrokorpus in po katerih združuje lastnosti , ki jih prevajalec pri Tradosovem TWB-ju pogreša : kot razširitev podatkov Evroterma : Ob kliku na podčrtan izraz v Evrotermu pregledovalnik preišče korpus in izpiše seznam prevodnih enot , ki vsebujejo tudi podatek o področju .
Pri iskanju po korpusu enega jezika je izpis v obliki KWIC ( sobesedilo je omejeno na 50 znakov ) .
Taka zbirka je uporabna pri prevajanju v tuji jezik , saj poleg nepoznanih izrazov prikazuje tudi razmerja v segmentu ( skladenjska , oblikoslovna itn. ) .
Slika 13 – Dvojezične konkordance Evrokorpusa ( http://www.sigov.si/evrokorpus ) 3.3 AČUNALNIŠKA PODPORA PREVAJANJU V PREVAJALSKI SLUŽBI EVROPSKE KOMISIJE Evropsko načelo demokratičnosti narekuje , da morajo imeti vsi državljani Evropske unije ( v nadaljnjem besedilu EU ) možnost branja evropske zakonodaje v svojem jeziku .
Zato je napisana v vseh enajstih uradnih jezikih in državljani imajo tudi pravico komunicirati z institucijami EU v svojem jeziku .
Letna količina prevedenega besedila znaša več kot 1.250.000 strani .
SdT se nahaja v Bruslju in Luksemburgu in ima zaposlenih več kot 1300 prevajalcev in 400 administratorjev .
Prevod , ki ga naročijo oddelki Komisije , poteka iz več jezikov , vendar vedno v materni jezik ( razen redkih izjem ) .
Po podatkih SdT ( prav tam : 5 , 8 ) je večina dokumentov napisana v angleščini ( 56,8 % ) , francoščini ( 29,8 %) in nemščini ( 4,3 %).
Čeprav je vseh enajst ciljnih jezikov zastopanih v približno enakem razmerju , pa med temi spet prevladujejo nemški ( 13,2 % ) , francoski ( 12,7 %) in angleški ( 11,3 %) jezik .
Vrst besedil , ki jih prevaja SdT , je več .
Enota RL3 SdT ( TWSdT 2002 : 4-5 ) navaja tudi , da prevajalec za kakovostno opravljanje svojega dela potrebuje ustrezno terminologijo , referenčne dokumente ( papirni in elektronski arhivi , poravnana besedila itd. ) , možnost uporabe že prevedenih besedil ter centralno ( v tematski skupini ) in lokalno ( v jezikovni enoti ) pomoč administratorjev , ki za dokument poskrbijo na začetku postopka in spet na koncu , tako da se prevajalci lahko osredotočijo na konkretno prevajanje .
SdT ima na voljo tudi računalniško in jezikovno podporo , ki jo nudijo oddelki kot so Terminology in Multilingual Tools .
Orodja za administracijo elektronsko upravljajo celoten prevajalski postopek .
Prenos naročil , izvirnikov , referenčnih dokumentov in predpripravljenih dokumentov ter oddaja končanih prevodov potekajo prek spletnih vmesnikov in programov Poetry ( Processing Of Electronic Translation Requests ) , WinSuivi in DossierManagement .
Vsebuje prek dva milijona dokumentov v vseh enajstih jezikih .
Pri prvih dveh orodjih moramo ločiti centralno ( služi kot baza podatkov ) in lokalno raven ( za oblikovanje , upravljanje in vnašanje podatkov v bazo ) .
Terminološka orodja v SdT Zastopajo jih centralna in lokalna terminološka baza ter iskalnik terminologije .
Izrazi so v vseh enajstih jezikih EU in v latinščini .
Kljub temu , da še ne vsebuje slovenskih izrazov , je baza vseeno uporabna za razlago izrazov v drugem tujem jeziku prevajalca .
Posamezne jezikovne enote vnašajo izraze v lokalno terminološko bazo MultiTerm .
Lokalni pomnilnik prevodov Translator's Workbench je prirejen potrebam ustanov EU .
Prevodne enote se lahko izpišejo iz centralnega Euramisa , kamor jih po končanem prevodu tudi shranijo .
Strojni prevajalnik EC SYSTRAN ( System Translation ) so začeli razvijati že leta 1976.
Na zahtevo je lahko na voljo tudi javnim oblastem , šolam , univerzam držav članic itn. SdT napoveduje , da bo kmalu na voljo tudi prek spleta na strežniku Europa .
Strojni prevod je praviloma uporaben kot osnutek v nematernem jeziku ali jeziku , ki ga oseba ne prevaja in ne pozna .
Nekateri uradniki namreč rajši pišejo v maternem jeziku in nato uporabijo strojni prevajalnik , za katerim potem prevod še ročno popravijo .
S strojnim prevajalnikom je bilo v letu 2001 prevedenih 800.000 strani .
Jezikovni pari Systrana Iz angleščine v • italijanščino • francoščino • grščino • nemščino • nizozemščino • portugalščino • španščino Iz španščine v • angleščino • francoščino Iz italijanščine v • francoščino Iz francoščine v • angleščino • italijanščino • nemščino • nizozemščino • portugalščino • španščino Iz grščine v • francoščino Iz nemščine v • angleščino • francoščino Slika 14 – Jezikovni pari strojnega prevajalnika EC Systrana Trenutno se s financiranjem držav članic in skupino SYSTRAN razvijajo še jezikovni pari grščina-angleščina , francoščina-grščina , portugalščina-angleščina / francoščina in nizozemščina-angleščina / francoščina .
Natančnost prepoznavanja obsega do 98 % , hitrost računalnikovega zapisovanja pa znaša 160 besed na minuto .
V posebno kategorijo sodi orodje TMan , ki nadomesti vnaprej definirane sklope besed ( od posamezne besede do celega odstavka ) v izhodiščnem besedilu s sklopi v ciljnem jeziku .
Celotni prevajalski postopek ( TWSdT 2002 : 17-23 ) naj bi bil v idealnih okoliščinah videti takole : Najprej program Poetry elektronsko prenese naročilo SdT-ju .
Naredi analizo ponavljanja in tako izbere najbolj učinkovit način obdelave besedila .
Določi najprimernejši pomnilnik prevodov in razdeli besedilo na prevodne enote .
Za segmente , za katere pomnilnik prevodov ni izpisal ničesar , zažene strojno prevajanje in / ali program TMan .
Nato ustvari datoteko v formatu urejevalnika besedil z najboljšim predlogom za vsak stavek in datoteko v formatu Translator's Workbencha ali celo začasno Translator's Workbench bazo ( z drugimi rešitvami ) , statistično poročilo rezultatov , vse referenčne dokumente , ki so bili rezultat analize ter predloge za optimalno obdelavo .
Če ni zadovoljen z rezultati , lahko besedilo pošlje še v nadaljnjo obdelavo , ki jo izbere sam .
Prevajalec dobi npr. strojno prevedeno besedilo skupaj z izpisi iz centralnega pomnilnika prevodov Euramisa ali izhodiščno strojno prevedeno besedilo z vstavljenimi ciljnimi izrazi ( TMan ) skupaj z izpisi iz centralnega pomnilnika prevodov Euramis itn. Slika 15 – Storitve , ki jih nudi vmesnik Euramis ( TWSdT 2002 : 17 ) Po končanem prevajalskem postopku je prevod s programom WinSuivi posredovan naročniškemu oddelku .
Hkrati je samodejno arhiviran v SdTVisti , prevodne enote pa se samodejno izvozijo iz lokalne baze Translator's Workbench in shranijo v centralno bazo Euramis , ali pa se dokument poravna .
SdT v prihodnosti načrtuje še bolj samodejen postopek prevajanja , še več možnih integracij jezikovnih aplikacij in storitev ter novo namizje ( Translator's Desktop ) ter še večjo aktivnost na področjih tehnične pomoči , izobraževanja , usposabljanja , podpiranja centrov , razvoja tržišča samostojnih prevajalcev v državah kandidatkah ter pospešenega razvoja organiziranja prevajalskih študijev .
Organi Evropske unije že od leta 1998 razmišljajo o združitvi terminoloških baz ( Eurodicautom , Euterpe , TIS in drugih manjših ) v središčno , ki bo namenjena vsem institucijam , agencijam in drugim telesom Unije .
Projekt se imenuje Inter-Agency Terminology Exchange ( IATE ) , njegovo uresničitev pa napovedujejo v drugem letu ( Macphail 1999 ) .
3.3.1 PRIMERJAVA Z RAČUNALNIŠKO PODPORO V SEKTORJU ZA PREVAJANJE Jasna Belc ( 2001 : 2-3 ) je prepričana , da je ključna razlika med organizacijo dela v SdT in v SP v tem , da prva združuje veliko dvojezičnih jezikovnih kombinacij iz enajstih uradnih jezikov , večina prevajanja v SP pa poteka med angleščino in slovenščino , deloma med francoščino in slovenščino .
V SdT se s podvojitvijo števila uradnih jezikov EU ( ob vstopu držav kandidatk v EU ) ter rastjo velikosti centralnih zbirk večajo tudi potrebe po skrbi za ohranjanje zgradbe podatkovnih zbirk , sprotnem dopolnjevanju in izboljševanju programov , vedno večji zmogljivosti strojne in programske opreme , konstruktivni delitvi nalog , disciplini pri delu , vlaganju v človeške vire ter izpopolnjevanju znanja zaradi nenehnega prilagajanja novim okoliščinam v organizacijski shemi .
Podobnost prevajalskega postopka je vidna predvsem v programih MultiTerm in TWB .
Operacije v programu s pomnilniki prevodov TWB ne potekajo samodejno , vseeno pa uporabljajo več komponent , ki združene prinašajo prav tako dobre rezultate , čeprav v časovno večjem obsegu .
Evroterm je celo boljši od Eurodicautoma ( če zanemarimo velikost zbirke ) , saj so vnosi opremljeni z več podatki , ki prevajalcu povedo tudi , iz katerega projekta je vzet izraz , v katerem dokumentu se nahaja , razlago izraza idr. , iz česar prevajalec lahko sklepa , kako zanesljiva je uporaba izraza , če o tem ne priča že konkretni podatek ( Reliability ) .
Pri programski opremi za shranjevanje in delo z jezikovnimi viri SdT opazimo dvojno programsko zasnovo , pri kateri se na vsaki stopnji dela izoblikujejo lokalne in centralne zbirke podatkov .
Slika 16 – Uporabnost TWB in MultiTerm V sliki 16 sem prikazala delovni postopek prevajanja z vsemi stopnjami redakcij , skozi katere gre dokument 1 , preden ga SP kot slovensko različico pošlje organom EU .
4 VIZIJE NADALJNJEGA RAZVOJA Za razvoj in izdelavo splošno uporabnih programov ter sistemov s področja jezikovnih tehnologij je predpogoj dobro oblikovana infrastruktura jezikovnih podatkov , tj. zadostno število ustrezno urejenih jezikovnih virov .
Tako potrebujemo urejene in popolne zbirke izrazov , besedil , izgovorjav , aplikacije kot so različni slovarji , leksikoni , tezavri , črkovalniki itn. 4.1 TERMINOLOŠKA PROBLEMATIKA STROKOVNEGA JEZIKA Hiter razvoj tehnologij povzroča naglo nastajanje in spreminjanje izrazja .
Te se v jeziku pojavijo , ker se ob vdoru tujih poimenovanj jezik ne uspe takoj odzvati , zato se po eni strani prične angleški izraz ustaljevati , počasi pa se pričnejo pojavljati tudi že slovenske ustreznice , ki jih je včasih lahko tudi več , če prvi predlog slovenskega izraza ni optimalen .
Alain Rey ( 1995a : 159 in 1995b : 176-179 ) pravi , da organizacije v terminologijo jezika lahko posegajo zakrito ali izraženo in da je standardizacija lahko včasih neposreden rezultat jezikovnega načrtovanja .
Najbolje je , če za strokovni jezik poskrbi stroka sama , saj brez lepega jezika in ustreznega izrazja izobraževanje in sporazumevanje ni možno .
To lahko stori s povezovanjem posameznikov in skupin ter dogovarjanjem glede uporabe izrazov , oz. z izvajanjem terminoloških in terminografskih postopkov ( Vintar 2000 ) : proučevanje pojmov in razmerij med njimi , opisovanje in poimenovanje izrazov , primerjanje pojmovnih sistemov in izrazja različnih jezikov za potrebe večjezične terminologije in prevajanja , sodelovanje pri ustvarjanju novega izrazja , zbiranje terminološkega gradiva , opisovanje in predpisovanje terminologije , ki je trenutno v rabi na določenem področju , svetovanje prednostnih izrazov in predstavljanje zbranega in obdelanega izrazja v terminoloških zbirkah .
Ti praviloma nastanejo znotraj določenega področja in določene kulture , zato se pri prevajanju pojavijo tudi težave z njihovim prenašanjem v ciljno kulturo .
Do poimenovanj novih izrazov pride z različnimi besedotvornimi postopki .
Eden bolj zanimivih je terminologizacija ( beseda iz splošnega jezika dobi v okviru stroke poseben pomen , npr. korenina v zobozdravstvu ) .
Tvorjenje novih izrazov je največkrat uspešno le v skupini strokovnjakov , ki dobro poznajo tehnologijo , slovenski jezik in jezik ( največkrat angleški ) , v katerem srečamo novo besedno zvezo ( Gorjanc 1996 ) .
Na razkroj polnofunkcijskosti slovenskega jezika poleg angleškega jezika ( zaradi ekonomske moči in razvoja angleško-govorečih območij ima angleščina zdaleč najbogatejši besedni zaklad ) vpliva tudi razvoj slovenske znanosti .
Berejo tuje strokovne knjige in revije , se izobražujejo na seminarjih v tujini in tako v praktično strokovnih ali poljudnoznanstvenih besedilih uporabljajo prevzete strokovne izraze namesto domačih .
Novi pogledi marsikdaj postavijo v kot izraze , ki ne ustrezajo več .
Hiter in enostaven prenos ter preprosto spreminjanje in oblikovanje elektronskega besedila je v današnji družbi neprecenljive vrednosti .
Jezikovni viri v slovenskem jeziku in elektronski obliki torej obstajajo ( razen morda besedila iz preteklosti ) .
Vendar pa strokovnjakom , ki vir potrebujejo za raziskave jezika in razvoj jezikovnih tehnologij , račune navadno prekrižajo komercialni dejavniki in avtorske pravice .
Vprašanje , ki se tu pojavi , pa je , v kolikšni meri je tudi jezikovni vir , ki ga uporablja nek program , lastnina in čigava ( Kumiljan 2002 ) .
Z vladnim financiranjem in sodelovanjem založb , računalniških hiš in akademskih institucij bi bilo nujno najprej omogočiti širše dostopne vire , saj šele ti lahko dajo eno od prepotrebnih osnov za nadaljnji razvoj raziskovanja in uporabe naše materinščine .
4.2.1 DOSTOPNOST INFORMACIJ PRAVNEGA ZNAČAJA Danes so v Sloveniji prav vse relevantne pravne informacije že v elektronski obliki .
V taki obliki so že prvi osnutki predpisov in kot taki se tudi izmenjujejo med subjekti normativnih postopkov , žal sicer še ne v povsem usklajenih formatih .
Vendar pa objavljanje tako nastalih pravnih informacij v elektronski obliki glede na količino zbranih podatkov še nekoliko zaostaja in tako ostajajo informacije neizkoriščene .
Namestnik varuha človekovih pravic je leta 1998 v Poročilu varuha človekovih pravic ( Rovšek 1998 ) opozoril , da je dostopnost informacij javnega značaja v Ustavi RS opredeljena kot človekova pravica in temeljna svoboščina .
V tem pogledu se Slovenija razlikuje od večine razvitih držav v svetu in tudi od Evropske unije , ki določen čas ( 45 dni po sprejetju ) zagotavlja brezplačen dostop do vseh novih predpisov .
« Priporoča vedno bolj obsežno nadgrajevanje klasičnih načinov obveščanja javnosti , kot so različne novinarske konference , tiskana gradiva s predstavitvijo institucij , njihovih dejavnosti in ciljev , pravila in postopki ravnanja s strankami z novimi možnostmi , ki jih ponujajo informacijska omrežja , medmrežja in svetovni splet .
Predlaga še , » da se določi način in nosilec za postopno zagotovitev brezplačnega dostopa do polnih besedil veljavnih predpisov Republike Slovenije prek interneta « in da » Vladna služba za zakonodajo in Uradni list RS na svoji domači strani na spletu ali na drug ustrezen način , ki omogoča brezplačen dostop , zagotovita vpogled v register veljavnih predpisov .
V svojem prispevku za najšibkejšo komponento današnje slovenske pravne informatike označi medsebojno povezovanje pravnih informacij .
Podjetje IUS SOFTWARE pa nudi komercialno zbirko z največjo zalogo pravnih in poslovnih informacij na enem mestu .
Tu ( http://www.ius-software.si ) so na voljo podatki o vseh veljavnih predpisih , čistopisi vseh veljavnih zakonov in podzakonskih predpisov , ter pravna praksa Vrhovnega sodišča RS s pravno podlago , povezavami na zakone in njihove člene , pravna mnenja , odločitve Ustavnega sodišča , članki pravne narave , seznami Ur. l. itd.
Sistem IUS-INFO se lahko uporablja na dva načina : prek spletnega brskalnika na internetu ali s pomočjo programa IUS-INFO za Windows , ki omogoča zahtevnejšo uporabo sistema – enostavno in sestavljeno hitro iskanje po polnem besedilu ( indeksirane besede ) , po več različnih zbirkah sočasno , po posameznih delih besedil , v celotnem dokumentu ali samo po določenih poljih in atributih ( datum objave , veljavnosti itd. ) Današnje sodobne informacijske storitve niso cenejše kot tiste , ki uporabljajo klasične ( predvsem papirnate ) medije .
Če kdo informacijski projekt v celoti financira , je v zadnjem času res možno dobiti vse več informacij brezplačno , posebno na internetu .
Drugače pa je to le prijetna okoliščina za končnega uporabnika , medtem ko ni cena dejanske informacijske storitve nič manjša kot za vse druge storitve na trgu .
Poleg tega elektronska oblika ni le stranski produkt pri izdelavi tiskane izdaje , ki se lahko z minimalnimi sredstvi nastavi na internet in brezplačno omogoči vsem uporabnikom .
Za dodajanje novih funkcionalnosti ( iskanje po polnem besedilu , možnost uporabe v drugih aplikacijah , možnost medsebojnih povezav itd. ) pa mora ponudnik vložiti izdatna sredstva v nabavo strojne , programske in komunikacijske opreme , človeške vire itd.
Kot argument dostopnosti informacij javnega značaja Rovšek ( Poročilo varuha človekovih pravic 1998 ) navaja dejstvo , da se z ustreznim obveščanjem , odprtostjo in možnostjo nadzora krepi zaupanje državljanov v delo državnih organov in javne uprave v širšem pomenu .
Ustrezno obveščanje , javnost dela državnih organov in omogočanje dostopa do informacij javnega značaja pa niso pomembni le za posameznika kot pogoj za njegovo sodelovanje pri upravljanju javnih zadev , ampak tudi za organizirane skupine posameznikov , nevladne organizacije ter druga društva in gospodarske družbe .
K temu pa bi z vidika jezikovnih tehnologij dodala še tretje uporabnike – prevajalce , terminologe in druge strokovnjake in organizacije , ki se ukvarjajo z jezikovnimi viri .
4.2.2 IZMENJLJIVOST JEZIKOVNIH PODATKOV Ena najšibkejših točk zbirk je izmenjljivost .
Okrnjeno širjenje in izmenjava virov je posledica tudi nerazvitosti računalniške ekspertize uporabnikov , prepočasnega uvajanja primernih visokošolskih študijev in splošne nerazširjenosti področja jezikovnih tehnologij .
Standardiziran računalniški zapis jezikovnih podatkov poveča uporabnost jezikovnih podatkov , saj poleg izmenljivosti spodbudi tudi njihovo večnamenskost ter podaljša njihovo trajnost .
Zapisi morajo biti podrobno definirani in shranjeni v enotnem formatu , če se hočemo izogniti težavam , ki se lahko pojavijo že pri zapisih črk .
Določa jezik za predstavitev dokumentov , nad katerimi bodo delovali programi za obdelavo besedil .
Vedno več podjetij , ki imajo opravka z velikimi količinami besedil , prehaja na zapis SGML in vedno več podjetij se ukvarja izključno z izdelovanjem programske opreme ali s pomočjo končnim uporabnikom , da preidejo na ta standard .
Ta jezik je izmenljiv , odporen na tehnološke spremembe in omogoča uporabo dokumentov v različne namene .
Zaradi zapletenosti standarda SGML in zaradi vse večjega pomena mrežne izmenjave podatkov je XML postal osnova za množico izvedenih standardov in pobud za zapis različnih zvrsti jezikovnih , pa tudi drugih strukturiranih podatkov .
Na TEI se dandanes že samoumevno sklicujejo projekti , ki ustvarjajo jezikovne vire , predvsem korpuse .
Pretvorba večjega števila terminoloških baz v ta format omogoča iskanje večjega števila uporabnikov in ponovno uporabo vira za druge programe jezikovnih tehnologij .
Pretvorba pomnilnikov prevodov v ta format omogoča izrabo in izmenjavo večjezičnega vira besedil za izdelavo boljših in bolj ažurnih slovarjev z luščenjem izrazov ter za strojno prevajanje .
Ker njihovo združevanje in izmenjava omogočata razvoj jezikovnih tehnologij , te pa spodbujajo uporabo državnih jezikov , zastopa to stališče Evropska unija , morala pa bi jo tudi slovenska vlada .
4.3 ( POL ) SAMODEJNO LUŠČENJE TERMINOLOGIJE Korpus nam omogoča , da terminologijo zberemo in opazujemo v besedilih , se pravi v naravnem okolju , postopek iskanja izrazov in njihovih prevodnih ustreznic pa je mogoče v precejšnji meri tudi avtomatizirati .
Pri razvoju te tehnologije se srečamo s številnimi ovirami .
Ena od njih je zagotovo ( ne ) obstoj in ( ne ) razpoložljivost temeljnih jezikovnih virov in orodij , kot so korpusi , leksikoni , tezavri na eni in osnovni jezikovnotehnološki postopki , kot so tokenizatorji , oblikoskladenjski označevalniki in razčlenjevalniki , na drugi strani .
Statistične metode so še posebej zanimive za manjše jezike , ki z razvojem lastnih jezikovnih tehnologij ne dohajajo velikih ( Vintar 1999 in 2002 ) .
Temeljijo torej na pogostosti in sopojavljanju in ne zahtevajo označevanja v obliki oblikoskladenjske predobdelave besedil , tako da jih je mogoče uporabljati na kakršnem koli korpusu .
Slabost statističnih metod je , da so omejene na iskanje tistih kolokacij , ki se v besedilu ponavljajo , kar pomeni , da precejšen delež izrazov ostane neodkritih , sploh pri majhnih korpusih in oblikoslovno bogati slovenščini .
Druga pomanjkljivost pa je , da je potrebno veliko sprotnega poseganja strokovnjakov , da rezultati postanejo uporabni .
Pri jezikovno odvisnih metodah pri iskanju terminologije izhajamo iz temeljne predpostavke , da so večbesedni izrazi tvorjeni po tipičnih skladenjskih vzorcih .
Iz njih lahko iz korpusa bistveno laže črpamo možne izraze z analizo jezika , ki temelji na uporabi takšnih ali drugačnih slovničnih pravil , navadno posebej prirejenih za računalniško obdelavo .
V praksi korpusnega jezikoslovja to pomeni oblikoskladenjsko označevanje besedila , ki obsega več stopenj , med njimi tudi tokenizacijo ( označevanje besed , ločil , številk in okrajšav ) in lematizacijo ( označevanje osnovnih oblik besed ) .
Z metodo skladenjskih vzorcev lahko iščemo tudi kolokacije , ki se pojavijo le enkrat .
V okoljih , kjer so te zbirke še obvladljive velikosti ( npr. knjižnice , interne baze podatkov , zbirke zakonov itd. ) , poteka označevanje dokumentov ročno .
Splet je v svojem času obstoja postal učinkovit medij za shranjevanje in posredovanje informacij .
Mednarodne organizacije in institucije si prizadevajo krotiti tehnološki razvoj s standardizacijskimi okviri .
Konzorcij svetovnega spleta W3C42 je botroval nastanku prvih tehnologij ( HTML , HTTP , URI ) , na katerih temelji današnje spletno okolje .
4.4.1 SEMANTIČNI SPLET Poslanstvo nove generacije interneta utelešajo trije cilji : univerzalen dostop , medsebojno zaupanje in semantični splet , s katerim se v viziji prihodnosti povezuje sodobna terminologija .
Spletne strani so namreč z vidika uporabnika iskalnikov razvrščene glede na vsebino , ki jo predstavljajo , ki pa ni nujno tista , ki se jo išče .
Zaradi omejitev jezika HTML ( ki še vedno ostaja namenjen vizualni interpretaciji spletne vsebine ) je Konzorcij predstavil XML , metajezik za ustvarjanje informacijsko bogatih dokumentov in način za izmenjavo sporočil , ki nič več ne opisuje zgolj predstavitev posamezne strani ali datoteke , ampak določa , kaj pravzaprav ti podatki so .
XML dobesedno loči vsebino od programske logike in kode uporabnikovega vmesnika in s tem osvobodi aplikacijo omejitve na samo en računalniški jezik in platformo .
Komunicirajoče stranke v spletu si bodo tako v prihodnosti izmenjevale podatke na osnovi zapisov XML , skupaj s pravili , ki določajo , kako naj bodo ti podatki predstavljeni ( Kotnik 2002 ) .
Je abstraktna predstavitev podatkov , ki temelji na standardih RDF in drugih standardih , ki se bodo uporabljali z XML-jem .
Poizvedovanje po informacijah bo potekalo po vsebini , in sicer z njenim opisom s pojmovnimi oznakami in urejenostjo v zbirki podatkov oz. tezavru .
Internet naj bi bil po tej ideji organiziran podobno kot globalni pojmovni metatezaver , iskanje pa naj bi namesto po besednih nizih potekalo po odnosih med pojmi oz. po pomenu .
Podoben način iskanja uporabljajo tudi že današnji spletni iskalniki .
Uporabnikom iskalnikov je ponavadi težko oblikovati poizvedbo ( ang. query ) tako , da bi bilo omogočeno najboljše poizvedovanje po informacijah .
Uporabniku najprej ponudi področja , v katera sodi pojem ( npr. rak kot bolezen , žival ali astrološko znamenje ) in tako pomaga pri nadaljnjem bolj specifičnem izbiranju .
Primer takega iskanju sta Google43 in Yahoo !
Poleg dejstva , da nobena slovenska univerza ne nudi študijskih programov računalniškega jezikoslovja in da obstoječa orodja za nekoliko naprednejše raziskave ali bolj specifične potrebe več ne zadoščajo , ostaja potreba po ekipi strokovnjakov , ki bi dopolnjevala delo peščice , ki je uspela zbrati nekatere jezikovne vire , razviti orodja za njihovo osnovno obdelavo in po najboljših močeh razširiti informacije o jezikovnih tehnologijah pri nas in prek meja , z mednarodnim sodelovanjem pri projektih Evropske unije in drugih svetovnih organizacij .
Kot vzor učinkovitega dopolnjevanja človeškega dela in samodejnih postopkov nam služijo korpusi , ki postajajo vedno bolj nepogrešljiv vir podatkov za jezikoslovje .
S kreativnim združevanjem različnih metod s podatki , ki jih nudi korpus , je mogoče obogatiti terminološko delo , tako da iz njega izluščimo terminološke izraze in jih uporabimo za izboljšanje že obstoječih in izdelavo novih slovarjev ter vzpostavitev terminoloških baz in tezavrov .
Z računalniško podporo Prevajalske službe Evropske komisije se Sektorjeva programa s pomnilnikom prevodov in terminološko bazo sicer težko primerjata , vseeno pa lahko prav ta primerjava pomaga SP pri odločitvi , v kakšno prevajalsko in terminološko orodje bo naslednjič investiral in v katero smer bo šel razvoj jezikovnih tehnologij .
Večjezičen tezaver Evropske komisije Eurovoc , ki je bil prvotno namenjen označevanju dokumentov v bazah EPOQUE in Celex , Knjižnice Evropskega parlamenta in drugih knjižnic EU , je bil končan leta 1998 ( istega leta sta pri prevodu v slovenščino sodelovali tudi terminologinja in lektorica SP ) .
Sektor je s prispevanjem svojih prevodov ( ELAN , Evrokorpus ) in terminologije ( Evroterm ) skušal nakazati smernico , ki bi jo morala upoštevati tudi država in ustanoviti ustrezno institucijo za razvoj računalniškega jezikoslovja ali pa financirati sodelovanje s podjetniki , kar predlaga tudi Evropska komisija ( V raziskavah je prihodnost 2002 ) .
Načela transkribiranja in označevanja posnetkov v referenčnem govornem korpusu slovenščine V okviru projekta Sporazumevanje v slovenskem jeziku nastaja referenčni govorni korpus slovenskega jezika , ki bo govorni vir za nekatere jezikovne priročnike in različne jezikoslovne raziskave .
Ključne besede govorni korpus , govorjeni jezik , transkribiranje , segmentiranje 1 Referenčni govorni korpus slovenščine Med pisnimi besedili in spontanim govorjenim diskurzom so bistvene razlike .
Pri večjih sistematiziranih zbirkah besedil pa so natančna pravila označevanja in transkribiranja posnetkov ključnega pomena , ker le tako lahko uporabniku omogočajo kvalitetno iskanje .
S tovrstnimi nalogami smo se spopadli v okviru projekta Sporazumevanje v slovenskem jeziku ( SSJ ; www.slovenscina.eu ), kjer nastaja referenčni govorni korpus v obsegu 1 milijona besed ( ali približno 112 ur posnetkov ) .
Referenčni govorni korpus bo omogočal tudi druge korpusne raziskave govorjene podobe slovenskega jezika v najrazličnejših govornih situacijah , zlasti v leksikografiji , skladnji , analizi diskurza , govornih tehnologijah in sociolingvistiki , pa tudi v tradicionalnem opisnem jezikoslovju .
V prispevku bomo po kratkem pregledu transkripcijskih praks govorjene slovenščine in ključnih mednarodnih priporočil predstavili načela označevanja in transkribiranja posnetkov pri referenčnem govornem korpusu .
4 Označevanje in transkribiranje posnetkov Glede na različne metode in cilje jezikoslovnih raziskav bo lahko uporabnik po govornem korpusu iskal z različnimi kriteriji .
3. transkripcija govora s strukturo diskurza .
Čas : datum in okvirna ura , ko je potekal diskurz 10. udeležence : število aktivnih udeležencev 11. opis govornega dogodka : opis najvažnejših kontekstnih značilnosti ( npr. tema , namen pogovora , razmerja med udeleženci ...
) 4.3 Transkripcija 4.3.1 Struktura diskurza Diskurzi v govornem korpusu so segmentirani na manjše enote , vloge in izjave .
Pri hkratnem govoru dveh ali več govorcev ne označujemo natančno , kateri deli besedila so izgovorjeni hkrati .
Za začetek hkratnega govora štejemo začetek izjave , v kateri se vključi drug govorec , za konec hkratnega govora štejemo konec zadnje izjave , v kateri se pojavlja hkratni govor .
4.3.2 Zapis govora Pri zapisu govora se je hitro pokazalo , da nekaterih ciljev ( hitro in enostavno transkribiranje , dejanska podoba diskurza , avtomatsko iskanje po besednih oblikah z enako oblikoslovno in semantično vlogo , a različnimi glasovnimi podobami ) ni mogoče rešiti z eno samo rešitvijo .
4.3.2.1 Prvi nivo zapisa govora – pogovorni zapis Osnovni cilj pogovornega zapisa je čim bolj zvesta predstavitev glasovne podobe govora na čim bolj berljiv način .
Zato govor zapisujemo v veljavnem slovenskem črkopisu , od pravopisne norme pa zapis odstopa na mestih , kjer določena izgovorjena beseda odstopa od t.i. zborne izreke .
) .
Pokrajinsko specifične foneme pišemo z najbližjimi ustreznimi črkami , odvisno tudi od izgovorjave v konkretnih primerih , npr. » šiest « , » šuola « ; » h « za zveneči primorski h ( hriem ) ; 5.
Prekinjene besede označimo s praznim oklepajem stično za besedo , npr. lju ( ) .
Lastna imena : a. Domača lastna imena zapisujemo tako , kot so izgovorjena , vendar z veliko začetnico skladno s pravopisom , npr. Delo , Brežice .
Večbesedna lastna imena dodatno označimo z zavitimi oklepaji ( npr. { Novo mesto } , { Ministrstvo za kulturo Republike Slovenije } itd. ) b. Tuja lastna imena zapisujemo tako , kot so izgovorjena , vendar z veliko začetnico , npr. Bler , Hjuston .
Osebne podatke , izrečene v posnetkih , anonimiziramo , tako da označimo samo vrsto podatka ( npr. [ ime ] , [ priimek ] ...
Pragmatično pomembne nejezikovne zvoke ( npr. zvonjenje telefona , na katerega se odzove govorec ) , označimo z oznako » zvok « .
Prozodičnih lastnosti govora , kot so jakost , intonacija , trajanje glasov in krajši premori , ne označujemo .
Daljše premore ( več kot 1,5 sekunde ) označimo kot prazno izjavo brez besedila in brez govorca ter dodamo oznako » premor « .
4.3.2.2 Drugi nivo zapisa govora – knjižni zapis Zaradi boljših iskalnih možnosti bo uporabniku dostopen tudi drugi nivo zapisa govora , ki bo vsaki besedi pripisal najbližjo knjižno besedno obliko .
Ker se faza drugega nivoja zapisa šele začenja , bodo natančna načela transkribiranja še dodelana .
Odvisnostno površinskoskladenjsko označevanje slovenščine : specifikacije in označeni korpusi Povzetek Prispevek predstavi prve rezultate projektov JOS in SSJ s področja skladnje , in sicer nabor oznak za odvisnostno površinskoskladenjsko označevanje ter dva skladenjsko označena korpusa .
Korpusa sta bila vzorčena iz referenčnega korpusa FidaPLUS ter imata ročno označene oz. pregledane leme , oblikoskladenjske ter površinskoskladenjske oznake .
Viri bodo kot podatkovna zbirka na voljo za raziskovalne namene po licenci Creative Commons , namenjeni pa so zlasti razvoju jezikovnih tehnologij za slovenščino .
Ključne besede : Skladenjsko označevanje , korpusi slovenskega jezika , Creative Commons 1.
Uvod Skladenjsko označeni korpusi predpostavljena skladenjska razmerja eksplicirajo na velikem vzorcu besedil dejanske rabe in omogočajo statističen pregled vzorcev distribucije skladenjskih struktur , zato so lahko izhodišče za nadaljnjo , bolj poglobljeno jezikoslovno obravnavo skladenjskih fenomenov , hkrati pa so pomembni za razvoj jezikovnih tehnologij , kar je temeljnega pomena za ohranjanje konkurenčnosti ter polnofunkcionalnosti slovenščine med ostalimi jeziki .
Za slovenščino je bil do sedaj na voljo en površinskoskladenjsko označen korpus : Slovenska odvisnostna drevesnica ( SDT ) , ki obsega približno 2.800 povedi oz. 45.000 besed ( Erjavec , Ledinek 2006 ; Džeroski et al. 2006 ; Ledinek 2007 ) .
Zaradi skladenjskih sorodnosti med češčino in slovenščino ter dostopnosti izčrpnega priročnika za površinskoskladenjsko označevanje češčine ( Bémová et al. 1999 ) in inteligentnega označevalnika povedi ( Hajič et al. 2001 ) je bil označevalni sistem slovenskega korpusa oblikovan po modelu korpusa Prague Dependency Treebank .
Tako s tehnološkega kot jezikoslovnega vidika je slabost korpusa njegova majhnost ter skromna besedilnotipska sestava , s čimer je korpus lahko le pomožni vir za razvoj in šolanje skladenjskih razčlenjevalnikov ter jezikoslovne analize .
Njihova izgradnja kot rezultat oblikovanja in implementacije premišljenega jezikovnospecifičnega označevalnega sistema se odvija pri projektu Jezikoslovno označevanje slovenščine ( JOS ) , v okviru katerega sta pred tem že potekali revizija in nadgradnja nabora oznak za avtomatsko oblikoskladenjsko označevanje slovenščine ( Erjavec , Krek 2008 ; Arhar , Ledinek 2008 ) , isti označevalni sistem pa bo uporabljen tudi pri izgradnji skladenjsko označenih korpusov projekta Sporazumevanje v slovenskem jeziku ( SSJ ) .
Korpus sestavljajo vzorčeni odstavki iz 620-milijonskega korpusa FidaPLUS ( Arhar in Gorjanc , 2007 ) , pri čemer so bili kriteriji za vzorčenje uravnoteženost , reprezentativnost in kvaliteta besedil .
Oblikoskladenjske oznake , ki se uporabljajo v korpusu , so nadgradnja oznak MULTEXT-East za slovenski jezik ( te se uporabljajo v korpusu FidaPLUS ) .
Izvorne oznake in leme v korpusu so bile prepisane iz korpusa FidaPLUS , nato pa revidirane in v več korakih ročno pregledane .
Korpus jos100k je zapisan v XML-formatu , v skladu s smernicami konzorcija za označevanje besedil TEI ( 2007 ) , ter vsebuje bibliografske podatke o posameznih besedilih in njihovi umestitvi v taksonomijo besedil , oznake za odstavke , povedi in besede oz. ločila , za vsako besedo pa njeno ročno preverjeno oblikoskladenjsko oznako in lemo .
Korpus je na voljo preko spletnega konkordančnika , v celoti pa je za raziskovalne namene dostopen tudi kot zbirka podatkov po licenci Creative Commons .
3.
Oblikovanje specifikacij za površinskoskladenjsko označevanje slovenščine JOS Oblikovanje označevalnega sistema je vodilo načelo , da je treba izhajati iz spoznanj o ( tipoloških ) značilnostih slovenščine in pripraviti jezikovnospecifičen označevalni sistem , ter zlasti vodilo , da je nujno oblikovati konsistenten ter dovolj robusten nabor oznak , pri čemer smo skušali upoštevati potrebe raziskovalne skupnosti ( izraba virov tako za razvoj metod obdelave naravnega jezika in jezikovnih tehnologij kot tudi za jezikoslovne raziskave ) , predpostavljeno stopnjo avtomatske pripisljivosti oznak in stopnjo določljivosti mej potencialnih jezikoslovnih kategorij znotraj potencialnih širših kategorij .
V prvi fazi oblikovanja označevalnega sistema in nabora oznak JOS je potekala analiza prednosti in slabosti različnih površinskoskladenjskih označevalnih sistemov ( Prague Dependency Treebank , Minipar , Link Grammar itd. ) , pri čemer so bile upoštevane zlasti namenskost gradnje korpusov in tipološke lastnosti jezikov , katerih korpusi so bili z omenjenimi sistemi označeni .
nekaj sto vzorčnih povedih iz korpusa FidaPLUS je bila razvita izhodiščna različica specifikacij za odvisnostno površinskoskladenjsko označevanje slovenščine .
Ustreznost izhodiščnega označevalnega sistema je bila nato testirana pri ročnem označevanju korpusa jos500s s strani razvijalcev označevalnega sistema , pri čemer so bile specifikacije revidirane , vsaka poved korpusa pa večkrat pregledana .
Rezultat opisanega dela je nabor površinskoskladenjskih oznak JOS , različica 1.0 priročnika za označevanje in majhen , a natančno označen učni korpus zlati standard jos500s .
Nastali robustni trinivojski sistem odvisnostnega površinskoskladenjskega označevanja slovenščine predvideva 10 analitičnih oznak in je namenjen raziskovanju zlasti jedrnih skladenjskih pojavov .
Hkrati je že sama avtomatska analiza jezika ( težnja po robustnosti označevalnega sistema ) zahtevala , da se nabor oznak in sistem njihovega pripisovanja skladenjskim strukturam od v jezikoslovju uveljavljenih kategorij in interpretacij nekoliko odmakneta , na kar kažejo tudi imena analitičnih oznak , ki se od uveljavljenih jezikoslovnih terminov zavestno razlikujejo ( Tabela 1 ) .
Vtis o rabi nabora površinskoskladenjskih oznak je mogoče dobiti ob ogledu ene od označenih povedi iz zlatega standarda jos500s ( Slika 1 ) , natančnejše podatke o načinu pripisovanja oznak specifičnim skladenjskim strukturam pa nudi priročnik za označevanje , ki ga v smislu specifikacij za površinskoskladenjsko označevanje slovenščine JOS smiselno dopolnjuje zlati standard jos500s .
Slika 1 : Primer označene povedi iz korpusa jos500s , kot jo vidimo v programu za ročno označevanje povedi .
Označevalni sistem je rezultat preudarnega jezikoslovnega razmisleka ob označevanju avtentičnih primerov jezikovne rabe in upoštevanju namenskosti označenih korpusov ter predvidene frekvence oz. razpršenosti analitičnih oznak v korpusu .
Oblikoskladenjske oznake dajejo razmeroma dobro informacijo o potencialni skladenjski strukturi povedi , zato je ob interpretaciji jezikoslovnih pojavov predvideno njihovo kombiniranje s površinskoskladenjskimi oznakami .
Robusten označevalni sistem omogoča identifikacijo zlasti jedrnih znotrajstavčnih struktur ( t. i. chunkov ) .
Postopek označevanja Za potrebe ročnega označevanja je bil razvit program za označevanje in vizualizacijo povedi , 2 ki ponuja grafični vmesnik , s katerim lahko pregledujemo površinskoskladenjske oznake povedi ter jih ročno popravljamo oz. dopolnjujemo .
S pomočjo tega urejevalnika , ob hkratnem pisanju priročnika za označevanje , je bil najprej označen korpus jos500s , ki je v nadaljevanju služil kot učni korpus za avtomatsko skladenjsko označevanje , na podlagi katerega je bil skladenjsko predoznačen korpus jos100k , kar je bistveno pohitrilo postopek ročnega označevanja .
S povečevanjem števila ročno označenih povedi se veča tudi učni korpus , ki ga je mogoče uporabiti pri avtomatskem označevanju korpusa jos100k , zato bo postopek predoznačitve tega korpusa na določen časovni interval ponovljen .
Vsak segment besedila pregledujeta najmanj dva označevalca , kjer pri njunem označevanju prihaja do razlik , oznake preveri še tretji označevalec .
Z obsežnejšim korpusom se povečuje tudi nabor skladenjskih struktur , ki jih je treba sistematično označiti .
Vzporedno z ročnim 2 Avtor programa je Janez Brank , primer slike zaslona pa je podan na Sliki 1. označevanjem zato poteka tudi nadgradnja specifikacij za površinskoskladenjsko označevanje , ki je deloma tudi rezultat evalvacije , ki sledi analizi skladnosti ročnega označevanja pri označevalcih ter analizi razlik med ročnim in avtomatskim označevanjem .
Zaključek Korpusi JOS s specifikacijami so standardizirani in po licenci Creative Commons za raziskovalne namene prosto dostopni jezikovni viri za slovenščino ; oblikoskladenjsko označena korpusa sta že dostopna na spletni strani projekta JOS , v nadaljevanju pa bodo na enak način dostopni tudi skladenjsko in pomensko označeni korpusi projekta .
Površinskoskladenjsko označena korpusa JOS bosta v nadaljnjih fazah dela vključena tudi v učni korpus projekta SSJ ssj400k .
Na osnovi skladenjsko označenih virov SSJ je predvideno tudi oblikovanje novih jeziko ( slo ) vnih priročnikov za slovenščino .
STROJNO PREVAJANJE BESEDILA IN GOVORA 2 POVZETEK Povzetek , ki ga berete v angleščini , sva prevedla s pomočjo prevajalnega sistema Presis podjetja Amebis , ki je edino v Sloveniji , ki se tržno ukvarja s tem .
Pogosto tudi obiskujejo njihove spletne strani , zato je strežnik včasih celo prezaseden .
Kakovost in uporabnost prevodov sva preizkusila z dvema besediloma .
Ker prevod iz nemščine v slovenščino pri Presisu še ni mogoč , sva v nemščino prevedla s pomočjo spletnega prevajalnika Google Translate .
2.1 ABSTRACT ( originalna kopija iz Presis Pro ) 3 UVOD Vsak od nas pogosto potrebuje prevod iz slovenščine v tuj jezik ali pa ne razume besedila v tujem jeziku .
V nalogi bova raziskovala , v kolikšni meri je že razvito strojno prevajanje .
Isto besedilo sva prevedla tudi z Google Translate , enim izmed spletnih prevajalnikov , in prevoda primerjala med sabo .
Po besedah gospoda Iztoka Grilca iz podjetja Amebis je nemščina naslednja na vrsti , a novo verzijo lahko pričakujemo šele čez leto ali dve .
« , ker je bil najin povod k tej raziskovalni nalogi , raziskati strojno prevajanje govora in besedila prav na slovenskem področju .
Letos bova torej podrobno opisala program Babilon , ki nama je na voljo na FERI-ju v Mariboru .
Razvijanje računalniških tehnologij , ki bi znale ta proces simulirati ali vsaj optimizirati nekatere njegove dele , zato že dolgo predstavlja izziv tako jezikoslovcem kot računalničarjem .
2. predpostavka : Predpostavljava , da bosta prevoda ( nemški in angleški ) s pomočjo spletnega prevajalnika Google Translate dobra oz. uporabna .
4. predpostavka : Predpostavlja , da večina anketirancev ne pozna strojnega prevajanja , iz česar sledi , da tudi ne poznajo nobenega programa za strojno prevajanje .
4 ZGODOVINA STROJNEGA PREVAJANJA Ideja , kako prikladno bi bilo , če bi imeli prevajalni stroj , je zelo stara , prvi koraki v tej smeri pa so bili narejeni v letih po 2. svetovni vojni .
« ( Arnold et .
Takšen pogled na strojno prevajanje in razlike med jeziki je seveda zelo preprost , vendar je Weaver s tem spodbudil raziskave na tem področju in leta 1954 je bila demonstracija prototipa angleško - ruskega sistema strojnega prevajanja pisanega besedila .
Začetnega optimizma glede strojnega prevajanja je bilo konec s poročilom ALPAC - a leta 1966 , ki je ugotavljalo , da to področje ni perspektivno in da zahteva preveč stroškov glede na doseženo kakovost produkta .
Posledica je bila , da ameriška vlada ni bila več pripravljena financirati raziskav tega področja , delo so nadaljevale le redke skupine zunaj ZDA .
Pravo prebujenje tehnologije strojnega prevajanja besedila pa se je zgodilo v osemdesetih .
V letu 2002 dobimo prvi večji strojni prevajalnik besedil tudi za slovenščino : podjetje Amebis predstavi slovensko - angleški prevajalni sistem Presis , poskuse statističnega strojnega prevajanja besedil prav tako iz slovenščine v angleščino delajo tudi na fakulteti za računalništvo in informatiko v Ljubljani in Inštitutu Jožef Stefan ( Verdonik ; Jezikovni viri za strojno simultano prevajanja govora ) .
5 KAJ JE STROJNO PREVAJANJE 5.1 Spletno prevajanje in slovarji Splet ponuja ogromno strani z jezikovnimi informacijami .
V Sloveniji ponuja podjetje Amebis v svojem elektronskem založništvu knjižno polico ( http://presis.amebis.si , 7.11.2006 ) : Knjižna polica Knjižna polica je bolj znana tudi kot ASP slovarji , ki se jih da potegniti tudi z interneta , kar sicer ni legalno , a treba se je znajti .
Kot je razvidno iz predstavitve , vsebuje knjižna polica številka štiri 30 knjig / zbirk , npr. nemško-slovenski in slovensko – nemški slovar , angleško – slovenski in slovensko - angleški slovar , SSKJ …
Podjetje Amebis je doslej prodalo že več tisoč izvodov slovarjev , ki jih razvijajo za DZS in Mladinsko knjigo ( vir : E – mail iztok.grilc@amebis.si za jana.serc@guest.arnes.si , 18.januar 2007 11:18 , priloga 2 ) .
Strojno prevajanje na splošnih domenah trenutno še ne dosega kakovosti prevodov drugih računalniških področij .
Poleg osnovnih jezikovnih pravil , kot so sintaksa , gramatika , sinonimi besed oziroma fraz v obeh jezikih , mora sistem poznati še semantiko oziroma pomen prevajanih sporočil ( Vičič , Jernej : Statično strojno prevajanje naravnih jezikov , Magistrska naloga , Mentor : prof. dr. Saša Divjak , Ljubljana 2002 ) .
Za prikaz strojnega prevajanja besedil sva uporabila predstavitev računalniškega prevajalnega orodja Presis podjetja Amebis ( http://presis.amebis.si , 7.11.2006 ) : Primer prevoda enostavčne povedi s samostalnikoma pes v imenovalniku in cesta v tožilniku , glagolom je šel v pretekliku in predlogom čez : Sistem Presis ne deluje kot pomnilnik prevodov , kot mnogi od tujih , pač pa stavek poskuša razumeti in potem prevesti .
13 5.3 Strojno simultano prevajanje govora Darinka Verdonik pravi v Jezikovnih virih za strojno prevajanje govora : » Sistemi strojnega simultanega prevajanja govora se v marsikaterem pogledu razlikujejo od sistemov strojnega prevajanja pisnega besedila .
Prva pomembna razlika je , da mora sistem simultanega strojnega prevajanja govora najprej razpoznati govor ( tj. znati prevesti zvok v takšno pisno obliko , kot to naredi človek ) , šele nato lahko sledi govorno orientirano prevajanje ( ki pa je zaradi lastnosti govorjenega jezika , ki jih opisujemo v naslednjem odstavku , prav tako drugačna , zahtevnejša naloga kot strojno prevajanje besedila ) , potem pa je treba prevedeno besedilo ponovno pretvoriti v zvok .
V osnovi ločimo dve ravni : • na prvi se govor obravnava kot akustični signal : • na drugi ravni , pa je treba signal pretvoriti v besedilo in obratno – zapisano besedilo pretvoriti v akustični signal .
V spodnjem primeru prevajamo iz nemščine v slovenščino : Zastavila sva ji tudi nekaj vprašanj , na katere nama je prijazno odgovorila in nama podala kar nekaj zanimivih informacij .
Ali je sistem še v razvoju ali se sistem že uporablja ?
Sistem je vsekakor še v razvoju .
Babilon je predvsem demonstracijski sistem koncepta , kako strojno prevajanje deluje , in ne prevajalnik , ki bi ga lahko uporabljali v vsakdanjem življenju .
Omejen je na zelo specializirano področje – orientacijo v prostoru , ko vprašamo za pot do željenega cilja , ter restavracijski meni – za druga področja ne deluje .
Seveda nam je dalo spodbudo tudi dejstvo , da se podobni sistemi razvijajo tudi v tujini za različne tuje jezike .
Samo združitev komponent v Babilon in dopolnitev z modulom za prevajanje pa smo prvič preskusili pred približno tremi leti .
Babilon , kot rečeno , združuje glavnino znanj , ki jih razvijamo v naši skupini na področju govornih tehnologij , tako so k njegovi postavitvi neposredno ali posredno prispevali vsi sedanji in nekateri bivši člani raziskovalne skupine , tj. skupno ca .
Je možno prevajanje tudi , če uporabljamo narečja ?
Slika3 : Predstavlja cilj strokovnjakov in raziskovalcev , da bi s pomočjo Babilona komunicirala dva človeka , ki govorita drugačen jezik .
Raziskovalna skupina na FERI je v celoti razvila sistem strojnega simultanega prevajanja govora BABILON za slovenski , angleški in nemški jezik * .
5.5 Preglednici projektov in sistemov simultanega strojnega prevajanja govora Na spodnjih preglednicah so programi , ki so sposobni strojno prevajati govor .
Različni sistemi so specializirani za različne scenarije , C - STAR na primer za organiziranje potovanja ( torej turizem ) , prav tako tudi Verbmobil , JANUS , Eu Trans ...
Razvoj je v glavnem odvisen od višine finančnih sredstev ( Verdonik , Darinka : Jezikovni viri za strojno simultano prevajanje govora , Znanstveno delo podiplomskih študentov v Sloveniji , strani 675- 685 © 2004 , Ljubljana ) .
Zaradi verodostojnosti podatkov , kar pomeni , da niso jemali najine ankete resno , so ankete reševali pod budnim očesom profesorjev , oz. mentorjev .
6.1 ANALIZA VPRAŠALNIKA 1.
c ) Prevod plačam prevajalcu ali prevajalski agenciji d ) Prevedem s pomočjo računalnika ( strojno prevajanje ) Ugotovitve : Ugotovila sva , da danes pri vsej moderni tehnologiji le še redko kdo od dijakov prevajanje plača .
Ker je danes učenje tujih jezikov kvalitetnejše , opažamo , da si veliko dijakov samo prevede besedilo katero potrebujejo .
DA NE Ugotovitve : Izkazalo se je , da približno polovica dijakov ne ve kaj pomeni pojem spletni slovarji .
Čeprav je prevladoval Google Translate , je bil mnogokrat izbrana tudi zbirka slovarjev ASP32 podjetja Amebis .
DA NE Ugotovitve : Odgovori kažejo , da dijaki še vedno niso dobro ozaveščeni glede pojma strojno prevajanje , pa čeprav so pri prvem vprašanju kar množično odgovarjali na odgovor D ( Besedilo prevedem s pomočjo računalnika ) .
Poznate kak prevajalski sistem za strojno prevajanje ?
Ker sva program pridobila od podjetja Amebis osebno , sva imela možnost neomejenega števila znakov .
( priloga št. 5 ) Ker se na slikah ne vidi ravno najbolje originalnih in prevedenih besedil , sva jih dodala vprilogo št. 6. 6.2.1 Analiza strojno prevedenega besedila iz slovenščine v angleščino programa Amebis Presis : Amebis Presis Pro z barvami , ki si jih lahko določimo sami , označi štiri tipe prevedenih besed : črne so besede z enim znanim prevodom , zelene besede z več možnimi prevodi , rdeče so neznane besede ( v našem primeru toliko , žulilo in na ) , primera za neprevedeno lastno ime pa v tem besedilu nimamo .
Kot je razvidno iz prevoda v angleščino , je velik del besedila zapisan z zeleno – vse to so torej besede , ki imajo več možnih prevodov .
Pri besedah z več možnimi prevodi se ti nasveti pojavijo avtomatsko v trenutku , ko prideš s kazalcem na določeno besedo .
6.2.2 Analiza strojno prevedenega besedila iz slovenščine v angleščino spletnega prevajalnika Google Translate Isto besedilo sva prevedla tudi s pomočjo spletnega prevajalnika Google Translate ( http://translate.google.com/ ).
6.2.3 Analiza strojno prevedenega besedila iz angleščine v slovenščino programa Amebis Presis Amebis Presis Pro seveda tudi pri prevajanju iz angleščine v slovenščino označi besedilo z barvami , ki si jih lahko določimo sami .
Postopek je enak kot pri prevodu iz slovenščine v angleščino .
6.2.4 Analiza strojno prevedenega besedila iz angleščine v slovenščino spletnega prevajalnika Google Translate Isto besedilo o Bibliji sva kot pri prevajanju v angleščino tudi sedaj prevedla s pomočjo spletnega prevajalnika Google Translate .
Od Presisa se razlikuje po tem , da ga sami ne moremo spreminjati , ker je dokončen in ne daje možnosti vodenja oz. pomoči programa .
6.2.5 Analiza strojno prevedenega besedila iz slovenščine v nemščino spletnega prevajalnika Google Translate Ker Amebis Presis še ne podpira nemščine ( nanjo sicer lahko računamo čez leto ali dve – vir : E – mail iztok.grilc@amebis.si za jana.serc@guest.arnes.si , 18.januar 2007 11:18 ) , sva besedilo vzela iz besedila o Petelinjem zajtrku .
Prevod je naslednji : Prevod je malenkost boljši , kot prej prevod v angleščino .
Tudi ta prevod je marsikaj žulilo , tako da so besede ostale neprevedene : spet ljubavni , tlijo , workshop ( angleščina ) , Glede na ugotovitve ocenjujeva prevod kot slab , vendar uporaben .
Prevod je naslednji : To prevedeno besedilo je katastrofa , najslabše besedilo prevedeno nasploh .
Ocena : Neuporabno .
6.3 ZANIMIVI PREVODI V elektronskem pismu nama je gospod Iztok Grilc poslal naslednje primere prevodov , s katerimi je imel prevajalski sistem Presis težave ( mail iztok.grilc@amebis.si za jana.serc@guest.arnes.si , 15. 03. 2007 05:52 ( priloga 4 ) ) : > Istrabenz namerava prevzeti Kolinsko > Istrabenz intends to charm Kolinska > jem srednje zapečenega piščanca > I am devouring centrally fried chicke > He put the bag on the table .
> Presis te vsak dan sekira .
> Moj najljubši bend je Smashing Pumpkins .
( Google Translate je v primerjavi z Presisom prevedel to poved veliko bolje !
Ne drži , ker Google zaradi kratkega razvojnega časa še vedno nima dobro dodelanega sistema za prevajanje in ne pozna dovolj besed ter nekatere angleške besede meša z besedami drugih jezikov .
4. predpostavka : Predpostavlja , da večina anketirancev ne pozna strojnega prevajanja , iz česar sledi , da tudi ne poznajo nobenega programa za strojno prevajanje .
5. predpostavka : Predpostavljava , da anketiranci poznajo Amebisovo zbirko slovarjev ASP32 in jo tudi uporabljajo .
Drži , rezultati ankete kažejo na to , da večina ljudi uporablja in pozna Amebisove slovarje ASP32 !
8 POGLED V PRIHODNOST STROJNEGA PREVAJANJA V pismu gospodu Iztoku Grilcu smo postavili vprašanje , ali ima podjetje Amebis namen razvijati sistem tudi za strojno prevajanje nemščine , in je odgovoril : » V ozadju smo se lotili tudi nemščine .
Največji problem so seveda izjeme , saj jezika nikakor ne moremo postaviti v neka stroga pravila .
no dve leti je mimo , in še vedno ni nemščine , torej se želje niso uresničile .
Dr. špela Vintar pravi v zaključku članka Računalniške tehnologije za prevajanje , da si v Sloveniji prevajalske tehnologije le počasi utirajo pot v prakso , tako da je položaj težko presojati iz konkretnih izkušenj Kar se tiče programskih orodij , se ta postopoma uvajajo v proces prevajanja slovenske zakonodaje in drugih meddržavnih dokumentov , vse več pa jih uporabljajo prevajalske agencije .
Filozofska fakulteta v Ljubljani ima Oddelek za prevajanje in tolmačenje .
Institut Jožef Stefan se vključuje v različne evropske projekte , v sklopu katerih se gradijo večjezični jezikovni viri – vzporedni korpusi in leksikoni .
Je možno , da računalnik prevzame delo prevajalcev na posameznih področjih ?
V prihodnosti bodo ti programi gotovo vse boljši , še nekaj časa pa strojno prevedena besedila ne bodo tako tekoča in razumljiva kot človeški prevodi .
Literarno besedilo doseže svoj namen s tem , da subjektivno umetniško učinkuje na ( človeškega ) bralca , podoben učinek mora doseči tudi dober literarni prevajalec .
, potrebujemo prevod privatno ali službeno , za katero državo itd. ) .
Spletna stran založbe Langenscheidt ( www.langenscheidt.de , 7. 5.2008 ) , kjer lahko izbiramo med 44 jeziki , med drugim tudi v slovenščino , vendar prevoda ne dobimo takoj in tudi ne brezplačno , zato predvidevava , da gre za CAT .
Pričakovala sva tudi , da prevodi iz angleščine v slovenščino in iz slovenščine v angleščino s prevajalnim sistemom Presis ne bodo prevedeni povsem pravilno , saj na to podjetje Amebis opozarja že v Napotkih za prevajanje na svoji spletni strani .
Strojno prevajanje je še precej nepoznano področje za uporabnike , slovenski strokovnjaki pa intenzivno raziskujejo nove možnosti in tehnologije .
PREDNOSTI IN OMEJITVE PROGRAMOV S POMNILNIKOM PREVODOV Povzetek Programi s pomnilnikom prevodov ( Translation Memory Tools ) si v svetu že celo desetletje , v zadnjem času pa tudi pri nas , utirajo pot v prevajalsko prakso .
Ker so v Sloveniji možnosti , ki jih sodobna prevajalska orodja nudijo morebitnim uporabnikom , še v veliki meri neznane , pričujoči prispevek v uvodnem delu na kratko predstavi temeljno zamisel teh programov in oriše , za kakšna besedila in katere uporabniške profile so najbolj uporabni .
V nadaljevanju s primeri prikažemo eno od ključnih funkcij pomnilnika prevodov — iskanje meglenih zadetkov ( fuzzy matching ) , nato pa delovanje enega od programov ponazorimo na primeru daljšega strokovnega besedila .
Ob ovrednotenju rezultatov preskusa spregovorimo o prednostih in slabostih teh orodij , o spremembah , ki jih njihovo uvajanje vnaša v prevajalski proces , in o njihovi vlogi v širšem kontekstu jezikovnih tehnologij .
Razlogov za to je več , v zadnjem desetletju pa so k temu največ doprinesle nove komunikacijsko-informacijske tehnologije , ki omogočajo hitrejše in učinkovitejše povezave med pripadniki različnih jezikovnih skupin , in vse bolj intenzivne gospodarske in politične poteze združevanja v Evropi in po svetu .
Kakovostne prevajalske storitve so temu primerno visoko cenjene , tega pa si marsikateri naročnik dolgoročno ne more privoščiti .
Orodja za računalniško podprto prevajanje pa prevajalski proces le olajšujejo in pospešujejo in v širšem smislu obsegajo vse računalniške pripomočke , ki utegnejo prevajalcu pomagati pri delu ( črkovalniki , tezavri , elektronski slovarji , terminološke banke , pomnilniki prevodov itd. ) .
Pogoj za uporabo tega orodja je , da imamo izvirno besedilo v elektronski obliki .
Prednosti , ki jih od uporabe tovrstnih orodij lahko pričakujemo , so naslednje ( glej Heyn , 1997 ) : • boljša časovna učinkovitost — prevajalec se ukvarja le še s prevodnimi enotami , ki jih ni še nikdar prevedel , • doslednost v rabi izrazja — terminološka banka in pomnilnik prevodov skrbita za to , da se izrazje v izhodiščnem in ciljnem jeziku dosledno ujema , • referenčni vir — zanesljiv in urejen pomnilnik prevodov je dragocen jezikovni vir za bodoče delo .
Dejanska uporabnost pomnilnikov prevodov je v veliki meri odvisna od značilnosti besedil , ki jih želimo prevajati , saj temelji na predpostavki , da se v določenih vrstah besedil stavki , besedni nizi ali posamezni izrazi v bolj ali manj nespremenjeni obliki ponavljajo .
Poleg faktorja ponavljanja na učinkovitost dela s pomnilnikom prevodov vplivajo še drugi dejavniki v okviru besedila in izven njega , npr. povprečna dolžina prevodnih enot , obseg prevajalskega projekta ( dolžina besedila ) , velikost , število in kakovost terminoloških bank in pomnilnikov prevodov , ki jih imamo na razpolago pred prevajanjem , ipd.
Program s pomnilnikom prevodov je lahko integriran v urejevalnik besedil ( Word , WordPerfect ) , lahko pa ima lastno delovno namizje , v katerega uvozimo dokument , ki ga želimo prevesti .
Med najpomembnejše tovrstne proizvode sodijo : • TRADOS Translator's Workbench ( zraven sodita še terminološki program MultiTerm in orodje za vzporejanje WinAlign ) , http://www.trados.com/ • IBM Translation Manager , http://www.software.ibm.com/ad/translat/eqfn0b02.html • STAR Transit in TermStar , http://www.translit.se/star/transit.htm • EUROLANG Optimizer , http://www.eurolang.fr/ • ATRIL D ( jaVu , http://www.atril.com/ III .
V nadaljevanju z nekaj primeri ponazarjamo , kako se pomnilnik prevodov obnaša pri različnih vrstah podobnosti ; v vseh primerih smo uporabljali program Translator's Workbench proizvajalca TRADOS z nastavitvijo praga meglenosti na 60% .
Pomnilnik prevodov podobnost ugotavlja na podlagi števila besed ali besednih nizov , ki se v obeh enotah ujemajo , in na podlagi besednega reda .
Program podobnost ugotavlja zgolj na ravni ene prevodne enote ( navadno povedi ) .
Pomnilnik prevodov tudi ne dela razlik med dolgimi in kratkimi besedami , ali drugače povedano , ni pomembno , ali se ujemajo pomenske besede ali zgolj predlogi , členi in podobno .
Da bi bilo iskanje meglenih zadetkov boljše , bi pomnilniki prevodov verjetno potrebovali vsaj še orodje za stavčno in besedno analizo , tu pa smo že spet pri jezikovno odvisnih programih , ki neizbežno omejijo izbor jezikov , za katere so pomnilniki prevodov uporabni .
Cilj preskusa je bil : • z vzporejanjem že prevedenega besedila oziroma več besedil ustvariti čim večji pomnilnik prevodov , • preskusiti tako pridobljeni pomnilnik prevodov na krajšem besedilu z istega področja oziroma z istega prevajalskega projekta .
Besedilo v celoti obsega približno 12.700 besed ali 88.000 znakov , gre pa za katalog proizvodov Lekove domače lekarne , v katerem so po kratkem uvodniku opisani posamezni preparati v za zdravila tipični obliki ( sestava , delovanje , indikacije , kontraindikacije , doziranje in uporaba , stranski učinki itd. ) .
Besedilo je po svoji makrostrukturi sicer katalog , a ker je pravzaprav sestavljeno iz manjših , ponavljajočih se enot , je prevladujoča besedilna vrsta vložni listek ( tj. navodila za uporabo zdravil ) .
Zgradba teh manjših enot se ravna po ustaljenem ( deloma celo zakonsko predpisanem ) vzorcu , zato lahko že vnaprej pričakujemo , da bo faktor ponavljanja visok .
Besedilo vsebuje precej strokovne terminologije s področij medicine , farmacije in farmakologije , zato bi za njegovo prevajanje potrebovali predvsem dobro terminološko banko , ker pa nas je pri preskusu zanimalo delovanje pomnilnika prevodov , terminološke banke za ta projekt nismo izdelali .
Za izdelavo pomnilnika prevodov smo uporabili dve tretjini besedila v izvirniku in prevodu ( približno 9.000 besed ) , pri čemer nismo vključili uvodnika .
Vsa imena zdravil v naslovih posameznih odsekov so bila tako polni zadetek , ker so bila prevedena že v kazalu .
Preskus je potekal tako , da smo v programu Deja Vu ustvarili nov prevajalski projekt , določili za izhodiščni jezik slovenščino in ciljni jezik angleščino , ter projektu priredili pomnilnik prevodov , ki smo ga ustvarili prej z vzporejanjem .
Program besedilo razdeli na prevodne enote in samodejno , pred začetkom prevajanja , v pomnilniku prevodov poišče vsa polna in meglena ujemanja .
Zaradi boljše preglednosti rezultatov pri polnih zadetkih v celoti navajamo vse , ki se pojavijo več kot dvakrat , kajti ti deloma sodijo v samo shemo besedilne vrste .
Posebej navajamo tudi vse polne zadetke , ki so rezultat prevedenega kazala ( imena zdravil ) .
Meglenih zadetkov ne navajamo posebej , upoštevani pa so bili le " uporabni " predlogi .
Glede na to , da je bil preskusni pomnilnik prevodov še vedno relativno majhen , je gornji rezultat kar zadovoljiv .
Če bi ob tem prevajalskem projektu uporabljali še kakovostno terminološko banko , bi bilo z uporabo programa s pomnilnikom prevodov mogoče prihraniti približno tretjino časa , ali z drugimi besedami , program bi samodejno z uporabnimi prevodi nadomestil okrog 33% besedila , saj bi v vseh prevodnih enotah brez zadetka nadomestil vsaj strokovne termine , teh pa je precej .
Drugih polnih zadetkov je bilo relativno malo , megleni zadetki pa kljub uporabnim predlogom še vedno terjajo prevajalčevo delo .
Mnogi uporabniki tovrstne programe uporabljajo pretežno v ta namen .
Navedeni primeri so zbrani iz odsekov z naslovom Kontraindikacije .
Pri povedih se pojavlja precej različnih izraznih variacij za isti pomen , namreč odsvetovanje : ...
, ...
Programi s pomnilnikom prevodov imajo torej svoje omejitve in zaenkrat ne prinašajo revolucije v vse segmente prevajalskega dela .
Izkušnje iz tujine ( Falcone , 1998 ; Schüller , 1995 ) kažejo , da se finančna in časovna investicija v program s pomnilnikom prevodov samostojnim prevajalcem le izjemoma splača , saj se ti srečujejo s preveč raznolikimi besedili , da bi bil prihranek časa omembe vreden .
Tovrstna orodja najbolje služijo podjetjem ali ustanovam , kjer mnogo prevajalcev prevaja velike količine med seboj sorodnih besedil z določenega — čim bolj ozkega — področja , lahko pa gre tudi za prevajalske agencije , ki trajno sodelujejo z velikimi naročniki .
V takem okolju je možno izkoristiti vse prednosti , ki jih tovrstna orodja ponujajo , npr. da več prevajalcev prevaja isti projekt in preko računalniške mreže gradi en obsežen pomnilnik prevodov in pripadajoče terminološke banke , da se projekt prevaja v več jezikov hkrati , da je mogoč vpogled v napredovanje dela itd.
Program TRADOS Translator's Workbench bo pri prevajanju zakonodaje in drugih evropskih dokumentov uporabljala Služba za evropske zadeve , zaenkrat je program pri njih še v fazi preskušanja .
Sčasoma se bodo te tehnologije verjetno uveljavile tudi med slovenskimi podjetji , vsaj med tistimi , ki so izrazito mednarodno usmerjena in zaposlujejo lastne prevajalce .
S pomnilnikom prevodov , ki sodi k prevajalskemu projektu , se spreminjajo klasični odnosi med naročnikom in prevajalcem .
Naročnik lahko zahteva , da se za določeni projekt uporabi določena programska oprema in jo celo posreduje , prevajalec ali prevajalska agencija lahko dejstvo , da uporablja določeni program , predstavi kot konkurenčno prednost , naročnik je prek pomnilnika prevodov " vezan " na izbrani prevajalski team , če mu ta pomnilnika ob končanem projektu ne izroči ; vse to so situacije , ki se pojavljajo v prevajanju kot tržni storitvi in vnašajo globoke spremembe v doslej uveljavljeni pretok besedil .
Prvi pogoj , da je prevajanje s pomočjo teh orodij sploh možno , pa je posredovanje izvirnega besedila v elektronski obliki , kar po ugotovitvah prevajalcev pri nas in drugod še zdaleč ni samoumevno .
Ker je na evropskem trgu trenutno na voljo preko deset različnih programov s pomnilnikom prevodov , število pa se še povečuje , se je pojavila potreba po uvedbi standardiziranega formata za pomnilnike prevodov in terminološke banke .
Za večje evropske jezike je zanimiva integracija programov s pomnilnikom prevodov s sistemi za strojno prevajanje .
Tako program za vse prevodne enote , za katere ni zadetka v pomnilniku prevodov , predlaga strojni prevod .
Novi pristopi se obetajo tudi pri iskanju meglenih zadetkov , predvsem pri definiciji prevodne enote in iskanja zadetkov na podpovedni ravni .
Sodobne prevajalske tehnologije kljub svojim omejitvam prinašajo opazen napredek vsaj v določenem segmentu prevajalskega dela , se pravi pri prevajanju repetitivnih besedil s tehničnih , znanstvenih , pravnih in drugih področij , to pa je hkrati tudi tisti segment , v katerem potrebe po prevodih najhitreje rastejo .
Statistično strojno prevajanje na osnovi vzporednih korpusov 1.
Je končni izdelek poletne delavnice na univerzi JHU - John Hopkins University in je trenutno najširše uporabljana zbirka v sistemih strojnega prevajanja .
Vsebuje milijon besed , prevodov iz slovenščine v angleščino in obratno , ki so komentirane in poravnane po povedih .
Osnovni model je bil razširjen z uporabo beležk v korpusu , posebno z uporabo kontekstno neodvisnih lem , ki niso odvisne od bogate uporabe sklanjatev ter spreganjav slovenskem jeziku .
Vrednotenje osnovnega sistema nam je pokazalo primernost uporabe izbranih tehnologij za prevajanje slovenskega jezika .
Nove prevedbe so bile ovrednotene ter rezultati primerjani z osnovnim sistemom , pri vrednotenju so bili uporabljeni isti testni primeri .
Pri opisovanju večine naravnih jezikov s strogimi pravili pa se pojavi kupec problemov .
Naravni jezik je preveč kompleksna ter živa tvorba in pravila za opisovanje so preveč kompleksna , če jih je sploh mogoče vsa zapisati .
Statistično strojno prevajanje do sedaj še ni doseglo rezultatov , ki bi omogočali izdelavo komercialnega prevajalnega sistema oziroma izdelavo uporabnega prevajalnega sistema .
Temeljil je na avtomatični statistični analizi dvojezičnih besedil , rezultati in zaključki so opisani v .
Oglejmo si primer prevoda besedila v nekem jeziku , izberemo slovenski jezik , v besedilo v angleškem jeziku .
Za poved f v slovenskem jeziku si zamislimo , da je bila zgrajena iz pripadajoče povedi e v angleškem jeziku .
Angleška poved je prepotovala šumni komunikacijski kanal z zanimivo lastnostjo , vsako angleško poved prevede v slovensko .
Osnovna ideja sistema Candide je , da lahko eksperimentalno določimo lastnosti našega » kanala « in jih lahko zapišemo s pomočjo matematičnih pravil .
S P ( eP ( e | f ) zapišemo verjetnost , da je bila e izvorna angleška poved , ki je služila za sestavo slovenske f. Pri dani slovenski povedi f postane naš problem , problem avtomatskega prevajanja , iskanje angleške povedi , ki maksimira P ( e | f ) .
Torej iščemo : | e ) zapišemo verjetnost da dobimo f kot izhod , če je e vhod našega prevajalnega kanala .
Obe funkciji neodvisno porajata rezultata za kandidata za angleški prevod e. Prevajalni model zagotavlja , da besede povedi e izražajo vsebino zapisano v f , jezikovni model zagotavlja , da je e res poved .
Osnovni cilji delavnice so bili : postavitev zbirke orodij za statistično strojno prevajanje , zbirka naj bo splošno dosegljiva raziskovalni srenji .
Osnovno testiranje sistema na osnovi objektivnih mer ( statistično modeliranje težavnosti ) .
Angleščina Razdelek predstavlja izbiro izvornega in ciljnega jezika .
Kot glavno značilnost omenimo dvojino , ki nas loči tudi od večine slovanskih jezikov .
To pomeni , da imajo osebni zaimki ( jaz , on , oni ) ponavadi nično obliko , so izpuščeni .
V dokaz h kompleksnosti jezika je tudi velikost korpusa , slovenščina ima kar 12% manj besed v korpusu kot angleščina .
Uporaba lem v dvojezičnem korpusu Razdelek predstavlja poskus izboljšave osnovnega delovanja prevajalnega sistema s pomočjo uvajanja informacije o jezikih v obliki lem .
Osnovni model je bil razširjen z uporabo beležk v korpusu , posebno z uporabo kontekstno neodvisnih lem , ki niso odvisne od bogate uporabe sklanjatev ter spreganja v slovenskem jeziku .
Dvojezični vzporedni korpus ELAN , ki je osnova našega sistema , je že lematiziran .
Naša hipoteza je predvidevala , da bo ta dodatna informacija pozitivno vplivala na kakovost prevodov .
Sistemu smo tako pomagali pri določanju nedoločnikov ter neprepognjenih in nesklanjanih besed .
Osnovni korpus smo razširili , število povedi smo povečali iz 27421 na 58803.
Testiranje Poglavje predstavlja motivacijo za izvedbo testiranja sistema ter omejitve in sredstva , ki smo jih uporabili .
Predstavljeni so tudi osnovni teoretični temelji .
Pri testiranju osnovnega ter popravljenega sistema smo se odločili samo za testiranje kvalitete prevodov , hitrost prevajanja oziroma odzivnost celotnega sistema pa prepustili poznejšim raziskavam in možnim izboljšavam .
V strojnem učenju se pojavlja ravno toliko metod za vrednotenje sistemov prevajanja kot je samih metod učenja ( učenja strojnega prevajanja ) .
Tolikšno število metod izvira iz dejstva , da se strokovnjaki le slabo strinjajo kaj sploh je dober prevod , kaj šele kaj je dobra mera za ocenitev prevoda .
Vrednotenje MT sistemov je postalo samo zase dovolj močno področje razvoja MT , dobrih rezultatov še ni .
Avtomatska metoda se še nadalje loči na dve podrazličici , ki pa se razlikujeta le v upoštevanju ene količine .
Porazdeljevanje prevodov v razrede opravlja človek , po možnosti strokovnjak .
Po je natančnost preslikav bolj primerna mera za opisovanje preslikav , saj pravilne besede na napačnih mestih štejejo kot ena sama napaka in ne kot dve ( brisanje besede ter vrivanje na pravo mesto ) .
Metodi sta bili še dodatno testirani s pomočjo zbirke prevodov ( ročni prevodi testne množice ) .
Ta množica prevodov je bila postavljena kot idealni prevodi in njena ocena predstavlja oceno h kateri stremimo .
Testna množica je bila ocenjena z metodo SA / TA s koeficientom 2,82 oziroma s 36,84 odstotki .
( 36,84% predstavlja 100% ) Tabela 1 : rezultati testne skupine z metodo SA / TA Testna množica je bila ocenjena z metodo SSER s koeficientom 4,48 oziroma s 87 odstotki .
Tabela 2 : rezultati testne skupine z metodo SSER Rezultati , prikazani v tabelah , ki so normalizirani z opisanim postopkom so posebej označeni in komentirani .
Metoda SSER , ki zahteva prisotnost eksperta , bi bila za celotno desetkratno prečno preverjanje preveč zamudna .
Isti testni primeri so bili uporabljeni za oba sistema , navadnega ter sistema , ki uporablja leme .
Rezultati Poglavje predstavlja rezultate testiranja po posameznih kategorijah in kriterijih .
Zapisane so tudi razlage rezultatov in možne izboljšave Testiranje je potekalo v dveh stopnjah , najprej testiranje kakovosti prevodov osnovnega sistema , v nadaljevanju pa še testiranje novega sistema .
Rezultati so med seboj primerljivi , same metode pa niso primerljive z metodami ostalih avtorjev .
Predstavitev rezultatov SA / TA avtomatska metoda je bila izvedena na 519 primerih , preverjanje s testno množico pa na 100 primerih .
Rezultati posameznih ovrednotenj so podani v Tabela 2. 6.2.
Opazili smo vseeno še velik prostor za izboljšanje , saj rezultati še niso na ravni komercialnih izdelkov ( Systran in podobni ) , primerjava s takšnimi izdelki pa tudi ni popolnoma vmesna , saj komercialnega prevajalnika iz slovenščine v angleščino sploh še ni .
Rezultati vrednotenja sistema z uporabo kontekstno neodvisnih lem Na žalost se je metoda uporabljanja kontekstno neodvisnih lem za dodatno opisovanje jezika izkazala kot neuporabno .
Zavedati se moramo , da je učenje sistema z lemami veliko bolj kompleksno , saj je število učnih primerov v korpusu več kot podvojeno , večje število učnih primerov pa lahko skriva tudi veliko več napak .
Rezultati podani v tabelah kažejo le povprečne vrednosti mnogih prevedb .
Ta zapažanja nam vseeno vzbujajo določeno mero zaupanja v novo metodo .
Tabela 3 : primerjava ocen osnovnega sistema , sistema z lemami ter testne množice prevodov ; primerjava je bila izvedena z obema metodama dodane so popravljene vrednosti z popravkom glede na rezultate ocen testnih prevodov Tabela 4 : del rezultatov ocenjevanja testnih primerov z metodo SSER Verjetno bi bile prevedbe sistema , zgrajenega z osnovnim modelom ter nadgrajenega le z izbranimi vrstami lem , boljše .
Zaključek in nadaljnje delo Poglavje predstavlja avtorjeva razmišljanja ob rezultatih .
Že osnovni algoritmi omogočajo dobre prevode .
Prenos orodij na slovensko-angleški prevajalnik je bil uspešen , algoritmi se obnašajo v okviru pričakovanj .
Rezultati pa vseeno kažejo na možnosti izboljšave tudi v tej smeri , saj so bile mnoge prevedbe z novim sistemom izboljšane .
Prva možnost za izbiro je lematiziranje samo odprtih besednih vrst ( oznake iz IJS-ELAN Vm / N / A ) : glavni glagoli , vsi samostalniki ter pridevniki .
Ostale besedne vrste , predvsem veznike ter zaimke ( oznake iz IJS-ELAN Vc / P ) pa izpustimo .
Poleg uporabe lem za dograditev sistema se poraja kot najočitnejša možnost uporabe dvojezičnega enosmernega slovarja ( slovensko – angleški slovar ) .
Prevajanje naravnih jezikov upoštevajoč drevesa izpeljave Povzetek Članek predstavlja metodo , ki dopolnjuje osnovno idejo statističnega strojnega prevajanja z uvajanjem formalnih slovnic izvornega in ciljnega jezika in prevajanjem na ravni dreves izpeljave formalnih slovnic .
Povedi so predstavljene z drevesi izpeljave formalne slovnice .
Jezikovni par korpusa je slovenščina in angleščina .
Uvod Članek predstavlja nov pristop k statističnem strojnem prevajanju ( Statistical Machine Translation - SMT ) naravnih jezikov .
Metoda , predstavljena v nadaljevanju , pri prevajanju , poleg samih besed , upošteva višje povedne značilke , kot na primer besedno vrsto , ki ji določena beseda pripada .
2. poglavje predstavlja osnovne pojme statističnega strojnega prevajanja .
3. poglavje predstavlja korpus IJS-ELAN , osnovo za empiričnem preverjanje predstavljene metode .
4. poglavje predstavlja samo metodo in motive , ki so privedli k snovanju predstavljene metode .
5. poglavje predstavlja metodo za samodejno učenje pravil prevajanja besednih vrst v povedih na osnovi verjetnosti .
Strojno prevajanje na splošnih domenah trenutno še ne dosega ravni drugih računalniških področij .
Poleg osnovnih jezikovnih pravil kot so sintaksa , gramatika , sinonimi besed oziroma fraz v obeh jezikih , mora sistem poznati še semantiko oziroma pomen prevajanih sporočil .
Besedila morajo biti natančni prevodi iz izvornega jezika v ciljni jezik .
V zadnjih letih se je pojavilo že kar nekaj uspešnih projektov , ki uporabljajo statistično obdelavo podatkov za samodejno sestavljanje prevajalske baze iz vzporednih , poravnanih , dvojezičnih besedil .
Tehnika statistične obdelave besedil je primerna za velike količine besedil , ki edina ponujajo dovolj informacij o nekem jeziku oziroma dovolj informacij za prevod med dvema jezikoma .
Statistični pristop je bil na področju MT le redko uporabljan , razloge pa gre iskati v precej zahtevni matematični podlagi , ki je potrebna za uporabo in razvoj statističnih MT metod .
V zadnjih letih pa se ravno ta veja najhitreje razvija in dosega že kar zavidljive rezultate .
Korpus IJS ELAN in MSD oznake V zadnjem času se je pojavilo kar nekaj kakovostnih vzporednih dvojezičnih označenih korpusov , ki vključujejo slovenski jezik [ 1 ] , [ 2 ] .
Zbrani in uniformno kodirani teksti ( korpusi ) že sami zase predstavljajo uporabno orodje .
Z dodajanjem lingvističnih označb ( primer MSD : označujejo vsako besedo z oznakami jezikovne teorije kot so besedna vrsta , sklon , število , spol , …)
Učljivi označevalci besednih oznak [ 3 ] so v zadnjem času napredovali do stopnje , ko jih lahko označimo za zrele in primerne za uporabo .
Metoda prevajanja na osnovi dreves izpeljave Do sedaj so se vse metode SMT osredotočale na besede ter besedne zveze ter s pomočjo velikih količin podatkov poskušale poiskati določena pravila prevajanja med besedami ter besednimi zvezami izvornega ter ciljnega jezika .
Označevanje elektronskih korpusov je doseglo že visoko raven , označbe niso koristne samo za lajšanje iskanja pravil v velikih količinah besedil .
Iskanje višjih besednih in stavčnih značilk , kot so iskanje besedne vrste , iskanje ostalih prilastkov posameznih besed , iskanje vloge besed v stavkih , je doseglo visoko raven , rezultate lahko s pridom uporabimo .
Pri opisu primera uporabe metode se bomo zaradi večje preglednosti omejili na uporabo informacije o besedni vrsti za posamezno besedo .
Prevajalni sistemi privzemajo , da se vloga besednih vrst pri prevodu ohranja , besedne vrste naj bi bile tako v izvornem , kot v ciljnem jeziku enakovredne , spreminjala naj bi se samo vsebina .
Ta trditev pogosto velja za sorodne jezike ter za besedila s togim stilom pisanja .
Pri tujih si jezikih je ta osnova zgrešena , pogosto se pri prevajanju zamenja vrstni red besed , porajajo se nove besede , določene izginjajo .
Seveda bi lahko iskanje enostavno razširili tudi na ostale jezikovne ravnine ter dodatne besedne prilastke .
Takšno početje bi bilo zamudno , rezultati pa vprašljivi , pravila želimo določiti samodejno , s čim manjšo mero človeškega vmešavanja .
Pravila za prevajanje meta-besed ( dreves izpeljave ) v določenem kontekstu zgradimo iz dovolj velikih količin primerov s pomočjo zakonov matematične verjetnosti .
Pri prevajanju izberemo pravilo , ki ustreza simbolu in kontekstu v izvorni povedi ter po pravilu prevedemo v simbol ciljnega jezika .
Oglejmo si metodo na primeru : 1 ) Izvorno poved prevedemo na morfosintaktične opise , dobili smo besedo " FbesedaI " izvornega jezika na nivoju formalne slovnice besednih vrst .
Izberemo drevo izpeljave FdrevoI , ki z izbrano metodo obhoda enolično določa besedo FbesedaI .
Slika1 : Primer drevesa izpeljav v izvornem in ciljnem jeziku 3 ) Poiščemo najverjetnejše drevo izpeljave v ciljnem jeziku .
Formalna slovnica : S pomočjo dvojezičnega poravnanega korpusa sestavimo dve formalni slovnici ; formalno slovnico izvornega in formalno slovnico ciljnega jezika .
Formalni opis slovnice izvornega jezika je enak kot pri ciljnem jeziku , različna je le vsebina množic .
končna množica črk abecede ( terminali ) , v našem primeru besede izvornega ali ciljnega jezika • Množici .
Drevo izpeljave v izvorni formalni slovnici prevedemo v najverjetnejše drevo izpeljave v ciljni formalni slovnici .
To drevo predstavlja kontekst , ki omogoča usmerjeno preiskovanje najustreznejših besed ciljnega jezika .
Drevo izpeljave prevedemo s pomočjo verjetnostnih modelov , izbor in lastnosti modelov so predstavljeni v naslednjem poglavju .
Posamezne simbole meta-besede ciljne formalne slovnice zamenjujemo z najustreznejšimi besedami ciljnega jezika .
Predstavitev metode na primeru Iz izbranega korpusa ( v našem primeru IJS-ELAN [ 1 ] ) izluščimo zapise za besedne vrste za vse besede združene po povedih .
Korpus je poravnan po povedih , tako predelan korpus razpade na meta-besede v prostoru opisov besednih vrst , glej primeri , poglavje 6.
Tako pripravljen korpus je osnova za učenje pravil prevajanja .
V ek si lj e 1 ¸ Q , kjer je Q množica vseh besed ciljnega jezika .
Slika2 : Primer prevoda povedi na osnovi prevoda drevesa izpeljav v izvornem in ciljnem jeziku • Vsako poved izrazimo z drevesom izpeljave , izbran zapis drevesa izpeljave nam nedvoumno določa poved .
Tako naučen sistem je pripravljen za prevajanje na ravni zapisov besednih oznak ( povedi prevajamo kot simbole naše formalne slovnice ) .
Pri prevajanju najprej predelamo vhodno poved , besede nadomestimo z ustreznimi oznakami za besedne vrste , dobimo vhodno meta-besedo formalne slovnice izvornega jezika , iz besede trivialno izpeljemo drevo izpeljave višine 1 za to besedo .
Posamezne simbole ciljnih produkcij prevajane povedi pretvorimo v besede ciljnega jezika : Poravnane besede vhodne povedi s pomočjo leksikona ( glej poglavje 3 ) ter z upoštevanjem konteksta ciljnega drevesa izpeljave pretvorimo v besede ciljnega jezika .
Empirično preverjanje metode temelji na korpusu IJSELAN [ 1 ] .
Poravnana primera v obeh jezikih Slika4 : Drevesi izpeljave za primera s slike 3 7.
Zaključek Predstavljena metoda vnaša nov način razmišljanja v statistično strojno prevajanje .
Uporabljena bo na sorodnih jezikih , togih jezikih ter končno na povsem splošnih besedilih dveh tujih si jezikov .
Predstavi enojezične korpuse ter natančneje opiše večjezične označene korpuse , ki mnoge navdušujejo z uporabnostjo , izdelovalce pa odvračajo s težavami pri zbiranju gradiv in poravnavi zbranih gradiv .
Nadaljevanje članka predstavi primere uporabe korpusov kot so preiskovanje besedil , iskanje pravil v korpusih , ki jih z določeno mero zaupanja preslikamo na celoten jezik ter uporabo statistike za napovedovanje pravil in prevajanje .
Nadaljuje razdelek , ki predstavlja osnovne pojme strojnega prevajanja ter osnovne motivacije za razvoj te panoge .
Strojno prevajanje na splošnih domenah trenutno še ne dosega ravni drugih računalniških področij .
Poleg osnovnih jezikovnih pravil kot so sintaksa , gramatika , sinonimi besed oziroma fraz v obeh jezikih , mora sistem poznati še semantiko oziroma pomen prevajanih sporočil .
Zaključni razdelek predstavlja vrednotenje prevodov , predvsem metode za samodejno vrednotenje prevodov sistemov strojnega prevajanja ter namigne na težave pri uporabi teh metod .
Korpuse v elektronski obliki zapisujemo po določenih pravilih , ki omogočajo enostavno uporabo večjega števila uporabnikov , dopolnjevanje in spreminjanje .
Ponavadi besedila korpusa označimo z oznakami , ki olajšajo iskanje ( vir , slog , avtor , …)
ter oznakami , ki opisujejo določene lastnosti delov besedil , ponavadi besed ( morfosintaktični opisi , ...).
Ciljni ter izvorni jezik se lahko pri uporabi tudi zamenjata , saj so tudi povedi izvornega jezika točni prevodi ciljnega .
Gradnja je lahko popolnoma » ročna « : množico povedi prevedejo prevajalci in združijo v korpus .
Vzporedne korpuse uporabljamo kot osnovo za učenje prevajanja .
ter oznakami , ki opisujejo določene lastnosti delov besedil , ponavadi besed ( morfosintaktični opisi , ...).
Slednja metoda ni priporočljiva , uporabnost takšnega korpusa bo veliko manjša .
V zadnjem času se uporabljajo predvsem metode , ki temeljijo na jeziku XML , ki omogoča enostavno testiranje osnovne pravilnosti dokumentov in kar najlažjo prenosljivost korpusa .
Morfosintaktični opisi ( MSD ) Učljivi označevalci besednih oznak ( Džeroski et al. , 2000 ) so v zadnjem času napredovali do stopnje , ko jih lahko označimo za zrele in primerne za uporabo .
Rezultati so na mnogih primerih pokazali , da natančnost samodejnega označevanja MSD oznak na korpusih presega 95 in več odstotkov .
Tako dobre rezultate lahko uporabimo kot koristen pripomoček za vodilo po korpusu , za iskanje posebnosti in pravil v jeziku in tudi kot dodaten pripomoček za natančnejše prevajanje besedil .
MSD ( MorphoSyntactical Descriptions ) označujejo vsako besedo z oznakami jezikovne teorije kot so besedna vrsta , sklon , število , spol , …
Slika Slika 1 : košček korpusa v formatu TEI P4 Primeri slovenskih korpusov IJS-ELAN Razdelek opisuje označen vzporedni slovensko angleški korpus razvit v okviru projekta EUELAN .
NOVA BESEDA Še en referenčni enojezični korpus slovenskega jezika .
Zbiranje gradiv Strojno prevajanje naravnih jezikov Razdelek predstavlja osnovne pojme strojnega prevajanja ter osnovne motivacije za razvoj te panoge .
Strojno prevajanje na splošnih domenah trenutno še ne dosega ravni drugih računalniških področij .
Poleg osnovnih jezikovnih pravil kot so sintaksa , gramatika , sinonimi besed oziroma fraz v obeh jezikih , mora sistem poznati še semantiko oziroma pomen prevajanih sporočil .
Trenutno najuspešnejša pot je uporaba množice strokovnjakov , ki opišejo vse zakonitosti in izjeme obeh jezikov , ter predstavijo vse zakonitosti in izjeme samega prevajanja med obema jezikoma .
Drugi način je , da prepustimo računalniku , da se sam nauči sintaktičnih in semantičnih pravil , tako da pregleda velike količine besedil v izvornem in ciljnem jeziku .
Besedila morajo biti natančni prevodi iz izvornega jezika v ciljni jezik .
V zadnjih letih se je pojavilo že kar nekaj uspešnih projektov , ki uporabljajo statistično obdelavo podatkov za samodejno sestavljanje prevajalske baze iz vzporednih , poravnanih , dvojezičnih besedil .
Tehnika statistične obdelave besedil je primerna za velike količine besedil , ki edina ponujajo dovolj informacij o nekem jeziku oziroma dovolj informacij za prevod med dvema jezikoma .
Statistični pristop je bil na področju MT le redko uporabljan , razloge pa gre iskati v precej zahtevni matematični podlagi , ki je potrebna za uporabo in razvoj statističnih MT metod .
Statistično strojno prevajanje do sedaj še ni doseglo rezultatov , ki bi omogočali izdelavo komercialnega prevajalnega sistema oziroma izdelavo uporabnega prevajalnega sistema .
Temeljil je na samodejni statistični analizi dvojezičnih besedil ( rezultati in zaključki so opisani v ( Brown et al. , 1993 ) .
Oglejmo si primer prevoda besedila iz nekega jezika , vzemimo slovenski jezik , v besedilo v angleškem jeziku .
Za poved f v slovenskem jeziku si zamislimo , da je bila zgrajena iz pripadajoče povedi e v angleškem jeziku .
Angleška poved je prepotovala šumni komunikacijski kanal z zanimivo lastnostjo , vsako angleško poved prevede v slovensko .
Osnovna ideja sistema Candide je , da lahko eksperimentalno določimo lastnosti našega » kanala « , ki jih lahko zapišemo s pomočjo matematičnih pravil .
Namenjen je predvsem preizkušanju prevajalnih metod in igranju s prevodi , sistem ni primeren za resno uprabo .
Pojem pravila je precej široko postavljen in skriva v sebi v tako enostavne zamenjave besed ( lexicon translation ) , povezave med frazami v izvornem in ciljnem jeziku in podobnimi enostavnimi preslikavami , kot tudi bolj komplicirana pravila , ki omogočajo prevajanje slovničnih zakonitosti .
Pojem pravil je postavljen dovolj na široko , tako bi lahko opisali vse možne preslikave besedil med izbranima jezikoma , lahko bi zajeli pravilnosti kot tudi izjeme .
Prevajalni sistemi zasnovani na osnovi pravil trenutno dosegajo najboljše rezultate , snovanje in postavljanje takšnih sistemov pa je dolgotrajno in drago opravilo .
Vsak sistem ima svojo obliko .
Skupina jezikoslovcev in podpornih sodelavcev pripravi ogromno količino pravil in veliko zbirko izjem , ki omogočajo prevajanje izvornih besedil v ciljna .
Pravila so lahko eksplicitno določena ali pa podana v obliki predlog , kjer izvorni povedi poiščemo najustreznejšo predlogo in s pomočjo parametrov poiščemo najustreznejšo ciljno poved .
» Strojna « , samodejna izdelava pravil V zadnjem času so se pojavile metode , ki dosegajo uporabne rezultate pri samodejnem iskanju pravil pri prevajanju med dvema jezikoma .
Te metode so osnovane na statističnih metodah in na metodah učenja na primerih .
Metode se ponavadi uporabljajo kot pripomoček k » ročnemu « iskanju pravil .
Predloga predstavlja neko natančno določeno poved kot primer služi slika 3 : Kupčija se je spridila – The deal has gone bad ; Slika 3 : košček korpusa v formatu TEI P4 Seveda so pravila napisana v obliki , ki omogoča enoličen zapis ter enostavno in hitro ali pa opisuje precej bolj ohlapno večjo množico povedi , ki jih z določenimi pravili prevajamo ( Slika 4 ) .
Primer je prikazan na sliki 5.
PRIDEVNIK drevo je v gozdu – PRIDEVNIŠKA FRAZA tree is in the woods Slika 4 : košček korpusa v formatu TEI P4 Zeleno drevo je v gozdu – A green tree is in the woods Slika 5 : košček korpusa v formatu TEI P4 Prevajanje na osnovi predlog uporablja implicitno zapisana pravila v samih predlogah .
Hibridni sistemi Takšni sistemi omogočajo izkoriščanje prednosti vseh vrst prej opisanih prevajalnih sistemov .
Določene slabosti osnovnih metod lahko izboljšamo s pravilnim umeščanjem drugim metod , če pri tem kakovost ostalih prevodov ostane enaka .
Povzetek Članek predstavlja pregled izbranih področij korpusnega jezikoslovja , ki so med seboj tesno povezana in ponuja osnovo za gradnjo še trdnejšega sodelovanja raziskovalcev različnih strok , predvsem povezovanja med jezikoslovci ter predstavniki računalništva in matematike .
Predstavi enojezične korpuse ter natančneje opiše večjezične označene korpuse , ki mnoge navdušujejo z uporabnostjo , izdelovalce pa odvračajo s težavami pri zbiranju gradiv in poravnavi zbranih gradiv .
Posnetkom so vedno priloženi še podatki , ki na različne načine opisujejo posneti govor .
Članek opisuje osnovne gradnike govornih zbirk ter postopek zasnove , snemanja , segmentacije , označevanja in analize govornih zbirk .
V sklepnem delu se nahaja pregled govornih zbirk za slovenski jezik .
1 Uvod Govorne tehnologije , predvsem to velja za sintezo in prepoznavanje govora , nezadržno prodirajo v naše življenje .
Razvoj in raziskave s področja govornih tehnologij za slovenski jezik se izvajajo na Fakulteti za elektrotehniko Univerze v Ljubljani ( Luks ) , na Fakulteti za elektrotehniko , računalništvo in informatiko na Univerzi v Mariboru ( FERI ) , na Fakulteti za računalništvo in informatiko Univerze v Ljubljani ( FRI ) , na Inštitutu Jožef Stefan ( IJS ) , na Naravnoslovno tehniški fakulteti Univerze v Ljubljani ter v podjetjih Masterpoint d. o. o. ( Masterpoint ) , Hermes Softlab d. d. ( HSL ) in Alpineon razvoj in raziskave d. o. o. ( Alpineon ) .
Razvoj govornih tehnologij , predvsem sinteze in prepoznavanja govora , ni pogojen le s tehnologijo izgovora , temveč tudi z izvajanjem osnovnih raziskav govora in jezika .
Vse več govornih zbirk in rezultatov jezikovnih študij je dostopnih tudi v našem prostoru .
Posnetkom so vedno priloženi še podatki , ki na različne načine opisujejo posneti govor .
Zasnovo govorne zbirke lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v nadaljevanju članka .
Prvi korak predstavlja izbira besedila , potrebnega za snemanje govorne zbirke , oz. izbira govorne situacije v primeru , ko gre za snemanje spontanega govora .
Sledi zadnji korak , ki ga sestavljajo segmentacija , označevanje in analiza govornega gradiva .
Članek sklenemo s pregledom govornih zbirk za slovenski jezik , zbranih v laboratorijih , ki na našem prostoru delujejo na področju govornih tehnologij .
Govorne zbirke navadno vsebujejo samo nekatere od naštetih podatkov .
Govorni posnetki pa so vedno opremljeni vsaj z nekaterimi dodatnimi podatki .
Kateri od naštetih podatkov so dejansko vključeni v zbirko , je odvisno od namena uporabe zbirke ( Dobrišek 2001 ) .
Tako govorne posnetke , ki niso računalniško berljivi ali niso opremljeni s primernimi dodatnimi podatki , ne štejemo za prave govorne zbirke .
Te zbirke praviloma ne vključujejo govornih posnetkov , kvečjemu ortografsko prepisana govorjena besedila .
Največji tovrstni zbirki za slovenski jezik sta FIDA in Nova beseda .
V zadnjem času se pogosto analizirajo tudi posnetki biomedicinskih signalov , ki se pojavljajo v govorilih in tudi v človeških možganih .
Večina raziskav na področju govornih tehnologij se še vedno nanaša predvsem na obdelavo posnetkov govornih zvočnih signalov , pridobljenih s pomočjo mikrofona ( Dobrišek 2001 ) .
Vsekakor imajo tudi preostali omenjeni govorni posnetki poseben pomen , saj njihova analiza omogoča bistveno širši vpogled v delovanje človeških govoril in s tem tudi globlje razumevanje človeškega govora .
4 Opisi govornih posnetkov Govorna zbirka vsebuje tudi opise različnih dejavnikov , ki se nanašajo na govorne posnetke .
Govorci Najbolj preproste govorne zbirke so zbirke z nekaj deset govorci ( Gibbon 1997 ) .
Na primer : gradnjo kakovostnih in od govorcev neodvisnih sistemov za prepoznavanje govora omogočajo govorne zbirke z nekaj sto govorci .
Pogosto je v takšne zbirke vključen en sam izkušen govorec , ki predstavlja učni primer in primerjavo bodočemu sintetizatorju govora ( Gros 2000 ) .
Dejavniki govorcev Pri izbiri govorcev moramo upoštevati nekatere značilnosti , ki so povezane z njihovim govorom .
Prehodne značilnosti so morebitne psihološke in fiziološke motnje ( npr. počutje , bolezen , psihično stanje ) .
Govorni dejavniki Med govorne dejavnike uvrščamo prozodijske značilnosti govora , ki se nanašajo na trenutno razpoloženje govorca ter njegov pristop k tvorjenju govornih posnetkov ( Dobrišek 2001 ) .
Govorni signal vsebuje več informacij , kot jih je v besedilu ( npr. čustva , odnos govorca do teme in podobno ) .
Preučuje zvočno podobo jezika od glasu , naglasa v besedi do celotnega besedila .
Govorimo lahko o fonetiki glasov , prozodike , zlogov , morfemov , besednih zvez , stavkov , povedi in besedila .
Oznakovni del govorne zbirke , predvsem njen grafemski prepis , je pogosto zapisan po priporočilih TEI P3 ( Text Encoding Initiative ) .
Priporočila TEI P3 določajo konkretne oznake ISO standarda SGML ( Standard Generalized Markup Language ) in strukturo oznak SGML za raznovrstna besedila ( Erjavec 1998 ) .
Fonetični zapis govora uporablja osnovne enote , ki so povzete iz glasoslovja .
Tak simbolni zapis govora vsebuje več informacije od grafemskega .
Različna izbira anotacijskih enot predstavlja tudi različne možnosti zapisa ali prepisa govorjenega jezika .
Primeri različnih zapisov za eno poved so zbrani v preglednici 1.
Fonetični prepisi besed so zapisani s simboli slovenske MRPA abecede .
Govorne posnetke zato pogosto označujemo tako , da jih razčlenimo na zaporedje odsekov , ki predstavljajo fone fonemov ali alofonov .
Natančnost je odvisna od števila upoštevanih glasovnih različic oziroma alofonov ter morebitnega označevanja akustičnih dogodkov , manjših od samih fonov .
Govorno zbirko opremimo še z navodili za uporabo .
To so podatki o strukturi zbirke , datotečnem sistemu in formatih računalniških zapisov .
Za tehniško modeliranje govora je pomembno navesti še podatek o tem , kateri del zbirke je namenjen učnemu postopku , s katerim določamo parametre modelov akustičnih govornih enot , in kateri del zbirke je namenjen preizkušanju in vrednotenju teh modelov .
5 Postopek pridobivanja govorne zbirke Postopek pridobivanja govorne zbirke lahko logično razstavimo v tri zaporedne korake , ki jih podrobneje predstavljamo v tem poglavju .
Prvi korak predstavlja izbira besedila , potrebnega za snemanje govorne zbirke , oz. izbira govorne situacije v primeru , ko gre za snemanje spontanega govora .
5.1 Načrtovanje vsebine zbirke Pri načrtovanju govornih zbirk velja , da naj bodo čim bolj obsežne .
@ al si neomejeno velikih količin podatkov v zbirki ne moremo privoščiti .
Za govorjeni slovenski jezik nekaj tovrstnega znanja že obstaja , vendar menimo , da bo to znanje dovolj dobro šele , ko bodo izvedene obsežnejše statistične analize slovenskega govorjenega jezika .
5.2 Pridobivanje govornih posnetkov Danes sta v veljavi dva načina pridobivanja govornih posnetkov .
Izbira besedila je ključnega pomena in je odvisna od namena zbirke .
Tudi za pridobivanje govornih posnetkov moramo izvesti načrtovanje in pripravo snemalnega okolja .
Kakšne snemalne naprave in snemalno okolje izberemo , je odvisno od namena govorne zbirke .
Primernost snemalnega okolja določa namen zbirke , vendar pogosto vseh zahtev zaradi pomanjkanja sredstev ne moremo povsem izpolniti .
Med snemanjem govora je priporočljivo preverjati , ali govorec ustrezno izgovarja predloženo besedilo .
Posnetke govora shranjujemo v digitalni obliki na trajne računalniške pomnilniške medije .
Za pridobivanje govornih posnetkov uporabljamo posebne programske uporabniške vmesnike , ki besedilo , ki ga mora izgovoriti govorec , izpišejo na zaslon računalnika ter preverjajo skladnost posnetega govora s predloženim besedilom ( Dobrišek 2001 ) .
Način snemanja govorne zbirke je odvisen od njenega namena .
Če želimo proučevati lastnosti spontanega pogovora oz. razliko med govorjenimi in pisanimi besedili , snemanje opravimo v drugačnih razmerah kot denimo snemanje govorne zbirke za difonski sintetizator govora .
Po drugi strani pa želimo pri snemanju pogovorov oz. prostega govora zajeti čimveč prvin , po katerih se tak govor razlikuje od branega besedila , kot so značilni prekrivajoči se govor , ponavljanje , premori , zapolnjevalci vrzeli , samokorekture in napačni starti ( Kranjc 1998 ; Stabej 2000 ) .
5.3 Segmentacija in označevanje govorne zbirke Posneti govorni signal predstavlja le en del govorne zbirke .
Za raziskave na področju govornih tehnologij moramo zbirko navadno opremiti vsaj z oznakami na grafemskem in fonetičnem nivoju .
Rezultat samodejnega siljenega prileganja so , med drugim , tudi podatki o časovnih odsekih , ki pripadajo posameznim glasovom .
Pogosto sprva s postopkom siljenega prileganja z oznakami opremimo le manjši del govorne zbirke .
Rezultat postopka nato ročno preverimo in popravimo vse napačno postavljene oznake mej med posameznimi fonemi ( Mihelič 2002 ) .
Tako se postopek za samodejno segmentacijo in označevanje postopoma priuči načinu govorjenja govorca ter generira vse manj napak .
Slika 1 : Orodje Sigmark omogoča opremljanje govornega signala z oznakami o mejah med govornimi segmenti in s simboli za označitve govornih segmentov .
Prva skupina oznak predstavlja potek osnovne frekvence signala , druga skupina oznak so ročno popravljeni položaji mej med glasovi , tretja skupina pa prikazuje samodejno določene položaje mej med glasovi .
Iz posnetkov govornih signalov je možno z metodami obdelave signalov pridobiti standardne akustične značilke govora , kot so potek osnovne frekvence , kratkočasovna glasnost govora ali prvih nekaj formantnih frekvenc govornega signala .
Orodje Sigmark omogoča sočasni prikaz časovne in kratkočasovne frekvenčne karakteristike signala , kar močno olajša preverjanje in popravljanje oznak ter mej med posameznimi govornimi segmenti .
Največja prednost orodja Sigmark je v tem , da omogoča samodejno in konsistentno postavljanje prozodijskih oznak za osnovno periodo .
Slika 2 : Sočasen prikaz časovnega poteka signala in kratkočasovne frekvenčne karakteristike .
6 Pregled govornih zbirk za slovenski jezik V tem razdelku podajamo pregled računalniško berljivih in označenih govornih zbirk za slovenski jezik .
Vse omenjene govorne zbirke , razen posebnih namenskih govornih zbirk , večinoma upoštevajo osnovne zahteve po fonetični uravnoteženosti besedil in narečni pokritosti slovenskih narečnih skupin z izbranimi govorci .
Na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru so posneli in označili vrsto govornih zbirk , ki so namenjene predvsem razvoju prepoznavanja in sinteze govora : govorna zbirka SNABI ( Kačič 2002 ) , govorna zbirka SpeechDat II ( Kačič 2002 ) , govorna zbirka PoliDat ( Kačič 2002 ) in zbirka posnetkov emocionalnega govora ( Hozjan 2002 ) .
Na Fakulteti za elektrotehniko Univerze v Ljubljani so ustvarili naslednje govorne zbirke : govorna zbirka Mobiluz ( Dobrišek 1998 , Gros 2000 , Mihelič 2003 ) , govorna zbirka K211D ( Dobrišek 2001 ) , govorni zbirki radijskih in televizijskih vremenskih napovedi VNTV in VNRAD ( @ ibert 2000 ) ter štiri specializirane govorne zbirke : difonska govorna zbirka ( Gros 2000 ) , govorna zbirka VINDAT ( [ krlj 2001 ) , del zbirke Gopolis , posnet z različnimi hitrostmi govorjenja ( Gros 2000 ) , ter govorna zbirka za istovetenje govorcev ( Kranjc 2001 ) .
Na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru so zbrali govorno zbirke [ tevke ( Rozman 2000 ) .
Za potrebe sinteze in prepoznavanja govora so bile ob že omenjenih posnete še naslednje govorne zbirke : difonska govorna zbirka Inštituta Jožef Stefan ( [ ef 1998 ) , difonska in polifonska govorna zbirka podjetja Masterpoint ( Mihelič 2002 ) in učna baza izgovarjav Hermes Softlab ( [ ket 2002 ) .
7 Sklepne misli Pri raziskovalnem delu na področju tehnologij govorjenega jezika se neizbežno srečamo z zahtevo po dostopu do obsežnejših govornih zbirk .
V primerjavi z večjimi svetovnimi jeziki je za slovenski govorjeni jezik govornih zbirk razmeroma malo , pa še te so pogosto nedostopne preostalim razvojnim in raziskovalnim skupinam .
Zato avtorji članka pozivamo razvojno raziskovalne skupine , ki v slovenskem prostoru delujejo na področju govornih tehnologij , da se pri zbiranju govornih zbirk medsebojno povezujejo in da omogočijo dostop do lastnih govornih zbirk tudi svojim kolegom iz drugih skupin , bodisi pod razumnimi finančnimi pogoji ali pa celo brezplačno v primerih , ko se pridobljeno znanje uporablja izključno za nekomercialne raziskovalne namene .
Prepisovalna pravila in končni avtomati Računalniki vse bolj postajajo tudi orodje za procesiranje jezikovnih podatkov , od uporabe računalnika kot izboljšanega pisalnega stroja pa vse do računalniškega prevajanja besedil .
Programi za računalniško obdelavo naravnega jezika se v različni meri ukvarjajo s raznimi plastmi jezikovne analize .
morfološka analiza , ki vhodno besedo iz obdelovanega teksta razstavi v njene posamezne dele - morfeme ( npr. " obkrožiti " v " ob-kroži-ti " ) in tej besedi pripiše njene morfosintaktične lastnosti ( npr. glagol , nedoločnik , itd. ) .
Tekstualna ali površinska oblika besed pa je tista , ki se pojavi v pisanem besedilu .
Pravila za prepisovanje imajo naslednjo obliko : x ~ > y / a _ b ( 1 ) X naj se prepiše v y , če je v kontekstu a ^ b , torej : axb - > ayb ( 1.1 ) Generativni formalizem deluje samo v eni smeri ( leksikalna ~> tekstualna beseda ) , razen tega pa je računsko zahteven , saj imajo taka prepisovalna pravila v splošnem moč Turingovih strojev .
Martin Kay in Ronald Kaplan ( Kay82 ) sta ugotovila , da je prepisovalna pravila možno realizirati s končnimi avtomati , pod pogojem , da se pravila ne aplicirajo rekurzivno .
Kaskade končnih avtomatov kot take ni možno implementirati , vendar pa obstaja algoritem , ki kaskado vseh avtomatov združi v enega ( si .
V dvo-nivojskem modelu sla torej samo dve reprezentaciji : leksikalna ( globinska ) reprezentacija in tekstualna ( površinska ) reprezentacija .
Pravila so realizirana kot transduktorji , ki so identični končnim avtomatom , le da kot vhod jemljejo pare simbolov ( v našem primeru par " leksikalni niz : tekstualni niz " ) .
X2 6 / 2 .
Morfološki analizator oz. sintetizator , ki uporablja dvo-nivojska pravila , torej ugotavlja ali je leksikalni niz ( beseda , kot je zapisana v slovarju ) v pravilni korespondenci s tekstualnim ali površinskim nizom .
Če programu podamo nedeHniran tekstualni niz , bo kot " stranski učinek ' niz slntetiziran ; iz leksikalne predstavitve bo nastala povrSinska .
Za analizo potrebujemo poleg samih pravil Se slovar legalnih leksikalnih besed , zapisan v primerni obliki .
Primer dvo-nivojske gramatike Kot primer podajmo majhen a popolen primer dvo-nivojske gramatike povzete po ( Dar87 ) .
Gramatika , oz. datoteka s pravili sestoji iz štirih delov z naslovi Ta gramatika vsebuje eno samo pravilo z imenom " Samoglas-sklad " .
Pravilo zahteva realizacijo leksikalnega A , O in U kot a , o in u po pojavitvi površinskega a , o ali u , pod pogojem , da je katerikoli vmesni površinski samoglasnik bodisi zadnji samoglasnik ali pa i oz. e. Na osnovi tega primera si bolj natančno poglejmo format dvo-nivojskih gramatik .
Ti pari so zapisani v obliki " xy " , kjer je " x " element leksikalne abecede , " y " pa element površinske abecede , dvopičje pa se uporablja kot ločilo .
Del gramatike z množicami vsebuje ( če seveda obstaja ) deklaracije , ki povezujejo imena s seznami znakov abecede .
Množice imajo enako vlogo kot distinktivne oznake v drugih fonoloSkih formalizmih .
Ime množice lahko uporabimo bodisi na leksikalni ali pa na površinski strani para , npr. " Samoglasnik:0 " .
Interpretacija imen množic v takih parih je odvisna od tega , na kateri strani para stojijo .
definicije , ki omogočajo Se en način za izražanje posploSitev .
Zadnji razdelek gramatike so pravila .
Dvo-nivojsko pravilo sestoji iz imena v narekovajih , čemur sledi korespondenca , operator pravila , poljubno število okolij , in ( če se v pravilu uporabljajo spremenljivke ) prireditvenega dela .
Okolje je sestavljeno iz levega in desnega konteksta ( oba sta lahko prazna ) , ki ju loči " ".
To pravilo ne zahteva , da so med-samoglasniški " k " - ji realizirani kot " g " ; pravilo to samo dopušča in omejuje takšno realizacijo na to specifično okolje .
Pravilo ima lahko tudi več okolij : ' Ozvočenje 5 " k:g < = > Samoglasnik ; Samoglasnik ; Pravilo 5 zahteva realizacijo " k " kot " g " pred in po samoglasniku , in to samo v teh dveh okoljih .
To pravilo je kompatibilno s pravilom 1 - pravilo 1 celo naredi redundantno - ne bi pa pravilno delovalo skupaj s pravili 2 , 3 in 4.
Kot zadnji primer zvrsti pravil , ki jih lahko izrazimo v dvo-nivojskem formalizmu , si poglejmo še pravilo , ki realizira " k " kot " g " med dvema enakima samoglasnikoma .
V besedi obstaja nekaj točk , za katere nam intuicija pravi , da je v njih mogoče pri izgovoru besede napraviti ‘ premor .
Besedica je ni del nobenega kosa .
Ker vsebujejo le eno polnopomensko besedo , jim lahko določimo " besedno vrsto : " poznamo ( vsaj ) samostalniške , glagolske in pridevniške kose .
Za opis strukture kosov zadostuje preprosta context-free slovnica .
Sopojavljanje kosov ni določeno le z njihovimi skla - denjskimi kategorijami , temveč je občutljivo tudi na to , natančno katere besede so njihova pomenska jedra ; vrstni red , v katerem se kosi pojavljajo , je mnogo fleksibilnejši od vrstnega reda besed znotraj kosa .
Korensko vozlišče kosa z jedrom h je najvišje vozlišče v skladenjskem drevesu stavka , katerega pomensko jedro je h. ( Intu - itivno gledano je pomensko jedro kosa najbolj prominentna beseda v besedni zvezi .
) Skladenjsko drevo kosa je potem povezan podgraf skladenjskega drevesa celotnega stavka z zgo - raj definiranim korenskim vozliščem , ki ne vsebuje korenskih vozlišč ostalih kosov , izključena pa so tudi vozlišča , ki bi po linearizaciji stavka povzročila pretrganost kosa ( takšna vozlišča imenujemo sirote ) .
1.1 Samostalniški kosi v slovenščini Izdelani program je namenjen razpoznavanju samostalniških kosov v ustrezno označenem slovenskem besedilu , zato bomo po uvodni splošni definiciji kosa podrobneje raziskali zgradbo samostalniških kosov slovenskega jezika .
Jedro samostalniškega kosa je seveda samostalnik , zato za izhodiščno točko vzemimo razdelek o samostalniški besedni zvezi iz Slovenske slovnice [ Toporišič , 2000 , str. 558 – 562 ] .
" Pridevniške besede levega prilastka imajo táko zaporedje : najprej so na vrsti količinske ( trije , pet — še pred njimi so vrstilni štev - niki ( prvi trije , prvih pet ) , če so zamenljivi z izrazi kot vsi ) , nato svojilni ( vaš , bratov ) , na koncu pa še splošno lastnostni ( kako - vostni ali merni ( dober , velik ) pred vrstnimi ( mali ) ; konkretno : vsi / prvi trije vaši dobri mali / nemški avtomobili .
; v slovenščini je determinator dostikrat fonetično neizražen ) , samostalniki pa so njihova dopolnila.4 To pomeni , da pridevniki , ki nastopajo med ( morda neslišnim ) determinatorjem ter samostalnikom , ne ustrezajo definiciji glavnega jedra s strani 3 in zato niso jedra samostojnih kosov , temveč so vključena v samostalniški kos .
Polnopomenske besede v desnih prilastkih ne nastopajo več med deter - minatorjem in samostalnikom , ki ga ta determinator izbere , in so torej v primerih , ko so skladenjsko jedro , tudi pomensko jedro ter posledično jedro kosa .
Novejše raziskave kažejo , da je zgradba samostalniških besednih zvez še bolj razdelana in da je samostalnik v resnici ‘ posredno ’ dopolnilo determinatorja , tj. dopolnilo dopolnila .
.
2 Korpus Program za razpoznavanje samostalniških kosov je prirejen za uporabo na korpusih , ki ustrezajo specifikaciji , podani v projektu Multext-East ( MTE ) .
Konkretno je bil program preizkušan na romanu 1984 avtorja Georga Orwella v prevodu Alenke Puhar in je del slovenskega prispevka v projektu European Language Activity Network ( ELAN ) ( URL http://nl.ijs.si/elan/ ).
Be - sedilo je bilo ustrezno označeno in vzporedno poravnano z angleškim izvir - nikom v sklopu projekta Multext-East ter je prosto dostopno na spletnem naslovu http://nl.ijs.si/ME/CD/docs/1984.html .
Telo teksta se nahaja v XML elementih z nazivom seg ( segment ) , ki je ozna - čen z identifikacijskim atributom id oblike orwl.sl.x , kjer je x zaporedna številka segmenta , in atributom corresp , ki navaja ustrezni segment v ori - ginalnem ( angleškem ) besedilu .
Za razliko od ostalih besedil dostopnih v korpusu ELAN segmenti besedila 1984 niso seznam besed in ločil , marveč seznam stavkov , tj. elementov s z identifikacijskim atributomid , ki le-to so .
Izdelana programska oprema pri raznih izpisih samodejno ugotovi , za kakšen tip datoteke gre , in razčlenjene stavke označi z identifikacijskim atributom elementa s , če je le-ta prisoten , v nasprotnem pa uporabi identifikacijski atribut elementa seg .
Besede imajo poleg telesa elementa , ki prikazuje obliko besede , ki se dejansko pojavi v besedilu , še naslednja atributa : • Atributana vsebuje morfosintaktično analizo besede , kot je določena v projektu MTE .
Primer zapisa besede : < w ana = " Aopmsny " lemma = " aprilski " > aprilski < / w > Ločila imajo poleg telesa , ki vsebuje dejansko podobo ločila , še en ali dva atributa .
Primer zapisa ločila : < c ctag = " , " > , < / c > 2.1 Atribut ana Vrednost atributa ana je niz črk , katerega pomen je določen s spodnjimi tabelami .
Ta način kodiranja morfosintaktičnih informacij bomo na kratko imenovali mtems ( MULTEXT-East morphosyntactic description ) oblika .
V slovenskem tekstu so na voljo naslednje možnosti : okrajšava besedna vrsta angleški izraz N samostalnik noun V glagol verb A pridevnik adjective P zaimek pronoun R prislov adverb S predlog5 adposition C veznik conjunction M števnik numeral I medmet interjection X ostalo residual Y okrajšava abbreviation Q členek particle Pomen ostalih črk je določen z besedno vrsto in pozicijo črke v nizu .
Sledijo tabele , ki za vsako besedno vrsto ( tj. začetno črko v nizu mtems ) določijo pomene zaporednih mest v nizu .
Slovenščina predlogov , ki bi stali za samostalnikom , ne pozna ( skoraj : vsemu hudemu navkljub ) Izhodni podatki , tj. besedilo z označenimi samostalniškimi kosi , naj bi imeli enako strukturo kot vhodni , tj. zgoraj opisano , z dodanim elementom chunk na nivoju besede , ki služi označevanju kosov .
Zaradi narave kosov — fiksnega vzorca njihovih sestavnih delov — se je naravno odlo - čiti za orodje , ki omogoča ( preprosto ) manipulacijo z regularnimi izrazi , in razpoznavanje kosov implementirati z le-temi .
V konkretnem primeru sem si že - lel bolj specializiranega orodja , namenjenega obdelavi jezikovnega materiala , recimo namenskega programa ali ustrezne modularne nadgradnje kakšnega programskega jezika .
Slovnica je zaradi potrebe po preverjanju ujemanja npr. pridev - nika s samostalnikom narasla do take meje , da prevajanje slovnice v obliko , primerno za uporabo s cassom ( ki deluje na principu končnega avtomata ) , Izdelana slovnica je občutljiva na ločila .
Edini primer , v katerem je ločilo del samo - stalniškega kosa , so z vejico ločeni pridevniki , ki modificirajo isti samostalnik .
Paket je javno dostopen na domači strani avtorja Stevena Abneya , http : / / www.research.att.com / ~ abney / .
Vsebuje module , namenjene reprezentaciji jezikovnih ele - mentov ( stavkov , besed , fonemov .
.
Za potrebe pričujočega dela je najpomembnejši del sistema modul za izde - lavo razkosevalca , imenovan chunk , ki je podmodul razčlenjevalca ( parser ) .
plitko drevesno strukturo , kjer so listi korenskega elementa ( tj. stavka ) lahko zgolj besede ali kosi , le ti pa so spet zgolj nizi besed .
V ta namen ima nltk implementiran razred REChunkParser , ki določa kose s pomočjo regularnih izrazov nad ( morfosintaktičnimi ) oznakami besed .
Vsa ta pravila so podrazredi razreda REChunkParserRules .
• Pravilo ChunkRule združi besede , ki še niso del nobenega kosa , v kos , če seveda ustrezajo podanemu vzorcu .
bi na primer v kos združilo samostalnik in toliko pridevnikov , kot se jih pred samostalnikom nahaja .
• Pravilo ChinkRule9 besede , ki ustrezajo podanemu vzorcu in se vse nahajajo v nekem kosu , izseka iz kosa ( torej niso več del nobenega kosa ) .
Argumenti pravila so naslednji : 1. argument pove , katere besede se morajo ujemati ( npr. pridevnik ) ; 2. argument pove , s katerimi besedami se le-te ujemajo ( npr. s sa - mostalnikom ) ; 3. argument pove , kako izgleda niz , ki zakodira lastnosti , po katerih se morajo besede ujemati ( npr. msn zakodira moški spol , ednino in imenovalnik ; glej 2.1 ) .
• Pravilo ChinkBeginningRule je priredba pravila ChinkRule .
Deluje na enak način kot slednje , le da podanemu vzorcu ustrezajo le besede , ki se nahajajo na začetku kakšnega kosa.11 Implementacija pravila se zgolj neznatno razlikuje od implementacije pravila ChinkRule in je v bistvu zgolj njegova kopija z res drobnimi spremembami .
Niz % sje izbran zato , ker je to vpythonu standardna oznaka za vnos nizov v oblikovani niz — primerljivo s cjevsko funkcijo printf .
Glej tudi opombo 14 Dvomim namreč , da obstaja vzorec za pravilo ChinkRule , ki bi izbral le besede z začetka kosa .
Modul sre za delo z regularnimi izrazi namreč podpira zgolj 100 poimenovanih skupin ( tj. delov regularnega izraza , na katerega se lahko v nadaljevanju sklicujemo ) .
Osnovni vzorec , podan v pravilu tipa ChunkRule , je tako presegel magično mejo stotih oklepajev , zaradi česar je modul sre vrgel izjemo .
> , angl. angle brackets ) z notranje in zunanje strani obloži s parom okroglih oklepajev , ( < ( ...
Dodatna dobra stran opisanega po - pravka je olajšano sklicevanje v regularnih izrazih , ki ga lahko uporabljamo v pravilih ChunkRule in ostalih , saj nas oklepaji , ki jih vnese sam nltk , ne motijo več .
) 3.2 slonpchunk Srce izdelanega je programček za razpoznavanje samostalniških kosov , zelo neinovativno poimenovan slonpchunk .
Vhodni podatki programa morajo biti podani v XML obliki , opisani v razdelku 2.
Izhod je v isti obliki , razširjeni z XML elementom chunk , in je zapisan na standardni izhod .
Pre - prosta uporaba programa bi torej bila slonpchunk < orwl-sl.tei > orwl-sl.chunked.tei .
V resnici je v času preskušanja programa in popravljanja korpusa veliko po - gostejša uporaba patch-tei < orwl-sl.tei | QRYN | slonpchunk | tei2txt > orwl-sl.chunked.txt , ki s programčkom patch-tei najprej ‘ zapeče ’ vnešene popravke ( glej raz - delek 3.3 ) , nato nekaterim prislovom in členkom popravi atribute ana ( glej stran 17 , predvsem opombo 15 ) , šele zatem zažene slonpchunk , in njegov izhod s programčkom tei2txt ( glej razdelek 3.3 ) pretvori v človeku berljivo obliko .
Program je kolaž na - slednjih komponent : • Definiran je razred teiWord , katerega primerki vsebujejo informacije , prebrane iz XML elementa w ali c , tj. besede ali ločila : pisno podobo besede , njeno slovarsko obliko in , najpomembneje , njene morfosintak - tične oznake , zakodirane v oblikimtems .
Definiran je podrazred TeiContentHandler razreda ContentHandler , ki je v SAXu zadolžen za upravljanje z vsebino doku - mentov .
• Ob zagonu programa se kreira primerek razreda ReChunkParser , kateremu je podan seznam ustreznih pravil za dokočanje samostalniških kosov v slovenščini .
• Perlski program mtems-expand avtorja Tomaža Erjavca sem razširil z ukazno možnostjo - o | - - options .
Bistvena funkcija originalnega programa je bila izpisovanje informacije , zakodiranih v obliki mtems ( opisanih v razdelku 2.1 ) v človeku prija - zni obliki .
Uporabnik postavi kazalec na vrednost atributa , zaprto v narekovaje , in ob pritisku na določeno kombinacijo tipk ( privzeta je kombinacija C-c C-d se v oknu za sporo - čila prikaže berljivo zapisana informacija o vsebini atributa .
Pri tem uporabi program tei2txt , opisan v naslednji točki .
Dotični modul za python je potrebuje že glavni program slonpchunk , zato izvedba programa tei2txt v pythonu ne poveča zahtev po naloženi programski opremi .
Program je napisan v ‘ golem ’ perlu in se zato ne zaveda XML strukture ter je občutljiv na oblikovanje dokumenta .
Idealno bi bilo uporabiti SAX modul za perl , vendar glej opombo 12. 4 Slovnica 4.1 Program Zgradba slovnice za razpoznavanje samostalniških kosov v slovenskem jeziku je zelo preprosta .
Sestavljajo jo pravilo , ki v kos združi besede , ki ustrezajo kanoničnemu vzorcu slovenskega samostalniškega kosa ( le-ta je približno pre - dlog+zaimki+pridevniki+samostalnik ) , ter pravila , ki iz tako nastalega kosa izločijo dele , ki se ne ujemajo s samostalnikom .
Natančna formulacija pravil oziroma konstrukcija primerka razreda razčlenjevalca na kose je naslednja : 4.2 Osnovni vzorec Komentirajmo najprej formulacijo prvega pravila , ki določa vzorec , ki mu morajo ustrezati vsi slovenski samostalniški kosi .
% ( prid _ vej _ vez ) s < N. * > Spremenljivka prid _ vej _ vez vsebuje regularni izraz , kateremu ustreza po - ljubno zaporedje pridevnikov , ločenih z vejicami ali prirednimi vezniki — za preprostejši zapis imenujmo tako zaporedje pridevniški niz .
) Zgornji zapis torej ustreza pridevniškemu nizu , ki mu sledi števniški niz , kateremu sledi še en pridevniški niz , za kate - rim se nahaja jedrni samostalnik .
Primerov , ki bi ločili med obema formulacijama , je vsaj v danem korpusu malo , vendar le - ti skoraj brez izjeme narekujejo formulacijo z dvema pridevniškima nizoma .
Posvetimo se zdaj notranji zgradbi pridevniškega in števniškega niza .
Klic funkcije vars ( ) vrne slovar , ki vsebuje trenutne vrednosti spremenljivk , zato v zgornjih pravilih % ( prid ) s in podobni nizi prikličejo v niz vrednosti ustreznih spremenljivk , ki smo jih definirali pred klicem konstruktorja razredaReChunkParser .
Razlog za tovrstno ignoranco je pomanjkanje resnih kriterijev za razmeje - vanje teh dveh besednih vrst .
Slovenska slovnica [ Toporišič , 2000 , str. 445 ] eksplicitno pravi , da je " okrog ena četrtina členkov enakozvočna z vezniki in prislovi .
Drugo plat problema , namreč neobstoječe ali za naše potrebe neustrezne delitve teh besednih vrst , sem rešil precej ad hoc : s seznamom besed , za katere je zelo verjetno , da se bodo pojavile na začetku samostalniškem kosu ( na primer zelo , celo , le , samo , .
.
) , in seznamom besed , za katere je zelo verjetno , da v samostalniški kos ne spadajo , tudi če stojijo neposredno pred njim ( na primer pa , morda , ne , .
).15 Prve imajo na konec mtems oblike svoje morfosintaktične informacije dodan Y , druge pa N. V izdelani slovnici se ta informacija uporabi le za prislove in členke , ki se nahajajo na začetku vzorca , še pred prvim pridevniškim nizom ( o njih še nismo govorili ) , ne pa tudi za prislove in členke , ki modificirajo pridevnike ali števnike .
V samostalniški kos torej vključimo največ en zaimek .
* Y > * < Sp. * > ?
Pred celotnim do sedaj opisanim del samostalni škega kosa sme stati predlog , še pred tem pa poljubno število členkov ali prislovov ( tipa Y ) , na primer [ samo še v novoreških verzijah ] .
4.3 Ujemalna pravila Osnovnemu pravilu razreda ChunkRule sledijo ‘ ujemalna ’ pravila razreda ChinkNonAgreeingRule , ki sem ga implementiral sam , namenjena izloča - nju delov domnevnega kosa , ki se ne ujemajo s samostalnikom .
Seveda ne izločamo besed , ki ujemanja ne kažejo ( na primer zaimka tako v kosu [ s tako velikimi črkami ] ) .
Tri pravila so potrebna zato , ker zaimki niso vedno specifirani za vse tri možne oznake , tj. spol , število , in sklon , zaradi česar je potrebno preverjati ujemanje vsake posebej .
Zadnje izmed pravil tipa ChinkNonAgreeingRule poskrbi , da je sklon , ki zahteva predlog , isti sklonu samostalnika .
4.4 Levi rob kosa Zadnje pravilo je tipa ChinkBeginningRule .
Iz samostalniškega kosa izloči prislove in členke , ki se nahajajo na skrajnem levem robu kosa in so vključeni v seznam " slabih " besed , tj. besed , za katere izkušnje kažejo , da se nerade pojavljajo kot modifikatorji samostalniških zvez .
S takimi in podobnimi vprašanji se sreča slovenist pri gradnji jezikovnih virov za jezikovne tehnologije na oblikoslovni in glasoslovni ravni .
Največ prostora namenjamo vprašanjema edninskih samostalnikov ter vrsti in določnosti pridevnikov .
Ker podobnih razprav za slovenski jezik nismo zasledili , se nam pa zdijo pomembne za uspešno gradnjo virov , potrebnih za razvoj jezikovnih tehnologij , želimo s tem prispevati k analizi podobnih problemov .
Ključne besede : SIflex , SImlex , SImflex , jezikovne tehnologije , jezikovni viri , sinteza govora , prepoznava govora / besedila , besedna vrsta , oblikoslovje , glasoslovje .
UVOD Tehnološki razvoj v zadnjih desetletjih je omogočil , da so raziskovalne skupine po svetu in tudi pri nas ( Inštitut Jožef Stefan , Fakulteta za elektrotehniko v Ljubljani , Fakulteta za elektrotehniko , računalništvo in informatiko v Mariboru , podjetje Amebis idr. ( Kačič , 2002 ) ) začele razvijati tehnologije za sintezo in prepoznavo človeškega govora , t. i. jezikovne tehnologije .
Kakorkoli se zdi stroj , ki bi tekoče govoril in prepoznaval človeški govor , na videz utopičen cilj , se vse več ljudi trudi doseči ga , zgodovina pa nas uči , da se velikokrat na videz utopični projekti še prehitro uresničijo .
Za uspešen razvoj jezikovnih tehnologij so med drugim potrebni jezikovni viri , v katerih so popisani elementi posameznega jezika .
Tradicionalna slovnica te elemente opisuje na več ravneh : glasoslovni , oblikoslovni , skladenjski , pomenski ...
Takšna vprašanja so za jezikoslovca seveda izredno neljuba , saj slabo pozna delovanje stroja .
Prav zato je zasnova SImflexa kar se da široka : v njem skušamo popisati vse pomembne oblikoslovne in glasoslovne lastnosti slovenskega knjižnega besedja .
3 KAJ VSEBUJETA SIMLEX IN SIFLEX Preden podrobneje spregovorimo o vnesenih informacijah in o dilemah , ki se pojavljajo ob takem delu , še nekaj besed o izboru besedja .
Izbor je bil narejen na besedilih v elektronski obliki ( časopisni članki , dostopni teksti iz leposlovja ) , ki so skupaj štela okoli 31 milijonov besed ( Rojc , Kačič , 2000 [ 2 ] ) .
Iz izbranih 30.000 besed je bil ročno pripravljen nabor besed v slovarski obliki ( leme ) za nadaljnjo obdelavo in ob koncu prve faze je v oblikoslovnem slovarju popisanih okoli 20.000 lem in približno 800.000 besednih oblik , v glasoslovnem slovarju pa 170.000 enot .
Slovarja sestavljamo vzporedno , in sicer se v glasoslovni slovar za vsako besedno obliko , ki se pojavi v oblikoslovnem slovarju , zabeleži pripadajoč fonetični prepis , torej je vsaki besedni obliki pripisana ustrezna izgovarjava .
Podatki se vnašajo s pomočjo sistema Morf ( Rojc , Kačič , 2000 [ 1 ] ) , ki omogoča v prvi fazi kar se da avtomatsko vnašanje oblik in variant ( skupaj z naglasi ) ter določanje oblikoslovnih lastnosti , v drugi fazi pa naredi avtomatsko grafemsko-fonemsko pretvorbo vsakega gesla posebej , kar je osnova za glasoslovni slovar .
Ali torej vnesti samo knjižne oblike , ali vključiti tudi kakšne pogovorne in narečne oblike in če , katere ( vseh je vsekakor odločno preveč ) , ali vnesti tudi starinske in stilno zaznamovane besede in besedne oblike ?
Jezikovne pripomočke , ki bi ustrezno popisovali aktualen , živ jezik , kakršnega bi sami gotovo hoteli imeti popisanega v slovarjih , za slovenščino zaradi majhnosti le stežka zagotavljamo .
Tako smo imeli ob začetku gradnje SImflexa na voljo le SSKJ , za odločanje o oblikah smo si od leta 2000 pri preverjanju lahko nekoliko pomagali s korpusom Nova beseda ( Internet # 2 ) , delno tudi s korpusom FIDA ( Internet # 3 ) in od leta 2001 s pravopisnim slovarjem .
V SImflexu so tako vnesene naslednje variante : za vsako geslo / lemo v oblikoslovnem slovarju so izpisane vse knjižne oblike in vse knjižne variante naglasov in naglasnih mest ( vse ročno preverjeno po SP 2001 in SSKJ ) , pogovorne variante , ki so označene v slovarskem delu slovenskega pravopisa 2001 , ne pa tudi narečne ali izrazito starinske variante ali besede , ki jih tudi v korpusih ni najti .
Pri vseh glagolih , ki imajo dvojni naglas v nedoločniku , je vpisana tudi neknjižna naglasna varianta deležnika na - l in označena s kvalifikatorjem " pogovorno " ( npr. za glagol stopiti so glagolske oblike , ki se tvorijo z deležnikom na - l , vpisane dvakrat : z oblikami stop / ila - i - e - o , tj. knjižno , in z oblikami st / opila - i - e - o z dodanim kvalifikatorjem " pogovorno " ( znak "/" označuje ostrivec ) ) .
4 OBLIKOSLOVNI SLOVAR - SIMLEX Potem ko določimo razpon variant , je treba razmisliti o podatkih , ki bi bili v takšnih slovarjih uporabni .
Vsem besednim oblikam je določena končnica in vsaki lemi predpona oziroma predpone , če je teh več ( npr. po+vz+peti ) .
Z razvojem tehnologij pa se že kaže potreba , da bi bili označeni vsi morfemi vsake besede , tako da bo to morebiti naloga ene od prihodnjih faz .
Ko govorimo o oblikoslovnem slovarju , je osnovna kategorija seveda besedna vrsta .
Pri tem se razdelitev v SImlexu nekoliko loči od razdelitve v tradicionalni slovnici : zaimke ( samostalniške , pridevniške in prislovne ) obravnavamo posebej , ne v okviru samostalniške in pridevniške besede ter prislova , prav tako je kot posebna besedna vrsta določen števnik , posamostaljeni pridevniki spadajo v besedno vrsto samostalnik , povedkovnik pa je upoštevan le deloma .
4.1 Samostalnik Vsakemu samostalniku so določene naslednje kategorije : - ali je občno ali lastno ime - spol - sklanjatev ( moška , ženska , srednja ) - vrsta ( I. , II. , III .
, IV. ) in tip sklanjatve - živost - skloni in števila Vrsta in tip sklanjatve v podobnih slovarjih ( Internet # 4 ) navadno nista označena - pri razvoju jezikovnih tehnologij pa je tudi takšna nadaljnja tipologizacija besed lahko v pomoč .
4.1.1 Posamostaljeni pridevniki Posamostaljeni pridevniki so vpisani kot samostalniki , ki se sklanjajo po IV. sklanjatvi .
Za posamostaljene pridevnike srednjega spola pravi slovnica iz leta 1976 ( Toporišič , 1976 ) , da se sklanjajo po III .
Avtorji slovenske slovnice iz leta 1956 govorijo o tem v okviru števila .
Ugotavljajo , da " / k / adar splošno govorimo o snoveh , jih rabimo le v ednini .
Kadar imamo v mislih določene dele kake snovi , moramo to posebej izraziti , n. pr .
" ( Bajec et al. , 1956 : 87 ) Dalje pravijo , da " / n / ekatera snovna imena rabimo tudi v množini , a v nekoliko drugačnem pomenu ; včasih mislimo na /.../ različne vrste ...
V najnovejši slovenski slovnici ( Toporišič , 2000 ) je ta problem omenjen na dveh mestih : pri obravnavanju številskosti pregibnih besed in pri vrstah samostalniških besed .
" , samoedninskih pa pri tem ne omenja .
Ker je merodajna raba jezika , je ta problem najbolje reševati s pomočjo korpusov za slovenski jezik , kjer se lahko za snovna , pojmovna in skupna imena preveri , ali so v slovenskih besedilih bile uporabljene kakšne množinske ali dvojinske oblike teh samostalnikov .
Vprašanje edninskosti samostalnikov se pojavi tudi pri lastnih imenih .
Stvarna in zemljepisna imena se namreč običajno rabijo samo v ednini , če se nanašajo samo na en predmet oziroma kraj / področje ( npr. Večer , Delo , Maribor , Koper ...
V prvi verziji SImlexa so zato takšna stvarna in zemljepisna imena vpisana samo v ednini , tista , ki se lahko nanašajo na več krajev ali stvari ( npr. Bistrica ) , pa v vseh treh številih .
Možnosti , kako označevati določnost v oblikoslovnem slovarju , je torej več : 1. pri pridevnikih se v vseh sklonih in spolih označi določnost glede na delitev v tri skupine , kot jo navaja slovnica ( ibid .
" ( ibid .
) Možnost 3 je bolj semantična kot oblikoslovna informacija , možnost 2 pa manj praktična in uporabna za razvoj jezikovnih tehnologij kot možnost 1.
4.2.2 Stopnjevanje Informacija o obrazilnem in opisnem stopnjevanju pridevnikov v SImlexu obsega kvalifikator o vrsti stopnjevanja ter imenovalnik ednine osnovnika , primernika in presežnika oziroma obeh primernikov ( bolj , manj ) in presežnikov ( najbolj , najmanj ) pri opisnem stopnjevanju .
Kot posebna lema so v prvi fazi obravnavani samo tisti primerniki in presežniki , ki so bili v osnovnem naboru .
V SImlexu je vrsta stopnjevanja vedno vnesena tako , kot predvideva SP 2001 , na podlagi primerov v korpusih pa so dodani : 1. pri večini pridevnikov , ki se stopnjujejo obrazilno , oblike za opisno stopnjevanje ( npr. za moški spol pridevnika prijazen so izpisane stopnje prijaznejši , najprijaznejši in bolj / manj / najbolj / najmanj prijazen ) , 2. opisno ali obrazilno stopnjevanje ali oboje pri tistih pridevnikih , za katere je kakšna oblika primernika ali presežnika zabeležena v korpusih , v SP pa ni zabeležena ( npr. pri besedi umetniški – " vendar zato film ni bolj umetniški , ampak kvečjemu manj " ( Internet # 2 ) ) .
4.2.3 Vrsta pridevnika Za posebno težavno in zelo povezano z določnostjo / nedoločnostjo se pokaže določanje vrste pridevnika .
Pridevniki , ki ločijo določno in nedoločno obliko ( tj. kakovostni pridevniki ) , v določni obliki prav tako odgovarjajo na vprašanje kateri .
Ada Vidovič Muha ( 1981 ) določa vrsto pridevnika glede na besedno zvezo , v kateri se ta pojavi , in pridevnike v zgoraj navedenih besednih zvezah označi za vrstne .
" ( Vidovič Muha , 1981 : 27 ) Pri gradnji SImlexa smo imeli besede brez konteksta , torej bi morali s pomočjo korpusov predvideti najrazličnejše besedne zveze , v katerih bi se posamezen pridevnik lahko pojavil .
Za potrebe razvoja jezikovnih tehnologij je primernejša naslednja zelo poenostavljena delitev , ki se opira na obliko pridevnika : - vsi pridevniki , ki ločijo določno in nedoločno obliko , so v določni in nedoločni obliki in v vseh spolih določeni kot kakovostni , kar ustreza oznaki lastnostni pridevniki po najnovejši slovnici ( Toporišič , 2000 ) ( npr. avtobusen – i – a – o , kamnit – i – a - o ) , - vsi pridevniki , ki ne ločijo določne in nedoločne oblike in se v imenovalniku ednine moškega spola končajo na - i , so določeni kot vrstni ( torej tudi divji , božji ipd. ) , - vsi pridevniki , ki ne ločijo določne in nedoločne oblike in se v imenovalniku ednine moškega spola končajo na -0 , so določeni kot svojilni ( npr. sestrin , bratov , lipov ) .
Pri glagolih biti , imeti , hoteti sta označeni zanikana ( nisem , nimam , nočem ) in nezanikana ( sem , imam , hočem ) oblika .
4.3.1 Vrste glagolov Delitev na glavne , pomožne in naklonske glagole je običajna v podobnih slovarjih ( Internet # 1 ) , tudi v mednarodnih projektih , kot je npr. Multext East ( Internet # 4 ) , je zabeležena , zato jo je dobro vključiti v oblikoslovni slovar .
Ali je ta rešitev ustrezna , se bo pokazalo z razvojem tehnologij in uporabo slovarja v praksi .
V SImlexu je upoštevana možnost 2. 4.3.3 Zložene glagolske oblike Zložene glagolske oblike lahko označujemo po delih ( posebej sem in posebej šel ) ali kot eno enoto ( sem šel ) .
V SImlexu so zato zložene glagolske oblike vpisane kot ena enota , ob tem pa so podatki vneseni tako , da lahko kasneje avtomatsko določimo potrebne oblikoslovne lastnosti vsake sestavne enote posebej .
4.5 Števnik in zaimek Števniki in zaimki so v SImlexu obravnavani kot posebna besedna vrsta , in ne v okviru pridevniške besede oziroma samostalniške in pridevniške besede ter prislova , kot je tradicija v jezikoslovju .
Pri zaimkih je informacija o pripadnostni besedni vrsti po tradicionalni slovnici ohranjena znotraj gesla s kvalifikatorji " samostalniški " , " pridevniški " in " prislovni " zaimek .
Opozoriti velja še na posebnost osebnih svojilnih pridevniških zaimkov , ki ločijo poleg " števila predmetov " ( za prvo osebo moj , moja , moji ) tudi " število lastnika " ( moj , najin , naš ) , v tretji osebi ednine pa tudi " spol lastnika " ( njegov , če je lastnik moškega , in njen , če je lastnica ženskega spola ) .
4.6 Ostale besedne vrste Od ostalih besednih vrst je najvprašljivejša kategorija povedkovnika .
Čeprav v podobnih slovarjih ( Internet # 1 ; Internet # 4 ) navadno ni upoštevana in je tudi s stališča jezikoslovja lahko vprašljiva , saj ima temelje drugod kot ostale besedne vrste , pa vseeno za silo rešuje vprašanje razvrstitve besedic , kot so treba , res , rad , všeč ...
Tudi členki v SSKJ in SP 2001 niso usklajeno označeni : v SSKJ so velikokrat uvrščeni med prislove ( npr. tudi členka da , ne ) .
Neusklajeni so tudi primeri , kot npr. beseda nekajkrat : ta je po SSKJ prislov , enako po slovnici ( Toporišič , 2000 ) , po pravopisu 2001 pa kratnostni prislovni zaimek , kategorija , ki je slovnica ne omenja .
Ti in podobni primeri kažejo , da bi bilo morda treba o statusu takšnih besed za potrebe jezikovnih tehnologij še enkrat premisliti .
5 GLASOSLOVNI SLOVAR - SIFLEX Pri gradnji glasoslovnega slovarja za slovenski knjižni jezik je veliko manj jezikovnih dilem .
Ker so v slovarjih SImflex naglasne variante zajete že z oblikoslovnim slovarjem ( kjer sta prav tako označena vrsta in mesto naglasa ) , so v glasoslovnem slovarju dodane samo knjižne izgovorne variante , in sicer : 1. posebne glasovne zveze ( po SP , paragrafi 688 do 704 ) , npr. če prideta skupaj črki t in s , sta predvidena izgovora z obema glasovoma ali z zlitim c – recimo za besedo odsek O t - s \ E k in O - ts \ E k ) ; 2. premene po zvenečnosti ( če se beseda konča na zveneči soglasnik , se izgovori nezveneči par , recimo samostalnik breg se izgovori b r / e : k ) ; 3. paragraf 656 v SP , po katerem je v nekaterih besedah ( označene so v SSKJ ) mogoč tudi izgovor z l poleg izgovora z U ( npr. kopalka se lahko izgovori kot k O - p / a : l - k a ali kot k O - p / a : U - k a ) .
Vsaka beseda je zlogovana .
Slovarja sta zaključena v prvi fazi in po koncu te obsega SImlex okoli 20.000 lem in 800.000 besednih oblik , SIflex pa približno 170.000 enot .
Delo seveda nadaljujemo z novim naborom besed .
Vsi jezikovni problemi so obravnavani s stališča , kako izbrati takšne rešitve , ki bodo najustreznejše glede na osnovni namen slovarjev : uporabo pri jezikovnih tehnologijah .
Če predpostavljamo , da imajo statistične metode pri razvoju jezikovnih tehnologij mejo uspešnosti , ki je ne bodo mogle preseči brez pomoči jezikovnih virov , je lahko uspešnost tehnologije odvisna prav od načina , kako je jezik v jezikovnih virih popisan .
Gradnja in analiza korpusov za prevodoslovne raziskave Povzetek Prispevek pregledno predstavlja izhodišča za gradnjo in analizo korpusov za prevodoslovne raziskave in je tematsko razdeljen na dva dela .
Prvi del uvede temeljne pojme korpusnega jezikoslovja in razpravlja o namenih in tipih korpusnih raziskav v prevodoslovju , podaja teoretične in praktične smernice za zagotavljanje reprezentativnosti specializiranih korpusov ter predstavi ravni in metode označevanja večjezičnih korpusnih zbirk .
Ključne besede : gradnja korpusov , korpusno prevodoslovje , reprezentativnost , korpusna orodja , označevanje 1 Uvod Številne prevodoslovne raziskave temeljijo na besedilnem gradivu .
Gradivo je lahko najrazličnejših oblik in vsebin ; lahko vsebuje prevedena besedila in njihove izvirnike , samo prevedena besedila , izvirnik in več prevodov v isti jezik ali v več jezikov ; vsebuje lahko pisna in govorjena besedila ; besedila v celoti ali zgolj izpisane fragmente .
Pričujoče poglavje se ukvarja s korpusi v prevodoslovju , in sicer tako z njihovo izgradnjo kot z metodološkimi pristopi h korpusni analizi .
V drugi sklop pa sodi proučevanje sloga posameznih prevodov glede na določene kriterije , kjer se posvečamo predvsem prevajalčevemu / avtorjevemu slogu , razlikam med žanri , primerjavi prevodov v različnih časovnih obdobjih oz. družbenih okoliščinah in podobno ( Tymoczko 2000 ) .
V njih iščemo pojave , značilne za prevodni jezik , in proučujemo vplive spremenljivk , kot so jezik izvirnika , žanr , način prevajanja ipd. ( Laviosa 2002 ) .
c ) Za proučevanje značilnosti prevedenih besedil v razmerju do neprevedenih besedil v ciljnem jeziku , pa poleg korpusa prevodov uporabljamo še referenčni korpus v ciljnem jeziku .
Na podlagi izsledkov pridobiti dragocene informacije o slovnici , semantičnih odnosih , sprejemljivosti določene rabe , neologizmih oz. zastarelih izrazih ter pragmatičnih vidikih ciljnega jezika ( McEnery in Wilson 2001 ) .
Kadar načrtujemo jezikoslovno ali prevodoslovno raziskavo in bi zanjo radi uporabili korpus , je prvi korak navadno poizvedba , ali že obstaja primeren korpus , ki predstavlja reprezentativen vzorec za tisto jezikovno zvrst , ki jo nameravamo raziskovati .
Za prevodoslovje pa so zanimive še druge vrste korpusov , denimo : • enojezični , kadar raziskujemo zgolj prevode v določeni jezik in nas izvirniki ne zanimajo , • večjezični primerljivi , kadar raziskujemo prevode sorodnih besedil v več jezikov , • prevodoslovni , ki vsebuje prevode v določeni jezik ter primerljiva izvirna besedila v tem jeziku .
Vendar Baker kasneje uvede še koncept prevodoslovnega korpusa , ki je pravzaprav enojezični primerljivi korpus .
Sorodni projekti po svetu so še CroCo , 3 finski prevodoslovni korpus , zgrajen na Univerzi v Joensuu ( Eskola 2004 ) in drugi .
Za slovenščino nastaja obsežen prevodoslovni korpus v sklopu projekta Slovensko prevodoslovje - viri in raziskave , 4 ki poteka od maja 2009.
S slovenščino kot enim od jezikov je bilo zgrajenih že kar nekaj vzporednih korpusov , v glavnem za prevajalske , pa tudi za jezikovnotehnološke namene , npr. IJS-Elan , 5 Evrokorpus , 6 Trans , JRC-ACQUIS , 7 vendar so ti korpusi za prevodoslovne namene žal le pogojno uporabni , saj večinoma ne vsebujejo informacije o smeri prevoda ( prim. Vintar 2008 ) .
Za veliko večino raziskovalnih vprašanj , ki se porajajo prevodoslovcem v slovenskem prostoru , je torej potrebno primeren korpus šele zgraditi .
Statistika in teorija vzorčenja poznata več načinov izbiranja vzorca , denimo slučajnostnega , sistematičnega , namenskega itd. ( Kožuh 2008 : 130 – 135 ) .
Pri raziskovanju jezika se moramo vseskozi zavedati , da besede v jeziku niso razporejene naključno , zato ne moremo privzeti normalne porazdelitve , obenem pa se vseskozi srečujemo s paradoksalno situacijo , da želimo na podlagi vzorca sklepati o lastnostih določene jezikovne zvrsti , vendar te jezikovne zvrsti ne moremo sistematično vzorčiti , dokler ne vemo , katere so njene bistvene lastnosti , ki jih želimo zajeti .
Pri prevodoslovnih raziskavah je odločilnega pomena hipoteza , iz katere izhaja korpusna metoda , sledita pa vprašanji populacije in primernega vzorca , ki predstavljata ključni dejavnik pri gradnji korpusa .
Teoretična izhodišča tu v celoti izhajajo iz korpusa in odsevajo jezikovno rabo , kot jo kaže korpus .
Kljub temu da se zavedamo , da nam popolne objektivnosti tudi tak pristop ne nudi , je obenem metodološko nesprejemljivo selektivno navajanje korpusnih primerov in načrtno prikrojevanje rezultatov z namenom potrditve vnaprej oblikovane hipoteze .
Temeljna vprašanja pri gradnji korpusa , s katerimi se utegnemo srečati , so tale : 1. tip korpusa , 2. velikost / reprezentativnost , 3. avtorske pravice , 4. predobdelava in označevanje besedil , 5. poizvedovanje po korpusu in obdelava korpusnih podatkov .
Če raziskujemo zgolj prevode , bi morda zadoščal enojezični korpus prevodov , vendar je prevodoslovne pojave izjemno težko interpretirati brez vpogleda v izvirno besedilo .
Če namreč v korpusu prevodov odkrijemo določeno jezikovno posebnost , se brez omenjenega vpogleda postavlja vprašanje , ali gre za sistemsko značilnost ciljnega jezika ali za s prevajanjem povezani pojav , saj je bi lahko šlo tudi za interferenco med izvirnim in ciljnim jezikom .
Za vzporedne korpuse je namreč manj kakovostnih programskih rešitev kot za enojezične , pogosto pa je treba posegati po programskih orodjih lastne izdelave .
Kadar gradimo velike referenčne korpuse jezikov , zajemamo besedila v čim širšem žanrskem , geografskem in medijskem razponu , velikosti takšnih korpusov pa danes dosegajo že prek pol milijarde pojavnic ( npr. Cosmas II , 8 Collins WordBanks , 9 Fidaplus10 ) .
A še vedno se lahko zgodi , da iskane besede ni v korpusu – mar to pomeni , da je ni v jeziku ?
Tak korpus je bil denimo ustvarjen v okviru raziskovalnega projekta Slovenski prevodi nemških besedil 1848 – 1919 pod vodstvom dr. Ericha Prunča in je prek bibliografije TraDok11 dostopen prevodoslovni javnosti .
Nato moramo določiti osnovno korpusno enoto , ki bo predstavljala posamezne vzorčene jezikovne zvrsti .
Korpusna enota je lahko članek , novela , pesem , roman , poglavje , spletna stran ali kaj drugega .
Biber in dr. ( 1998 ) pri napotkih za sestavo korpusa poudarja raznolikost , ki je za zagotavljanje reprezentativnosti pomembnejša od velikosti korpusa .
Korpus , ki bo sestavljen iz krajših izsekov iz čimveč različnih besedil , dolgih denimo 1.000 besed , bo bolj reprezentativen v smislu predstavljanja jezikovne raznolikosti kot korpus , sestavljen iz manjšega števila daljših besedil .
Pomemben dejavnik pri izbiri vzorčnih korpusnih enot pa je seveda tudi predmet preučevanja .
Nekatere slovnične strukture dosegajo reprezentativne pogostosti že pri kratkih , denimo 1.000-besednih izsekih , po drugi strani pa za raziskovanje kompleksnejših pojavov potrebujemo neprimerno več gradiva .
Danes diskovne kapacitete niso več težava in ni posebnih razlogov , da bi besedila pri vključevanju v korpus krajšali .
Zelo pogosti jezikovni pojavi , denimo besedna vrsta samostalnik , so razmeroma stabilni že pri majhnih korpusnih vzorcih , redkejši pojavi pa zahtevajo daljše vzorce .
To ustreza intuitivni predpostavki , da so bolj pogoste besede boljše merilo različnosti oziroma podobnosti korpusov kot manj pogoste .
2.4 Avtorske pravice Pri gradnji korpusov se prej ali slej srečamo tudi z vprašanjem avtorskih pravic .
Četudi zbiranje besedil in njihovo vključevanje v korpus navadno predpostavljata raziskovalno rabo in izključujeta reproduciranje in distribucijo teh besedil ter materialno okoriščanje z njimi , pri tem vseeno nemalokrat prihaja do težav in spornih praks , ki v eni skrajnosti pretirano ščitijo avtorje oziroma predvsem založbe ter s tem onemogočajo jezikoslovno raziskovanje , v drugi pa povsem razvrednotijo avtorske vsebine in jih razširjajo kot javno dobro , kar niso .
Kot v " fizičnem " tudi v digitalnem svetu velja pravilo , da moramo za uporabo avtorskega dela pridobiti dovoljenje avtorja ali drugega nosilca avtorskih pravic ( založbe , upravitelja spletnega portala ipd. ) Vsaka uporaba brez dovoljenja je prepovedana in ima lahko za posledico odškodninsko ali celo kazensko odgovornost tistega , ki krši avtorske pravice .
Večina spletnih korpusnih iskalnikov ne omogoča vpogleda v celotno delo , temveč uporabniku v obliki konkordance ponuja zgolj kratke izseke iz besedil , bibliografski podatki o vsakem delu posebej pa so navedeni na koncu vsake konkordančne vrstice .
Načeloma bi lahko trdili , da gre pri taki vrsti dostopa do korpusa za posebno obliko citiranja , ki - še posebej pri prosto dostopnih korpusih brez komercialne izrabe - služi javnemu dobru .
Člen ZASP , ki pravi : ( 2 ) Fizična oseba lahko prosto reproducira delo : 1. na papirju ali podobnem nosilcu z uporabo fotokopiranja ali druge fotografske tehnike s podobnimi učinki , 2. na katerem koli drugem nosilcu , če to stori za privatno uporabo , če primerki niso izročeni ali priobčeni v javnosti in če pri tem nima namena dosegati neposredne ali posredne gospodarske koristi .
( 3 ) Javni arhivi , javne knjižnice , muzeji ter izobraževalne in znanstvene ustanove lahko za lastne potrebe prosto reproducirajo delo na kateremkoli nosilcu , če to storijo iz lastnega primerka in če pri tem nimajo namena dosegati neposredne ali posredne gospodarske koristi .
Iz spletnih dokumentov navadno odstranimo tudi navigacijske elemente ( Domov , Nazaj , Naprej ) .
Vzporedni korpus , ki vsebuje več kot dva jezika , je lahko poravnan za vsak jezikovni par posebej ( za štirijezični vzporedni korpus je to 6 jezikovnih parov ) , ali pa je vsak prevod poravnan zgolj z izvirnikom ( za štirijezični korpus torej 3 poravnave ) , odvisno od potreb in namenov raziskave .
Za stavčno poravnavo imamo na razpolago več brezplačnih orodij , ki povečini delujejo v okolju Linux / Unix , in številna komercialna , ki so vključena v prevajalska namizja .
Vzporedna besedila je mogoče poravnati tudi na leksikalni ravni .
Besedna poravnava [ word alignment ] se nanaša na statistični postopek ugotavljanja parov leksikalnih ustreznic , njen rezultat pa je dvojezični leksikon , ki za lekseme izvirnega jezika predlaga najverjetnejše prevodne ustreznice ciljnega jezika .
Uspeh je odvisen od velikosti vzporednega korpusa , ravni predobdelave ( npr. lematizacija , odstranjevanje praznih besed ) , sorodnosti jezikov in nastavitev algoritma .
Ker imajo mnoge besedne oblike lahko več možnih interpretacij , ta postopek navadno vključuje tudi razdvoumljanje leme in oblikoskladenjske oznake .
Za številne jezike so danes na voljo prosto dostopna orodja za avtomatsko označevanje , ki pa od uporabnika nemalokrat zahtevajo tudi nekaj računalniškega znanja , predvsem pri pretvarjanju formatov vhodnih in izhodnih korpusnih datotek .
Prvi spletni servis za oblikoskladenjsko označevanje slovenščine ToTaLe13 je bil vzpostavljen v okviru raziskovalnega projekta Jezikoslovno označevanje slovenščine ( JOS ) na Institutu Jožefa Stefana ( Erjavec in dr. 2005 ) .
Velikost korpusa ne sme presegati milijona besed .
V teh primerih se korpus lahko označuje ročno , kar pomeni , da v skladu z vnaprej določeno označevalno shemo v korpus vnašamo slovnične , semantične , fonetične , metajezikovne ali kake druge podatke , z namenom širjenja uporabnosti korpusa .
Nekaj orodij za ročno označevanje , ki podpirajo XML : • MMAX2 , http://www.eml-research.de/english/research/nlp/download/mmax.php , • Callisto , http://callisto.mitre.org/ , • GATE , http://www.gate.ac.uk/ .
Za korpusne raziskave je zelo pomembno , da so tako podatki kot metodologija , ki jo v raziskavi uporabljamo , dostopni zainteresirani javnosti , saj je le tako eksperiment mogoče reproducirati in s tem potrditi oz. ovreči dobljene rezultate ( Stubbs 2002 : 123 ) .
Analizo referenčnih in primerljivih korpusov ter analizo posameznih delov vzporednih korpusov izvajamo z enojezičnimi orodji , za primerjavo izvornega in ciljnega jezika v vzporednem korpusu pa so potrebna orodja , ki podpirajo delo z več jeziki hkrati .
Za kompleksnejše raziskave je velikokrat potrebna kombinacija različnih orodij , nemalokrat pa tudi razvoj lastnih programskih rešitev .
Vrstni red prikazanih konkordanc je naključen in je drugačen pri vsakem iskanju , vendar je konkordance mogoče razvrstiti glede na levi in desni kontekst , s čimer omogočimo hitrejše prepoznavanje relevantnih vzorcev in pomenov , v katerih se izkana beseda oz. besedna zveza pojavlja , ter izločanje nerelevantnih zadetkov .
Kadar za svoj iskalni pogoj dobimo veliko zadetkov , je analizo mogoče pospešiti z omejevanjem števila prikazanih zadetkov oz. izdelavo seznama naključno izbranih zadetkov .
Primer konkordanc za besedo » kartica « v korpusu FidaPLUS prikazuje Slika 2.
Na podoben način bi lahko konkordance razvrstili glede na desni kontekst .
Slika 2 : Primerjava surovih konkordanc in konkordanc , ki so sortirane glede na levi kontekst Poleg preprostega iskanja besed in besednih zvez večina konkordančnikov omogoča tudi iskanje po osnovnih oblikah besed oz. lemah ter po oblikoskladenjskih oznakah .
S tem iskanje sistematično razširimo na vse pojavitve nekega leksema oz. leksikalno-skladenjskega vzorca v korpusu .
Za iskanje po besednih oblikah se odločimo , kadar nas zanima raba neke besede v točno določeni obliki neke besede ( npr. primerjava rabe besedne oblike » starša « in » starši « ) , kadar pa želimo raziskati rabo neke besede na splošno , izberemo iskanje po lemah ( npr. raba besede » kriza « ) .
Oblikoskladenjske oznake uporabljamo tudi , kadar nas ne zanima neka določena beseda , temveč celotni razred ( npr. pri iskanju besednih zvez [ pridevnik ] _ šola ) .
Primer iskanja po lemah in oblikoskladenjskih oznakah v iKorpusu16 ter tako dobljene konkordance vsebuje Slika 3.
Pri tem je treba poudariti , da je večina korpusov lematiziranih in označenih avtomatsko , zato moramo biti pri tovrstnem iskanju pozorni na morebitne napake , kot so na primer napačno označene pojavitve besede » grob « v prvi , drugi , četrti in osmi konkordanci .
Slika 3 : Iskanje po lemah in oblikoskladenjskih oznakah Iskanje po korpusu lahko nadgradimo še z uporabo regularnih izrazov , s katerimi je mogoče prepoznati množico nizov , ki izrazu ustrezajo , ne samo konkretnih primerov .
Regularni izrazi so sestavljeni iz literalov , nadomestnih znakov in operatorjev .
Večina sodobnih konkordančnikov podpira uporabo regularnih izrazov s standardnim jezikom CQP , ki je zelo zmogljiv jezik za iskanje po korpusih , saj poleg regularnih izrazov omogoča hkratno iskanje po besedilu in oznakah v korpusu ( Christ idr. 1994 ) .
Primer iskanja z jezikom CQP po iKorpusu vsebuje Slika 4.
S tem iskanjem dobimo seznam besednih zvez [ pridevnik ] _ samostalnik , pri čemer je pridevnik poljuben , samostalnik pa se zažne na črko a in je dolg natanko 4 znake .
Pomoč za oblikovanje iskalnih pogojev v jeziku CQP in uporabo regularnih izrazov je dostopna na : http://nl.ijs.si/jos/cqp/ .
Slika 4 : Iskanje z jezikom CQP Poleg ustreznega oblikovanja iskalnega pogoja je za kakovostno korpusno zasnovano raziskavo zelo pomembna interpretacija dobljenih zadetkov , ki vključuje pozorno opazovanje iskanega izraza v sobesedilu , prepoznavanje tipičnih sopojavitvenih vzorcev , oblikovanje in potrjevanje hipoteze .
Iskanje z njimi je zelo podobno , o posameznih razlikah pa se pred uporabo poučimo v spremni dokumentaciji .
Zelo zmogljiv konkordančnik ima slovenski referenčni korpus FidaPLUS , 17 ki omogoča tudi iskanje po besedilnih zvrsteh in letu objave ter statistično obdelavo zadetkov in izdelavo seznamov kolokacij .
Enotni konkordančnik , ki omogoča preprostejše tabelarično iskanje ter iskanje z jezikom CQP , si delijo korpusi na portalu http://nl2.ijs.si/ , konkordančnik pa je tudi osrednje orodje v najpopularnejših programskih paketih za korpusno analizo , ki jih uporabljamo za analizo korpusov , ki smo jih zgradili sami , kot sta na primer SketchEngine18 in WordSmith Tools.19 Omenjena paketa sta sicer plačljiva , vendar ju je mogoče dobiti v začasnih oziroma okrnjenih demo različicah .
Čeprav je ponudba orodij za vzporedne korpuse veliko bolj omejena , so na voljo tudi konkordančniki za vzporedne korpuse , pri katerih iskanje poteka podobno kot pri enojezičnih korpusih , s to razliko , da pri vzporednih korpusih najprej izberemo jezik , po katerem iščemo , rezultati pa so prikazani v obeh jezikih .
Preprost konkordančnik za večjezični vzporedni korpus prevodov evropske zakonodaje Evrokorpus20 omogoča iskanje po korpusih v petih parih jezikov , vendar je omogočeno iskanje samo po besednih oblikah , saj ti korpusi niso lematizirani in oblikoskladenjsko označeni .
Primer iskanja po vzporednih korpusih na IJS prikazuje Slika 5.
Kot vidimo , se predsednik komisije ali odbora prevaja z izrazom » chairman « , predsednik vlade pa z izrazom » Prime Minister « .
Podpira stavčno poravnavo , iskanje po korpusu , ki vključuje tudi uporabo regularnih izrazov , možnosti razvrščanja zadetkov in iskanje kolokacij .
Vendar je njegova velika pomanjkljivost v tem , da ne odpira znakovnega nabora Unicode in posledično povzroča težave pri delu s slovenskim naborom črk .
Besedne sezname izdelujemo za celotno besedišče v korpusu , pri čemer iz njih pogosto izločimo nerelevantne , t. i. prazne besede .
Slika 6 prikazuje 20 najpogostejših lem v korpusu jos100k in iKorpusu .
Korpusa sta med seboj zelo različna , tako po vsebini kot po velikosti : prvi je korpus splošnega jezika in vsebuje 100.000 pojavnic , drugi pa je korpus za področje informatike in šteje 14 milijonov pojavnic .
To je splošna značilnost korpusov , saj med najpogostejše besede v jeziku sodijo funkcijske besede in zelo splošni samostalniki in glagoli .
Razlike se začnejo kazati v drugi polovici seznamov ( npr. » sistem « , » podatek « , » proces « za korpus informatike ) .
Primer statistične analize korpusa z orodjem WordSmith Tools vsebuje Slika 7.
Slika 7 : Korpusna statistika Slika 8 : Seznam ključnih besed S primerjavo besednega seznama podkorpusa oz. specializiranega korpusa z besednim seznamom , izdelanim za referenčni korpus , lahko izdelamo seznam ključnih besed za specializirani korpus , na katerem so uvrščene vse besede , ki se v primerjavi z referenčnim korpusom v proučevanem korpusu pojavljajo nesorazmerno pogosto .
Primer seznama ključnih besed je na Sliki 8.
Poleg enobesednih seznamov nekatera orodja omogočajo še izdelavo dvo - ali večbesednih seznamov , ki vsebujejo vse bi - oz. n-grame in njihove frekvence iz korpusa , torej vse pare oz. skupine besed , ki se pojavijo v korpusu .
Primer večbesednih seznamov , izdelanih za samostalniško besedno zvezo [ samostalnik ] _ [ samostalnik-v-rodilniku ] v korpusu JOS in iKorpusu , prikazuje Slika 9.
WordSmith Tools sicer omogoča ročno lematizacijo in osnovne oznake , vendar je to precej zamudno in okorno .
Primer frekvenčnega seznama in stolpičnega grafikona oz. histograma za besedne oblike glagola » govoriti « v korpusu FidaPLUS prikazuje Slika 10.
Najpogostejši sta tretjeosebna sedanjiška oblika » govori « in tretjeosebna pretekliška oblika glagola v moškem spolu » govoril « .
Slika 10 : Frekvenčni seznam besednih oblik 3.1.3 Kolokacije Zmogljivejši konkordančniki omogočajo statistično obdelavo konkordanc in izdelavo seznama kolokacijskih kandidatov , pri čemer uporabnik določi dolžino in smer sobesedila ( npr. 5 besed levo in desno od opazovanega jedra ) ter besedne vrste , ki ga pri tem zanimajo .
Ponavadi konkordančniki omogočajo več statističnih mer za izračun kolokacij , kot so Mutual Information , 22 Log Likelihood , 23 vrednost T24 idr. Te statistične mere temeljijo na razmerju med absolutno frekvenco neke besede v korpusu in frekvenco sopojavljanja te besede z iskano besedo .
Konsenza , katera mera najbolje napoveduje kolokabilnost , ni , zato je vredno preizkusiti več mer in izbrati tisto , ki za našo raziskavo daje najboljše rezultate .
Primer seznama kolokatov za besedo » šola « , pri čemer je upoštevano sobesedilo 3 besede levo in 3 desno od jedra , vsebuje Slika 11.
S seznama lahko razberemo nekaj pogostih besednih zvez , kot so » osnovna šola « , » srednja šola « , » glasbena šola « , opazimo , da se beseda » šola « veže s predlogi » v « , » na « in » iz « ter z glagoloma » obiskovati « in » hoditi « .
Slika 11 : Seznam kolokacijskih kandidatov za besedo » šola « Za podrobnejše leksikografske študije je vsekakor najprimernejše orodje SketchEngine , saj poleg možnosti izdelave seznama kolokacij preko konkordančnika omogoča tudi dodatno funkcijo , ki je ne vsebuje nobeno drugo tovrstno orodje , to so besedne skice [ Word Sketches ] .
Primer besednih skic za besedo » sol « iz korpusa FidaPLUS vsebuje Slika 12.
Pri tem je treba poudariti , da je zaradi statističnega pristopa , na katerem funkcija temelji , kvaliteta izdelanih besednih skic močno odvisna od velikosti našega korpusa ; večji kot je korpus , bolj uporabne in zanesljive bodo izdelane besedne skice .
Slika 11 : Besedne skice za besedo » sol « Podobno deluje funkcija Sketch Diff , ki namesto besednih skic za eno samo besedo pripravi izvleček podobnosti in razlik rabe dveh podobnih besed ( npr. » območje « in » cona « ) .
Vzorci , pogostejši za prvo besedo , so obarvani zeleno , vzorci , v katerih pogosteje nastopa druga beseda , pa rdeče .
Primer razlikovalnih skic za pridevnika » močen « in » krepek « vsebuje Slika 13.
Iz vzorcev , ki so značilni samo za enega od obeh pridevnikov , pa razberemo , da govorimo o » gospodarsko , finančno in številčno močnih « državah ipd. , po drugi strani pa poznamo » krepko pisavo , črke in tisk « .
Slika 13 : Razlikovalne skice za pridevnika » močen « in » krepek « Zaključek V tem poglavju smo predstavili izhodišča za gradnjo in analizo korpusov za prevodoslovne raziskave .
Predstavili smo tudi različne ravni procesiranja izdelanih korpusov , s katerimi omogočamo čim učinkovitejše izkoriščanje zbranih podatkov .
Nato smo opisali pristope korpusne analize za različne tipe prevodoslovnih raziskav ter predstavili računalniška orodja za kvantitativno in kvalitativno analizo eno - in večjezičnih korpusov .
Kvalitetna korpusna analiza in računalniškopodprto luščenje informacij iz korpusov sta nujna za znanstveno potrjevanje izbranih raziskovalnih tez , vendar še zdaleč ne zadoščata , zato jima mora slediti faza interpretacije , vrednotenja in preverjanja rezultatov .
Uvod Za uporabo prevajalskih tehnologij se v zadnjih letih tudi v Sloveniji odloča vse več prevajalcev oziroma njihovih delodajalcev , ki želijo ostati konkurenčni in naročnikom nuditi kakovostne prevode v najkrajšem možnem času in po sprejemljivi ceni .
Zaradi nedostopnosti najrazličnejših jezikovno vezanih orodij za slovenski jezik ponavadi posegajo po prevajalskih namizjih , ki vključujejo pomnilnik prevodov , orodje za vzporejanje besedil in orodje za gradnjo terminoloških baz , poleg tega pa omogočajo tudi lažje načrtovanje in vodenje prevajalskih projektov .
O izkušnjah pri rabi teh orodij pri nas in v tujini je poročalo že več avtorjev , predvsem v okviru prevajanja zakonodaje EU ( Krstič / Belc , 1999 ; Željko , 2000 , Taes 2001 ) .
Prispevek spremlja eno mlajših in manjših prevajalskih agencij v Sloveniji pri odločitvi za prehod na delo s prevajalskim namizjem Trados , pri čemer agencija nima » hišnih « prevajalcev , temveč vse prevode preda zunanjim sodelavcem .
Pri celotnem projektu je sodelovala prvopodpisana avtorica tega prispevka , ki je na agenciji opravila večino nalog , potrebnih za začetek dela s Tradosom .
Najprej sta opisana prevajalski projekt , pri katerem je agencija začela uporabljati prevajalsko namizje , in način dela pred nakupom Tradosa .
Predstavitvi pripravljalnih nalog , potrebnih za prehod na delo s Tradosom sledi vrednotenje odločitve za nakup Tradosa , pri čemer so upoštevani stroški uvajanja prevajalskih tehnologij v obstoječ prevajalski projekt ter primerjava količine in kakovosti opravljenih prevodov in zaslužka pred uporabo Tradosa in danes .
V nadaljevanju so opisani prednosti in slabosti dela s Tradosom ter mnenje prevajalcev o tem prevajalskem namizju , prispevek pa sklenemo z razmislekom o možnostih uporabe opravljenega dela in pridobljenih izkušenj pri podobnih projektih v prihodnje .
Opis dela pred uporabo Tradosa Projekt , v katerega smo na agenciji vključili Trados , je prvi obsežnejši in dolgoročnejši prevajalski projekt te agencije .
Začel se je septembra 2002 , ko je naročnik za obdobje enega leta potreboval prevode strokovno zahtevnih besedil s področja bančništva iz slovenščine v angleščino , in sicer za približno 100 prevajalskih strani na mesec .
Naročnik prevodov ni potreboval dnevno , temveč pred sejami nadzornega odbora , zaradi česar je bil ritem dela neenakomeren in roki za dokončanje prevodov dokaj kratki .
Delo je potekalo tako , da je naročnik po elektronski pošti agenciji poslal izvorna besedila , koordinator projekta pa je besedila razdelil med prevajalce .
Končani prevod so po elektronski pošti vrnili agenciji , koordinator projekta pa ga je predal naročniku .
Koordinator projekta je prevajalcem delo lajšal tako , da je , če je le bilo mogoče , prevajalcem vedno posredoval besedila istega tipa .
Čez nekaj časa so prevajalci ugotovili , da se v besedilih včasih ponavljajo samo strokovni izrazi , drugič pa celi odstavki ( npr. pri navajanju odločb Banke Slovenije ) .
Zunanji sodelavci so kupili osnovni paket Freelance , na agenciji pa smo kupili dva paketa Language Service Provider , ki omogoča prevajanje na mreži , pri čemer polni pomnilnik več prevajalcev hkrati .
Priprava na delo s Tradosom Pred uporabo Tradosa je bilo treba pripraviti ustrezno tehnično okolje , namestiti namizja na računalnike , organizirati izobraževanje za prevajalce in izdelati pomnilnik prevodov ter terminološko bazo .
Na agenciji smo z intenzivnim delom vse pripravljalne dejavnosti opravili v dveh mesecih .
Na računalniku mora biti nameščen vsaj operacijski sistem Windows 98 , vendar proizvajalec priporoča Windows NT , Windows 2000 ali Windows XP , poleg tega morata biti nameščena še vsaj MS Office 97 in Microsoft Internet Explorer 5.5 ( Trados , 2003 ) .
Namestitev Tradosa na osebne računalnike Čeprav proizvajalec zagotavlja , da z namestitvijo Tradosa uporabniki ne bi smeli imeti težav , se je koordinator projekta odločil , da ga bo prevajalcem pomagal namestiti .
Pri več kot polovici namestitev se v Wordu niso pravilno izpisovali šumniki , vendar je Tradosov zastopnik za to napako zelo hitro priskrbel popravek .
Pomnilnik prevodov tudi ni deloval , če je bil v nadzorni plošči v lokalnih nastavitvah za ločilo v seznamu nastavljeno podpičje , ki ga je bilo treba spremeniti v vejico .
Te smo morali ustvariti ročno , nato je pomnilnik deloval nemoteno .
Izobraževanje prevajalcev Ker razen prevajalke , ki je že uporabljala Wordfast , še nihče od sodelavcev nikoli ni delal s prevajalskim namizjem , smo pred začetkom dela s Tradosom pripravili izobraževanje zanje .
Povabili smo jih na celodnevni seminar , na katerem smo jim predstavili koncept pomnilnika prevodov na splošno in način dela z Workbenchem , WinAlignom in MultiTermom , v drugem delu seminarja pa so vsak na svojem računalniku vadili najpomembnejše operacije za prevajanje s Tradosom ( odpiranje baze in priprava delovnega okolja , analiza izvornega besedila , odpiranje in zapiranje prevodnih enot , vstavljanje nespremenljivk ( placeables ) in terminologije , iskanje po konkordancah , čiščenje prevoda ) .
Za prevajalce smo pripravili tudi osnovna navodila za delo s Tradosom .
Priprava projekta Glavne naloge v pripravljalni fazi so bile priprava delovnega okolja , ustvarjanje pomnilnika prevodov in terminološke baze ter izvedba seminarja za prevajalce .
Za začetek dela s Tradosom pa smo nekoliko spremenili organizacijo dokumentov in dodali nekaj podmap ( za pomnilnik prevodov in terminološko bazo ) .
Izdelava pomnilnika prevodov Ker je projekt tekel že več mesecev pred nakupom Tradosa , smo imeli obsežen arhiv prevodov , s katerim smo pomnilnik napolnili , vendar smo jih prej morali vzporediti z WinAlignom .
Nato je bilo treba izbrati dokumente , ki smo jih želeli vzporediti , in nastaviti stopnjo občutljivosti za obliko dokumenta pri vzporejanju ( slogi , pisava , številčenje ) .
Število napak zaradi oblikovanja dokumentov je bilo mogoče zmanjšati s spreminjanjem oblikovanja izvirnika in nanašanjem enakega oblikovanja v prevod z možnostjo AutoFormat .
Zaradi segmentacijskih pravil WinAlign napačno ločuje tiste prevodne enote , pri katerih se pojavlja pika na koncu krajšav in vrstnih števnikov .
Tem napakam smo se izognili z izdelavo posebnih seznamov besed , pri katerih orodje za vzporejanje pike ne obravnava kot končno ločilo ( seznam krajšav : g. , ga .
Ko je WinAlign vzporedil besedila , je bilo treba rezultate pregledati in morebitne napake popraviti ročno .
Enako kot v WinAlignu smo izbrali izvorni jezik in ciljni jezik ter administrativna polja ( datum nastanka prevoda , ime prevajalca ipd. ) .
Ker smo ustvarjali pomnilnik prevodov iz arhiva , smo v pomnilniku dovolili shranjevanje različnih prevodov za identične izvorne segmente .
Te prevode smo kasneje ob sodelovanju vseh prevajalcev postopoma poenotili .
Pomembna je tudi nastavitev , pri kateri se spremenjena prevodna enota v pomnilnik ne shrani , saj bi tako lahko ustrezne prevode zamenjali z neustreznimi .
Pri izdelavi pomnilnika prevodov smo nazadnje uvozili še prejšnje prevode , ki smo jih prej vzporedili z WinAlignom .
Izdelava terminološke baze Pred začetkom dela s Tradosom je bilo treba izdelati terminološko bazo .
Nekateri prevajalci so za lastne potrebe sestavljali sezname pomembnih izrazov z angleškimi prevodi , ki smo jih nato vnesli v MultiTerm .
Ustvarjanje terminološke baze je poenostavljeno s čarovnikom .
Za enotne prevode terminologije smo se dogovorili na internem forumu , dostopnem samo prevajalcem , ki sodelujejo pri tem projektu , nato pa smo jih popravili še v pomnilniku prevodov .
Terminološka baza je na začetku štela približno 100 vnosov , vendar je zaradi obilice prevajalskega dela in časovne stiske nismo mogli redno dopolnjevati , tako da danes vsebuje samo najosnovnejšo terminologijo in šteje nekaj manj kot 200 vnosov .
Opis dela s Tradosom Ko smo končali pripravljalne naloge , smo popolnoma prešli na delo s Tradosom .
Bistvo dela se ni spremenilo ; še vedno je naročnik koordinatorju projekta poslal izvorna besedila , ki jih je razposlal prevajalcem .
Če pa projekt pogledamo pobliže , opazimo , da smo na agenciji dobili veliko novih nalog , s katerimi se prej nismo ukvarjali .
Pred oddajo prevodov mora koordinator besedila očistiti , posodobiti bazo in iz prevoda izločiti izvorno besedilo .
Te dodatne zadolžitve se še posebej poznajo pri nujnih prevodih , ki morajo biti končani v enem dnevu .
S tem je postal projekt bolj odvisen od koordinatorja projekta kot prej .
Poleg koordinatorjevih nalog se je povečalo tudi število vzdrževalnih opravil , kot so popravljanje prevodnih enot v pomnilniku prevodov in terminološki bazi , posodabljanje terminološke baze in vzporejanje besedil za pomnilnik prevodov .
Tega ne more početi administrativno osebje , pa tudi ne koordinator projekta , saj je treba poleg Tradosa dobro poznati tudi oba jezika , koordinator pa ni jezikoslovec .
Zato se je projektu pridružil še vzdrževalec podatkovnih baz .
Vrednotenje dela s Tradosom Kako uspešni smo s prehodom na Trados , je mogoče ugotoviti s primerjavo stroškov za uporabo Tradosa , količino in kakovostjo prevodov ter mnenjem vseh udeležencev v prevajalskem projektu : naročnika , prevajalcev , predvsem pa agencije , ki se je za Trados odločila .
Ti so za agencijo znašali približno poldrugi milijon tolarjev .
Analiza korpusa Število vseh dokumentov , ki smo jih do konca raziskave prevedli , je 1.230.
Slika 1 : Razporejenost besedil po kategorijah Pregled dokumentov je pokazal , da so besedila kratka , saj je povprečna dolžina dokumentov 3,59 prevajalske strani1 .
Največ dokumentov je bilo dolgih eno stran ali manj ( 448 ) , sledila so besedila , dolga dve do pet strani ( 383 ) in šest do deset strani ( 213 ) , najdaljši ( 94 strani ) pa je bil prevod letnega poročila .
Za kratka besedila v tem projektu velja , da je njihova notranja ponovljivost majhna ( 1 % ) , pri daljših besedilih pa naraste tudi na 7 %.
To se dogaja predvsem pri novih različicah že prevedenih dokumentov , na primer pri prevajanju spremenjenih zapisnikov sej , ko je treba prevesti samo spremembe .
S temi besedili je delo najpreprostejše , saj prevajalci MS Word poznajo najbolje in je tudi zelo dobro povezan s Translator's Workbenchem .
Slika 2 : Prikaz razporeditve besedil glede na format 4.3.
Količina prevodov Projekt se je začel s petimi prevajalci , po dveh mesecih pa se jim jih je pridružilo še pet .
Vsi prevajalci skupaj so pred nakupom Tradosa prevedli 2.004 , s Tradosom pa 2.417 strani , skupno 4.421.
) , je bilo dela več , saj smo takrat poleg rednih prevodov prevajali še gradivo za seje in zapisnike .
Za začetek dela po novem sistemu smo izbrali poletne mesece v prepričanju , da bo zaradi letnih dopustov prevodov manj in bomo vsi vpleteni imeli več časa , da se privadimo na nov način dela .
Največ ( 340 strani ) so prevajalci prevedli meseca septembra , ko je naročnik najbolj dejavno reševal zaplete pri novem načinu poslovanja , in meseca decembra , ko so zaključevali finančno leto .
Prva dva meseca v tem letu sta bila bolj umirjena , primerljiva z majem in junijem prejšnje leto , tik pred izrednim poletnim obdobjem .
Tudi po koncu raziskave je ritem dela podoben ; pred rednimi sejami se količina prevodov poveča in nato v naslednjem mesecu spet nekoliko upade .
Količina prevodov se na prvi pogled ne zdi zelo velika , vendar zunanji sodelavci ne prevajajo za enega samega naročnika , temveč sodelujejo tudi pri drugih projektih .
Drug razlog , zakaj so prevajalci močno obremenjeni , pa je ta , da ritem dela ni enakomeren .
Obstajajo obdobja , ko agencija ne prejme niti enega naročila , nato pa naročnik v zelo kratkem času zahteva veliko prevodov .
Glede na nujnost prevodov smo se z naročnikom dogovorili za tri kategorije : najnujnejše prevode mu vrnemo v 24 urah , prevode besedil , ki jih naročnik pošlje v petek , dobi do ponedeljka , za manj nujne prevode pa imamo tri dni ali več časa .
Kakovost prevodov Kot je razvidno iz zgornjega odstavka , se je z uporabo Tradosa prevajalska zmogljivost agencije znatno povečala .
Po prehodu na Trados smo našli in odpravili predvsem številna terminološka odstopanja , prevodi pa so postali enotnejši .
Koristi uporabe Tradosa za prevajalsko agencijo Prevajalska agencija s svojo dejavnostjo skuša zadovoljiti svoje osnovne potrebe : zniževanje stroškov in povečanje dobička , zagotavljanje kakovostnih prevodov v čim krajšem času ter učinkovito vodenje prevajalskega projekta .
Z uporabo pomnilnika prevodov nam je uspelo zadržati naročnika tudi po preteku prve enoletne pogodbe , pri tem pa ob povečanem obsegu prevodov celo obdržati prvotno ceno , kar je naš velik poslovni in strokovni uspeh .
Z uporabo Tradosa smo povečali svojo konkurenčnost , saj smo z recikliranjem že opravljenih prevodov lahko znižali stroške prevajanja za približno 25 odstotkov .
S tako bogatim pomnilnikom lahko zagotovimo enako količino prevodov v krajšem času .
Pred uporabo Tradosa smo v 24 urah lahko zagotovili samo 10 odstotkov prevodov , danes je najnujnejših prevodov več kot četrtina .
Slika 5 : Prikaz prevajalskih zmogljivosti pred uporabo Tradosa in z njegovo pomočjo Tudi vodenje projekta je bolj učinkovito , saj lahko z analizo novih dokumentov koordinator zelo natančno ugotovi , koliko dela čaka prevajalce , in naročniku že takoj sporoči , v kakšnem času ga lahko opravijo .
4.6.
Koristi uporabe Tradosa za prevajalce in za naročnika Prevajalski projekt s Tradosom ne bi mogel uspeti , če z njim ne bi bili zadovoljni prevajalci , ki morajo z njim tudi največ delati , in naročnik , od katerega je odvisno nadaljevanje projekta .
Od začetka uporabe Tradosa je tako naročnik že prihranil približno 20 odstotkov .
Če naročnik prihrani denar za prevode , agencija pa ne zmanjša svojega dobička , bi lahko sklepali , da zaradi uporabe Tradosa prevajalci izgubljajo honorar .
Z njim lahko prevajalci v enakem času prevedejo večjo količino besedil in zaslužijo več .
Druga , še bolj očitna prednost dela s Tradosom pa je ta , da so prevajalci za svoje delo porabili manj časa , ki so ga lahko namenili drugim projektom in zaslužili še z njimi .
Poleg povečanja kakovosti in količine opravljenih prevodov gre omeniti še občutno izboljšanje oblikovanja prevedenih dokumentov , ki so se pred začetkom dela s Tradosom precej razlikovali od izvirnikov , sedaj pa je enako oblikovanje prevoda mogoče doseči brez vlaganja dodatnega truda in časa .
Vsi prevajalci so s Tradosom zelo zadovoljni .
Devet prevajalcev ga uporablja za vse naročnike , en prevajalec pa ga uporablja samo za ta projekt , ker druga besedila , ki jih prevaja , niso primerna za delo s Tradosom .
Zdita se jim zelo uporabni za besedila , pri katerih se v povedih pojavlja veliko števil in bi z vstavljanjem nespremenljivk izgubili veliko časa , ter kadar se v besedilu pojavlja veliko tujih lastnih imen in obstaja možnost , da bi jih napačno natipkali .
V TagEditorju pa se prevajalcem zdi koristna možnost izbriši oznake pri meglenih zadetkih ( strip tags from fuzzy matches ) , saj kljub podobni vsebini prevodi niso vedno enako oblikovani , s to možnostjo pa pomnilnik omogoča ponovno uporabo vsebine brez spremenjenega oblikovanja .
Tako se prevajalci tudi pri delu s Tradosom srečujejo z določenimi težavami .
Pri prevajanju z Wordom je na primer besedilo v vstavljenih objektih ( slikah , diagramih ) treba prevajati ročno , in ker so objekti ponavadi zaklenjeni , besedilo zato izgubi prvotno obliko .
Poleg tega TWB pri prevajanju Wordovih tabel TWB preskoči vse celice , v katerih so samo številčni podatki , zaradi česar morajo prevajalci ročno zamenjati vejice in pike za tisočice in decimalke .
V širšem smislu je zelo pomemben učinek dela s pomnilnkom prevodov delitev besedila na prevodne enote , pri čemer je trenutna enota posebej izpostavljena , kontekst pa je manj viden , kar je najverjetneje vplivalo na zaznano postopno povečanje popolnih ponovitev .
Posledica takšnega načina prevajanja je suhoparen , tehničen slog , včasih tudi netekoč prevod .
Vprašanje , ki se ga prevajalci morajo zavedati , je , ali res želijo izkoriščati prednosti pomnilnika prevodov na račun besedilnosti .
Za kakovost pomnilnika po tehnični plati je skrbel koordinator projekta , ki je zagotavljal , da je vsak končan prevod ob uvozu v osrednjo bazo tehnično brezhiben in opremljen z vsemi potrebnimi administrativnimi podatki .
Vsebinske neustreznosti pa smo odpravljali s pomočjo prevajalcev .
Kadar je bil o najustreznejši rešitvi potreben dogovor med prevajalci , smo uporabili interni forum .
Na tak način smo napake odpravili v razmeroma kratkem času in jih vnesli v osrednji pomnilnik prevodov , tako da se v prihodnosti niso več pojavljale .
Možnosti aplikacije opravljenega dela na prihodnje projekte Pred nakupom Tradosa agencija in njeni sodelavci nismo imeli izkušenj s prevajalskimi tehnologijami , zato sta za gladek prehod na delo s prevajalskim namizjem obe strani potrebovali veliko motivacije in energije .
Po analizi rezultatov in zbranih mnenjih prevajalcev lahko trdimo , da je bilo uvajanje Tradosa v konkretno prevajalsko okolje uspešno , z njim je zadovoljen tudi naročnik .
Zato se opravljeno delo in pridobljene izkušnje zdi smiselno uporabiti tudi pri drugih projektih .
Terminološka baza je prav tako uporabna , saj omogoča preklapljanje med jeziki .
Gradnja terminološke baze pa je lažja , ker ni več treba iskati in vnašati vseh terminov , temveč že vnesenim samo dodajamo nemške ustreznice .
Odpirajo se tudi povsem novi projekti , pri katerih bo delo lažje že zato , ker smo pri prvem projektu z vsporejanjem besedil , polnjenjem pomnilnika prevodov , z gradnjo terminološke baze , s pripravo besedil in z reševanjem nastalih težav pridobili ogromno izkušenj .
Zaključek Pri pregledu razmer na trgu prevajalskih storitev se zdi , da bodo v bližnji prihodnosti tudi v Sloveniji vsi resni ponudniki prevajalskih storitev morali razmisliti o sodobnih prevajalskih tehnologijah in jih začeti uporabljati , drugače ne bodo več dolgo mogli zagotavljati zahtevane količine prevodov zahtevane kakovosti v danem času , tudi njihove cene se ne bodo mogle prilagajati konkurenci .
V času , ko prevajalska namizja postajajo del standardne opreme ponudnikov prevajalskih storitev , se pojavljajo potrebe po integraciji namizij z ostalimi jezikovnimi viri in tehnologijami , ki so del prevajalskega procesa .
Ponudniki komercialnih prevajalskih namizij so orodjem za računalniško podprto prevajanje dodali možnost računalniškega ( strojnega ) prevajanja , ki omogoča računalniško prevajanje tistih delov besedil , za katere pomnilnik prevodov ni našel ustreznega prevoda in tako združuje prednosti obeh svetov ( Mügge , 2001 ) , vendar takšne jezikovno odvisne rešitve za slovenščino žal še niso na voljo .
Eden najpomembnejših projektov na tem področju je Euramis , s katerim prevajalska služba EU zmanjšuje količino ponavljajočih se administrativnih nalog in tako prevajalcem omogoča , da večino svojega časa in energije posvetijo strokovnemu delu ( Translation DG , 2004 ) .
Mlajši prevajalci lahko danes potrebna znanja pridobijo že med študijem , starejši pa bodo sami morali zavestno poskrbeti za udeležbo na ustreznih seminarjih in delavnicah , saj bi v najslabšem primeru lahko prišlo do paradoksa , ko mladi prevajalci , spretni z računalniškimi orodji , zaradi neizkušenosti na strokovnem področju ne bi mogli dobiti dela , starejši prevajalci pa kljub strokovni podkovanosti naročnikovih potreb ne bi mogli zadovoljiti zaradi nepoznavanja prevajalskih tehnologij .
Če vse tri strani razumejo , kaj lahko s prevajalskim namizjem pridobijo , bodo v projekt pripravljene vložiti več časa , truda in sredstev .
Zadnja različica leksikona vsebuje okoli 20.000 leksikalnih enot , ki ubesedujejo 17.000 pojmov .
Te pri računalniški obdelavi naravnega jezika predstavljajo most med jezikom in znanjem , ki je z jezikom izraženo .
S tem znanjem računalnikom omogočimo razvrščanje dokumentov v skupine , iskanje informacij po obsežnih podatkovnih zbirkah , povzemanje besedil , strojno prevajanje in podobno .
Semantični leksikoni so uporabni tudi za eno - in večjezične jezikoslovne študije , pa tudi kot jezikovni pripomoček pri tvorjenju in prevajanju besedil .
Naslednji razdelek vsebuje pregled leksikalno-semantičnih virov za slovenščino , v tretjem spregovorim o načelih gradnje semantičnih leksikonov , v četrtem poglavju predstavim zasnovo leksikonov tipa wordnet , v petem pa analiziram vsebino izdelane zbirke .
Leksikalno-semantični viri za slovenščino Medtem ko ima slovenščina zelo bogate korpusne vire , smo z leksiko-semantičnim viri precej slabše opremljeni , sploh kar se tiče prosto dostopnih zbirk .
Tretja , še največja slabost SSKJ pa je v tem , da kot podatkovna zbirka ni dostopen za raziskovalne namene in je tako tudi ob predpostavki , da bi bilo zgornji dve težavi mogoče razrešiti , SSKJ kot leksiko-semantični vir za raziskave s področja računalniškega jezikoslovja žal praktično neuporaben .
Na podlagi SSKJ je Júlija Bálint ( 1997 ) izdelala slovar homonimov , ki vsebuje približno 750 homonimnih vrst , razlage homonimov in informacije o njihovi stilni oziroma zvrstni zaznamovanosti .
Če bi bil ta slovar s pomočjo 620 milijonskega korpusa FidaPLUS dopolnjen in posodobljen ter digitaliziran , bi že bil uporaben kot koristen vir za številne računalniške naloge , kot je na primer priklic informacij , kjer za uspešno razdvoumljanje večpomenskih poizvedb zadošča ločevanje med homonimi .
Zbirka je pojmovno zasnovana in vsebuje besede in besedne zveze z vsemi oblikami , skupine pomensko tesno povezanih besed in delne tezavre ter predloge s podatki o vezljivosti glagolov ( Holozan : 2008 ) ) .
Zbirka je bila izdelana ročno , zato je zanesljivost podatkov visoka , pri njeni gradnji pa so si avtorji pomagali tudi s korpusi , tako da je zbirka utemeljena s stališča jezikovne rabe .
V slovenščino ga je poskusno prenesla Birte Lönneker-Rodman s sodelavci ( Lönneker-Rodman , Baker in Hong : 2008 ) , delo pa se nadaljuje v okviru projekta Sporazumevanje v slovenskem jeziku ( glej Može : 2008 in Gantar : 2008 ) .
Ker je bil sloWNet razvit v skladu s priporočili večjezičnih projektov EuroWordNet1 in BalkaNet , je izdelan vir mogoče uporabiti samostojno ali pa tudi kot dvo - ali večjezični leksikon z vsemi drugimi wordneti , ki uporabljajo enak nabor konceptov kot PWN .
Konec prejšnjega in v začetku tega stoletja so pod okriljem mednarodnih projektov EuroWordNet ( Vossen : 1998 ) in BalkaNet ( Tufis , Cristea in Stamou : 2004 ) nastali wordneti za številne evropske jezike , s čimer je wordnet pridobil pomembno večjezično razsežnost .
Od takrat naprej pa družina wordnet samo še raste ; združenje Global WordNet Association2 trenutno poroča o obstoju wordnetov v 50 različnih jezikih .
Vsak sinset je opremljen z identifikacijsko kodo , informacijo o besedni vrsti in razlago , pogosto pa sinseti vsebujejo tudi primere rabe , oznako za področje , iz katerega izhaja , oziroma domeno in povezavo na ontologijo SUMO / MILO3 .
Primer sinseta za pojem { luč , svetilka } prikazuje spodnja slika.4 Slika 1 : Primer sinseta za pojem { luč , svetilka } 5.
Izdelava sloWNeta Slovenski wordnet sem skušala izdelati s pomočjo že obstoječih virov .
Po vzoru uspešno izdelanih wordnetov za številne jezike sem sledila t. i. razširitvenemu modelu ( Vossen : 1998 ) , ki prevzema strukturo in relacije iz angleškega WordNeta .
Osnovni nabor sinsetov sem pridobila z avtomatskim prevajanjem srbskega wordneta s pomočjo slovensko-srbskega slovarja , ki sem jih nato tudi ročno pregledala in popravila ( glej Erjavec in Fišer : 2006 ) .
Nadaljnji razvoj je izhajal iz Princeton WordNeta ( PWN ) in je potekal v dveh delih .
Prevodne ustreznice za literale , ki imajo v PWN samo en pomen in jih torej ni potrebno razdvoumljati , sem izluščila iz prostodostopnih spletnih virov , kot je Wikipedija ( glej Fišer in Sagot : 2008 ) .
Z večbesednimi literali pa sem se spopadla s pomočjo besedno vzporejenega paralelnega korpusa , iz katerega sem izluščila večjezični leksikon in ga primerjala z že obstoječimi wordneti za te jezike ter slovenskim iztočnicam pripisala ustrezen pomen ( glej Fišer : 2007 ) .
V najnovejši različici sloWNeta je tako 19.582 različnih literalov , organiziranih v 16.886 sinsetov , kar predstavlja četrtino vseh pojmov iz PWN .
Slovenski wordnet vsebuje tako enobesedne ( 11.099 ) kot večbesedne literale ( 8.483 ) .
Zaradi virov in metod , ki sem jih za izdelavo wordneta uporabila , je v izdelanem wordnetu največ samostalnikov ( 15.406 oz. 91 %).
Podrobnejša analiza sloWNeta je predstavljena v Fišer in Erjavec ( 2008 ) .
Zaključek V prispevku sem predstavila slovenski semantični leksikon tipa wordnet , ki je bil avtomatsko izdelan na podlagi prosto dostopnih večjezičnih virov , kot so večjezični korpusi in leksikoni .
sloWNet je pod licenco Creative Commons prosto dostopen v raziskovalne namene na naslovu http://nl.ijs.si/slownet/ .
Trenutno v okviru projekta JOS5 ( Erjavec in Krek : 2008 ) poteka ročno označevanje korpusa jos100k s pomeni iz sloWNeta s ciljem , da izdelamo semantično označen korpus , ki bi nato služil kot učna množica za avtomatsko razdvoumljanje večpomenskih besed .
V zadnjem desetletju so na njuni podlagi izdelali podobne leksikalne zbirke za mnoge druge jezike , pri čemer so raziskovalci uporabili predvsem dva pristopa ; gradnjo neodvisnih besednih mrež , ki so jih kasneje združili v večjezične leksikalne zbirke , in prevajanje vsebine leksikalnih zbirk v ciljni jezik s prevzemanjem relacij med posameznimi vnosi .
Slednji pristop je priljubljen predvsem zaradi možnosti avtomatizacije procesa in poenotene strukture dobljenih zbirk , zato ga v prispevku preizkusimo za gradnjo slovenske besedne mreže in rezultate primerjamo z jezikovnomotivirano besedno mrežo , ki smo jo izdelali s pomočjo korpusa Fida in drugih eno - in večjezičnih virov za slovenščino .
Najpomembnejša razlika je , da mentalni leksikon ni in ne more biti zapisan .
V primerjavi z mentalnim leksikonom so leksikalne zbirke veliko bolj omejene , njihova organizacija je močno poenostavljena , vsebina pa nespremenljiva in kmalu postane zastarela , prav tako je v zbirke vključenih tudi razmeroma malo informacij o določenem leksemu ( Aitchison 2004 : 10 – 15 ) .
Ta obsežna projekta sta v zadnjih letih pospešila razvoj podobnih leksikalnih zbirk tudi za številne druge jezike , na primer za bolgarski , češki , grški , romunski , turški in srbski jezik v okviru projekta BalkaNet1 , pri čemer raziskovalci največkrat uporabljajo dva pristopa : gradnjo neodvisnih besednih mrež z naknadnim združevanjem v večjezične leksikalne zbirke in razširitveni model , po katerem sinonimske nize besed ( sinsete ) , ki predstavljajo posamezne leksikalne pojme ( npr. avto , avtomobil ) , prevedejo v ciljni jezik in prevzamejo relacije med njimi .
Razpravo sklenemo z vrednotenjem rezultatov in s primerjavo razširitvene besedne mreže z jezikovnomotivirano , ki smo jo izdelali z referenčnim korpusom Fida in s pomočjo drugih različnih eno - in večjezičnih jezikovnih virov za slovenščino .
Medtem ko sta struktura in podrobna organizacija pojmov v posameznih zbirkah različna , si vse prizadevajo predstaviti hierarhijo jezikovno neodvisnih pojmov in uporabljajo podobne relacije za ustvarjanje povezav med posameznimi pojmi .
2.1 WordNet Začetki WordNeta segajo v osemdeseta leta minulega stoletja , ko je George A. Miller z Univerze v Princetonu začel preizkušati prvo relacijsko podatkovno zbirko za angleški jezik .
Sčasoma se je razvila v najobsežnejšo podatkovno zbirko te vrste in danes jo strokovnjaki uporabljajo za najrazličnejše računalniške aplikacije , povezane z obdelavo naravnega jezika .
Semantične relacije , kot so hipo - in hipernimija ter meronimija , povezujejo sinsete ( { avto , avtomobil } -> { vozilo } ) , leksikalne relacije , kot je protipomenskost , pa veljajo zgolj med posameznimi leksemi ( lep – grd ) ( Fellbaum 1998 : 3 – 17 ) .
Vsi jezikovno odvisni moduli so med seboj povezani z jezikovno neodvisnim , imenovanim interlingual index ( ILI ) .
Z modulom osnovnih pojmov in ontologijo domen pa je omogočena večja združljivost različnih jezikovno neodvisnih komponent , saj prispeva enotno hierarhično strukturo za najpomembnejše pojme in seznam področnih oznak ( Vossen 2005 : 5 – 11 ) .
2.3 Uporabnost leksikalnih podatkovnih zbirk Leksikalne zbirke z eksplicitno izraženimi semantičnimi relacijami med leksemi so zelo uporabne pri računalniški obdelavi naravnega jezika .
S pomočjo semantičnih odnosov je mogoče meriti semantično razdaljo med leksemi , kar nam pomaga pri avtomatskem razdvoumljanju večpomenskih besed ( ang. automatic sense disambiguation ) .
Leksika je urejena v pomenska polja , ki računalniku nudijo širši kontekst za iskanje informacij o tem , kateri pomen besede je mišljen v določenem kontekstu .
Priklic relevantnih besedil pa je s predstavljenimi leksikalnimi zbirkami mogoče izboljšati z identifikacijo dodatnih besed , ki bodo najverjetneje v istem sobesedilu kot iskane besede .
Nenazadnje pa je WordNet kot podatkovna zbirka s splošnim besediščem tudi trdna osnova za kasnejši razvoj terminoloških zbirk z najrazličnejših strokovnih področij , ki so nato kot samostojna orodja uporabna za številne aplikacije na ozko določenih področjih .
3 Gradnja novih leksikalnih podatkovnih zbirk Za gradnjo novih , WordNetu podobnih leksikalnih zbirk , sta najbolj razširjena dva pristopa .
Raziskovalne skupine so ob upoštevanju skupnih smernic neodvisno razvile zbirke za svoje jezike , nato pa so te neodvisne zbirke skušale združiti .
Med gradnjo neodvisnih podatkovnih zbirk strokovnjaki sprejeli številne subjektivne odločitve , ki so botrovale temu , da so se končane zbirke med seboj precej razlikovale , pri čemer razlogi za razlike največkrat niso bili jezikovni , temveč je do njih prihajalo zaradi različnih subjektivnih odločitev glede sestave zbirk .
Diskrepance med posameznimi zbirkami skuša čim bolj zmanjšati drugi pristop , ki zahteva strogo upoštevanje meril za gradnjo angleškega WordNeta in skupnih objektivnih odločitev .
Po zaključku projekta EuroWordNet sta nastali leksikalni zbirki za švedski in ruski jezik , rezultat projekta BalkaNet ( Tufis in dr. 2004 ) pa so besedne mreže za bolgarski , grški , romunski , srbski in turški jezik .
Slika 1 : Klasifikacija prevodnih ustreznic ( prirejeno po Bentivogli in dr. 2004 ) 3.1 Izdelava slovenske besedne mreže z razširitvenim pristopom Strog razširitveni pristop za gradnjo slovenske mreže s splošnim besediščem smo preizkusili na pomenskem polju | sorodstvo | .
3.1.1 Kulturnospecifični pojmi V prevzetem hierarhičnem drevesu so očitni sinsete z biblijsko vsebino : { Marija , devica Marija } ( ang. { Mary , Virgin Mary , The Virgin , Blessed Virgin , Madonna } ) , { Abraham } ( ang. { Abraham , Ibrahim } ) , { Benjamin } ( ang. { Benjamin } ) , { Izak } ( ang. { Isaac } ) , { Izmael } ( ang. { Ishmael } ) , { Isahar } ( ang. { Isaachar } ) , { Jakob } ( ang. { Jacob } ) , { Jožef } ( ang. { Joseph } ) , { Juda } ( ang. { Judah } ) , { Metuzalem } ( ang. { Methuselah } ) , { Noe } ( ang. { Noah } ) , { Ruben } ( ang. { Rueben } ) , { Simeon } ( ang. { Simeon } ) in { predpotopni očak } ( ang. { antediluvian , antediluvian patriarch } ) .
Ti sinseti so problematični iz dveh razlogov : prvič , naš cilj je gradnja besedne mreže s splošnim besediščem , kamor našteti sinseti zagotovo ne sodijo in jih pri gradnji neodvisne leksikalne zbirke najverjetneje ne bi vključili .
Slika 2 : Rezultat razširitvenega pristopa 3.1.2 Denotacijske razlike V primerjavi s slovenščino je v angleščini veliko več izrazov za pojem prednik , saj je 14 različnih izrazov zanj razdeljenih na sedem različnih sinsetov .
S primerjavo vključenih definicij opazimo , da takšna drobitev pomenov ni nujno upravičena ( glej sliko 3 ) .
3.1.4 Semantične relacije Kot smo že omenili , temelji razširitveni pristop na predpostavki , da relacija , ki povezuje sinseta v izvornem jeziku , povezuje tudi ekvivalentna sinseta v ciljnem jeziku .
Pri tem imamo v mislih ohranjanje denotativnega pomena , konotativnosti , pragmatičnega vidika ( zvrstne , slogovne in siceršnje zaznamovanosti ) pa ne upoštevamo .
Tabela 1 : Hallidayevi identifikacijski stavki za določanje sopomenk Stavek Primer Odgovor Če je x , potem je tudi y. Če je avto , potem je tudi avtomobil .
Tabela 2 : Hallidayevi identifikacijski stavki za določanje nad - in podpomenk Stavek Primer Odgovor Če je y , potem je tudi x. Če je nemški ovčar , potem je tudi pes .
Medtem ko sinset za pojem stari oče kot sinonime obravnava tako nevtralne kot zaznamovane lekseme , so le-ti pri pojmu oče ločeni .
Slika 4 : Nad - in podpomenske relacije v angleškem WordNetu s prevodnimi ustreznicami Primer , pri katerem se zastavi vprašanje , ali se relacije med sinseti zares ohranijo tudi v ciljnem jeziku , je angleški sinset { father-in-law } , ki je podpomenka pojma oče .
Naslednji velik problem nad - in podpomenskosti je nesistematično obravnavanje ženskih oblik samostalnikov , saj sta na primer forefather in foremother obravnavana kot kohiponima , ancestress pa kot podpomenka pojma ancestor .
Tabela 3 : Hallidayevi identifikacijski stavki za določanje protipomenk Stavek Primer Odgovor X in y sta oba neke vrste z , vendar je x nasprotje y. Moški in ženska sta oba neke vrste človek , vendar je moški nasprotje ženske .
da Y in x sta oba neke vrste z , vendar je y nasprotje x. Ženska in moški sta oba neke vrste človek , vendar je ženska nasprotje moškega .
3.2 Poskus izdelave jezikovnomotivirane slovenske besedne mreže Iz zgornje analize besedne mreže , ki smo jo dobili s pomočjo razširitvenega pristopa , lahko ugotovimo , da že angleški WordNet , iz katerega smo izhajali , vsebuje številne nekonsistentne in vprašljive rešitve , ki jih je slovenska mreža zaradi metodologije izdelave podedovala .
Kandidate zanjo smo pridobili s pomočjo angleškega WordNeta , enojezičnega referenčnega korpusa ( Fida8 ) , dvojezičnih in enojezičnih slovarjev ( Veliki angleško-slovenski slovar , Angleško-slovenski in Slovensko angleški pravni slovar , Slovar slovenskega knjižnega jezika in Slovenski pravopis ) in strokovnih priročnikov ( Eurovoc , Družinsko pravo ) .
Zaradi obsežnosti in razvejanosti pomenskega polja smo se omejili samo na sorodnike v ravni črti nazaj ( predniki ) , izpustili pa vse sorodnike v ravni črti naprej ( potomci ) in sorodnike v stranski črti ( bratje , sestre , strici , tete , bratranci , sestrične ) .
Prav tako smo izpustili kolokacije , ki so sicer imele precej zadetkov v korpusu , vendar je njihov pomen bolj opisne kot kvalifikatorske narave in ga nismo mogli natančno določiti niti s pomočjo konkordanc niti z uporabo drugih virov ( bližnja sorodnica , bližnji sorodnik , bližnje sorodstvo , daljna sorodnica , daljni sorodnik , daljno sorodstvo , davni sorodnik , najožja sorodnica , najožji sorodnik , najožje sorodstvo , ožja sorodnica , ožji sorodnik , ožje sorodstvo , širše sorodstvo ) .
Slika 5 : Seznam kandidatov za slovensko semantično mrežo 3.2.1 Uporaba korpusa pri gradnji semantičnih leksikonov Ostalo nam je nekaj manj kot sto kandidatov , med katerimi smo s pomočjo konkordanc ali razširjenega sobesedila v korpusu Fida skušali najti semantične in leksikalne relacije .
V nadaljevanju predstavljamo nekaj primerov , na podlagi katerih smo lahko sklepali na relacije med posameznimi pojmi .
Tabela 4 : Primeri relacij , najdenih v korpusu ( vir : Fida ) Sobesedilo Relacija ata v pomenu oče Jezus se je na svojega Očeta obračal z besedo " Abba " , kar bi lahko prevedli z " očka , ata , tata , papa " .
sopomenskost : očka – ata – tata – papa – oče ljubkovalni naziv za očeta , atek sopomenskost : očka – atek Kaj delaš ?
protipomenskost : ata – mama Ob zadnjem slovesu od dragega moža , ata in starega ata razlikovanje med ata in stari ata Našega ljubega moža , ata in dedka bomo na zadnjo pot pospremili /.../ razlikovanje med ata in dedek ata v pomenu stari oče , dedek Ata Janez ( dedek ) ga je kar dobro naučil .
Oče je pripovedoval , da je bila velikokrat nergava razlikovanje med ata in oče Ob nenadni , boleči izgubi našega ljubega moža , očeta , ata , sina in brata razlikovanje med ata in oče Zgornji primeri upravičujejo vključevanje leksemov ata , atek , ati , oče , očka in tata v isti sinset .
Iz najdenih primerov je prav tako mogoče ugotoviti protipomenski odnos med leksemoma mama – ata ter dokaze , da ima lahko ata dva različna pomena .
Zato smo v slovensko besedno mrežo leksem ata vključili dvakrat , enkrat v sinset { ata1 , atek , ati , oče , očka , tata } , drugič pa v sinset { ata2 , ded , dedek , stari ata , stari oče } .
Posamezna pomena smo med seboj ločili s številkama ; številko 1 ima pomen , ki se v korpusu pojavi večkrat .
S poizvedbo v korpusu dobimo naslednje rezultate : Tabela 5 : Rezultati poizvedbe po kolokaciji » nadomestna mati « ( vir : Fida ) pomen št. poj .
sobesedilo nadomestna mati = krušna mati 10 Pod določenimi pogoji se rejništvo nadomestnim materam lahko prizna tudi kot poklic /…/.
nadomestna mati = biološka mati 5 Zarodke vsadijo v maternice drugih , nadomestnih mater , ki prejemajo ustrezne hormone za vzdrževanje nosečnosti .
Če iščemo še kolokaciji nadomestni oče in nadomestni starši , ugotovimo , da je v korpusu zastopan samo prvi pomen , zato smo v slovensko besedno mrežo vključili vse tri kolokacije glede na prvi pomen , drugi pomen pa smo upoštevali samo za kolokacijo nadomestna mati .
V tem pomenskem polju smo upoštevali samo pomen leksema prednik , ki označuje sorodnike v ravni črti nazaj , ne pa človekovih oddaljenih prednikov ( kot so Slovani , neandertalec ipd. ) .
To pa ob upoštevanju dejstva , da podpomenka podeduje vse lastnosti svojih nadpomenk , ni mogoče , saj bi v tem primeru trdili , da so krušni starši in posvojitelji otrokovi predniki in njegovi krvni sorodniki .
Različne izraze za porodnice smo obravnavali kot podpomenke sinseta { porodnica } , pri čemer smo izpustili izraza četrtorodnica in petorodnica , ker menimo , da termina s tako ozkega področja ne sodita v besedno mrežo splošnega besedišča , ki smo jo začeli zgraditi za začetek .
3.2.2 Grafična predstavitev rezultatov Rezultate , dobljene s pomočjo korpusa , smo grafično predstavili v obliki hierarhičnega drevesa .
Žnske oblike samostalnikov , ki smo jih razvrstili v isti sinset kot njihove moške ustreznice , bi v leksikalni zbirki opremili z oznako ženska oblika .
Tudi besedam , ki pripadajo različnim registrom , a jih kljub temu obravnavamo kot sopomenke nevtralnim izrazom , bi bilo treba dodati oznako ( npr. pogovorno , ljubkovalno , knjižno , medicinsko , pravno ) .
Pri grafični predstavitvi rezultatov naletimo na težave pri nad - in podpomenskem odnosu med sinsetoma { starš1 } -> { ata1 , oče , ate , atek , atej , ati , oča , oče , očka , papa , tata } in sinsetoma { biološki roditelj , biološki starš , naravni roditelj , naravni starš pravi roditelj , pravi starš , rodni starš } -> { biološki oče , naravni oče , pravi oče , roditelj , rodnik , rodni oče } , saj je poleg teh zaznati tudi povezavo med sinsetoma { ata1 , oče , ate , atek , atej , ati , oča , oče , očka , papa , tata } -> { biološki roditelj , biološki starš , naravni roditelj , naravni starš pravi roditelj , pravi starš , rodni starš } .
V trenutku , ko ima isti sinset več kot eno nadpomenko , se drevesna struktura spremeni v mrežo , kar je problematično za računalniške aplikacije .
Gradnja besednih mrež pri tem ni nobena izjema , česar se moramo pri delu z njimi vselej zavedati .
Ker smo pri tem pristopu bolj upoštevali dejansko rabo , se v besedni mreži ne pojavljajo neleksikalizirani pojmi , leksikalizirani pa so urejeni v skladu z njihovim dejanskim pojmovanjem v slovenskem jeziku in kulturi .
Postopek pridobivanja informacij za izdelavo besedne mreže bi bil veliko hitrejši in enostavnejši , če bi imeli na razpolago ustrezen vzporedni angleško-slovenski korpus , kjer bi lahko preverili prevodne ustreznice za posamezne izraze .
Zelo koristno bi bilo tudi , če bi bil korpus Fida že razdvoumljen , kar je sicer eden od možnih področij uporabe izdelane besedne mreže za slovenski jezik , vendar je razdvoumljanje je mogoče tudi z drugimi metodami .
Iskanje po lemi prikaže 2619 zadetkov , vendar niso vsi relevantni .
Priznati pa je treba , da je tak način izdelave besednih mrež zelo dolgotrajen in drag postopek , kar je velika slabost v primerjavi z razširitvenim pristopom , ki omogoča visoko stopnjo avtomatizacije .
Znano je , da računalniško jezikoslovje pogosto posega po delnih ( in udobnih ) rešitvah , s katerimi ( tradicionalno ) jezikoslovje nikoli ni povsem zadovoljno in ki se na prvi pogled zdijo veliko bolj uporabne , kot tudi dejansko so ( Čermák 2002 : 276 ) .
Zato za nastanek resnično uporabne leksikalne podatkovne zbirke za slovenski jezik nujno potrebujemo sodelovanje obeh disciplin , ki bo z vmesnim pristopom obrodilo cenovno še sprejemljivo , a vsestransko uporabno rešitev .
Ključne besede : wordnet , semantično označevanje korpusov , avtomatsko razreševanje večpomenskosti , ujemanje med označevalci , podobnost pomenov , združevanje pomenov 1.
V ta okvir je umeščena tudi pričujoča raziskava , v kateri korpus označujemo s pomeni iz semantičnega leksikona sloWNet ( glej razdelek 2.1 ) , medtem ko s pomenskimi shemami leksikalne zbirke FrameNet slovenski korpus označujejo v okviru projekta Sporazumevanje v slovenskem jeziku ( glej Krek 2008 ) .
Semantično označeni korpusi so nepogrešljivi vir za razvoj sodobnih jezikovnih tehnologij , kot so avtomatsko razreševanje večpomenskosti , iskanje informacij po obsežnih zbirkah dokumentov in strojno prevajanje , prav tako pa koristijo tudi v uporabnem jezikoslovju na področju leksikografije in jezikovne pedagogike ter v splošnem jezikoslovju za proučevanje pogostosti in sopojavljanja posameznih pomenov .
Meje med posameznimi pomeni so pogosto zabrisane , razlikovanje med njimi pa je vsaj do neke mere subjektivno ( Lakoff 1987 ) .
Kritiki kategorizacije besednih pomenov opozarjajo , da so le-ti izpeljani , prilagojeni ali celo ustvarjeni s konkretnim kontekstom , v katerem je beseda uporabljena , zaradi česar jih ni mogoče vnaprej našteti v leksikonu ( Kilgarri ?
Poleg tega se pod predpostavko , da imajo besede določljivo število ločenih pomenov in podpomenov , takoj pojavi tudi vprašanje , kako to število določiti in kako pomene klasificirati , kar je ena od osrednjih tem v leksikografiji in leksikalni semantiki .
Zato se semantično označevanje korpusov precej razlikuje od označevanja na oblikoslovni in skladenjski ravni .
Nekaj semantično označenih korpusov , ki so večinoma nastali v okviru iniciative SENSEVAL ( Kilgarriff 2001 ) , sicer že obstaja , vendar so ti razmeroma majhni , pogosto področno-specifični , predvsem pa so na voljo le za angleščino in nekatere druge večje jezike .
V prispevku predstavljamo prvi poskus semantičnega označevanja korpusa za slovenščino , ki je potekalo v okviru projekta Jezikovno označevanje slovenščine ( Erjavec et al. 2010 ) .
Najprej na kratko povzamemo najbolj razširjene metode za semantično označevanje in predstavimo vire , ki smo jih v raziskavi uporabili .
Peti razdelek vsebuje vrednotenje rezultatov , šesti pa razpravo o težavah , na katere smo pri delu naleteli , ter predloge za izboljšave .
Prispevek sklenemo s primerjavo s sorodnimi projekti in načrti za prihodnje delo .
1.
Namesto klasičnega slovarja kot nabor pomenov uporabljamo semantični leksikon sloWNet ( glej razdelek 2.1 ) .
Eden prvih poskusov semantičnega označevanja s pomočjo semantičnega leksikona je bilo ročno označevanje konkordanc iz korpusa Brown ( Landes et al. 1998 ) , ki naj bi služil kot učna množica za kasnejše avtomatsko označevanje .
Na podoben način so bili označeni tudi nekateri korpusi za druge evropske jezike , npr. baskovščino ( Agirre et al. 2006 ) , katalonščino in španščino ( Atserias et al. 2006 ) .
Ker pa je ročno semantično označevanje izjemno zahtevno in dolgotrajno in ker so semantično označeni predvsem angleški korpusi , so tovrstne vire za druge jezike z avtomatskimi pristopi skušali pridobiti s pomočjo besedno poravnanih vzporednih korpusov .
Večjezični pristopi temeljijo na predpostavki , da je semantične oznake v izvornem jeziku preko prevodnega razmerja v poravnanem korpusu mogoče uspešno prenesti v ciljni jezik ( Bentivogli , Forner in Pianta 2004 ) .
Ker je cilj te raziskave izdelava prvega semantično označenega korpusa za slovenščino , ki nam bo v nadaljevanju služil kot učna in testna množica za jezikovno-tehnološke aplikacije , zaenkrat ostajamo pri ročnem označevanju .
Za razliko od sekvenčnega označevanja , pri katerem označujemo celoten korpus besedo za besedo , smo se v tej raziskavi odločili za ciljno semantično označevanje ( Miller et al. 1994 ) , kjer označujemo samo določene besede v korpusu .
Da je ciljno označevanje učinkovitejše od sekvenčnega , poudarjajo številni avtorji ( glej Kilgarriff 1998 ) , saj na ta način semantične lastnosti določene besede obravnavamo hkrati , zaradi česar je označevanje bolj konsistentno .
2.
Vsak sinset je opremljen z identifikacijsko kodo , informacijo o besedni vrsti in razlago , pogosto pa sinset vsebuje tudi primere rabe , oznako za področje , iz katerega izhaja , in druge informacije .
Primer sinseta za pojem { luč , svetilka } prikazuje Slika 1.
Semantična razmerja , kot so nad - in podpomenskost ter meronimija , povezujejo pojme oz. sinsete , leksikalna razmerja , kot je protipomenskost , pa veljajo zgolj med posameznimi literali .
Slika 1 : Primer sinseta za pojem { luč , svetilka } Prva tovrstna zbirka je bila izdelana za angleški jezik ( Fellbaum 1998 ) .
Vendar angleškega wordneta raziskovalci niso samo uporabljali , temveč so začeli ustvarjati podobne zbirke tudi za druge jezike .
Od takrat naprej pa družina wordnet samo še raste ; združenje Global WordNet Association1 na svojih spletnih straneh trenutno poroča o obstoju wordnetov v 50 različnih jezikih , od arabskega do turškega , med njimi je tudi slovenščina .
Slovenski wordnet je bil izdelan avtomatsko z izkoriščanjem že obstoječih korpusnih in leksikalnih virov , pri čemer ohranili strukturo in pojme , ki so zastopani v angleškem wordnetu ( Princeton WordNet , PWN ) .
Osnovni nabor sinsetov smo pridobili z avtomatskim prevajanjem srbskega wordneta s pomočjo slovensko-srbskega slovarja , ki smo jih nato tudi ročno pregledali in popravili ( glej Erjavec in Fišer 2006 ) .
Nadaljnji razvoj je izhajal iz angleškega wordneta ( Princeton WordNet , PWN ) in je potekal v dveh delih .
Nazadnje smo se pomočjo večjezičnih vzporednih korpusov in wordnetov za druge jezike spopadli še z večpomenskimi literali .
V najnovejši različici sloWNeta je tako 19.582 različnih literalov , organiziranih v 16.886 sinsetov , kar predstavlja četrtino vseh pojmov iz PWN .
Slovenski wordnet vsebuje tako enobesedne ( 11.099 ) kot večbesedne literale ( 8.483 ) .
Najpogostejša je najsplošnejša domena faktotum , ki ji sledijo koncepti iz domen zoologija , botanika in biologija , ki so bili pridobljeni večinoma iz Wikivirov .
2.2 Korpus jos100k Korpus jos100k ( Erjavec et al. 2010 ) , ki smo ga v raziskavi označili na pomenski ravni , je bil razvit v okviru projekta JOS – Jezikovno označevanje slovenščine.2 Je enojezičen in uravnotežen , vzorčen je bil iz 620-milijonskega referenčnega korpusa FidaPLUS ( Arhar in Gorjanc 2007 ) .
Vsebuje 100.000 besed , ki so jim bile ročno pripisane oblikoskladenjske oznake , prav tako so bile ročno pregledane tudi vse njihove leme .
Zadnji , semantični nivo označevanja , ki ga korpus vsebuje , pa je opisan v nadaljevanju prispevka .
Skladenjske oznake so ločene od korpusa , skladenjski odnosi v stavku pa so vezani na identifikatorje pojavnic ( npr. < link type = " dol " targets = " # F0020003.557.2.4 # F0020003.557.2.3 " / > ) .
Semantične oznake so izbranim samostalnikom v korpusu pripisane v elementu < term > , ki vsebuje vir oznak ( type = " sloWNet " ) in identifikator sinseta , s katerim je beseda označena ( npr. key = " ENG20-08114200-n " ) .
Ker korpus vsebuje oznake tako za besede kot besedne zveze , je označeno tudi jedro označene zveze ( npr. sortKey = " kraj " ) , nekatere pa vsebujejo tudi opombo označevalca ( npr. subtype = " missing _ hyponym " ) .
Slika 2 : Primer iz korpusa JOS100k : » To je turističen kraj .
Iz korpusa jos100k smo izluščili vse samostalnike , ki se v korpusu pojavljajo 30- ali večkrat in so hkrati tudi v sloWNetu , s čimer smo dobili 102 samostalnika .
Kot vidimo , je najpogostejši samostalnik leto s 346 pojavitvami , ostale besede so precej redkejše , saj se jih več kot 100-krat v korpusu pojavi le še šest ( dan , delo , čas , človek , država in svet ) , seznam pa se konča s sedmimi besedami , ki se v korpusu pojavijo 30-krat ( besedilo , oče , pogled , predstavnik , projekt , razvoj in cesta ) .
Skupno število pojavitev samostalnikov , ki smo jih v korpusu označili , je 5.431 oziroma povprečno 53,2 pojavitev na besedo .
3.2 Postopek označevanja Kot je bilo že omenjeno , je opisana raziskava prvi poskus semantičnega označevanja pri nas .
Z njo želimo predvsem preveriti primernost razvitega semantičnega leksikona sloWNet kot repozitorija pomenov in zasnovati učinkovito shemo za semantično označevanje .
Ker hkrati želimo , da bi bil korpus označen dovolj natančno , da bi bil uporaben za korpusnojezikoslovne raziskave in kot učna množica za jezikovnotehnološke aplikacije , smo se označevanja v tej prvi fazi lotili ročno , v prihodnosti pa ga nameravamo razširiti z avtomatskimi pristopi .
Zato so označevalci najprej pregledali in popravili sinsete v wordnetu in se nato lotili označevanja korpusa .
Shematski prikaz postopka označevanja prikazuje Slika 3.
Slika 3 : Prikaz postopka semantičnega označevanja korpusa Korpus so označevali štirje označevalci , študentje 2. letnika Medjezikovnega posredovanja .
Iz korpusa smo izluščili konkordance za izbrane besede in jih shranili v ločene datoteke , po eno za vsako besedo .
Za popravljanje sloWNeta in označevanje vseh pojavitev izbrane besede v korpusu je bil vedno zadolžen isti označevalec .
Med validacijo sloWNeta so označevalci pregledali vse sinsete , v katerih se njihova beseda pojavlja ( vse pomene te besede ) , pa tudi vse večbesedne zveze , v katerih se njihova beseda v sloWNetu pojavlja ( ponavadi , ne pa vedno , v vlogi podpomenke dodeljene besede ) .
Označevanje je potekalo v programu MS Excel , v katerem so označevalci prejeli konkordance za besede , ki so jih morali označiti .
Po pregledu sobesedila so označevalci za izbrano besedo poiskali najustreznejši sinset v sloWNetu in besedo v korpusu označili tako , da so ID izbranega sinseta vnesli v stolpec C , morebitne opombe pa vpisali v stolpec D. Pri tem so upoštevali definicijo sinseta v wordnetu , področno oznako in semantična razmerja , predvsem nadpomenko , pa tudi ekvivalentni sinset v angleškem wordnetu .
Primer označevanja večbesedne zveze zemljiška knjiga prikazuje Slika 4.
Stolpec C vsebuje ustrezen identifikator , stolpec D pa opombo , da gre za večbesedno zvezo .
Najbolj tipičen primer za to situacijo so večpomenske besede , ki so bile v wordnet zaradi uporabljenih virov pri avtomatskem generiranju sinsetov dodane samo za določene pomene , za ostale pa ne , čeprav tudi ti pojmi v wordnetu obstajajo .
Podobno velja za večbesedne zveze , ki se pojavljajo v korpusu , v sloWNetu pa jih ni bilo .
Če so označevalci za manjkajočo večbesedno zvezo našli ustrezen sinset , so ga dodali v sloWNet in ga uporabili za označevanje večbesedne zveze v korpusu ( npr. večbesedna zveza javna hiša , ki se pojavi v korpusu in nima ustreznice v sloWNetu , vendar sinset zanjo v njem obstaja , zato ga je bilo zgolj potrebno izpolniti ) .
V nasprotnem primeru so označili le posamezno besedo s splošnejšim pomenom , ki v wordnetu obstaja .
Tako npr. za večbesedno zvezo enopartijski sistem v angleškem wordnetu ne obstaja noben ustrezen pojem , zato ga tudi v slovenski wordnet ni bilo mogoče dodati .
Kadar je bila beseda , ki so jo označevali , lastno ime ali del lastnega imena , ki ga v wordnetu niso našli , smo jih prosili , da vnesejo opombo , da gre za lastno ime .
V primerih , ko za pojavitev besede v korpusu niso našli nobenega ustreznega pomena ne v sloWNetu niti v PWN , naj bi beseda ostala neoznačena .
Rezultati označevanja Označevalci so v korpusu označili 5.431 pojavnic , ki so jim pripisali 517 različnih pomenov oz. povprečno 5,1 pomen na samostalnik .
Sedmim samostalnikom so pripisali enega samega ( delavec , ministrstvo , minuta , muzej , odstotek , podjetje , sezona ) , največ , 14 , pomenov pa so pripisali besedama čas in vrsta .
Več kot deset pomenov je bilo pripisanih še trem besedam : prostor , konec in življenje .
V večini teh primerov gre za kulturno-specifične pomene , ki jih bo potrebno naknadno dodati v sloWNet ( npr. voda na nekogaršnji mlin ) .
Največ , šest , jih imata besedi sistem in volja ( npr. varnostni sistem , transportni sistem , imunski sistem , kreditni sistem , pravni sistem in pravosodni sistem ) .
V korpusu je tako 296 ( 5,5 %) pojavnic označenih kot del večbesedne zveze , pri približno še enkrat tolikih pa so označevalci identificirali večbesedno zvezo , ki v PWN manjka .
Tabela 2. število pomenov , ki so bili uporabljeni pri označevanju korpusa .
Glede na to , da se število uporabljenih pomenov na prvi pogled zdi zelo veliko , smo preverili , med koliko pomeni v sloWNetu so za te besede označevalci sploh izbirali .
Izkaže se , da se izbrane besede v sloWNetu pojavljajo v kar 1.650 pomenih , med katerimi je 38 % večbesednih .
Število pomenov v sloWNetu niha med 1 ( npr. za samostalnik odstotek ) in 50 ( za samostalnik zakon , med katerimi so tudi številna imena fizikalnih , matematičnih in drugih zakonov ) .
Vendar se je treba zavedati , da je korpus jos100k , ki smo ga za označevanje uporabili , majhen , zato bi bilo izločanje pomenov besed iz sloWNeta , ki se ne pojavijo v 100.000 besed velikem korpusu , v tej fazi prej škodljivo kot koristno .
Tak primer je beseda stran , ki se v korpusu ne pojavi v štirih od 10 pomenov iz sloWNeta , se pa ti pomeni pojavljajo v korpusu FidaPLUS : 1 ) zunanja površina predmeta3 2 ) poseben vidik problema 3 ) popisan ali potiskan list ( še posebej rokopisa ali knjige ) in 4 ) ena od strani lista ( v knjigi , reviji , časopisu , pismu ipd. ) ali besedilo oz. slike , ki jih list vsebuje .
Tak primer je beseda sodišče , ki se je napačno pojavila v treh sinsetih : 1 ) dvorišče , ki je deloma ali v celoti obkroženo z zidom ali stavbami – pravilno notranje dvorišče 2 ) kralj in njegovi svetovalci , ki vladajo državi – pravilno dvor in 3 ) družina in osebje kralja ali princa – pravilno dvor Poleg napak v sloWNetu se je izkazalo tudi , da so v sloWNetu glede na izkazano rabo v korpusu nekateri pomeni manjkali , zato jih je bilo potrebno dodati .
Tak primer je beseda člen , za katero je v sloWNetu , ki je bil generiran z avtomatskimi metodami , obstajal samo pomen v smislu povezovalnega elementa , ne pa tudi v smislu člena v pravnem dokumentu ali slovnične kategorije .
Ker igra zastopanost pomenov v korpusu zelo pomembno vlogo pri vseh nadaljnjih jezikovnotehnoloških aplikacijah , v katerih bi označeni korpus v prihodnje uporabili kot učno množico , smo analizirali tudi distribucijo uporabljenih pomenov v korpusu .
Število pomenov , ki se v korpusu pojavijo v več kot 10 % , sicer naraste na 238 , kar pa še vedno znaša le 46 % vseh uporabljenih pomenov .
Med primeri , ki bi jih v tem zmanjšanem korpusu ohranili , bi bili skoraj izključno pomeni enobesednih leksemov , saj je večbesednih zvez , ki se pojavljajo v več kot 10 % , zgolj 12 ( npr. človekove pravice , predsednik vlade , vrhovno sodišče ) .
Vrednotenje označevanja Za evalvacijo označevanja smo naključno izbrali 10 % oz. 513 besed , ki sta jih povsem neodvisno označila še dva označevalca , ter nato primerjali , v kolikšni meri so se oznake obeh označevalcev ujemale .
V vzorec je bilo zajetih 97 od 102 samostalnikov .
Povprečno ujemanje med označevalcema , izraženo v odstotkih , znaša 66,7 % s standardno deviacijo 30,9 , kar pomeni , da ujemanje pri posameznih besedah močno niha .
Med temi samostalniki je večina tistih , ki so bili v prvem krogu označevanja označeni kot enopomenski ( izjemi sta le ministrstvo in podjetje , pri katerih je prvi označevalec besedi pripisal povsem ustrezen splošnejši pomen , drugi pa je označil prav tako ustrezno večbesedno zvezo ) .
Ostale besede s popolnim ujemanjem med označevalcema so označene z 2 – 7 pomeni , izjema je le sistem , ki sta mu oba označevalca pripisala kar 10 različnih pomenov , pri čemer je treba poudariti , da je 6 od teh večbesednih .
Pri 7 oz. 7 % označenih besed so se pripisani pomeni povsem razhajali .
Podrobnejša analiza dvojno označenega vzorca pokaže , da je ujemanje pri najpogostejših besedah ( t.j. vseh tistih , ki se v korpusu pojavljajo več kot 100-krat ) zelo visoko in da z izjemo besede človek , ki dosega zgolj 18,75 % ujemanje ( glej razdelek 6 ) , presega 80 %.
Izjema je beseda konec , za katero ujemanje znaša kar 80 %.
Glede na to , da je v povprečju ujemanje med označevalcema razmeroma nizko , smo preverili , ali se označevalca ujemata vsaj v pripisovanju najpogostejšega pomena , ki je zelo uporaben za jezikovnotehnološke aplikacije , saj se je v številnih eksperimentih izkazalo , da je najpogostejši pomen tista spodnja meja , ki jo je v nalogah avtomatskega razreševanja večpomenskosti zelo težko preseči ( McCarthy et al. 2004 ) .
Izkaže se , da gre distribucija pomenov v vzorcu v prid tudi sicer najpogostejšemu pomenu v korpusu in da se označevalca v večini primerov pri določanju najpogostejšega pomena strinjata .
Prvi označevalec je najpogosteje izbral sinset » oseba , ki deluje v imenu drugih ljudi ali organizacij « ( ang. agent ) , drugi pa » oseba , ki zastopa druge « ( ang. representative ) .
Primerov , v katerih so razlike med pomeni minimalne ali pa celo nejasne , je v wordnetu še precej več , kar je tudi glavna kritika za rabo tega semantičnega leksikona v praksi .
Če med pomeni ne morejo razlikovati niti označevalci , je torej še toliko bolj nerealno pričakovati , da bodo med njimi sposobni ločiti avtomatski algoritmi .
Zato je nalogo nujno treba poenostaviti in preveč podobne pomene v wordnetu združiti , s čimer bomo dosegli lažje , konsistentnejše in zanesljivejše ročno označevanje korpusov , avtomatskim pristopom pa omogočili delovno okolje , ki bo obrodilo bolj uporabne rezultate .
Zato smo se pri poskusu združevanja pomenov v sloWNetu za potrebe izboljšanja semantičnega označevanja odločili za kombinacijo obeh pristopov .
Podobnost konceptov smo merili s pomočjo programskega paketa WordNet::Similarity ( Pedersen et al. 2004 ) , ki je Perlov modul za računanje različnih mer podobnosti in sorodnosti konceptov v wordnetu .
Vendar so ti rezultati lahko nezanesljivi , kadar primerjamo hierarhije , ki so zelo razvejane , z bolj revnimi semantičnimi drevesi .
Rezultat je vsota kvadratov vseh prekrivnih nizov besed , kar pomeni , da pri eni skupni besedi rezultat znaša 1 , pri dveh skupnih besedah 2 , če pa se ti dve skupni besedi pojavita v nizu , rezultat poskoči na 4.
Postopek združevanja pomenov bomo ponazorili na primeru besede človek , ki je pri evalvaciji z ujemanjem med označevalcema dosegla zelo slab rezultat ( 18,75 %).
Merjenje podobnosti pomenov s paketom Wordnet::Similarity pokaže , da sinseta ENG20-00006026-n in ENG20-02386884-n nista zelo podobna , saj sta precej daleč narazen v semantični mreži ( PL : 0,08 , WP : 0 , 56 ) , prav tako pa ne vsebujeta veliko skupnih informacij ( AL : 15 , GV : 0 , 22 ) , iz česar lahko sklepamo , da gre za napako pri enem od označevalcev .
Po drugi strani pa sinseta ENG20-00006026-n in ENG20-09624379-n ) izkazujeta veliko več podobnosti , saj sta v hierarhiji v neposredni bližini ( ENG20-00006026-n je nadpomenka ENG20-09624379-n ) , njuni definiciji pa se prav tako v precejšnji meri prekrivata .
Pomen , s katerimi je pojavitve v korpusu označil prvi označevalec , vsebuje prvi stolpec .
Pomena , ki ju je izbral drugi označevalec , sta v drugem stolpcu izpisana krepko , preostali pomeni v tem stolpcu pa so vsi ostali sinseti v slovenskem wordnetu , ki prav tako vsebujejo besedo človek .
Preostalih 5 , med katerimi je tudi pomen » Homo sapiens « , ki ga je uporabil drugi označevalec , pa bi tvorili drugo skupino pomenov , ki govori o človeku kot biološki vrsti .
Tovrstno združevanje pomenov potrdi tudi ročni pregled teh sinsetov , saj se v prvi skupini znajdejo : - » bitje , kreatura , človek « 4 - » človek : splošno poimenovanje za katerega koli pripadnika človeške rase « - » odrasel človek « - » mlad človek « - » senior , starejša oseba , starejši občan , starejši človek « - » pripadnik , privrženec , zagovornik , človek « - » neplemič , človek brez naslova « - » vodja , prvi človek « V drugi skupini pa so po združevanju pomenov naslednji sinseti : - » človek : živeči ali izumrli pripadnik družine Hominidae « - » spretni človek , Homo habilis « - » človek , Homo sapiens « - » pokončni človek , Homo erectus « S tovrstnim avtomatskim postopkom bi nabor pomenov , med katerimi morajo označevalci izbirati , precej znižali , v ilustrativnem primeru s 15 na 2 , pri čemer ostaja različno označena samo ena pojavitev besede človek .
Spodbudni rezultati so nas motivirali za dodatna testiranja , s katerimi smo s kombinacijo avtomatskega združevanja pomenov v skupine in ročnega pregleda rezultatov želeli ugotoviti mejne vrednosti posameznih statističnih mer , pri katerih je najbolj smiselno posamezne pomene besed ločevati na » podobne « in » nepodobne « .
Najboljše rezultate smo dobili s kombinacijo mejnih vrednosti , pri čemer mora par sinsetov izpolnjevati vsaj po enega iz prve ( PL , WP ) in druge skupine ( AL , GV ) : Z združevanjem pomenov se je povprečno ujemanje med označevalcema s 66 % dvignilo na 81 % .
Uporabljena metoda je prinesla izboljšanje za 43 oz. 58,9 % besed , med katerimi je pri 24 oz. 31,5 % takšnih , ki se po novem prav tako ponašajo s popolnim ujemanjem med označevalcema , tako da skupno število besed s popolnim ujemanjem zdaj znaša 49 oz. 48 % od vseh označenih v korpusu .
Te pojavitve bo potrebno pregledati ročno in ugotoviti , ali gre za slabosti predlagane metode združevanja pomenov ali za napake pri enem od označevalcev .
Sklep Semantično označevanje , ne glede na to , ali ga izvajamo ročno ali avtomatsko , je eno najtežjih vrst označevanja korpusa .
Pri oblikoskladenjskem označevanju na primer vse enote označujemo z istim naborom kategorij , pri označevanju pomena besed pa moramo za vsako besedo uporabiti drugačne kategorije .
Označevalci pri svojem delu naletijo na težave , kadar zaradi preveč podrobne razdelitve pomenov v wordnetu ne morejo ločiti med njimi in izbrati pravega .
Ujemanje pomenov so skušali izboljšati z združevanjem preveč podrobnih pomenov v bolj splošne skupine , imenovane superpomeni , kar so v enem primeru storili ročno pred označevanjem ( Palmer , Dand in Fellbaum 2007 ) , v drugem pa so že označene pomene avtomatsko združili ( Bruce in Wiebe 1998 ) , kar je rezultate izboljšalo za skoraj 10 %.
Poleg tega je kljub precejšnjemu razhajanju uporabljenih pomenov razveseljivo , da se pri izbiri najpogostejšega pomena v veliki primeri ujemajo , kar je zelo pomembno , saj je primerjava izbranih pomenov pokazala , da najpogostejši pomeni zavzemajo izrazito velik delež vseh pojavitev besed v korpusu .
Ugotavljamo , da je s sloWNetom mogoče označiti večino pojavitev v korpusu , ne glede na to , da je bil semantični leksikon izdelan na podlagi tujejezičnega vira .
Zaradi količine dela , ki nas še čaka , je prav tako neizogibna avtomatizacija označevanja , kjer vse bolj postaja popularen pristop označevanja superpomenov ( Ciaramita and Altun 2006 ) , ki jih sestavlja 26 kategorij ( npr. oseba , žival , rastlina , predmet , lastnost ) , v katere so leksikografi med razvojem wordneta razdelili samostalnike , uporabili pa so jih predvsem na področju iskanja informacij , kjer po eni strani zadošča grobo ločevanje med pomeni ( predvsem ločevanje med homonimi ) , po drugi strani pa je potreba po dobrem priklicu zadetkov zelo visoka .
Ne glede na težave , s katerimi smo se pri označevanju spopadali , pa je rezultat raziskave prvi semantično označen korpus za slovenščino , ki je pod licenco Creative Commons prosto dostopen za jezikoslovne analize ali kot učna množica za jezikovnotehnološke aplikacije na spletnem naslovu http://nl.ijs.si/jos/ , prav tako pa je na naslovu http://nl.ijs.si/slownet prosto dostopen tudi slovenski semantični leksikon sloWNet , ki smo ga uporabljali pri označevanju .
Predstavitvi wordneta in njegove uporabe v računalniških aplikacijah sledi pregled sorodnih raziskav o avtomatski izdelavi wordnetov , nato pa opis treh pristopov , ki sem jih uporabila za gradnjo slovenskega wordneta .
S slovarskim pristopom sem pridobila osnovni nabor konceptov , ki sem jih vse tudi ročno pregledala in popravila .
Korpusni pristop je poskrbel za avtomatsko razdvoumljanje večpomenskih besed in s tem zmanjšal količino potrebnega ročnega dela .
Za enciklopedični pristop pa sem se odločila , da sem v slovenski wordnet dodala številne specifične koncepte , ki so enopomenski in zato ne potrebujejo razdvoumljanja .
Izdelan wordnet za slovenščino bo v prihodnosti potrebno še nadgraditi in izboljšati , vendar je trenutna različica že prosto dostopna v raziskovalne namene .
I. UVOD V času , ko količina in pomen dokumentov v elektronski obliki vse bolj naraščata , postaja učinkovito delo z njimi brez računalniške podpore praktično nemogoče .
Zato so se pojavile številne računalniške aplikacije , ki dokumente glede na njihovo vsebino razvrščajo v skupine , po obsežnih zbirkah iščejo informacije , ki jih uporabniki potrebujejo , izdelujejo povzetke daljših besedil , prevajajo besedila iz enega jezika v drugega in podobno .
Za vse tovrstne rešitve je potrebna določena stopnja razumevanja besedil , kar računalnikom omogočimo z zbirkami , v katerih je človeško znanje urejeno tako , da jim nudi dostop do pomena posameznih besed in besednih zvez ter odnosov med njimi .
Izdelava semantičnih zbirk je za takšno računalniško manipulacijo besedil torej nujno potrebna .
Nedvomno je ročna gradnja semantičnih zbirk za vsak jezik posebej najbolj zanesljiv pristop , saj zagotavlja najboljše rezultate , tako s stališča jezikovne utemeljenosti kot s stališča točnosti izdelane podatkovne zbirke .
Vendar je to izjemno dolgotrajen in drag podvig , ki si ga večina raziskovalcev ne more privoščiti , zato so v zadnjih nekaj desetletjih metode za avtomatizirano gradnjo semantičnih zbirk postale ena osrednjih tem na področju razvoja jezikovnih virov .
Težišče pristopov je na izkoriščanju dragocenih , že obstoječih virov , ki so za ta jezik na voljo .
Predstavitvi wordneta in njegove uporabe v računalniški aplikaciji sledi pregled sorodnih raziskav , nato pa opis pristopov , ki sem jih uporabila za gradnjo slovenskega wordneta .
II. SEMANTIČNE ZBIRKE ZA RAČUNALNIŠKO OBDELAVO NARAVNEGA JEZIKA Če želimo , da bodo računalniki uspešni pri razumevanju besedil , jim moramo omogočiti dostop do našega znanja o jeziku in svetu , za kar največkrat poskrbimo s semantičnimi zbirkami , ki pri računalniški obdelavi naravnega jezika predstavljajo most med jezikom in znanjem , ki je z jezikom izraženo .
Za razliko od klasičnih slovarjev semantične zbirke pomen besede definirajo glede na to , kako je ta povezan s pomeni drugih besed .
Različni tipi semantičnih zbirk pa se med seboj razlikujejo po načinu organizacije in stopnji formalizacije leksikalnega znanja .
A ) Wordnet Leksikalne zbirke tipa wordnet temeljijo na povezavi konceptov z leksikalnimi in semantičnimi relacijami .
Prva tovrstna zbirka za angleški jezik je začela nastajati pred dobrima dvema desetletjema na Univerzi v Princetonu in je kmalu postala zelo priljubljen pripomoček pri najrazličnejših nalogah računalniške obdelave naravnega jezika .
Razlogi za to so vsaj deloma najverjetneje tudi povsem pragmatični , saj je obsežna zbirka , ki je plod dolgoletnega dela številnih sodelavcev , od samega začetka v celoti prosto dostopna .
Konec prejšnjega in v začetku tega stoletja so pod okriljem mednarodnih projektov EuroWordNet in BalkaNet nastali wordneti za številne evropske jezike , s čimer je wordnet pridobil pomembno večjezično razsežnost .
Od takrat naprej pa družina wordnet samo še raste ; združenje Global WordNet Association1 na svojih spletnih straneh trenutno poroča o obstoju wordnetov v 50 različnih jezikih , od arabskega do turškega .
B ) Princeton WordNet ( PWN ) 2 Začetki WordNeta segajo v osemdeseta leta minulega stoletja , ko je George A. Miller z Univerze v Princetonu s sodelavci z laboratorija za kognitivne raziskave začel preizkušati možnosti izdelave semantične mreže za večino besedišča naravnega jezika .
Sčasoma se je razvila v najobsežnejšo podatkovno bazo te vrste in po številnih dopolnitvah in predelavah jo danes strokovnjaki uporabljajo za najrazličnejše računalniške aplikacije , povezane z obdelavo naravnega jezika .
Sinsetom je dodana razlaga , pogosto tudi primer uporabe in oznaka za področje , iz katerega izhaja ( npr. » računalništvo « ) , med seboj pa so sinseti povezani z različnimi semantičnimi in leksikalnimi relacijami .
Zadnja dostopna različica je WordNet 3.0 in vsebuje 155.327 različnih besed , ki so razvrščene v 117.597 sinsetov , od katerih je slabih 70 odstotkov samostalniških .
Enopomenskih besed v WordNetu je 128.321 , večpomenskih pa 27.006 , povprečna polisemija je tako 1,23 za samostalnike , 2,16 za glagole , 1,41 za pridevnike in 1,24 za prislove3 .
Ob zaključku projekta so nizozemski , italijanski in španski wordneti vsebovali 30.000 primerljivih sinsetov , češki , estonski , francoski in nemški wordneti pa med 7.500 in 15.000 sinsetov , vendar posamezni wordneti neodvisno rastejo še danes ( Vossen 1998 : 73-89 ) .
Vsi jezikovno odvisni moduli so med seboj povezani z jezikovno neodvisnim , ki ga imenujemo interlingual index ( ILI ) .
Preko ILI-ja je kateri koli koncept v nekem jeziku mogoče prevesti v drug jezik , ki je prav tako vključen v bazo .
Cilj projekta je bila združljivost novih wordnetov tako z najnovejšo različico Princetonovega WordNeta kot z EuroWordNetom , kar pomeni , da so se sicer na področju računalniškega jezikoslovja nekoliko odrinjeni jeziki z Balkanskega polotoka pridružili najobsežnejši 15-jezični semantični mreži doslej .
Vendar je bilo za dosego tega cilja potrebno zelo premišljeno izbrati skupni nabor konceptov ( BILI ) , ki jih bodo novi wordneti vsebovali .
Poleg ILI-ja iz EuroWordNeta , ki so ga pri BalkaNetu poimenovali Base Concept Set 1 ( BCS1 ) so z natančnimi kriteriji iz Princetonovega WordNeta izbrali še Base Concept Set 2 ( BCS2 ) in Base Concept Set 3 ( BCS3 ) , skupaj 8.516 konceptov , ki so jih v svoje wordnete vključili vsi projektni partnerji .
Uporaba wordneta je eden izmed načinov za izboljšanje pridobivanja relevantnih besedil z razširitvijo iskanih besed s sorodnimi izrazi , ki se najverjetneje pojavljajo v istem sobesedilu kot iskane besede .
Poleg razdvoumljanja izvirnika lahko pomaga tudi za iskanje prevodnih ustreznic v obliki sopomenk in nadpomenk ter za iskanje parafraz v ciljnem jeziku ( Chatterjee idr. 2005 ) .
Nenazadnje pa je wordnet kot baza s splošnim besediščem tudi trdna osnova za kasnejši razvoj terminoloških zbirk ( ang. termbank ) z najrazličnejših strokovnih področij , ki so nato kot samostojna orodja uporabna za številne aplikacije na ozko določenih področjih .
Primer razširitve EuroWordNetom za okoljevarstveno področje v več jezikih je projekt EuroTerm ( Stamou idr. 2002 ) , zbirko večjezičnih metaforičnih izrazov , ki je prav tako povezana z EuroWordNetom , pa so razvili v okviru projekta Hamburg Metaphor Database ( Lönneker-Rodman 2008 ) .
IV. AVTOMATIZIRANA GRADNJA SEMANTIČNIH LEKSIKONOV Avtomatsko pridobivanje leksikalnih zbirk za jezikovno-tehnološke aplikacije je postalo privlačno v 90-ih letih prejšnjega stoletja , ko so se pojavili dovolj obsežni računalniško berljivi slovarji , tezavri in drugi viri znanja , iz katerih je bilo mogoče izluščiti informacije o pomenu in rabi besed ter njihovih medsebojnih odnosih .
Ko se enkrat odločimo za avtomatizacijo izdelave leksikalne zbirke , se takoj zastavi vprašanje , kako se gradnje lotiti .
Pri gradnji novih leksikalnih zbirk skušamo po eni strani minimalizirati količino dela , ki je potrebno za razvoj zbirke , po drugi strani pa si želimo maksimizirati njeno uporabno vrednost .
Glavna slabost tovrstnih modelov je v tem , da se zaradi neodvisne gradnje končane zbirke med seboj precej razlikujejo in jih je zato zelo težko ali pa sploh nemogoče združevati , pri čemer razlogi za razlike velikokrat niti niso jezikovni , temveč do njih prihaja zaradi različnih subjektivnih odločitev glede sestave posameznih zbirk .
S prevzemanjem strukture in relacij problem gradnje leksikalne zbirke za ciljni jezik zreduciramo na iskanje prevodnih ustreznic za koncepte v referenčnem wordnetu , medtem ko organizacijsko strukturo v celoti podedujemo .
Poleg tega pristopi iz te skupine z izkoriščanjem že obstoječih eno - in večjezičnih jezikovnih virov vključujejo tudi visoko stopnjo avtomatizacije , zaradi česar postane gradnja wordneta precej hitrejša in cenejša ( Vossen 1996 ) .
Vendar poleg prednosti razširitveni pristopi prinašajo tudi nekatere negativne posledice , med katerimi je nedvomno najpomembnejša ( pre ) velika odvisnost od leksikalne in konceptualne strukture izvornega jezika ( največkrat angleškega ) , še posebej , kadar se izvorni in ciljni jezikovni sistem med seboj močno razlikujeta .
Po razširitvenem modelu je bilo uspešno izdelanih že veliko leksikalnih zbirk za številne jezike , glede na kadrovske , časovne in finančne omejitve raziskave ter vire , ki so za razvoj semantičnega leksikona na voljo v Sloveniji , pa se je tudi za slovenščino kot najprimernejši metodološki okvir izkazal ravno razširitveni model .
Slabost ohranjanje strukture PWN je popolna odvisnost dobljenega wordneta od PWN , kar je tem bolj moteče , čim bolj se ciljni jezikovni sistem razlikuje od angleščine .
Kljub temu pa ta način zaradi enostavne in hitre implementacije pri izdelavi wordnetov vse bolj prevladuje , uporabljen je bil tudi v večjih projektih , kot sta BalkaNet in MultiWordNet ( Bentivogli idr. 2002 ) .
( 2 ) Zelo popularen pristop je povezava angleških iztočnic iz elektronskih dvojezičnih slovarjev s sinseti v PWN pod predpostavko , da prevodi teh iztočnic opisujejo isti koncept in torej sodijo v isti sinset ( glej Knight in Luk 1994 ) .
Največji problem pri tem pristopu je ta , da večina dvojezičnih slovarjev ni konceptno zasnovanih , temveč sloni na tradicionalnih leksikografskih načelih , zaradi česar je potrebno slovarske iztočnice najprej razdvoumiti , kar je vse prej kot trivialna naloga .
( 3 ) Enojezične elektronske slovarje je z analizo razlag in razdvoumljanjem uvrščevalnih besed ( ang. genus word ) mogoče uporabiti za luščenje taksonomij ( Rigau idr. 1998 ) .
Iz enojezičnih slovarjev je mogoče luščiti tudi druge relacije , kot je na primer meronimija ( Richardson idr. 1998 ) .
V. PRISTOPI ZA GRADNJO SLOVENSKEGA WORDNETA A ) Slovarski pristop Za izdelavo wordneta s slovarskim pristopom sem se odločila zato , ker za slovenščino drugi strukturirani semantični viri niso na voljo .
Vendar mi ustreznega angleško-slovenskega slovarja z dovolj veliko pokritostjo besedišča za uspešno prevajanje angleškega wordneta ni uspelo pridobiti , zato sem namesto njega uporabila Jurančičev slovensko-srbohrvaški slovar in v tem delu raziskave namesto iz PWN izhajala iz srbskega wordneta , ki je od vseh obstoječih wordnetov slovenščini najbližji .
Čeprav so rezultati brez razdvoumljanja nedvomno slabši in je to velika pomanjkljivost pristopa s stališča praktične uporabnosti na tak način izdelanega wordneta , težave nekoliko omili dejstvo , da je distribucija pomenov v srbščini in slovenščini zaradi sorodnosti jezikov zelo podobna .
Primerjava slovenskega wordneta s srbskim in angleškim pokaže , da so bilo v slovenščino prevedeni vsi sinseti iz skupin BCS1 in BCS2 , sinsetov iz BCS3 pa je bilo vključenih le toliko , da v slovenski hierarhiji ni lukenj ( glej Tabelo 1 ) .
Ročni pregled sinsetov sem opravila v urejevalniku VisDic ( Horak , Smrž 2004 ) , ki omogoča pregledovanje in popravljanje wordnetov ter iskanje po več wordnetih hkrati in primerjavo istih sinsetov v različnih jezikih .
Podrobno analizo napak in predloge za izboljšavo slovarskega pristopa opisujem v ( Erjavec in Fišer 2006 ) .
Tabela 1 : Primerjava sinsetov po besednih vrstah v slovenskem , srbskem in angleškem wordnetu B ) Korpusni pristop Ker sem nabor sinsetov , pridobljenim s slovarskim pristopom želela razširiti , drugih ( dovolj obsežnih ) slovarskih virov pa nisem imela ni na voljo , sem se semantične informacije , ki jih za gradnjo slovenskega wordneta potrebujem , odločila iz vzporednih korpusov .
Pri tem pristopu sem izhajala iz predpostavke , da je z večjezičnim pristopom večpomenskim iztočnicam mogoče določiti različne pomene , saj imajo posamezni pomeni večpomenskih besed v izvornem jeziku različne prevode v ciljnem jeziku .
Poleg tega sem predpostavljala , da je avtomatsko mogoče pridobiti tudi sinonime , in sicer z različnih iztočnic , ki se v ciljni jezik prevajajo z isto ustreznico .
Korpus SEE-ERA.NET vsebuje nekaj manj kot 1,5 milijona besed v osmih jezikih , od katerih sem za gradnjo slovenskega wordneta uporabila angleščino , bolgarščino , češčino , romunščino in slovenščino .
Predprocesiranje korpusa je bil precejšnji zalogaj , saj je korpus zgolj poravnan na ravni stavkov , sama pa sem morala poskrbeti za tokenizacijo , oblikoskladenjsko označevanje in lematizacijo ter poravnavo na ravni besed , pri čemer sem za izhodiščna jezika uporabila češčino in angleščino .
Če je bila izvorna beseda v en jezik prevedena z eno samo ustreznico , v drug jezik pa z večimi , sem v večjezični leksikon vključila vse različice , ker predvidevam , da razlika v prevodu nakazuje na razločevanje med posameznimi pomeni večpomenske angleške besede ali pa je ta prevod sinonim prvega .
Na primer : angleška beseda » wrapping « je lahko v slovenščino ustrezno prevedena s sinonimoma » embalaža « ali » pakiranje « , večpomenska beseda » hearing « pa v enem pomenu kot » sluh « , v drugem pa » zaslišanje « .
Odgovor na vprašanje , ali so prevodne različice sinonimi ali razločevalci pomenov , prinaša naslednji korak , in sicer primerjava leksikonov z wordneti .
V zadnjem koraku sem poiskala vse slovenske besede , ki jim je bil pripisan isti id ( in so torej označevale isti koncept , kar pomeni , da so sinonimi ) in jih združila v sinset .
Slika 1 : Primer avtomatsko ustvarjenih sinsetov za slovenski wordnet S korpusnim pristopom sem generirala sinsete z osmimi kombinacijami jezikov , prva kombinacija je bila dvojezična ( češčina in slovenščina ) , vse ostale pa večjezične ( od tri do pet jezikov ) .
Med generiranimi sinseti je največ samostalniških , v primerjavi s slovarskim pristopom sem tokrat izdelala nekoliko manjši delež glagolskih in precej večji delež pridevniških sinsetov .
Natančnost generiranih sinsetov raste s številom jezikov , vključenih v fazo razdvoumljanja , zato je največ napak v sinsetih , dobljenih iz češko-slovenskega leksikona , najbolj natančni pa so sinseti , dobljeni s petjezično kombinacijo .
Poravnava korpusa na ravni besed je potekala samo med posameznimi besedami , zato tudi s tem pristopom nisem mogla najti ustreznic za večbesedne literale .
C ) Enciklopedični pristop Specifičnim konceptom sem se posebej posvetila v zadnjem pristopu , ki je precej preprostejši od korpusnega , saj specifično besedišče ponavadi ni večpomensko , zaradi česar faza razdvoumljanja zanje ni potrebna , za prevajanje enopomenskih iztočnic pa ponavadi zadoščajo dvojezični viri .
Enopomenskih literalov je v PWN ogromno ( 82 % vseh literalov ) , ker pa je večina specifičnih , tovrstno besedišče v splošnih slovarjih praviloma ni zajeto .
Luščenje leksikona iz Eurovoca6 , večjezičnega tezavra , ki služi za klasifikacijo dokumentov EU , je bilo trivialno .
Na podoben način sem izluščila leksikone iz Wikislovarja in Wikivrst ( glej Fišer in Sagot 2008 ) .
S pomočjo enciklopedičnega pristopa sem pridobila največ sinsetov ( 12.840 ) .
Zaradi enciklopedične narave uporabljenih virov so skoraj vsi ustvarjeni sinseti samostalniški , velika večina med sodi v področje biologije .
Slika 2 : Primer luščenja angleško-slovenskih ustreznic s pomočjo medjezikovnih povezav v Wikipediji VI. ZDRUŽEVANJE IN ANALIZA REZULTATOV Na koncu sem rezultate vseh pristopov združila .
Sinset vsebuje še informacije o besedni vrsti , skupini konceptov , ki jim pripada , področno oznako , povezavo na ontologijo SUMO ter semantične in leksikalne relacije , ki kažejo na druge sinsete v mreži .
Slika 3 : Primer angleškega in slovenskega sinseta v VisDicu S kombinacijo metod , opisanih v prejšnjem razdelku , sem dobila 16.886 sinsetov oz. 19.582 različnih literalov .
Popvprečna dolžina sinseta je 1,16 literala , najdaljši sinset ima 16 literalov ( ENG20-02498705-v ) in izhaja iz prve različice wordneta , kjer so bili angleški sinseti prevedeni s pomočjo dvojezičnega slovarja , nato pa ročno pregledani in popravljeni .
Slovenski wordnet vsebuje tako enobesedne ( 11.099 ) kot večbesedne literale ( 8.483 ) .
Enobesedne literale sem pridobila predvsem iz korpusa , večbesedne pa iz Wikivirov , Eurovoca in z ročnim pregledom sinsetov , generiranih s slovarskim pristopom .
Osnovni koncepti iz prvih dveh skupin so v slovenskem wordnetu zelo dobro zastopani , saj so večinoma podedovani iz prejšnje različice , v kateri sem se osredotočila ravno nanje , s korpusnim in enciklopedičnim pristopom pa mi je uspelo pridobiti še nekaj konceptov iz tretje skupine in veliko število specifičnih konceptov , tako da slovenski wordnet vsebuje četrtino vseh konceptov iz PWN .
Tabela 2 : Sinseti glede na besedno vrsto in skupine konceptov .
Kljub temu , da korpus SEE-ERA.NET ni splošen , je korpusni pristop dal toliko splošnega besedišča , ker sem leksikon razdvoumljala s pomočjo wordnetov iz BalkaNeta , ki so ob zaključku projekta pokrivali predvsem osnovne koncepte .
SKLEP V prispevku sem predstavila semantične leksikone tipa wordnet in postopek izdelave slovenskega wordneta , ki je bil izdelan avtomatsko s pomočjo dvojezičnega slovarja , večjezičnega vzporednega korpusa in enciklopedičnih virov .
Slovenski wordnet trenutno vsebuje skoraj 20.000 različnih literalov , ki pokrivajo večino osnovnih konceptov ter kar precej specifičnih , ki so bili večinoma pridobljeni iz Wikivirov in so s področja biologije .
Zaradi uporabljenih pristopov in virov slovenski wordnet zaenkrat vsebuje predvsem samostalnike , poleg enobesednih literalov je precej tudi večbesednih .
S slovarskim pristopom sem zajela najosnovnejše koncepte in po ročnem pregledu avtomatsko prevedenih sinsetov dobila osnovni wordnet za slovenščino .
Specifične sinsete sem pridobila z zadnjim , enciklopedičnim pristopom , v katerem sem enopomenske sinsete iz PWN prevedla s pomočjo Wikipedije in sorodnih virov .
Prednost predstavljenih pristopov je v tem , da je izdelan wordnet zelo enostavno razširiti z novimi sinseti takoj , ko bo na voljo kak dodaten splošen ali specializiran slovar , večjezični korpus ali obsežnejša enciklopedija , kar je vsekakor zelo verjetno , saj tako Wikipedija kot tudi viri Evropske unije , rastejo in se dopolnjujejo vsak dan .
Razen osnovnih konceptov , pridobljenih s slovarskim pristopom , izdelan wordnet še ni bil pregledan in popravljen , zato vsebuje napake .
Nadaljnji razvoj wordneta vključuje dodajanje večpomenskih iztočnic iz Wikivirov , ki bi jih bilo mogoče razdvoumiti s primerjavo enciklopedičnih člankov in definicij sinsetov v wordnetu .
Sistemi za strojno prevajanje vključujejo eno - ali večjezične leksikone , programe za morfološko analizo in sintezo , programe za sintaktično analizo in sintezo , programe za razreševanje večpomenskosti , programe za prepoznavanje večbesednih semantičnih enot in druge kompleksne mehanizme , ki služijo avtomatizaciji prevajalskega procesa .
Strojni prevodi uradnih listin in pravnih aktov so tako razumljivejši in pravilnejši kot pri govorjenem ( ali na splošno manj uradnem , standardiziranem , formulaičnem ) jeziku .
S strojnim prevajanjem se ukvarja predvsem računalniško jezikoslovje .
Od prvih poskusov strojnega prevajanja v 50. letih 20. stoletja , ko je računalnik le zamenjal posamezno besedo izvirnega jezika z njeno ustreznico v ciljnem jeziku , je strojno prevajanje ob pomoči korpusov in v zadnjih letih predvsem interneta kot neizmerne baze besedil močno napredovalo .
[ 2 ] Strojni prevajalniki so sposobni prepoznati kontekst , frazeme in idiome v izvirnem jeziku ter ustvariti koheziven in razumljiv prevod .
Prvi sistemi za strojno prevajanje so bili razviti v 50. in 60. letih ; leta 1954 so na univerzi v Georgetownu prvič javno prikazali strojno prevajanje in z IBM-ovim računalnikom prevedli več kot šestdeset povedi iz ruščine v angleščino , kar je spodbudilo veliko vlaganja razvoj strojnega prevajanja .
V 70. letih je raziskovanje na tem področju spet oživelo in v 80. so se pojavili prvi komercialni prevajalni sistemi , naraslo je zanimanje za statistično strojno prevajanje .
Na prelomu tisočletja se je raziskovanje nadaljevalo na vseh navedenih področjih strojnega prevajanja , največji poudarek pa je bil na statistični metodi .
Amebis Presis , Google Prevajalnik in Bing Translator so za prevajanje iz slovenščine in v slovenščino na voljo na spletu .
Strojni prevajalnik , ki upošteva jezikovna pravila , zato za svoje delovanje potrebuje obsežne leksikone z morfološkimi , sintaktičnimi in semantičnimi podatki ter obsežno bazo jezikovnih pravil .
[ 2 ] Način zapisa pravil se razlikuje od sistema do sistema , vse pa veže dejstvo , da je postavitev takšnega sistema dolgotrajno opravilo .
V to skupino spada večina današnjih komercialnih prevajalnih sistemov , čeprav se pri gradnji poslužujejo nekaterih manj standardnih prijemov .
Sistemi te paradigme izvorno besedilo najprej morfološko ter skladenjsko analizirajo ter izdelajo predstavitev vhodnega besedila , ponavadi v obliki drevesa skladenjske razčlembe ( ang. parse tree ) .
Abstraktna predstavitev vhodnega besedila v izvirnem jeziku se s prenosom prevede v podobno predstavitev v ciljnem jeziku , to predstavitev pa sistem uporabi kot osnovo za tvorjenje besedila v ciljnem jeziku [ 3 ] ; pravzaprav uporabi enake metode kot pri analizi besedila , le da pri tvorjenju postopek poteka v nasprotni smeri .
Glavna pomanjkljivost sistemov strojnega prevajanja na osnovi pravil je , da bolj kot je sistem izpopolnjen , težje ga je razširiti in nadgraditi .
V strojnem prevodu so , kar se tiče semantike , sobesedila in resničnega sveta , potrebna kompleksna pravila , ta pa je težko dodajati v obsežno bazo pravil , ki so medsebojno odvisna .
[ 2 ] Statistične metode so se prvotno ukvarjale s prevajanjem posameznih besed , v zadnjih letih pa so napredovale na raven besednih zvez .
Največje prednosti metode so neodvisnost od jezikovnega para , manjši stroški kot pri metodah , ki temeljijo na pravilih , in bolj naravni prevodi .
Na osnovi primerov Glavni članek : Strojno prevajanje na osnovi primerov Metoda prevajanja na osnovi primerov za svoje delovanje uporablja dvojezični korpus z vzporednimi besedili .
Od statistične metode se loči po tem , da se najbližja besedilna enota v korpusu išče tudi v izvirnem jeziku .
Pri prevajanju se poved najprej razdeli na besedne zveze , ki se jih nato prevede , na koncu pa delčke sestavi skupaj .
[ 4 ] Ti lahko zajamejo dobre strani statistične metode in metode na osnovi pravil , razlikujejo pa se glede na to , kako uporabijo katero metodo : • Najprej metoda na osnovi pravil , nato statistična metoda : sistem besedilo najprej prevede z metodo na osnovi pravil , nato s statistično metodo v prevodu naredi popravke in prilagoditve .
[ 2 ] • Statistična metoda , ki jo uravnava metoda na osnovi pravil : s pomočjo metode na osnovi pravil sistem pripravi besedilo , da je prevajanje s statistično metodo učinkovitejše , metodo na osnovi pravil pa uporabi za normalizacijo prevoda .
[ 2 ] Strojni prevajalniki Prvi spletni prevajalnik ( ta je bil dostopen le omejenemu številu uporabnikov : naročnikom poštnih storitev mreže Minitel iz Francije ) je nasta konec 80. let 20. stoletja .
Sprva je prevajalnik vključeval 10 jezikovnih kombinacij , do leta 2006 pa je svoje storitve razširil na kar 38 jezikovnih kombinacij .
[ 4 ] Na spletu so v kombinaciji s slovenščino na voljo naslednji brezplačni strojni prevajalniki : • Amebis Presis ( spletna različica ) [ 1 ] • Google Prevajalnik [ 2 ] • Bing Translator [ 3 ] • Prevajalnik.net [ 4 ] • GUAT ( prevaja le iz slovenščine v srbščino ) [ 5 ] Rezultati Dobri rezultati se pri strojnem prevajanju naravnih jezikov kažejo predvsem pri prevajanju sorodnih jezikov ( na primer iz danščine v angleščino ) .
Ob primerjavi ročne in samodejne evalvacije ( izvedene s programi BLEU , GTM , METEOR in TERp ) s Pearsonovim koeficientom se je potrdil podatek , da je trenutno najboljši strojni prevajalnik za jezikovni par angleščina-slovenščina Google Translate , sledi pa mu Microsoftov strojni prevajalnik Bing Translator .
Prihodnost strojnega prevajanja je torej očitno povezana s statističnim strojnim prevajanjem in internetom kot ogromnim korpusom .
Strojni prevajalnik Presis slovenskega podjetja Amebis , ki ne temelji na statistični metodi , se je po vseh rezultatih uvrstil na zadnje mesto .
Ker računalnik ne more sklepati iz konteksta , se v prevodih pogosto pojavijo napake , še posebno pri večpomenkah .
Medtem ko se prvi ne ukvarjajo z razumevanjem besedila , temveč pomen s statističnimi metodami razberejo glede na besede v neposredni bližini dvoumne besede , globlji pristopi temeljijo na poznavanju in razumevanju posamezne besede .
Prevajanje lastnih imen Problem , ki ga omenja dr. špela Vintar , je prevajanje iz nemščine .
Računalnik težko ločuje lastna imena od običajnih samostalnikov , saj se oboji pišejo z veliko .
Stavek Ich habe Herrn Schneider gesehen bi boljši prevajalnik prevedel pravilno , saj bi na podlagi naziva Herr prepoznal lastno ime .
[ 8 ] Google Translate in Amebis Presis , ki nudita prevajanje iz nemščine v slovenščino , zgoraj navedeno lastno ime prevedeta pravilno – kot gospod Schneider in ne kot gospod krojač .
Prevajanje frazeologije Prevajanje večbesednih leksikalnih enot je problematično , ker se ob strojnem prevajanju ( če prevajalnik leksemov nima posebej shranjenih v bazi podatkov ) izgubijo retorični elementi ali pa ( recimo pri prevajanju šal ) pa celo celoten smisel besedila ( Glej tudi : Leksem ) : • idiomi in metafore : red herring ne pomeni rdeč slanik ( kot se glasi prevod spletne različice Amebisa Presisa ) , temveč zavajajoče dejanje ; Shoot the breeze prav tako ne pomeni ustreli v vetriču , kot to predlaga Bing Translator , temveč govoriti tja v en dan , čvekati ipd ; • kolokacije : red tape – angleški izraz za birokracijo – Google in Bing že prevedeta pravilno , medtem ko Amebis kot pravilen prevod zmotno predlaga rdeč trak ; • pregovori : Pri prevajanju reka Make hay while the sun shines dobesedne ustreznice seno in sonce ne pomagajo kaj dosti .
Za pravilen prevod je nujno poznavanje pregovorov ( Ne odlašaj na jutri , kar lahko storiš danes , Rana ura , zlata ura ipd. ) ; • vsakdanje fraze : Pravilen prevod fraze How do you do ?
( Navedeni primeri so bili s pomočjo spletnih prevajalnikov Amebis Presis ( spletna različica ) , Bing Translator in Google Translate prevedeni 15. 3. 2011. ) Rešitve Kakovost strojnih prevodov se lahko najočitneje izboljša z razvojem bolj prefinjenih metod ali s postavljanjem določenih omejitev pri izvirnem besedilu .
Strojni prevajalnik je recimo lahko specializiran za določeno področje ( na primer biokemijo ) ali besedilno vrsto ( na primer navodila za uporabo ) ter s tem , kar se tiče besedišča in slovnice , reduciran na neke vrste podjezik .
Prav tako je v pomoč , če je lahko izvirno besedilo napisano v nadzorovanem jeziku , ki ima omejen razpon besedišča ter se izogiba enakozvočnicam , večpomenskosti in zapletenim stavčnim strukturam , in / ali če se izvirnike lematizira .
Še ena možna rešitev pa je , da se sistem ob dvoumju med samim prevajalskim procesom lahko obrne na človeka ( navadno prevajalca ) .
[ 9 ] Evalvacija Glavni članek : Evalvacija strojnih prevajalnikov Za spremljanje napredka strojnega prevajanja je bilo vedno potrebno ocenjevanje kakovosti prevodov .
Programska oprema • Worldlingo • Power Translator • Systran • Promt • AppTek • IdiomaX • Toggletext • Apertium • SDL Trados • Wordfast • MemoQ • Deja Vu Zgodovina strojnega prevajanja Začetki Prve zamisli o strojnem prevajanju segajo v 17. stoletje ; leta 1629 je René Descartes predlagal univerzalni jezik z ujemajočimi se pomeni v različnih jezikih z istim simbolom .
Vse , kar moram narediti , je razbiti kodo , da dobim informacijo , ki jo vsebuje besedilo .
« [ 1 ] Takšen pogled na strojno prevajanje in razlike med jeziki je seveda zelo preprost , vendar je Weaver s tem spodbudil raziskave na tem področju in leta 1954 so na univerzi v Georgetownu prvič javno prikazali strojno prevajanje in z računalnikom IBM prevedli več kot šestdeset povedi iz ruščine v angleščino .
Uspešnost in odmevnost prevajalskega poskusa sta sprožil številna nadaljnja raziskovanja in nekateri so menili , da bo v roku petih let problem strojnega prevajanja rešen .
Začetnega optimizma glede strojnega prevajanja pa je bilo konec z Alpacovim poročilom leta 1966 , ko se je po desetletjih vlaganja v strojno prevajanja izkazalo , da je problem mnogo kompleksnejši , kot se je sprva zdelo .
Pri Alpacu so ugotovili , da to področje ni perspektivno in da zahteva preveč stroškov glede na doseženo kakovost produkta .
Posledica je bila , da ameriška vlada ni bila več pripravljena financirati raziskav na tem področju , delo so nadaljevale le redke skupine zunaj ZDA .
V začetku devetdesetih se je na področju strojnega prevajanja zgodil ključen preobrat : Najprej je podjetje IBM objavilo rezultate raziskave sistema Candide , ki je bil v celoti osnovan na statistični metodi ; nato so japonski raziskovalci razvili metodo strojnega prevajanja , ki temelji na primerih iz korpusa .
V istem času se je druga veja računalniškega jezikoslovja ukvarjala s prepoznavanjem , sintezo in ( simultanim ) prevajanjem govora .
[ 2 ] V poznih devetdesetih se je začelo širiti strojno prevajanje besedil na internetu , uporaba raznih elektronskih pripomočkov za prevajanje besedil , med pristopi so se začeli razvijati na primerih temelječi sistemi strojnega prevajanja .
Leta 2002 je podjetje Amebis predstavilo slovensko-angleški prevajalni sistem Presis , poskuse statističnega strojnega prevajanja iz slovenščine v angleščino so delali tudi na Fakulteti za računalništvo in informatiko Univerze v Ljubljani in Inštitutu Jožef Stefan .
[ 1 ] Po letu 2000 Po prelomu tisočletja se je raziskovanje nadaljevalo na vseh navedenih področjih strojnega prevajanja , največji poudarek pa je bil na statistični metodi .
Naravni jezik pa je živ in se nenehno spreminja , pravila so kompleksna in ne upoštevajo kreativnosti , zato jezika z vsemi izjemami ne morejo ukleščiti v svoje stroge okvire .
" [ 1 ] Zgodovina Začetki statističnega strojnega prevajanja segajo v leto 1949 , ko je ameriški znanstvenik Warren Weaver pri prevajanju uporabil teorijo informacij Clauda Shannona , ameriškega matematika in inženirja elektrotehnike , znanega kot " oče informacijske teorije " .
Oris delovanja Sistemi statističnega strojnega prevajanja so osnovani na parametričnih statističnih modelih , ki so naučeni na poravnanih dvojezičnih korpusih ( učnih primerih ) .
Namesto , da bi prevajalnik - kot pri strojnem prevajanju na osnovi pravil - razčlenjeval stavke po slovničnih pravilih , ta išče splošne vzorce , ki se pojavljajo v jezikovni rabi .
Statistične metode so se prvotno ukvarjale s prevajanjem posameznih besed , v zadnjih letih pa so napredovale na raven besednih zvez .
Ta nam pove , koliko besed v ciljnem jeziku proizvede vsaka beseda v izhodiščnem jeziku .
Tako se lahko slovensko besedo kót v španščino prevede z besedo rincón ali esquina ; odvisno , ali gre za notranji ali zunanji kot .
Spodnji primer prikazuje pravilen prevod Googlovega Prevajalnika iz slovenščine v angleščino ter napačnega iz angleščine v slovenščino , pri katerem prevajalnik kot povedek ni prepoznal fraznega oziroma sestavljenega glagola call off = cancel = preklicati , temveč le njegov del call = poklicati .
( Google Translate , prevzeto 13. 3. 2010 ) Prevajanje po besednih zvezah Bolj kot po besedah se v zadnjem času prevaja po ( različno dolgih ) besednih nizih , in sicer s ciljem , da bi se zmanjšale omejitve prevajanja po besedah .
z " nizi " niso mišljeni stavki kot slovnične strukture , temveč nizi besed , ki jih v korpusu prepoznajo sistemi , ustvarjeni po statistični metodi .
Prednosti Največje prednosti statistične metode v primerjavi s tradicionalnejšimi pristopi so : • lažje dostopni viri ; veliko materiala v naravnem jeziku je dostopnega v digitalni obliki ; • neodvisnost od jezikovnega para ( četudi je ta metoda pri določenih jezikovnih parih ustreznejša ( slovenščina mednje ne spada [ 3 ] ) ) ; • manjši stroški kot pri metodah , ki temeljijo na pravilih ; sistemi za strojno prevajanje na osnovi pravil zahtevajo ročno oblikovanje / razvijanje jezikovnih pravil , kar je neekonomično ; pravil prav tako pogosto ni mogoče posplošiti oziroma prenesti na druge jezike ; • naravnejši prevodi ; sistemi , ki temeljijo na pravilih , pogosto prevajajo dobesedno , statistično strojno prevajanje pa se tej težavi izogiba .
Težava pri zanašanju na verjetnostno porazdelitev ( v nasprotju s slovarji in slovničnimi pravili ) pa je , da statistično prevedena besedila pogosto vključujejo že na prvi pogled nesmiselne in očitne napake .
Problemi Najpogostejše težave , ki se pojavijo pri statističnem strojnem prevajanju , so : • poravnava povedi ; v vzporednih korpusih je marsikatera poved izhodiščnega besedila prevedena v več povedi ciljnega besedila in obratno ; • prevajanje sestavljenk ; • prevajanje frazeologije ; • razlike v oblikoslovju različnih jezikov ; oblikoslovne težave so precej pogoste pri slovenščini , saj je ta morfološko zelo bogata ; • razlike v besednem redu ; različni jeziki imajo različen besedni red .
Dodatne razlike v besednem redu se pojavijo pri prilastkih ter med trdilnimi in vprašalnimi povedmi ; • besede zunaj besedišča ( ang. out of vocabulary ( OOV ) ) ; sistemi za statistično strojno prevajanje imajo v svojih bazah podatkov različne besedne oblike shranjene kot posebne simbole brez medsebojne povezave .
Besednih oblik in stavkov , ki niso v bazi podatkov , ni mogoče prevesti – do tega pride zaradi pomanjkanja besedilnih virov , razlik v oblikoslovju različnih jezikov ipd.
[ 1 ] Strojno prevajanje na osnovi primerov je leta 1984 prvi predlagal japonski računalniški strokovnjak Makoto Nagao .
Kmalu je ta pristop pritegnil pozornost znanstvenikov s področja računalniškega jezikoslovja .
Prevodi besednih zvez so prevedeni po analogiji glede na prejšnje prevode .
Sistemi strojnega prevajanja na osnovi primerov so prevajanja po analogiji naučeni prav s primeri prevodov .
Ob začetku učenja tujega jezika si mora učenec zapomniti veliko podobnih stavčnih struktur in besed v tujem jeziku ter njihove ustreznice v maternem jeziku .
Če želi tvoriti ali prevesti poved v tuji jezik , mora sklepati o pravilni stavčni strukturi iz primerov , ki jih pozna .
V prvem koraku strojnega učenja je prisoten en stavčni par , v drugem pa je dodan drugi stavčni par , ki se od prejšnjega razlikuje le v enem leksemu .
Sistem strojnega prevajanja na osnovi primerov bi se v naslednjem primeru naučil tri prevodne enote : Primer dvojezičnega korpusa Angleščina Japonščina How much is that red umbrella ?
tako , da zamenja ustrezni del povedi .
Prevajalski proces , ki temelji na uporabi že prevedenih besedil , poteka na treh ravneh : 1.
Način lematiziranja je odvisen od tega , kako so primeri shranjeni v bazi podatkov .
V starejših sistemih so bili primeri v drevesnih strukturah , opremljenih z opombami , sestavni deli pa so bili med jezikoma vzporejeni z eksplicitnimi povezavami .
Besedilo , ki se bo uvozilo v sistem , se analizira na enak način , kot je bilo to poprej storjeno z bazo primerov .
Poravnava in rekombinacija bosta po takšni analizi težavni .
Primere pa se lahko opremi tudi s podatki o besedni vrsti ; tako je možno več preprostih primerov združiti v posplošen primer , ki vsebuje več prevodnih različic .
Iz povedi v izhodiščnem jeziku in skupkov vzorcev za prevajanje se proizvede povedi v ciljnem jeziku .
[ 3 ] Prednosti Največje prednosti metode na osnovi primerov v primerjavi s tradicionalnejšimi pristopi so : Možnost izboljšav Strojno prevajanje na osnovi primerov ne uporablja slovničnih pravil , prevajalne sisteme je preprosto nadgraditi – več primerov je v bazi podatkov , boljša je kakovost prevodov .
Baza podatkov je prav tako preprosta za obdelavo .
Obstajajo primeri , ko so vsi prevodni procesi potekli pravilno , rezultat pa je napačen .
Ko se pri strojnem prevajanju na osnovi primerov vnesenemu besedilu pripisuje podobne primere v ciljnem jeziku , se meri razdaljo ( ang. distance ) med vnesenim besedilom in vsakim od primerov .
Manjša kot je razdalja , bolj je primer podoben vnesenemu besedilu .
Če primernega primera ni , sistem uporabniku pove , da vnosa ne more prevesti , sicer pa uporabnika o pravilnosti prevoda prepričajo že sami primeri , podobni vnosu .
[ 4 ] Hitrost Strojno prevajanje na osnovi pravil je na splošno počasno , saj je sistem , temelječ na pravilih , zelo obsežen in obsega module za analizo , prenos in tvorbo , pri tem pa uporablja skladenjska pravila , semantične omejitve , pravila o prenosu stavčnih struktur , izbor besed , pravila tvorbe itd.
Statistično prevajanje prevode dobi z uporabo primerov s specifičnega področja ( pari izhodiščnih in ciljnih izrazov ) , prevod pa je podan , ne da bi šel čez dolgo verigo pravil .
Dober izkoristek strokovnega znanja prevajalcev in lahka dostopnost virov Oblikovanje jezikovnih pravil za prevajalske sisteme , temelječe na pravilih , je težko delo , ki zahteva jezikoslovno izobražen kader .
Reševanje prevajalskih problemov Strojno prevajanje na osnovi primerov je uporabno pri prevajanju mnogih jezikovnih fenomenov , ki se smatrajo kot prevajalski problemi pri konvencionalnem strojnem prevajanju na osnovi pravil .
Široko uporabljani predlogi , kot sta španski de in japonski no , se učinkovito prevajajo s strojnimi prevajalniki na osnovi primerov .
Slednja se imenujeta členek glagola .
Integracija Združevanje strojnega prevajanja na osnov primerov in na osnovi pravil naj bi bilo praktično .
Za uporabnike bi bilo sprejemljivejše , če bi bilo strojno prevajanje na podlagi pravil osnovano kot temeljni sistem , potem pa razširjeno in izboljšano z dodajanjem komponent strojnega prevajanja na osnovi primerov ; prav to je leta 1984 predlagal Makoto Nagao .
[ 4 ] Problemi Približno polovico vseh težav predstavlja pomanjkanje podobnih primerov , kar pa se da rešiti z dodajanjem novih besedil v bazo podatkov .
[ 4 ] Evalvacija strojnih prevajalnikov Obstaja veliko metod za evalvacijo strojnih prevajalnikov .
[ 1 ] Ena možnost evalvacije prevoda je preverjanje vsebine z nalogami za bralno razumevanje .
Do oprijemljivejše ocene je mogoče priti s statističnim pristopom , pri katerem se primerja število napak različnih vrst .
Mnenje raziskovalca bo do neke mere drugačno od mnenja uporabnika , saj raziskovalca zanima potencial orodja na dolgi rok , uporabnika pa uporabnost v danem položaju .
Največja težava pri tem je , da ne moremo vedeti , ali je sistem naredil napako ob prevajanju v drug jezik ali ob prevajanju nazaj v izvirni jezik .
Pri tretjem primeru ( iz Google Translate ) je prevod slovenskega frazema v angleščini popolnoma nesmiseln , povratni prevod pa je sicer slovnično pravilen , a nerelevanten , saj se ob zamenjani informaciji izgubi pomen frazema .
Prevod v portugalščino : Melharuco para o tat .
Ročna evalvacija Leta 1966 je Alpac ( Automatic Language Processing Advisory Committee ) objavil raziskavo na temo ročne evalvacije , v kateri so ocenjevali človeške in strojne prevode .
Raziskava je pokazala , da so bile razlike med ocenjevalci majhne , kljub temu pa priporočajo , da pri evalvaciji sodelujejo vsaj tri ali štirje ocenjevalci .
V podjetju Arpa ( Advanced Research Projects Agency ) so leta 1991 pod okriljem projekta Human Language Technologies Program vzpostavili evalvacijski program , ki deluje še danes , in izdelali metodologijo za evalvacijo strojnih prevajalnikov .
[ 2 ] Najprimernejše metode , ki so jih izbrali za nadaljnjo uporabo , so vključevale evalvacijo razumljivosti s pomočjo testov razumevanja , evalvacija primernosti ki so jo izvedli materni govorci angleščine , in evalvacijo , ki temelji na primernosti in berljivosti in informativnosti .
[ 2 ] Samodejna evalvacija Ko je v začetku devetdesetih let ameriška vlada sponzorirala tekmovanje med strojnimi prevajalniki , so vse prevode ocenjevali ročno .
[ 2 ] Analiza diskurza kot podpora sistemom strojnega simultanega prevajanja govora 1 UVOD Tehnologija strojnega simultanega prevajanja govora posega na področje človeške družbe , ki ji Evropska unija posveča veliko pozornosti , saj lahko postane eden od instrumentov pri ohranjanju večjezičnosti evropske družbe .
» Upoštevanje jezikovne raznolikosti je v Evropski uniji osnovna vrednota , skupaj s spoštovanjem posameznika , odprtostjo do drugih kultur , strpnostjo do drugih in njihovo sprejemanje , « navaja Evropska komisija v Sporočilu o večjezičnosti ( 2005 : 2 ) .
V istem okviru bodo jezikovna vprašanja sestavni del dejavnosti , ki se podpirajo na področju družboslovnih in humanističnih ved .
« ( Evropska komisija , 2005 : 7 ) Ta naravnanost evropske politike po eni strani dodatno utemeljuje in spodbuja razvoj tudi strojnega simultanega prevajanja govora , po drugi strani pa pomeni tudi širše socio-kulturne posledice razvoja ali nerazvoja jezikovnih in govornih tehnologij za posamezne jezike .
( Stabej , 2003 : 11 ) v tem pogledu govori o globalnosti slovenščine , ki jo definira na dva načina : da bodo slovensko govorečim sporočila v slovenščini na voljo po vsem svetu tako v realni kot virtualni obliki in da bodo , zrcalno , informacije v slovenščini na tak ali drugačen način dostopne tudi tistim , ki slovenščine ne znajo ali vsaj ne znajo dovolj .
/ « Pričujoča naloga je rezultat tesnega sodelovanja jezikoslovja in tehnoloških ved .
Uresničevanje vizije sistema strojnega simultanega prevajanja govora , ki bi bil uporaben , zahteva zmožnost algoritmov , da obvladujejo tudi značilnosti pogovornega govora.1 V govornih tehnologijah2 ima svoje pomembno mesto tudi Termin pogovorni govor izhaja iz govornih tehnologij .
Jezikoslovci , ki raziskujejo spontan govorjeni diskurz , in inženirji , ki razvijajo govorne tehnologije in skušajo procesirati pogovorni govor , tako ugotavljajo , da z orodji tradicionalnega jezikoslovja le-tega ne morejo zadovoljivo razložiti ali obvladovati , zato iščejo nove poti , jezikoslovci pogosto na področju , ki ga lahko označimo s skupnim imenom analiza diskurza .
Raziskava je uresničena v naslednjih korakih , ki so predstavljeni po posameznih poglavjih disertacije : Namen poglavja Strojno prevajanje je raziskati razvoj , stanje in smernice v strojnem prevajanju , tako v svetu kot v domačem prostoru .
V poglavju Utemeljitev in cilji raziskave pregledam , katere značilnosti spontanega govorjenega diskurza najbolj otežujejo razvoj sistemov strojnega simultanega prevajanja govora , koliko je spontan govorjeni diskurz v slovenskem jeziku že raziskan ter glede na to izpeljem temeljna cilja te raziskave : pregledati različne metode analize diskurza in predstaviti tiste koncepte , ki z prepoznavamo jezikovnosistemske prvine .
V zvezi s strojnim simultanim prevajanjem govora pa se praviloma govori o pogovornem govoru ( angl. conversational speech ) , tako pri razpoznavi govora kot pri prevajanju govorjenega besedila , pa tudi pri sintezi govora .
V poglavju Analiza diskurza izpolnim prvi del ciljev .
Najprej na kratko pregledam področje analize diskurza , nato pa podrobneje raziščem tri področja raziskovanja .
Osrednji in največji del raziskave namenim diskurznim označevalcem .
Raziskovalci pri razvoju sistemov strojnega simultanega prevajanja govora namreč veliko opozarjajo na težave , ki izhajajo iz značilnosti pogovornega govora , kot so premori , podaljšani zlogi , napačni začetki , zatikanja , diskontinuitete , ponavljanja , nedokončane misli , spremembe začete strukture ipd.
Najobširnejše je poglavje Analize in rezultati , kjer s koncepti , predstavljenimi v poglavju Analiza diskurza , analiziram gradivo v korpusu Turdis-1 , in tako izpolnim drugi del zastavljenih ciljev .
V poglavju Diskusija razmišljam o rezultatih analiz z vidika vpliva strojnega vmesnika – sistema strojnega simultanega prevajanja govora – na medčloveško komunikacijo , z vidika uporabe analiziranih konceptov v strojnem simultanem prevajanju govora in z vidika jezikoslovja .
Sledijo pregled opravljenega dela in sklepov posameznih poglavij in videnje nadaljnjega dela v Zaključku ter navedba literature in priloga – prepis pogovorov v korpusu Turdis-1 .
Kratek oris vsebine je tudi na začetku vsakega poglavja , daljša poglavja se zaključujejo s povzetkom v sklepu .
Zadnje podpoglavje prinaša pregled razvoja govornih tehnologij , potrebnih za strojno simultano prevajanje govora , v slovenskem prostoru .
Vendar se začetki razvoja strojnega prevajanja dolga desetletja nanašajo samo na strojno prevajanje pisnega besedila , zato se lahko marsikje v literaturi še danes termin strojno prevajanje nanaša samo na prevajanje pisnih besedil .
2.1 Razvoj pristopov k strojnemu prevajanju 2.1.1 Začetki Prvi koraki k strojnemu prevajanju pisnih besedil segajo v trideseta leta 20. stoletja s prvimi poskusi večjezičnega elektronskega slovarja v Franciji in v Rusiji .
To pomeni , da prenaša besedo po besedo ali skupine besed ( besedne zveze , fraze ) iz enega jezika v drugega s pomočjo slovarja ter z minimalnimi jezikoslovnimi analizami vhodnega jezika ( če že , običajno samo osnovna morfološka analiza ) ter minimalnim slovničnim preurejanjem povedi v ciljnem jeziku .
Slika 1 prikazuje blokovno shemo direktnih sistemov strojnega prevajanja .
Pri teh se vhodno besedilo , ki je bilo razpoznano iz govora , najprej prepiše v interlingvo .
Za semantično predstavitev so v kognitivni lingvistiki in semantiki razvili različne načine predstavitve pomena , ki pa je vseeno dovolj jezikovno neodvisen .
Glavna razlika med prenosnimi sistemi , ki so opisani v naslednji alinei , in sistemi z interlingvo je , da se pri interlingvi besedilo v ciljnem jeziku sintetizira samo iz interlingve , brez da bi se gledalo nazaj vhodni jezik .
Nekoliko počasneje se število modulov veča , če so sistemi reverzibilni , kar pomeni , da se modul za abstraktno predstavitev vhodnega jezika x ( analiza ) lahko uporablja tudi za abstraktno predstavitev ciljnega jezika x ( tvorba ) .
Prenosni sistemi se lahko razlikujejo med seboj po tem , na koliko ravneh se izvaja abstraktna predstavitev jezika ( analiza in tvorba ) : ta je lahko samo osnovna morfološka , lahko pa vključuje globoko morfo-sintaktično in / ali semantično predstavitev , tako da mora modul za prenos prenesti samo lekseme .
Slika 3 : Shema zgradbe prenosnega sistema strojnega prevajanja ( vir : Wong , 2001 ) .
Nekatere raziskovalne skupine so prevzele ideal interlingve in verjele , da lahko samo temeljne raziskave procesov mišljenja pri človeku rešijo problem strojnega prevajanja .
Bolj pragmatično naravnane skupine pa so se problema strojnega prevajanja lotile s preprostejšimi prenosnimi sistemi , ki temeljijo na slovnični predstavitvi jezika , in pustile problem semantike za kasnejše faze razvoja .
Posledica tega poročila je bila , da ameriška vlada ni bila več pripravljena financirati raziskav s področja razvoja sistemov strojnega prevajanja , posledično je navdušenje uplahnilo tudi v takratni SZ. Delo so nadaljevale redke skupine , razvoj je bil v naslednjem desetletju počasnejši in se je od direktnih sistemov bolj usmeril v interlingvo in prenosne sisteme .
Vladne službe in multinacionalke ( predvsem za prevajanje tehnične dokumentacije ) so osrednji trg komercialnih sistemov strojnega prevajanja pisnih besedil .
V devetdesetih se pojavijo tudi številni sistemi strojnega prevajanja pisnih besedil za osebne računalnike ( PC-Translator , Power Translator , Systran in METAL prilagodijo za osebne računalnike , Personal Translator , Easy Translator , ProMT , PeTra , Winger , TranSmart itd. ) , a žal mnogi slabe kvalitete .
Najizrazitejši primeri na jezikovnih primerih temelječih sistemov so bili prenosni sistemi Ariane , METAL , SUSY , Mu in Eurotra , prav tako pa nekatere interlingve ( DLT , Rosetta ) ter na vedenju temelječi sistemi ( KANT ) .
Vendar jezikovna pravila v slovnicah naravnih jezikov niso definirana na način , ki bi bil ustrezen za vključevanje teh pravil v računalniške sisteme , zato je bilo treba te slovnice natančno preštudirati in kategorizirati opisane elemente , kar je zahtevalo ogromno dela , končna pravila pa so bila težko obvladljiva .
Zato so se v jezikoslovju začele razvijati veje , ki so definirale jezikoslovne lastnosti jezika na način , ki je bil ustreznejša osnova za razvoj sistemov strojnega prevajanja .
Nekatere osnovne komponente na vedenju temelječih sistemov strojnega prevajanja so : ontologija pojmov , ki služi kot interlingva , slovar in slovnica vhodnega in ciljnega jezika ter ujemalna pravila med interlingvo in slovnico vhodnega in ciljnega jezika .
Jezikovni model je usmerjen predvsem v slovnično strukturo povedi , ki jo prevajamo .
• Prevajalni model : izračunava verjetnosti , da se neka vhodna enota ( beseda ) zamenja z določeno ciljno enoto ( besedo ) .
Omejitev je predvsem dostopnost ustreznega korpusa , ki mora biti zelo velik , vključevati mora besedila z različnih področij , ki morajo biti ustrezno enakomerno razpršena , zelo važna je tudi natančna poravnava ( po povedih , besednih zvezah , besedah …
Skupina v IBM ( ZDA ) je konec osemdesetih na podlagi statističnih pristopov in na podlagi francosko-angleškega korpusa parlamentarnih razprav zgradila eksperimentalni sistem .
Metoda je bila najprej poravnati stavke , besedne zveze in posamezne besede , nato pa izračunati verjetnosti , da neka beseda v stavku vhodnega jezika ustreza neki besedi iz ciljnega jezika .
Skozi devetdeseta nato sledimo vse večji prevladi statističnih pristopov , s katerimi se ukvarjajo mnoge skupine : nekatere so se osredotočile na čiste statistične sisteme ( npr. Aachen , univerze v južni Kaliforniji , Hongkong ...
) , druge preskušajo kombiniranje statističnih metod in jezikovnih pravil ( univerza Carnegie-Mellon , univerza Tsing-Hua , Taiwan , Mocrosoft ...
Ta pristop temelji na hipotezi , da je pri prevajanju velikokrat treba najti samo analogen primer , kako je bil posamezen primer ali posamezna skupina besed prevedena prej .
To je osnova za prevod v ciljni jezik , kjer sestavijo poved z zlepljanjem enot iz poravnanega korpusa .
Prav kombinacija izbranih skupin besed v ciljnem jeziku je največji problem , saj težko dobimo slovnično pravilne povedi .
Glavna prednost pristopa pa je , da so prevodi pomensko pravilni , saj je besedilo vzeto iz dejanskih prevodov , ki so jih naredili strokovnjaki .
2.1.3.5 Hibridni sistemi Preskušanje opisanih različnih pristopov in metod je kazalo , da noben » čisti « pristop ne da zadovoljujočih rezultatov .
2.2 Sistemi strojnega simultanega prevajanja govora V poznih devetdesetih se povečuje tudi zanimanje za strojno simultano prevajanje govora ( angl. speech-to-speech translation ) .
Medtem ko sistem strojnega prevajanja pisnega besedila običajno že dobi kot vhodno enoto zaporedje znakov v binarnem zapisu , ki predstavljajo črke , besede , stavke , je vhodna enota sistema strojnega simultanega prevajanja govora zvočni signal , zaznan prek mikrofona .
Zapisani govor , torej govorjeno besedilo , pri sistemih strojnega simultanega prevajanja govora zato pogosto že vsebuje napake , tj. napačno razpoznane besede , in ne vključuje ločil , ki lahko bistveno pripomorejo k jezikovni analizi , če je ta vključena v sistem .
Takšna tridelna shema sistemov strojnega simultanega prevajanja govora je v zadnjih letih v svetu splošno sprejeta ( Hoege , 2002 ) .
Ti sistemi so delovali le za omejen način govorjenja , za omejeno število slovničnih struktur in omejen slovar .
Razvijali so jih ATRF , AT & T , CMU ( univerza Carnegie-Mellon ) , UKA ( univerza Karlsruhe ) , NEC in Siemens AG. V začetku devetdesetih je sodelovanje med organizacijami , kjer so razvijali sisteme strojnega simultanega prevajanja govora , preraslo v prostovoljno združenje C-STAR ( Consortium for Speech Translation Advanced Research ) ( http://www.c-star.org/ ).
Namen združenja je spodbuditi sodelovanje med skupinami po svetu , ki se ukvarjajo s strojnim simultanim prevajanjem govora .
Od prvih demonstracij l. 1993 se v drugi fazi preusmerijo v prevajanje spontanega govora in na velike slovarje ( 10.000-100.000 besednih oblik ) .
Obvežejo se , da bodo skupaj zgradili sistem strojnega simultanega prevajanja govora , ki sprejme vhodno besedilo v jezikih vseh partnerjev ( nemški , francoski , angleški , japonski , korejski , italijanski ) ter prevaja in sintetizira ciljno besedilo v govor v vsaj enem ciljnem jeziku .
Med pristopi k strojnemu prevajanju razvijajo interlingvo in na primerih temelječe strojno prevajanje .
Po letu 1999 je projekt C-STAR prešel v tretjo fazo .
V naslednjih verzijah , Janus II in III , pa temelji na pristopu s semantično interlingvo .
Čeprav še vedno deluje le za omejena komunikacijska področja ( načrtovanje potovanja , rezervacije ) , lahko procesira pogovorni govor s slovarjem 10.000 besed .
Razpoznava govor v nemščini , angleščini ali španščini ter ga prevaja in sintetizira v nemščino , angleščino , španščino , japonščino ali korejščino .
Nekaj podatkov o govornih korpusih , posnetih za sisteme Janus ( Suhm et al. , 1994 ; Lavie et al. , 1997 ) : 1. dogovarjanje za sestanek : - simulirani pogovori – govorcema dajo označen koledar in jima naročijo , naj se dogovorita za sestanek , imajo 13 različnih scenarijev , - pogovori potekajo s pritiskom na gumb ( angl. push to talk ) , pri čemer lahko drugi govorec začne govoriti šele potem , ko prvi neha in pritisne gumb – tako se prepreči hkratni govor , hkrati pa se simulira način komunikacije s prevajalnim vmesnikom , - posnetki so enojezični , v angleščini ( 328 pogovorov ) , nemščini ( 215 pogovorov ) in španščini ( 68 pogovorov ) ; 2. načrtovanje potovanja in rezervacije : - simulirani pogovori med turističnim agentom in turistom , - govorec v vlogi turista dobi navodila na način : » Z ženo in hčerko se odpravljate na umetnostni festival v Pittsburgh .
Primerjava med pogovori , posnetimi s pritiskom na gumb , in prostimi pogovori pokaže , da so povedi pri pritisku na gumb povprečno dvakrat daljše .
Prvi sistem – Verbmobil Demonstrator – je prevajal iz nemščine v angleščino , narejen je bil za slovar 1292 besednih oblik .
V drugi fazi je bil sistem od dogovarjanja za sestanek razširjen tudi na organiziranje potovanja in urejanje hotelskih rezervacij , jezikovni pari pa na nemško-angleško in obratno ter japonsko-angleško in obratno .
Novembra 1998 so dokončali Verbmobil Research Prototype IIa ( slovarji 8000 besed za nemščino , 4500 za angleščino in 2.500 za japonščino ) , zaključek projekta pa zaokrožili v sistem Verbmobil 1.0 ( slovarji 10.000 besednih oblik za nemščino , 6800 za angleščino in 2500 za japonščino ) .
Sintaktični analizator obdeluje rezultate razpoznavalnika , semantični analizator pa analizira rezultate razpoznave glede na jezikovni kontekst .
Modul za analizo dialoga je kombinacija na vedenju temelječih in statističnih pristopov ter razpoznava in napoveduje govorna dejanja .
Modul za tvorjenje besedila v ciljnem jeziku abstraktno predstavitev zapiše v slovnično kar se da pravilne povedi v ciljnem jeziku .
Zadnji modul je sintetizator govora .
V prevajalnem modulu je torej uporabljen hibridni pristop .
Nekaj podatkov o govornih korpusih , posnetih za razvoj sistema Verbmobil ( Kurematsu et al. , 2000 ) : - simulirani pogovori , - v prvi fazi sta se govorca morala dogovoriti glede termina sestanka ob snemanju s pritiskom na gumb , - v drugi fazi so govorci simulirali pogovor , v katerem so rezervirali poslovno potovanje v Hannover v Nemčiji , - sogovornika sta sedela za isto mizo in sta lahko prosto govorila ; naročeno je bilo , da morajo govorci govoriti v formalni , poslovni zvrsti , - v obeh fazah so pogovori enojezični , v maternem jeziku govorcev , - skupno število posnetih pogovorov je bilo 584 v nemščini , 127 v angleščini , 220 v japonščini , - posneli so tudi pogovore med govorcema različnih jezikov , ki ne znata jezika drug drugega : ta sta sedela drug nasproti drugemu , človeški prevajalec ali Verbmobilov prevajalnik pa je prevajal besedilo ; število teh pogovorov je bilo 166 , - korpusi so bili posneti v studiu v brezšumnem okolju , edino japonski korpus je bil posnet v pisarni .
Prva faza projekta se je začela l. 1996 in je trajala pol leta , druga faza pa je trajala od 1997-2000.
Namen projekta je bil preveriti ustreznost na primerih temelječega strojnega simultanega prevajanja govora in tehnologije končnih avtomatov za sisteme strojnega simultanega prevajanja govora za omejeno komunikacijsko področje ( telefonski pogovori s hotelsko recepcijo ) ter ob koncu razviti demonstracijski sistem strojnega simultanega prevajanja govora za to področje .
Nekaj podatkov o govornih korpusih , uporabljenih za prevajalni modul sistema EuTrans ( Aiello et al. , 1999 ) : - tehnika čarovnik iz Oza ( angl. Wizard of Oz technique ) , - simulirajo telefonske pogovore s hotelsko recepcijo , - govorci dobijo pet osrednjih nalog : kontaktirati hotelsko recepcijo , pridobiti informacije , odpovedati rezervacijo , pritožiti se zaradi česa , menjati denar , - enojezični pogovori v italijanščini , - 200 govorcev , - iz posnetih pogovorov so zbrali okoli 3300 izjav , jih prepisali ter prevedli v španščino in angleščino .
Namen je bil razviti sisteme za strojno simultano prevajanje govora na podlagi interlingve , ki hkrati omogočajo tudi prenos slike in s tem neverbalno komunikacijo na daljavo .
V središču pozornosti ni natančnost prevodov , pač pa sposobnost , da se s pomočjo sistema uporabnika uspešno sporazumeta o namenih , idejah , konceptih in da dosežeta namen komunikacije .
V projektu so razvili tri sisteme : • Sistem za strojno simultano prevajanje pogovorov v turizmu z možnostjo multimedijske komunikacije ( First Showcase – 1A ) ( Metze et al. , 2002 ) : scenarij tega sistema je ozko omejen na podajanje turističnih informacij v turističnem športnem centru Trentino v Italiji .
Agenta v pisarni lahko v svojem maternem jeziku ( to je lahko angleščina , nemščina ali francoščina ) sprašuje po informacijah , sistem sporočila prevede v italijanščino , nato agent odgovarja v italijanščini in sistem ponovno prevede sporočila v jezik stranke .
Videokonferenčna povezava omogoča tudi neverbalno komunikacijo prek slike .
• Sistem za strojno simultano prevajanje pogovorov v turizmu z razširjenim komunikacijskim področjem in z izboljšano multimedijsko komunikacijo ( Second Showcase – 2A ) : ta sistem je zelo podoben prvemu , vendar z izboljšano multimedijsko povezavo , vključeni scenariji so razširjeni .
Za Showcase 1A so posneli skupaj 200 pogovorov v vseh štirih vključenih jezikih , za Showcase 2A 66 pogovorov , za Showcase 2B pa 49 pogovorov .
Na tak način so razvili dvojezični sistem strojnega simultanega prevajanja govora med srbo-hrvaščino in angleščino v manj kot mesecu dni ter sistem za prevajanje med haitsko kreolščino in angleščino ter korejščino in angleščino .
Vhodno besedilo prevede več prevajalnikov hkrati , vsak z različnim pristopom , zato je izhod več alternativnih , po možnosti prekrivajočih se prevodov .
S statističnimi pristopi jezikovnih modelov nato izberejo najboljši skupen prevod .
Tehnologije so razvite tako , da je dodajanje novih jezikov kar se da enostavno in hitro .
2.2.8 Raziskave v vzhodni Aziji : MATRIX , LodeStar , Digital Olympics Sistem MATRIX ( Zhang , 2003 ) razvijajo v japonskem podjetju ATR in temelji na korpusnih statističnih pristopih .
Sistem razpoznava tekoči govor v japonščini ( vsakdanji pogovori ) s slovarjem 2000 besed ter razpoznano besedilo prevaja in sintetizira v angleščino .
Prevajanje poteka z dvema pristopoma : na primerih temelječih in z interlingvo ( brez kompleksnejših semantičnih analiz ) .
2.2.9 Komercialni sistemi : AT & T , NEC , IBM Skupina na AT & T ( http : / / www.research.att.com / ~ srini / Projects / Anuvaad / home.html ) je začela razvoj sistemov strojnega simultanega prevajanja govora l. 1996 s prototipom prevajalnika HMIHY ( How May I Help You ) , sprva za prevajanje pogovorov v klicnem centru iz španščine v angleščino .
Prevajalni modul temelji na morfoloških in sintaktičnih analizah .
V IBM ( Zhang , 2003 ) so razvili sistem strojnega simultanega prevajanja govora med kitajščino in angleščino MASTOR .
Cilj projekta so nove raziskave , ki bi položile temelje za nadaljnji razvoj večjezične in veččutne komunikacije s stroji ( angl. multilingual and multisensorial communication – MMC ) .
Na področju strojnega simultanega prevajanja govora je cilj projekta izboljšanje obstoječe tehnologije ( razvite zlasti v projektih Verbmobil , Janus in EuTrans ) ter primerjava med različnimi scenariji in različnimi pristopi , ki bi pomagala določiti nove smeri raziskovanja in ciljne aplikacije za posamezen pristop .
2.2.11 LC-STAR V mednarodni projekt LC-STAR ( Lexica and Corpora for Speech-to-Speech Translation Components ) ( www.lc-star.com ) je bila vključena tudi Univerza v Mariboru in velik del spodbud za nastanek te raziskave izhaja prav iz njega , zato ga predstavljam nekoliko podrobneje .
Projekt LC-STAR je trajal od začetka l. 2002 do konca l. 2004.
Razdeljen je bil v dve fazi : v prvi so bili zgrajeni veliki slovarji za 13 evropskih in azijskih jezikov ( tudi slovenskega ) za izboljšanje razpoznave in sinteze govora , ki sta del sistemov strojnega simultanega prevajanja govora .
V drugi fazi so bile narejene raziskave jezikovnih virov , ki so potrebni za izboljšanje prevajalnega modula v sistemih strojnega simultanega prevajanja govora , določene so bile specifikacije za te vire , po specifikacijah so bili zgrajeni viri za tri jezike in razvit je bil demonstracijski sistem strojnega simultanega prevajanja govora .
Ugotovili so ( Ueffing , Ney , 2005 ) , da poleg poravnanih dvo - ali večjezičnih govornih korpusov , ki so temelj za razvoj strojnega simultanega prevajanja govora , tega izboljšajo tudi korpusi fraz , značilnih za izbrano komunikacijsko področje .
Prav tako se rezultati prevajanja izboljšajo , če je korpus lematiziran in če imajo besede označeno besedno vrsto .
Poravnani korpusi fraz so bili zgrajeni za devet jezikov , tudi slovenskega , poravnani govorni korpusi in demonstracijski sistem strojnega simultanega prevajanja govora pa za tri jezike ( angleškega , španskega in katalonskega ) .
Nekatere značilnosti govornih jezikovnih virov , na podlagi katerih je bil prepisan govorni korpus , so ( Arranz et al. , 2004b ) : - del govornega korpusa s področja dogovarjanja za sestanek je vzet iz govornih jezikovnih virov za projekt Verbmobil ; - del govornega korpusa , 500.000 besed , kar ustreza 60 uram pogovora , je bil na novo posnet v studiu , - sogovornika sta bila nameščena v ločeni sobi in sta se pogovarjala po telefonu , uporabili so obe tehniki , s pritiskom na gumb in brez pritiska na gumb , - izbrano področje je turizem , scenariji so bili razdeljeni na štiri večje , vsak od teh pa na še bolj podrobne ( glej tudi poglavje 5.1 ) , - za pomoč pri posredovanju informacij so govorci dobili resnični informativni material iz hotelov , agencij itd. , - korpus je ročno prepisan in validiran .
Od pristopov k strojnemu prevajanju v projektu LC-STAR favorizirajo statističnega , saj naj bi bil za faktor 2 uspešnejši od konvencionalnega pristopa s pravili , razvoj je veliko cenejši in ga je lahko prenesti na nove jezikovne pare .
Medtem ko lahko na primerih ali pravilih temelječa pristopa uspešno prevajata le besedilo , ki je pokrito s pravili ali primeri v učnem korpusu , so statistični pristopi uspešni tudi pri prevajanju struktur , ki jih ni bilo v učnem korpusu ( Arranz et al. , 2004a : 7 ) .
V času trajanja projekta ( 2004-2007 ) želijo razviti prevajanje pogovornega govora za širša komunikacijska področja , razpoznavo govora , ki bo zanesljiva tudi ob različnih načinih govora , v različnih akustičnih pogojih in za različne govorce , uspešno želijo integrirati razpoznavo govora in prevajanje govorjenega besedila v enoten statistični okvir ter razviti sintezo govora , ki bo uspešno imitirala človeški govor , kar zahteva nove modele za 27 prozodijo , emocije in ekspresivni govor .
2.2.13 Sklep Razvoj sistemov strojnega simultanega prevajanja govora se od začetne usmerjenosti raziskovanja v interlingvo , zlasti v ZDA na CMU , kjer imajo tradicijo interlingve že iz sistemov strojnega prevajanja pisnih besedil , usmerja proti statističnim ( korpusnim ) pristopom , zlasti v Evropi s projekti PF-STAR , LC - STAR , TC-STAR .
Temeljni jezikovni vir za prevajanje govorjenega besedila je pri tem ortografsko transkribiran in preveden poravnan govorni korpus za izbrano komunikacijsko področje , v pomoč pa so tudi poravnani korpusi fraz , značilni za posamezno področje .
Večina sistemov strojnega simultanega prevajanja govora je omejena na posamezna komunikacijska področja , predvsem na področje turizma , za potrebe vojaških operacij , nekoliko manj tudi klic v sili in podobne službe .
, špan .
na primerih , interlingva Digital 2002-2008 uporaba na interlingva , Olympics olimpijskih igrah statistični ...
morf .
analize MASTOR kit.-angl .
2.3.1 Alpineon Projekt za sistem strojnega simultanega prevajanja govora , ki bi vključeval slovenski jezik , poteka v okviru podjetja Alpineon d.o.o. ( www.alpineon.com ) v sodelovanju s Fakulteto za elektrotehniko ( glej 2.3.3 ) , Filozofsko fakulteto ( glej 2.3.6 ) , Fakulteto za družbene vede , Institutom Jožef Stefan ( glej 2.3.8 ) in podjetjem Amebis ( glej 2.3.2 ) .
Sistem je poimenovan VoiceTRAN Communicator in je zasnovan na arhitekturi DARPA Galaxy Communicator ( Žganec Gors et al. , 2005 ) .
Modul prevajanja govorjenega besedila združuje tako rekoč večino obstoječih pristopov k strojnemu prevajanju : pomnilnik prevodov , statistični pristop , na primerih temelječi pristop kot tudi jezikovna pravila .
Kot izhodiščni sistem je predviden Presis ( glej 2.3.2 ) , ki je sicer razvit za prevajanje pisnih besedil .
Za prevajanje govorjenega besedila bodo uporabljeni slovar vojaške terminologije in obstoječi vzporedni korpusi , ki vključujejo slovenski jezik , predvsem IJS-ELAN ( http://nl.ijs.si/elan/ ).
Obstoječa literatura o projektu sicer navaja predvsem načrte in zasnove , morebitnih rezultatov in njihovega vrednotenja ob zaključevanju te naloge še ne zasledim .
Presis je sicer razvit za prevajanje pisnih besedil , ne govora , kar pomeni , da , sodeč po tujih izkušnjah , uspešna integracija v sisteme strojnega simultanega prevajanja govora ni verjetna , poglejmo pa , katere pristope uporablja .
Ker gre za komercialni produkt , je v strokovni literaturi skopo predstavljen ; iz objavljenega ( Romih , Holozan , 2002 ) lahko sklepamo , da je zasnovan na neke vrste modularnem prenosnem pristopu : najprej besedilo v vhodnem jeziku oblikoslovno , sintaktično in semantično analizira , sledi prenos besedila v ciljni jezik na podlagi dvojezičnega besednega slovarja , pri procesu tvorjenja besedila v ciljnem jeziku pa spet vključuje stavčni sintetizator .
Sistem Presis je v demonstracijske namene ( do 200 besed ) dostopen na spletnih straneh ( http://presis.amebis.si/prevajanje/index.asp ).
2.3.3 Fakulteta za elektrotehniko , Laboratorij za umetno zaznavanje , sisteme in kibernetiko ( LUKS ) Na Fakulteti za elektrotehniko Univerze v Ljubljani se s področjem jezikovnih tehnologij ukvarja Laboratorij za umetno zaznavanje , sisteme in kibernetiko ( http://luz.fe.uni-lj.si/ ).
2.3.4 Fakulteta za računalništvo in informatiko , Laboratorij za arhitekturo in procesiranje signalov Na Fakulteti za računalništvo in informatiko Univerze v Ljubljani se v okviru Laboratorija za arhitekturo in procesiranje signalov ( http://laps.fri.uni- lj.si / Razno / laps.html ) med drugim ukvarjajo tudi z razpoznavo in sintezo govora .
Razvili so sistem za razpoznavo ločeno izgovorjenih besed – števk ter razpoznavo poljubno dolgega zaporedja števk ( Rozman , Kodek , 2000 ) .
2.3.5 Fakulteta za elektrotehniko , računalništvo in informatiko , Laboratorij za digitalno procesiranje signalov Na Fakulteti za elektrotehniko , računalništvo in informatiko Univerze v Mariboru potekajo raziskave in razvoj jezikovnih tehnologij znotraj Laboratorija za digitalno procesiranje signalov na Inštitutu za elektroniko ( http://www.dsplab.uni-mb.si/Dsplab/index.php ).
Skupina je razvila tudi veliko potrebnih jezikovnih virov ( Kačič , Horvat , 1998 ) , od katerih jih nekaj nudi tudi prek mednarodne organizacije ELRA / ELDA : slovar lastnih imen Onomastica , govorne baze SNABI , SpeechDat II , Polidat , oblikoslovna in glasoslovna slovarja SIlex in LC-STAR , govorna korpusa BNSI Broadcast News in Turdis itd.
Razvite algoritme predstavlja aplicirane v različne demonstracijske sisteme , predvsem govorno vodene aplikacije , npr. LentInfo ( Žgank et al. , 2002 ) , Voice Tetris , GENESIS itd. , konceptni sistem strojnega simultanega prevajanja govora Babilon pa predstavlja na primeru hotelskih rezervacij , in sicer za jezikovni par slovenščina-nemščina ( v obe smeri ) .
2.3.6 Filozofska fakulteta , Oddelek za prevajalstvo in Oddelek za slovenistiko Na Oddelku za prevajalstvo Filozofske fakultete Univerze v Ljubljani ( http://www.ff.uni-lj.si/prevajanje/ ) med drugim sodelujejo tudi na področju razvoja jezikovnih tehnologij in jezikovnih virov .
Raziskave in razvoj so usmerjeni predvsem v pripomočke za prevajalce ( npr. pomnilniki prevodov ) ( Vintar , 2001 ) in potrebne jezikovne vire .
Veliko v tej smeri je bilo razvitega v okviru doktorske raziskave ( Vintar , 2003 ) : angleško-slovenski korpus strokovnih besedil TRANS , ki obsega 900.000 besed , vključuje pa besedila iz medicine , jedrske tehnike , zakonodaje / prava , geologije in turizma , ter sistem za dvojezično luščenje izrazja ( za jezikovni par angleščina-slovenščina ) .
Korpus v okviru aplikativnega raziskovalnega projekta Jezikovni viri za slovenščino nadgrajujejo v korpus FidaPlus ( www.fidaplus.net ), ki je v demonstracijski različici dostopen na spletnih straneh , dalj časa pa že načrtujejo tudi gradnjo govornega korpusa ( Stabej , Vitez , 2000 ; Zemljarič Miklavčič , 2004 ) .
2.3.7 Hermes SoftLab Podjetje Hermes SoftLab se je na področje jezikovnih tehnologij za slovenski jezik vključilo s sistemom strojne razpoznave govora v praksi – M-vstopnico ( Imperl , Sket , 2002 ) .
2.3.8 Institut Jožef Stefan , Odsek za inteligentne sisteme Na osrednji slovenski raziskovalni ustanovi razvijajo jezikovne tehnologije znotraj Oddelka za inteligentne sisteme ( http://nl.ijs.si/ ).
V luči sistemov strojnega simultanega prevajanja govora je zanimivo njihovo raziskovalno delo na področju sinteze slovenskega govora in strojnega prevajanja .
Urejajo korpusa Nova beseda in Beseda , zbirko oblikoslovno označenih besedil ter elektronske slovarje slovenskega jezika ( SSKJ , odzadnji slovar , besedišče ) .
Jezikovni viri , potrebni za razvoj strojne razpoznave govora , so obsežnejši in zahtevnejši : potrebujemo obsežne ( milijonske ) korpuse ( za razpoznavanje spontanega govora bi bilo idealno , da bi bili to korpusi spontanih govorjenih besedil ) , govorne baze s posnetki čimveč govorcev , razpršenih po različnih kriterijih ( narečje , spol , starost , izobrazba ...
) in prav tako oblikoslovne in glasoslovne slovarje .
Za razvoj prevajanja govorjenega besedila potrebujemo poravnani korpus ( kot je npr. IJS-ELAN za slovenščino - angleščino ) , dvo - ali večjezične ( elektronske ) slovarje , poravnane korpuse fraz ( kot so npr. v okviru projekta LC-STAR tudi za slovenski jezik narejene za področje turizma ) .
Iz tega pregleda ugotovimo , da za začetek razvoja sistemov strojnega simultanega prevajanja govora najbolj manjkajo korpusi spontanih govorjenih besedil , in sicer tako enojezični govorni korpusi , potrebni za razvoj razpoznave govora , kot dvo - ali večjezični poravnani govorni korpusi , potrebni za razvoj prevajanja govorjenega besedila .
Prevajanje govorjenega besedila za slovenski jezik šele začenjamo razvijati , tako da o tej tehnologiji še ne najdemo objav , velika ovira pri tem je tudi pomanjkanje ustreznih jezikovnih virov , tj. dvo - ali večjezičnih poravnanih korpusov spontanih govorjenih besedil .
3 UTEMELJITEV IN CILJI RAZISKAVE V tem poglavju opozorim na razlike med pogovorom in pisnim diskurzom , ki vplivajo tudi na razlike med strojnim prevajanjem pisnega besedila in strojnim simultanim prevajanjem govora .
Nato navedem nekaj najpomembnejših opažanj o težavah , ki jih značilnosti pogovornega govora povzročajo pri strojnem simultanem prevajanju govora , ter na kratko pregledam , kako te značilnosti obravnava človek-tolmač .
V jezikoslovju značilnosti spontanega govorjenega diskurza največ raziskuje analiza diskurza , zato pregledam , kaj je na tem področju raziskanega v slovenskem prostoru .
3.1 Pogovor – pisni diskurz Že pri pregledu področja strojnega prevajanja opozorim na pomembne razlike med strojnim prevajanjem pisnega besedila in strojnim simultanim prevajanjem govora .
Razlike izhajajo predvsem iz razlik med pogovorom in pisnim diskurzom , kar posledično pomeni tudi različno sestavo sistemov strojnega prevajanja pisnega besedila ( kjer potrebujemo samo prevajalni modul ) in sistemov strojnega simultanega prevajanja govora ( kjer potrebujemo poleg prevajalnega modula tudi modul za razpoznavo in modul za sintezo govora ) .
Poleg temeljne razlike v prenosniku je zelo različno tudi samo besedilo , ki je produkt pisnega diskurza na eni ali spontanega govorjenega diskurza na drugi strani .
Razlike ponazarja naslednja primerjava dveh različnih diskurzov o isti temi , all inclusive ponudbi nekega hotela .
Primer pisnega diskurza o tej temi je iz turističnega kataloga ( vir : katalog agencije Sonček : Poletje 2004.
Hotel FARAON * * * TRPANJ ( polotok Pelješac ) ALL INCLUSIVE Lega : na robu majhnega kraja Trpanj ( do centra pribl .
ALL INCLUSIVE Hrana in pijača : samopostrežni zajtrk , kosilo in večerja , kava , pecivo in prigrizki , domače alkoholne in brezalkoholne pijače ( namizno vino in točeno pivo med 10. in 24. uro ) .
Zdaj pa poglejmo prepis dela telefonskega pogovora iz korpusa Turdis-1 ( za pravila transkripcije in pomen posameznih oznak glej poglavje 5 ) med klicateljico in turistično agentko v turistični agenciji , ki je izdala zgornji katalog , kjer klicateljica sprašuje po all inclusive ponudbah .
v Slanem [ + SOGOVORNIK _ mhm ] Aso1 [ prekr ] : tudi [ t / u:t ] ta je zelo v redu mislim [ + NERAZUMLJIVO ] K11 [ prekr ] : mhm tega poznam Aso1 [ prekr ] : poznate ?
K11 [ prekr ] : tega poznam ja Aso1 [ prekr ] : no [ 1 ] K11 [ prekr ] : ja Aso1 : [ 2 ] ta je [.]
po mojem vseeno [ vsE * E:n ] na tem področju še eden [ * E:dn ] [ SOGOVORNIK _ mhm ] [.]
Glasovna podoba besed je pogosto drugačna , kot jo z zapisom predvidimo v pisnem besedilu in ki velja za knjižno normo .
Tudi obliko-skladenjska vloga nekaterih besed je lahko drugačna kot v pisnem diskurzu , ki običajno sledi knjižni normi : taki ko bi bil , čisto ta pravega ...
V spontanem govorjenem diskurzu govorci zelo pogosto uporabljajo nekatere besede , ki so v pisnem diskurzu nasprotno zelo redke : mhm , no , eee , ja , aha ...
Skladenjska struktura v spontanem govorjenem diskurzu očitno omogoča bolj svoboden besedni red , popravljanja , pogosta ponavljanja , nedokončane izjave ipd.
V tujini so se pri razvoju sistemov strojnega simultanega prevajanja govora seveda srečavali s problemi , ki izhajajo iz značilnosti spontanega govorjenega diskurza .
3.2 Pogovorni govor v sistemih strojnega simultanega prevajanja govora Raziskovalci , ki so razvijali sisteme za strojno simultano prevajanje govora , so hitro odkrili , da značilnosti pogovornega govora močno otežujejo to nalogo .
V projektu C-STAR ( http://www.c-star.org/main/english/cstar2/ ), kjer je združena večina večjih centrov , ki razvijajo tehnologije strojnega simultanega prevajanja govora ( glej 2.2.1 ) , med drugim ugotavljajo , da uspešno strojno simultano prevajanje govora ne more biti doseženo s preprostim združevanjem modulov za razpoznavo govora in strojno prevajanje pisnih besedil , ampak se je treba problema lotiti celostno .
Napake pri razpoznavanju nastajajo tudi zaradi hrupov , ki se pojavijo med snemanjem pogovora , npr. kašljanje , smeh , treskanje vrat , zvonjenje telefonov ...
Naslednji problem je velika dinamičnost človeškega govora – pri hitrem govoru je odstotek napak pri razpoznavi večji .
Za uspešno strojno simultano prevajanje govora se torej ne moremo zanašati na stoodstotno razpoznavo ali na sintakso , ki bi sledila enakim pravilom kot pri pisnem besedilu .
Pot vidijo prej v semantično verodostojnih interpretacijah namena tvorca , v interpretaciji izjav , pri čemer bi ignorirali za prenos sporočila manj pomembne besede ali dele izjave .
Nadalje se mora strojno simultano prevajanje govora spopadati še z vsemi značilnostmi jezika , ki otežujejo tudi strojno prevajanje pisnega besedila .
V projektu LC-STAR obravnavajo probleme strojnega simultanega prevajanja govora , ki izhajajo iz značilnosti pogovora , na kratko ( Ueffing et al. , 2002 ) : težave strojnega simultanega prevajanja govora v veliki meri povzroča razpoznava govora , kjer nastajajo napake , in značilnosti pogovornega govora , kjer so sintaktične strukture različne od struktur v pisnem besedilu .
Pot za dosego robustnosti vidijo v podatkovno vodenih metodah in statističnih pristopih , ki temeljijo na velikih korpusih .
Z jezikovnimi pravili bi po mnenju konzorcija LC-STAR težko obvladovali lastnosti pogovornega govora .
Namen projekta je bil raziskovanje procesiranja spontanega govorjenega diskurza v strojnem simultanem prevajanju govora , torej zelo soroden ciljem te naloge , vendar širše zastavljen .
V naslednjih fazah projekta ( Wiebe et al. , 1996 ; Wiebe et al. , 1997 ) razvijejo tudi konkretne rešitve , kako obravnavati navedene značilnosti in kako to implementirati v sistem strojnega simultanega prevajanja govora .
Pri razvoju sistemov strojnega simultanega prevajanja govora torej raziskovalci ugotavljajo podobne probleme , ki izhajajo iz značilnosti pogovora .
Tolmačenje govora v izvirnem jeziku pomeni prenašanje semantične , konotativne in estetske vsebine v drug jezik in pri tem uporabljanje leksikalnih , sintaktičnih in stilističnih sredstev drugega ( ciljnega ) jezika .
« Za to delo mora imeti tolmač dobro razvit dolgoročni in kratkoročni spomin ter izredno sposobnost koncentracije .
Sposoben mora biti poslušati govor v izvirnem jeziku , ga podajati v ciljnem jeziku ter hkrati poslušati in preverjati sebe , včasih pa mora ob poslušanju tudi brati besedilo .
3.4 Raziskave spontanega govorjenega diskurza v slovenščini Sodelovanje tehnoloških ved in jezikoslovja pri razvoju govornih tehnologij se v glavnem opira na tradicionalno jezikoslovje .
« ( Vitez , Zwitter Vitez , 2004 : 3 ) Zato je temeljna teza te disertacije , da se je treba pri razvoju govornih tehnologij , ki bi uspešno procesirale pogovorni govor , nasloniti na tiste veje jezikoslovja , ki preučujejo spontan govorjeni diskurz , in to v vsakdanji jezikovni rabi .
Širše gledano največ teh raziskav najdemo znotraj raznolikega področja analize diskurza .
V nadaljevanju tega poglavja predstavljam pregled teh raziskav za slovenski jezik .
Raziskave spontanega govorjenega diskurza v slovenščini s pristopi analize diskurza se začnejo širše v devetdesetih letih prejšnjega stoletja .
Naslednja publikacija , kjer je posebno poglavje posvečeno tudi analizi diskurza , je zbornik Jezik za danes in jutri ( Štrukelj , 1998 ) .
Govorjeni diskurz je analiziran v prispevku ( Schlamberger Brezar , 1998 ) , ki je usmerjen v raziskavo usmerjevalcev ( konektorjev ) v diskurzu in temelji na analizi avtentičnih govorjenih diskurzov ( simulacije pogajanj in televizijske okrogle mize ) ; v ( Sivec , 1998 ) je predstavljena razčlemba utemeljevalnega diskurza v razredu z metodami retorike , teorije argumentacije , jezikovne pragmatike in kritične analize diskurza , analiza pa temelji na učni uri , posneti leta 1996 na Škofijski gimnaziji ; v ( Kranjc , 1998b ) pa je z metodo konverzacijske analize ( angl. conversation analysis ) analiziran govor predšolskih otrok , pri čemer je pozornost usmerjena v razlike med obliko in pomenom izrekov .
Ta prispevek se navezuje na obširnejše raziskave govora predšolskih otrok oz. jezikovne zmožnosti predšolskih otrok , kot se kaže v njihovem spontanem govoru z odraslimi ter otroki , narejene v ( Kranjc , 1995 ) in ( Kranjc , 1998a ) ter v izdaji ( Kranjc 1999 ) .
Te raziskave poleg koverzacijske analize vključujejo tudi raziskave slovnične zmožnosti na besedotvorni , oblikoslovni , skladenjski in besediloslovni ravnini .
V zadnjih nekaj letih so raziskave govorjenega diskurza vse pogostejše : ( Pirih Svetina , 1999 / 00 ) analizira šolsko uro pouka književnosti glede na lingvistične enote dejanje , korak , vloga , izmenjava in transakcija , za gradivo vzame videoposnetek učne ure književnosti v osmem razredu osemletke ; v ( Ilc , 2001 / 02 ) najdemo diskurzivno analizo športnega komentarja z vidika tematskih elementov in prozodije , analiza je narejena na posnetkih dveh različnih športnih komentarjev istega dogodka ; v ( Verdonik , 2003 ) je bila narejena analiza nesporazumov v komunikaciji z metodami jezikovne pragmatike na primeru štirih soočenj gostov v dnevnoinformativni televizijski oddaji .
Raziskave govorjenega diskurza se usmerjajo tudi v govor politikov v mestnih občinah , parlamentu in javnih medijih .
( Krajnc , 2004 ) analizira besedilnoskladenjske značilnosti govorjenega jezika na gradivu s sej Mestnega sveta Mestne občine Maribor .
( Hribar , 2001 / 02 ) analizira skladenjsko zapletenost povedi v govorjenem jeziku politikov , ( Modrijan , 2004 ) pa skuša na podlagi korpusne metodologije ugotoviti določene vzorce v rabi oblik zaimkovnega in nominalnega naslavljanja med slovenskimi politiki .
Raziskava skladnje spontanega govora v ( Smolej , 2004b ) prinese v slovenskem prostoru novo in zanimivo razlago spontano tvorjenih struktur s stališča sintagmatske in paradigmatske osi ( glej tudi 4.4 ) .
Pogosto so raziskave usmerjene v različne pragmatične , diskurzne vidike , nekajkrat je v središču zanimanja skladenjski vidik .
Nobena od navedenih raziskav analize diskurza ni narejena z vidika uporabnosti v strojnem simultanem prevajanju govora ali širše v govornih tehnologijah .
3.5 Cilji raziskave Zgornje razmisleke in preglede lahko strnem v naslednje točke : • V zadnjih letih se pri razvoju modelov za prevajanje govorjenega besedila favorizirajo statistični korpusni ali hibridni pristopi .
• Implementacija sistemov strojnega prevajanja pisnega besedila v sisteme strojnega simultanega prevajanja govora ni posebno uspešna .
• Razlike med strojnim prevajanjem pisnih besedil in strojnim simultanim prevajanjem govora izhajajo iz razlik med spontanim govorjenim diskurzom in nespontanim pisnim diskurzom , ki se kažejo na vseh jezikovnih ravneh .
Stična točka so lahko ustrezno označeni korpusi ali jezikovna pravila , vendar novejši trendi kažejo na večjo uspešnost korpusnih pristopov .
Gradnja sistemov strojnega simultanega prevajanja govora je v začetku smiselna samo za omejeno komunikacijsko področje , v tej nalogi bo to telefonsko posredovanje informacij v turistični agenciji , turistični pisarni in hotelski recepciji .
4 ANALIZA DISKURZA V tem poglavju skušam uresničiti prvi del ciljev .
Analiza diskurza je poimenovanje za zelo raznovrstne pristope , zato najprej naredim kratek pregled tega področja , pri tem v podpoglavju o diskurzu razjasnim tudi nekatera osnovna terminološka vprašanja .
Analiza diskurza tako pomeni večdisciplinarne in meddisciplinarne pristope , kar je po eni strani njena moč , po drugi pa lahko tudi vzrok za zmedo .
Za pričujočo raziskavo je variabilnost analize diskurza prednost , saj nudi širok izbor različnih metod , ki izhajajo iz različnih vej humanističnih in družboslovnih znanosti , med katerimi lahko iščemo najustreznejše za analizo s ciljem podpore sistemom strojnega simultanega prevajanja govora .
Lahko pa se nanaša tudi na ideologijo , ki je običajno posredovana in propagirana z neko jezikovno rabo : npr. marksistični diskurz , konzervativni diskurz , neoliberalistični diskurz ...
Slovenski avtorji poleg umeščenosti diskurza v kontekst v definiciji diskurza omenjajo , da gre za preučevanje jezikovnih dogajanj na nadpovedni jezikovni ravni , npr. ( Kovačič , 1994a : 5 ; Kranjc , 1999 : 61 ) .
Meje diskurza so povezane z mejami govornega dogodka ( čeprav obstajajo tudi dvomljivi primeri , npr. dolge parlamentarne razprave o neki temi , ki se lahko razvlečejo tudi na več dni ) .
Analiza diskurza pogosto raziskuje prav razmerja med temi ravninami .
Hymes ni ponudil nobenega podobnega spiska za govorne dogodke , kot je Searle za govorna dejanja , tako si večina raziskovalcev glede na trenutne potrebe tvori posamezne kategorije govornih dogodkov .
Govorni dogodek je npr. telefonski pogovor , šolska ura , razgovor za službo , med obiskom v zdravniški ordinaciji ipd.
Naslednje pomembno vprašanje za definicijo diskurza v okviru analize diskurza je , ali naj se termin nanaša samo na govorni prenosnik ali naj podobno kot v vsakdanji rabi vključuje tudi pisnega .
Navezava diskurza na govorni dogodek sicer ne vključuje pisnega prenosnika , vendar je lahko tudi to oblika interakcije ( sploh nekatere zvrsti , npr. dopisovanje ) , z novimi elektronskimi mediji pa se meja med govornim in pisnim prenosnikom zabrisuje , npr. komunikacija prek pisnega prenosnika sprejema lastnosti govornega prenosnika ( spontanost , hitra odzivnost , pogovorna zvrst jezika ...
je manj očitna ( toda enako velja za radijski in televizijski diskurz , kjer je meja med govornim in pisnim prenosnikom lahko zabrisana v nasprotni smeri : govor je vnaprej napisan ) .
Če je besedilo produkt govorjenega diskurza , govorim o govorjenem besedilu , če je nastalo v pisnem diskurzu , pa o pisnem besedilu .
Govorjeno besedilo je običajno spontano tvorjeno ( je spontano besedilo ) , pisno besedilo pa je običajno nespontano tvorjeno , čeprav obstajajo tudi mejni primeri ( branje , nekatere vrste komunikacije prek svetovnega spleta ...
V nadaljevanju povzemam po ( van Dijk , 1997a ) .
Posebno pozornost lahko namenimo vlogi nejezikovnih zvokov in nejezikovne aktivnosti , ki spremlja jezikovno komunikacijo , v diskurzu .
Nadalje lahko opazujemo slovnično strukturo in obliko , način , kako si sledijo besede , besedne zveze , stavki ali izjave ...
Vendar gre v nasprotju s tradicionalnim jezikoslovjem analiza diskurza pri tem preko meje povedi in opazuje , kako na strukturo in oblike izjav vpliva aktualiziran kontekst – jezikovni ( sobesedilo ) in nejezikovni ( okoliščine ) .
Zaradi tega je tako imenovana slovnična pravilnost v analizi diskurza relativen pojem , saj je lahko v nekem sobesedilnem okolju povsem ustrezna ali vsaj nemoteča .
Eden osrednjih pojmov pri tem je koherenca ( smiselna povezanost besedila ( Beaugrande , Dressler , 1992 ) ) .
Redkeje se analiza diskurza osredotoči tudi na slog , npr. na način , da primerjajo različna besedila o isti temi in ugotavljajo variacije med besedili , npr. kateri izrazi so izbrani , kakšne so intonacija in druge prozodične lastnosti , kako so strukturirane izjave ...
S tem ko se začne diskurz opazovati kot dejanje , akcija in interakcija , se opazijo tudi druge vrste dejanj , ki jih opravljamo med komunikacijo , ne samo zgoraj opisana govorna dejanja .
Če govorimo o besednem redu , pomenu izjav , koherentnosti , govornih dejanjih , interakciji , predpostavljamo , da imajo uporabniki jezika vedenje .
Poznajo pravila , ki vladajo takim strukturam , poznajo strategije in kontekst , v katerem se uporabijo .
Ti procesi in predstavitve so po eni strani edinstveni pri vsakem posamezniku , po drugi si uporabniki jezika delijo splošno vedenje o slovnici , diskurznih pravilih , vrednotah , pravilih komunikacije , vedenje o svetu ipd.
Ker raziskava v tej nalogi poteka z namenom podpore razvoju tehnologij strojnega simultanega prevajanja govora , je smiselno , da se usmeri v tisto , kar je v diskurzu čimbolj merljivo , oprijemljivo , materialno , torej predvsem v jezikovno dimenzijo diskurza , po možnosti celo samo v površinsko besedilo ( » besede , kot jih dejansko slišimo ali vidimo « ( Beaugrande , Dressler , 1992 : 12 ) ) .
4.2 Struktura pogovora Ko skušamo človeški pogovor prevesti skozi tehnologijo , ga moramo , da lahko obvladujemo to nalogo , najprej znati razdeliti na manjše strukturne enote .
4.2.1 Zunanja zgradba Telefonski pogovori so bili pogosto predmet raziskav konverzacijskih analiz in imajo zelo prepoznavno zunanjo zgradbo ( Levinson , 1983 : 308-318 ) .
Konverzacijska analiza razlaga , da zato , ker je že zvonjenje telefona prvi akt pogovora , klicani pa nanj odgovori ( ali tudi ne ) .
Na zvonjenje se pogosto odzove s pozdravom , lahko tudi s predstavitvijo ( pove ime podjetja , svoje ime ipd. ) .
Prvi tematski sklop , ugotavlja konverzacijska analiza , je privilegiran , saj ni odvisen od prejšnjih tem in ima govorec večjo svobodo pri izbiri .
Vsebina prvega tematskega sklopa je običajno razumljena kot glavni razlog za klic , vsaka naslednja tema ( angl. topic ) pogovora se prednostno sklada s predhodno .
Da se sogovornika strinjata o končanju pogovora , običajno preverita tako , da potem ko prvi sogovornik z diskurznimi označevalci ali zahvaljevanjem nakaže , da nima več kaj dodati k pogovoru , počaka , da tudi njegov sogovornik na podoben način izrazi isto .
4.2.2 Menjavanje vlog Raziskave menjavanja vlog za tehnologije strojnega simultanega prevajanja telefonskih pogovorov na prvi pogled niso posebej zanimive , saj taki sistemi snemajo govor enega in drugega govorca na ločena kanala , torej večinoma nimajo problemov pri razpoznavanju govorcev , zaznavanju mej med vlogami , pa tudi morebitni hkratni govor tako za sistem na videz ne obstaja.5 Ker pa menjavanje vlog ni izolirano od ostalega pogovora , ga ne smemo povsem odstraniti iz polja našega zanimanja : sistem menjavanja vlog je namreč eden temeljnih procesov , ki potekajo med pogovorom , in seveda vpliva med drugim tako na rabo diskurznih označevalcev kot na strukturo izjav , zato tukaj na kratko predstavljam ta koncept .
Lahko je sestavljena iz različnih enot : samostojnih leksikalnih izrazov , besednih zvez ali izjav .
Takih primerov ne štejem za hkratni govor in so pri transkripciji označeni kot posebna vrsta dogodka .
Razlagajo ( povzeto po Coulthard , 1985 ; Levinson , 1983 ) , da sogovorniki ne čakajo , da bo govorec dokončal svojo vlogo , saj je vedno mogoče še kaj dodati , pač pa so pozorni na točke v govoru , kjer je mogoče prevzeti vlogo .
Te točke so lahko konec sintaktičnih enot ( stavek , poved , besedna zveza itd. ) , ki so hkrati intonacijsko in prozodično označene .
6 • izjavi lahko uvrstimo prvo med prve dele bližnjega para in drugo med druge dele bližnjega para , • izjavi sta povezani , prvemu delu bližnjega para ( po pričakovanju ) sledi samo ustrezen drugi del bližnjega para , • prvi del bližnjega para običajno izbere naslednjega govorca in vedno izbere naslednje dejanje , z drugimi besedami , prvi del bližnjega para napove drugi del .
Praktično to pomeni , da vprašanje napove , da bo praviloma sledil odgovor .
Prvi deli bližnjega para so lahko : vprašanje , pozdrav , izziv , ponudba , prošnja , pritožba , povabilo , naznanilo .
Po mnenju konverzacijskih analiz so bližnji pari ena temeljnih strukturnih enot pogovora .
Konverzacijska analiza argumentira , da pripadajoči drugi del bližnjega para ni zapovedan , vendar ima prednost pred drugimi vrstami .
Drugi deli bližnjega para , ki imajo prednost , so nezaznamovani , medtem ko so ostali zaznamovani in jih govorec posreduje ali po kratkem molku , z ustreznim diskurznim označevalcem ( npr. no ) , z obrazložitvijo , zakaj ne more odgovoriti s prednostno vrsto drugega dela bližnjega para ipd.
Tukaj ji posvetim nekaj pozornosti iz metodoloških in predvsem praktičnih razlogov , saj je izjava kot temeljna strukturna enota pogovora tudi temeljna enota pri transkribiranju govornih korpusov ( ki so med drugim eden temeljnih jezikovnih virov za govorne tehnologije ) in zaželeno je , da so enote označevanja kolikor mogoče nedvoumno določene .
Namreč to , kar bi označili kot osnovno enoto v pogovoru – zanjo prevzemam termin izjava – večkrat ne sovpada s tem , kar vsaj v slovenistični tradiciji poznamo kot stavek in poved , 7 na primer : [ TPma42.trs ] K39 : ker [ + SOGOVORNIK _ ja ] jim nikoli [ nik / o:l ] nič ni dobro [ d / o:b@r ] in vedno najdejo pač dlako v kupu sena in vedno bojo nergali K39 : in zato če že pridejo v Slovenijo kjer še # nikoli # [ nik / o:l ] niso bili [ bl / i : ] K39 : želim res poiskat [ * ] nekaj [ n / e:ki ] K39 : ni finančno ni nikakršnih okvirov oziroma ne ( ) nikakršnih problemov K39 : zato jim želim poiskat [ * ] res nekaj [ n / e:ki ] K39 : naj [ n / e : ] [ IZG ] imajo [ m / a:j ] [ IZG ] tisti [ t / i:zd ] deluxe [ + tujez ] naj [ n / e:j ] [ IZG ] imajo [ m / a:jO ] [ IZG ] tisti [ t / i:st ] da bojo enostavno videli [ v / i:dl ] da tudi [ t / u:d ] v Sloveniji [.]
Če se opira na koncept stavka , pa bi moral vsaj nekatere od enot , ki so v zgornjem primeru označene kot izjave , še dodatno razčleniti .
Vendar tega ne smemo razumeti povsem tehnicistično : premori med govorom so lahko zelo različno dolgi – pri hitrem govoru kratki , izjave pa daljše , pri počasnem tempu govora pa so lahko tudi znotraj izjave daljši premori .
Poleg tega lahko govorec kadarkoli naredi premor , ker npr. išče ustrezno besedo , ostali elementi prozodije ( npr. intonacija ) in skladenjsko-semantične strukture pa kažejo na povezanost obeh delov govora v eno enoto : [ HOha50.trs ] K39 : in sicer ponudbe vašega hotela [.]
Tudi raziskave prozodije spontanega govora kažejo , da prozodija , natančneje intonacija , zaznamuje enote govora ( Vitez , Zwitter Vitez , 2004 ) .
V spodnjem primeru je meja med izjavama postavljena glede na prozodične kazalce , predvsem premor in intonacijo : [ HOha50.trs ] K39 : in sicer da kar [ k \ @ r ] povem situacijo sama pričakujem obisk tam nekje konec maja oziroma sredini maja K39 : eeem treh ali [ al ] pa štirih Nemcev to zaenkrat še ne vem sss se pravi oni [ + SOGOVORNIK _ mhm ] so pač iz Nemčije [ + SOGOVORNIK _ mhm ] Skladenjsko-semantične enote pa bi za ta primer segmentirali drugače , npr. tako : K39 : in sicer da kar [ k \ @ r ] povem situacijo K39 : sama pričakujem obisk tam nekje konec maja oziroma sredini maja K39 : eeem treh ali [ al ] pa štirih Nemcev to zaenkrat še ne vem K39 : sss se pravi oni [ + SOGOVORNIK _ mhm ] so pač iz Nemčije [ + SOGOVORNIK _ mhm ] Vprašanje segmentiranja govora na osnovne enote segmente ( kar ustreza konceptu izjave , predstavljenemu tukaj ) se odpira tudi pri urejanju govornih korpusov za razvoj govornih tehnologij .
Po drugi strani pa predolge enote močno otežijo procesiranje zaradi kompleksnosti računanja , zato je zaželeno , da večinoma ne presegajo dolžine 15 do 20 besed .
Glede na vse navedene pomisleke in premisleke ter praktične izkušnje s segmentiranjem govora razumem izjavo kot enoto govora s sporočilno vlogo , ki je zamejena s premori v govoru istega govorca in označena z intonacijo ( padajočo ) .
Zdi se , da te besede označujejo , pogosto na zelo kompleksen način , na kak način je izjava , ki jih vključuje , odgovor na nek del prejšnjega diskurza ali nadaljevanje prejšnjega diskurza .
V splošnih pregledih raziskav diskurznih označevalcev , kot sta ( Schourup , 1999 ) ali ( Fraser , 1999 ) , navajajo , da se pojavljajo tudi številna druga poimenovanja za to skupino izrazov , npr. diskurzni členki ( angl. discourse particles ) , diskurzni operatorji ( angl. discourse operators ) , diskurzni povezovalci ( angl. discourse connectives ) , diskurzni deiktiki ( angl. discourse deixies ) , pragmatični označevalci ( angl. pragmatic markers ) , pragmatični operatorji ( angl. pragmatic operators ) , pragmatični členki ( angl. pragmatic particles ) , stavčni povezovalci ( angl. sentence connectives ) ipd.
Različna poimenovanja doma in v tujini pogosto kažejo tudi na različna izhodišča in posledično ( delno ) različna opredeljevanja problema .
4.3.1 Slovenske raziskave nekaterih elementov , ki jih lahko štejemo med diskurzne označevalce Raziskave diskurznih označevalcev v slovenskem jeziku so do zdaj narejene za pisna besedila .
Širša raziskava nekaterih elementov , ki jih lahko štejemo med diskurzne označevalce , je predstavljena v ( Gorjanc , 1998 ) .
« ( Levinson , 1983 : 87-88 ) 52 besedilnega pomena predvsem nadgrajuje spoznanja tradicionalnega sistemskega jezikoslovja .
( Schlamberger Brezar , 1998 ) govori o povezovalcih v diskurzu predvsem skozi izhodišča t.i. Ženevske šole v okviru diskurzivne pragmatike .
Med povezovalce šteje besede ali morfeme , ki » povezujejo jezikovne enote na različnih ravneh .
Na gradivu avtentičnih diskurzov razvrsti med zaznamovalce zgradbe konverzacije izraze v bistvu , torej , zdaj , ne ( ki so vsi proaktivni , z vnaprejšnjim delovanjem ) in ja , hm , mhm , saj , no , ne ( ki so vsi retroaktivni , izražajo odnos do izrečenega ) .
Na povezovalno vlogo členkov v slovenskem jeziku opozori ( Skubic , 1999 ) in skuša vlogo , ki jo pri tvorbi kohezije igrajo členki , pojasniti s funkcijskim pristopom po vzoru Hallidaya .
» Besedilni označevalci /.../ ne vstopajo v pomenska razmerja s stavčnimi členi oz. posameznimi deli povedi in tako niso nosilci modifikacijske vrednosti oz. moči .
Širši okvir raziskavam elementov , ki so lahko v vlogi diskurznih označevalcev , najdemo v slovenskem prostoru v raziskavah metabesedilnih elementov oz. metadiskurza in metateksta v delu Agnes Pisanski Peterlin ( 2001 ; 2002 ; 2005 ) .
Podobno kot bomo videli , da velja za diskurzne označevalce , ugotavlja avtorica ( Pisanski , 2001 ) za metabesedilo : definicije različnih avtorjev se le delno ujemajo , vsaka od različnih klasifikacij metabesedilnih elementov pa je primerna predvsem za določeno vrsto raziskave .
4.3.2 Kratek pregled tujih raziskav diskurznih označevalcev V slovenskem prostoru so raziskave elementov , ki jih prištevamo med diskurzne označevalce , torej narejene samo za pisni diskurz .
Nasprotno termin diskurzni označevalec v tujini izhaja zlasti iz raziskav pogovora .
Na korpusnem gradivu natančno analizira izraze and ( sln .
Diskurzni označevalci po njenem označujejo posamezne ravni , in sicer posamezen označevalec običajno primarno označuje eno od ravni , hkrati pa lahko označuje še eno ali več ravni sekundarno .
Med lastnostmi diskurznih označevalcev navaja povezovalnost , pripadnost različnim besednim vrstam , sintaktično so ločeni od povedi , pogosto so rabljeni v začetku izjave , prozodično jih prepoznamo po poudarku , premoru ipd. , nimajo pomena sami po sebi ali imajo dvoumen pomen oz. so refleksivni .
Glede njihove bistvene lastnosti , povezovalnosti , pravi , da diskurzni označevalci kažejo na besedilo in udeležence pogovora .
Po drugi strani diskurzni označevalci hkrati kažejo tudi ali na predhodno besedilo ali na besedilo , ki bo sledilo , ali oboje .
Oh se po ugotovitvah ( Schiffrin , 1987 : 323 ) nanaša na informacijo , ki je bila predstavljena , well pa na predhodno informacijo in na to , kar bo sledilo .
Po njenem mnenju diskurzni označevalci niso stavčni indikatorji diskurzne strukture , npr. naj vam povem zgodbo , kot sem rekel , ker je to tako , deiktični izrazi , ki niso rabljeni anaforično ( zdaj , tukaj , danes ) , anaforični zaimki in samostalniške besedne zveze itd.
Druga smer so raziskave Brucea Fraserja .
Pragmatični označevalci ne prispevajo k propozicijski vsebini izjave , ampak signalizirajo različne vrste sporočil ( Fraser , 1999 : 936 ) .
Osnovni označevalci ( angl. basic markers ) določajo silo osnovnega sporočila , tj. sporočila , ki vzame stavčno propozicijo za svojo vsebino .
Fraser svojih ugotovitev ne preverja na korpusu govorjenih diskurzov , zaradi česar lahko upravičeno podvomimo v na videz čisto in elegantno razvrstitev nepropozicijskih delov izjave v štiri skupine pragmatičnih označevalcev .
Tretjo smer raziskovanja diskurznih označevalcev predstavlja Diane Blakemore ( povzeto po Frazer , 1999 ; Schourup , 1999 ) .
Informacija v izjavi je lahko relevantna na štiri načine , izražene z diskurznimi označevalci : • omogoča izpeljavo kontekstualne implikacije ( npr. torej , zato , tudi , prav tako ) , Teorija relevantnosti ( Wilson , 2005 ) temelji na dveh temeljnih pravilih .
4.3.3 Lastnosti diskurznih označevalcev Iz predstavljenega hitro ugotovimo , da ni nobene splošne sprejete definicije diskurznih označevalcev in da tudi ni enotnega mnenja , kateri izrazi sodijo v razred diskurznih označevalcev in kateri ne .
Posledično lahko nek izraz po eni definiciji sodi med diskurzne označevalce , po drugi pa je iz te skupine izločen .
V nadaljevanju predstavljene lastnosti so manj konsistentne : 4 ) Diskurzni označevalci so običajno sintaktično ločeni od izjave , tj. so zunaj sintaktične strukture izjave ali so le šibko povezani z njo .
6 ) Raziskovalci ugotavljajo , da se diskurzni označevalci običajno pojavijo v začetku enote diskurza , ki ji pripadajo .
7 ) Raziskovalci običajno ugotavljajo , da so besednovrstno diskurzni označevalci iz različnih kategorij : vezniki ( in , toda , zato ) , prislovi ( zdaj , kakor koli ) , členki ( pravzaprav , ja , ne ) , medmeti ( aha , aja ) , glagoli ( glej , vidiš , mislim , veš ) ...
S tem sledim poimenovanju , ki ga uvede ( Kranjc , 1999 ) , čeprav so v slovenskem prostoru že uvedeni tudi termini konektor , pragmatični povezovalec , besedilni povezovalec in metadiskurz , ki pa izhajajo večinoma iz drugačnih izhodišč kot raziskava diskurznih označevalcev v tej nalogi .
Termin besedilni vidim v tem primeru kot manj ustrezen , saj ne gre samo za povezovalce besedilnih delov , ampak za povezovalce diskurznih delov ( o razliki med besedilom in diskurzom glej 4.1.1 ) .
Termin diskurzni označevalec tudi sovpada s poimenovanjem v raziskavi ( Schiffrin , 1987 ) .
Pri definiranju diskurznih označevalcev izhajam predvsem iz raziskav v ( Schiffrin , 1987 ) in podobnih ( glej 4.3.2 ) .
Po ( Schiffrin , 1987 ) diskurzni označevalci kažejo na različne ravni pogovora , pri čemer izmed predstavljenih petih ravni ohranim razliko med označevalci , ki predvsem označujejo predstavno strukturo diskurza , in vsemi ostalimi , ki označujejo predvsem pragmatično strukturo .
Iz njune delitve vidimo , da vlogo diskurznih označevalcev , ki označujejo predvsem predstavno strukturo , običajno opravljajo vezniki , navezovalni členki in nekateri prislovi .
Povezovalna vloga teh sredstev v slovenskem jeziku ni novo odkritje ( Toporišič , 2000 ; Gorjanc , 1998 ; Schlamberger Brezar , 1998 ; Smolej , 2004a ) , vendar izhaja predvsem iz raziskovanja pisnega diskurza ( razen v Schlamberger Brezar , 1998 ) in ne vedno iz analize diskurza .
Kot navaja ( Redeker , 1990 ) , sta osnovni značilnosti teh označevalcev , da povezujejo predvsem druge ravni diskurza , ne samo predstavne , in da prispevajo predvsem k proceduralnemu pomenu .
Tej skupini izrazov bom v raziskavi namenila več pozornosti ( glej 6.2 ) .
Pri vsakem izrazu najprej analiziram , ali je lahko rabljen samo kot diskurzni označevalec ali pa je lahko rabljen tudi kot del propozicijske vsebine ter ali ima kakšne variante .
Osrednji del analize vsakega izraza v vlogi diskurznega označevalca posvetim definiranju njegovih pragmatičnih vlog , pri čemer uporabljam predvsem kvalitativni pristop , in sicer skušam odgovoriti na vprašanje , kako je diskurzni označevalec v aktualiziranem kontekstu vplival na diskurz .
Za uporabo v strojnem simultanem prevajanju govora so zanimivi tudi pogostost rabe diskurznih označevalcev , njihov položaj v izjavi in sopojavljanje .
Natančen postopek analize je opisan v 6.2. 4.4 Popravljanja Tako rekoč na vseh področjih , ki se ukvarjajo z raziskovanjem pogovora , tudi pri strojnem simultanem prevajanju govora , opozarjajo na značilnosti , ki jih poimenujejo premori , zapolnjevalci vrzeli , podaljšani zlogi , napačni začetki , zatikanja , diskontinuitete , popravljanja , ponavljanja , nedokončane misli , spremembe začete strukture ipd.
Razkrivanje paradigmatske osi vključuje večkratni izbor iste leksikalne ali slovnične enote , saj to pomeni , da tvorjenje / izpeljava stavčne strukture ostaja na istem mestu sintagmatske osi .
Razkrivanje paradigmatske osi pa pomeni tudi izbor različnih leksikalnih ali slovničnih enot iste paradigmatske osi , ki nastopajo na istem mestu sintagmatske osi .
Stična točka s tukajšnjo raziskavo so skladenjske značilnosti govorjenega besedila , ki jih loči glede na tipologijo v ( Muellerova , 1987 ) : skladenjske modifikacije besedilnega povezovanja ( nedokončane skladenjske strukture , kot so zamolk , preskok , izpust , samostojni odvisni stavek ...
Skladenjsko analizo povedi v govorjenem jeziku politikov predstavi tudi ( Hribar , 2001 / 02 ) , vendar se posveti samo skladnji stavka in povedi , torej ne obravnava značilnosti , ki jih tu imenujem popravljanja .
V konverzacijskih analizah , ki jih tudi v drugih delih te raziskave vključujem kot aplikativno uporaben pristop pri razvoju strojnega simultanega prevajanja govora , sta eni najvplivnejših raziskav navedenih značilnosti ( Schegloff et al. , 1977 ) in ( Schegloff , 1979 ) , čeprav so jih seveda raziskovali tudi drugi avtorji , npr. ( Jefferson , 1975 ; 1983 ) .
opozori , jo spodbudi ali popravi nekdo drug , tj. sogovornik .
v govoru govorca opozori sogovornik , jo pogosteje popravi ponovno govorec sam .
Tisti , ki sproži popravljanje , namreč ni nujno tudi tisti , ki izvede popravljanje ( lahko sproži popravljanje sogovornik , izvede pa ga prvotni govorec , npr. : A : Je Al danes tukaj ?
eee ...
Za strojno simultano prevajanje govora je zlasti zanimivo , kako razpoznavati mesto v pogovoru , kjer se pojavi popravljanje , zato poglejmo natančneje , kaj ( Schegloff et al. , 1977 ) navajajo kot sredstva za sprožitev popravljanja .
Popravljanje lahko sprožimo z raznimi neleksikalnimi motnjami , npr. odrezanimi besedami , podaljšanimi glasovi , uh ( v slovenščini bi ustrezal eee ) , premorom .
, lahko poleg vprašalnice ponovi del problematične enote govora , uporabi izraz y'mean ( sln .
misliš ) in možno interpretacijo problematične enote govora ipd.
Popravljanje lahko vpliva na strukturo izjave , v kateri se pojavi , tj. spremeni že začeto strukturo .
Prednostno mesto popravljanja je znotraj iste vloge , v kateri je problematična enota govora , zato ker je naslednja vloga prednostno rezervirana za sekvenčno implicirano nadaljevanje , z drugimi besedami za drugi del bližnjega para .
Ker je znotraj iste vloge konec izjave vedno mesto , kjer je večja verjetnost za zamenjavo vloge , ima prednost popravljanje znotraj iste izjave , v kateri je problematična enota , saj bo konec izjave lahko tudi konec vloge .
Enote samopopravljanja imajo določen red , sistem .
To je : kmalu po začetku izjave ali malo pred koncem izjave , hitro za težavnim mestom v govoru , običajno v območju dveh besed , v določenih kontekstih pa lahko obstajajo posebna pravila popravljanja , navede primer t. i. pivotnih elementov ( npr. don't say that i'm exa-just say i'm a liar – dZ od exaggerate govorec uporabi kot dZ v just ) .
( Schegloff , 1979 : 277 ) zaključi , da v govoru obstaja sistematična alternativa skladenjsko koherentnemu nadaljevanju govora , in ta alternativa je pobuda za popravljanje .
pridemo od rdeče in gremo naravnost k zeleni ( ta in naslednji primeri so povzeti iz ( Levelt , 1983 ) , iz korpusa spontanih govorjenih besedil , kjer so morali govorci opisovati določene vizualne vzorce ) .
( Allwood et al. , 1990 ) govorijo o upravljanju govora ( angl. speech management ) .
Študija izhaja iz jezikovnopragmatičnega pristopa .
Upravljanje govora je nadrejeno osrednjemu sporočilu in interakciji in primerljivo s Hallidayevo besedilno ravnijo .
Za opravljanje teh diskurzivnih vlog ima govorec v sistemu na izbiro različne strukture : A. Enostavne strukture : 1. osnovni izrazi upravljanja govora : a. premor , b. enostavni izrazi ( npr. eee , mmm ...
) , c. eksplicitne fraze ( npr. kako se reče ) , d. drugi glasovni zvoki ( vzdih , tleskanje z jezikom , sikanje ipd. ) ; 2. osnovni procesi upravljanja govora : e. podaljševanje glasov , zlogov , f. prekinitev ( npr. torej en ...
samo zato ker bo ) .
jaz sem potem preskočil ) ; 2. integrirani postopki – podaljšan holistični postopek : z osnovnim izrazom upravljanja govora govorec označi vlogo , ki bi lahko ostala neoznačena , npr. iskanje izraza ( primer : da ne bi ...
lahko zadene takšna področja kjer ) .
V slovenskem prostoru najdemo pri ( Kranjc , 1999 ) izraz tekočnost govora .
Menim , da netekočnost ni posebno posrečen termin , saj implicira , da te značilnosti delajo diskurz netekoč ; kar pa velja predvsem za skladenjsko raven , kot smo o njej navajeni razmišljati v tradicionalnem jezikoslovju , na pragmatični ravni pa lahko imajo te značilnosti prav nasproten učinek , npr. omogočajo , da diskurz kontinuirano teče .
Enako kot pri diskurznih označevalcih želimo tudi za popravljanja imeti jasno določene kriterije , po katerih jih lahko označujemo na primer v korpusu , zato jih bom skušala definirati .
Vsaj zelo na splošno skušam tudi razjasniti njihovo vlogo v diskurzu , za morebitno avtomatsko razpoznavanje popravljanj pa je lahko v pomoč tudi poznavanje njihove strukture .
• Tuje predstavljene raziskave so usmerjene samo v popravljanja in se ukvarjajo : ( Schegloff et al. , 1977 ; Schegloff , 1979 ) predvsem s sociološkim , ( Levelt , 1983 ) predvsem s psihološkim in ( Allwood et al. , 1990 ) s sociološkim in psihološkim vidikom popravljanj .
• Popravljanje ima manjše enote , ki imajo določen sistem , trdi ( Schegloff , 1979 ) .
Natančnejši postopek analize je opisan v 6.3. 4.5 Sklep Pri obvladovanju problemov pri procesiranju pogovornega govora , ki izhajajo iz značilnosti spontanega govorjenega diskurza , se lahko naslonimo na nekatere koncepte konverzacijskih analiz .
Pri nadaljnjem raziskovanju iščem , ali lahko v izjavah ločimo jezikovna sredstva ali strukture , ki so manj pomembna za posredovanje ( predstavnega ) pomena .
V luči uporabe pri razvoju sistemov strojnega simultanega prevajanja govora je zapeljiva misel , da bi lahko v besedilu ločili jezikovna sredstva in strukture , ki so v pragmatični vlogi , od tistih , ki so v predstavni vlogi , vendar kasneje ( v analizah ) vidimo , da na ravni besedila natančno ločevanje ni mogoče .
Vseeno pa lahko ločimo nekatera jezikovna sredstva in strukture , ki so običajno rabljeni predvsem v pragmatični vlogi , in tem posvetim pozornost v nadaljevanju : ( 1 ) Koncept diskurznih označevalcev zajame veliko za spontan govorjeni diskurz značilnih izrazov , katerih vloga je v tradicionalnem jezikoslovju malo raziskovana .
Ti izrazi pogosto » izstopajo « iz govorjenega besedila , saj so sintaktično-semantično le ohlapno vpeti vanj , po drugi strani pa jim raziskovalci pripisujejo pomembno kontekstno-povezovalno vlogo .
Podobne poskuse s konceptom govornih dejanj so že uvajali v sisteme strojnega simultanega prevajanja govora , npr. Verbmobil .
65 5 GRADIVO ZA ANALIZO Za praktični del te raziskave sem uporabila korpus telefonskih pogovorov v turizmu Turdis-1 ( v nadaljevanju tudi samo korpus ) , ki smo ga v obdobju od konca februarja 2004 do konca junija 2004 predvsem za namene te raziskave snemali na Fakulteti za elektrotehniko , računalništvo in informatiko v Mariboru ( FERI ) .
Ena od skupnih značilnosti teh jezikovnih virov ( Shum et al. , 1994 ; Lavie et al. , 1997 ; Kurematsu et al. , 2000 ; Aiello et al. , 1999 ) , tudi korpusov pogovorov , uporabljenih v projektu LC-STAR ( Arranz et al. , 2004b ) , je , da so pogovori igrani in posneti v studiu .
Klicateljem smo pred snemanjem razložili , zakaj snemamo , in poudarili , da želimo , da bi bili pogovori čimbolj realni in naravni .
66 V projektu LC-STAR , na katerega se med drugim navezuje ta raziskava , so teme pogovorov določili takole ( Arranz et al. , 2004b ) : o pogovori v hotelu ( rezervacija , informacije o storitvah , informacije o aktivnostih za prosti čas , prošnja za storitev ) , o pogovori v turistični agenciji ( rezervacija vozovnic , rezervacija hotelskih sob , rezervacija potovanj , sprememba rezervacije , odpoved rezervacije , potrditev rezervacije ) , o pogovori v turistični pisarni ( informacije o mestu , prevoz , namestitev , gastronomija , znamenitosti , prosti čas , nakupovanje , nočno življenje ) , o pogovori na železniški postaji / letališču ( rezervacija vozovnic , informacije o urnikih , prostih mestih , cenah , prtljagi …
Po drugi strani pa klicatelji veliko sprašujejo o posameznih destinacijah in možnostih letovanja ali popotovanja ali organiziranja poti ( predvsem z letalom ) , pri čemer je spekter različnih možnosti zelo širok : različnih destinacij in načinov letovanja , potovanja ipd.
Za telefonske pogovore s turistično pisarno in hotelom pa je bilo treba večkrat pomagati ustvariti imaginarno situacijo ( npr. za prijatelja iz tujine iščeš poceni namestitev v določenem terminu ) , vendar vedno skupaj s klicateljem , tako da je bila ta čim bližja njegovemu resničnemu življenju in izkušnjam .
Za zajem govora smo uporabili ISDN - kartico , in sicer je moral klicatelj vedno zavrteti telefonsko številko sistema , ki je snemal govor , sistem pa je takoj poklical naprej telefonsko številko , ki je bila vnesena v program in smo jo lahko ročno spreminjali .
Zvočni signal je tako v obe smeri potekal prek sistema .
Slika 4 : Shema poteka signala pri snemanju telefonskih pogovorov za Turdis .
Omogoča prepisovanje in segmentiranje posnetkov govora , označevanje sekcij , lastnosti govorca ( narečje , spol ipd. ) , označevanje različnih negovornih zvočnih dogodkov ob signalu ( šume v ozadju , smeh , vdih , kašelj ipd. ) ter skoraj poljubno označevanje dogodkov v govoru ( tuji izrazi ali govor v tujem jeziku , poljubne skupine besed , ki jih želimo raziskovati itd. ) .
Vsak posnetek pogovora , ki je del baze Turdis-1 , je shranjen kot posebna zvočna datoteka v formatu wav , pripadajoči prepis posnetka s programom Transcriber je v datoteki z identičnim imenom in končnico trs .
Imena datotek so v prilogi in v primerih v tej nalogi ohranjena kot oznaka pogovora in so so sestavljena iz naslednjih enot : • prvi dve črki sta zapisani z veliko začetnico in pomenita : HO – hotel , TA – turistična agencija , TP – turistična pisarna , • tretja in četrta črka sta zapisani z malo začetnico in pomenita : ha – Habakuk , pi – Piramida , ko – Kompas , ne – Neckermann Reisen , so – Sonček , ma – MATIC , • peti in šesti znak sta število , ki označuje zaporedni posnetek pogovora v celotni bazi Turdis .
Kadar klicatelj čaka na prevezavo , je ta odsek označen kot posebna sekcija prevezava .
2.
Označen je spol govorca in narečna pripadnost glede na izvor ( ločim : p-stajersko , p - panonsko , p-korosko , p-mariborsko , p-ljubljansko , p-gorenjsko , p-dolenjsko , p - primorsko , p-rovtarsko ; p je dodan kot oznaka , ki omogoča ob morebitni primerjavi z ostalimi podobnimi jezikovnimi viri ( npr. Broadcast News ( Žgank et al. , 2004 ) razločevanje , saj govorci praviloma govorijo pogovorno zvrst z nekaterimi značilnostmi narečja , iz katerega izvirajo , ne čistega narečja ) .
Poleg menjavanja govorcev je lahko govor istega govorca razdeljen na več manjših enot – segmentov , ki označujejo meje med izjavami .
Ker je pri tem velikokrat presekana izjava enega ali drugega govorca , je del , kjer je izjava prekinjena zaradi začetka ali konca hkratnega govora enega govorca , označen z [ 1 ] na koncu , del , kjer se ta ista izjava nadaljuje , pa z [ 2 ] na začetku .
Če sredi hkratnega govora ni mogoče postaviti meje med izjavami v govoru enega govorca , pa bi bilo to primerno , je meja med izjavami označena s [ P ] , npr. : Api3 [ prekr ] : štirinajst [ St \ @ rnajz ] dni prej bi že bilo [ bl / o : ] fajn [ + NERAZUMLJIVO ] K19 [ prekr ] : mislim ka ( k ) ...
Ti so označeni kot posebna vrsta dogodka , pri čemer je opisano , kateri oporni signal je sogovornik uporabil in ali je pri tem prekrival govor drugega govorca ( npr. [ + overlap _ mhm ] ) ali ne ( [ overlap _ ja ] ) .
V drugem primeru je ta dogodek običajno umeščen v poseben segment .
izgovorjene besede zapisane tako , kot je predvideno po knjižnem standardu , ne tako , kot so dejansko izgovorjene .
• Izjema so naslednje besede : pogovorni nedoločnik je prepisan brez končnega - i , če je tako izgovorjen , besede mogli ( uporabljen v pomenu morali ) , najdli ( od najti ) , taki ( v pomenu tak , takšen ) , pol ( v pomenu potem ) , more ( namesto 69 oblike mora ) , večih - im ( sklanjane oblike sicer nesklonljive besede več ) .
Gre za primere , ko je v aktualiziranem kontekstu izgovorjena beseda očitno lapsus , npr. te bi v bistvu ta dva dni kot [ + pron = lapsus ] je konferenca bi sigurno tu prespali .
Kadar govorec navaja svoje osebne podatke , so samo opisani z vrsto podatka , npr. [ ime ] , [ priimek ] , [ ~ P ~ R ~ I ~ I ~ M ~ E ~ K ] ( pri črkovanju priimka ) , [ ulica ] itd. 14.
Vse besede razen pravih lastnih imen , tudi na začetku izjave , so prepisane z malo začetnico .
Lastna imena so označena na dva načina : z veliko začetnico , kadar gre za pravo lastno ime ( npr. Habakuk ) , ali z narekovaji ( » agencija sonček « ) .
Tuje besede so označene z dogodkom lang in jezikom , iz katerega izhajajo , npr. [ lang = Engl - ] coffee breaki [ - lang = Engl ] .
označujejo nedokončane izjave , npr. kaj mi lahko vi ...
, nestični vprašaj pa rastočo intonacijo ( stični vprašaj nakazuje rastočo intonacijo diskurznega označevalca , glej 6.2.3 ) .
20.
Z možnostmi za označevanje dogodkov ( funkcija event v Transcriberju ) so označeni razni šumi , ki jih med govorjenjem povzroča govorec ali njegov sogovornik : vdih , izdih , smeh , kašljanje ...
Ostale posebne oznake so dodane za potrebe te raziskave .
[ + pron = izg ] [ IZG ] Slaba izgovorjava .
[ UVOD ] Začetek uvodne sekcije .
Besedilo [ 1 ] Besedilo [ 1 ] Začetek hkratnega govora sredi izjave .
[ 2 ] besedilo [ 2 ] besedilo Nadaljevanje zadnje izjave , ki se konča z [ 1 ] .
besedilo [ P ] besedilo besedilo [ P ] besedilo Meja med izjavama / segmentoma sredi hkratnega govora .
Oporni signali : [ + lex = overlap _ ja ] [ + SOGOVORNIK _ ja ] Oporni signal se prekriva z govorom govorca .
Tujke : [ lang = English - ] [ angl - ] Začetek govora v tujem jeziku , če je to več kot ena beseda ( primer za angleščino ) .
[ - lang = English ] [ - angl ] Konec govora v tujem jeziku ( angleščina ) .
[ + lang = English ] [ + angl ] Prejšnja beseda je tujka ( angleška ) .
[ + latin ] , [ + tujez ] Namesto angl je latin za latinsko in tujez za vse ostale jezike .
Ostalo enako kot za nerazumljivo .
Diskurzni označevalci : [ + lex = marker ] Diskurzni označevalec .
Tabela 2 : Oznake v programu Transcriber in v ilustrativnem gradivu v nalogi .
5.3 Nekaj statističnih podatkov o korpusu TURDIS-1 V prvi fazi snemanja korpusa Turdis smo posneli okoli pet ur pogovorov .
Iz tega gradiva sem glede vrsto turistične organizacije , v okviru katere poteka pogovor , ter glede na spol in narečni izvor govorcev kolikor mogoče uravnoteženo izbrala 28 posnetkov , ki vključujejo 30 pogovorov : v dveh posnetkih namreč agent v turistični agenciji klicatelja preveže k drugemu sogovorniku , kar označim kot nov pogovor .
V nadaljevanju predstavljam nekaj osnovnih podatkov o izbranem gradivu , ki ga poimenujem Turdis-1 .
Št. pog .
6 ANALIZE IN REZULTATI V tem poglavju s koncepti , predstavljenimi v poglavju Analiza diskurza , analiziram gradivo v korpusu Turdis-1 , in tako izpolnim drugi del zastavljenih ciljev .
Analize ločim v tri večje skupine : najprej analiziram uvodne in zaključne sekcije pogovorov , v osrednjem delu po posameznih poglavjih analiziram najpogostejše izraze v vlogi diskurznega označevalca ( ja , mhm , aha , aja , ne ?
Analize in rezultati so predstavljeni skupaj z ilustrativnim gradivom iz korpusa .
6.1 Struktura telefonskega pogovora Kot navajam v 4.2.1 , imajo telefonski pogovori zelo prepoznavne uvodne in zaključne sekcije , saj lahko v njih najdemo ponavljajoče se vzorce jezikovne rabe , kar močno olajša strojno razpoznavo govora in prevajanje govorjenega besedila , hkrati pa sta uspešen uvod in zaključek nujen del pragmatično uspešnega pogovora .
Postopek analize uvodnih in zaključnih sekcij je naslednji : • opazujem , ali so v analiziranem gradivu kakšni ponavljajoči se vzorci jezikovne rabe , in jih opišem ( tudi s pragmatičnega stališča ) , • ponavljajoče se vzorce kvantitativno ocenim .
Turistični delavec v teh ustanovah v prvi izjavi vedno ( z imenom ) predstavi ustanovo , ki jo zastopa : [ HOpi36.trs ] Api2 : " hotel piramida " zelo redko tudi samo sebe : [ TAso16.trs ] Aso1 : dober dan [ ime ] pri telefonu kar nekajkrat pa najprej ustanovo , nato pa še sebe : [ TAne77.trs ] Ane2 : Neckermann Reisen [ ime ] Pogost del uvodnih izjav turističnega delavca je tudi pozdrav : [ TAko43.trs ] Ako1 : dober dan želim " kompas " izvolite Sicer lahko sledi šele po pozdravu klicatelja : [ HOpi36.trs ] Api2 : " hotel piramida " K30 : dober dan [ ime ] [ priimek ] pri [ p@r ] telefonu K30 [ prekr ] : jaz [ j \ @ s ] imam [ m / a:m ] [ 1 ] Api2 [ prekr ] : dober dan K30 : [ 2 ] pa eno vprašanje in sicer V nekaj uvodnih sekcijah ( 7 od 30 ) turistični delavec ne izreče pozdrava » dober dan « , pač pa v teh vedno v prvi uvodni izjavi uporabi prosim .
S pragmatičnega stališča lahko prosim v teh rabah opišemo kot fatični signal , ki po eni strani nadomešča pozdrav , hkrati pa izraža pripravljenost govorca , da prisluhne sogovorniku , v splošnem torej pripravljenost na komunikacijo : [ HOpi24.trs ] Api1 : " hotel piramida " prosim K17 : dober dan [ priimek ] tu iz Maribora Api1 : izvolite [ izv / o:ltE ] K17 : ja mene zanima za eee naslednji vikend eee sobo za dve osebi ne ?
Za predstavitvijo in pozdravom je poleg prosim pogosta tudi fraza izvolite : [ TAko43.trs ] Ako1 : dober dan želim " kompas " izvolite K29 : eee dober dan Pragmatična vloga prosim ali izvolite v teh rabah je lahko zelo sorodna , čeprav izvolite verjetno v manjši meri prevzema tudi vlogo pozdrava ( v nobenem primeru v korpusu ni rabljen namesto pozdrava ) .
K23 : dober dan K23 [ prekr ] : lep pozdrav Ako1 [ prekr ] : dober dan Pri predstavitvi je lahko dodana fraza pri telefonu ali na drugi strani , vendar v korpusu Turdis-1 redko : [ TAso11.trs ] Aso7 : ( dobe ) r dan " agencija sonček " [ ime ] na drugi strani izvolite [ izv / o:ltE ] [ TAso16.trs ] Aso1 : dober dan [ ime ] pri telefonu Klicatelj vedno prevzame drugo zaporedno vlogo v pogovoru , po uvodni identifikaciji in ( opcijsko ) pozdravu turističnega delavca .
Brez izjeme začne klicatelj svojo vlogo s pozdravom dober dan , ki pa je še kar pogosto uveden z diskurznim označevalcem ja ( 5-krat v skupno 30 pogovorih ) ali eee ( 6-krat ) : [ TPma42.trs ] Ama1 : Matic prosim K39 : ja dober dan želim [ TPma27.trs ] Ama1 : Matic prosim K8 : eee dober dan Opcijsko , v korpusu v dobri polovici primerov , pozdravu sledi predstavitev klicatelja , lahko samo z imenom , z imenom in priimkom , samo priimkom , dodan je lahko kraj , od koder kliče , ali samo pri telefonu ali tukaj ipd. , kar lahko pragmatično interpretiramo tudi kot dokazovnje verodostojnosti klicatelja : [ HOha61.trs ] Aha3 : recepcija hotela Habakuk dober dan K38 : dober dan [ ime ] [ priimek1 ] [ priimek2 ] pri telefonu [ HOpi24.trs ] Api1 : " hotel piramida " prosim K17 : dober dan [ priimek ] tu iz Maribora [ HOpi71.trs ] Api6 : recepcija " hotela piramida " dober dan K36 : dober dan [ ime ] pri telefonu V enem primeru klicatelj po pozdravu nagovori klicanega z gospa : [ TAko47.trs ] Ako3 : dober dan " kompas " prosim K25 : ja dober dan gospa Posebnost v tem sklopu je , ko klicatelj po pozdravu prosi za točno določenega sogovornika , potem ko iz predstavitve sogovornika ( in verjetno tudi glasu – ženski : moški glas ) spozna , da ne govori s tisto osebo , s katero želi : [ TAso09.trs ] Aso3 : " sonček " [ ime ] prosim K8 : eee dober dan gospoda [ ime ] prosim Če so uvodne izjave predstavljanja in pozdravljanja uspešno izmenjane , klicatelj preide v pojasnitev razloga za klic , sicer se lahko kak del ponovi : [ HOpi36.trs ] Api2 : " hotel piramida " prosim K2 : dober dan [ ime ] [ priimek ] pri telefonu K2 [ prekr ] : " hotel piramida " ?
6.1.2 Zaključne sekcije Za zaključne sekcije poleg ponavljajočih se vzorcev jezikovne rabe velja , da morajo biti kar se da primerno umeščene v pogovor , da se nobeden od sogovornikov ne čuti oškodovanega .
Govorci ( v analizirani zvrsti pogovorov to praviloma stori klicatelj , ne klicani ) lahko nakažejo željo , da bi pogovor zaključili , potem ko je bil zadnji tematski sklop obravnavan v vsaj eni izmenjavi in ko smatrajo , da nimajo več kaj dodati k temu sklopu niti ne želijo začeti novega tematskega sklopa .
V korpusu je nestrinjanje glede zaključevanja najbolj izrazito v naslednjem primeru , kjer v zadnji tretjini pogovora klicatelj kar nekajkrat nakaže , da bi želel končati , klicani pa mu želi prej posredovati še dodatne informacije : [ TAko47.trs ] Ako1 : pol [ * ] pa imate [ m / a:tE ] [ + SOGOVORNIK _ mhm ] recimo štiri zvezdice Akaba Gulz ne ?
Vendar moramo biti pri diskurznih označevalcih dobro idr. pozorni : ti lahko signalizirajo tudi prehode med tematskimi sklopi .
V korpusu Turdis-1 je praviloma klicatelj ( in ne klicani ) tisti , ki prvi signalizira zaključek , razen če je soglasje o zaključevanju pogovora dovolj jasno iz predhodne propozicijske vsebine : [ TAko40.trs ] K23 [ prekr ] : pet dva pet [ 1 ] Ako2 [ prekr ] : eee poštno številko mi dajte K23 : [ 2 ] šest dva tri nič Ako2 : [ TIHO - ] šest dva tri nič [ - TIHO ] Ako2 [ prekr ] : Postojna K23 [ prekr ] : Postojna [ zaključek ] Ako2 : okej [ ime ] K23 [ prekr ] : no najlepša hvala Ako2 [ prekr ] : imate [ m / a:tE ] to jutri doma Ako2 : kakorkoli [ k / a:k@rk / o:li ] pa se mogoče pol [ * ] čujeva ne ?
Ako2 [ prekr ] : okej hvala vam živjo [ + NERAZUMLJIVO ] K23 [ prekr ] : no prav hvala K23 : na svid ( enje ) V analizirani zvrsti pogovorov je klicatelj tisti , ki mu je treba ugoditi , torej privilegiran govorec , in klicani ( turistični agent ) tisti , ki klicatelju streže .
Klicani ( turistični delavec ) skoraj vedno ( razen v 5 primerih ) pokaže strinjanje , da se pogovor zaključi , z diskurznimi označevalci dobro , v redu , okej ali prav ( približno tretjina primerov ) oziroma z ja ( naslednja tretjina primerov ) , redko ( v korpusu 3-krat ) uporabi v zaključku ja in hkrati še enega od označevalcev iz niza dobro : [ TAso16.trs ] K11 [ prekr ] : dobro Aso1 : ja Aso1 [ prekr ] : prav gospa K11 [ prekr ] : najlepša [ 1 ] K11 : [ 2 ] hvala za [ 1 ] K11 [ prekr ] : [ 2 ] izčrpne informacije bomo malo razmislili pa še se [ 1 ] Aso1 [ prekr ] : hvala lepa vam [ P ] no jaz upam da smo kaj ...
Uspešen uvod in zaključek sta zelo pomembna elementa pragmatično uspešnega pogovora , zato je pomembno , da sistem strojnega simultanega prevajanja govora v teh segmentih deluje s čim manj napakami .
80 6.2 Diskurzni označevalci V tem poglavju predstavljam podrobno analizo nekaterih najpogostejših izrazov v korpusu , ki lahko opravljajo vlogo diskurznega označevalca ( prim. 4.3 ) .
Poglavje je precej obširno , saj je treba pragmatične vloge in rabo analizirati za vsak izraz posebej , le redko so razlike tako majhne , da lahko v eno podpoglavje združim analizo več izrazov .
V analizo vključim naslednje izraze , razdeljene po poglavjih , kot je prikazano tukaj ( v zaporedju glede na pragmatične vloge , ki jih lahko opravljajo ) : - ja , - mhm , aha , aja , - ne ?
• Preverim , ali je izraz samo diskurzni označevalec ali pa je lahko v nekaterih rabah pomemben del propozicijske vsebine , brez katerega bi bila ta bistveno spremenjena ali okrnjena .
• S kvalitativnim pristopom analiziram pragmatične vloge posameznih diskurznih označevalcev , tako da skušam odgovoriti na vprašanje , kako je diskurzni označevalec v aktualiziranem kontekstu vplival na diskurz .
Položaj diskurznega označevalca glede na izjavo je namreč povezan z njegovimi pragmatičnimi vlogami .
S tem tudi preverim , ali diskurzni označevalci med drugim označujejo meje med izjavami oziroma kateri diskurzni označevalci označujejo meje med izjavami .
Iz tega lahko sklepamo o povezanosti med diskurznimi označevalci , povezanosti med pragmatično vlogo diskurznega označevalca in njegovim položajem v izjavi , na koncu pa iz teh analiz dobimo običajno zaporedje diskurznih označevalcev , kadar je rabljenih več skupaj .
• Preverim , ali lahko najdem v gradivu kakšno skupino izrazov , ki imajo podobne pragmatične vloge kot analizirani diskurzni označevalec , pa sicer niso analizirani v tej raziskavi , ker jih ne uvrstim med tipične diskurzne označevalce , ker imajo tudi semantično vlogo .
Ugotovitve analiz so povzete v daljšem sklepu na koncu tega poglavja .
6.2.1 Ja Izraz ja pritegne pozornost v okviru raziskav diskurznih označevalcev , ker se pogosto odmika od semantične vloge , še bolj pa zaradi pogostosti rabe : v analiziranih pogovorih je eden najpogostejših izrazov , rabljen je 323-krat in 226-krat kot oporni signal ( glej 6.2.10 ) , skupaj torej 549-krat , kar pomeni približno 3 odstotke vseh besed .
Slovar slovenskega knjižnega jezika ( SSKJ ) klasificira ja kot prislov , Slovenski pravopis 2001 ( SP ) pa kot poudarni , navezovalni in soglašalni členek .
Kot tretjo vrsto rabe navaja izražanje nejevolje , nestrpnosti ali začudenja in presenečenja .
V teh vlogah ja učinkuje kot govorni signal , s katerim govorec izraža sprejem in razumevanje sporočila , svoj odnos do sprejetega sporočila , nakazuje prevzem vloge , napoveduje nestrinjanje , izraža čustveno prizadetost , na koncu stavka poudarja vsebino sporočila itd. , lahko pa se približuje tudi vlogi modalnega členka ipd. ( Schlamberger Brezar , 1998 ) uvrsti ja med pragmatične povezovalce , ki zaznamujejo zgradbo konverzacije in so retroaktivni ( izražajo odnos do izrečenega , in sicer potrditev prejšnjih izrekov ) .
Api1 : ja Api1 : [ SOGOVORNIK _ aha ] Api1 : soba je apartma za dve osebi V analizo zaradi nejasne meje med rabami ja v vlogi diskurznega označevalca oz. kot del propozicijske vsebine vključim vse rabe ja v korpusu .
Rabo diskurznega označevalca ja v položaju opornega signala obravnavam v poglavju ( 6.2.10 ) .
Na delno pragmatično vlogo tudi v teh rabah pa kaže , da govorec poleg ja še z drugimi besedami ( običajno ponovi del vprašanja ) izrazi pritrjevanje – dejansko je torej pritrditev dvojna : [ HOpi36.trs ] K2 : eee to je samo nočitev z zajtrkom ?
Menim , da sta vsaj dva razloga za to , da govorec pritrdilni odgovor izrazi še z drugimi besedami , ne samo na kratko z ja : tak odgovor je bolj nedvoumen ; odgovorjanje samo s kratkim ja / da ali ne je manj vljudno in si ga lahko sogovornik interpretira kot nezainteresiranost govorca za pogovor .
V naslednji skupini primerov rabe ja opazimo rahel pomenski premik od pritrjevanja ( ki se nanaša na dejstva ) k strinjanju ( ki se nanaša na bolj osebni odnos med sogovornikoma , na njuna mnenja ) – predstavni pomen ja v teh rabah lahko opišemo s strinjam se .
Te primere ločim kot posebno skupino tudi zato , ker se ne uporabljajo več v izjavah , ki so odgovor na vprašanje , ampak gre pri izražanju strinjanja bolj za odziv na sogovornikovo izjavo , torej v delih pogovora , kjer pari vprašanje-odgovor preidejo v izmenjavo mnenj , izkušenj , predlogov ipd.
Še eno razliko opazim : pri strinjanju se diskurzni označevalec ja pogosto rabi v paru z diskurznim označevalcem ne ?
K39 : kar [ k \ @ r ] ~ A pa [ 1 ] K39 [ prekr ] : [ 2 ] potem pika ločilo Aha1 [ prekr ] : ja pika ja K39 : ~ A pika zdaj pa moj priimek ki je [ priimek ] [ ~ P ~ R ~ I ~ I ~ M ~ E ~ K ] Aha1 : [ priimek ] ja [ TAne77.trs ] Ane2 : bencin to s ( ) to je vaš strošek ne ?
V zgoraj analiziranih rabah je položaj ja lahko pogosto tudi na koncu izjave , ne samo na začetku , ki je sicer najznačilnejši položaj diskurznega označevalca ja .
V korpusu najdemo vrsto primerov rabe diskurznega označevalca ja , kjer je njegova vloga predvsem pragmatična , predstavni pomen pa skoraj povsem neizrazit .
Do izraza pride povezovalna moč ja , in sicer vzpostavlja povezavo s predhodno vsebino – uvaja namreč izjave , ki se navezujejo na sogovornikovo / - e prejšnjo / - e izjavo / - e ( zelo pogosto odgovor na vprašanje , ki pa ni tipa da / ne ) .
Posledično je v teh rabah značilen položaj na začetku izjave : [ TPma27.trs ] K8 : eee koliko [ k / * o:kO ] koliko [ k / o:kO ] pa vam pošiljajo to ?
K8 : ker v eni izmed ta [ * ] velikih [ v \ @ lkix ] dvoran bi moglo [ * ] biti [ b / i:t ] Ama1 : ja recimo " dvorana Tabor " nam ne pošilja programa [ TAko40.trs ] K23 : eee pa se da to nekako da je kakšno [ k / a:SnO ] informacijo zdaj zvem ?
Ako1 [ prekr ] : ja če boste še malo [ m / a:l ] počakali K23 [ prekr ] : eee če bi zdaj lahko kaj zvedel ?
Povezovalno vlogo ja lahko razlagamo tudi iz spodnjega primera .
Ama1 [ prekr ] : eee ...
Menim , da je to dvoje razlog , da je ja zelo pogosto rabljen v uvodnih in zaključnih segmentih pogovora : od 30 uvodnih segmentov je v 8 uporabljen diskurzni označevalec ja , vedno kot odziv na prejšnjo izjavo sogovornika ( v prvi izjavi pogovora ni nikoli nobenega diskurznega označevalca ) , najpogosteje v zvezi ja dober dan , pa tudi ja prosim in ja izvolite .
Ja je uporabljen v 16 zaključkih ( od 30 ) , najpogosteje v zvezah ja na svidenje , ja prosim , ja hvala , ja dobro , ja enako itd. , redko tudi na koncu izjav , npr. hvala za vaš klic ja , ali kot oporni signal ( 8-krat ) .
Primeri ( prva dva primera sta uvod v pogovor , tretji primer je zaključek pogovora ) : [ TAko47.trs ] Ako3 : dober dan " kompas " prosim K25 : ja dober dan gospa [ TAso21.trs ] K15 : dober dan [ priimek ] [ ime ] pri telefonu Aso5 : ja prosim [ 1 ] Aso5 [ prekr ] : [ 2 ] gospod [ HOpi24.trs ] Api1 : eee v ceni sobe je všteto samo zajtrk zjutraj je pa od pol sedme do desete ure K17 : [ SOGOVORNIK _ mhm ] [ SOGOVORNIK _ mhm ] K17 : ja dobro K17 : v redu Api1 : prav ?
Api1 [ prekr ] : ja prosim K17 [ prekr ] : ja dobro Api1 [ prekr ] : ja nasvidenje Nadalje ja ( pa tudi drugi diskurzni označevalci ) po eni strani zagotavlja , da v pogovoru ne nastajajo molki , da je pogovor tekoč , po drugi pa govorec dobi čas za tvorjenje besedila in sogovornik za interpretacijo .
Api3 : ja kakih [.]
Naslednji trije primeri rabe diskurznega označevalca ja so precej drugačni in nas opozorijo na smer , v katero delujejo diskurzni označevalci , posebni pa so tudi po svoji pragmatični vlogi .
K6 : telefonska je pa nič dva dvesto dvajset eee sedem [ + SOGOVORNIK _ ja ] dva dva devet Zanimivo pa je takšna raba ja ?
v korpusu zelo redka , pa še to kar v treh od štirih primerov pri istem govorcu .
z rastočo intonacijo povsem sovpada z vlogami , ki jih sicer opravlja diskurzni označevalec ne ?
Izraz ja ( z varianto jaja ) , kadar ni v vlogi opornega signala , je rabljen v 259 izjavah , od tega 48-krat kot samostojna izjava ( kar pomeni , da je govorec za ja naredil krajši premor in šele potem nadaljeval vlogo oz. je prekinil vlogo in po kratkem premoru z ja ?
V ostalih primerih v veliki večini rab označuje začetek ( 140-krat ) ali konec izjave ( 58-krat ) , od tega 8-krat začetek in konec iste izjave .
Zelo pogosto je skupaj z diskurznima označevalcema poglejte / glejte ( v korpusu v 12 izjavah ) , kjer je vedno na prvem mestu : [ TPma42.trs ] Ama1 : ja poglejte eee zdaj [ z / a:j ] v zvezi z Mariborom eee v bistvu mi eee organiziramo samo vodenja [ TAso06.trs ] Aso6 : ja glejte [ l * E:jtE ] jaz sem vam preverila [ prEv / e:rla ] za karto in skupaj z eee / eeem / mmm ( v 12 izjavah ) , kjer je prvi ali drugi : [ HOpi34.trs ] K19 : ja eee ena stvar še glede eee plakatov [ HOpi78.trs ] K30 : eee ja v bistvu trideset nočitev bi bilo [ bl / o : ] ne ?
Dokaj pogosto se druži še z dobro ( 6-krat , od tega 5-krat na prvem mestu ) : [ TPma23.trs ] K17 : ja dobro hvala in zdaj ( 7-krat , običajno na prvem mestu ) , s katerim pa lahko tvori tudi daljše nize zaporednih diskurznih označevalcev : [ TPma42.trs ] Ama1 : ja poglejte eee zdaj [ z / a:j ] v zvezi z Mariborom eee v bistvu mi eee organiziramo samo vodenja Ja je lahko ponovljen dva - ali večkrat zaporedoma , včasih izgovorjeno tako hitro skupaj , da štejem jaja za posebno varianto ja : [ HOpi78.trs ] K30 : ja jaja [ TAko40.trs ] K23 [ prekr ] : ja ja ja poslušam Lahko se rabi tudi na začetku in na koncu iste izjave ( v korpusu 8-krat ) : [ TPma42.trs ] Ama1 : ja tako [ t / a : ] [ IZG ] kot [ kO ] [ IZG ] ste rekli ja Zanimiva je njegova povezanost z diskurznim označevalcem ne ?
( Schlamberger Brezar , 1998 ) navede mhm kot primer pragmatičnih povezovalcev , ki zaznamujejo zgradbo konverzacije in so retroaktivni ( izražajo odnos do izrečenega ) .
Pogostost rabe teh izrazov je manjša kot pogostost diskurznega označevalca ja .
Aha je obratno nekoliko manj pogosto oporni signal ( 72-krat ) in večkrat uvaja menjavanje vlog ( 111 takšnih rab ) .
Aso7 : mhm [ + SOGOVORNIK _ ja ] seveda Najbolj značilna raba mhm je potrjevanje razumevanja in pozornosti ( predstavni pomen mhm v teh rabah lahko opišemo kot razumem , pragmatično pa je na meji opornega signala ) : [ HOha50.trs ] Aha1 [ prekr ] : ja glejte skupine [ 1 ] K39 [ prekr ] : [ NERAZUMLJIVO ] Aha1 : [ 2 ] nekje od dvajset naprej K39 : mhm ne ne toliko [ t / o:k ] toliko [ t / o:k ] jih pa ne bo [ HOpi36.trs ] K2 : v redu [ 1 ] K2 [ prekr ] : [ 2 ] se bom sprijaznila če tudi ne Api2 [ prekr ] : načeloma so priključki K2 : mhm K2 : zdaj pa me zanima ker pridem z avtom imate [ m / a:tE ] vi tudi [.]
91 [ TAso11.trs ] Aso7 : eee na primer pride pa cena sto sedemindvajset tisoč tristo ne ?
[ TAso11.trs ] Aso7 : pa naslov prosim gospod [ ime ] K7 : Mele osemnajst ~ A Aso7 : mhm [ TAso16.trs ] K11 [ prekr ] : kako [ k / a:k ] pa je z [ * ] [ 1 ] K11 : [ 2 ] klimo v Osminah ker jaz sem bila [ bl / a : ] junija pa je takrat nismo potrebovali Aso1 : mhm [.]
je pa tako v teh sobah delno tudi klima Medtem ko obe zgornji vlogi mhm sovpadata z vlogami ja ( prim. 6.2.1.1 ) , pa je po drugi strani tudi nekaj razlik v rabi obeh diskurznih označevalcev .
Ane2 : ne K44 : aha [ 1 ] K44 [ prekr ] : [ 2 ] nimate Ane2 [ prekr ] : nnn Ob takih primerih se posebej izrazito pokaže , kako potrebna bi bila raziskava diskurznih označevalcev tudi s stališča prozodije .
Ane2 : eee to potem ko greste recimo to je za Skandinavijo no [.]
[ - TIHO ] [ TISINA ] Aso1 : [ TIHO ] aha tule imam [ m / a:m ] Trpanj Navedeni primeri kažejo , da sta mhm in aha sicer zelo sorodna , vendar aha izraža višjo intenzivnost odnosa do vsebine , ima večjo moč izražanja čustev govorca kot mhm .
Tako kot mhm tudi aha lahko izraža predvsem potrjevanje razumevanja : [ TAso21.trs ] Aso5 : to je eee so " terme " recimo " hotel toplice " pa pridejo devetinštirideset tisoč petsto K15 : aha K15 : v redu [ TPma23.trs ] Ama1 : dve štiri Ama1 : [ SOGOVORNIK _ ja ] Ama1 : štiri štiri K17 : aha dobro [ TPma65.trs ] K33 : tourism [ + angl ] je to ?
Ta odnos je verjetno nekoliko drugačen kot pri aha ( ki izrazi presenečenje ali razočaranje ali sprijaznjenje ) , in sicer lahko aja izraža , da je govorec imel prej drugačno mnenje o stvareh ali je drugače razumel stvari , kot jih razume zdaj ( potem ko mu je sogovornik odgovoril ali kaj razložil ) .
Tudi v teh primerih je pogosto – 12-krat – izrečen s premorom pred nadaljevanjem vloge , zato je označen kot samostojna izjava : [ HOpi78.trs ] Api2 : za en dan ja K30 : mhm K30 : eee kaj pa če bi se recimo eee da je opcija da se prespi namreč za dva dni eee [ + SOGOVORNIK _ mhm ] bi imeli [ m / e:li ] 13-krat je označen kot začetek izjave : [ HOpi78.trs ] K30 : mhm ne glede ali je večerja kosilo zajtrk ?
3-krat kot konec izjave : [ TAko40.trs ] K23 [ prekr ] : da bi ga videl [ v / i:dO ] mhm Diskurzni označevalec aha je uporabljen v 101 izjavi , v večini primerov – 70-krat – na začetku izjave : [ TPma65.trs ] Ama2 [ prekr ] : aha lahko vam pošljemo 13-krat je označen kot samostojna izjava : [ TAso21.trs ] Aso5 : na osebo K15 : aha K15 : pa verjetno še je prostor ?
6.2.2.3 Sopojavljanje aha in mhm z drugimi diskurznimi označevalci Diskurzna označevalca aha in mhm se lahko ponovita dva - ali večkrat zapored : [ TPma44.trs ] K24 : osem pet aha aha [ TAso11.trs ] Aso7 : mhm mhm južno od Splita v redu Aha se v korpusu pojavi skupaj z zdaj , no , eee , dobro , okej , ja ...
[ TAko43.trs ] K29 : aha no ker oni so rekli po radiu da da bomo rabili [ r / a:bli ] [ * ] ...
[ TPma65.trs ] K33 : aha dobro ja Mhm se manj druži z drugimi diskurznimi označevalci , v korpusu še največ z aha : [ TAso07.trs ] Aso9 [ prekr ] : druga polovica ?
Beseda ne je v korpusu Turdis-1 ( 15.000 besed ) rabljena 423-krat in je po frekventnosti ena najpogostejših .
Vendar je , v nasprotju z ja ali mhm , aha in aja , le dobra polovica teh rab v vlogi diskurznega označevalca – v 227 izjavah ( tj. 9,5 odstotka vseh izjav v korpusu ) oziroma 253-krat ( tj. dober odstotek in pol vseh besed v korpusu ) .
označuje rastočo intonacijo teh besed v vlogi diskurznega označevalca ) , ki so nekajkrat rabljene v korpusu v povsem enaki vlogi kot ne ?
je daleč najpogostejša , ostale oblike so uporabljane bolj izjemoma , in sicer a ne ?
pri dveh agentih v turistični agenciji v SV Sloveniji in dveh agentih v turistični agenciji v osrednji Sloveniji kaže naslednje : ob agenta iz osrednjeslovenskega prostora sta skupaj izrekla 1848 besed , od tega 20-krat diskurzni označevalec ne ?
Večja primerjava na narečno uravnoteženem gradivu bi zato morda pokazala pogostejšo rabo diskurznega označevalca ne ?
( z rastočo intonacijo ) v rabah , ki jih tu imenujem pragmatična , ne omenjata posebej , pač pa besedico ne razlagata predvsem kot nikalni členek ( SP ) oz. prislov ( SSKJ ) ter kot veznik .
na koncu izjave , o kateri pričakuje od sogovornika potrditev ( ali zavrnitev ) vsebine ali strinjanje z vsebino , torej odgovor ali odziv .
Aso9 : ja K6 : letošnjega leta ja [ TAso16.trs ] K11 [ prekr ] : tako [ t / a:k ] da teoretično lahko [ l / a:xkO ] imaš [ m / a:S ] [ 1 ] K11 : [ 2 ] celo K11 : pred potovanjem eee vse plačano [ 1 ] K11 [ prekr ] : [ 2 ] če imaš [ m / a:S ] eee manj obrokov ne ?
ne išče pritrditve ali strinjanja , pač pa samo preverja , ali še ima sogovorčevo pozornost in ali ga sogovornik razume .
na podoben način kot premori v govoru poudari predhodno vsebino .
Ama1 : [ SOGOVORNIK _ mhm ] eee in sicer oni znajo res v redu [ r / e:ju ] pripravit imajo [ m / a:jO ] pa tudi # izbiro # kaj bi oni želeli [ TAne77.trs ] Ane2 : [ angl - ] mobil home [ - angl ] ne ?
ali vsebino , ki jo ta poudarja , saj je svojo pozornost in zainteresiranost za diskurz pokazal že s prevzemom vloge : 99 [ TPma49.trs ] Ama1 : eee [ + SOGOVORNIK _ ja ] je pa tako [ t / a:k ] da [ : ] eee pač še bolj dobro da se najavi pač malo prej [ 1 ] Ama1 [ prekr ] : [ 2 ] ne ?
Ama1 : eee v bistvu če imamo recimo mi vodenje po Mariboru eee včasih vključe ( ) vključimo tudi degustacije eee vinske v vinski kleti Vinagovi V korpusu je večina teh primerov iz dveh pogovorov , kjer klicatelja nasploh redko uporabljata oporne signale , povprečno število opornih signalov glede na število izjav v teh pogovorih je namreč 1 oporni signal na 7 izjav ( natančneje 7,3 pri enem in 7,6 pri drugem pogovoru ) , medtem ko je statistično povprečje za celoten korpus 1 oporni signal na 4 izjave .
saj veste da so pri [ p@r ] pri [ p@r ] [ angl - ] magic life [ IZG ] [ - angl ] [ + SMEH ] mislim pri [ p@r ] [ angl - ] magic lifih [ - angl ] pri [ p@r ] teh [ angl - ] all inclusivih [ - angl ] [ + SOGOVORNIK _ jaja ] je [ + SOGOVORNIK _ jaja ] tudi [ t / u:t ] ljudi [ lud / i : ] odvisno kako [ k \ ak ] ne ?
kakor [ k / o:k@r ] bi si človek želel no [ TPma42.trs ] Ama1 : pa tudi [ t / u:ji ] zaradi tega ker eee recimo imajo [ m / a:jO ] potem tudi možnost kopanja in vsega ne ?
je rabljen v 227 izjavah , od tega 185-krat kot zadnja beseda v izjavi .
Položaj na začetnem mestu v izjavi je redek ( 8-krat ) .
nanaša na vsebino prejšnje izjave istega govorca , le da je vmes naredil kratek premor : [ HOpi34.trs ] K19 : [ 2 ] in # tujcev # ne ?
tako da lahko ali [ al ] šolsko ali [ al ] ] [ 1 ] Api3 : [ 2 ] v obliki ~ U ali [ 1 ] Api3 [ prekr ] : [ 2 ] kakorkoli ja K19 [ prekr ] : aha aha o super [ 1 ] [ TAko40.trs ] Ako2 : eee [ : ] tudi [ t / u:t ] strani eee Slovencev Ako2 : ne ?
z diskurznimi označevalci ja , mhm , aha in ostalimi besedami v vlogi opornih signalov , tako da se na ne ?
v govoru govorca sogovornik pogosto odzove ali tako , da prevzame vlogo , ki jo lahko začne s katerim od naštetih diskurznih označevalcev , ali samo z opornim signalom .
Od propozicijske vsebine je ločen bolj kot večina ostalih diskurznih označevalcev .
6.2.4.1 Pragmatične vloge no Rabe diskurznega označevalca no so precej različne , zato si pri analizi pomagam tudi s tem , kdaj no ni rabljen .
No na primer v korpusu očitno ni preveč primeren za odziv na diskurzni označevalec ne ?
K19 : [ 2 ] priporočili [ pripOr / o:tSli ] ko so nekaj v tem stilu že delali [ + SOGOVORNIK _ tako ] in nikoli ni rabljen v uvodnih izjavah .
Pač pa lahko ima no ( vsaj kadar je rabljen v začetku izjave , kar je v korpusu več kot polovica rab ) močno povezovalno vlogo v smeri nazaj .
Pri tem je na nek način nasprotni pol diskurznega označevalca ja : za tega sem ugotavljala , da zagotavlja pozitivno vzdušje v diskurzu , ker daje harmoničen vtis strinjanja med sogovornikoma ( prim. 6.2.1.1 ) .
O njegovi izrazito povezovalni vlogi sklepam , ker pogosto povezuje zaporedni izjavi , ki vsebinsko nista posebej trdno povezani : 104 [ TAko47.trs ] Ako1 [ prekr ] : potovanje K25 [ prekr ] : potovanje Ako1 : ja samo malo [ + SOGOVORNIK _ ja ] K25 : eee no pol [ * ] pa bom še o tistem tudi mogoče če imate [ m / a:tE ] kake variante tam Sharm El Sheikh pa pa [ 1 ] K25 [ prekr ] : [ 2 ] Hurgada pa [ 1 ] Ako1 [ prekr ] : ja ja sa ( j ) K25 : [ 2 ] to ne ?
Ako1 : to [ + SOGOVORNIK _ mhm ] pa zdaj eee ...
Ako1 : no jaz osebno bi se zdaj za to odločila [ Odl / o:tSla ] vi pa po [ + SOGOVORNIK _ jaja ] svoje Druga izrazita lastnost diskurznega označevalca no je , da lahko izraža odnos govorca do predhodne vsebine .
Rabi se lahko na primer , ko želi govorec izraziti zadržanost do vsebine sogovornikove predhodne izjave ali celo nasprotovanje : [ TPma42.trs ] Ama1 : jaz vam lahko eee čim več tega materiala ne ?
sicer je samo me ( ) mestu in ima eee majhno plažo kakšnih [.]
[ TAne77.trs ] K44 : no saj okvirno mi bom se jaz potem tudi [ t / u:t ] oglasila [ Ogl / a:sla ] no [ NERAZUMLJIVO - ] če bi [ - NERAZUMLJIVO ] ...
Eee ( s tem označujem zavlečen polglasnik ) in njegove variante niso tipični diskurzni označevalci .
Raziskovalci se , ko prepisujejo spontani govor , odločajo za nekoliko različne zapise teh izrazov : najpogostejši je verjetno narobe obrnjen e , ki označuje polglasnik , zaradi omejitve na nabor znakov , ki jih vključuje ASCII , v pričujoči nalogi uporabljam eee , nekateri avtorji uporabljajo tudi dva ee ( npr. Krajnc , 2005 ) .
Ker je eee značilen element spontanega govora , mu tukaj vseeno posvetim nekaj več pozornosti in ugotavljam , da ni njegova edina vloga zapolnjevanje vrzeli .
Čeprav je varianta eee najpogostejša , so dejanske glasovne uresničitve v korpusu opisane še kot : mmm , nnn , eeen , eeennneee , eeemmmeee , kar naj bi kolikor mogoče natančno opisalo dejansko izgovorjavo , ki je lahko pri tem glasovnem nizu zelo variabilna .
Frekventnost eee in glasovnih variant je naslednja : eee 533 mmm 14 nnn 7 eeeh 2 eeef 1 eeen 1 eeennneee 1 eeemmmeee 1 SKUPAJ 560 Pogostost rabe eee v korpusu je torej približno enaka kot pogostost rabe ja in znaša dobre 3 % vseh besed .
V nadaljevanju vse variante obravnavam kot eee , s pragmatičnega stališča posebej obravnavam edino na eeef in eeeh .
Sogovornik z eee nakaže govorcu , da je pripravljen na prevzem vloge : [ TPma65.trs ] K33 : aha no [ 1 ] K33 [ prekr ] : [ 2 ] zanima me [ 1 ] Ama2 [ prekr ] : prosim [ + NERAZUMLJIVO ] K33 : [ 2 ] območje tam blizu Pohorja če bi bila [ bl / a : ] kaka kolesarska pot tam skozi ali [ al ] pa [ 1 ] K33 [ prekr ] : [ 2 ] preko ali pa kaj [ 1 ] Ama2 [ prekr ] : eee ...
V uvodnih segmentih pogovora je rabljen zelo pogosto , največkrat v izjavah , kjer uvaja prvi tematski sklop ali natančneje : • 10-krat ( od 30 uvodnih sekcij ) je rabljen , preden začne klicatelj uvajati prvi tematski sklop ( običajno z zanima me , vprašal bi ipd. ) : [ HOpi34.trs ] Api3 : recepcija " hotela piramida " dober dan [ 1 ] Api3 [ prekr ] : [ 2 ] [ NERAZUMLJIVO - ] izvolite [ - NERAZUMLJIVO ] K19 [ prekr ] : dober dan [ 1 ] K19 : [ 2 ] [ ime ] [ priimek ] s @ FERI Maribor tukaj Api3 : izvolite K19 : eee jaz bi pa se pozanimal za tale poslovni klub ko [ * ] imate [ m / a:stE ] [ 1 ] K19 [ prekr ] : [ 2 ] zdaj [ z / a:j ] na novo • in 10-krat , preden preide k prvemu tematskemu sklopu : [ HOpi78.trs ] Api2 : " hotel piramida " K30 : dober dan [ ime ] [ priimek ] pri [ p@r ] telefonu K30 [ prekr ] : jaz [ j \ @ s ] imam [ m / a:m ] [ 1 ] Api2 [ prekr ] : dober dan K30 : [ 2 ] pa eno vprašanje in sicer K30 : eee študenti organiziramo en [ * ] tak [ * ] letni sestanek oziroma srečanje Lahko si razlagamo , da klicatelj začne z mašilom , ker je v zadregi , kako začeti : je namreč pred odgovorno nalogo , da na kratko pojasni razlog , zakaj želi začeti pogovor .
Vendar je možna še druga razlaga .
Podobno namreč eee tudi v jedrnem delu pogovora pogosto uvaja izjave , v katerih govorec uvede nove elemente tematskega sklop / nov tematski sklop , spremeni naklon ipd.
• govorec preide od odgovora k vprašanju : [ HOha50.trs ] Aha1 : zdaj [ z / a : ] tale ponudba že vključuje [ fklutS / u:jE ] v bistvu posebno ceno Aha1 : eee zdaj [ z / a:j ] koliko oseb bi bilo ?
• govorec preide od pojasnitve k vprašanju : [ HOha61.trs ] K38 : zdaj [ zd / a : ] [ IZG ] pa jaz še zdaj [ z / a:j ] točnega datuma ne vem ne ?
Aha3 : eee tako bom rekla gospa • namesto pričakovanega odgovora želi govorec prej še nekaj vprašati : [ TAko40.trs ] Ako2 : sicer jaz sem lahko tu vezni člen ni noben problem da se tudi [ t / u:t ] tu pri [ p@r ] meni vse naredit [ nard / i:t ] samo [ * ] jaz se potem obračam na naš oddelek ki dela olimpijske igre Ako2 : [ SOGOVORNIK _ ja ] Ako2 [ prekr ] : kaj bova [ m / a : ] rekla [ ime ] ?
K23 [ prekr ] : eeem pa ...
• govorec preide od splošnega opisa bivalnih prostorov h konkretnemu primeru ponudbe : [ TAko40.trs ] Ako2 : stanovanja so na širšem področju Aten v stanovanjskih blokih [ bl / o:kax ] [ * ] ali zasebnih hišah Ako2 : opremljena so zelo različno Ako2 : natančnejši opis s ceno oziroma s ceno mala [ + NERAZUMLJIVO ] boste prejeli ob potrditvi Ako2 : tipi stanovanj so razdeljeni v več kategorij odvisno od k ( ) kvalitete lege in tako dalje ne ?
Ako2 : eee [ + SOGOVORNIK _ ja ] in recimo če midva rečeva kategorija ~ C Ako2 : to je zdaj [ z / a:j ] najbolj ugodnejša [ * ] prvih šest nočitev • govorec vrine stavek : [ TAko40.trs ] K23 : mene zanima eee tukaj [ tl \ E ] [ ime ] pri [ p@r ] telefonu eee informacije glede Aten v času olimpijskih iger Po pragmatični vlogi od ostalih rab nekoliko odstopata glasovna niza eeeh in eeef , vendar sta rabljena samo po enkrat ; zdi se , da pridata nekoliko subjektiven izraz govorca , kažeta , da ima govorec težave ( nima pri roki informacij , po katerih sogovornik sprašuje ) : [ HOpi78.trs ] K30 : eee koliko [ k / o:lkO ] pa potem stane nočitev pa recimo [ N - ] da so [ - N ] eee [ N - ] da je poln penzion se pravi [ - N ] oziroma prvi dan bi bi bila [ bl / a : ] [ N - ] v ( ) [ - N ] eee samo [ s / a:m ] večerja K30 : [ SOGOVORNIK _ mhm ] ker bi se popoldan začelo [ zatS / e:l ] pa potem naslednji dan zajtrk pa kosilo Api2 : mhm Api2 : eeef se pravi cena [ N - ] to bi za g ( ) [ - N ] kdaj bi to približno [ IZG ] [ N - ] po ( ) [ - N ] eee potrebovali ?
[ TAko47.trs ] Ako1 : to imate [ m / a:stE ] kolikor [ k / o:lkO ] vem samo malo polpenzion ampak zdaj [ z / a:j ] samo da še enkrat pogledam [ TIŠINA ] Ako1 : eeeh [ + IZDIH ] Ako1 : samo [ s / a:m ] sekundo gospa Eee je torej poleg tega , da zpolnjuje premore v govoru , sredstvo , ki pomaga pri sistemih menjavanja vlog , in pragmatično jezikovno sredstvo , ki kaže nepričakovane dogodke v izjavi ali prehode med različnimi tematskimi sklopi .
Slika 8 prikazuje položaj eee v izjavi po odstotkih .
Prevladuje začetni položaj ( ki običajno nakazuje novo izjavo ) , pogost je sredinski položaj ( nakazuje , da bo govorec še nadaljeval izjavo oz. vsebino ) .
6.2.5.3 Sopojavljanje eee z drugimi diskurznimi označevalci Eee se ne rabi veliko skupaj z drugimi diskurznimi označevalci .
Nekajkrat najdemo ponovitve dveh ali več eee ali variant zaporedoma : [ TAso16.trs ] Aso1 : eee eeen oziroma ne eee ta Bonaca no Sicer pa je nekaj primerov , kjer se v začetnem delu izjave druži v sklope z drugimi začetnimi diskurznimi označevalci : glejte , ja , no , potem , zdaj , in ...:
[ TPma42.trs ] Ama1 : ja glejte eee ogromno teh stvari boste našli tudi [ t / u:ji ] na naših spletnih straneh čes ( ) če [ + SOGOVORNIK _ ja ] vam bo to kaj bolj pomagalo [ TPma42.trs ] Ama1 : poglejte zdaj eee nekaj nekaj teh prospektov imamo [ m / a:mO ] od vsega [ fs / e:ga ] vsega [ fs / e:ga ] ne bomo imeli [ m / e:li ] v papirnati obliki ne ?
Frekventnost teh izrazov ( ne glede na to , ali v pragmatični vlogi ali ne ) v korpusu je naslednja : dobro 52 v redu 44 okej 12 prav 13 Dobro je kot diskurzni označevalec enkrat rabljen v zvezi z je : dobro je : [ HOpi34.trs ] K19 : tega ste [ + SOGOVORNIK _ tako ] rekli v bistvu štir ( ) štiri panoji [ 1 ] K19 [ prekr ] : [ 2 ] so možni ne ?
Dobro , v redu , okej in prav niso nujno diskurzni označevalci , pač pa so lahko del propozicijske vsebine , zlasti za prav velja , da je redkeje v vlogi diskurznega označevalca .
• okej pa je v korpusu vedno v vlogi diskurznega označevalca .
Kadar so pomemben del propozicijske vsebine , običajno niso samostojna izjava ( razen če je izjava nedokončana ) in redkeje stojijo na začetku izjave ( čeprav je tudi mogoče , zlasti pri prav , npr. prav naslov mariborskega turizma ne ?
Redkeje so lahko dobro , v redu , okej , prav v položaju opornega signala , v korpusu dobro 8-krat in okej 3-krat .
Frekventnost teh besed v vlogi diskurznega označevalca je torej : dobro 46 + 8-krat oporni signal v redu 36 okej 12 + 3-krat oporni signal prav 4 Tradicionalno so ti izrazi v slovenskem jezikoslovju obravnavani predvsem kot pridevniki oz. prislovi , v SSKJ pa je omenjena tudi njihova vloga , ki jo tu imenujem pragmatična , in sicer najdemo analizirane izraze pod gesli dober ( prislovna oblika dobro ) , red1 pri zvezi v redu in prav .
SSKJ razlaga , da so lahko te oblike tudi v medmetni rabi in izražajo soglasje , privolitev ; zadržano pritrjevanje ; nejevoljno sprijaznjenje s čim , za izraz prav pa dodaja tudi izražanje zadovoljstva nad čim .
6.2.6.1 Pragmatične vloge dobro , v redu , okej in prav Diskurzni označevalci dobro , v redu , okej , prav se v glavnem uporabljajo ob prehodih v nov tematski sklop ali v zaključek pogovora .
K39 [ prekr ] : dobro K39 : moram [ m / o:r@m ] še samo nekaj [ n / e:ki ] vprašat [ * ] ki j ( e ) sicer malo [ m / a:l ] zdaj [ z \ @ j ] izven tegale okvirja [.]
o turizmu Kar dobra polovica diskurznih označevalcev dobro , v redu , okej , prav je rabljena v prehodih v zaključne segmente ali v zaključnih segmentih pogovora oziroma v številkah – v 30 pogovorih so ob zaključku rabljeni : dobro 21-krat ( od 46 rab ) v redu 16-krat ( od 36 rab ) okej 8-krat ( od 12 rab ) prav 4-krat ( od 4 rab ) Potem ko govorec z dobro , v redu , okej ali prav ( in zahvaljevanjem ) nakaže , da bi končal pogovor , praviloma počaka , da sogovornik na enak način potrdi , da se strinja s tem : [ TAso16.trs ] Aso1 : tako imate [ m / a:tE ] prav Aso1 : tudi [ 1 ] Aso1 [ prekr ] : [ 2 ] to je možno K11 [ prekr ] : dobro Aso1 : ja Aso1 [ prekr ] : prav gospa K11 [ prekr ] : najlepša [ 1 ] K11 : [ 2 ] hvala za [ 1 ] K11 [ prekr ] : [ 2 ] izčrpne informacije bomo malo razmislili pa še se [ 1 ] Strinjanje ni nujno takojšnje , sogovornik želi včasih še kaj povedati , preden zaključi pogovor , vendar v teh primerih v nadaljevanju sam prvi nakaže , da bi zaključil pogovor : [ HOha50.trs ] K39 [ prekr ] : fino fino [ 1 ] K39 : [ 2 ] fino točno to zaradi [ zara ] tega ker [ k@r ] je računalnik malo [ m / a:l ] [.]
Taki primeri so v korpusu Turdis-1 sicer redki , samo štirje : [ TAko40.trs ] Ako1 : jaz vam [ 1 ] Ako1 [ prekr ] : [ 2 ] bom vse [ 1 ] K23 [ prekr ] : eee ...
[.]
6.2.6.2 Položaj dobro , v redu , okej , prav v izjavi Diskurzni označevalci dobro , v redu okej , prav so rabljeni v 92 izjavah , od tega so 40-krat označeni kot samostojna izjava ( govorci naredijo premor za temi diskurznimi označevalci , čeprav npr. prevzamejo vlogo ) : [ HOha50.trs ] Aha1 : pa še dodatno [ + SOGOVORNIK _ dobro ] toto [ * ] animacijo programe in pa te [.]
K39 : dobro K39 : povejte kar se pa tiče zajtrka to je najverjetneje tam samopostrežni kjer je [.]
Široka ponudba 12-krat so na začetku nove izjave , s tem da so tudi te izjave pogosto povsem kratke : [ TAko40.trs ] Ako2 [ prekr ] : okej hvala vam živjo [ + NERAZUMLJIVO ] [ TAko47.trs ] K25 : dobro gospa najlepša hvala da ste se tako potrudili [ pOtr / u:dli ] ne ?
[ TAso11.trs ] Aso7 : mhm mhm južno od Splita v redu [ TPma44.trs ] K24 : aha aha bom dobro Sredi izjave niso rabljeni v nobenem primeru v korpusu .
Razporeditev diskurznih označevalcev dobro , v redu , okej , prav v odstotkih je prikazana v sliki 9.
55% Začetek 17% Slika 9 : Položaj dobro , v redu , okej , prav v izjavi .
6.2.6.3 Sopojavljanje dobro , v redu , okej , prav z drugimi diskurznimi označevalci Govorci pogosto ponovijo katerega od teh diskurznih označevalcev ali kombinirajo dva različna diskurzna označevalca iz tega sklopa : [ HOha50.trs ] Aha1 : večerja tudi K39 : dobro [.]
Kot diskurzni označevalec je glejte / poglejte rabljen v 29 izjavah , večinoma – 20-krat – kot glejte : [ HOpi78.trs ] Api2 : glejte do štiri ure je polovična cena Dvakrat ( v obliki poglejte ) je ta izraz pomemben del propozicijske vsebine : [ TPma44.trs ] Ama2 : tudi [ t / u:t ] imamo [ m / a:mO ] ja poglejte pod šport in rekreacija Veste je kot diskurzni označevalec rabljen 13-krat : [ TAko40.trs ] Ako2 : grozni eee eee tako [ t / o:k ] rigorozno kot so pa tu pravila veste eee eee od tega kar 8-krat v zvezi z vprašalnim zaimkom ( kaj / kje / koliko ...
Kot del propozicijske vsebine je veste rabljen 6-krat : [ TPma49.trs ] K3 : eee rad bi imel [ m * E:U ] eno [ * ] eee informacijo če morda veste kaj o vožnjo s splavom po Mari ( ) po Dravi Edninskih oblik veš oz. poglej / glej ( ki se uporabljajo pri tikanju in jih lahko pričakujemo v zasebni komunikaciji ) , v korpusu ni .
SSKJ zabeleži tudi rabo izrazov poglejte in veste , ki jo tu imenujem pragmatična , opiše pa jo – tako kot v drugih zgornjih primerih – kot medmetno .
Pri poglejte navaja , da izraža podkrepitev trditve ; začudenje , presenečenje ; nejevoljo , nezadovoljstvo ; prošnjo za razumevanje , upoštevanje , pri veste pa , da izraža obračanje na ogovorjenega ; opozorilo na povedano ; poudarja trditev .
6.2.7.1 Pragmatične vloge glejte in veste Z diskurznim označevalcem glejte govorec pritegne sogovornikovo pozornost in napove , da bo povedal nekaj , kar bo za sogovornika zanimivo .
V korpusu je glejte v večini primerov ( 22-krat ) rabljen pri menjavanju vlog , predvsem ko govorec odgovarja na vprašanje sogovornika : [ HOpi78.trs ] K30 : eee pa zanima me koliko [ k / o:lk ] pa stane potem najem [ 1 ] K30 [ prekr ] : [ 2 ] eee te [ 1 ] Api2 [ prekr ] : eee ...
lahko vi malo [ m / a:l ] svetujete in pomagate Ama1 : ja poglejte eee zdaj [ z / a:j ] v zvezi z Mariborom eee v bistvu mi eee organiziramo samo vodenja [ HOpi24.trs ] K17 : eee pa me zanima zdaj [ z / a:j ] če imate vi v [ f ] hotelu tudi kaki [ * ] jacuzzi [ + tujez ] ali [ al ] pa bazene pa take stvari Api1 : eee ja glejte v ...
Api1 : eee jacuzze [ * ] [ + tujez ] imamo samo v apartmajih [ TPma42.trs ] Ama1 : Štern ja K39 : mhm K39 : Fram Ama1 : ja glejte eee ogromno teh stvari boste našli tudi [ t / u:ji ] na naših spletnih straneh čes ( ) če [ + SOGOVORNIK _ ja ] vam bo to kaj bolj pomagalo Znotraj iste vloge ( na tak način je rabljen 7-krat ) glejte pogosto kaže večjo ali manjšo spremembo v tematskem sklopu : [ TAso16.trs ] Aso1 : sicer je dražja ampak so res mislim res so zadovoljni s tem klubom njihovim no [ + SOGOVORNIK _ mhm ] [ SOGOVORNIK _ mhm ] Aso1 : eeemmmeee kaj [ k / a : ] pa vem Aso1 : sicer glejte [ l * E:jtE ] [.]
Te rabe so mejne ; s stališča pragmatičnih vlog pomaga vzdrževati stik s sogovornikom : [ TAso16.trs ] Aso1 [ prekr ] : tako [ t / a:k ] da ...
plus [ + SOGOVORNIK _ ja ] pet ( ) cirka petindvajset [ p / e:tindv / a:js ] tisoč takse [ HOpi31.trs ] K19 [ prekr ] : @ FERI Api3 [ prekr ] : ja [ 1 ] Api3 : [ 2 ] izvolite K19 : veste kaj jaz bi se pa pozanimal za tale vaš " poslovni klub piramida " Api3 : ja [ 1 ] Api3 [ prekr ] : [ 2 ] za kateri termin [ + NERAZUMLJIVO ] ?
Posebne razlike v pragmatični vlogi pri rabi ene ali druge oblike v korpusu ne opazim , pač pa je nekaj razlik glede na položaj veste v začetku izjave ali v nezačetnem položaju .
: govorec vzdržuje stik s sogovornikom in poudari predhodno vsebino : [ TAso16.trs ] Aso1 : ker so te eee ker so v bistvu [.]
[ TAko40.trs ] Ako2 : je [ + SOGOVORNIK _ mhm ] to z vaše strani stoprocentna rezervacija in # ni # odpovedi Ako2 : [ SOGOVORNIK _ aha ] Ako2 : grozni eee tako [ t / o:k ] rigorozno kot so pa tu pravila veste eee eee Ako2 : zdaj ravno imam [ m / a:m ] primer v petek sem potrdila včeraj bo prišlo včeraj mi stranka javi da ne bo šlo in ni variante so takoj stoprocentni stroški V začetnem položaju veste sicer prav tako vzdržuje stik s sogovornikom , poudari pa prihodnjo vsebino , ne predhodne : [ TAso16.trs ] Aso1 [ prekr ] : pa tako [ t / a:k ] velike [ + NERAZUMLJIVO ] ...
Ako2 : mogoče bi res bilo [ bl / o : ] lažje ta da vi ta katalog vidite 6.2.7.2 Položaj glejte in veste v izjavi Glejte ima večinoma začetni položaj v izjavi , bodisi da sam uvaja novo izjavo bodisi skupaj z drugimi diskurznimi označevalci ( predvsem ja in eee ) : [ TAko40.trs ] Ako2 : glejte pri [ p@r ] nas je kar se eee tega tiče [ ime ] je takole [ TPma49.trs ] Ama1 : ja poglejte vožnja s splavom eee se prične v mesecu maju Dvakrat je označen kot samostojna izjava : [ TPma42.trs ] Ama1 : ja povejte K39 : poglejte v zvezi bom rekla s ponudbo Bolj izjemoma so pred glejte tudi kaki drugi izrazi .
saj veste da so pri [ p@r ] pri [ p@r ] [ angl - ] magic life [ IZG ] [ - angl ] [ + SMEH ] mislim pri [ p@r ] [ angl - ] magic lifih [ - angl ] pri [ p@r ] teh [ angl - ] all inclusivih [ - angl ] [ + SOGOVORNIK _ jaja ] je [ + SOGOVORNIK _ jaja ] tudi [ t / u:t ] ljudi [ lud / i : ] odvisno kako [ k \ ak ] ne ?
Maribor [ + SOGOVORNIK _ ja ] Graz Aqaba Slika 10 v odstotkih prikazuje razporeditev diskurznega označevalca glejte glede na položaj v izjavi .
v Faraonu tistega ko sem vam prvega [ + SOGOVORNIK _ mhm ] povedala [ pOv / e:dla ] [ + SOGOVORNIK _ mhm ] Kadar ni v besedni zvezi z vprašalnimi zaimki , je lahko prav tako v začetnem položaju ( 2-krat ) , lahko pa tudi na koncu izjave ( 1-krat ) : [ TAko40.trs ] Ako2 : grozni eee eee tako [ t / o:k ] rigorozno kot so pa tu pravila veste eee eee ali sredi izjave ( 2-krat ) : [ TAso16.trs ] Aso1 : eeen eee nižje tak depandansni stil ali [ al ] pa španski stil ve ( ) veste [ + SOGOVORNIK _ mhm ] teh hišk ne ?
Zaradi majhnega števila primerov v korpusu ti rezultati niso zadostni za natančnejše sklepanje .
6.2.7.3 Sopojavljanje glejte in veste z drugimi diskurznimi označevalci Glejte se v večini primerov rabi skupaj z diskurznim označevalcem ja ( ki stoji vedno pred glejte ) : [ HOha50.trs ] Aha1 : ja glejte skupine nekje od dvajset naprej 126 Malo manj pogosto je rabljen skupaj z eee , ki je lahko pred ali za glejte : [ TPma44.trs ] Ama2 : eee poglejte jaz bi vam pri predlagala da mogoče prespi vaša prijateljica [ prij / a:tltsa ] pri Blažiču [ TPma42.trs ] Ama1 : ja glejte eee ogromno teh stvari boste našli tudi [ t / u:ji ] na naših spletnih straneh čes ( ) če [ + SOGOVORNIK _ ja ] vam bo to kaj bolj pomagalo 3-krat pa je rabljen skupaj z zdaj , ki pa stoji za glejte : [ TPma42.trs ] K39 : poglejte zdaj [ zd * E:j ] mogoče [ mOg / o:tS ] ravno [ r / a:Un ] zaradi [ zar / a:t ] tega tudi [ t / u:t ] kličem na [ * ] vas da mi lahko mogoče vi malo [ m / a:l ] svetujete Niti v enem primeru ni pred menjavanjem vlog pred glejte uporabljen diskurzni označevalec ne ?
Veste se ( razen z eee , ki se lahko vrine tako rekoč kjer koli ) v korpusu ne rabi skupaj z drugimi diskurznimi označevalci , pač pa je dokaj značilna že omenjena zveza z vprašalnimi zaimki ( veste kaj , veste kje itd. ) .
6.2.7.4 Čakajte in drugi sorodni izrazi Na videz diskurznima označevalcema glejte in veste soroden izraz , ki bi ga lahko uvrstili v to skupino , je čakajte / čakaj ( 10 rab v korpusu ) .
V tej vlogi je soroden z izrazi : samo malo ( 16 rab v korpusu ) , samo ( en ) trenutek ( 11 rab ) , samo sekundo ( 2 rabi ) , samo majčkeno ( 1 raba ) ...
[ 1 ] K39 [ prekr ] : [ ime ] [ priimek ] Ama1 : [ SOGOVORNIK _ ja ] Ama1 : [ 2 ] pa je dva tri štiri Ama1 : [ SOGOVORNIK _ ja ] Ama1 : šest šest Ama1 : [ TIHO - ] mislim da ima [ m / a : ] nič šest samo malo [ - TIHO ] Ama1 : ja nič šest Čakajte in sorodni izrazi so torej bolj ali manj mejni primeri izrazov v vlogi diskurznih označevalcev .
Zanimiva pa je tudi ( ne ) raba besede poslušajte / poslušaj , ki ga v zasebnem diskurzu lahko tudi uporabljamo kot diskurzni označevalec .
[ TAso17.trs ] K12 : mislim da še ne bo eee da ne bo prepozno če še kasneje kaj zdaj [ z / a:j ] informativno sprašujem ker se še nismo dogovorili čisto [ tS / i:zO ] [ IZG ] definitivno za termin tako [ t / a:k ] da ...
Rab , ki jih označim kot diskurzni označevalec in kjer je mislim predvsem pragmatično sredstvo , je samo 13.
Rezultati analize so zato lahko nepopolni .
Rabo mislim , ki jo tukaj imenujem pragmatično , SSKJ zabeleži pri glagolu misliti v zvezi z ( sicer v govoru izpuščenim ) reči , in sicer razlaga , da mislim uvaja natančnejšo določitev , dopolnitev povedanega ali povzetek bistvene vsebine povedanega .
Kot medmetno rabo mislim zabeleži SSKJ običajno v zvezi z ali ( misliš , da ga ne poznam ) ali kaj ( kaj misliš , da si edina ) , pri čemer mislim izraža začudenje , nejevoljo ; podkrepitev trditve .
T.i. medmetne rabe , kot jo označuje SSKJ , v korpusu ne zasledim .
V korpusu lahko ločim rabe , kjer govorec z mislim označi , da bo popravil predhodno vsebino : [ TAne77.trs ] K44 : kak eee na kak način je to organizirano ?
[ + SOGOVORNIK _ jaja ] Nadalje z mislim označi , da bo sledila ponovna , drugačna ubeseditev iste vsebine : [ TPma49.trs ] K3 : aha to je bilo [ bl / o : ] za trideset [ tr / i:jEs ] oseb kaj pa če je manj oseb se vseeno [ fs * E:nO ] [ IZG ] plača štiriinosemdeset [ St \ @ rn / o:s@ndEsE ] mislim [ + SOGOVORNIK _ ja ] polna cena ?
največji problem je v bistvu eee pri teh hrvaških je Aso1 : kar se tiče ponudbe [.]
6.2.8.2 Položaj mislim v izjavi Glede na pragmatične vloge mislim pričakujemo , da se ta diskurzni označevalec pogosteje pojavlja sredi izjave .
največji problem je v bistvu eee pri teh hrvaških je Aso1 : kar se tiče ponudbe [.]
SSKJ zabeleži tudi t.i. medmetno rabo teh izrazov , za katero smo videli , da se pogosto nanaša na pragmatično rabo , kot jo imenujem tukaj .
Naslednja skupina sorodnih izrazov izhaja iz glagolov rekanja , predvsem reči in praviti .
da rečem okvirne informacije ki jih potem bi lahko posredovala naprej V tem sklopu opozarjam še na skupino izrazov , ki jih sicer ne štejem med diskurzne označevalce , vsekakor pa imajo nekoliko posebno in zelo izrazito vlogo , zato so kot kategorija zanimivi tudi za strojno simultano prevajanje govora : kažejo , da je navedeni primer samo eden od možnih oz. da seznam ni dokončan .
pozanimate ker mi mislim ne delamo nobenih [ dOb * E:nix ] rezervacij pa in tega Te vrste izrazi so bili opaženi tudi drugod .
( Overstreet , 2005 ) na primer jih poimenuje ( angl. ) general extenders , najdemo pa še druge termine : ( angl. ) list completers , set markers , category identifiers .
Rabe , kjer je zdaj nedvoumno bistven del propozicijske vsebine , npr. : [ TAko40.trs ] K23 : eee pa se da to nekako da je kakšno [ k / a:SnO ] informacijo zdaj zvem ?
ter rabe , kjer je nedvoumno predvsem v pragmatični vlogi ( tukaj sem ga razvrstila med diskurzne označevalce ) : [ TAso11.trs ] Aso7 : eee zdaj [ zd \ @ j ] " hotel Neptun " imamo [ m / a:mO ] tudi v Tučepih so pravzaprav redke .
Najpogosteje se je težko odločiti , ali je zdaj bolj v vlogi diskurznega označevalca ali je bolj del propozicijske vsebine : [ HOha50.trs ] K39 : eeem treh ali [ al ] pa štirih Nemcev to zaenkrat še ne vem sss se pravi oni [ + SOGOVORNIK _ mhm ] so pač iz Nemčije [ + SOGOVORNIK _ mhm ] K39 : # nikoli # [ nik / o:l ] še niso bili [ bl / i : ] v Sloveniji K39 : in zdaj [ zd \ @ j ] bi jih ze ( ) pač za takšne štiri [ St / i:r ] pet dni počitnic ki jih bojo imeli [ m / e:li ] v Sloveniji bi jim pač seveda rada [.]
Zaradi tega analiziram vse rabe .
SSKJ zabeleži še vrsto rab , ki povzročajo največ težav , ko bi bilo treba ločiti diskurzni označevalec zdaj od ostalih vlog , in sicer navaja , da lahko zdaj poudarja zahtevo ali izraža negotovost , nejevoljo ; izraža nasprotje s prej povedanim , pri tem lahko izraža prehod k drugi misli ali napoveduje nasprotje s pričakovanim ; zdaj je lahko rabljen tudi vezniško , zlasti v zvezah zdaj ko ali zdaj – zdaj ; pod ekspresivno rabo SSKJ navaja primere zdaj zdaj bomo doma ali še zdaj ne verjameš , kot medmetno rabo pa tip pripravljeni , pozor , zdaj .
( Smolej , 2004a ) uvrsti zdaj med delilne signale , ki na ravni organizacije besedila signalizirajo začetek besedila , konec , prekinjanje , ponovno navezovanje ...
( Schlamberger Brezar , 1998 ) uvrsti zdaj med pragmatične povezovalce , natančneje med proaktivne zaznamovalce zgradbe interakcije .
in sicer isti [ + SOGOVORNIK _ aha ] program ali bližnja preteklost : [ TAko47.trs ] Ako1 : je zelo varna država mi smo imeli [ m / e:li ] zdaj [ z / a:j ] [ + SOGOVORNIK _ ja ] dosti [ d / o:st ] dosti [ d / o:st ] gostov Zdaj kot diskurzni označevalec povezuje diskurz s trenutkom govorjenja , umešča diskurz v čas , v katerem poteka .
Pogosteje je rabljen med skladenjsko ali vsebinsko šibkeje povezanimi zaporednimi deli propozicijske vsebine : [ TAso07.trs ] Aso9 : glejte [ l * E:jtE ] jaz bom eee tole majčkeno [ m / a:jtSk@n ] pobrskala pa vas pokličem nazaj ne ?
vi bi tako [ t / a:k ] šli na potovanje kar vam tudi bolj [ + SOGOVORNIK _ ja ] svetujem imate [ m / a:tE ] možnost tudi letovanja 6.2.9.2 Položaj zdaj v izjavi Položaj zdaj je 37-krat na začetku izjave : [ TAso17.trs ] Aso12 : zdaj [ z / a:j ] konkretno recimo Zaton ne ?
V mnogih od teh primerov stoji ob sintaktičnih mejah znotraj izjave : [ TAko40.trs ] Ako2 : skratka tudi [ t / u:t ] ko vi me ( ) zdaj [ z / a:j ] bom jaz rekla vi meni naročite ne vem vstopnico za levo desno tretje ne ?
6.2.9.3 Sopojavljanje zdaj z drugimi diskurznimi označevalci Če je zdaj prva beseda v izjavi , je pogosta zveza zdaj pa : [ HOha61.trs ] K38 : zdaj [ z / a:j ] pa najkasneje kdaj bi jaz morala [.]
Z drugimi diskurznimi označevalci se v takem položaju praviloma ne druži , izjema je eee , čeprav je tudi ta veliko pogosteje pred zdaj , za zdaj je v korpusu rabljen le enkrat : [ TAso11.trs ] Aso7 : zdaj eeem [.]
Če jih je več , je zdaj običajno zadnji – tudi to opozarja na njegovo prepletenost s propozicijsko vsebino : [ TPma42.trs ] Ama1 : ja poglejte eee zdaj [ z / a:j ] v zvezi z Mariborom eee v bistvu mi eee organiziramo samo vodenja V takih začetnih sklopih se najpogosteje sopojavlja za eee ( 18-krat ) : [ HOha50.trs ] Aha1 : eee zdaj [ z / a:j ] koliko oseb bi bilo ?
Za ja ( 2-krat ) , za glejte ( 3-krat ) , za ja in glejte ( 2-krat ) , med ja in zdaj se lahko vrine tudi povezovalni element ( primer s samo ) , tako rekoč na katerokoli mesto v takem nizu pa se lahko vrine eee : 135 [ HOpi34.trs ] K19 : ja zdaj [ z / a:j ] [ SMEH ] recimo recimo [ r * E:tsmO ] da bi jih [ x ] [ IZG ] rabil [ br / a:U ] [ IZG ] petnajst [ HOha50.trs ] Aha1 : glejte [ l * E:jtE ] zdaj [ z / a:j ] v času [.]
od prvega marca do tridesetega [ tr / i:jEsEtEga ] novembra veljajo tile paketi tri [ * ] letni časi V začetnem sklopu diskurznih označevalcev lahko zdaj sledi še za no ( 3-krat ) : [ TAne77.trs ] Ane2 : no zdaj [ z / a:j ] spet zopet odvisno ne ?
Če je zdaj rabljen sredi izjave , se običajno ne rabi skupaj z drugimi diskurznimi označevalci , razen redkeje z eee : [ TAso11.trs ] Aso7 : glejte [ l * E:jtE ] gospod eee [ ulica ] eee zdaj [ zd \ @ j ] takole [ tk / o:lE ] 6.2.9.4 Drugi sorodni izrazi Zelo sorodno vlogo kot zdaj lahko opravlja izraz potem , vendar potem sodi bolj v skupino povezovalcev predstavne strukture , na njegovo povezovalno vlogo pa opozarjajo tako slovnica ( Toporišič , 2000 ) kot ( Smolej , 2004a ) in ( Gorjanc , 1998 ) .
6.2.10 Oporni signali : mhm , ja , aha , aja , dobro , okej , tako , tudi , seveda Termin oporni signali na kratko uvede Kranjc ( 1999 : 62 ) , povzet pa je iz nemške besedilne slovnice ( Weinrich , 1993 : 834 ) kot ustreznica za nemški Hoerersignale .
Sprechersignale ) ter signala poslušalca oz. oporne signale ( nem .
Opornih signalov v korpusu Turdis-1 je skupaj 554 , vseh izjav pa 2393 , statistično to pomeni en oporni signal na 4 izjave , s tem da tega ne smemo razumeti preveč dobesedno , saj uporablja sogovornik oporne signale predvsem med daljšimi vlogami govorca .
Slika 12 v odstotkih prikazuje pogostost posameznih opornih signalov .
6.2.10.1 Pragmatične vloge opornih signalov Za diskurzne označevalce v položaju opornega signala velja enako kot v drugih položajih , zato namenim nekaj besed samo tistim izrazom v vlogi opornega signala , ki jih sicer ne obravnavam posebej .
Tako podobno kot ja ali mhm izraža pritrjevanje , strinjanje ipd. : [ HOha50.trs ] K39 : se pravi to je zdaj ponudba trije letni časi K39 : [ SOGOVORNIK _ tako ] K39 : in če jih je več dobijo mogoče še kakšen popust ?
Govorci jih lahko uporabljajo izmenično , morda tudi zato , da ne ponavljajo ves čas istega : [ TAko47.trs ] Ako1 : tako [ t / a:k ] glejte je [.]
Opornih signalov , ki se ne prekrivajo , je 169 , takih , ki se prekrivajo z govorom govorca ( sem štejem tudi primere , ko se prekriva samo del besede ) , pa 385.
Za oporne signale , ki se prekrivajo z govorom govorca , lahko izračunamo povprečno dolžino izjave : takih izjav je 254 ( manj kot opornih signalov zato , ker v teh izjavah pride povprečno več kot 1 oporni signal na izjavo ) , skupaj imajo 2885 besed , torej je povprečna dolžina izjav , na katere se sogovornik odzove z opornim signalom , 11 besed .
Oporni signali , ki se ne prekrivajo z govorom govorca , so izgovorjeni v premoru , ki ga naredi govorec , to je večinoma ( 159 ) premor med izjavami , ne znotraj izjave ( 10 ) .
V 254 izjavah , kjer se oporni signali prekrivajo z govorom govorca , se v 53 izjavah prekrivajo z zadnjo besedo izjave govorca , v 91 izjavah pa s prvo besedo izjave .
Razporeditev opornih signalov glede na izjavo govorca prikazuje slika 13.
Sredi izjave 22% Premor 40% Konec izjave 14% Začetek izjave 24% Slika 13 : Položaj opornih signalov glede na izjavo govorca .
6.2.10.3 Sopojavljanje opornih signalov Zelo izrazita je povezava opornih signalov ( predvsem ja , mhm , aha , tako , manj dobro in okej ) z diskurznim označevalcem ne ?
saj veste da so pri [ p@r ] pri [ p@r ] [ angl - ] magic life [ IZG ] [ - angl ] [ + SMEH ] mislim pri [ p@r ] [ angl - ] magic lifih [ - angl ] pri [ p@r ] teh [ angl - ] all inclusivih [ - angl ] [ + SOGOVORNIK _ jaja ] je [ + SOGOVORNIK _ jaja ] tudi [ t / u:t ] ljudi [ lud / i : ] odvisno kako [ k \ ak ] ne ?
Analizirani diskurzni označevalci so v korpusu rabljeni predvsem v pragmatični vlogi , seveda pa tudi na tako rabo pogosto vpliva semantična dimenzija .
Ugotovitve temeljijo na specifični vrsti pogovorov , analiziranih v tej raziskavi , in jih nikakor ne smemo nekritično posploševati na druge diskurzivne vrste .
Diskurzni označevalec Pomenski opis ja prav imate ; strinjam se ; razumem ja ?
delu izjave ) mislim * hočem reči zdaj zdaj * Zaradi majhnega števila primerov rabe v korpusu so rezultati lahko nepopolni .
Drugi princip poimenujem povezovalnost .
Analizirani diskurzni označevalci lahko namreč vzpostavljajo povezave s preteklim ali prihodnjim diskurzom ( glej tabelo 9 ) .
+ ( a ) veste * ( v začetku izjave ) + ( a ) veste * ( v nezačetnem delu + izjave ) mislim * + zdaj + * Zaradi majhnega števila primerov rabe v korpusu so rezultati lahko nepopolni .
+ ( a ) veste * ( v začetku izjave ) + ( a ) veste * ( v nezačetnem + delu izjave ) mislim * zdaj * Zaradi majhnega števila primerov rabe v korpusu so rezultati lahko nepopolni .
Nekateri diskurzni označevalci omogočajo tudi izražanje odnosa govorca do vsebine izjave prejšnjega govorca , kot prikazuje tabela 11.
Diskurzni označevalec Odnos govorca do vsebine izjave prejšnjega govorca ja ja ?
( a ) veste * mislim * zdaj * Zaradi majhnega števila primerov rabe v korpusu so rezultati lahko nepopolni .
+ poglejte / glejte saj veste veste (+ kje / kaj ...)*
( a ) veste * mislim * + zdaj * Zaradi majhnega števila primerov rabe v korpusu so rezultati lahko nepopolni .
Tabela 12 : Analizirani diskurzni označevalci pri organiziranju poteka diskurza .
144 Analize , kje v izjavi se posamezni diskurzni označevalci najpogosteje rabijo , na začetku , na koncu ali sredi izjave , lahko združimo v primerjalno razpredelnico najznačilnejših položajev diskurznih označevalcev ( tabela 13 ) .
Analize sopojavljanja diskurznih označevalcev pa lahko strnemo v sklep , da se diskurzni označevalci sopojavljajo predvsem v začetku izjave , pri tem pa je najbolj značilno zaporedje naslednje ( znak # pomeni , da se lahko ta diskurzni označevalec ponovi dva - ali večkrat ) : aha # / mhm # / aja ja # no # dobro / okej / v redu / prav # glejte zdaj Na koncu izjave se ( če se ) praviloma rabi samo en diskurzni označevalec , prav tako sredi izjave .
Eee se lahko uporablja na kateremkoli mestu v izjavi in se lahko vrine v katerikoli niz diskurznih označevalcev .
Pogostost rabe posameznih diskurznih označevalcev v korpusu Turdis-1 je naslednja : eee / mmm 558 ja 319 ne ?
253 oporni signal ja 229 oporni signal mhm 212 zdaj 119 aha 111 dobro / v redu / okej / prav 98 oporni signal aha 72 no 51 mhm 33 poglejte / glejte 29 oporni signal tako 23 mislim 13 oporni signal dobro 8 veste kaj / kje ...
3 oporni signal okej 3 oporni signal aja 1 oporni signal seveda 1 Skupaj : 2158 145 Vseh besed v korpusu , vključno z opornimi signali , je 15.717 , vseh diskurznih označevalcev pa 2158.
Diskurzni označevalci v analiziranem gradivu , telefonskih pogovorih v turizmu , torej predstavljajo 13,7 % vseh besed .
Rezultati analiz veljajo predvsem za zvrst pogovorov v gradivu in nikakor niso popolna predstavitev njihove rabe .
pri primerljivih govorcih iz osrednjeslovenskega in severovzhodnega geografskega področja ni pokazala bistvenih razlik , morebitna resna primerjalna raziskava ostaja izziv za nadaljnje delo .
Prav tako pri morebitni nadaljnji interpretaciji rezultatov ne smemo zanemariti , da je jezikovna raba vedno tudi izraz posameznika , ne samo skupnosti , ki jim pripada .
Zato moramo pričakovati , če se ukvarjamo z jezikovno rabo , da bomo vedno znova naleteli na inovacije in večja ali manjša odstopanja od splošnega , kot npr. ugotavljam v dveh pogovorih o pogostosti rabe opornih signalov .
Splošen osebni vtis po opravljenih analizah je , da imajo vsaj nekateri govorci morda svoje » priljubljene « diskurzne označevalce , ki jih uporabljajo pogosteje kot druge označevalce in pogosteje kot večina govorcev , morda tudi v nekaterih novih položajih in vlogah oziroma v položajih in vlogah , kjer kak drug govorec morda uporablja drug diskurzni označevalec .
6.3.1 Sintagmatsko-paradigmatski vidik popravljanj Uporaba jezikoslovnih konceptov pri razvoju govornih tehnologij zahteva natančne definicije .
Tako moramo tudi popravljanja definirati kar se da enoznačno in jasno , kar bom skušala narediti v nadaljevanju .
Pri spontanem govorjenem diskurzu so ( delno ) razkriti procesi tvorjenja ali z drugimi besedami , spontan govorjeni diskurz ni načrtovan daleč naprej , le redko več kot nekaj besed .
Ta teorija na strukturni ravni tudi širše razloži značilnosti spontanega govorjenega diskurza ; sprotno načrtovanje se namreč kaže na več ravneh , najopazneje morda na oblikoskladenjski .
Znotraj izjave se kaže na primer v besednem redu : [ TAko47.trs ] K25 : eee veste kaj mene zanima eee če imate [ m / a:tE ] vi zdaj [ z / a:j ] kakšne posebne eee ponudbe [.]
[ TPma37.trs ] K5 : eee to je na vrhu kje potem tega " meljskega hriba " ?
V slovenščini kot visoko pregibnem jeziku se lahko sprotno načrtovanje tvorjenja pogosteje kot v manj pregibnih jezikih kaže tudi tako , da se trenutne oblike ne ujemajo vedno s predhodnimi oblikami , pa jih govorec vseeno ne popravlja : [ TAne77.trs ] K44 : eee ne vem [ NERAZUMLJIVO - ] vem da so ti ka ( ) [ - NERAZUMLJIVO ] eee vem da so ti kampi na primer v Korzika Sicilija [ TAko40.trs ] K23 : recimo da [ + SOGOVORNIK _ ja ] je iz apartmaja [ apartm / a:na ] do teh olimpijske vasi kamor bo tu ne ?
Večina tujih raziskovalcev ( Schegloff , 1979 ; Levelt , 1983 ; Allwood et al. , 1990 ) med popravljanja že šteje primere , ko se govorec na sintagmatski osi ustavi , prekine tok govora in naredi ali samo tih premor ( molk ) ali z diskurznim označevalcem nakaže premor ( eee , eeem ) , npr. : [ HOpi71.trs ] Api6 : plus taksa sto štiriinsedemdeset [ st / o:St \ @ rns \ @ ndEsEt ] pa neke [ + SOGOVORNIK _ mhm ] [.]
Sama takih primerov ne štejem med popravljanja .
V okviru popravljanj moramo posebno pozornost nameniti ponavljanjem , saj je tukaj lahko meja med popravljanjem in nepopravljanjem najtežje določljiva .
Ponavljanje je po eni strani izredno pogost instrument popravljanja , saj govorec v popravku pogosto ponovi del popravljene enote .
Po drugi strani pa lahko ima ponavljanje še številne druge funkcije , ki jih nikakor ne moremo prišteti k popravljanjem , npr. poudarjanje , potrjevanje , zagotavljanje , in se prav tako pogosto kot znotraj vloge pojavlja tudi na ravni menjavanja vlog , recimo kot potrjevanje , da je sogovornik pravilno razumel govorčevo sporočilo , pozitiven odgovor na vprašanje ipd. ( prim. Perrin et al. , 2003 ) .
Zato tehnicistično ločim ponavljanja , pri katerem govorec nič ne spremeni ( tudi besednega reda ponovljenih enot ne ) , od ponavljanj , kjer govorec karkoli spremeni v primerjavi s prvo pojavitvijo : besedni red , izgovori ponovljeno besedo / besedno zvezo drugače kot prvič , tj. z drugačnim naglasnim mestom , morda je 148 prvič beseda prekinjena ali se mu je prvič zareklo ipd.
Med popravljanja štejem samo drugo skupino ponavljanj ( ko je karkoli spremenjeno ) , in sicer samo znotraj iste vloge .
Poleg že naštetih razlogov takšno odločitev podpira tudi dejstvo , da so v transkribiranem govornem korpusu ti dogodki tudi strojno sledljivi .
video projektor računalnik ozvočenje Bolj dvoumni so primeri , ko govorec nekaj dodatno , natančneje pojasnjuje .
Menim , da ti primeri odstopajo od drugih popravljanj , saj ni očitne prekinitve strukture , ki je sicer značilna za popravljanja : [ HOpi78.trs ] K30 : eee študenti organiziramo en [ * ] tak [ * ] letni sestanek oziroma srečanje [ TPma42.trs ] K39 : poglejte v zvezi bom rekla s ponudbo [.]
oziroma za takšne petičneže [ HOpi78.trs ] K30 [ prekr ] : kaj pa eee sobe oziroma pač dvorana predvsem je klimatizirana ?
je možno je različna možnost postavitev miz Če se govorec vrne po sintagmatski osi daleč nazaj , je lahko vmes vrinjena zaključena struktura , namen vračanja pa je vzpostavitev povezave z začetno strukturo , ki je bila zaradi vrinjene prekinjena : 149 [ TAso16.trs ] Aso1 : je pa cena te eee sobe balkon morska stran ne ?
V primerih je del besedila , ki je popravljen , podčrtan , diskurzni označevalci pred popravljeno enoto ali po prekinitvi niso vključeni , ker so že v prejšnjem poglavju ( 6.2 ) definirani kot posebna kategorija : [ HOha61.trs ] K38 : jaz bi vprašala [ fpr / a:Sala ] če še imate [ m / a:tE ] kaj prostega eee v prvi teden [ t / e:dn ] v juliju ko » festival Lent « poteka [ HOpi24.trs ] K17 : eee kaj pa te [ * ] potem še kakšne recimo kaka večerja posebna ?
6.3.2 Pragmatični vidik popravljanj Sintagmatsko-paradigmatski vidik popravljanj nam pomaga zamejiti popravljanja na sintagmatski osi , za natančnejšo razlago popravljanj pa na kratko poglejmo še pragmatični vidik .
Kontekstna vpetost in možnost sprotne interakcije pri pogovoru med drugim omogočata večjo stopnjo implicitnosti in eliptičnosti pogovora , kot lahko npr. opazujemo v naslednji izjavi : [ TAko47.trs ] Ako1 : pol [ * ] pa imate [ m / a:tE ] križarjenje po Nilu eee prevoz iz Maribora pa z letalom potem iz Budimpešte je [ E ] tista klasika Dejstvo , da sta sogovornika v pogovoru del aktivnega kontekstnega okolja , je treba upoštevati tudi pri razlagi pragmatične dimenzije prekinjenih struktur .
Začeta struktura je podrejena usklajevanju ali drugače rečeno , če se v diskurzu pokaže potreba po aktivnem usklajevanju aktivnosti sogovornikov , je lahko zaradi tega začeta struktura prekinjena ( in dokončana kasneje ali pa je povsem opuščena ) .
Aso7 : nimate želj aha Pogosto govorec prekine izjavo , ker skuša sogovornik prevzeti vlogo ali prevzame vlogo ali nakaže namero , da bi rad prevzel vlogo : [ HOpi34.trs ] K19 : to se da tudi [ t / u:t ] organizirat ?
tudi se vse dogovorite pri nas Če govorec ne prekine izjave , ko skuša sogovornik prevzeti besedo oziroma nakaže namero , da bi prevzel besedo ( z diskurznim označevalcem ) , ostane nedokončana sogovornikova izjava : [ HOpi34.trs ] K19 : in zdaj [ IZG ] je [ IZG ] treba dat [ * ] te vabila za papirje in tako dalje med drugim [ + SOGOVORNIK _ ja ] bi bilo [ bl / o : ] to cirka dvajset ljudi Api3 [ prekr ] : ja potem bi verjetno ...
Govorec tako lahko prekine govor , ker : potrebuje več časa za tvorjenje na nekem mestu sintagmatske osi , kot bi ga imel ob neprekinjenem toku govora , spremeni strategijo , opazi napako , ima težave pri izrekanju ...
Govorec prekine govor , ker potrebuje več časa za tvorjenje : s tem lahko razložimo večino prekinitev s premori , diskurznimi označevalci iz sklopa eee , pa tudi precej zaporednih ponovitev besede ali besedne zveze , možne pa so tudi različne kombinacije teh : [ TAko40.trs ] Ako2 : imate [ m / a:tE ] pa recimo zdaj [ z / a:j ] eno eee zgolj informativno varianto da boste [ UtE ] malo videli [ v / i:dli ] koliko [ k / o:k ] [.]
Ama2 : kako [ k / a:k ] se imenuje Ama2 : eee ~ M [.]
[ - TIHO ] [ TISINA ] Api2 : šestnajst [ SEsn / a:js ] tisoč osemsto Govorec prekine strukturo , ker spremeni strategijo : spremembe strategije med govorjenjem so lahko različno obsežne .
K39 : eee če imate [ m / a:tE ] mogoče že kaj [ k \ @ j ] tovrstnega materiala kar [ k \ @ r ] v angleščini ali [ al ] pa nemščini bi mi bilo [ bl \ O ] dosti [ d \ Ost ] ljubše Lahko samo drugače ubesedi neko vsebino , kot je sprva nameraval : [ HOpi34.trs ] Api3 [ prekr ] : ja in na tem naslovu je potem to je naša spletna stran na katerem dobijo [ + SOGOVORNIK _ mhm ] vse informacije Zelo pogosto samo kaj doda k začeti propozicijski vsebini , npr. natančnejše informacije : [ HOpi36.trs ] Api2 : ampak [ + SOGOVORNIK _ mhm ] tukaj pred hotelom imamo [ m / a:mO ] parkirišče in se še ni ( ) do zdaj odkar jaz delam tukaj se še nikoli nič ni zgodilo Ali pa lahko o spremembi sklepamo samo iz popravka obliko-skladenjskega ujemanja : [ HOpi78.trs ] K30 : eee koliko [ k / o:lkO ] pa potem stane nočitev pa recimo da so eee da je poln penzion se pravi ...
Govorec prekine strukturo , ker opazi napako : pod to skupino najlažje prepoznamo primere , ko govorec popravi vsebinsko napako : [ TAko47.trs ] Ako1 : pa imate [ m / a:tE ] štirindvajseti [ St \ @ rindv / a:jsti ] peti Ako1 : eee [ + SOGOVORNIK _ mhm ] štirindvajseti [ p / e:tindv / a:jsti ] petindvajseti [ St \ @ rindv / a:jsti ] četrti pardon lažem Veliko težje je o razlogu za prekinitev zanesljivo sklepati , kadar govorec samo popravi obliko , npr. : 153 [ TAko47.trs ] Ako1 : nobenega [ nOb * E:nga ] nezadovoljnega gosta ni bilo [ bl / o : ] niti bi pri ( ) je prišel [ pr / i:SO ] kdo s kakimi negativnimi povratnimi informacijami Govorec prekine strukturo , ker ima težave pri izrekanju : tako lahko razlagamo naslednje primere : [ HOpi34.trs ] Api3 : ker [ kE ] [ IZG ] [ + SOGOVORNIK _ aha ] zelo [ z / o:lu ] [ + NERAZUMLJIVO ] eee zelo [ zl / o : ] lep ambient ne ?
za pi ( ) parkirišče [ + SOGOVORNIK _ ja ] me zanima ne ?
] slovom [ IZG ] " kolesarjenje med Pohorjem in Muro " Iz pragmatičnega vidika govorim o popravljanjih samo , kadar izvirajo iz procesov pri tvorjenju govora , razen kadar govorec prekine govor , ker samo potrebuje več časa za tvorjenje .
Ko govorim o popravljanju , mora biti poleg navedenih pragmatičnih vidikov izpolnjen tudi pogoj , da se govorec vrne po sintagmatski osi nazaj .
Del besedila , ki je popravljen ( npr. to bi za g ( ) kdaj bi to približno po ( ) eee potrebovali ) , je lahko različno dolg , vendar v korpusu nikoli ne obsega več kot 6 besed , s tem da se skoraj 90 % popravkov nanaša na največ do 3 besede nazaj .
Če je beseda prekinjena , jo vseeno štejem za novo besedo .
Najpogosteje , v 50 % popravljanj , je popravljena samo 1 ( prejšnja ) beseda , od tega je več kot polovica teh popravljanj ali 30 % vseh popravljanj takih , da je popravljena beseda prekinjena , torej je izgovorjen samo en , dva , trije ali več začetnih fonemov te besede ( npr. mize tudi l ( ) pripravimo ) .
Podobno kratek segment govora je popravljen , ko je popravljena beseda predlog , recimo predlog v ( 2 % popravljanj , primer : ker [ k@r ] v edino v tem prostoru ) .
Natančnejši podatki iz korpusa o številu besed v delu besedila , ki je popravljeno , so v tabeli 14. št. besed v popravljenem delu Št. popravljanj v Št. popravljanj besedila korpusu v % 1 beseda 50 % 108-krat 2 besedi 27 % 60-krat 3 besede 11 % 25-krat 4 besede 8 % 18-krat 5 besed 2 % 5-krat 6 besed 2 % 4-krat Tabela 14 : Število besed v popravljenem delu besedila v korpusu Turdis-1 .
Prekinitev je obvezen del popravljanj , kot jih razumem tukaj , vendar je lahko dokaj problematična za strojno razpoznavo .
Prekinitev sredi besede je za človeka hitro razpoznavna , pri strojnem razpoznavanju pa lahko tu pričakujemo nekaj težav .
Prekinitev začete strukture med besedami je v korpusu 100.
Za strojno razpoznavo je razpoznavanje prekinitev lahko zelo težavno , morda je možnost v prozodičnih modelih , vendar je na tem področju za slovenščino še zelo malo raziskanega .
V korpusu je skupno 172 prekinitev sredi besede , od tega 120 zaradi popravljanja , ostale pa se pojavljajo večinoma ob nedokončanih izjavah , npr. se pravi to bi bilo [ bl / o : ] po ( ) ...
, nedokončanih izjav ( izjava ni nujno prekinjena sredi besede ) , torej takih , ki jih govorec prekine zaradi usklajevanja aktivnosti s sogovornikom ali iz zunanjeokoliščinskih razlogov , pa 176.
Tabela 15 prikazuje , kolikokrat je katero popravljalno sredstvo v Turdisu-1 uporabljeno za popravljanjem , ki je začeto s prekinitvijo sredi besede .
Kar v tri četrt primerih torej po prekinitvi sredi besede govorec ne uporabi nobenega popravljalnega sredstva , ampak takoj po prekinitvi začne popravek .
Če je popravljanje izvedeno po prekinitvi med besedami , pogosteje sledi najprej popravljalno sredstvo .
] ) , posebnost pa je podaljševanje običajno zadnjega zloga popravljene besede ( [ : ] ) , torej pred prekinitvijo .
Ločim ponovitev elementov na ravni izraza ( besede , več besed , tudi druge besedne oblike iste slovarske iztočnice ) in ponovitve elementov na ravni fonema ( te je smiselno šteti , ker govorec pogosto ponovi besedo , ki jo je prekinil ) .
Tabela 17 prikazuje , koliko katerih elementov iz popravljenega dela je ponovljenih v popravku .
Čeprav je delno ponavljanje torej dokaj pogosto strategija popravljanja , pa vseeno ni zanesljiv kazalec popravljanj : skupaj je znotraj iste vloge v kontekstu približno 10 besed okoli 400 ponovitev na ravni izraza ( pri tem ne štejem ponovitev diskurznih označevalcev , števk pri navajanju telefonskih številk , pozdravov , zahvaljevanja oziroma ponavljanj pri menjavanju vlog ) .
Le v približno 20 % je torej ponovitev del Ta primer je žal edini , vendar po strukturi poseben : popravljalno sredstvo ne sledi prekinitvi , ampak je dodano na koncu , za popravkom ( eee štirindvajseti [ St \ @ rindv / a:jsti ] petindvajseti [ p / e:tindv / a:jsti ] četrti pardon lažem ) .
Poleg tega ponovitev , kadar je del popravljanja , ne sledi vedno takoj za prekinitvijo ali popravljalnimi sredstvi v popravljanju , ampak so v 60 primerih popravljanj s ponovitvijo , kar pomeni v 40 % , pred ponovitvijo v popravku vrinjene še drugi izrazi , in sicer običajno od 1 do 4 besed ( npr. bi jim pač seveda rada [.]
7 DISKUSIJA V tem poglavju razmišljam o rezultatih analiz s treh vidikov : z vidika vpliva strojnega vmesnika – prevajalnika na medčloveško komunikacijo , z vidika uporabe analiziranih konceptov v strojnem simultanem prevajanju govora in z vidika jezikoslovja .
Prevajanje je nedvomno velika modifikacija sporočila , prevod ( pa čeprav ga naredi dober prevajalec ali tolmač ) samo boljši ali slabši približek tistega , kar je bilo sporočeno v izvirniku , po eni strani omejen z različnostjo kolektivnega duha skupnosti , med katerima prenaša sporočilo , po drugi je prevajalec nujno tudi soavtor prevedenega sporočila .
V luči strojnega simultanega prevajanja govora je zato prav , da se vprašamo , kakšen prevajalec / - nik in soavtor je stroj .
Vsekakor je povsem drugačen od človeškega prevajalca : ne pripada nobeni družbeni skupini , ne vstopa v družbena razmerja s človekom , nima namenov , želja , misli , smisla za umetnost ali estetiko , nima osebnosti , psiholoških travm itd.
Signal je ali pa ga ni , to je vsa informacija , ki jo » razume « sam po sebi .
Pri posredovanju sporočil prek sistema strojnega simultanega prevajanja govora bo moral uporabnik torej gojiti dvojno toleranco : prvo , ki izhaja iz medjezikovnih in medkulturnih razlik , ki jih je treba vedno premostiti pri prevajanju , in drugo , ki izhaja iz tolerance do posrednika – stroja in pomeni med drugim toleranco do : • morebitne slovnične , vsebinske , komunikacijske ( ne ) ustreznosti oz. slabše ustreznosti sporočila , prenesenega prek strojnega vmesnika ; • motenj komunikacije zaradi napak sistema , predvsem pri razpoznavi govora in prevajanju govorjenega besedila , zaradi česar bodo v komunikaciji lahko nastajali zastoji ali nesporazumi ; • vpliva na sistem menjavanja vlog – sistem strojnega simultanega prevajanja govora bo ( vsaj v začetku ) onemogočal hkratni govor , verjetno bo vnesel tudi kratek premor med koncem izjave enega govorca in začetkom izjave drugega govorca .
Nedvomno je odgovor na to vprašanje odvisen od pomembnosti komunikacijskih ciljev , ki jih uporabnik želi doseči v pogovoru prek sistema strojnega simultanega prevajanja govora , in od ponudbe različnih komunikacijskih kanalov , ki jih ima na voljo , da doseže te cilje .
Če bo uporabnik zelo zainteresiran , da doseže komunikacijske cilje , in če bo komunikacija prek sistema strojnega simultanega prevajanja govora edina pot , bodo uporabniki verjetno pokazali visoko stopnjo prilagodljivosti , iznajdljivosti in potrpežljivosti v komunikaciji .
Sistem strojnega simultanega prevajanja govora mora zato ponujati dodatno kvaliteto v komunikaciji – ki verjetno izhaja predvsem iz različnosti pogovora in pisnega diskurza ter seveda iz prednosti komunikacije v maternem jeziku – sicer bo uporabnikova motivacija za prilagajanje nizka in bo ob težavah v komunikaciji ali preveliki » nenaravnosti « oz. neobičajnosti komunikacije zaradi strojnega vmesnika raje izbral kakšno drugo pot .
Informacije o jeziku v jezikovne tehnologije vključujejo na dva načina : v obliki jezikovnih pravil ali prek jezikovnih virov ( označenih korpusov , slovarjev ipd. ) .
Zadnji čas je od teh pogosteje izbran korpusni pristop in na tak način vidim tudi morebitno implementacijo rezultatov te raziskave v sisteme strojnega simultanega prevajanja govora : v obliki atributov za označevanje korpusnega gradiva .
Spontani govor ni razdeljen na manjše enote na za strojno procesiranje tako enostaven način , kot je pisno besedilo razdeljeno z ločili , odstavki ipd. , lahko pa ga razdelimo na manjše enote glede na strukturo pogovora .
Natančneje skušam za potrebe strojnega simultanega prevajanja govora definirati izjave , ki jih lahko v spontanem govoru približno vzporejamo s povedmi ali stavki v pisnih besedilih .
Strojno segmentiranje govora na izjave ne sme temeljiti samo na premorih v govoru , ampak je treba upoštevati tudi druge prozodične značilke in jezikovne modele .
Uspešen uvod in zaključek sta nujen del vsakega pragmatično uspešnega pogovora , zato imata v njem zelo pomembno vlogo , hkrati pa so uporabljena jezikovna sredstva precej tipska ( tako uvodna kot zaključna sekcija vključujeta nekatere tipične fraze in dejanja ) .
Odvisnost tehnologije od površinskega besedila me v nadaljevanju vodi predvsem k iskanju izrazov , ki so kar najbolj povezani z značilnostmi spontanega govora , naštetimi zgoraj .
V analizi diskurza se veliko teh izrazov označuje s termini diskurzni / pragmatični / besedilni označevalec / povezovalec / členek itd.
Kadar so v tej vlogi , jih poimenujem diskurzni označevalci .
Glede na to so lahko v pomoč pri segmentiranju spontanega govora na izjave .
Njihova raba v diskurzu se ravna po predstavnem pomenu , ki ga lahko izražajo , povezovalni moči , ki jo lahko imajo , po razmerjih med sogovorniki in odnosu sogovornika do propozicijske vsebine , ki jih lahko izražajo , ter po vlogi pri organiziranju poteka diskurza , ki jo lahko imajo .
Koncept diskurznih označevalcev v tehnologiji omogoči izločanje za posredovano propozicijsko vsebino manj pomembnih jezikovnih sredstev , po drugi strani pa pomaga pri orientaciji po besedilu , ob bolj ambiciozno zastavljeni tehnologiji pa tudi orientacijo po diskurzu / dialogu .
Obravnavanje netekočnosti , obotavljanj , napačnih začetkov in podobnega kot značilnosti spontanega govora , ki otežujejo razvoj govornih tehnologij , zahteva analizo diskurza s stališča strukture izjav .
Za raziskavo zanimivih je še veliko vidikov : S stališča strukture pogovorov sem že opozorila na možnost nadaljnjega ločevanja jedrne sekcije na posamezne tematske sklope , enako sem pustila odprto možnost analize bližnjih parov .
Od ostalih konceptov so v strojno simultano prevajanje govora že poskusno uvajali govorna dejanja iz jezikovne pragmatike ( sistem Verbmobil ( Reithinger , 1994 ) ) , kar je prav tako lahko zanimiva možnost .
Seznam izrazov v vlogi diskurznih označevalcev nikakor ni izčrpan , že v analiziranem gradivu bi lahko vključili še izraza v bistvu ali tako da , novo korpusno gradivo pa bi nedvomno prineslo še številne druge .
Prav tako se skozi analize kaže možnost oblikovanja še kakih drugih skupin izrazov-označevalcev , ne samo diskurznih , ampak npr. označevalcev nezaključenega niza , kot so in tako dalje , pa tak in podobni , povezovalnih sredstev itd.
V duhu te raziskave bi lahko nadaljevali z analizo ponavljanj tako znotraj vloge kot na ravni menjavanja vlog , z natančnejšo analizo nedokončanih izjav ipd.
Morda bi bila za strojno simultano prevajanje govora uporabna tudi raziskava strukture izjav s stališča kohezivnosti in koherence , analize navezovanja in / ali deiktičnih sredstev .
Seveda pa bi lahko raziskovali tudi medsebojno povezanost vseh navedenih ravni , povezanost diskurznih označevalcev z govornimi dejanji itd.
V tej nalogi zato skušam kolikor mogoče ohraniti konsistentnost z drugimi podobnimi raziskavami in hkrati zastaviti dovolj širok okvir za analizo jezikovne rabe glede na cilje raziskave , pri čemer pa zaradi omejitve na primeren obseg dela večina poti pušča odprte možnosti za nadaljnje raziskovanje ali celo ostane samo nakazanih .
S tem nujno prestopa meje jezikoslovja .
V pričujoči raziskavi sicer skušam ohraniti čimbolj jezikovno perspektivo ( ki jo najbolje poznam ) , vendar se pri tem ne smem izogniti dejstvu , da jezikovne rabe nikakor ne 162 moremo zadovoljivo razumeti , če ne upoštevamo nejezikovnih dejavnikov , ki nanjo vplivajo .
V nalogi skušam iz gradiva analizirati te dejavnike , vsekakor pa bi bil zanimiv in popolnejši pogled nanje še skozi oči drugih humanističnih in družboslovnih ved .
V rezultatih te raziskave pridejo najbolj do izraza v nadaljevanju našteti dejavniki , ki vplivajo na jezikovno rabo tistih jezikovnih sredstev in struktur , ki jih analiziram .
To niso nujno vsi dejavniki , ki vplivajo na jezikovno rabo , tudi primeri so omejeni samo na analize v tej nalogi .
Govorci so torej časovno zelo omejeni pri tvorjenju , imajo pa na voljo nekaj strategij , s katerimi lahko vsaj delno premoščajo to omejenost : popravljanja , ponavljanja , podaljševanje zlogov , diskurzni označevalec eee , krajši premori , govorci lahko napovejo in utemeljijo daljši premor v pogovoru ipd. • Socialna dimenzija – pri analizi diskurznih označevalcev ugotavljam , da se nekateri rabijo predvsem z namenom , da govorec preverja pozornost in zainteresiranost sogovornika , sogovornik pa pozornost in zainteresiranost potrjuje , da sogovorniki tudi z diskurznimi označevalci gradijo pozitivno , harmonično ozračje diskurza , da se z diskurznimi označevalci obračajo drug na drugega , skušajo pritegniti pozornost , ohranjati stik ipd.
Vse to lahko interpretiramo kot del socialne dimenzije diskurza .
Sem štejem primere , ko govorec izraža svoj odnos do vsebine npr. z diskurznimi označevalci ( no , aja , aha ipd. ) , pri popravljanjih pa je ta dimenzija razkrita prek miselnih procesov , ki potekajo med tvorjenjem diskurza : govorec spremeni strategijo , opazi , da je naredil napako in jo popravi , bolj mejno v tem sklopu je zarekanje , ki bi morda že napol sodilo v fiziološko dimenzijo .
V analizah nas na to dimenzijo opozorijo nekateri diskurzni označevalci , s katerimi govorec nakaže , da želi nadaljevati ali prevzeti vlogo , označevalci , s katerimi nakaže , da želi spremeniti temo ali zaključiti pogovor , jezikovna sredstva , s katerimi opozori na premor v pogovoru ipd.
Veliko diskurznih 163 označevalcev ima tudi povezovalno vlogo , sogovornika se z njimi navezujeta na preteklo vsebino ali napovedujeta prihodnjo vsebino .
Navedene vidike lahko označimo za metadiskurzivne v ožjem pomenu , mogoče pa jih je videti tudi kot presek dela časovnih , socialnih in psiholoških dejavnikov , saj je organiziranje poteka diskurza po eni strani stvar interakcije in odnosov med sogovornikoma , po drugi strani pa izraz posameznikovih želja , namer ipd. , povezovanje diskurza pa pomaga k orientaciji po diskurzu v času .
Dejstvo , da pri mnogih jezikovnih sredstvih ali strukturah ne moremo reči , da so v neki rabi samo v pragmatični vlogi ali samo del propozicijske vsebine , ampak je meja marsikje nejasna , kaže , da teh dimenzij ne smemo preslikati v besedilo na način , da bi ugotavljali , da je raba nekega jezikovnega sredstva ali strukture izraz samo socioloških dejavnikov ali raba drugega izraz samo psiholoških ipd.
Ali lahko tudi v sami rabi odkrijemo procese , pravila ali celo sistem , je najbrž temeljna naloga analize diskurza .
Tradicionalno jezikoslovje mora , če noče tvegati , da postanejo njegove razlage razlage mrtvega jezikovnega sistema , takega , ki ga nihče ne uporablja , izhajati iz žive besede , dejansko torej iz jezikovne rabe .
In analiza diskurza seveda ne more preučevati jezikovne rabe ločeno od jezika ( kot je očitno tudi v tej raziskavi ) .
8 POVZETEK Namen naloge je bil raziskati , katere koncepte analize diskurza bi bilo smiselno implementirati v razvoj sistemov strojnega simultanega prevajanja govora , da bi s tem premoščali ovire pri procesiranju značilnosti pogovora .
Pri pregledu razvoja na področju strojnega prevajanja ugotavljam , da pri tem ločijo več pristopov , od katerih se danes najbolj uveljavljajo statistični korpusni pristopi , pri katerih se jezikoslovno vedenje vključuje v obliki označevanja korpusa , ali tudi hibridni pristopi .
Ločiti moramo med sistemi strojnega prevajanja pisnih besedil in sistemi strojnega simultanega prevajanja govora , kjer je treba poleg prevajanja opraviti tudi proces strojne razpoznave in sinteze govora , izredno različno pa je tudi besedilo , ki je produkt pisnega ali govorjenega diskurza .
V slovenskem prostoru je kar nekaj centrov , kjer razvijajo govorne ali druge jezikovne tehnologije .
Sinteza govora je bolj uspešna , vseeno pa je tudi tu še precej prostora za izboljšanje , predvsem pri prozodiji .
Prevajanje govorjenega besedila za slovenski jezik šele začenjamo razvijati , tako da o tej tehnologiji še ne najdemo objav , velika ovira pri tem je tudi pomanjkanje ustreznih jezikovnih virov , tj. enojezičnih ter dvo - ali večjezičnih poravnanih korpusov spontanih govorjenih besedil .
Medtem ko je tradicionalno jezikoslovje temeljilo predvsem na raziskovanju pisnih besedil , se veliko raziskav spontanega govorjenega diskurza opravlja znotraj različnih smeri analize diskurza .
Za slovenski jezik so te analize narejene predvsem za diskurz v razredu ali javni diskurz prek medijev ali za diskurz politikov ter za otroški govor , šele hkrati s to raziskavo se pojavljajo širše raziskave spontanega govora tudi v drugih vsakdanjih situacijah .
Te so med drugim veliko raziskovale strukturo pogovorov , na podlagi česar lahko govorjeno besedilo razdelimo na manjše smiselne in za tehnologijo obvladljive enote : sekcije , vloge , izjave ...
Pri nadaljnjem raziskovanju iščem , ali lahko v izjavah ločimo jezikovna sredstva , ki so manj pomembna za posredovanje informacij .
Oprem se na raziskave diskurznih označevalcev in pri primerjavi teh opazim , da v različnih raziskavah ločijo med ravnema diskurza , ki ju sicer različno poimenujejo , a ju lahko tudi vzporejamo : to sta propozicijska vsebina in pragmatična vloga ( ali tudi metadiskurz , proceduralni pomen , komunikacijska vloga ipd. ) .
V nadaljevanju osredotočim pozornost na nekatera jezikovna sredstva in strukture , ki so običajno rabljene predvsem v pragmatični vlogi : ( 1 ) Koncept diskurznih označevalcev zajame veliko za spontan govorjeni diskurz značilnih izrazov , katerih vloga je v tradicionalnem jezikoslovju malo raziskovana .
Ti izrazi pogosto izstopajo iz govorjenega besedila , saj so sintaktično-semantično le ohlapno vpeti vanj , po drugi strani pa jim raziskovalci pripisujejo pomembno kontekstno-povezovalno vlogo .
in skupno dolžino 106 minut , merjeno v besedah šteje korpus 15.163 besed .
Način snemanja je ob vnaprejšnjem privoljenju vseh govorcev potekal tako , da je kolikor mogoče ohranil naravni kontekst te vrste pogovorov .
Format transkripcij je v osnovi XML , kot ga tvori Transcriber , za ilustrativno gradivo v nalogi je večina teh oznak odstranjenih .
Analizirani izrazi v vlogi diskurznih označevalcev imajo značilen položaj večinoma ob mejah izjav in značilno zaporedje sopojavljanja , če jih je rabljenih več skupaj .
Z analizo popravljanj definiram poseben , retrogarden del spontano tvorjene izjave , ki ga je treba pri nadaljnjem procesiranju izločiti , saj je lahko sicer zaradi svoje nezaključenosti moteč , ne samo nepotreben za posredovanje propozicijske vsebine .
Z vidika analize diskurza strnem rezultate v sklep , da so se v tej raziskavi kot dejavniki , ki pomembno vplivajo na jezikovno rabo , pokazali naslednji : zunanje okoliščine , časovni , socialni , psihološki in metadiskurzivni dejavniki v ožjem pomenu ( ki jih lahko vidimo tudi kot presek dela časovnih , socialnih in psiholoških dejavnikov ) .
Opravljeno delo odpira mnogo možnosti za nadaljnje raziskave v začrtani smeri , npr. delitev jedrne sekcije pogovorov na tematske sklope , analizo bližnjih parov , dopolnjevanje seznama diskurznih označevalcev in dodatno analizo rabe analiziranih diskurznih označevalcev v drugem gradivu , kategoriziranje drugih podobnih skupin izrazov ali tudi nadaljnje kategoriziranje izrazov , ki jih označim kot diskurzne označevalce , npr. glede na komunikacijske vloge , analizo in označevanje ponavljanj , oblikoskladenjskih neujemanj in drugih netekočnosti itd. , vendar bi prej kot to želeli preveriti nekaj drugega : 1. ali lahko z dosedanjimi rezultati pripomoremo k uspešnejšemu procesiranju spontanega govora kot samo s tradicionalnimi korpusnimi atributi ( s tem mislim predvsem morfo-sintaktične oznake ) , 2. ali lahko v začrtani smeri pokrijemo jezikoslovne informacije o značilnostih spontanega govora dovolj celostno , da s tem podpremo uspešen sistem strojnega simultanega prevajanja govora .
Ker je izdelava obsežnih semantičnih podatkovnih zbirk , ki zajemajo tudi splošno besedišče in so uporabne za širok spekter jezikoslovnih raziskav in aplikacij , zelo dolgotrajna in draga , v disertaciji predlagam model , s katerim je postopek mogoče avtomatizirati in pospešiti .
Raziskava temelji na predpostavki , da je ob uporabi že obstoječih wordnetov v drugih jezikih na eni strani in dvojezičnih slovarjev , tezavrov in enciklopedij ter jezikoslovno označenih vzporednih korpusov na drugi strani postopek izdelave semantičnega leksikona mogoče v veliki meri avtomatizirati .
Slovarski , korpusni in enciklopedični pristop , ki sem jih za avtomatizirano gradnjo slovenskega wordneta uporabila , ovrednotim in primerjam med seboj ter jih združim v semantično zbirko , imenovano sloWNet .
Izdelan leksikon analiziram glede na Princeton WordNet , ki je prvi in največji leksikalni vir te vrste , pokritost besedišča in pomenov pa preverim s korpusom jos100k .
Rezultat raziskave je utemeljena in preizkušena metodologija avtomatske izdelave semantičnega leksikona za slovenščino in prva različica semantične mreže slovenskega besedišča , ki je uporabna za eno - in večjezične računalniške aplikacije .
Izdelani wordnet s tem zapolnjuje vrzel v jezikovnih virih za slovenščino in postavlja temelje za širšo , semantično obogateno izrabo slovenskih korpusnih virov .
1 Uvod V času , ko količina in pomen dokumentov v elektronski obliki vse bolj naraščata , postaja učinkovito delo z njimi brez računalniške podpore praktično nemogoče .
Zato so se pojavile številne računalniške aplikacije , ki dokumente glede na njihovo vsebino razvrščajo v skupine , po obsežnih zbirkah iščejo informacije , ki jih uporabniki potrebujejo , izdelujejo povzetke daljših besedil , prevajajo besedila iz enega jezika v drugega in podobno .
Za tovrstne rešitve je koristna določena stopnja razumevanja besedil , kar računalnikom omogočimo z zbirkami , v katerih je človeško znanje urejeno tako , da jim nudi dostop do pomena posameznih besed in besednih zvez ter odnosov med njimi .
Tako besedi čapka in čaplja , ki sta v Slovarju slovenskega knjižnega jezika sosedi , nimata veliko skupnih pomenskih komponent ; prva je kapa , druga pa ptica , zato v leksikalno - semantičnem modelu ne bi bili blizu .
V disertaciji predstavljam gradnjo slovenske leksikalne zbirke tipa wordnet , ki temelji na tovrstni povezavi pojmov z leksikalnimi in pomenskimi razmerji .
Vendar je to izjemno dolgotrajen in drag podvig , ki si ga večina raziskovalcev ne more privoščiti , zato so v zadnjih nekaj desetletjih metode za avtomatizirano gradnjo semantičnih zbirk postale ena osrednjih tem na področju razvoja jezikovnih virov .
V mojem primeru bo to wordnet za angleški jezik , ki ga bom uporabila kot nabor pojmov , za katere bom v slovenščini skušala najti ustrezna poimenovanja zanje .
Za prenos angleških poimenovanj pojmov v slovenščino bom poskrbela s tremi različnimi tipi večjezičnih virov in metod ob predpostavki , da je iz prevodnega razmerja med besedami v izvornem in ciljnem jeziku mogoče pridobiti relevantne leksikalno-semantične informacije .
S pomočjo predlaganih metod in virov bom na podlagi prevodnega razmerja ugotovila , da je v tem pomenu njegova slovenska ustreznica beseda lok , ne pa trak ali priklon , ki sta sicer tudi možna prevoda angleške večpomenske besede bow .
Raziskava temelji na predpostavki , da je ob uporabi že obstoječih wordnetov v drugih jezikih na eni in dvojezičnih slovarjev , tezavrov in enciklopedij ter jezikoslovno označenih vzporednih korpusov na drugi strani postopek izdelave semantičnega leksikona mogoče v veliki meri avtomatizirati .
V raziskavi želim preveriti : 1. ali in v kakšni meri je s pomočjo večjezičnih virov na podlagi prevodnega razmerja mogoče z avtomatskimi pristopi pridobiti leksikalno-semantične informacije , ki so potrebne za gradnjo slovenskega semantičnega leksikona , 2. ali je prevodno razmerje mogoče uporabiti za razreševanje večpomenskosti besed po eni in iskanje sopomenk po drugi strani , 3. kakšni viri in pristopi so za avtomatsko prevajanje semantičnega leksikona iz enega jezika v drugega najboljši in 4. ali je izdelan semantični leksikon uporaben v praksi .
Doktorska raziskava s tega področja tako zapolnjuje vrzel v jezikovnih virih za slovenščino in postavlja temelje za širšo , semantično obogateno izrabo korpusnih virov za slovenski jezik .
Teoretični del začenjam s poglavjem o leksikalni semantiki in leksikalno-semantičnih kategorijah , ki jih bom uporabljala v svoji raziskavi .
3. poglavje je namenjeno predstavitvi različnih tipov semantičnih zbirk in zakaj jih potrebujemo , pri čemer se podrobneje posvetim semantičnim leksikonom tipa wordnet ter uporabi wordneta v računalniških aplikacijah .
Teoretični del sklenem s 4. poglavjem , ki vsebuje pregled literature o avtomatski gradnji semantičnih leksikonov in predstavitvijo modelov in virov za avtomatizirano gradnjo wordnetov .
Potek raziskave je ponazarja Slika 1.
Shematski prikaz poteka raziskave V 5. poglavju najprej opišem najenostavnejši slovarski pristop , s katerim sem sinsete iz tujega jezika v slovenščino avtomatsko prevedla s pomočjo dvojezičnega slovarja , napake pa nato popravila ročno .
Poglavje sklenem z opisom zadnjega , enciklopedičnega pristopa , s katerim sem v slovenski wordnet želela vključiti specifično besedišče , ki ga s prejšnjima pristopoma nisem mogla zajeti .
6. poglavje vsebuje analizo in vrednotenje wordneta , v katerem so združeni sinseti , pridobljeni z vsemi tremi pristopi in primerjavo uporabljenih pristopov .
V 7. poglavju izdelan wordnet preizkusim za označevanje pomenov besed v korpusu jos100k in z analizo ustreznosti pripisanih pomenov preverjam , kako dobro semantični leksikon pokriva dejansko realizirane pomene besed v korpusu .
V zaključku rezultate raziskave umestim v slovenski jezikovno-tehnološki prostor in začrtam smernice za prihodnje delo , sledi pa še povzetek celotne disertacije v angleščini .
Poglavje se začne z opredelitvijo osnovnih semantičnih elementov v jeziku , ki me v raziskavi zanimajo .
Nato opredelim teoretski okvir za razumevanje pomena besed in nadaljujem z razlago večpomenskosti , ki mu sledi razvrstitev leksikalnih in pomenskih razmerij , s katerimi se v raziskavi ukvarjam .
V nadaljevanju razdelka opisujem strukturne in funkcijske lastnosti leksemov , s katerimi se v disertaciji ukvarjam .
b. Delno ustaljene besedne zveze imajo stroge omejitve glede besednega reda , vendar dopuščajo določeno stopnjo leksikalne variacije , zato jih obravnavamo kot kompleksne lekseme , ki jim je mogoče določiti enotno besedno vrsto , na določenih mestih pa so dovoljene leksikalne variacije .
c. Medtem ko delno ustaljene besede kljub variacijam ohranijo isti besedni red , skladenjsko proste besedne zveze omogočajo precej več skladenjske variabilnosti .
Njihova posebnost ni jezikovna , temveč statistična , saj se pojavljajo z veliko večjo relativno frekvenco kot katera koli druga varianta leksikalizacije istega pojma .
Statistično relevantnim besednim zvezam pravimo tudi kolokacije ( npr. malo pivo ) .
Ker me pri izdelavi semantične zbirke zanima ustrezna leksikalizacija pojmov , z vsebinskega vidika ni toliko pomembno , ali je nek pojem leksikaliziran z eno samo besedo ali z besedno zvezo , veliko pomembneje je , da pri dodajanju leksemov v zbirko najdem čim več ustreznih nosilcev iskanega pomena .
Z izvedbenega vidika pa je razlikovanje med eno - in večbesednimi leksemi ključno , saj vsi pristopi , ki so primerni za pridobivanje enostavnih leksemov , za sestavljene niso uporabni .
S stališča računalniških aplikacij so večbesedni izrazi problematični , ker jih je v besedilu težko prepoznavati zaradi nejasnih meja med večbesednimi izrazi in preostalim besedilom ter variantnosti , ki jo jezik dopušča .
Poleg tega ni nujno , da so večbesedni izrazi neprekinjene celote , saj se mednje lahko vrivajo druge besede , ki niso del večbesednih izrazov .
Semantične informacije o zaprtih besednih vrstah , kot so na primer predlogi ( npr. pri ) in zaimki ( npr. njegov ) , za večino aplikacij niso zelo zanimive , poleg tega bi jih bilo relativno preprosto mogoče pridobiti na roke ( Hirst 2004 ) .
Za semantične leksikone različne slovnične oblike besed niso zelo zanimive , saj so pregibalni vzorci predvidljivi in imajo tudi predvidljiv pomen .
V skladu s to teorijo velja , da obstaja toliko različnih pomenov besede , kot je razlik v pogojih , pomene pa je mogoče predstaviti neodvisno od konteksta , v katerem se pojavljajo .
Prototipna teorija ( Wittgenstein 1953 ) ohranja hierarhije pojmov , pripadnost predmetom v določeno kategorijo pa opredeljuje po stopnjah .
To pomeni , da če poznamo pomen besede , poznamo tudi njen položaj v semantičnem prostoru leksikona .
Za relacijske modele je značilno tudi , da izkoriščajo dednost lastnosti .
Moja raziskava sodi v okvir teorije relacijskih modelov , saj se ukvarjam z izdelavo slovenske semantične mreže , za katero me zanimajo predvsem medsebojni odnosi med besedami .
Če pa iz pragmatičnih razlogov privzamemo , da pomen besed je relevantna kategorija , ki povezuje pojme v semantičnih zbirkah z njihovo leksikalizacijo v naravnem jeziku , se pri izdelavi semantične zbirke kmalu soočimo z izzivom , kako znanje v njih kategorizirati , pa tudi , kako zbirke odsevajo dejansko jezikovno rabo .
Poleg tega se pod predpostavko , da imajo besede določljivo število ločenih pomenov in podpomenov , takoj pojavi tudi vprašanje , kako to število določiti in kako pomene klasificirati , kar je ena od osrednjih tem v leksikografiji in leksikalni semantiki .
Primerjava istih slovarskih gesel v različnih slovarjih pokaže velika razhajanja med pomeni opazovanih besed , kar dokazuje , da so meje med posameznimi pomeni besed zabrisane , da se podobni pomeni med seboj prekrivajo in da za organizacijo pomenov v slovarju ni objektivnih kriterijev .
Za wordnet , ki se mu v disertaciji posvečam , je značilno , da vsebuje zelo nadrobno razdelane pomene , kar je ena največjih kritik tega leksikalnega vira , saj je med posameznimi pomeni besede pogosto težko ali pa celo nemogoče ločiti , kar zmanjšuje uporabno vrednost leksikona .
Da je mnogoterost pomenov res pogost pojav , nazorno pokažejo rezultati analize slovarja angleškega jezika Webster's Seventh Dictionary , v katerem ima več kot 40 % besed dva ali več pomenov .
Analiza je poleg tega pokazala , da so najpogostejše besede hkrati tudi najbolj večpomenske ( npr. glagol run ima v slovarju 29 pomenov , ki se nato še naprej delijo na 125 podpomenov ) ( Byrd idr. 1987 ) .
2.2.2.1 Avtomatsko prepoznavanje pomena besed Računalniške aplikacije , ki se ukvarjajo z vsebino besedil v naravnem jeziku , se z večpomenskostjo morajo spopasti .
Problem , s katerim se računalnik pri tem ukvarja , je povezava izrazov z njihovimi nameravanimi pomeni .
Alternativen pristop pa je simulacija razumevanja večpomenskih besed pri ljudeh s pomočjo statističnih raziskav vzorcev sopojavljanja besed v korpusih ( Gale , Church in Yarowsky 1992 ) .
Vrednotenje najsodobnejših sistemov za avtomatsko razreševanje večpomenskosti poteka v okviru pobude Senseval1 , pregled najuspešnejših pristopov pa najdemo v Agirre in Edmonds ( 2006 ) .
Pri strojnem prevajanju mora računalnik ločiti med vsemi pomeni izvorne besede , ki se v ciljni jezik različno prevajajo , pri sistemih za avtomatski priklic informacij pa zadošča ločevanje med homonimi ( Ravin in Leacock 2000 ) .
bolnišnica zdravnik bolezen medicin - ska sestra krožnik peteršilj 2.3 Pomenska razmerja med leksemi Kot sem na primerih pokazala že v uvodu disertacije , je za izdelavo semantične zbirke ključno , kako so besede med seboj povezane .
Če besede razumemo kot točke , razmerja med njimi pa kot usmerjene povezave , je leksikalno-semantični model mogoče ponazoriti tudi z usmerjenimi grafi , vanj pa lahko vključujemo različne tipe leksikalnih in pomenskih razmerij .
Na grafih oddaljenost točk , povezanih z asociativnim razmerjem , pomeni moč asociacije med njima , kar prikazuje Slika 2.
Primer hierarhičnega drevesa prikazuje Slika 3 , ki ponazarja del splošno sprejete živalske taksonomije .
Tako so sesalci na primer nadpomenka vretenčarjev , vretenčarji pa podpomenka sesalcev .
Tako se zgodi , da so vozlišča poimenovana z umetnimi in na silo ustvarjenimi poimenovanji , ki se v jeziku ne uporabljajo , kar je ena najpogostejših kritik taksonomij ( npr. pojem popolnoma razvita anatomska struktura , ki je v nekaterih taksonomijah nadpomenka za kohiponime organ , tkivo , celica in gen ) .
Zato je v najbolj ohlapnem smislu med delne sopomenke mogoče prištevati tudi nad - in podpomenke , kar je zelo koristno , kadar je prevodna ustreznica nekoliko splošnejša ali nekoliko bolj specifična od izraza v izvornem jeziku ( npr. ang. hair , ki je splošnejši od obeh slovenskih prevodov dlaka in lasje ) .
V nadaljevanju se ukvarja z enopomenskostjo in večpomenskostjo ter opiše glavna pomenska in izrazna razmerja med leksemi : sopomenskost , protipomenskost , nad - in podpomenskost ter enakoizraznost in izrazno podobnost .
S pomenskimi razmerji v slovarjih in korpusih za slovenščino so se ukvarjali tudi drugi avtorji .
Homonimiji v slovenščini sta se posvetili Júlia Bálint in Ada Vidovič Muha ( 1997 ) , ki sta homonimijo opredelili v razmerju do sopomenskosti in večpomenskosti , nato pa še glede na izvor , prenosnik in zvrstnost v jeziku .
Osrednji del njune raziskave je Slovar slovenskih homonimov , ki je bil izdelan na podlagi gesel iz Slovarja slovenskega knjižnega jezika .
Vsebuje približno 750 homonimnih vrst , razlage homonimov in informacije o njihovi stilni oziroma zvrstni zaznamovanosti .
Obravnavanje protipomenskosti v sodobnih slovenskih terminoloških slovarjih je proučila Marjeta Humar ( 2007 ) , ki ugotavlja , da je protipomenskost v njih kodificirana vse od leta 1975 , da pa je njeno prikazovanje kljub temu še vedno problematično .
Opravila je tudi analizo protipomenk v terminoloških slovarjih , pri čemer je opazovala njihove besedotvorne in skladenjske vzorce , izvor in vrsto .
Rezultati njene analize kažejo , da so v slovenskih terminoloških slovarjih najpogosteje izražene skrajnostne , koordinacijske , komplementarne , vektorske in zamenjavne protipomenke .
Sopomenske kandidate opazuje na ravni oznake , pomena in smisla , analizira pa jih po strukturalni in funkcionalni plati .
Izbira korpusnega gradiva za jezikovno analizo pri Marini Zorman ni naključna , temveč je umeščena v širši kontekst razvoja korpusnih virov za slovenščino in resen metodološki premik h korpusnem jezikoslovju , ki je v Sloveniji prisoten zadnjih petnajst let .
Celovit pristop h korpusnem jezikoslovju je v slovenskem prostoru prispeval Vojko Gorjanc ( 2006 ) , ki obravnava vrsto odprtih vprašanj , povezanih z gradnjo in izkoriščanjem korpusov za slovenski jezik .
Poleg tega Gorjanc podrobno predstavi tudi prvi slovenski referenčni korpus Fida in nakaže številne možnosti za preseganje omejitev tradicionalnih opisov jezika z uporabo načel korpusnega jezikoslovja .
Pri tem se poslužuje načela besedne povezovalnosti in s pomočjo statističnih mer določa frazna jedra , ki predstavljajo potencialne leksikalne enote .
Te nato analizira s stališča njihove zgradbe , skladenjskih lastnosti in pomena .
Orodje s pomočjo vnaprej pripravljenih slovničnih vzorcev iz korpusa ustvari besedne skice za izbrane besede , hkrati pa avtomatsko generira tezaver podobnih besed in razlikovalne skice , ki izpostavljajo podobnosti in razlike med bližnjimi sopomenkami .
Orodje močno olajša in pospeši leksikografsko delo in druge korpusne raziskave .
Oblikovanje leksikalne podatkovne zbirke avtorji utemeljijo z dejstvom , da obstoječi slovarji slovenskega jezika ne predstavljajo sodobnega jezika , so metodološko zastareli in imajo namesto vloge jezikovnega opisovanja predpisovalno funkcijo .
Neprimernost obstoječih slovarjev in neprecenljivost korpusa pri leksikografskem delu dokazuje Iztok Kosem ( 2006 ) , ki analizira definicijski jezik v Slovarju slovenskega knjižnega jezika .
Predlagana zasnova leksikalne podatkovne zbirke omogoča gradnjo različnih tipov slovarjev , saj bi bi bila zbirka notranje hierarhiziran leksikalni opis sodobnega slovenskega jezika , pridobljena iz slovenskega referenčnega korpusa .
Če so se Gantar ( 2007 ) , Gorjanc , Krek in Gantar ( 2005 ) ter Lönneker-Rodman , Baker in Hong ( 2008 ) ukvarjali z izdelavo podatkovnih zbirk za splošno besedišče , je v središču raziskav Špele Vintar ( 2008 ) strokovni jezik , z njim pa tudi terminologija .
Poleg celostnega pregleda terminološke vede in sodobnih terminografskih načel se avtorica še posebej posveča računalniško podprtem terminološkem delu in obdela vse faze , od gradnje in obdelave specializiranih korpusov do izdelave besednih seznamov in seznamov ključnih besed , predstavi pa tudi samodejno luščenje terminologije iz enojezičnih in vzporednih korpusov s pomočjo statističnih pristopov in oblikoskladenjskih vzorcev ter gradnjo pojmovno zasnovanih terminoloških zbirk .
Logar in Vintar ( 2008 ) prinaša en tak primer gradnje terminološkega slovarja odnosov z javnostmi , ročna evalvacija avtomatsko izluščenih izrazov pa izpostavi tudi najpomembnejše probleme , kot so sestava in označenost korpusa strokovnih besedil , nejasna merila terminološkosti ter problematika terminoloških variacij .
3 Semantične zbirke za računalniško obdelavo naravnega jezika V tem poglavju predstavljam različne tipe semantičnih zbirk in zakaj jih potrebujemo .
Podrobneje se posvečam semantičnim leksikonom tipa wordnet , ki temeljijo na povezavi besed z istim pomenom v pojme in povezavi sorodnih pojmov z leksikalnimi in pomenskimi razmerji .
Organizacija mentalnega leksikona je najverjetneje kompromisna rešitev naših potreb pri tvorjenju in razumevanju govora , pomembno vlogo pri njem pa ima tudi spomin .
Oba omenjena procesa potekata na paradigmatski ravni , z njima pa semantična zbirka omogoča pripisovanje semantičnega razreda besedam v besedilu .
Na sintagmatski ravni s semantičnimi leksikoni poskrbimo za normalizacijo terminoloških variant oziroma jim določimo semantično strukturo ( Sowa 2000 ) , kar pa v to raziskavo ni vključeno .
Statistični pristopi pa ostajajo privlačni za jezike in naloge , za katere semantični viri niso na voljo .
Vmes so še drugi tipi semantičnih zbirk , ki se med seboj prav tako razlikujejo po načinu organizacije in stopnji formalizacije leksikalnega znanja .
3.2.1 Strojno berljivi slovarji Organizacijsko najbolj podobni klasičnim slovarjem in formalno najmanj razviti so strojno berljivi slovarji , sad dolgotrajnega leksikografskega dela in zelo dragocen leksikalni vir .
Kot najstarejši obsežni leksikalni vir v elektronski obliki so bili prvi in dolgo časa najpopularnejši vir za večino računalniških nalog s semantično komponento .
2 http://www.ldoceonline.com/ Raziskovalci so se po drugih vrstah virov začeli ozirati predvsem zato , ker so strojni slovarji , kljub temu , da omogočajo avtomatiziran dostop do leksikalnih informacij , vsebinsko in strukturno še vedno namenjeni človeškim uporabnikom .
Tako so struktura in semantične informacije veliko bolj eksplicitno izražene , vendar je v semantičnih leksikonih še vedno v ospredju pomen besed .
Pristope pri gradnji semantičnih leksikonov delimo na dve skupini : v prvo sodijo pristopi , ki se ukvarjajo s semantičnimi lastnostmi oziroma pomenskimi sestavinami besed .
V skladu s temi pristopi so besede v leksikonu povezane s svojimi lastnostmi , ki napovedujejo njihovo skladenjsko vedenje ( glej Levin 1993 in Pustejovsky 1995 ) .
Eden takšnih leksikonov je wordnet , ki se mu podrobneje posvečam v razdelku 3.3.
V informatiki so ga začeli uporabljati v petdesetih letih minulega stoletja za iskanje knjig v knjižničnem katalogu , indeksiranje in priklic dokumentov s tezavri pa je kmalu zatem postalo standard v velikih organizacijah , ki morajo obvladovati ogromne količine dokumentov ( Spärck Jones 1991 ) .
Struktura tezavrov je zasnovana na sopomenskih , taksonomskih in asociativnih razmerjih .
Izrazi v Eurovocu so med seboj povezani s petimi pomenskimi razmerji ( nad / in podpomenskost , soroden izraz , ožji izraz in širši izraz ) .
5 http://europa.eu/eurovoc/ Primer vnosa iz Eurovoca vsebuje Slika 4.
Vrhnji termin naravoslovne in uporabne vede je opremljen z identifikacijsko kodo ( 3606 ) , ki omogoča iskanje ustreznic v drugih jezikih , nato mu sledijo sorodni izrazi ( RT ) z identifikacijskimi kodami ( npr. medicinske vede ( 2841 ) ) in ožji izrazi ( NT1 – NT3 ) v več nivojih ( npr. biologija -> genetika -> evgenika ) .
Primer vnosov v tezavru Eurovoc Tezavri vsebujejo ogromno znanja o pojmih z nekega področja , kar izboljša kakovost z njimi pridobljenih informacij , vendar je težava v tem , da so tovrstni pristopi računalniško veliko bolj požrešni od statističnih , zato s tem zmanjšujejo odzivnost sistema .
Kompromis so hibridni sistemi , ki tezavre vključujejo do neke mere , pri obdelavi zelo velikih podatkovnih baz pa se zanašajo na statistične metode ( Wilks , Slator in Guthrie 1996 , 94 ) .
Nekatere semantične mreže so precej neformalne , druge pa pravi formalno definirani logični sistemi .
Čeprav imajo semantične mreže dolgo zgodovino v filozofiji , sociologiji in jezikoslovju , so danes priljubljene predvsem v umetni inteligenci in za strojno prevajanje .
Ontologije v umetni inteligenci so praviloma izdelane za točno določene naloge in sisteme , ki sta jim podrejena tako nabor kot organizacija pojmov .
Jezikovno odvisni modul je leksikon , ki vsebuje poimenovanja instanc in razredov v določenem jeziku in je povezan z ontologijo ( Vossen 2003 ) .
Nato med kandidati prepoznamo morebitne sopomenke in jih združimo ( npr. abdomen , trebuh ) .
V tretjem koraku oblikujemo pojme , ki jih termini izražajo , te pa nato na podlagi odnosov , ki veljajo med pojmi , organiziramo v hierarhično drevo ( npr. zdravnik je _ vrsta osebe ) .
Podobno storimo še z drugimi nehierarhičnimi odnosi , na koncu pa z metodami avtomatskega učenja iz obsežnih zbirk skušamo še pridobiti pravila , ki veljajo med termini in pojmi v ontologiji .
Korake avtomatskega pridobivanja ontologij prikazuje Slika 6 , ki je povzeta po Buitelaar , Cimiano in Magnini ( 2005 ) .
Projekt se je začel z ročno gradnjo in vsebuje 200.000 terminov , ki so med seboj povezani s pravili , danes pa si raziskovalci prizadevajo postopek čim bolj avtomatizirati , ontologiji pa so dodali tudi orodje za avtomatsko sklepanje .
• Vx , y ( poročen ( x , y ) - > ljubi ( x , y ) ) pravila • zdravilo ( predpiše:ZDRAVNIK , zdravi:BOLEZEN ) odnosi • je _ vrsta ( ZDRAVNIK , OSEBA ) hierarhije • BOLEZEN = < I , E , L > pojmi • abdomen , trebuh sopomenke • bolezen , bolnišnica , zdravnik termini 8 http://www.cyc.com/ Slika 6.
Prva tovrstna zbirka za angleški jezik je začela nastajati pred dobrima dvema desetletjema na Univerzi v Princetonu in je kmalu postala zelo priljubljen pripomoček pri najrazličnejših nalogah računalniške obdelave naravnega jezika ( glej razdelek 3.3.1 ) .
Razlogi za to so vsaj deloma najverjetneje tudi povsem pragmatični , saj je obsežna zbirka , ki je plod dolgoletnega dela številnih sodelavcev , od samega začetka v celoti prosto dostopna .
Vendar WordNeta raziskovalci niso samo uporabljali , temveč so začeli ustvarjati podobne zbirke tudi za druge jezike .
Konec prejšnjega in v začetku tega stoletja so pod okriljem mednarodnih projektov EuroWordNet ( glej razdelek 3.3.2 ) in BalkaNet ( glej razdelek 3.3.3 ) nastali wordneti za številne evropske jezike , s čimer je wordnet pridobil pomembno večjezično razsežnost .
Od takrat naprej pa družina wordnet samo še raste ; združenje Global WordNet Association9 na svojih spletnih straneh trenutno poroča o obstoju wordnetov v 50 različnih jezikih , od arabskega do turškega .
3.3.1 Princeton WordNet ( PWN ) 10 Začetki WordNeta11 segajo v osemdeseta leta minulega stoletja , ko je George A. Miller z Univerze v Princetonu s sodelavci z laboratorija za kognitivne raziskave začel preizkušati možnosti izdelave semantične mreže , ki bi pokrivala večino besedišča naravnega jezika .
Sčasoma se je razvila v najobsežnejšo podatkovno zbirko te vrste in po številnih dopolnitvah in predelavah jo danes strokovnjaki uporabljajo za najrazličnejše računalniške aplikacije , povezane z obdelavo naravnega jezika .
Primer angleškega sinseta { car } v spletnem pregledovalniku Osnovni pogled na angleški sinset { car } v spletnem pregledovalniku za Princeton WordNet prinaša Slika 7.
Sinseti so med seboj povezani z različnimi pomenskimi in leksikalnimi razmerji ( npr. ang. hypernym { motor vehicle , automotive vehicle } – nadpomenka { motorno vozilo , vozilo na lastni pogon } ) .
Slika 8 prinaša podrobnejši pogled na sinset v pregledovalniku pregledovalniku WordNet 2.1. številke v okroglih oklepajih pomenijo število najdenih primerov v semantično označenem korpusu Brown ( Miller idr. 1994 ) , v zavitih oklepajih pa je navedena lokacija sinseta v t.i. izvornih leksikografskih datotekah , ki vsebujejo vse sinsete za PWN .
Primer sinseta { car } v pregledovalniku WordNet 2.1 Semantična razmerja , kot so nad - in podpomenskost ter meronimija , povezujejo pojme ( sinsete ) ( { avto , avtomobil } -> { vozilo } ) , leksikalna razmerja , kot je protipomenskost , pa veljajo zgolj med posameznimi literali ( literali , npr. lep <-> grd ) .
Najpogostejše razmerje v WordNetu je nad - in podpomenskost , ki sinsete organizira v hierarhijo .
Razmerja , vključena v wordnet , povzema Tabela 1 in podaja tudi primere zanje .
Pomenska in leksikalna razmerja v Princeton Wordnetu Wordnet vsebuje tako enobesedne kot večbesedne nize , pri čemer je upoštevana tudi metaforična in idiomatska raba ( Fellbaum 1998 , 3-17 ) .
Za dodatno pomoč pri določanju pomena posameznim besedam in za lažjo uporabo v aplikacijah , kjer zadostuje grobo razreševanje večpomenskosti , so sinseti razvrščeni v domene oz. področja ( Bentivogli idr. 2004 ) .
Čeprav niso vsi sinseti razvrščeni po področjih , obstaja približno 200 različnih domen , kot so na primer geografija , jezikoslovje , telekomunikacije ipd.
Najsplošnejša in najpogostejša domena je faktotum in je pripisana vsem sinsetom , ki jih ni mogoče razvrstiti v nobeno bolj specifično področje .
Enopomenskih besed v PWN je 128.321 , večpomenskih pa 27.006 , povprečna stopnja večpomenskosti je tako 1,23 za samostalnike , 2,16 za glagole , 1,41 za pridevnike in 1,24 za prislove12 .
Iz tako izdelanega wordneta je najnovejšo različico enostavno pridobiti s pomočjo preslikave na različico 3.0 , ki je prav tako na voljo na Princetonovi spletni strani .
Spletna stran http://wordnet.princeton.edu poleg predstavitve projekta WordNet , spletne uporabe zbirke in prenosa celotne zbirke omogoča tudi prenos semantično označenega korpusa vseh razlag konceptov v WordNetu in izjemno bogato bibliografijo prispevkov o razvoju in uporabi WordNeta .
Ti orodji so uporabili za avtomatsko določanje pomena besed , razvrščanje elektronskih sporočil in razreševanje večpomenskosti lastnih imen .
Ob zaključku projekta so nizozemski , italijanski in španski wordneti vsebovali 30.000 primerljivih sinsetov , češki , estonski , francoski in nemški wordneti pa med 7.500 in 15.000 sinsetov , vendar posamezni wordneti neodvisno rastejo še danes ( Vossen 1998 , 73-89 ) .
Tako je preko ILI-ja kateri koli pojem v nekem jeziku mogoče prevesti v drug jezik , ki je prav tako vključen v bazo .
S tem je omogočena večja združljivost wordnetov v različnih jezikih , saj enotni nabor najpomembnejših pojmov prispeva enotno hierarhično strukturo za wordnete v vseh jezikih ( Vossen 1996 , 5-11 ) .
3.3.3 BalkaNet ( BWN ) Med leti 2001 in 2004 so v okviru evropskega projekta BalkaNet ( Tufiş , Cristea in Stamou 2004 ) razvili še wordnete za bolgarski , grški , romunski , srbski in turški jezik ter razširili češkega .
Cilj projekta je bila združljivost novih wordnetov tako z najnovejšo različico Princetonovega WordNeta kot z EuroWordNetom , kar pomeni , da so se sicer na področju računalniškega jezikoslovja nekoliko odrinjeni jeziki z Balkanskega polotoka pridružili najobsežnejši 15-jezični semantični mreži doslej .
Za lažjo gradnjo novih wordnetov in njihovo medsebojno primerjavo so na pobudo projekta BalkaNet pojmi v wordnetu ločeni na osnovne in specifične , osnovni pa so nadalje razvrščeni v tri skupine , ki so jih poimenovali osnovne skupine pojmov ( ang. Base Concept Sets , glej Tufiş , Cristea in Stamou 2000 ) .
Poleg tega so wordnete poravnali še s splošno ontologijo Suggested Upper Merge Ontology ( SUMO ) ( Pease , Niles in Li 2002 ) , individualnim partnerjem pa prepustili izbiro , da dodajo še svoje kulturno-specifične pojme ( Tufiş , Cristea in Stamou 2000 , 9-43 ) .
Za to raziskavo so v skupini BalkaNet najpomembnejši wordneti za srbski , češki , romunski in bolgarski jezik .
Srbski wordnet je bil ročno preveden iz angleškega , nato pa še validiran s pomočjo enojezičnih in večjezičnih slovarjev ter korpusov ( glej Krstev idr. 2004 ) .
Srbski wordnet je ob zaključku projekta BalkaNet vseboval vse sinsete iz prvih dveh osnovnih skupin konceptov in še nekatere specifične , skupaj nekaj čez 8.300 sinsetov oziroma dobrih 14.000 literalov .
Največ specifičnih pojmov vsebuje češki wordnet ( 19.893 ) , najmanj pa romunski ( 10.416 ) .
3.4 Uporaba wordneta v računalniških aplikacijah Semantične leksikone tipa wordnet so doslej uporabili v številne namene in se z njihovo pomočjo lotili reševanja zelo različnih nalog tako raziskovalci kot tudi industrijski uporabniki .
3.4.1 Delo z zbirkami dokumentov Številni sistemi za iskanje informacij ( ang. information retrieval ) iz besedil temeljijo predvsem na statističnem ujemanju med besedami v poizvedbi in tistimi v besedilih v podatkovni bazi .
Uporaba wordneta je eden izmed načinov za izboljšanje priklica relevantnih besedil z razširitvijo iskanih besed s sorodnimi izrazi , ki se najverjetneje pojavljajo v istem sobesedilu kot iskane besede .
Enak postopek je mogoč tudi za medjezično iskanje informacij , kjer so uporabili EuroWordNet ( npr. Vossen , Peters in Gonzalo 1999 ) .
Podobne metode so uporabljene tudi za indeksiranje in klasifikacijo dokumentov ( ang. document indexing oz. classification ) ( Peng in Choi 2005 ) , luščenje informacij ( ang. information extraction ) ( Stevenson in Greenwood 2006 ) in povzemanje besedil ( ang. text summarization ) ( Bellare idr. 2004 ) .
3.4.2 Delo z besedili Reševanje problema dvoumnosti je pogosto ključno za vse naslednje faze obdelave naravnega jezika .
Sistemi za avtomatsko razreševanje večpomenskosti ( ang. automatic word-sense disambiguation ) večpomenskih besed večinoma temeljijo na merjenju semantične podobnosti med pojmi , in sicer na podlagi predpostavk , da ima večpomenska beseda znotraj enega dokumenta ponavadi en sam pomen in da se besede s podobnim pomenom ponavadi pojavljajo v podobnih kontekstih ( Leacock in Chodorow 1998 ) .
Pri tem uporabljajo različne semantično označene korpuse , kot sta na primer Semcor15 ( v angleščini ) in MultiSemCor16 ( v angleščini in italijanščini ) .
14 http://www.senseval.org/ 15 http : / / www.cse.unt.edu / ~ rada / downloads.html 16 http://multisemcor.itc.it/ Glede na to , da so v wordnetu besede urejene po posameznih pomenih , jih lahko z dodajanjem identifikacijske številke relevantnega sinseta s pridom izkoristimo tudi za označevanje pomenov ( ang. semantic tagging ) besed v besedilih in korpusih .
Če za nek jezikovni par obstajata vzporedna wordneta , ju je mogoče izkoristiti tudi za strojno prevajanje .
Poleg razreševanja večpomenskosti izvirnika lahko pri tem pomaga tudi za iskanje prevodnih ustreznic v obliki sopomenk in nadpomenk ter za iskanje parafraz v ciljnem jeziku ( Chatterjee , Goyal in Naithani 2005 ) .
Nenazadnje pa je wordnet kot baza s splošnim besediščem tudi trdna osnova za kasnejši razvoj terminoloških zbirk ( ang. termbank ) z najrazličnejših strokovnih področij , ki so nato kot samostojna orodja uporabna za številne aplikacije na ozko določenih področjih .
Primer razširitve EuroWordNetov za okoljevarstveno področje v več jezikih je projekt EuroTerm ( Stamou idr 2002 ) , zbirko večjezičnih metaforičnih izrazov , ki je povezana z EuroWordNetom , pa so razvili v okviru projekta Hamburg Metaphor Database ( Lönneker-Rodman 2008 ) .
4 Avtomatizirana gradnja semantičnih zbirk Avtomatsko pridobivanje leksikalnih zbirk za jezikovno-tehnološke aplikacije je postalo privlačno v 90-ih letih prejšnjega stoletja , ko so se pojavili dovolj obsežni računalniško berljivi slovarji , tezavri in drugi viri znanja , iz katerih je bilo mogoče izluščiti informacije o pomenu in rabi besed ter njihovih medsebojnih odnosih .
Ob upoštevanju načela , da imajo leksikoni praktično uporabno vrednost šele , ko vsebujejo vsaj 20.000 do 60.000 vnosov ( Dorr in Jones 1996 ) in ocen različnih avtorjev ( npr. Neff in McCord 1990 , Copestake 1995 ter Walker in Amsler 1986 ) , ki poročajo , da leksikograf za izdelavo enega slovarskega vnosa potrebuje približno 30 minut , postane jasno , da se avtomatskemu pridobivanju leksikalnega znanja dandanes ni več mogoče izogniti .
Ob tem ne gre zanemariti niti dejstva , da so semantične zbirke uporabne le , če odsevajo dejansko rabo , ki se stalno spreminja , zato jih je nujno redno posodabljati in vključevati nove besede in pomene , sicer kmalu zastarijo .
Velike težave pa povzroča tudi njihova zapletena in nestandardizirana struktura , tako da je različne zbirke zelo težko združevati in jih uporabljati v aplikacijah , ki so jih razvili drugod .
To močno zavira razvoj jezikovnih tehnologij , v okviru katerih je v zadnjem času poudarjena potreba po robustnih in preciznih metodologijah , ki omogočajo gradnjo vsestransko uporabnih in medsebojno združljivih zbirkah znanja , ki so jih za različne jezike in v različnih obdobjih razvili različni avtorji .
Ko se enkrat odločimo za avtomatizacijo izdelave leksikalne zbirke , se takoj zastavi vprašanje , kako se gradnje lotiti .
Pri gradnji novih leksikalnih zbirk skušamo po eni strani minimizirati količino dela , ki je potrebno za razvoj zbirke , po drugi strani pa si želimo maksimizirati njeno uporabno vrednost .
V drugo pa uvrščam pristope , ki isti cilj skušajo doseči z nestrukturiranimi viri , kar so večinoma eno - in večjezični korpusi .
4.1 Pridobivanje taksonomij iz strukturiranih jezikovnih virov Strojno berljive slovarje so za izdelavo baz znanj za potrebe računalniške obdelave naravnega jezika začeli uporabljati pred tridesetimi leti .
4.1.1 Izdelava taksonomij iz enojezičnih slovarjev Začetnik gradnje taksonomij iz strojno berljivih slovarjev je ( Amsler 1981 ) , ki je iz slovarja Merrian-Webster Pocket Dictionary z luščenjem uvrščevalnih besed izdelal taksonomijo samostalnikov in glagolov .
Tega so se na slovarju LDOCE lotili Guthrie idr. ( 1990 ) , ki so za razreševanje večpomenskosti uporabili semantične in področne kode iz slovarja .
4.1.2 Izdelava taksonomij iz dvojezičnih slovarjev Pri gradnji taksonomij iz slovarjev so se avtorji osredotočili predvsem na enojezične slovarje , primerov rabe dvojezičnih slovarjev je razmeroma malo .
Vendar se je izkazalo , da so dvojezični slovarji zelo dober vir za iskanje sopomenk na podlagi prevodnega razmerja .
Lin idr. ( 2003 ) primerjata prevode semantično sorodnih besed v različnih dvojezičnih slovarjih in na podlagi prekrivanj virov identificirata vse prevodne variante , ki jih obravnavata kot sopomenke .
Geslo sta v ustrezen semantični razred razvrstila na podlagi izračuna podobnosti med njima z eno najpopularnejših statističnih mer podobnosti na področju pridobivanja informacij , Diceovim koeficientom .
Kritiki avtomatskega pridobivanja taksonomij iz slovarjev opozarjajo , da strojno berljivi slovarji ne vsebujejo nujno informacij , ki jih za računalniško obdelavo naravnega jezika potrebujemo , prav tako pa opozarjajo na dejstvo , da je luščenje teh informacij vse prej kot preprosto ( Ide in Veronis 1993 ) .
Naslednja slabost izdelave taksonomij iz slovarjev so pomeni besed , ki se pojavljajo v korpusu , v slovarju pa manjkajo .
4.2 Pridobivanje taksonomij iz nestrukturiranih jezikovnih virov Za razliko od slovarskih virov , v katerih je pomen besed eksplicitno strukturiran , imamo v korpusih na voljo samo kontekst .
4.2.1 Izdelava taksonomij iz enojezičnih korpusov Avtomatsko pridobivanje semantično povezanih besed je preizkusil ( Lin , 1998 ) s pomočjo opazovanja sopojavljanja besed v skladenjsko označenem korpusu , iz katerega je izluščil trojčke ( beseda1-beseda2-slovnična relacija med njima ) in izračunal podobnost besed v različnih trojčkih .
Ker je za podobne besede značilno , da jih najdemo v podobnih kontekstih , je s pomočjo preostalih izluščenih trojčkov iz korpusa ugotovil , da je tezguino podoben besedam , kot so pivo , vino , vodka ipd.
Dobljene rezultate je primerjal z merjenjem podobnosti teh besed v Roget's Thesaurusu in Princeton WordNetu ter ugotovil , da je njegov pristop bolj podoben rezultatom iz WordNeta .
Podatek o podobnosti med besedami nam služi za avtomatsko in objektivno izdelavo in primerjavo tezavrov , pa tudi za lažjo obravnavo redkih besed v korpusu , saj je mogoče združiti frekvence vseh semantično podobnih besed in tako izboljšati oceno verjetnosti redkih dogodkov .
Čeprav obstaja tudi obratna smer razvrščanja , večina pristopov začne s posameznimi besedami in na podlagi izračuna podobnosti med njimi v vsakem koraku združi dve , ki sta v tistem trenutku najbolj podobni .
Proces se nadaljuje vse dokler v hierarhijo niso vključene vse izhodiščne besede .
Enega najbolj znanih tovrstnih poskusov so opravili Brown idr. ( 1992 ) , ki so skušali izboljšati modele jezika za prepoznavanje govora z združevanjem besed na podlagi minimalne izgube vzajemne informacije .
Najprej je definirala pogoste in splošno uporabljane skladenjske vzorce , v katerih nastopajo semantično povezane besede ( npr. x je vrsta X , x sodi med X ipd. , pri čemer sta x in X samostalniški besedni zvezi , X je splošnejši izraz oz. nadpomenka , x pa bolj specifičen oz. podpomenka ) in z njihovo pomočjo iz korpusa izluščila trojčke ( npr. iz stavka Čmrlji , ose , sršeni in mravlje spadajo med kožokrilce .
Nenadzorovane metode strojnega učenja pa za dopolnjevanje WordNeta s kombinacijo skladenjskih in statističnih informacij predstavljajo Widdows , Dorow in Chan ( 2002 ) .
Najprej v korpusu s pomočjo latentne semantične analize in podatka o besedni vrsti najdejo semantično sorodne besede , te pa nato s klasifikacijskim postopkom dodajo v taksonomijo WordNeta .
Za gradnjo semantičnih leksikonov so relevantne tudi parafraze , ki vključujejo tako eno - kot večbesedne sopomenke , pa tudi nad - in podpomenke .
( Barzilay in McKeown 2001 ) jih s pomočjo nenadzorovanega strojnega učenja pridobivata iz primerljivega korpusa , ki vsebuje izvorno besedilo in več njegovih prevodov v angleščino .
Največji problem pri pridobivanju taksonomij iz korpusov predstavlja razpoložljivost korpusnih virov .
Pristopi so veliko učinkovitejši , če jih izvajamo na korpusih , ki so bogato jezikoslovno označeni , vendar takšnih ni veliko na voljo , še posebej za manjše jezike .
4.3 Modeli za avtomatsko gradnjo wordneta V tem razdelku predstavljam modele , ki se uporabljajo za gradnjo semantičnih leksikonov tipa wordnet in utemeljim svojo odločitev za izbiro razširitvenega pristopa za gradnjo slovenskega wordneta .
S prevzemanjem strukture in razmerij problem gradnje leksikalne zbirke za ciljni jezik zreduciramo na iskanje prevodnih ustreznic za pojme v referenčnem wordnetu , medtem ko organizacijsko strukturo v celoti prevzamemo .
Poleg tega pristopi iz te skupine z izkoriščanjem že obstoječih eno - in večjezičnih jezikovnih virov vključujejo tudi visoko stopnjo avtomatizacije , zaradi česar postane gradnja wordneta precej hitrejša in cenejša ( Vossen 1996 ) .
prevodna ustreznica sopomenka ni sopomenke ( denotacijska razlika splošnejši izraz bolj specifičen izraz prevodna ustreznica leksikalna enota beseda idiom kolokacija prosta kombinacija besed ( leksikalna vrzel ) Vendar poleg prednosti razširitveni pristopi prinašajo tudi nekatere negativne posledice , med katerimi je nedvomno najpomembnejša ( pre ) velika odvisnost od leksikalne in pojmovne strukture izvornega jezika ( največkrat angleškega ) , še posebej , kadar se izvorni in ciljni jezikovni sistem med seboj močno razlikujeta .
Pri tem pristopu naletimo na posebnosti , ki jih lahko razdelimo v dve skupini : leksikalne vrzeli ( pojem , ki je v nekem jeziku izražen z leksikalno enoto , je v drugem mogoče izraziti samo s prosto kombinacijo besed ) in denotacijske razlike ( v ciljnem jeziku obstaja prevodna ustreznica pojma izvornega jezika , vendar je nekoliko splošnejša ali nekoliko bolj specifična ) .
Klasifikacija prevodnih ustreznic 4.3.3 Problematičnost razširitvenega pristopa za gradnjo slovenskega wordneta Problematičnost razširitvenega pristopa za gradnjo slovenskega wordneta sem preizkusila na pomenskem polju | sorodstvo | ( Fišer 2005 ) .
V nadaljevanju razdelka analiziram smiselnost tako dobljene besedne mreže s stališča njene uporabnosti , pri čemer se podrobneje posvečam denotacijskim razlikam in leksikalnim vrzelim med jezikoma ter jezikovni odvisnosti pomenskih razmerij .
Za primerjavo izdelam tudi jezikovno motivirano besedno mrežo za isto pomensko polje , kandidate in informacije o razmerjih , ki veljajo med njimi , pa pridobim iz slovenskih referenčnih slovarskih in korpusnih virov .
4.3.3.1 Denotacijske razlike V primerjavi s slovenščino je v angleščini veliko več izrazov za pojem prednik , saj je 14 različnih izrazov zanj razdeljenih na sedem različnih sinsetov .
A ne glede na to , ali je drobitev pomenov v angleščini upravičena ali ne , pri razširitvenem pristopu v slovenskem jeziku dobimo kar nekaj nesmiselnih hierarhičnih stopenj in sinsetov z enako vsebino .
Do tega prihaja zaradi denotacijskih razlik med angleškimi in slovenskimi izrazi za pojem prednik , pri čemer je slovenska prevodna ustreznica največkrat splošnejša od angleškega izvirnika ( npr. { prednik } za ang. { forebear , forbear } in { progenitor , primogenitor } ) .
4.3.3.3 Sopomenskost ali nad - / podpomenskost V PWN je sopomenskost in nad - / podpomenskost obravnavana nekonsistentno .
Primer za to so razmerja med sinseti , ki jih prikazuje Slika 12.
Primer , pri katerem se zastavi vprašanje , ali se pomenska razmerja med sinseti zares ohranijo tudi v ciljnem jeziku , je angleški sinset { father-in-law } , ki je podpomenka pojma oče .
Vprašanje je , ali v slovenščini pojma tast ne bi namesto v pojem oče uvrstili med svaštvene sorodnike , saj tast ni krvni sorodnik .
Naslednji velik problem nad - in podpomenskosti je nesistematično obravnavanje ženskih oblik samostalnikov , saj sta na primer ang. forefather in foremother obravnavana kot kohiponima , ancestress pa kot podpomenka pojma ancestor .
Ker v slovenščini obstajajo ženske oblike samostalnikov za večino pojmov , bi jih bilo v slovenskem wordnetu potrebno obravnavati drugače in celovito .
grandparentgrandfather , gramps , granddad , grandad , granddaddy , grandpagrandma , grandmother , granny , grannie , grannanfather , male parent , begetterfather-in-lawold mandad , dada , daddy , pa , papa , pappa , pater , popancestor , ascendant , ascendent , antecedent , rootancestressforefaher , father , sireforemotherstari staršded , dedek , stari očebabica , stara mati , stara mama , omababiočetaststariata , ati , atek , očka , tataprednik , ascendentprednicaprednik , ded , praoče , očeprednica , pramati , mati Slika 12.
Nad - in podpomenska razmerja v PWN s slovenskimi prevodnimi ustreznicami 4.3.4 Poskus izdelave jezikovnomotiviranega slovenskega wordneta Iz zgornje analize besedne mreže , ki sem jo dobila s pomočjo razširitvenega pristopa , izhaja , da že PWN vsebuje številne nekonsistentne in vprašljive rešitve , ki bi jih slovenski wordnet zaradi razširitvenega pristopa podedoval .
Kandidate zanj sem pridobila s pomočjo PWN , enojezičnega referenčnega korpusa ( FidaPlus ) , dvojezičnih in enojezičnih slovarjev ( Veliki angleško-slovenski slovar , Angleško-slovenski in Slovensko angleški pravni slovar , Slovar slovenskega knjižnega jezika in Slovenski pravopis ) in strokovnih priročnikov ( Eurovoc , Družinsko pravo ) .
Zaradi obsežnosti in razvejanosti pomenskega polja sem se omejila samo na sorodnike v ravni črti nazaj ( predniki ) , izpustila pa vse sorodnike v ravni črti naprej ( potomci ) in sorodnike v stranski črti ( bratje , sestre , strici , tete , bratranci , sestrične ) .
Prav tako sem izpustila kolokacije , ki so sicer imele precej zadetkov v korpusu , vendar je njihov pomen bolj opisne kot kvalifikatorske narave in ga nisem mogla natančno določiti niti s pomočjo konkordanc niti z uporabo drugih virov ( bližnja sorodnica , bližnji sorodnik , bližnje sorodstvo , daljna sorodnica , daljni sorodnik , daljno sorodstvo , davni sorodnik , najožja sorodnica , najožji sorodnik , najožje sorodstvo , ožja sorodnica , ožji sorodnik , ožje sorodstvo , širše sorodstvo ) .
Končni seznam kandidatov vsebuje Slika 13.
Seznam kandidatov za jezikovno motiviran slovenski wordnet 4.3.4.1 Uporaba korpusa pri gradnji semantičnih leksikonov Ostalo je nekaj manj kot sto kandidatov , med katerimi sem s pomočjo konkordanc ali razširjenega sobesedila v korpusu FidaPlus skušala najti pomenska in leksikalna razmerja .
V nadaljevanju predstavljam nekaj primerov , na podlagi katerih sem lahko sklepala na razmerja med posameznimi pojmi .
Primeri razmerij , najdenih v korpusu ( vir : FidaPlus ) Sobesedilo Razmerje ata v pomenu oče Jezus se je na svojega Očeta obračal z besedo " Abba " , kar bi lahko prevedli z " očka , ata , tata , papa " .
sopomenskost : očka – ata – tata – papa – oče ljubkovalni naziv za očeta , atek sopomenskost : očka – atek Kaj delaš ?
protipomenskost : ata – mama Ob zadnjem slovesu od dragega moža , ata in starega ata razlikovanje med ata in stari ata Našega ljubega moža , ata in dedka bomo na zadnjo pot pospremili /.../ razlikovanje med ata in dedek ata v pomenu stari oče , dedek AtaJanez ( dedek ) ga je kar dobro naučil .
Oče je pripovedoval , da je bila velikokrat nergava razlikovanje med ata in oče Ob nenadni , boleči izgubi našega ljubega moža , očeta , ata , sina in brata razlikovanje med ata in oče Primeri , ki jih vsebuje Tabela 2 , upravičujejo vključevanje leksemov ata , atek , ati , oče , očka in tata v isti sinset .
Papa se v korpusu sicer pojavi , a sem ga že predhodno izključila iz skupine rezultatov zaradi oznake star .
Iz najdenih primerov je prav tako mogoče ugotoviti protipomenski odnos med leksemoma mama – ata ter dokaze , da ima lahko ata dva različna pomena .
Zato sem v slovenski wordnet leksem ata vključila dvakrat , enkrat v sinset { ata1 , atek , ati , oče , očka , tata } , drugič pa v sinset { ata2 , ded , dedek , stari ata , stari oče } .
Posamezna pomena sem med seboj ločila s številkama ; številko 1 ima pomen , ki se v korpusu pojavi večkrat .
sobesedilo nadomestna mati = krušna mati 10 Pod določenimi pogoji se rejništvo nadomestnim materam lahko prizna tudi kot poklic /…/.
nadomestna mati = biološka mati 5 Zarodke vsadijo v maternice drugih , nadomestnih matera , ki prejemajo ustrezne hormone za vzdrževanje nosečnosti .
Če iščemo še kolokaciji nadomestni oče in nadomestni starši , ugotovimo , da je v korpusu zastopan samo prvi pomen , zato sem v slovensko besedno mrežo vključila vse tri kolokacije glede na prvi pomen , drugi pomen pa sem upoštevala samo za kolokacijo nadomestna mati .
V tem pomenskem polju sem upoštevala samo pomen leksema prednik , ki označuje sorodnike v ravni črti nazaj , ne pa človekovih oddaljenih prednikov ( kot so Slovani , neandertalec ipd. ) .
V isti sinset sem vključila še pravni izraz ascendent in ženski obliki obeh samostalnikov prednica in ascendentka .
To pa ob upoštevanju dejstva , da podpomenka podeduje vse lastnosti svojih nadpomenk , ni mogoče , saj bi v tem primeru trdila , da so krušni starši in posvojitelji otrokovi predniki in njegovi krvni sorodniki .
Različne izraze za porodnice sem obravnavala kot podpomenke sinseta { porodnica } , pri čemer sem izpustila izraza četrtorodnica in petorodnica , ker menim , da termina s tako ozkega področja ne sodita v besedno mrežo splošnega besedišča .
4.3.4.2 Grafična predstavitev rezultatov Rezultate , dobljene s pomočjo korpusa , sem grafično predstavila v obliki hierarhičnega drevesa , ki ga predstavlja Slika 14.
Črtkane črte in nepobarvana polja označujejo veje pomenskega polja , ki jih na tem mestu zaradi preobsežnosti problema nisem obravnavala .
Ženske oblike samostalnikov , ki sem jih razvrstila v isti sinset kot njihove moške ustreznice , bi v leksikalni zbirki opremila s posebno oznako .
Pri grafični predstavitvi rezultatov sem naletela na težave pri nad - in podpomenskem odnosu med sinsetoma { starš1 } -> { ata1 , oče , ate , atek , atej , ati , oča , oče , očka , papa , tata } in sinsetoma { biološki roditelj , biološki starš , naravni roditelj , naravni starš pravi roditelj , pravi starš , rodni starš } -> { biološki oče , naravni oče , pravi oče , roditelj , rodnik , rodni oče } , saj je poleg teh zaznati tudi povezavo med sinsetoma { ata1 , oče , ate , atek , atej , ati , oča , oče , očka , papa , tata } -> { biološki roditelj , biološki starš , naravni roditelj , naravni starš pravi roditelj , pravi starš , rodni starš } .
Gradnja besednih mrež pri tem ni nobena izjema , česar se je potrebno pri delu z njimi vselej zavedati .
Nadpomenskost in podpomenskost med besedami ponazarjajo neprekinjene črte .
Čeprav je iz konkordanc mogoče sklepati tudi o protipomenskih razmerjih , jih zaradi boljše preglednosti nisem vključila v drevesno strukturo , v leksikalni zbirki pa bi jih brez dvoma morala upoštevati .
Največja slabost jezikovno motiviranega pristopa v primerjavi z razširitvenim pa je , da je tak način izdelave semantičnih mrež zelo dolgotrajen in drag , saj razširitveni pristop omogoča visoko stopnjo avtomatizacije in neposredno povezavo z wordneti v drugih jezikih .
Pri problematiziranju prenosljivosti angleške strukture v slovenščino je treba priznati tudi , da je pomensko polje | sorodstvo | močno kulturno pogojeno in zato eno izmed najtežjih za medjezikovni prenos .
Bentivogli , Pianta in Pianesi ( 2000 ) so z avtomatskim postopkom identifikacije leksikalnih vrzeli med angleškim in italijanskim jezikom s primerjavo iztočnic v angleško - italijanskih in italijansko-angleških strojno berljivih slovarjih uspešno prepoznali angleške pojme , ki v italijanščini niso leksikalizirani in jim najboljše ustreznice pripisali ročno , poleg tega pa so v mrežo dodali tudi pojme , ki so realizirani in pomembni v italijanskem jeziku , v izvornem angleškem wordnetu pa se niso pojavili ( npr. | hrana | ) .
Po razširitvenem modelu je bilo uspešno izdelanih že veliko leksikalnih zbirk za številne jezike , kot so na primer nizozemščina , italijanščina , nemščina , češčina in estonščina , pa tudi romunščina , arabščina , korejščina , in japonščina .
Glede na kadrovske , časovne in finančne omejitve raziskave ter vire , ki so za razvoj semantičnega leksikona na voljo v Sloveniji , se je tudi za slovenščino kot najprimernejši metodološki okvir izkazal ravno razširitveni model .
Leksikalne vire , ki so se izkazali za koristne pri avtomatizirani gradnji novih wordnetov , lahko razdelimo na več skupin .
Slabost ohranjanja strukture PWN je popolna odvisnost dobljenega wordneta od PWN , kar je tem bolj moteče , čim bolj se ciljni jezikovni sistem razlikuje od angleščine .
4.4.2 Enojezični in dvojezični slovarji Največ poskusov avtomatske gradnje wordneta je temeljilo na enojezičnih in dvojezičnih slovarjih .
Z analizo razlag in razreševanjem večpomenskosti uvrščevalnih besed ( ang. genus word ) so iz enojezičnih slovarjih izluščili taksonomije za potrebe španskega ( Rigau , Rodríguez in Agirre 1998 ) , katalonskega ( Verdejo 1999 ) in nizozemskega wordneta ( Vossen , Bloksma in Boersma 1999 ) .
Iz enojezičnih slovarjev je mogoče luščiti tudi druga razmerja , kot je na primer meronimija ( Richardson , Dolan in Vanderwende 1998 ) .
Zelo popularen pristop je povezava angleških iztočnic iz elektronskih dvojezičnih slovarjev s sinseti v PWN pod predpostavko , da prevodi teh iztočnic opisujejo isti pojem in torej sodijo v isti sinset , kar so za potrebe strojnega prevajanja storili Knight in Luk ( 1994 ) ter Okumura in Hovy ( 1994 ) .
Pripisovanje ustreznih pojmov posameznim slovarskim iztočnicam je trivialno , kadar so le-te enopomenske ( imajo en sam možen prevod ) , pri večpomenskih iztočnicah pa je prej treba razrešiti večpomenskost .
Algoritmi za razreševanje večpomenskosti izkoriščajo strukturne informacije v slovarju ( npr. ločevanje posameznih pomenov iztočnice s podpičji ) in področne oznake , ki so pripisane iztočnicam .
Dvojezični slovarji so prav tako pogost vir za avtomatsko izdelavo wordnetov v drugih jezikih .
Za razreševanje večpomenskosti so uporabili kombinacijo hevristik , kot so stopnja ujemanja angleških ustreznic v slovarju in v PWN , stopnja ujemanja prevodnih kandidatov z literali iz semantično povezanih sinsetov v PWN , pojmovna razdalja slovarskih iztočnic glede na PWN in druge .
Dvojezični slovar sem v svoji raziskavi uporabila tudi sama ( glej razdelek 5.1 ) .
Največji problem pri uporabi dvojezičnih slovarjev za izdelavo wordneta je ta , da večina dvojezičnih slovarjev ni pojmovno zasnovanih , temveč sloni na tradicionalnih leksikografskih načelih , zaradi česar je pri slovarskih iztočnicah najprej treba razrešiti večpomenskost , kar je vse prej kot trivialna naloga .
4.4.3 Leksikoni , taksonomije in ontologije Glede na to , da specializirani leksikoni vsebujejo terminologijo z določenega področja in ob upoštevanju , da je strokovna terminologija večinoma enopomenska , je s specializiranimi leksikoni in glosarji mogoče na zelo hiter , preprost in poceni način priti do novih sinsetov , ki imajo visoko stopnjo zanesljivosti .
Specializiran leksikon , izluščen iz večjezičnega tezavra Eurovoc uporabim tudi za gradnjo slovenskega wordneta ( glej razdelek 5.3 ) .
Na podlagi informacij v večjezični ontologiji Integral Dictionary , ki jo je eden od projektnih partnerjev razvil že pred začetkom projekta EuroWordNet , pa so avtomatsko izdelali francoski wordnet , ki so ga nato ročno pregledali in popravili ( Dutoit , Catherin in Wagner 1998 ) .
Eden tipičnih poskusov nadgrajevanja in razširjanja Princeton Wordneta z novimi definicijami in razmerji , ki jih je mogoče pridobiti iz Wikipedije .
17 http://simple.wikipedia.org/wiki/Main_Page Po razreševanju večpomenskosti pa je definicije mogoče še nadalje analizirati in iz njih izluščiti koristne besedilne vzorce z upoštevanjem hiperpovezav v definiciji .
Namesto luščenja informacij iz besedil enciklopedičnih člankov so za YAGO izkoristili strukturne informacije na Wikipedijinih straneh , kot so na primer kategorije ( npr. Zidane sodi v kategorijo nogometašev ) .
Dobljene informacije so organizirali v taksonomijo s pomočjo hierarhične strukture v Princeton WordNetu .
Iz nemškega enojezičnega korpusa so za potrebe gradnje wordneta izluščili osnovno besedišče in frekvenčne sezname ( Dutoit , Catherin in Wagner 1998 ) , vzporedne korpuse pa so uporabili za prevajanje romunskih sinsetov ( Tufiş , Cristea in Stamou 2004 ) in validacijo srbskih sinsetov ( Krstev idr. 2004 ) .
Polja na podlagi semantičnih lastnosti besed , ki so v njih , nato preoblikuje v semantične mreže in jih poveže s PWN .
Razreševanje večpomenskosti s pomočjo vzporednih korpusov so proučevali Ide , Erjavec in Tufiş ( 2002 ) , ki so izluščen leksikon uporabili za razvrščanje besed v skupine glede na njihov pomen .
Iskanje sopomenk z besedno poravnanimi vzporednimi korpusi je prav tako osrednja tema raziskav , ki sta jih opravila van der Plas in Tiedemann ( 2006 ) , vendar je njuno pojmovanje sopomenk nekoliko bolj ohlapno , kot ga zahteva wordnet .
5 Avtomatizirana gradnja slovenskega wordneta Tudi slovenski wordnet sem skušala izdelati s pomočjo že obstoječih prosto - dostopnih večjezičnih virov .
Pri delu sem izhajala iz predpostavke , da so prevodi verodostojen semantični vir in da je iz obstoječih virov mogoče izluščiti relevantne semantične informacije o slovenskih besedah .
Raziskava temelji na dveh tezah : 1. da se posamezni pomeni večpomenskih besed v izvornem jeziku v drug jezik prevajajo z različnimi besedami in 2. da imajo različne besede , ki imajo v drugem jeziku isti prevod , pogosto skupno pomensko komponento .
Prvi korak naj bi tako poskrbel za razreševanje večpomenskosti besed , drugi pa za iskanje sopomenk .
Slika 15.
Metodološka shema izdelave slovenskega wordneta V nadaljevanju disertacije opisujem izdelavo slovenskega wordneta , pri čemer sem preizkusila tri pristope , kot ponazarja Slika 15.
Izbranim pristopom je skupno to , da so vsi večjezični , med seboj pa se razlikujejo glede na vire , ki so bili za gradnjo slovenskega wordneta uporabljeni ( slovar , korpus in enciklopedija ) .
5.1 Slovarski pristop V tem razdelku opisujem prvi pristop , ki sem ga za gradnjo slovenskega wordneta uporabila .
Analizi rezultatov sledi še analiza najpogostejših napak , do katerih je pri slovarskem pristopu prišlo , poglavje pa sklenem z razpravo in idejami za izboljšavo pristopa .
Shematski prikaz slovarskega pristopa 5.1.1 Opis pristopa Za izdelavo wordneta s slovarskim pristopom sem se odločila zato , ker za slovenščino drugi strukturirani semantični viri niso bili na voljo .
Shematski prikaz slovarskega pristopa prikazuje Slika 16 , ki se začenja pripravljalno fazo , v kateri sem iz dvojezičnega slovarja izluščila leksikon in iz wordneta izbrala najosnovnejše sinsete , ki sem jih nato v naslednji fazi prevedla v slovenščino .
5.1.2 Uporabljeni viri V nadaljevanju razdelka predstavljam vira , ki sem ju v slovarskem pristopu uporabila , to sta slovensko-srbohrvaški slovar in srbski wordnet .
Slovensko-srbohrvaški slovar Kljub temu , da v kombinaciji s slovenščino obstaja kar nekaj dvojezičnih slovarjev , ti na žalost za raziskovalne namene večinoma niso dostopni .
Zato mi ustreznega angleško-slovenskega slovarja z dovolj veliko pokritostjo besedišča za uspešno prevajanje angleškega wordneta ni uspelo pridobiti .
fiorino < / etym > < sense > < tr > forint , mady , novcyana jedinica < / tr > < / sense > < sense > < tr > nekada zlatnik , srebrni novac < / tr > < / sense > < / entry > Srbski wordnet Vossenov razširitveni model sem nadgradila s predpostavko , da je prekrivanje med pojmi in razmerji med jezikoma tem boljše , čim bolj sta si ta jezika sorodna ( Erjavec in Fišer 2006 , 2 ) .
Zato sem v tem delu raziskave namesto iz PWN izhajala iz srbskega wordneta , ki je od vseh obstoječih wordnetov slovenščini najbližji .
Srbski wordnet je bil ročno preveden iz angleškega , nato pa še validiran s pomočjo enojezičnih in večjezičnih slovarjev ter korpusov ( glej Krstev idr. 2004 ) , zato lahko sklepam , da sta tako ujemanje med angleškimi in srbskimi sinseti kot tudi vsebina srbskih sinsetov kvalitetna in da predstavljata dejansko jezikovno rabo .
Velikost srbskega wordneta Kot kaže Tabela 4 , vsebuje različica srbskega wordneta , ki sem jo pri tem pristopu uporabila , 7,26 % sinsetov v PWN oziroma 8.380 sinsetov in 14.175 literalov .
Poleg teh srbski wordnet vsebuje še 39 % sinsetov iz tretje skupine in 2 % specifičnih pojmov .
Samostalniški sinset { Go Fish } je igra s kartami , pridevniški { little:4 , small:4 } pa opisuje še nedoraslo osebo ali predmet .
Enopomenskih je 10.391 oziroma 87,6 % , povprečna stopnja večpomenskosti pa 1,19. 5.1.3 Postopek generiranja wordneta V tem razdelku opisujem korake v postopku generiranja slovenskih sinsetov .
Zaradi strukture slovarja pri geslih , ki vsebujejo več možnih prevodov , nekateri med njimi pa so še večbesedni , je pri luščenju leksikona prišlo do napak , saj je izluščeno samo prva beseda slovenske večbesedne zveze ( npr. prevod za srb .
besedno zvezo kafansko društvo se v slovenščini glasi pivski namesto pivsko društvo ) .
Primer vnosov v izluščenem srbohrvaško-slovenskem leksikonu 5.1.3.2 Prevajanje sinsetov v slovenščino Leksikon sem nato uporabila za avtomatsko prevajanje srbskih sinsetov .
Ker slovar ni vseboval zadostnih eksplicitnih informacij za razreševanje večpomenskosti na podlagi strukture geselskih člankov in ker stopnje ujemanja med slovarskimi iztočnicami in wordnetom zaradi inverzije slovarja ni bilo mogoče izkoristiti , moj slovarski pristop za razliko od sorodnih raziskav ( glej razdelek 4.4.2 ) ne vključuje faze razreševanja večpomenskosti slovarskih iztočnic .
Namesto tega sem srbske literale v vseh sinsetih , kjer so se pojavili , prevedla z vsemi njihovimi slovenskimi prevodnimi ustreznicami iz slovarja .
Čeprav so rezultati brez razreševanja večpomenskosti nedvomno slabši in je to velika pomanjkljivost pristopa s stališča praktične uporabnosti na tak način izdelanega wordneta , težave nekoliko omili dejstvo , da je distribucija pomenov v srbščini in slovenščini zaradi sorodnosti jezikov zelo podobna .
Poleg tega sem pomanjkljivost pristopa skušala nadoknaditi z ročnim pregledom generiranih sinsetov .
Pri slovarskem pristopu sem se osredotočila na prevajanje osrednjega dela wordneta , ozko specializirane in jezikovno odvisne pa prihranila za kasnejše faze projekta .
Tako je v slovenskem wordnetu , izdelanem s slovarskim pristopom , prisotnih vseh 4.841 vrhnjih sinsetov iz prvih dveh skupin BCS .
Primer sinseta , prevedenega s slovarskim pristopom , vsebuje Slika 19.
Primer slovenskega sinseta , avtomatsko prevedenega s slovarskim pristopom < SYNSET > < ID > ENG20-07495615n < / ID > < POS > n < / POS > < SYNONYM > < LITERAL > biblioteka < / LITERAL > < LITERAL > bukvarnica < SENSE > 1 < / SENSE > < / LITERAL > < LITERAL > izposojevalen < / LITERAL > < LITERAL > sposojevalen < / LITERAL > < LITERAL > knjižnica < / LITERAL > < / SYNONYM > < ILR > ENG20-07470940-n < TYPE > hypernym < / TYPE > < / ILR > < BCS > 2 < / BCS > < / SYNSET > 5.1.3.3 Ročno popravljanje rezultatov Avtomatski gradnji wordneta je sledil ročni pregled sinsetov .
Ročno delo sem pospešila s filtriranjem slovenskih literalov glede na njihovo frekvenco v korpusu FidaPlus .
Za avtomatsko brisanje teh literalov se nisem odločila , saj je med njimi veliko takšnih , ki so povsem ustrezni , njihova frekvenca v korpusu pa je nič zaradi napak pri avtomatski lematizaciji .
Odpravljanju napak v avtomatsko prevedenih sinsetih je sledilo ročno prevajanje literalov , ki so zaradi neujemanja s slovarjem ostali v srbščini .
5.1.4 Rezultati slovarskega pristopa S slovarskim pristopom sem izdelala osnovni wordnet za slovenščino , ki vsebuje 4.841 sinsetov .
Tabela 8 pokaže , da je v skupini BCS1 v slovenskem wordnetu , ki je bil izdelan s slovarskim pristopom , povprečno število literalov na sinset 2,13 za samostalnike in 2,35 za glagole .
Najdaljši samostalniški sinset je sinset ENG20-07488154 { družina , rod , sorodstvo , pleme , klan , sorodniki , svojci , rodbina , žlahta } ( ang. { kin2 } : group of people related by blood or marriage ) z 9 literali , najdaljši med glagoli pa sinset ENG20-00176022 { dodati , pridati , priložiti , navreči , primakniti , doložiti , pridodati } ( ang. { add1 } : make an addition ( to ) ; join or combine or unite with others ; increase the quality , quantity , size or scope of ) , ki vsebuje 7 literalov .
Tabela 8. št. literalov na sinset v slovenskem , srbskem in angleškem wordnetu 5.1.5 Analiza napak V tem razdelku predstavljam največje težave , na katere sem naletela pri slovarskem pristopu .
Kvaliteta izdelanega wordneta za slovenščino je tako odvisna od kvalitete in doslednosti vseh virov , ki so bili pri izdelavi uporabljeni : angleškega in srbskega wordneta ter slovensko - srbohrvaškega slovarja .
Večbesedni literali Najpogostejši razlog za popravke so bili večbesedni literali , ki jih s pomočjo slovarja ni bilo mogoče prevesti , zaradi česar sem morala vse kolokacije dodati ročno .
Po ročnem pregledu sinsetov je wordnet vseboval 1.344 večbesednih literalov .
Večpomenske iztočnice Naslednja kategorija napak je napačno pripisovanje pojmov večpomenskim slovarskim iztočnicam .
V srbščino je preveden s { konac , kraj , svršetak , završetak } , v slovenščino pa { izid , iztek , konec , končanje , kraj , krajnik , obrobje , nit , sklep , sukanec , zaključek , zatrep } .
Problemi s PWN Nedoslednosti PWN se kažejo v obravnavi skladenjskih in konotacijskih razlik med leksemi z istim denotatom , za katere se večina avtorjev strinja , da razlike niso pomembne in da takšni leksemi sodijo v isti sinset ( glej Vossen 1998 ter Bentivogli , Pianta in Pianesi 2000 ) .
V nekaterih primerih so tovrstni leksemi združeni v en sinset ( npr. ang. { grandma , grandmother , granny , grannie , gran } ) , v drugih pa razdeljeni na dva sinseta ( npr. ang. { mother , female parent } -> [ hypo ] { ma , mama , mamma , mom , momma , mommy , mammy } ) .
Angleški sinset { inverse , opposite } je tako v srbščino kot v slovenščino preveden s prislovi ( { obrnuto , suprotno } in { obratno , nasprotno } ) , kar pomeni , da se v isti hierarhiji mešajo sinseti različnih besednih vrst , to pa je v nasprotju s kriteriji za določanje razmerij med sinseti ( Vossen 1998 ) .
Če je bilo prevzemanje srbskih rešitev v večini primerov v veliko pomoč pri lažji gradnji slovenskega wordneta , tega ne morem trditi za leksikalne vrzeli , pojmov , ki jih je mogoče leksikalizirati samo s prosto kombinacijo besed ( glej Bentivogli , Pianta in Pianesi 2000 ) .
Tak primer je sinset { comestible , edible , eatable , pabulum , victual , victuals } , ki je v srbščino preveden kot { jestive materije } , zato mu je bilo slovensko ustreznico { živilo } potrebno najti ročno .
5.1.6 Razprava in možnosti za izboljšave S slovarskim pristopom , ki je zaradi pomanjkanja ustreznih virov preprostejši od sorodnih pristopov za druge jezike , sem z avtomatskim prevajanjem srbskega wordneta v slovenščino pridobila približno 5.000 sinsetov iz prvih dveh skupin BCS , ki so vsi tudi ročno pregledani in popravljeni .
Kot največja pomanjkljivost slovarskega pristopa se je izkazalo razreševanje večpomenskosti .
Vendar je treba poudariti , da je prevajanje iz srbščine zaradi podobnosti med jezikoma prineslo boljše rezultate , kot bi ga avtomatsko prevajanje iz angleščine , saj bi se v tem primeru zaradi oddaljenosti jezikov pojavilo veliko več problemov s polisemijo .
Ker referenčnih virov , kot je na primer slovar sopomenk , za slovenščino ni na voljo , bi bile za to nalogo primernejše metode nenadzorovanega strojnega učenja .
Izdelan wordnet bi bilo mogoče razširiti še s tretjo skupino osnovnih pojmov in specifičnimi pojmi ter ga obogatiti z dodajanjem slovenskih definicij , primerov in oštevilčenjem pomenov .
Specifične pojme bi bilo zelo enostavno pridobiti iz specializiranih slovarjev in terminoloških glosarjev ( glej poglavje 5.3 ) .
Razreševanje večpomenskosti pri tem ne bi bilo tako problematično , saj je strokovno besedišče ponavadi precej manj večpomensko .
Dodatne semantične informacije bi lahko izluščila iz tudi SSKJ , še posebej z izkoriščanjem definicijskih vzorcev .
Primer luščenja podpomenk na podlagi definicij je vzorec » ženska oblika od « , ki vrne 784 zadetkov , s pomočjo definicij pa se da izluščiti tudi nekatere leksikalna razmerja , na primer » glagolnik od « ( 5.244 zadetkov ) ali » manjšalnica od « ( 1.419 zadetkov ) .
V primerjavi s prejšnjim sem v korpusnem pristopu postopek izdelave wordneta nadgradila z avtomatskim razreševanjem večpomenskosti iztočnic s pomočjo večjezičnih leksikonov , ki sem jih izluščila iz vzporednega korpusa SEE-ERA.NET , in wordnetov za angleški , češki , romunski in bolgarski jezik .
Razdelek začenjam s predstavitvijo virov , ki sem jih pri tem pristopu uporabila .
Shematski prikaz korpusnega pristopa 5.2.1 Opis pristopa V nadaljevanju razdelka opisujem poskus avtomatske izdelave slovenskega wordneta s pomočjo vzporednega korpusa SEE-ERA.NET , ki sem ga pred tem poravnala na ravni besed .
Nato sem vse ustreznice z istim pripisanim id-jem združila v sinset in sinsete strukturirala v wordnet .
Uporabljene korake v korpusnem pristopu ponazarja Slika 21. 5.2.2 Uporabljeni viri V tem razdelku predstavljam vire , ki sem jih uporabila v korpusnem pristopu .
Za prevajanje sinsetov v slovenščino sem samodejno izluščila leksikone iz večjezičnega vzporednega korpusa SEE-ERA.NET , za razreševanje večpomenskosti iztočnic v leksikonu pa sem uporabila Princeton WordNet in wordnete iz družine BalkaNet .
< / s > < / seg > < / tu > Kot kaže Slika 22 , ki vsebuje primer prevodne enote iz korpusa na , je korpus poravnan na ravni stavkov , zato je bilo predprocesiranje korpusa precejšnji zalogaj , saj sem sama morala poskrbeti za tokenizacijo , oblikoskladenjsko označevanje in lematizacijo ter poravnavo na ravni besed ( glej razdelke 5.2.3.1 – 5.2.3.3 ) .
Princeton WordNet in wordneti iz skupine BalkaNet Izluščene dvo - in večjezične leksikone sem primerjala z že obstoječimi wordneti v istih jezikih .
Razloga za uporabo wordnetov iz projekta BalkaNet sta dva : prvič , ker se jeziki , vključeni v projekt BalkaNet , prekrivajo z jeziki , vključenimi v korpus SEE.ERA-NET , ki ga v eksperimentu uporabljam , in drugič , ker so bili wordneti izdelani vzporedno , pokrivajo skupen inventar pomenov in so popolnoma poravnani tako med sabo kot s PWN , zaradi česar je mogoče iskati presek med njimi .
Povprečna dolžina sinsetov je najnižja v češkem ( 1 , 54 ) , najvišja pa v bolgarskem wordnetu ( 2 , 11 ) .
Tabela 10 pokaže , da jim je to v veliki meri uspelo , saj bolgarski in češki wordnet vsebujeta prav vse pojme iz prve in druge skupine , medtem ko v tretji skupini češkemu manjkajo le štirje sinseti .
V romunskem wordnetu so osnovni pojmi dobro zastopani , vendar jih v vseh skupinah manjka približno po en odstotek .
Nato pa sem ustrezen pomen leksikonskih vnosov določila s pomočjo že obstoječih wordnetov za druge jezike in slovenskim ustreznicam v leksikonu pripisala ustrezen id .
Datoteke s parametri za označevanje so že bile na voljo za angleščino in romunščino , medtem ko sem jih za bolgarščino morala ustvariti sama , pri čemer sem za učni korpus uporabila bolgarski del korpusa Multext-East ( Erjavec 2004 ) .
Označen in lematiziran korpus vsebuje 60.389 stavkov za vsak jezik .
Zaradi slovničnih lastnosti angleščine ( raba členov , predlogov in sestavljenih glagolov ) niti ni presenetljivo , da ima v povprečju najdaljše stavke angleški del korpusa ( 22 , 27 ) , medtem ko so najkrajši v slovenskem delu ( 18 , 30 ) .
Najdaljši stavek v angleškem delu korpusa ima 152 besed , slovenski pa 91 besed .
Tako velike razlike v dolžini stavkov lahko vplivajo na slabše rezultate v kasnejši avtomatski poravnavi korpusa na ravni besed .
Besedišče v korpusu SEE-ERA.NET po posameznih jezikih Poleg pojavnic me je zanimalo tudi , kako bogato besedišče je v korpusu .
To po eni strani pomeni , da bom lahko iz korpusa izluščila precej manjše leksikone , kot se glede na velikost korpusa na prvi pogled zdi , vendar je pričakovati , da bo zaradi visoke stopnje ponovljivosti besed v korpusu kljub posameznim napakam pri avtomatski besedni poravnavi korpusa število pravilnih poravnav višje , zaradi česar bo izluščen leksikon toliko bolj kakovosten .
Tabela 12 vsebuje besede v korpusu , razvrščene po besednih vrstah .
Za avtomatsko izdelavo slovenskega wordneta so relevantni samo samostalniki , glagoli , pridevniki in prislovi , zato ostalih besednih vrst v tabeli posebej ne razčlenjujem .
Samostalnikom sledijo glagoli , ki jih je največ v angleškem delu korpusa ( 228.514 ) , največ pridevnikov je romunskih ( 173.476 ) , bolgarski del korpusa pa vsebuje bistveno več prislovov kot ostali jeziki ( 104.008 ) , najverjetneje zaradi napak pri označevanju .
Pojavnice v korpusu SEE-ERA.NET po posameznih jezikih Kot prikazuje Tabela 13 , bolgarski del korpusa vsebuje skoraj dvakrat več različnic kot ostali jeziki ( 43 , 578 ) .
Vzrok za to je najverjetneje slabša lematizacija , ker je število različnic pri ostalih jezikih veliko bolj podobno .
Tudi v zadnjem primeru gre najbrž za napake pri avtomatskem označevanju , kjer so številni pridevniki napačno označeni kot prislovi .
Glede na to , da je bil korpus že ustrezno oblikovan in poravnan na ravni povedi , sem prvi dve stopnji preskočila in se takoj lotila poravnave na ravni besed .
• bolgarščina • slovenščina češčinaromunščinaangleščina Ker sem Uplug preizkusila že v prejšnjih eksperimentih ( Fišer 2007 ) , sem tokrat uporabila napredne nastavitve , ki so takrat prinesli najboljše rezultate .
Z uporabo različnih statističnih mer Uplug najprej poišče prve predloge prevodnih ustreznic , nato požene program GIZA + + ( Och in Ney 2003 ) s standardnimi nastavitvami in na podlagi predlogov poravna besede .
Zapomni si najbolj verjetne prevodne ustreznice in nato še dvakrat ponovi zadnja dva koraka .
V predhodnih eksperimentih sem ugotovila tudi , da je poravnava besed tem boljša , čim bolj so si jeziki med seboj podobni .
Za vsak poravnan par pojavnic program izračuna wLink cert , kar je zanesljivost poravnave , nato pod oznako lexPair navede pojavnici , ki ju je poravnal , na koncu pa v xtargets vključi še njuna id-ja .
V uporabljenih nastavitvah program vrne samo najbolj zanesljive poravnave , zato nekatere besede v stavku ostanejo brez ustreznic v drugem jeziku .
Ker sem želela čim bolj zmanjšati šum , ki bi ga povzročale napačne prevodne ustreznice v leksikonih , sem upoštevala samo povezave 1:1 med besedami iste besedne vrste , ki so se pojavile več kot enkrat oziroma so imele dovolj visoko zanesljivost povezave .
Tako izdelani leksikoni vsebujejo vse različne prevode izvorne besede skupaj s frekvenco poravnave , podatkom o besedni vrsti in id-ji besed ( Slika 25 ) .
Izluščeni dvojezični leksikoni Seveda vsi pari v leksikonih niso pravilni ; vzrokov za napak je več , od napak pri oblikoskladenjskem označevanju in lematizaciji ( npr. vojaški vod je lematiziran kot voda in zato napačen prevod za ang. platoon ) do napak pri avtomatski poravnavi korpusa na ravni besed ( še posebej pri angleških samostalniških zloženkah , kjer pri prevajanju v slovenščino pogosto prihaja do zamenjave besednega reda , npr. ang. secretary general , ki se v slovenščino prevaja z generalni sekretar ) .
Dvojezične leksikone sem nato na podlagi skupnih jezikov ( češčina ali angleščina ) in id-jev besed združila v večjezične .
Če je izvorna beseda v en jezik prevedena z eno samo ustreznico , v drug jezik pa z večimi , sem v večjezični leksikon vključila vse različice , ker predvidevam , da razlika v prevodu nakazuje na razločevanje med posameznimi pomeni večpomenske angleške besede ali pa je ta prevod sopomenka prvega .
Na primer : angleška beseda wrapping je lahko v slovenščino ustrezno prevedena s sopomenkoma embalaža ali pakiranje , večpomenska beseda hearing pa v enem pomenu kot sluh , v drugem pa kot zaslišanje ( Slika 26 ) .
Primera prevodnih različic v petjezičnem leksikonu Tabela 15.
Izluščeni večjezični leksikoni Tudi v večjezičnih leksikonih je največ samostalnikov , sledijo jim glagoli in pridevniki .
Odgovor na vprašanje , ali so prevodne različice sopomenke ali razločevalci pomenov , prinaša naslednji korak , in sicer primerjava leksikonov z wordneti .
V zadnjem koraku sem poiskala vse slovenske besede , ki jim je bil pripisan isti id ( in so torej označevale isti pojem , kar pomeni , da so sopomenke ) in jih združila v sinset ( Slika 27 ) .
Slika 27.
Primer avtomatsko ustvarjenih sinsetov za slovenski wordnet ENG20-12574523-n znesek , vsota , višina , seštevek 4 sl.csbgenro ENG20-06388518-n znak , simbol , oznaka , vol 4 sl.csbgenro ENG20-06191171-n vsebnost , vsebina , delež , količina 4 sl.csbgenro ENG20-00661907-v vključiti , imeti , predložiti , zajeti 4 sl.csbgenro ENG20-05511743-n vidik , omrežje , varstvo , napredek 4 sl.csbgenro ENG20-13024538-n vidik , omrežje , varstvo , napredek 4 sl.csbgenro ENG20-02353970-v uvajati , uvesti , vzpostavljati , vzpostaviti 4 sl.csbgenro ENG20-08751413-n tla , prst , zemljišče , zemlja 4 sl.csbgenro ENG20-14287747-n starost , upokojitev , izvajanje , starosta 4 sl.csbgenro ENG20-06070956-n spričevalo , potrdilo , certifikat , proizvod 4 sl.csbgenro ENG20-02014718-a znanstven , znanstveno-tehničen , strokoven 3 sl.csbgenro ENG20-13750963-n zmes , mešanica , komponenta 3 sl.csbgenro ENG20-02809375-n zgradba , stavba , objekt 3 sl.csbgenro ENG20-02504795-v zastopati , predstavljati , prestavljati 3 sl.csbgenro ENG20-02466364-v zastopati , predstavljati , prestavljati 3 sl.csbgenro ENG20-06256978-n zakonik , kodeks , ravnanje 3 sl.csbgenro ENG20-06129345-n zakon , pravo , zakonodaja 3 sl.csbgenro ENG20-00044113-n začetek , vstop , uveljavitev 3 sl.csbgenro ENG20-06877298-n vzrok , učinek , ustavitev 3 sl.csbgenro ENG20-14000512-n voda , vod , naprava 3 sl.csbgenro Naj postopek ponazorim na primeru slovenskega homonima in večpomenske besede svet , za katero sem v slovensko-angleško-češko-romunskem leksikonu našla naslednje prevodne ustreznice : za pomen organ oz. imenovana skupina ljudi ( izgovorjava : svet ) so njene angleške ustreznice v izluščenem večjezičnem leksikonu commission , committee in association , za pomen zemlja ( izgovorjava : svét ) pa je angleška ustreznica v leksikonu world .
Češki ustreznici za prvi pomen sta komise in výbor , za drugega pa svět .
Avtomatsko razreševanje večpomenskosti in pripisovanje id-jev S primerjavo wordnetov v več jezikih je mogoče uspešno identificirati večpomenske besede in večpomenskost razrešiti .
Poleg tega je s tem postopkom mogoče identificirati in izločiti tudi večino napak , do katerih je prišlo pri avtomatski poravnavi korpusa na ravni besed , saj je rezultat primerjave izluščenih id-jev za napačno poravnane besede ponavadi prazna množica .
5.2.3.5 Strukturiranje izdelanih sinsetov Podobno kot pri slovarskem pristopu sem jezikovno-neodvisne informacije ( npr. besedno vrsto , področje , pomenska razmerja ) prevzela iz PWN in vse podatke strukturirala v datoteko xml .
Avtomatsko generirano leksikalno bazo za slovenski jezik sem nato naložila v program VisDic , kjer sem izdelan wordnet primerjala z različico , zgrajeno s slovarskim pristopom , in z angleškim wordnetom .
5.2.4 Rezultati korpusnega pristopa S korpusnim pristopom sem generirala sinsete z osmimi kombinacijami jezikov , prva kombinacija je bila dvojezična ( češčina in slovenščina ) , vse ostale pa večjezične ( od tri do pet jezikov ) .
V primerjavi s celotnim PWN je delež sinsetov , dobljenih s korpusnim pristopom , majhen ( 6,62 % do 0,97 % sinsetov iz PWN ) .
V primerjavi s prvo različico slovenskega wordneta , izdelanega s slovarskim pristopom ( 4,22 % sinsetov iz PWN ) , pa je velikost generiranega wordneta najbolj primerljiva s trijezičnim pristopom , ki je vključeval slovenščino , češčino in angleščino ( 3,49 % sinsetov iz PWN ) .
Tabela 17 jasno kaže , da so pri vseh kombinacijah daleč najpogosteje zastopani samostalniški sinseti .
V primerjavi s prvo različico slovenskega wordneta sem tokrat izdelala nekoliko manjši delež glagolskih in precej večji delež pridevniških sinsetov .
S trijezičnimi leksikoni sem pridobila med 4.027 in 2.331 sinsetov , najdaljši med njimi vsebuje 75 literalov ( Tabela 18 ) .
Dolžina sinsetov , pridobljenih z različnimi jezikovnimi kombinacijami 22 PWN vsebuje tudi prislovne sinsete , ki v tabeli niso prikazani .
Najdaljši sinset vsebuje 11 prislovov , povprečna dolžina prislovnih sinsetov pa je 1,59.
Najdaljši sinset v slovenskem znaša 36 , v PWN pa 28 literalov .
Pri PWN je zanimivo , da je dolžina sinsetov približno enaka za vse besedne vrste , medtem ko so slovenski glagolski sinseti izrazito daljši , pridevniški pa izrazito krajši od ostalih , kar je razvidno tako iz podatka o najdaljšem sinsetu kot tudi iz povprečne dolžine sinsetov po posamezni besedni vrsti .
Razen dvojezičnega pristopa so vsi ostali korpusni pristopi v povprečju dali krajše sinsete od slovarskega ( 2 , 54 ) .
Povprečni dolžini sinsetov v PWN se najbolj približajo štiri - in petjezični pristopi .
Tabela 19. št. generiranih sinsetov glede na osnovne skupine pojmov 23 Tak rezultat za prvo različico slovenskega wordneta dobimo , ker v PWN za en sinset manjka oznaka BCS Tabela 19 pokaže , da so osnovni pojmi v sinsetih , dobljenih s korpusnim pristopom , dobro zastopani .
Iz dvojezičnega leksikona je bilo generiranih 67,32 % vseh sinsetov iz PWN , ki sodijo v skupino BCS1 ( sl-cs ) , s trojezičnim leksikonom mi jih je v tej kategoriji uspelo pridobiti 51,23 % ( sl-cs-en ) , s štirijezičnim 35,87 % ( sl - cs-bg-en ) , s petjezičnim pa 26,27 %.
Največji delež osnovnih pojmov je dal petjezični pristop ( 77 %).
Nekaj je bilo izdelanih tudi specifičnih pojmov .
Za wordnete iz družine BalkaNet je značilno , da so v okviru projekta določili osnovne nabore pojmov , ki so jih nato dodali v wordnete za vse jezike , vključene v projekt .
Raznolikost besedišča v izdelanih sinsetih Glede na število generiranih sinsetov je Tabela 20 pokazala razmeroma nizko število različnih literalov , zato sem želela preveriti , do katere mere so literali večpomenski .
Kot pokaže Tabela 21 , vsebujejo največ enopomenskih ( 71 %) in najmanj večpomenskih literalov ( 29 %) tisti sinseti , ki so bili ustvarjeni iz petjezičnega , najmanj enopomenskih ( 32 %) in največ večpomenskih literalov ( 68 %) pa sinseti , ki sem jih dobila iz dvojezičnega leksikona .
Povprečna stopnja večpomenskosti , ki šteje , v koliko različnih sinsetih se v povprečju pojavi nek literal , niha med 5,45 ( sl - cs ) in 1,22 ( sl-cs-ro-en ) .
Večpomenskost v ustvarjenih sinsetih 5.2.5 Vrednotenje rezultatov Prva različica slovenskega wordneta je bila izdelana s slovarskim pristopom , ki je opisan v razdelku 5.1.
Pri poskusu nadaljnje razširitve wordneta za slovenščino sem zato z večjezičnim korpusnim pristopom skušala dobiti bolj zanesljive kandidate za sinsete .
5.2.5.1 Avtomatsko vrednotenje Avtomatsko vrednotenje rezultatov sem opravila s pomočjo ročno popravljenega wordneta iz slovarskega pristopa , ki mi je v tem primeru služil kot referenčni wordnet ( ang. gold standard ) , s katerim sem primerjala vse avtomatsko izdelane različice wordneta v korpusnem pristopu .
Referenčni wordnet vsebuje 1.179 sinsetov iz vseh treh skupin osnovnih pojmov .
Čeprav referenčni wordnet vsebuje tudi večbesedne literale , so ti iz evalvacije izvzeti , ker zaradi načina besedne poravnave korpusa večbesednih literalov s tem pristopom nisem mogla izdelati .
Zato sem se odločila za nekoliko drugačen pristop k vrednotenju in za izračun priklica , natančnosti in f-mere primerjala , v katerih sinsetih se vse pojavljajo literali v avtomatsko generiranih in referenčnem wordnetu .
Ta pristop se mi zdi pravičnejši glede na omejeno besedišče v korpusu , ki je bilo izhodišče za izdelavo wordnetov v tem pristopu .
Rezultati avtomatskega vrednotenja izdelanih wordnetov glede na št. jezikov Tabela 22 prikazuje rezultate avtomatskega vrednotenja .
Pri priklicu me je zanimalo , v kolikšnem številu sinsetov v primerjavi z referenčnim wordnetom se literali pojavljajo .
Primerjava slovarskega in korpusnega pristopa pokaže , da so ne glede na število vključenih jezikov rezultati korpusnega pristopa za vse tri izračunane vrednosti bistveno boljši .
Najboljši priklic daje dvojezični pristop ( 76,96 %).
Trend naraščanja natančnosti in upadanja priklica in f-mere glede na število vključenih jezikov nazorno prikazuje Slika 28 , ki vključuje tudi referenčne vrednosti , pridobljene s slovarskim pristopom .
Če je povprečni trend naraščanja natančnosti in upadanja priklica enakomeren glede na število jezikov , ki so bili vključeni v fazo razreševanja večpomenskosti , rezultati vrednotenja , ki jih vsebuje Tabela 23 , pokažejo , da pri posameznih jezikovnih kombinacijah znotraj teh pristopov prihaja do precejšnjih odstopanj .
Pri trijezičnem pristopu je nihanja v priklicu za dobrih 20 % , v f-meri a za več kot 12 % , pri čemer se najbolje odreže slovensko-češko-angleška kombinacija .
Do tega bi lahko prišlo , če je romunski prevod svobodnejši od drugih , zaradi česar pride do neujemanja že pri vzporejanju na ravni povedi , kar nedvomno oteži in poslabša besedno vzporejanje .
Primerjava rezultatov posameznih jezikovnih kombinacij po besednih vrstah , ki jih prikazuje Tabela 24 , pokaže , da je korpusni pristop veliko uspešnejši za ustvarjanje pridevniških in samostalniških sinsetov kot za glagolske .
Rezultati avtomatskega vrednotenja izdelanih wordnetov po besednih vrstah 5.2.5.2 Ročno vrednotenje Želela sem še preveriti , kako se kvaliteta izdelanih wordnetov odraža v vsebini sinsetov .
Za ročni pregled sem iz novih wordnetov izluščila manjši vzorec , in sicer tako , da sem vanj vključila vse sinsete , ki se pojavljajo v vseh avtomatsko ustvarjenih wordnetih , s čimer sem zagotovila možnost neposredne primerjave rezultatov .
Za vzorčenje sem izbrala najboljšo kombinacijo vsakega pristopa glede na avtomatsko evalvacijo , torej skupaj štiri .
Tako pripravljeni vzorci vsebujejo po 225 sinsetov , od katerih je 165 samostalniških .
Ročni pregled glagolov je kmalu potrdil statistično vrednotenje in pokazal , da je izbrana metoda veliko manj uporabna za glagole kot za samostalnike , zato se v nadaljevanju osredotočam samo na slednje .
Pri ročni evalvaciji me je najprej zanimalo , ali avtomatsko generirani sinseti sploh vsebujejo vsaj en pravilen literal .
Pri ročnem pregledu vzorca me je prav tako zanimalo , kolikšen delež sinsetov je popolnoma napačnih ( da torej ne vsebujejo niti enega pravilnega literala ) .
Ročni pregled vzorčnih sinsetov torej pokaže , da je najbolj natančen petjezični pristop , vendar je treba dodati , da vsebuje veliko manj sopomenk v sinsetih , prav tako pa vsebuje tudi precej manj sinsetov .
Rezultati ročno pregledanega vzorca 165 sinsetov V tem pogledu se glede na število ustvarjenih sinsetov , število elementov v posameznem sinsetu ter kakovost sinsetov zdi najuporabnejši trijezični pristop .
Vrednotenje rezultatov je pokazalo , da je metoda najuspešnejša za pridobivanje samostalniških sinsetov in da se natančnost avtomatsko ustvarjenih sinsetov povečuje s številom uporabljenih večjezičnih virov .
Poleg napačnih poravnav na ravni besed se v leksikonih pojavljajo tudi napake , ki izhajajo iz avtomatskega oblikoskladenjskega označevanja in lematizacije , zato je razumljivo , da sinseti , pridobljeni s korpusnim pristopom , niso popolni .
Rezultate bi bilo mogoče precej izboljšati s kvalitetnejšim označevanjem in lematizacijo korpusa ter boljšim besednim vzporejanjem korpusa .
Naslednjo možnost izboljšave vidim v pridobitvi zadnjih različic wordnetov , saj so zbirke , ki sem jih uporabila v tem poskusu , iz leta 2004 , ko se je projekt BalkaNet zaključil .
Naslednji zanimiv poskus bi bil test metode za dodajanje ( večbesednih ) terminov .
Ker pa PWN vsebuje ogromno število specifičnih pojmov , bi bilo nujno s primernim pristopom in specializiranimi viri v slovenski wordnet dodati še te .
To bom poskusila s tretjim pristopom , ki ga predstavljam v tej disertaciji , in sicer z izkoriščanjem strukturiranih virov , kot so spletne enciklopedije in tezavri .
5.3 Enciklopedični pristop Raziskave , ki izkoriščajo spletne enciklopedične vire za gradnjo novih in za obogatitev že obstoječih ontoloških virov in semantičnih leksikonov , v veliki meri kombinirajo uveljavljene pristope s področja korpusnega jezikoslovja , luščenja informacij , strojnega učenja in rudarjenja podatkov .
Ker se spletne vsebine zelo hitro spreminjajo , je nujno tudi redno posodabljanje in nadgrajevanje ontologij in semantičnih leksikonov , ki jih aplikacije pri obdelavi podatkov uporabljajo .
Wikipedijo in sorodne vire sem tudi sama uporabila v zadnjem pristopu za avtomatsko gradnjo slovenskega semantičnega leksikona sloWNet , kar opisujem v tem razdelku .
virov izkoriščanje medjezikovnih povezav v wiki virih za luščenje dvojezičnih leksikonov 2. izbor enopomenskih literalov izbor enopomenskih literalov iz PWN 3. generiranje slovenskih sinsetov prevajanje angleških literalov v slovenščino s pomočjo leksikonov strukturiranje sinsetov in wordneta 4. evalvacija generiranih sinsetov ročni pregled vzorca sinsetov 5.3.1 Opis pristopa V zadnjem pristopu izkoriščam različne prosto dostopne specializirane vire , s katerimi želim v slovenščino prevesti tiste angleške sinsete iz PWN , ki vsebujejo enopomenske literale in zanje zato ni potrebno razreševati večpomenskosti .
Enopomenski literali pomenijo ogromen potencial , saj je pristop z avtomatskim prevajanjem s pomočjo strukturiranih dvojezičnih virov hiter in preprost , pričakovani rezultati pa zanesljivi .
Postopek grafično ponazarja Slika 29.
Shematski prikaz enciklopedičnega pristopa 5.3.2 Uporabljeni viri V tem razdelku predstavljam vire , ki sem jih pri enciklopedičnem pristopu uporabila .
Vsebuje geselske članke v 250 različnih jezikih in zajema tradicionalne enciklopedične teme , obenem pa služi tudi kot almanah in zbornik .
Slovenščina je precej manjša in se z nekaj nad 62.000 članki skupaj s še 55 drugimi jeziki , ki vsebujejo več kot 10.000 člankov , uvršča v drugo kategorijo .
Vsi ostali jeziki vsebujejo precej manj vnosov , več kot stotisoč jih ima še devet jezikov , slovenski Wikislovar pa trenutno vsebuje le nekaj čez 7.000 vnosov ( december 2008 ) .
Namenjen je iskanju razlag besed in kratic , lahko ga uporabimo kot tezaver ( slovar vsebuje sopomenke in protipomenke ) , v njem lahko iščemo prevode besed v druge jezike in ga uporabljamo za iskanje anagramov in rim .
Eden od pomembnih ciljev projekta je tudi zagotavljanje fotografij živih bitij v klasifikaciji , pri čemer so tudi te prosto na voljo pod dovoljenjem GNU .
Za posamezne jezike tezaver vsebuje še informacije o pomenu in rabi vključenih izrazov ter dodatne izraze – nedeskriptorje .
5.3.3.1 Predprocesiranje virov in luščenje leksikonov Iz zgoraj omenjenih štirih virov sem izluščila dvojezične leksikone , ki sem jih nato uporabila za prevajanje angleških literalov iz PWN .
Ponazoritev luščenja leksikona s pomočjo medjezikovnih povezav Ker so naslovi enciklopedičnih člankov v Wikipediji vsi zapisani z veliko začetnico , tudi kadar ne gre za lastna imena , jih je bilo potrebno normalizirati .
V nasprotnem primeru bi pri prevajanju lahko prišlo do resnih napak ( npr. enciklopedični vnos Grass , ki predstavlja nemškega pisatelja Güntherja Grassa , bi lahko napačno obravnavala enako kot literal iz PWN grass , kar pomeni trava ) .
Pri analizi besedil člankov se je izkazalo , da pogosto vsebujejo sistematičen način navajanja sopomenk iskanega pojma , zato sem izluščila tudi te ter prvi stavek iz besedila članka , ki je ponavadi ustrezna razlaga iskanega pojma , in z njim nadomestila angleško definicijo v wordnetu .
Slovarski vnosi v Wikislovarju so zapisani z malo začetnico , zato tovrstno procesiranje ni bilo potrebno .
Pri luščenju leksikona iz Evrovoca sem upoštevala samo deskriptorje , ker so že bili v ustrezni obliki v xml in so vsebovali nedvoumne in celotne prevode v slovenščino .
Ta rezultat ni presenetljiv , saj enciklopedični viri vsebujejo predvsem opise znanih osebnosti , dogodkov in krajev ter razlage strokovnih pojmov , ki so tipično samostalniški pojmi .
Tabela 27.
Z enciklopedičnim mi je to uspelo , saj mi metode zaradi načina prevajanja angleških literalov ( poravnava na ravni besed ni potrebna ) kot tudi zaradi strukturiranosti virov ( v virih so iztočnice jasno ločene od razlag ) ni bilo potrebno omejevati na enobesedne .
Tabela 28 kaže , da je kar polovica vseh literalov , generiranih na podlagi Eurovoca , večbesednih .
Največji delež specifičnih pojmov je bilo ustvarjenih iz Wikivrst ( 95 %) in Wikipedije ( 92 % ) , največji delež splošnih pojmov pa sta dala Wikislovar ( 21 %) in Eurovoc ( 14 %).
Razporejenost generiranih sinsetov po skupinah pojmov Razloga za to sta dva : enopomenski literali iz PWN , ki sem jih v tem pristopu vzela za izhodišče slovenskega wordneta , pogosto niso del treh skupin splošnih pojmov , ki tvorijo jedro wordneta , prav tako pa tudi viri , ki sem jih za prevajanje sinsetov iz PWN uporabila , vsebujejo predvsem strokovno besedišče , ki ne sodi med osnovne pojme .
Dolžina generiranih sinsetov Precej drugačno sliko od prejšnjih dveh uporabljenih pristopov pa kaže tudi razporejenost generiranih sinsetov po domenah ( Tabela 31 ) .
Zastopanost domen pri generiranih sinsetih 5.3.5 Vrednotenje rezultatov Glede na to , da generirani sinseti vsebujejo tako zelo malo osnovnih sinsetov , avtomatsko vrednotenje priklica in natančnosti s pomočjo ročno izdelanega referenčnega wordneta ne bi bilo smiselno , saj referenčni wordnet vsebuje samo sinsete iz prve in druge skupine osnovnih pojmov in bi bilo prekrivanja premalo .
Namesto tega sem se odločila za ročno vrednotenje izdelanih wordnetov , pri čemer sem za vsak vir pregledala vzorec 100 naključno izbranih sinsetov .
Napačno prevedeni sinseti so takšni , ki vsebujejo literale , ki so enopomenski samo v PWN , sicer pa imajo več pomenov ( npr. groat , ki lahko pomeni srebrni kovanec ali pa grobi zdrob , v PWN se pojavlja samo v prvem pomenu ) .
Zato napake , ki jih navajam v nadaljevanju , večinoma sploh niso omejitve uporabljene metodologije , temveč so posledica napak oziroma pomanjkljivosti PWN .
Naslednji vir napak je bilo premalo natančno razlikovanje med velikimi in malimi začetnicami literalov iz PWN in iztočnic iz izluščenih leksikonov , zato je bilo napačno prevedenih veliko lastnih imen ( npr. pokrajina Champagne je bila prevedena kot šampanjec , mesto v Oregonu Bend kot zavoj , ime nemškega iznajditelja Zeppelin pa kot cepelin ) .
Pri Wikipediji se pojavi isti literal v ednini , nato pa še v množini ( npr. dinozaver , dinozavri ) .
Pri Wikislovarju pa se je pojavila veliko resnejša vsebinska napaka , saj slovar za angleško besedo son vsebuje tri slovenske prevode , od katerih je ustrezen samo prvi : sin , pastorek , posinovljenec .
Naslednja skupina napak je napačna raba velike oz. male začetnice v sicer pravilno prevedenih sinsetih , ki je najpogostejša pri sinsetih , dobljenih iz Wikipedije .
Tako so z veliko začetnico še vedno zapisana imena mesecev ( npr. Julij , November ) , vojn ( npr. Druga svetovna vojna , Angleška državljanska vojna ) , zgodovinskih obdobij ( Neolitik , Reformacija ) , z malo pa napačno zapisane kratice za kemijske elemente ( rh , bk , tb ) .
Ker je bilo teh primerov v ročno pregledanih vzorcih veliko , sem dobljene sinsete naknadno filtrirala in izbrisala vse dvojnice z naglasi , entitete html in podčrtaje , tako da jih končna različica slovenskega wordneta ne bo vsebovala .
5.3.6 Razprava in možnosti za izboljšave Enciklopedični pristop ima kar nekaj prednosti pred slovarskim in korpusnim .
Enciklopedični pristop se je izkazal kot zelo uspešen za pridobivanje specializiranih sinsetov , med katerimi je najpogosteje zastopana domena zoologija .
Rezultate bi bilo mogoče še izboljšati z natančnejšim luščenjem leksikonov in boljšo analizo enciklopedičnih člankov ter s pridobivanjem ustreznejših definicij za sinsete .
Za razreševanje večpomenskosti bi lahko uporabila primerjavo besedil enciklopedičnih člankov z razlagami pojmov v wordnetu , ki je po poročanju Ruiz-Casado , Alfonseca in Castells ( 2005 ) dalo zelo dobre rezultate .
Sinsete , ki sem jih v sklopu slovarskega pristopa pregledala in popravila ročno , sem preprosto prevzela iz prve različice wordneta .
Avtomatsko generirane sinsete iz korpusnega in enciklopedičnega pristopa pa sem združila tako , da sem upoštevala vse različne predlagane literale , pri čemer sem ohranila informacijo o njihovem izvoru , ki omogoča naknadno filtriranje združenega wordneta glede na zanesljivost in raznolikost virov , ki so posamezni literal prispevali .
Sinset vsebuje še informacije o besedni vrsti , skupini pojmov , ki jim pripada , področno oznako , povezavo na ontologijo SUMO ter pomenska in leksikalna razmerja , ki kažejo na druge sinsete v mreži .
Zbirko sem oblikovala v formatu xml , ki ga zahteva pregledovalnik in urejevalnik DEBVisDic ( Horak idr. 2005 ) .
Prednost urejevalnika DEBVisDic pred že omenjeno starejšo različico VisDic je v tem , da lahko po novem bazo naložimo na strežnik in jo nato pregledujemo in popravljamo s pomočjo klienta v brskalniku Firefox preko interneta , kar močno olajša skupinsko delo v projektih , ki razvijajo oziroma uporabljajo wordnet .
Primer sinseta { atmosfera , ozračje } v urejevalniku DEBVisDic prikazuje Slika 31.
Izbran sinset je izpisan v dveh jezikih , v slovenščini na levi in angleščini na desni strani , čeprav bi lahko isti sinset prikazali iz wordnetov za poljubne jezike , ki so naloženi v DEBVisDicu .
Sinset je opremljen z besednovrstno oznako ( POS ) , identifikacijsko kodo ( ID ) , nato so naštete vse sopomenke ( Synonyms ) , definicija pojma ( Definition ) in primeri rabe posameznih literalov ( Usage ) .
Na tem mestu je potrebno opozoriti , da sem se zaradi prevelike količine dela v disertaciji omejila predvsem na iskanje slovenskih ustreznic pojmov , definicije in primere rabe pa sem zaenkrat razen v primerih , vzetih iz Wikipedije , prevzela iz PWN , zato so za slovenščino v tej fazi neuporabni , vendar jih nameravam v prihodnje zapolniti s slovenskimi podatki .
Definiciji in primerom rabe sledi področna oznaka ( Domain ) in povezava na ontologijo ( SUMO / MILO ) .
Primer sinseta v urejevalniku DEBVisDic Slika 32 prikazuje sinset { kafe , kava , kofe } v drevesnem pogledu .
Nad iskanim sinsetom so prikazane njegove nadpomenke : { pijača } , { hranilo , živilo } , { materija , snov , substanca } in { entiteta } .
Primer nadpomenskega drevesa v urejevalniku DEBVisDic 6.3 Osnovni podatki o združenem wordnetu S združitvijo metod , opisanih v prejšnjem razdelku , sem dobila 16.886 sinsetov oz. 19.582 različnih literalov .
Povprečna dolžina sinseta je 1,16 literala , kar je manj kot v vseh ostalih wordnetih , ki sem jih v opisanih eksperimentih uporabila : v povprečju najkrajše sinsete vsebuje češki wordnet ( v 1,54 literalov / sinset ) , sledita mu angleški ( 1,74 literalov / sinset ) in romunski wordnet ( 1,76 literalov / sinset ) , najdaljši pa je bolgarski z 2,11 literali / sinset .
Najdaljši sinset vsebuje 16 literalov ( ENG20-02498705-v : ciganiti , farbati , goljufati , goljufičiti , napeljati , ogoljufati , opehariti , pehariti , plahtati , prevarati , slepariti , slepiti , varati , zapeljati , zavajati , zvitorepiti ) in izhaja iz prve različice wordneta , kjer so bili angleški sinseti prevedeni s pomočjo dvojezičnega slovarja , nato pa ročno pregledani in popravljeni , tako da vsi literali v sinsetu ustrezajo pojmu , ki ga opisujejo .
Slovenski wordnet vsebuje tako enobesedne ( 11.099 ) kot večbesedne literale ( 8.483 ) .
Enobesedne literale sem pridobila predvsem iz korpusa , večbesedne pa iz Wikivirov , Eurovoca in z ročnim pregledom avtomatsko generiranih sinsetov , dobljenih s slovarskim pristopom ( glej Fišer in Erjavec 2008 ) .
Njihovo število je primerljivo s češkim ( 11.326 ) in bolgarskim wordnetom ( 13.480 ) , angleški pa jih vsebuje kar osemkrat več ( 66.940 ) .
6.4 Analiza združenega wordneta 6.4.1 Analiza sinsetov glede na besedno vrsto in skupine pojmov Tabela 33 prikazuje rezultate analize sinsetov glede na besedno vrsto in skupine pojmov , v katere sodijo .
Čeprav je vrstni red besednih vrst po pogostosti v PWN in BalkaNetu enak , je njihovo razmerje precej drugačno .
Sinseti glede na besedno vrsto in skupine pojmov Osnovni pojmi iz prvih dveh skupin so v slovenskem wordnetu zelo dobro zastopani , saj so večinoma izšli iz slovarskega pristopa , v katerem sem se osredotočila ravno nanje , s korpusnim in enciklopedičnim pristopom pa mi je uspelo pridobiti še nekaj pojmov iz tretje skupine in veliko število specifičnih pojmov , tako da združen slovenski wordnet trenutno vsebuje 15 % vseh pojmov iz PWN .
Češki in bolgarski wordnet vsebujeta vse sinsete iz prvih treh skupin osnovnih pojmov , medtem ko jih romunskemu manjka 375.
Področno oznako ima v PWN 86 % sinsetov , ki so označeni s 164 različnimi domenami , najpogostejša pa je faktotum .
Tabela 34 vsebuje deset domen , ki so v slovenskem wordnetu najpogosteje pripisane literalom skupaj z viri , na podlagi katerih so bili literali ustvarjeni .
Tudi v slovenskem wordnetu je najpogostejša najsplošnejša domena faktotum , enako kot v PWN pa ji sledijo pojmi iz domen zoologija , botanika in biologija .
Največ pojmov sem pridobila iz Wikipedije in sorodnih virov , ki so prispevali največ literalov ravno za pojme s področja biologije .
Korpusni pristop , pri katerem sem uporabila korpus SEE-ERA.NET , ki ni splošen , je dal toliko splošnega besedišča , ker sem večpomenskost v leksikonu razrešila s pomočjo wordnetov iz BalkaNeta , ki so ob zaključku projekta pokrivali predvsem osnovne pojme .
To pomeni , da sem za izdelavo wordneta izbrala raznolike vire , ki so prispevali raznoliko besedišče in tako prispevali k bogatosti wordneta .
6.4.3 Analiza razmerij med sinseti Glede na to , da so sinseti v wordnetu med seboj povezani v mrežo , me je zanimalo , katera razmerja med njimi so najpogostejša .
Razmerja , kot so derivacija , protipomenskost in glagolska skupina , ki so bile avtomatsko prevzete iz PWN , niso povsem jezikovno neodvisne , zato jih bo za slovenščino v prihodnosti potrebno preveriti in potrditi oziroma odstraniti .
Razveseljivo je , da je vseh 9 vrhnjih sinsetov v slovenščini : abstrakcija , dejanje , dogodek , entiteta , lastnina , pojav , psihološka značilnost , skupina in stanje .
Kot prikazuje Tabela 36 , šteje večina verig do 10 sinsetov , več kot to jih ima samo 7 % verig , pri čemer imajo najdaljše tri 16 vozlišč ( npr. veriga med telica - entiteta : telica -> krava -> govedo -> prazen -> prazen -> prazen -> sodoprsti kopitar -> kopitar -> višji sesalec -> sesalec -> vretenčar -> strunar -> žival -> organizem -> živo bitje -> stvar -> entiteta ) .
Dvojezični viri v prvem in zadnjem pristopu so bili strukturirani in tako bolj neposredno uporabni za prevajanje sinsetov v slovenščino , pri korpusnem pristopu pa je bilo potrebnih kar precej predhodnih korakov , da sem dobila večjezične leksikone , ki sem jih nato uporabila za prevajanje sinsetov .
6.5.2 Primerjava pristopov glede na zahtevnost izvedbe Slovarski in enciklopedični pristop sta preprostejša zaradi tipa uporabljenih virov , pa tudi zaradi neposrednega avtomatskega prevajanja sinsetov v slovenščino , ki ne vključuje faze razreševanja večpomenskosti .
V slovarskem pristopu je zato prišlo do ogromne količine napak , ki sem jih odpravila z ročnim pregledom sinsetov , v enciklopedičnem pristopu pa razreševanje večpomenskosti niti ni bilo potrebno , ker sem se omejila samo na prevajanje enopomenskih literalov iz PWN .
Pri korpusnem pristopu sem večpomenskost razrešila na podlagi večjezičnih leksikonov in wordnetov ter s tem bistveno izboljšala kvaliteto avtomatsko generiranih sinsetov .
6.5.3 Primerjava pristopov glede na dobljen nabor pojmov V slovarskem pristopu sem se omejila na prevajanje osnovnega nabora pojmov , večinoma splošni sinseti so bili rezultat tudi korpusnega pristopa .
Čeprav uporabljen korpus ni bil splošen , je pristop dal večinoma splošne sinsete zato , ker sem pri razreševanju večpomenskosti uporabila wordnete iz skupine BalkaNet , ki vsebujejo predvsem splošne pojme .
Z enciklopedičnim pristopom sem dobila izrazito specifične pojme , večinoma s področja biologije .
6.5.4 Primerjava pristopov glede na besedno vrsto dobljenih sinsetov Slovarski pristop je dal največ raznolikih sinsetov glede na besedno vrsto , ki ji pripadajo , saj uporabljen slovar dobro pokriva vse besedne vrste .
V korpusnem pristopu so prevladovali samostalniki , ker je označevanje in poravnava korpusa na ravni besed najuspešnejše zanje , čeprav je bilo generiranih tudi kar nekaj glagolskih in pridevniških sinsetov .
Enciklopedični pristop pa je prispeval skoraj izključno samostalniške sinsete , saj uporabljeni viri vsebujejo predvsem samostalniške pojme .
6.5.5 Primerjava pristopov glede na število dobljenih sinsetov Po številu generiranih sinsetov močno izstopa enciklopedični vir , s katerim sem dobila veliko večji nabor sinsetov kot z ostalima pristopoma .
S korpusnim pristopom bi lahko dobila več sinsetov , če bi bili uporabljeni wordneti večji , saj je bila velikost leksikonov zadovoljiva , s slovarskim pa sem se že v začetku omejila na prevajanje le najosnovnejših pojmov , saj je zaradi nenatančnega avtomatskega prevajanja količina potrebnega ročnega dela precejšnja .
6.5.6 Primerjava pristopov glede na kvaliteto dobljenih sinsetov Kar se kvalitete izdelanih sinsetov tiče , je prav tako najuspešnejši enciklopedični pristop , ki glede na ročno pregledan vzorec wordneta presega 90 %.
S korpusnim pristopom sem z najuspešnejšo jezikovno kombinacijo dosegla 75 % natančnost , kar je sicer manj kot pri enciklopedičnem , vendar je treba poudariti , da korpusni pristop vključuje tudi večpomenske besede , zato je bilo pričakovati nekoliko slabše rezultate .
Slovarski pristop pa je najmanj natančen , in sicer 40 % , kar pomeni , da je bilo na roke potrebno popraviti večino sinsetov .
Ker izdelan wordnet vsebuje predvsem samostalnike , sem preverila , do katere mere pokriva te , ki se pojavljajo v korpusu .
Pokritje enobesednih samostalnikov v korpusu jos100k Kot prikazuje Tabela 37 , je v korpusu jos100k 8.297 različnih samostalniških lem ; 33 % je lastnih imen , preostalo so občni samostalniki .
Slika 33 kaže , da izdelan wordnet vsebuje 30 % enobesednih samostalnikov iz korpusa JOS .
Med njimi je le 158 lastnih imen , preostali so občni samostalniki ( 2.301 ) .
Lastna imena so večinoma enopomenska , občni samostalniki pa tako eno - kot večpomenski .
Pokritje občnih samostalnikov v jos100k glede na št. pomenov Jasnejšo sliko o večpomenskih literalih daje Tabela 38 , iz katere je razvidno , da ima 75 % večpomenskih samostalnikov po dva ali tri pomene , literali z več kot petimi pomeni so redki ( 6 %).
Največ pomenov ima literal položaj , ki se pojavlja v 15 sinsetih .
Pogosti samostalniki iz korpusa so v sloWNetu zelo dobro zastopani .
Pokritje enobesednih samostalnikov v jos100k glede na št. pojavitev 6.7 Pokritje pomenov iz korpusa v wordnetu Po preverjanju pokritosti besedišča v korpusu me je še zanimalo , ali sloWNet za tiste samostalnike iz korpusa , ki jih pokriva , vsebuje ustrezne pomene , ki bi jim jih lahko pripisali ročno ali avtomatsko .
Kot kaže tabela , imajo redkejše besede v korpusu tudi manj pomenov v sloWNetu .
Največ pomenov ima beseda pot ( 9 ) .
V četrtem stolpcu je število sinsetov , v katerih se iskana beseda pojavi zaradi napake v sloWNetu .
Pri avtomatskem generiranju wordneta je prišlo do napak pri razreševanju večpomenskosti besed pot in znamka , ki sta poleg pravilnih sinsetov pristali tudi v enem oz. dveh napačnih .
Določanje pomena izbranim večpomenskim besedam v korpusu Peti stolpec vsebuje število pomenov , ki se v korpusu pojavijo , v sloWNetu pa jih ni , kar pomeni , da v teh primerih besedam niti ročno , kaj šele avtomatsko ne bi mogla določiti pravega pomena .
Predzadnji stolpec vsebuje informacije o tem , koliko pomenov iz sloWNeta se v korpusu za iskane besede sploh ne pojavi , zadnji pa prikazuje , za katere besede sloWNet vsebuje najpogostejši pomen iz korpusa .
Celotna podatkovna zbirka sloWNet je v formatu xml pod licenco Creative Commons29 prosto dostopen v raziskovalne namene , brskanje po sloWnetu pa je na internetu omogočeno s klientom DEBVisDic .
Več informacij o namestitvi klienta , strežniku , uporabniškem imenu in geslu je na spletni strani .
Semantične konkordance so nepogrešljiv vir za avtomatsko razreševanje večpomenskosti , prav tako pa koristijo pri učenju besedišča v tujem jeziku , proučevanju pogostosti in sopojavljanju posameznih pomenov .
Poskus bo prav tako služil kot uvodna študija v veliko obsežnejše označevanje korpusa jos100k , rezultat katerega bo prvi prosto dostopen korpus za slovenščino , ki je označen na pomenski ravni in ga bo mogoče uporabiti za jezikoslovno analizo semantičnih konkordanc in kot učno množico za jezikovnotehnološke aplikacije .
7.1 Sorodne raziskave Eden prvih poskusov semantičnega označevanja s pomočjo WordNeta je bilo ročno označevanje konkordanc iz korpusa Brown ( Miller idr. 1994 ) , ki naj bi služil kot učna množica za kasnejše avtomatsko označevanje .
Ker pa je ročno semantično označevanje izjemno zahtevno in dolgotrajno in ker so semantično označeni predvsem angleški korpusi , so tovrstne vire za druge jezike z avtomatskimi pristopi skušali pridobiti s pomočjo besedno poravnanih vzporednih korpusov .
Rezultat ciljnega označevanja so označene datoteke , ki so neposredno uporabne za učenje avtomatskega razreševanja večpomenskosti .
Pri sekvenčnem semantičnem označevanju pa izhajamo iz korpusa , v katerem želimo vsem besedam pripisati pomen iz leksikona .
Pri poskusu označevanja korpusa , ki ga opisujem v nadaljevanju , jos100k sem uporabila ciljno označevanje in v njem označila vse pojavitve izbranih besed , ki v slovenskem wordnetu že obstajajo .
S tem želim preveriti prekrivanje pomenov teh besed v korpusu in wordnetu ter preizkusiti uporabnost izdelanega leksikona za semantično označevanje .
7.2 Opis postopka označevanja Ker nobena aplikacija za avtomatsko razreševanje večpomenskosti in določanje pomena za slovenščino zaenkrat še ni na voljo , sem se odločila , da besedam v korpusu pomen glede na izdelan wordnet pripišemo ročno .
Zaradi večje zanesljivosti rezultatov je projekt potekal v dveh ločenih skupinah , njihove rezultate pa sem na koncu primerjala in združila .
Glede na izkušnje drugih raziskovalnih skupin je označevanje pomenov najbolje izvajati v kombinaciji z izpopolnjevanjem wordneta .
Shematski prikaz postopka označevanja prikazuje Slika 36.
Tabela poleg frekvenc v korpusu vsebuje tudi podatke o številu pomenov , ki jih imajo izbrane besede v avtomatsko generiranem sloWNetu .
Pričakujem , da je pripisovanje pomena besedam v korpusu tem težje , čim več pomenov le-te vsebujejo v wordnetu .
Če je bila beseda del večbesedne zveze , ki jo wordnet vsebuje , tega primera v nabor konkordanc za označevanje nisem vključila , ker večbesedne zveze ponavadi niso večpomenske in jim je zato pripisovanje pomena precej lažje ( npr. kadar se beseda delavec v korpusu pojavi v kolokaciji kvalificiran delavec , ta stavek ni bil zajet v ročno označevanje , saj ta literal obstaja v wordnetu in je hkrati tudi enopomenski , tako da je določanje pomena te večbesedne zveze neproblematično in ni bilo zajeto v ročno označevanje ) .
Je pa verjetno , da se med izvoženimi konkordancami znajde pojavitev besede , ki je del večbesedne zveze , ki je wordnet zaenkrat še ne vsebuje , vendar bi jo moral .
Vsaka skupina je imela dostop do svoje kopije wordneta , tako da popravkov druge skupine niso videli , ko so delo končali , pa sem primerjala in združila popravke obeh skupin .
V tem delu naloge so študentje morali pregledati vse sinsete , v katerih se njihova beseda pojavlja ( vse pomene te besede ) , pa tudi vse večbesedne zveze , v katerih se njihova beseda v wordnetu pojavlja ( ponavadi , ne pa vedno , v vlogi podpomenke dodeljene besede ) .
Poleg tega so morali preveriti , ali je kateri od nadrejenih sinsetov ( nadpomenk ) za besedo , ki jim je bila dodeljena , prazen in te zapolniti z ustreznimi slovenskimi literali .
Če so v sinsetu našli literal , ki tja ne sodi , so ga izbrisali , če pa so ugotovili , da v sinsetu nek literal manjka , so ga dodali in v wordnet vnesli tudi vir , v katerem so literal našli .
7.2.3 Označevanje korpusa Pregledovanju wordneta je sledilo označevanje besed v korpusu .
Če so študentje za manjkajočo večbesedno zvezo našli ustrezen pojem , so ga dodali v slovenski wordnet in ga uporabili za označevanje večbesedne zveze v korpusu ( npr. večbesedna zveza javna hiša , ki se pojavi v korpusu in nima ustreznice v sloWNetu , vendar pojem zanjo v njem obstaja , zato ga je zgolj potrebno izpolniti ) .
V nasprotnem pomenu pa so označili le posamezno besedo s splošnejšim pomenom , ki v wordnetu obstaja ( npr. večbesedna zveza enopartijski sistem , za katerega v angleškem wordnetu ne obstaja noben ustrezen pojem , zato ga tudi v slovenski wordnet ni bilo mogoče dodati .
V primeru razhajanj pa sem popravke v wordnetu , ki jih je predlagal samo en označevalec , preverila in potrdila , različno označene pomene besed v korpusu pa združila in pripravila za tretjega označevalca , ki bo v nadaljevanju projekta razlike pregledal in med njimi izbral najustreznejši pomen .
7.3 Analiza rezultatov 7.3.1 Popravljanje sloWNeta Primerjava popravljenih različic wordnetov pokaže , da je v njih 70 sinsetov , ki sta jih spremenila po dva študenta , in 360 takšnih , ki so bili spremenjeni le enkrat .
Večino sprememb predstavlja dodajanje novih sinsetov , ki med avtomatskim generiranjem wordneta niso bili ustvarjeni .
Spremembe , ki so jih v sloWNet vnesli študentje Tabela 41 pokaže , da je bilo tudi pri popravljanju sinsetov veliko več dodajanja literalov kot brisanja , kar pomeni , da v avtomatsko generiranih sinsetih sopomenke manjkajo , vendar je natančnost ustvarjenih sinsetov dobra .
Skupno število dodanih literalov v obstoječe sinsete v obeh različicah sloWNeta je 56 , v samo eni pa 90 , medtem ko skupno število izbrisanih literalov v obeh sloWNetih znaša 20 in 47 v enem .
Obe skupini sta pogostejšim besedam pripisali več različnih pomenom kot redkejšim , kar je skladno z znano lastnostjo besed , da so najpogostejše besede hkrati tudi najbolj večpomenske .
Glede na to , da so drugega iz sloWNetu celo izbrisali , je jasno , da ne gre za pomen besede , ki je v korpusu nerealiziran , temveč za napako pri generiranju wordneta .
Po en označevalec je z manj različnimi pomeni od izhodiščnih označil še pojavitve besede roka , za katero je izbral dva pomena od štirih , ki so bili na voljo , ter besedo sodišče , kjer je za vse pojavitve besede v korpusu izbral isti pomen .
Glede na to , da je drugi označevalec za obe besedi posegal po precej večjem številu pomenov , gre najverjetneje za napake pri semantičnem označevanju korpusa , ne napake v wordnetu .
Enako število izhodiščnih in uporabljenih pomenov pri obeh označevalcih ima beseda mesec , po en označevalec pa je enako število pomenov uporabil še za besedi uporaba in trg .
Drug označevalec je za ti besedi uporabil več pomenov .
7.3.2.2 Število neuporabljenih in število dodanih pomenov Zanimalo me je tudi , koliko pomenov , ki so bili za izbrane besede na voljo v izdelanem sloWNetu , označevalci sploh niso uporabili .
Primerjava pokaže , da je v prvi skupini takih besed , pri kateri niso bili uporabljeni vsi izhodiščni pomeni , devet , v drugi skupini poleg teh devetih še dva ( Tabela 43 ) .
Skupno število neuporabljenih pomenov je pri prvi skupini označevalcev 16 , v drugi pa 17.
Največji delež ( 75 %) neuporabljenih izhodiščnih pomenov ima beseda sodišče .
Pregled teh sinsetov v wordnetu pokaže , da so ostali neuporabljeni povsem upravičeno , saj ti sinseti besedo sodišče vsebujejo zaradi napak pri avtomatskem razreševanju večpomenskosti angleške besede court ( 1 : a yard wholly or partly surrounded by walls or buildings – pravilen prevod se glasi dvorišče in 2 : the sovereign and his advisers who are the governing power of a state ter 3 : the family and retinue of a sovereign or prince – pravilen prevod je dvor ) .
Podobne napake se v wordnetu pojavijo še za pet drugih besed , skupno število napak za vse pomene teh besed pa je devet in so jih študentje v wordnetu že odpravili .
Primerjava med neuporabljenimi in dodatnimi pomeni Sicer ustrezne pomene v wordnetu , ki se v korpusu ne pojavijo , ima sedem besed , skupaj je takšnih pomenov 12.
Število besed , za katere so vsaj en pomen dodali označevalci v obeh skupinah , je 12 , skupno število dodanih pomenov pa je 44 v prvi skupini in 52 v drugi .
Razveseljiv je podatek , da je sloWNet že vseboval najpogosteje pripisane pomene za vseh 20 besed , kar pomeni , da so v njem osnovni pomeni dobro zastopani .
Največji delež dodanih pomenov ( 80 %) med vsemi uporabljenimi ima beseda šola .
Pri pojavitvah šole v korpusu so označevalci dodali 1 pomen besede šola , ki je v sloWNetu manjkal ( an educational institution ) ter 3 večbesedne zveze , ki so jih našli v korpusu ( glasbena šola , osnovna šola in srednja šola ) .
Pregled dodanih pomenov pokaže , da so študentje v 6 primerih dodali popolnoma napačen pomen , 12 besedam so dodali manjkajoče pomene ( skupaj 17 pomenov ) , pri 14 besedah so naleteli na manjkajoče večpomenske izraze in jih dodali v sloWNet ( skupaj 40 večbesednih zvez ) , pri 3 besedah pa so posamezne pojavitve ostale neoznačene , ker študentom v wordnetu ni uspelo identificirati nobenega ustreznega pomena zanje ( skupaj 4 pojavitve ) .
Iz te analize je mogoče zaključiti , da je s sloWNetom mogoče označiti skoraj vse pojavitve večpomenskih besed v korpusu , težave po povzročajo kulturno-specifični pojmi , ki jih v tujejezičnem viru ni in jih z avtomatskimi metodami zato tudi ni bilo mogoče izdelati za slovenščino .
Pri označevanju korpusa se je izkazalo , da je bila večina potrebnih pomenov že v wordnetu , kar je razveseljivo .
Da je priklic , dosežen z uporabljenimi pristopi , nižji od njihove natančnosti , pa potrjuje podatek , da so študentje dodali nekaj nesrediščnih pomenov za posamezne besede in precejšnje število večbesednih zvez .
7.3.2.3 Ujemanje med označevalci in najpogostejši pomen Primerjava označenih datotek obeh skupin označevalcev , ki jih vsebuje Tabela 44 , pokaže , da se pripisani pomeni med enim in drugim označevalcem precej razlikujejo , saj je povprečna stopnja ujemanja med označevalci 73,40 %.
Rezultati označevanja izbranih besed v korpusu Zelo visoka stopnja ujemanja ( nad 90 %) je še za besede člen , cesta in oče , ki imajo le po enega ali dva izhodiščna pomena in med dvema in petimi uporabljenimi pomeni .
Primerjava stopnje ujemanja med označevalcema in številom pomenov označenih besed pokaže , da je ujemanje tem manjše , čim več ima beseda pomenov , kot sem že sprva predvidevala .
Pri besedi oče so pri enem označevalcu s pomenom starš označene vse pojavitve v korpusu razen ene , ki je ostala neoznačena .
Drug označevalec je besedo oče drugače označil v dveh primerih .
Manj kot polovico pojavitev so v prvi skupini z najpogostejšim pomenom označili pri šestih besedah , v drugi pa pri petih , skupne so tri : družba , stran in trg .
Večinoma imajo besede , ki so bile označene z majhnim številom različnih pomenov , izrazito prevladujoč delež pojavitev z najpogostejšim pomenom .
Vendar kljub temu drži , da se izbrane besede v korpusu večinoma pojavljajo z enim prevladujočim pomenom , ostali pomeni pa so redki .
Pregled označenih datotek pokaže , da to velja za vse primere razen za besedo predstavnik , ki je bil označen s petimi različnimi pomeni .
Prvi označevalec je največkrat izbral pomen zastopnik ( ang. agent : a representative who acts on behalf of other persons or organizations ) , drugi pa splošnejši pomen predstavnika ( ang. representative : a person who represents others ) , ki je v resnici neposredna nadpomenka prejšnjega , razlika med izbranima pomenoma pa ni velika , zato sta študenta najverjetneje imela težave s preveč natančno razdeljenimi pomeni v wordnetu .
Označevalci pri svojem delu naletijo na težave , kadar zaradi preveč podrobne razdelitve pomenov v wordnetu ne morejo ločiti med njimi in izbrati pravega .
Podatek , da je število dejansko uporabljenih pomenov v označenih datotekah večje od števila pomenov , ki so bili sprva na voljo v avtomatsko izdelanem wordnetu , dokazuje , da sem s kombinacijo pristopov , opisanih v tej disertaciji , pridobila nepopoln vir , ki ga bo za uspešno rabo wordneta v praksi potrebno izboljšati in ga dopolniti s pomeni , ki se v korpusni analizi izkažejo za relevantne .
Po drugi strani pa analiza neuporabljenih pomenov iz izdelanega wordneta pokaže , da neustreznih pomenov v wordnetu ni bilo generiranih veliko in da je natančnost izdelanih sinsetov velika , kar je vsekakor dobra novica za vse njegove potencialne uporabnike .
8 Zaključek Ker je izdelava obsežnih semantičnih podatkovnih zbirk , ki zajemajo tudi splošno besedišče in so uporabne za širok spekter jezikoslovnih raziskav in aplikacij , zelo dolgotrajna in draga , sem v disertaciji predlagala model , s katerim je postopek mogoče avtomatizirati in pospešiti .
Pristop temelji na večjezičnih virih , kot so slovarji , tezavri , enciklopedije in vzporedni korpusi ter že obstoječi wordneti za druge jezike .
Prenosljivost strukture leksikona iz enega jezika v drugega ter jezikovno neodvisnost pojmov sem preverila na referenčnem korpusu slovenskega jezika , pri čemer sem razpoznala možne probleme , na katere lahko naletimo z razširitvenim modelom .
Prednost prvega pristopa , v katerem sem sinsete prevedla s pomočjo dvojezičnega slovarja , je preprostost uporabe in visok priklic , njegova glavna slabost pa visoka vsebnost napak , ki so nastale zaradi pomanjkanja razreševanja večpomenskosti slovarskih iztočnic .
Rezultati so bili veliko boljši kot pri prejšnjem pristopu , največja problema korpusnega pristopa pa sta velika količina potrebnega jezikovnega znanja in zahtevno predprocesiranje korpusa .
S tega stališča je bil precej učinkovitejši zadnji pristop , v katerem sem iz enciklopedičnih virov pridobila širok nabor področno specifičnih pojmov , ki hkrati vključujejo tudi ogromno večbesednih izrazov , ki jih nisem zajela z nobenim od prejšnjih pristopov .
Sinsete , pridobljene v posameznih pristopih , sem združila in strukturirala v format xml ter izdelano leksikalno zbirko naložila v urejevalnik DEBVisDic , v katerem je mogoče iskati po sinsetih , jih popravljati in dodajati nove .
Izdelano zbirko sem analizirala in primerjala z wordneti za druge jezike , kakovost sinsetov pa sem ovrednotila avtomatsko in ročno .
Rezultat doktorske disertacije je tako utemeljena in preizkušena metodologija avtomatske izdelave semantičnega leksikona za slovenščino in prva različica sloWNeta , semantične mreže slovenskega besedišča , predvsem samostalnikov , vendar tudi nekaterih glagolov ter pridevnikov , ki je poravnana z wordneti za številne druge jezike in tako uporabna za eno - in večjezične računalniške aplikacije .
Čeprav so semantični leksikoni tipa wordnet zelo priljubljeni , so raziskovalci pri njihovi uporabi naleteli tudi na številne težave .
Z razširitvenim modelom veliko teh napak prenašamo tudi v wordnete v drugih jezikih , ki temeljijo na PWN , zato se je omejitev pristopa treba vselej zavedati in se oddaljiti od izvorne strukture , kadar je potrebno .
Iz nje je z analizo enciklopedičnih člankov in izkoriščanjem strukturnih informacij ter z uporabo najsodobnejših pristopov za razreševanje večpomenskosti mogoče pridobiti še ogromno večpomenskih izrazov , z luščenjem leksikalno-semantičnih vzorcev pa prepoznati pomenska razmerja , ki veljajo med njimi , in jih na podlagi tega strukturirati v mrežo .
Obstoječ leksikon bi bilo zelo dobro dopolniti s slovenskimi razlagami pojmov in primeri rabe , ki bi bili vzeti iz referenčnega korpusa , izdelan wordnet pa bi bilo koristno obogatiti še z drugimi pomenskimi razmerji , kot so jezikovno odvisna derivacijska razmerja in druge netaksonomske relacije , ki so za računalniške aplikacije zelo dragocen vir , vendar so v sloWNetu zaenkrat slabo zastopane .
Projekt , v katerem bomo v sodelovanju s kolegi z Madžarske akademije znanosti v Budimpešti wordnet preizkusili za izboljšanje strojnega prevajanja , že teče , prav tako pa smo tudi sredi semantičnega označevanja korpusa jos100k s pomeni iz wordneta .
Izdelan vir bo prvi korpus za slovenščino , ki bo pomensko označen in ga bo mogoče uporabiti tako za korpusne študije kot tudi za referenčni vir ali učno množico v računalniških aplikacijah .
POVZETEK V pričujočem delu smo zasnovali in implementirali zbirko orodji s področja lematizacije besedil v poljubnih jezikih .
Iz množice primerov že lematiziranih besed ter iz besedil , ki jih želimo lematizirati .
Naš končni cilj je seveda lematizacija teh besedil .
Celoten sistem smo razdelili na tri sklope , ki predstavljajo zaključene modularne enote .
V prvem koraku vzamemo množico primerov lematiziranih besed in se na njej naučimo pravil , ki kar najbolje opisujejo njihovo lematizacijo .
Ta pravila so predstavljena v obliki RDR dreves .
V zadnjem koraku ta lematizator uporabimo za lematizacijo izhodiščnih besedil .
Testiranje na velikih večjezičnih leksikonih Multext in Multext-East je pokazalo izboljšanje hitrosti in točnosti lematizatorja .
Naredili pa smo tudi aplikacijo na agencijskih novicah , ki služijo kot vhod metodi odkrivanja znanj iz besedil .
Uporablja se predvsem na področju klasifikacije ter iskanja besedil .
Čeprav smo se primarno ukvarjali s slovenščino , je možno vsa dognanja iz tega dela , uporabljati tudi na drugih jezikih .
V različnih jezikih so leme za različne besedne vrste različno določene .
Primer jezika z nizko stopnjo pregibnosti je angleščina , kjer imajo besede po večini le nekaj oblik .
Postopki , s katerimi se ukvarjamo v tem delu , so primerni le za jezike s takšnim tipom pregibanja .
V tej diplomi se s krnjenjem sicer ne ukvarjamo , vendar je možno vse postopke brez prilagoditev uporabiti tudi v ta namen .
Tipična primera uporabe lematizacije sta spletni iskalnik ter odkrivanje znanj v besedilih .
V teh primerih gre za klasičen problem iskanja ključnih besed neke spletne strani oz. dokumenta .
Najpreprostejši način iskanja ključnih besed je izbira statistično najpogostejših besed .
Za večino ostalih jezikov , predvsem takih z večjo pregibnostjo , pa se raziskave še niso zaključile .
Med te jezike spada tudi slovenščina .
V ta namen uporabimo nek postopek strojnega učenja [ 8 ] , katerega na množici že lematiziranih besed naučimo lematizacije .
RDR sta predlagala Compton in Jansen upoštevajoč njune izkušnje z vzdrževanjem ekspertnega sistema GARVAN-ES1 [ 3 ] .
Sistem se je naučil znanja na začetni množici primerov , ko pa so bili na voljo novi , je sistem preveril njihovo klasifikacijo .
Če primer ustreza pogoju A in B potem algoritem vrne sklep C , razen če primer izpolnjuje tudi pogoj D , takrat vrne sklep E. Če pogoj A in B ni izpolnjen , potem algoritem preveri naslednji pogoj F in D. Če je ta pogoj izpolnjen , potem vrne sklep H. V splošnem je koren drevesa pravilo brez pogojev in ga prožijo ( angl. fire ) vsi primeri .
Algoritem iskanja pravila opisuje koda 1.1.
Pri učenju je postopek pravzaprav zelo podoben .
Če je klasifikacija tega pravila ustrezna , potem ne naredimo nič , v nasprotnem primeru pa dodamo izjemo z dodatnimi lastnostmi tega učnega primera .
V domeni lematizacije so primeri kar morfološke oblike besed .
Zgledi primerov z lemami ter pripadajočimi razredi so podani v primeru 1.3. ?
Pogoj pravila je končnica ( angl. suffix ) , s katero se mora končati beseda , da proži to pravilo .
Iskalna funkcija iz kode 1.1 tako le primerja končnice besed s pogoji pravil .
V tem trenutku še ne moremo natančno opisati postopka učenja drevesa , podajamo pa primer RDR drevesa v domeni lematizacije ( primer 1.4 ) .
Drevo je bilo generirano z algoritmom [ 12 ] , ki je sicer bolj podrobno opredeljen v poglavju ( 4.2 Osnovni algoritem ) .
Primer je reprezentativen in se nanj v nadaljnjih poglavjih pogosto sklicujemo , zato omenimo še , da je bil naučen na 10 označenih besedah primera 5.1.
Te besede niso bile izbrane naključno , ampak smo jih skrbno določili tako , da lahko kljub izredno majhnemu drevesu pokažemo čim več njegovih lastnosti .
Ključna beseda [ RULE : ] začne vsako pravilo .
Njegova naloga je odkrivanje znanj v besedilih in na podlagi tega gradnja ontologij .
Kot pri vseh metodah odkrivanja znanj iz besedil je tudi pri Ontogenu poglavitnega pomena pravilno zaznavanje ključnih besed .
V želji dobiti čim boljše rezultate je bilo zato potrebno narediti predhodno lematizacijo besedil , saj Ontogen še ni vseboval podatkov za lematizacijo slovenščine .
Razviti moduli , pripadajoča izvorna koda ter ostale elektronske priloge so prosto dostopne , njihov opis pa podaja poglavje " Priloge B " .
1.6 STRUKTURA DIPLOMSKEGA DELA Diploma strukturno sledi sklopom oz. modulom sistema , ki smo ga izdelali .
Uvodu sledijo tri poglavja , ki se neposredno navezujejo na tri glavne sklope .
Poglavje " Učenje RDR pravil " razloži implementacijo gradnje RDR pravil predlagane v [ 12 ] vendar na malo drugačen , izboljšan način .
V poglavju z rezultati podamo primerjavo algoritmov učenja in lematizacije ter pokažemo na razlike med različnimi jeziki .
V drugem delu tega poglavja predstavimo tudi aplikacijo naučenega lematizatorja na našem začetnem problemu analize agencijskih novic .
Diplomo zaključimo s povzetkom in pregledom možnosti za nadaljnje delo .
Avtorji v članku razmeroma zadovoljivo rešijo problem učenja RDR pravil iz primerov .
V poglavju ( 1.3 Metodologija RDR , 1.4 RDR v domeni lematizacije ) je razloženo , na kakšen način učni algoritem pridobiva novo znanje iz primerov .
Za ta namen je bil razvit preprost algoritem , ki tekstovno predstavitev drevesa pravil neposredno pretvori v kodo programskega jezika c++ .
V pomnilniku naj bo struktura vidna kot en sam povezan blok .
ZGOŠČEVALNA TABELA Za prvo varianto je potrebno pravila iz drevesne oblike spremeniti v zgoščeno ( angl. hash ) tabelo .
Indeksi pravil so v tabeli , po neki zgoščevalni funkciji , določeni na podlagi pogoja pravila , torej končnice besed .
Algoritem iskanja pravega pravila nato uporablja lastnost RDR , da je za določeno besedo vedno proženo tisto pravilo , katerega pogoj je najbolj specifičen tj. končnica besede je najdaljša .
V nasprotnem primeru pa iz končnice izbrišemo prvo črko in ponovimo postopek .
Algoritem se zagotovo ustavi , ko iskana končnica ne vsebuje več nobene črke .
POPRAVLJENO RDR DREVO Drugi način iskanja temelji na obratnem postopku .
Dokler še najdemo kakšno izjemo , ki ustreza naši besedi , se premikamo čedalje globlje po vozliščih drevesa .
To je pravzaprav natanko princip iskanja , po katerem dela učni algoritem RDR ( koda 1.1 ) .
Po definiciji je vedno potrebno iskati izjeme pravila po vrsti od prvega proti zadnjemu , to pa zato , ker lahko med danimi izjemami več njih ustreza trenutni iskani besedi .
Vejanje zmanjšamo na maksimalno toliko , kot je črk v abecedi jezika .
Primer 2.1 prikazuje na zgornji način popravljeno RDR drevo iz primera 1.4.
Poglavitne spremembe so npr. dodano novo vozlišče s končnico " mo " ter dodana izjema v vozlišče " i " .
Zgled tega je ureditev vozlišč po dodani črki .
Tako preverimo vsakič zgolj en pogoj , ne glede na to , koliko izjem ima pravilo .
Pri drugi metodi pa v povprečju napredujemo po besedi nazaj za več kot eno črko .
Vse besede , ki prožijo to pravilo , se morajo končati s to končnico .
KN trenutnega vozlišča je torej stik DK vseh vozlišč na poti od korena do tega vozlišča [ KNi = DKi • DKi-1 • …
o DK ( pravila 1.2 ) = ' l ' o DK ( pravila 1.3 ) = ' mo ' o DK ( pravila 1.3.1 ) = ' še ' ?
Dodana črka ( DČ ) je zadnja črka dodane končnice .
Podaljšana končnica ( PK ) je prvi del dodane končnice brez zadnje črke .
Popravljeno RDR drevo ) napisali , da se KN v optimiziranem drevesu v vsakem vejanju podaljša za natančno eno črko , temu ni čisto tako .
o PK ( pravila 1.2 ) = " o PK ( pravila 1.3 ) = ' m ' o PK ( pravila 1.3.1 ) = ' š ' Bolj nazorno so zgornji pojmi prikazani v primeru 2.2. 2.3.2 STRUKTURA Sledi definicija strukture za predstavitev optimiziranih RDR dreves .
Tip 0 : Vozlišče tipa 0 je pravzaprav pravilo oz. transformacija , kako popraviti končnico besede , da dobimo lemo .
Podatki : o kazalec na tip 0 , ki ga vrnemo , če beseda ne ustreza nobeni izjemi tega vozlišča o definicija zgoščevalne funkcije o zgoščevalna tabela naslednikov ( izjem ) tega vozlišča ?
Tip 3 : Kot tip 2 le , da vsebuje še pogoj podaljšane končnice : o kazalec na tip 0 , ki ga vrnemo , če je pogoj podaljšane končnice izpolnjen in če beseda ne ustreza nobeni izjemi tega vozlišča o dolžina podaljšane končnice o podaljšana končnica o definicija zgoščevalne funkcije o zgoščevalna tabela naslednikov tega vozlišča 2.3.3 ALGORITEM Algoritem je v osnovi zelo enostaven .
Njegova naloga je sprehod po drevesu do tistega vozlišča , ki ga proži določena beseda .
Najpomembnejši nalogi med iskanjem proženega pravila sta preverjanje podaljšanih končnic in iskanje izjem trenutnega pravila .
V slednjem pa se trenutno vozlišče proži , zato uporabimo njegovo pravilo .
Brez te zahteve bi bila realizacija z objekti in kazalci sicer preprostejša , a bi izgubili nekaj zgoraj naštetih lepih lastnosti .
Algoritem za lematizacijo se namreč sprehaja po serializiranem toku podatkov in ga sproti interpretira .
Oblika toka podatkov , za katerega smo se odločili , je niz bajtov ( angl. byte ) .
Osnovna enota bajt nudi najboljši kompromis med hitrostjo izvajanja in velikostjo strukture , čeprav so določeni podatki manjši , npr. podatek o tipu zavzema le 4 bite .
Problem se pojavi zelo redko in še to pri jezikih , katerim RDR lematizacija naravno ne ustreza in se drevo napihne .
Serializacija vozlišč določi , kako se zakodirajo podatki samega vozlišča .
To je edini način , da lahko zagotovimo enolično prepoznavanje vozlišča .
Tip 1 ima poleg tega še podatek o podaljšani končnici , 2 zgoščevalno tabelo izjem pravila , 3 pa oboje .
Zadnji podatek v vrstici odmik je položaj naslednjega vozlišča glede na trenutnega , lahko ga pa interpretiramo tudi kot dolžino celotnega vozlišča izraženo v bajtih .
Vozlišče tipa 0 je pravzaprav pravilo o transformaciji besede v lemo .
Vsako vozlišče drugega tipa mora imeti kazalec na eno vozlišče tipa 0.
Seznam pravil zgradimo enostavno tako , da obiščemo vsa vozlišča in če naletimo na pravilo , ki ga še ni v seznamu , ga dodamo .
Postopek kodiranja drevesa je prikazan v primeru 2.3 in si zasluži natančnejšo obrazložitev : o V prvem koraku vidimo originalno RDR drevo iz primera 2.1. o Najprej generiramo seznam pravil .
Vsa tista vozlišča , katera nosijo zgolj informacijo o transformaciji besede v lemo ( 1.1.1 , 1.1.2 , 1.1.3 , 1.2 ) , lahko iz drevesa odstranimo in njihovim nadrejenim vozliščem spremenimo kazalec na zapis v seznamu pravil .
o Končni rezultat koraka 5 je tabela , ki predstavlja izhodiščno drevo .
o Na diagramu predstavljajo neprekinjene črne puščice tiste kazalce , ki izvirajo iz zgoščevalnih tabel , prekinjene modre pa tiste , ki kažejo na privzeto pravilo vozlišča ( označeno z n ( p ) v tabeli 2.1 ) .
Zgoščevalna tabela je v bistvu tabela kazalcev na izjeme trenutnega vozlišča .
Vsak zapis tabele tako vsebuje tudi DČ , kateri ustreza izjema .
Drugi podatek je naslov vozlišča , ki ustreza tej izjemi .
V kolikor so ostale še kakšne nejasnosti v zvezi z našim postopkom kodiranja drevesa , navajamo v primeru 2.4 zgled , kako se serializira drevo iz primera 2.1.
Ta zgled je logično nadaljevanje primera 2.3 s tem , da tukaj uporabimo tudi pravila za kodiranje posameznih vozlišč .
Barvna shema je povzeta iz tabele 2.1 in s primerjavo lahko hitro identificiramo , za katere podatke gre .
Kadar želimo kodo strukture vključiti v program , se pojavi povečanje zgolj v velikosti izvornih datotek .
Zapis z bazo 10 je tukaj naveden kot korak prehoda iz primera 2.4 v bazo 16.
Kljub naštetim dobrim lastnostim serializacije pa se v tem primeru vidi tudi največja pomanjkljivost .
Kadar pride v tej tabeli do kakšne napake , jo je praktično nemogoče najti , saj take okvarjene strukture ne moremo interpretirati programsko .
V tabeli se to realizira tako , da se na koncu doda potrebno število ( od 0 do 7 ) podatkov velikosti enega bajta in se jih inicializra na 0.
2 Pravilo z večjo zaporedno številko je namreč v originalnem drevesu ležalo za tistim z nižjo , zato algoritem nikoli ne bi mogel dostopati do njega .
Algoritem je podan v kodi 2.2.
4-7 : Izhodiščno oz. korensko vozlišče se vedno nahaja na začetku tabele ( naslov 0 ) .
Inicializirati pa moramo tudi tip vozlišča in kazalec na črko LookChar , ki kaže na konec besede Word .
2.4.3 RAZRED V izvorni kodi se razred za lematizacijo imenuje RdrLemmatizer .
Spremenljivka abData je tabela bajtov serializiranega drevesa .
Funkcija ToStringHex v izhodni tok zapiše predstavitev drevesa , ki je primerna za vključitev v izvorno kodo programa ( koda 2.1 , baza 16 ) .
Vhod v program je datoteka človeku berljivih RDR pravil v dogovorjeni notaciji , izhod pa serializirana struktura lematizatorja v binarni datoteki oz. skupaj z algoritmom v obliki izvornih datotek lematizatorja .
Opis uporabe modula za gradnjo lematizatorjev LemBuild najdete v prilogi A. 3.1 ZAHTEVE Za izvedbo naloge smo zaradi želje po čim večji splošnosti rešitve sprejeli naslednje cilje : ?
Delovanje mora biti povsem enako , kot če bi lematizirali z izhodiščnim RDR drevesom pravil .
V primeru napake naj uporabniku poskuša čim bolj točno opredeliti mesto in izvor napake .
V splošnem prevajalnik sprejme kot vhod zapis programa v nekem programskem jeziku in izdela njegovo izvršilno kodo v jeziku stroja , za katerega prevaja .
Izhod je koda ( serializirano drevo ) , ki jo razume naš stroj tj. algoritem lematizatorja .
izdelava prvih dveh stopenj ( leksikalna ter sintaksna analiza ) s standardnimi orodji .
3.2 DOLOČITEV VHODNE DATOTEKE Naša želja je bila omogočiti uporabnikom programa čim svobodnejše oblikovanje vhodne datoteke .
Nekateri želijo imeti npr. čim bolj nazorno drevo z vmesnimi praznimi vrsticami ter črtami za nakazovanje hierarhije , drugim pa mogoče več pomeni velikost datoteke in želijo čim kompaktnejši zapis .
Oblika datoteke je tukaj podana le opisno , podrobnejšo definicijo pa podajata poglavji ( 3.3.1 Leksikalna analiza ) ter ( 3.3.2 Sintaksna analiza ) .
Osnovna enota vsake datoteke je eno pravilo ( angl. rule ) .
Pravila se vedno začnejo s ključno besedo " rule : " .
Sistem je zasnovan tako , da so vse ključne besede neodvisne od velikosti znakov , zato lahko napišemo tudi " Rule : " , " RulE : " ali morda " RULE : " , kakor nam je ljubše .
Vsako pravilo vsebuje vsaj dve obvezni lastnosti , končnico in transformacijo .
Ta seznam se mora zaključiti z znakom za konec seznama .
V okviru ene datoteke lahko uporabljamo poljubno število različnih slogov .
3.3.1 LEKSIKALNA ANALIZA Leksikalna analiza je prva stopnja prevajanja vhodne datoteke .
Naloga tega analizatorja je vhodno zaporedje znakov , ki jih zaporedoma bere iz datoteke , logično združiti v večje pomenske enote npr. ključne besede , številke , operatorje , komentarje …
Leksikalni analizator smo izdelali z orodjem Flex + + ( fast lexical analyzer generator c / c + + ) , ki je zasnovan na programu Flex in je spremenjen tako , da omogoča izdelavo kode za c++ .
Orodje omogoča avtomatsko pretvorbo definicije leksikalnega analizatorja v kodo razreda , ki ga implementira .
S tem izločimo veliko napak , ki so sicer neizogibne v tako dolgem programu .
Definicije leksemov sicer niso obvezne , saj lahko v pravilih direktno uporabljamo zaporedja znakov , vendar je tak pristop elegantnejši .
Koda 3.1 je v glavnem enostavno razumljiva , zato tukaj navajamo le najpomembnejše definicije : ?
Ključne besede : ( velikost znakov ni pomembna ) : o Začetek opisa pravila { Rule } ima le eno možno vrednost " rule : " .
?
Generirani leksikalni analizator deluje tako , da poskuša najti tisto definicijo , ki pokrije najdaljšo vrednost .
Analiza tako prepozna vse znake do prvega " r " , zaključi definicijo komentarja , skuša pokriti definicijo pravila " rule : " in če mu uspe , vrne pravilo , sicer pa komentar z vrednostjo " r " .
< RULE > je stanje , v katerem se nahajamo , ko skušamo sprejeti pravilo in njegove lastnosti .
Neprepoznan niz se izraža kot napaka ( vr .
3.3.2 SINTAKSNA ANALIZA Naloga sintaksne analize je združevati lekseme v večje pomenske enote ( stavke ) in tako zgraditi drevo izpeljav za celotno datoteko .
Sintaksni analizator dobiva lekseme neposredno od leksikalnega , izhod pa je v našem primeru kar vmesno drevo .
Kot zgled koristnosti takega orodja lahko navedemo , da v našem primeru Bison + + generira skoraj 2000 vrstic izvorne kode iz samo 200 vrstic dolge ter pregledne definicijske datoteke .
Začetek sintaksne analize datoteke se vedno začne pri stavčni obliki [ file ] ( vr .
[ rule ] je oblika , ki predstavlja natančno eno pravilo ( vr .
Tako sprejemamo vrednosti " rule : suf ( ' a ' ) trans ( ' a ' - > ' o ' ) ; " in tudi " rule : ( suf ( ' a ' ) trans ( ' a ' - > ' o ' ) );".
Vrstice od 6 do 10 opisujejo stavčne oblike za lastnosti [ id ] , [ if ] , [ then ] in [ exc ] .
Vrednost vseh lastnosti je lahko ali pa ni zaprta v oklepaje .
Vrednosti lastnosti so niz znakov [ string ] ( vr .
Primer 3.4 prikazuje začetek sintaksne analize neke datoteke pravil .
Tako se celotna drevesna hierarhična struktura stavčne oblike [ rule ] stisne v en objekt , ki se v izvorni kodi imenuje RdrRule .
Ko leksikalni ali sintaksni analizator naleti na napako v vhodni datoteki , se poskuša napačni del preskočiti in nadaljevati analizo na naslednjem delu , ki ga prepoznamo kot pravilnega .
Koliko napak program najde in koliko jih izpiše , se nastavlja preko stikal , privzeta vrednost pa je 100 najdenih in 7 izpisanih napak .
V večini primerov informacija iz poročila napak zadošča , da napako odpravimo .
Podobno velja tudi za druge , mnogo bolj premišljeno zasnovane prevajalnike kot je npr. prevajalnik za c++ .
3.3.5 OPTIMIZACIJA Težave , ki jih vsebuje popolnoma splošno RDR drevo , smo že omenili ( 2.2.2 Varianta 2.
V tem poglavju predstavimo njihovo podrobnejšo razčlenitev in koncept algoritma , ki jih odpravi .
Z uporabo tega načina ločevanja bi bila stopnja vejitve maksimalno 25 oz. toliko , kolikor je vseh črk abecede .
Po definiciji RDR koncepta je potrebno izjeme pravila iskati od začetka proti koncu .
V želji , da bi pohitrili postopek , potrebujemo direktni način iskanja izjem .
V določenih primerih se lahko v drevesu pojavijo vozlišča , do katerih algoritem ne more dostopati .
o Zaradi hierarhije se med izjemami pravila lahko pojavijo tudi takšna pravila , ki sploh nimajo enakega korena ( pr .
Problem iz zadnje točke se v takih drevesih ne bi smel pojaviti , saj bi moral dobro zasnovani učni algoritem že sam izločiti takšne primere , oz. jih sploh ne bi smel generirati .
Uredimo sezname izjem vseh vozlišč glede na končnico ( suffix ) .
V tem koraku primerjamo končnice vozlišč .
Primerjave , ki jih delamo , so naslednje : o Če je končnica obeh pravil enaka , potem zbrišemo pravilo z večjo zaporedno številko2 .
V paru < 11 , 7 > tako zbrišemo 11. o Če je končnica enega primera logično podrejena drugemu , potem : ?
če ima podrejeni primer nižjo zaporedno številko kot nadrejeni , dodamo logično podrejeni primer v seznam izjem nadrejenega4 .
o Kadar končnici nista enaki niti podrejeni , imata pa enak zadnji del ( končnico končnice ) , naredimo novo vozlišče , katerega končnica je ta skupni del , transformacija pa enaka transformaciji nadrejenega vozlišča5 .
Nastavimo zaporedno številko na maksimalno možno vrednost , tako da bomo temu vozlišču dodali vsa morebitna nadaljnja vozlišča z enakim skupnim delom .
Rezultat je prikazan na primeru 3.7. 2 Pravilo z večjo zaporedno številko je namreč v originalnem drevesu ležalo za tistim z nižjo , zato algoritem nikoli ne bi mogel dostopati do njega .
5 Tudi to dodano vozlišče zagotavlja nespremenjeno semantiko drevesa .
Če beseda ustreza končnici enega izmed teh dveh pravil , potem bodo izjeme novega pravila poskrbele , da bo ta beseda našla pot do pravega pravila .
Zadnji korak je brisanje nepotrebnih vozlišč .
Končni rezultat optimizacije tega zgleda je prikazan v primeru 2.1.
Ko izračunamo naslove vseh vozlišč , po enakem postopku izračunamo še naslov vseh pravil ( vozlišč tipa 0 ) iz seznama pravil .
Če se med postopkom slučajno zgodi , da je naslov večji od razpoložljivih 3B , potem povečamo dolžino naslova na 4B in ponovno poženemo algoritem od druge točke naprej .
Preostane nam le še , da inicializiramo tabelo bajtov in vanjo po poljubnem postopku zapišemo vsa vozlišča in pravila , katera imajo dodeljen naslov .
3.4 GENERIRANJE KODE Program torej izdela strukturo ( serializirano drevo ) za lematizator opisan v poglavju .
Binarna datoteka : uporabimo jo , kadar imamo lematizator že preveden in uporabljen samostojno ali v večjem sistemu .
To dosežemo tako , da zaglavno datoteko pripnemo našemu sistemu in ponovno prevedemo program .
Zaglavna datoteka : sistem jo generira tako , da šestnajstiškemu zapisu ( predstavljen v kodi 2.2 ) pripne določene definicije predprocesorja c + + in vse skupaj zapiše v tekstovno datoteko .
Če imamo objekt lematizatorja izdelan , lahko celotno kodo za zapis v zaglavno datoteko dobimo s funkcijo ToStringHex ( koda 2.3 , vr .
Izvorna koda : izdelava se začne podobno kot v prejšnji točki .
Generiramo zaglavno datoteko , nato pa jo združimo skupaj z datoteko izvorne kode razreda RdrLemmatizator in njegovo zaglavno datoteko .
To končno izvorno datoteko lahko prevedemo s standardnim c + + prevajalnikom in dobimo delujoč lematizator , katerega privzeto drevo je tisto , ki smo ga generirali v tem izvajanju .
Tako izdelan lematizator pa seveda omogoča tudi uvoz novih lematizatorjev prek binarnih datotek .
4 UČENJE RDR PRAVIL V tem poglavju predstavljamo zadnji izmed treh sklopov tega dela , ki so razvidni iz diagrama 1.1.
Edina povezava , ki je ostala nespremenjena , je oblika izhoda obeh algoritmov , to je RDR drevo .
To poglavje pa je kljub , še vedno tesni vsebinski prepletenosti , bolj samostojno in rezultate se lahko uporablja tudi brez povezave z ostalima dvema .
Modul , ki povezuje vse tri sklope se imenuje LemXval ( priloga A ) , opravlja pa funkcijo prečnega preverjanja točnosti naučenih dreves .
4.1 PODATKI IN IZHOD Ker gre za učni algoritem so vhodni podatki množice primerov ( pari morfoloških oblik ter njihovih lem ) .
Oblika vhodne datoteke je povzeta po standardu iz baze Multext-East [ 5 ] .
Privzeti izhod je datoteka pravil skladna z definicijo vhodne datoteke iz poglavja 3.2 " Določitev vhodne datoteke " .
Neposredno iz [ 12 ] prepisano psevdokodo algoritma podajamo v kodi 4.1.
Privzamemo , da si že v začetku postavimo neko privzeto korensko pravilo , ki je tako splošno , da se proži na vsak primer .
Jedro implementacije se naslanja na bistvo RDR koncepta , tj. funkcijo za iskanje proženega pravila .
o 4,5 : V kolikor pravilo napačno klasificira trenutni primer , dodaj novo izjemo temu pravilu .
Končnica novega pravila se določi tako , da je le to bolj specifično od trenutnega pravila , hkrati pa je končnica daljša ali enaka končnici , ki jo potrebujemo za transformacijo iz besede v lemo .
Težava je , da dodajanje nove izjeme lahko pokvari predhodno pravilno lematizirane primere nekega vozlišča .
Taki primeri lahko po naključju sovpadajo s pogojem nove izjeme tako , da bi v ponovnem poskusu iskanja proženega pravila našli novo izjemo , kar je napačno .
Ob dodajanju izjeme moramo še enkrat konsolidirati vse primere upoštevajoč novo izjemo .
Pri dodajanju novih izjem ter novih primerov v obstoječe izjeme algoritem ne upošteva pokritosti .
Zaradi tega kasneje ta izjema pokrije zelo malo pravilnih primerov , kar povzroči , da ima tudi sama veliko izjem .
Osnovni algoritem se odloči kar za prvo transformacijo , na katero naleti .
Tako , v celoti porabljeno besedo , lahko ločimo od ostalih ravno s to informacijo , da nima več nepregledanih končnic .
Če se recimo nahajamo v vozlišču s končnico ' oba ' , ki vsebuje besede { ' doba ' , ' grdoba ' , ' goba ' , ' oba ' ) , ki imajo različne transformacije , potem lahko ločimo 3 izjeme , katerih končnice so ( ' doba ' , ' goba ' , ' # oba ' ) .
Želimo si tudi , da bi algoritem izdelal tako drevo , ki bi bilo na učnih primerih najboljše možno .
?
V določenih primerih obstaja več izbir za transformacijo vozlišča kljub pogoju iz prejšnje točke .
Sprva smo skušali vse razen zadnje zahteve izpolniti v okviru originalnega algoritma .
4.4 PREKRIVNI RDR ALGORITEM Odločili smo se torej za nov pristop k reševanju tega učnega problema .
Ker pa še vedno izdela RDR drevo , smo ga poimenovali prekrivni RDR algoritem .
4.4.1 OSNUTEK Ideja je preprosta in temelji na združevanju besed z enako končnico .
Prav tako ne naredimo izjeme , če imajo vse besede podskupine enako transformacijo kot nadrejena skupina , saj take pravilno klasificira že ta .
Zgornja tabela predstavlja zgolj okvir zaključene celote .
Bistvo postopka je funkcija BuildRDRTree .
Ta funkcija dobi kot parametra novo prazno pravilo in seznam primerov , ki naj jih to pravilo pravilno klasificira ( lematizira ) .
Opis kode 4.3 je naslednji : ?
Omenimo še , da se v pravilu , kjer je končnica enaka besedi , še vedno po potrebi naredi izjema tega pravila .
Ta znak ( desetiška ascii vrednost je 35 ) smo uporabili tudi pri izvozu drevesa .
Edina negativna stran postopka je dodajanje '#' na začetek vsake besede med lematizacijo .
4.4.3 ČASOVNA ZAHTEVNOST Časovno zahtevnost algoritma je v najslabšem primeru ( angl. worst-case ) enostavno izračunati .
2.20-2.31 ) .
Ker je postopek rekurziven , je resda na vsakem nivoju več klicev funkcije BuildRDRTree , vendar pa so tudi seznami besed krajši .
Če je N število učnih primerov ter M dolžina najdaljše besede , je časovna zahtevnost našega algoritma .
Če upoštevamo , da je dolžina najdaljše besede v večini jezikov omejena in torej konstantna , dobimo red zahtevnosti .
Prekrivni RDR algoritem ima torej tudi v najslabšem primeru linearno časovno zahtevnost .
Izkaže se tudi , da v realnih problemih število primerov z vsakim nivojem hitro pada ( primer 4.2 ) , zato je konstantni faktor skoraj neodvisen od M ter zaradi dobre implementacije dokaj majhen .
Ko preverimo učne podatke , vidimo , da smo uspeli iz podatkov izluščiti nekoliko več informacije .
4.5.2 POTEK GRADNJE RDR DREVESA Iz primera 4.1 lahko razberemo , kako poteka gradnja RDR drevesa z razvitim algoritmom .
Besede so urejene v zahtevanem vrstnem redu ( glede na končnice ) .
Besede iste skupine imajo enako končnico , katere dolžina je odvisna od nivoja .
Vsaka skupina oz. blok vsebuje 4 podatke : ?
zelena : končno vozlišče , ki pravilno lematizira vse svoje primere .
rdeča : končno vozlišče , ki ne lematizira pravilno vseh primerov , ampak , ker so si vse besede enake , se postopek zaključi zaradi pogoja ( koda 4.3 , vr .
Algoritem najde najdaljšo skupno končnico " in najboljšo transformacijo "->".
Nato razdeli skupino na podskupine , katerih končnice so dolge 1 , ( nivo 1 ) .
Končni rezultat ( RDR drevo ) je prikazan na primeru 4.3. 5 REZULTATI EKSPERIMENTOV Poglavje podaja opis , rezultate ter interpretacijo dveh poskusov .
Vzporednice naredimo na prikazu rezultatov odkrivanja znanj pred uporabo lematizacije in po njej .
dovzetnost različnih jezikov na metodo RDR lematizacije .
Poleg omenjenega smo v poskusu izvedli še mnogo drugih implicitnih testov , ki jih tukaj ne navajamo .
Zgled tega je npr. test identitete originalnega in optimiziranega lematizatorja , kar je bila zahteva v poglavju 3.
Učenje RDR pravil : o Originalni algoritem iz [ 12 ] , opisan v poglavju 4.2. o Novi algoritem razvit v tem delu , opisan v poglavju 4.4. ?
Lematizacija : o Ad hoc metoda lematizacije opisana v prvi točki uvodnega razdelka poglavja 2. o Lematizator razvit v tem delu , njegovemu opisu pa je posvečeno jedro poglavja 2. 5.1.1 OPIS PODATKOV V testih smo uporabljali podatke iz korpusa člankov ter leksikonov Multext-East verzija 3 [ 5 ] .
Podmnožico zapisov iz leksikona podaja primer 5.1.
Prvi zapis v vrstici je oblika , naslednji lema besede in zadnji morfološka oznaka .
Podatkov o morfoloških oznakah nismo uporabljali , zato tukaj niso natančneje razloženi , gre pa za oznake kot so besedna vrsta , spol , sklon , število , sklanjatev , itd.
Poleg te zbirke smo po končanem razvojnem delu te diplomske naloge prejeli še podatke za nekaj jezikov iz osnovnega projekta Multext ( Multilingual Text Tools and Corpora ) [ 7 ] .
Osnovni podatki so označeni z MULTEXT-EAST .
V tabeli 5.1 smo podali nekaj osnovnih statistik leksikonov .
To se bo pokazalo že pri učni množici , saj se enostavno ne moremo odločiti , katero lemo naj pripišemo besedi , če jih ima le ta več .
Po drugi strani pa pričakujemo , da bo jezik z najmanj lem na morfološko obliko ( španski ) dobro lematiziran ne glede na njegovo oblikovno pestrost ( v povprečju ima kar 36 različnih morf .
5.1.2 REZULTATI Poskuse smo izvajali po metodi prečnega preverjanja K-tega reda ( angl. K-fold cross validation ) .
Vsakič , ko smo naredili novo prečno preverjanje , smo torej celotno množico vseh primerov razbili na pet podmnožic .
Interpretacije rezultatov sledijo v naslednjem poglavju , tukaj pa podajamo določene ne trivialne podatke oz. nazive stolpcev tabel .
V kolikor govorimo o učenju , mislimo na učni algoritem sicer pa na algoritem lematizacije .
Če je število pravilno lematiziranih besed in število vseh besed , potem točnost izračunamo po enačbi .
o * učna množica ( optmistično ) ] – za izračun ocen smo uporabili podatke iz učne množice in tako dobili optimistično oz. najboljšo možno vrednost .
o [ neznane besede ( pesimistično ) ] - za izračun ocen so bili prav tako uporabljeni podatki iz testne množice , vendar je bilo razbitje testne in učne množice bolj striktno .
o [ napak ] – relativno zmanjšanje števila napak prekrivnega algoritma proti RDR .
Tabela 5.3 : o [ ms / zap ] – število milisekund ( 10-6s ) , ki jih porabi povprečno učni algoritem za učenje enega zapisa iz učne množice .
vejanje ] – kolikšno je povprečno vejanje ( število izjem ) za notranja vozlišča drevesa .
5.1.3 INTERPRETACIJA Iz tabele 5.2 razberemo , da je prekrivni RDR algoritem v večini primerov boljši od originalnega .
V domeni lematizacije temu ni tako , saj imamo opravka z zelo popolno množico učnih primerov .
Učni primeri tako pokrijejo večino domene in pri dejanski lematizaciji obstaja velika verjetnost , da smo se leme že naučili .
Ob pregledu , koliko celotnega prostora domene prekrivajo naši učni primeri , smo naredili test s članki opisanimi v 5.2 ter leksikonom za slovenski jezik .
Ta test torej zahteva referenčno besedilo , zato smo ga naredili samo za slovenščino , dobljena točnost je , kar je še boljše kot naša ocena na testni množici .
Tako točnost dejanskega končnega lematizatorja v povprečju leži bližje točnosti izračunani med testi prečnega preverjanja .
Tabele 5.3 ne bomo podrobneje razlagali , saj je očitno razvidno ne le bistveno hitrejše izvajanje učnega ter lematizacijskega algoritma temveč tudi druga časovna zahtevnost algoritmov .
To se vidi s primerjavo faktorjev razlik pri naraščajočih učnih množicah .
Pri pregledu podatkov smo ugotovili znaten delež besed , katerim se med spreganjem ne menja zgolj končnica , ampak tudi začetek .
Tabeli 5.4 podaja primerjavo med algoritmoma glede na obliko izdelanih RDR dreves .
Ko naredimo povzetek tabel , ugotovimo , da je izboljšava novega prekrivnega algoritma tem boljša , čim boljši so učni podatki .
To nam govori že dejstvo , da so največje razlike med algoritmoma ravno pri testu na učni množici .
5.2 APLIKACIJA NA AGENCIJSKIH ČLANKIH Ta aplikacija je predstavlja naš motiv za izboljšavo lematizatorja v diplomskem delu .
Prva ontologija je bila zgrajena iz ne-lematiziranih besedil , druga pa iz lematiziranih .
Članki so povzeti od tiskovnih agencij različnih držav , v katerih vlada nek minimalni prag zanimanja za dogodke pri nas .
V nadaljevanju te članke imenujemo kar agencijski članki .
V teh povzetkih so večinoma ohranjene le najbistvenejše informacije iz originalnih novic .
Članke smo predhodno obdelali , spravili v enotno obliko in združili po državi izvora .
Slovenskih člankov je bila velika večina , kar je popolnoma razumljivo , saj Slovenska tiskovna agencija ( STA ) poroča večinoma o vseh pomembnih dogodkih v Sloveniji .
Prekrivanje tujih člankov je bilo tako 1,5 kratno .
Tabela 5.5 je v bistvu že sama po sebi zanimiv rezultat , saj kaže stopnjo zanimanja tujih držav za nas .
Povprečna dolžina novice je 42 besed oz. 335 znakov .
Večinoma jih je bilo v tekstovnih datoteki in datotekah programa Microsoft Word .
Ontologija , ki predstavlja novice , ima tako v korenu neko predstavitev ( ključne besede ) , ki ustrezajo vsem novicam .
S pregledom take hierarhične razdelitve vsebin oz. tematik lahko hitro ugotovimo o čem članki v splošnem govorijo .
Delo z njim je preprosto , saj kot vhod vzame kar zbirko člankov in potem le z malo pomoči uporabnika generira dokaj dobro ontologijo .
Tu se jasno vidi delitev tematike : vlada in ministrstva , gospodarstvo , evropska unija , državni zbor in zakoni ter sociala .
Še večje razlike opazimo na naslednjem nivoju , saj imajo koncepti iz lematiziranega diagrama precej dobro opredelitev o čem govorijo , iz nelematiziranega pa le tu in tam .
Diagram C.1 tako predstavlja ontologijo izdelano na celotni množici člankov tujih tiskovnih agencij , ostali pa ločeno za posamezne države ( C.2 Hrvaška , C.3 Avstrija , C.4 Nemčija , C.5 Srbija in Črna Gora ter C.6 ZDA ) .
Pri ontologiji iz vseh tujih člankov opazimo , da je Ontogen našel dobro delitev na prvem nivoju , razdelil je novice po državah oz. tiskovnih agencijah .
Seveda lahko najdemo tudi stalne teme v meddržavnih odnosih , kot npr. avstrijski problemi z našo nuklearno elektrarno in težave na avstrijskem koroškem , problemi s hrvaško mejo in epikontinentalnim pasom , …
Taki so na primer koncepti , katerih ključne besede so ljudje oz. politiki , ampak očitno so bili ti koncepti tako značilni , da jih je Ontogen predlagal kot signifikantne .
Ostali deli sistema služijo izdelavi lematizatorja in so zasnovani tako , da omogočajo enostavno , hitro , kvalitetno in uporabniku prijazno izdelavo lematizatorjev ter njih ocenjevanje .
Objavljeni so pod imenom LemmaGen na spletnem naslovu http://kt.ijs.si/software/LemmaGen ter na diplomskemu delu priloženi zgoščenki .
Dodana je tudi vsa potrebna dokumentacija , testni podatki in čim več že izdelanih lematizatorjev za nekaj evropskih jezikov .
Eden izmed načinov boljše lematizacije bi bil upoštevanje sosednjih besed iz besedila , kadar so te na voljo .
To vprašanje puščamo odprto , dobra rešitev pa bo zelo verjetno še povečala točnost postopka .
Vsa koda je napisana v c + + , uporabniški vmesniki pa so izdelani v obliki ukazov in povratnih sporočil v komandni vrstici .
Izvorna koda je pod licenco LGPL , ki omogoča prosto spreminjanje in uporabo v odprtokodnih in tudi komercialnih aplikacijah .
Ker so izdelani moduli zanimivi tudi mednarodno , smo za komunikacijo z uporabnikom uporabili angleški jezik .
Naša knjižnica , ki vsebuje vso predstavljeno kodo se imenuje LemmaGen .
Ko smo končali razvoj algoritmov in uporabniških vmesnikov zanje , smo ugotovili , da je včasih za uporabnika neprijazno , ker mora skrbeti za sedem ločenih modulov ( recimo pri kopiranju ali pošiljanju po elektronski pošti ) .
Tako smo naredili še en uporabniški vmesnik imenovan LemmaGen , ki v sebi združuje funkcionalnost vseh ostalih .
Vloga vmesnika LemmaGen je posredovanje ukazov izbranemu podmodulu .
Izvršilnih datotek za podmodule tako ne potrebuje več , saj vso funkcionalnost prevzame kar LemmaGen .
Datoteko Multext smo že razložili v poglavju 5.1.1 , tukaj je kratek povzetek .
Prostor za tem tabulatorjem ter do konca vrstice pripada morfološkemu opisu besede .
Ta format datoteke smo orisali že v poglavju 1.4 " RDR v domeni lematizacije " , opisali v 3.2 " Določitev vhodne datoteke " ter zelo natančno definirali v 3.3 " Struktura algoritma ter implementacija " Primere notacij te datoteke lahko najdete v primeru 3.1. ?
Tu povejmo le še da je uporaba opcij oz stikal pri klicu vmesnikov neodvisna od njihovega vrstnega reda .
Sledeča poglavja natančno opisujejo uporabniške vmesnike vseh sedmih izdelanih modulov .
RDR LEMATIZATOR Modul , ki se ukvarja z lematizacijo ( poglavje 2 ) smo poimenovali Lemmatize .
Kot vhod sprejema tako besedilne datoteke kot tudi datoteke Multext .
V primeru izbire " text " algoritem obravnava vhodno datoteko kot besedilno in temu primerno na izhod zapiše lematizirano besedilo .
V primeru uporabe opcije < delmt > modulu podamo nek znak .
Z opcijo < datafile > podamo modulu binarno datoteko RDR pravil , ki jih modul uporablja za lematizacijo .
Če nismo izdelali lematizatorja za določen jezik in ga prevedli , so privzeta pravila prazna in lematizacija ne naredi nobene spremembe .
Odločimo se lahko za binarno izhodno datoteko " bin " , c + + zaglavno datoteko " head " , datoteko izvorne kode c + + " src " ali pa strukturo izpisano v človeku prijazni obliki " human " .
Slednja možnost se uporablja zgolj za pregled nad notranjo strukturo podatkov lematizatorja , predzadnji dve pa za izdelavo lematizatorja , katerega privzeta pravila so ta , ki jih tukaj prevajamo .
Opcija < language > v izhodno strukturo zapiše podatek o jeziku , uporabi pa se tudi kot privzeto ime za izhodno datoteko .
Pri uporabi pride pogosto prav tudi opcija " - - stat " , ki izpiše statistiko drevesa pred optimizacijo in po njej .
Vhod je datoteka Multext , izhod pa datoteka RDR .
Poleg tega opcija < format > omogoča še izbiro enega izmed šestih oblik izpisa pravil v izhodno datoteko .
Njegov vhod je datoteka Multext , izhod pa tekstovna datoteka z zapisanimi statistikami , ki jih lahko nato obdelujemo s poljubnim tekstovnim ali tabelaričnim programom .
V tem modulu imamo poleg običajnega obveznega podatka ( vhodne datoteke ) , obvezen še podatek < split > .
Ta definira , na koliko podmnožic se razbije učna množica pri prečnem preverjanju ( tip " shallow " ali " deep " ) oz. koliko procentov ima testna množica v enkratnem preverjanju ( tip " perc " ali " percdeep " ) .
Opcija < type > določi način bomo razbili množico primerov na učno in testno množico .
Z opcijo < alg > izberemo učni algoritem , s katerim želimo generirati drevesa .
Če prečno preverjanje poganjamo večkrat , pride prav še opcija " - s " , ki omogoči uporabo skript brez nadležnega izpisovanja poteka algoritma .
STATISTIKA LEKSIKONOV Modul LemStat je enostaven , njegova naloga pa je izračun osnovnih statistik nekega leksikona ( vhod je torej datoteka Multext ) in po želji uporabnika zapis v izhodno datoteko .
Statistike , ki jih modul vrača so nazorno prikazane v primeru A.5 zato jih tu ne bomo podrobneje razlagali .
Vhod je datoteka Multext , izhod dve ali več datotek Multext .
Primer A.6 podaja tipično uporabo tega modula , tabela A.7 pa izpis pomoči .
TESTIRANJE TOČNOSTI LEMATIZACIJE Zadnji modul se uporablja za testiranje točnosti lematiziranega leksikona in se imenuje LemTest .
Vhod modula sta dve datoteki oblike Multext : originalni leksikon in originalni leksikon , ki je bil lematiziran z modulom Lemmatize in opcijo " wpl " .
Oblika tako ostane zelo podobna leksikonu , le da zdaj v drugem stolpcu niso resnične leme , ampak tiste , ki smo jih dobili z lematizacijo .
Naloga za LemTest je tako preprosta , saj le primerja isto ležne besede iz drugih stolpcev danih datotek .
Tabela A.8 prikazuje izpis pomoči , primer A.7 pa zgled uporabe modula LemTest UVOD Govor je najbolj naravna in neposredna oblika komunikacije med ljudmi .
Njen razvoj namreč omogoča vedno večjo avtomatizacijo najrazličnejših opravil , katerih velik del bi lahko bil nedvomno enostavneje opravljen s pomočjo govorne komunikacije .
Med njimi so trenutno najbolj pereče časovna zakasnitev in motnje , ki nastajajo pri zajemu , signalov .
V teh pogojih so tudi sistemi za razpoznavanje govora2 precej manj uspešni oziroma učinkoviti ; poleg vnaprej predvidenih se namreč srečajo še s celo vrsto neznanih aditivnih , konvolutivnih ter nelinearnih popačitev govornih signalov .
Deloma tudi zaradi tega , ker je bilo poznavanje tovrstnih procesov pri človeku še precej omejeno .
V zadnjem času pa vse bolj prihajajo na plan slabosti takega pristopa .
Na področju ARG pogosto prihaja do t.i. razvojnega paradoksa .
Na drugi strani so bolj " napredno " zasnovani sistemi , ki pa v neposrednih primerjavah zaradi manjšega števila preizkusov in opravljenih raziskav nimajo enakovrednega izhodišča .
Obvladovanje govorne komunikacije je že za človeka samega kar zahtevna naloga .
Iluzorno je torej pričakovati hitro rešitev problema avtomatskega razpoznavanja govora brez postopnega in dolgotrajnega razvojnega procesa , v katerem bo potrebno človekovo govorno percepcijo še precej podrobneje spoznati .
Povezavi in prenosu znanj med področjema proučevanja človekovega sluha in ARG je bila posvečena večina mojega dosedanjega dela [ 77 , 78-82 , 120 ] .
Najbolj pogosto uporabljana okna imajo namreč kar nekaj potencialnih slabosti in večinoma niso oblikovana v skladu z lastnostmi in značilnostmi človekovega sluha .
Zato si predvsem z vidika reševanja dveh najbolj aktualnih praktičnih problemov : zagotovitve krajše časovne zakasnitve in večje robustnosti razpoznavanja , ki zagotavlja uspešnost kljub prisotnosti motenj .
Pri robustnih SRG je torej razlika v uspešnosti ob prisotnosti motenj in brez njih majhna .
Ta lastnost je vedno večjega pomena , saj število različnih pogojev delovanja SRG skokovito narašča .
Znanje s področja KEO filtrov se v veliki meri lahko uporabi tudi za načrtovanje oken v kratkočasovni frekvenčni analizi .
Spekter govornega signala se v času namreč dokaj hitro spreminja , zato se analizira v končnih časovnih odsekih - okvirjih .
Amplitudni odziv posameznega okvirja je posledično konvolucijski integral med Fourierovima transformoma okna in neskončno dolgega signala .
Pomen obeh lastnosti za ARG pa je zaradi posebnosti področja potrebno še podrobneje raziskati .
Predstavlja dodatno oviro pri delu v realnem času – npr. dvosmerni govorni komunikaciji .
4 pomembne lastnosti od manj pomembnih ter ugotovljeno upoštevati pri načrtovanju bolj primernih oken .
Povsem odprto vprašanje pa je , ali to za oblikovanje sodobnejših SRG sploh zadostuje .
Večina današnjih SRG še vedno uporablja Hammingovo simetrično okno , ki je zaradi svoje enostavnosti in solidnih lastnosti zelo popularno tudi na drugih področjih .
1.2 POSEBNOSTI PODROČJA PROCESIRANJA GOVORA Na širšem področju procesiranja3 govornih signalov je zelo pomembna zahteva po čim krajši splošni časovni zakasnitvi .
Področje poleg razpoznave in sinteze govornih signalov vsebuje še zajem ter prenos signalov na daljavo – večinoma v digitalni obliki .
Za razpoznavanje daljših glasov ( npr. samoglasniki ) so pomembnejše stacionarne lastnosti , medtem ko so za določene glasove ( npr. zaporniki ) odločilni kratkotrajni zvočni dogodki .
Za dobro reprodukcijo govornih signalov so pomembne lastnosti vsakega individualnega govorca , ki so pri od govorca neodvisnih1 SRG povsem odveč ; slednji namreč poskušajo izvesti abstrakcijo , ki iz govora ohrani le informacije , povezane z vsebino in ne z individualnimi posebnostmi glasu oziroma govorca .
Do sedaj opravljene raziskave tako na področju frekvenčne analize človekovega sluha kot tudi ARG zmanjšujejo pomen frekvenčne ločljivosti [ 68-70 ] .
Na drugi strani pa že omenjena človekova neobčutljivost na fazne popačitve govornih signalov navaja na sprostitev zahteve po linearnosti faze pri načrtovanju oken .
S stališča načrtovanja je problem v tem primeru kompleksnejši , a hkrati prinaša večji prostor potencialnih rešitev in s tem možnost izboljšav .
Te so lahko še bolj izrazite , če se po vzoru lastnosti frekvenčne analize človekovega sluha poveča širina glavnega vala v amplitudnem odzivu okna [ 77 ] .
V vseh SRG se namreč kot osnova za nadaljnji proces razpoznavanja uporabi le amplitudni odziv , fazna informacija pa se običajno zanemari .
Tovrstni sistemi so danes v veliki večini .
Monotonost amplitudnega odziva pomeni , da je njegova vrednost v vsaki naslednji točki manjša ali enaka prejšnji .
Vrednotenje bo namreč z vidika splošne frekvenčne analize bolj objektivno , saj bodo ugotovitve neodvisne od procesa razpoznavanja .
V disertaciji bo merjena t.i. inherentna robustnost SRG , pri kateri motnje niso prisotne v procesu učenja .
7 Glede na povedano so bila pri praktičnih preizkusih in raziskovalnem delu širše upoštevana naslednja načela : • v čim večji meri ohraniti obstoječe podatke , postopke , strukturo SRG in vse ostale parametre , ki jih ni nujno potrebno spreminjati • ohraniti računsko kompleksnost in uspešnost SRG • ohraniti nesprotni1 način delovanja zaradi večje primerljivosti rezultatov • uspešnost SRG ovrednotiti predvsem v pogojih , ki niso prisotni v procesu učenja – " inherentna robustnost " • izogniti se posegom , ki bi v duhu " grobe sile " prinašali večjo uspešnost SRG ( podvajanje statističnih modelov , natančno uglaševanje sistema s pomočjo velikega števila preizkusov , razširjanje učne množice z motnjami , itd ) • glede na omejitve razpoložljive aparaturne opreme in časa selektivno izvajati praktične preizkuse v različnih obsegih sorazmerno glede na pričakovano pomembnost rezultatov • poskrbeti za čim večjo raznolikost zasnov , govornih zbirk in ostalih pogojev delovanja • medsebojno primerjavo uspešnosti obeh referenčnih SRG izvesti le na osnovi enakih testnih množic ; podrobnejše primerjave zaradi velikih razlik v zasnovah in implementacijah presegajo okvir tega dela • uspešnost SRG izraziti v odstotkih uspešno razpoznanih besed2 1.4 KRATEK OPIS VSEBINE Disertacija vsebuje šest večjih vsebinskih sklopov .
Po uvodu se v 2. poglavju nahaja kratek oris področja ARG .
V njem se namreč kot prvi korak izvede kratkočasovna frekvenčna analiza , ki je za vrednotenje vpliva oken še posebej zanimiva .
V nadaljevanju so še podrobnejši opisi izračunov standardnih značilk , ki so bili uporabljeni v praktičnih preizkusih .
Naslednje ( 3. ) poglavje podrobneje opisuje referenčno okolje za vrednotenje inherentne robustnosti SRG .
Zato referenčno okolje vsebuje govorni zbirki z dveh jezikovnih področij in dva različno zasnovana referenčna SRG .
V 4. poglavju se nahaja obširnejša analiza možnosti načrtovanja nesimetričnih oken .
Najprej je pojasnjen pomen oken v frekvenčni analizi govornih signalov in potencialne prednosti nesimetričnih oken .
Med metodami so najprej opisane tiste s področja KEO filtrov , za njimi pa še nekatere enostavnejše metode z uporabo NEO1 parametričnih modelov in kombiniranjem obstoječih simetričnih oken .
V 6. poglavju so povzete končne ugotovitve analize praktičnih rezultatov in raziskav , opisanih v disertaciji .
Zatem je opredeljen še pomen opravljenih raziskav in možnosti nadaljnjega dela na tem področju .
Večinoma je to že končni rezultat , v nekaterih primerih pa le osnova nadaljnjih postopkov za razumevanje vsebine ( npr. simultano prevajanje , vodenje govornih dialogov , …).
Splošna zasnova in pomembnejše značilnosti SRG so opisane v podpoglavju 2.1.
Sledi predstavitev procesa parametrizacije ( podpoglavje 2.2 ) , ki vključuje postopek kratkočasovne frekvenčne analize ; v njem imajo pomembno vlogo okna , ki so v središču pozornosti .
Sledijo še opisi standardnih postopkov za računanje kompaktnih reprezentativnih predstavitev zajetega govornega signala .
Ti vstopajo v proces razpoznavanja , ki je opisan v podpoglavju 2.3.
V njem se izvede primerjava z referenčnimi opisi posameznih enot v slovarju SRG in določi končni izid razpoznavanja .
2.1 SPLOŠNA ZASNOVA SISTEMOV ZA RAZPOZNAVANJE GOVORA - SRG Tovrstni sistemi so v splošnem označeni z več atributi .
V splošnem velja , da je problem razpoznavanja težji pri večjem številu besed oziroma enot v slovarju ali izrazitejši prisotnosti motenj .
K težavnosti lahko prispevajo tudi nekatere na prvi pogled manj pomembne stvari ( npr. podobnost izgovorjav posameznih besed v slovarju ) .
10 Zaloga vrednosti po naraščajoči zahtevnosti posamezne besede , fraze , vezan govor , tekoč govor znan govorec , več znanih govorcev , neznan govorec1 majhen slovar ( nekaj besed ) , srednji ( 1000 besed ) , velik ( več kot 20000 besed ) laboratorij , tiho okolje , hrupno okolje ( ulica , tovarna , avtomobil , itd ) kvalitetna avdio oprema , digitalna telefonija , analogna in spletna telefonija , mobilna telefonija narekovanje , prebiranje , spontan govor Tabela 2.1 : Pomembnejši atributi SRG .
Zgradbo splošnega sistema za razpoznavanje govora prikazuje Slika 2.1.
Razpoznavanje govora v ožjem smislu lahko razdelimo na dva glavna koraka .
Dobljen opis se v drugem koraku primerja z že prej pripravljenimi referenčnimi opisi2 oziroma modeli – t.j. proces razpoznavanja .
Zaporedje posameznih klasifikacij se nato primerja s časovnimi modeli , ki opisujejo dinamiko spreminjanja akustičnih značilnosti govora .
Dobljena ocena časovnega ujemanja se na koncu ovrednoti še v jezikovnih modelih , ki opisujejo relacije elementarnih govornih enot v daljših zaporedjih ( npr. besede , fraze , stavki , povedi ) .
Za končni rezultat razpoznavanja se izberejo najboljša ( najverjetnejša ) hipoteza in njej ustrezno zaporedje govornih enot .
V procesu primerjave se uporabijo tehnike in metode , ki temeljijo na različnih pristopih .
Trenutno sta daleč najpogostejša le dva formalna koncepta , in sicer : • statistični modeli ; opisujejo globalne lastnosti signalov in podobnosti med trenutnimi in referenčnimi opisi signalov • mrežni modeli ; sestavljeni iz večjega števila enostavnih , med seboj povezanih vozlišč , ki razvrščajo ( klasificirajo ) vhodne vzorce v predhodno ustrezno naučene razrede Statistični pristop je , predvsem po zaslugi prikritih Markovih modelov3 , na tem področju prisoten že zelo dolgo .
Pozornost pa zasluži tudi mrežni koncept ( najbolj popularen predstavnik so nevronske mreže ) , ki je na področju razpoznavanja govora precej mlajši in zato tudi manj dozorel .
Poenostavljen primer takega sistema je drugi referenčni SRG ( podpoglavje 3.3 ) , medtem ko je prvi ( podpoglavje 3.2 ) tipičen predstavnik realizacije statističnega pristopa na akustičnem in časovnem nivoju .
Opisi se pripravijo v postopku učenja .
.
govorni signal množenje z oknom Slika 2.2 : Parametrizacija govornega signala .
Govorci , ki niso zajeti v učni množici .
Standardna oznaka značilk pasovnega spektra , angl. " FBANK " oziroma " FilterBank " .
Vzorci v vsakem od njih se pomnožijo z izbranim oknom ( najpogostejše je Hammingovo simetrično okno ) .
Amplitude v posameznih pasovih se še logaritmirajo in rezultat je standardna predstavitev signala – FBANK značilke .
Ob običajnem zmanjšanju števila značilk nastane končni rezultat - vektor MFCC značilk .
Postopek je podrobneje opisan v podpoglavju 2.2.2. 2.2.1 Kratkočasovna Fourierova analiza govornega signala Vhodni signal se najprej razdeli na končne ( lahko tudi prekrivajoče ) krajše izseke , v katerih se kasneje izračuna Fourierov transform ( Slika 2.3 ) .
, kjer je s ' ( m ) zaporedje vzorcev neskončnega signala , w ( n-m ) okensko zaporedje , n indeks središčne točke posameznega okvirja , N razmik med dvema okvirjema in t številka okvirja .
Dolžina vseh okvirjev je enaka dolžini okna .
Pri vseh praktičnih preizkusih v disertaciji je bila dolžina okvirja 32 ms , sosednjima okvirjema pa 10 ms .
Lastnosti okna oziroma s tem povezano popačenje frekvenčnega odziva se določijo pri samem načrtovanju , kjer je poleg zahtevanih lastnosti pomembna še izbira ustreznega kriterija .
Podrobnejša obravnava uporabe nesimetričnih oken pri razpoznavanju govora se nahaja v 4. poglavju .
Posamezne komponente kratkočasovnega spektra se že lahko imenujejo tudi značilke ; v nekaterih primerih je namreč omenjen spekter že končni opis vhodnega signala .
Če se upoštevajo vrednosti posamezne značilke v odvisnosti od časa2 , se dobi t.i. signal značilke , ki ponazarja časovno diskretni potek njene vrednosti – v tem primeru je to logaritem amplitude posamezne frekvenčne komponente v točki ?
Čas je ponazorjen s številko okvirja t. 16 amplituda frekvenca [ Hz ] čas [ s ] Slika 2.4 : Primer spektrograma besede " devet " .
2.2.2.1 FBANK značilke Računanje kompaktnejših predstavitev ( Slika 2.5 ) se začne z združevanjem1 posameznih delov spektra v širše frekvenčne pasove .
Pri tem ima pomembno vlogo koncept t.i. kritičnega pasu .
Utežnostne funkcije se med seboj prekrivajo , zato vsaka frekvenčna komponenta " prispeva " k vrednosti v dveh sosednjih frekvenčnih pasovih .
Utežnostne funkcije se zaradi oblike in namena imenujejo tudi trikotni filtri .
V obeh referenčnih sistemih je teh filtrov 22.
) , i = 1..K , nt = n0 + tN , t = 0,1,2,... , 0 kjer je t trenutni okvir , K število vseh trikotnih filtrov , Ti ( e j ?
To predstavlja potencialni problem predvsem pri SRG , ki temeljijo na uporabi statističnih HMM modelov in s tem povezanih implicitnih predpostavk .
Zato se običajno vektorji značilk dodatno dekorelirajo s postopkom , opisanim v naslednjem podpoglavju .
2.2.2.2 MFCC značilke Koreliranost značilk v sosednjih pasovih se običajno zmanjšuje z nekaterimi dodatnimi transformacijami ( npr. DCT1 , LDA2 ) .
Izkaže se , da se običajno lahko razsežnost dobljenega vektorja celo zmanjša ( L < K ) brez zaznavnega negativnega vpliva na končno uspešnost SRG .
19 2.2.2.3 Dinamične ( DELTA ) značilke Prvotna spoznanja o človekovi govorni percepciji so kot osnovo razpoznavanja omenjale le frekvenčno analizo govornega signala .
Prvotni SRG so uporabljali večinoma samo osnovni nabor MFCC značilk , pridobljenih na že opisan način ( podpoglavje 2.2.2.2 ) .
Ta pristop se je v praksi pokazal za zelo uspešnega , še posebej v šumnih okoljih [ 77 ] .
Ker je eden najbolj popularnih načinov za njihov izračun prav časovni odvod , se imenujejo tudi delta značilke .
Pri razpoznavanju so lahko v veliko pomoč informacije , vsebovane v jezikovnih modelih .
Pri večjih slovarjih se namreč zelo hitro pojavi problem prevelikega števila hipotez , ki bi se sicer morale enakovredno ovrednotiti .
Omejitev tega prostora pa omogočijo prav podatki o verjetnostih pojavitev zaporedij posameznih govornih enot .
Na ta način se prostor možnih hipotez v tretji fazi razpoznavanja preiskuje bolj selektivno in učinkoviteje .
V disertaciji so preizkusi omejeni na razpoznavanje elementarnih govornih enot - besed , zato so jezikovni modeli trivialni - število hipotez je v vsakem trenutku majhno in predvidljivo .
REFERENČNO OKOLJE ZA VREDNOTENJE NESIMETRIČNIH OKEN Za proučevanje vpliva oken na uspešnost sistemov za razpoznavanje govora je potrebno izvesti veliko število praktičnih preizkusov .
Zato se v referenčnem okolju nahajajo dve govorni zbirki in dva različno zasnovana referenčna sistema .
Glavne prednosti obeh sistemov oziroma uporabljenih konceptov v njunih zasnovah so naslednje : • prednosti HMM razpoznavalnika oziroma HMM modelov : • uporaba normalnih porazdelitev zmanjša število parametrov in s tem poveča možnost posplošitve • enostavnejša prilagoditev spremenjenim pogojem med delovanjem • uporabnost naučenih parametrov za druge namene ( npr. sinteza govora ) • možnost uporabe besednih modelov • prednosti CSLU razpoznavalnika oziroma nevronskih mrež : • brez omejitev glede porazdelitve vhodnih podatkov • implicitno zagotovljen diskriminatorni način učenja • manjša časovna in prostorska kompleksnost • večja primernost za aparaturne , vzporedne realizacije • možnost verifikacije govorcev , ocene zanesljivosti razpoznavanja V naslednjem podpoglavju sta najprej opisani uporabljeni govorni zbirki in v ločenih podpoglavjih še oba referenčna razpoznavalnika .
22 3.1 REFERENČNI GOVORNI ZBIRKI V referenčnem okolju sta bili uporabljeni dve govorni zbirki z različnih jezikovnih področij .
Govorna zbirka ŠTEVKE v slovarju poleg slovenskih števk vsebuje še tri ukazne besede ( ja , ne , stop ) .
V primerjavi z zbirko NUMBERS ima naslednje posebnosti : • slabša povprečna kvaliteta telefonskih zvez pri snemanju • večja podobnost izgovorjave posameznih števk3 • večja narečna raznolikost izgovorjave • manjše število govorcev oziroma posnetkov • daljši premori med besedami • manj spontan način govora Snemanje obeh zbirk je potekalo pred približno 10 leti .
Ob snemanju so sicer zaradi omejitev obstoječe tehnologije prevladovali nekoliko slabši pogoji .
Sodobna tehnologija namreč omogoča uporabo najrazličnejše komunikacijske opreme , večjo izbiro prenosnih poti in možnost komuniciranja v praktično vseh akustičnih okoljih .
Zbirka NUMBERS je bila uporabljena le na CSLU sistemu , ŠTEVKE pa na obeh ; v CSLU sistemu kot niz besed , v HMM sistemu pa so bili posnetki razdeljeni na izgovorjave posameznih besed .
Vsak izbran govorec je v naključnem vrstnem redu izgovoril 13 besed ( števke od " 0 " do " 9 " ter besede " ja " , " ne " in " stop " ) .
V govorni bazi so sorazmerno zastopani govorci obeh spolov , vseh starosti in večjih narečnih skupin .
Premor pred besedo je dolg 200ms , za njo pa 1s .
Del govorne zbirke je bil leta 2001 označen še na nivoju manjših govornih enot – fonemov .
Zbirka je bila v referenčnem okolju razdeljena na 3 različno velike dele : • 3/5 posnetkov za proces učenja ( učna množica – 468 izgovorjav1 ) • 1/5 posnetkov za proces vmesnega vrednotenja ( validacijska množica - 156 izgovorjav ) • 1/5 posnetkov za proces končnega vrednotenja robustnosti ( testna množica - 156 izgovorjav ) V procesih učenja obeh referenčnih sistemov sta bili uporabljeni le podmnožici učne množice ; delno zaradi omejevanja računske kompleksnosti učenja , delno zaradi posebnosti samih sistemov .
HMM sistem pa uporabi celotne izgovorjave , zato zanj zadošča že manjša podmnožica posnetkov .
24 3.1.2 Govorna zbirka NUMBERS Zbirka je nastajala v ZDA v 90. letih .
Vsebuje približno 10000 izgovorjav , v katerih govorci dokaj spontano ( s kratkimi premori ) sporočajo številske podatke ( poštna , telefonska in hišna številka ) .
Zbirka je bila v referenčnem okolju razdeljena na 3 različno velike dele : • 3/5 posnetkov za proces učenja ( učna množica – 6087 izgovorjav ) • 1/20 posnetkov za proces vmesnega vrednotenja ( validacijska množica - 555 izgovorjav ) • 1/10 posnetkov za proces končnega vrednotenja robustnosti ( testna množica – 1168 izgovorjav ) V vsaki izgovorjavi ( datoteki ) je v primerjavi z govorno zbirko ŠTEVKE precej manj govornih enot - besed ( povprečno 6 , ŠTEVKE pa 13 ) .
3.1.3 Vrednotenje robustnosti SRG V skladu z osnovnimi izhodišči je bila uspešnost referenčnih SRG merjena v simuliranih težjih pogojih delovanja , kjer je inherentna robustnost bolj izrazita .
Simulacija teh pogojev je bila izvedena z dodajanjem motenj osnovni testni množici .
Ob upoštevanju vseh možnih kombinacij je nastalo veliko število novih testnih množic : • 1 nespremenjena testna množica • 3 skupine po 7 testnih množic za aditivne motnje ob 3 izbranih vrednostih ciljnega razmerja energij signal / šum1 ( 3*7=21 množic ) Angl. " Signal to Noise Ratio " ali krajše SNR .
25 • 4 skupine kombinacij aditivnih in konvolutivnih sprememb ( 4*21=84 množic ) • 1 skupina s kombinacijo konvolutivnih sprememb in prvotne testne množice ( 4 množice ) Zaradi velikega števila so bile množice v praktičnih preizkusih uporabljane selektivno v sorazmernem obsegu s pričakovano pomembnostjo rezultatov .
V skupini aditivnih motenj je bilo uporabljenih sedem posnetkov : • govor več govorcev v zaprtem prostoru ( angl. oznaka " Babble " ) - oznaka " govor " • hrup v osebnem avtomobilu Volvo ( angl. oznaka " Volvo " ) - oznaka " volvo " • hrup v tovarni ( angl. oznaka " Factory " ) - oznaka " tovarna " • hrup v vojaškem letalu F-16 ( angl. oznaka " F-16 " ) - oznaka " F-16 " • beli šum ( angl. oznaka " White " ) - oznaka " beli šum " • roza šum ( angl. oznaka " Pink " ) - oznaka " roza šum " • pasovno omejen šum ( angl. oznaka " BP 900Hz " ) - oznaka " pas 900Hz " Pasovno omejen šum ( " pas 900Hz " ) je nastal " umetno " ; posnetek belega šuma je bil s pomočjo pasovno prepustnega filtra omejen na ožje frekvenčno področje med 800 in 1000Hz .
Poleg tega so med posameznimi besedami v zbirki ŠTEVKE daljši premori , ki " znižujejo " skupno energijo 26 signala in s tem tudi energijo dodanih motenj .
Z dodajanjem opisanih aditivnih motenj je testni del v obeh zbirkah pridobil skupino 7 novih testnih množic za vsako od treh izbranih vrednosti SNR .
Posamezne množice so na grafičnih prikazih imenovane s prej navedenimi oznakami , povprečne vrednosti množic v skupini pa skupaj s ciljnim razmerjem SNR ( npr. " aditivne motnje 0dB " ) .
3.1.3.2 Konvolutivne motnje Poleg aditivnih motenj se v govornih signalih najpogosteje pojavijo tudi konvolutivne spremembe .
Pogosto lahko konvolutivne spremembe nastanejo še kot posledica lastnosti prenosnih poti , še posebej pri analognih telefonskih zvezah .
V referenčnem okolju so bile implementirane štiri tipične konvolutivne spremembe govornih signalov .
27 Prvi konvolutivni motnji predstavljata nizkoprepustna filtra ( " lp " in " llp " ) 1 z različno izrazitim dušenjem v višjem frekvenčnem pasu .
V obeh oblikah je to dokaj pogost pojav .
Tretja konvolutivna motnja je visokoprepustni filter ( " hp " 2 ) , ki ima komplementarni potek amplitudnega odziva .
V postopku učenja se namreč v parametrih notranjih stanj akumulira opis časovne dinamike značilnosti posamezne govorne enote .
Referenčni HMM SRG je šolski primer realizacije statističnega pristopa .
Sledi še opis implementacije v programskem paketu HTK1 .
Opisi v nadaljevanju so omejeni na najpomembnejše informacije ; več podrobnosti se nahaja v [ 47 , 77 ] .
3.2.1 Teorija zveznih prikritih Markovih modelov Zvezni Markov model prvega reda ima končno množico notranjih stanj S = { 1 , 2 , …
N. ( 3.1 ) V izrazu ( 3.1 ) aij določa verjetnost prehoda iz stanja i v stanje j. Osnovna značilnost tovrstnih modelov je predpostavka , da je verjetnost prehoda med stanji odvisna le od predhodnega in ne ostalih stanj , v katerih se je proces nahajal .
Delovanje celotnega procesa se opiše z množico zaporednih notranjih stanj q = { q1 , q2 , …
Verjetnost izhodnega opazovanja ot v trenutku t in stanju qt = i je določena z izrazom : URL : " http://htk.eng.cam.ac.uk/ ".
R. opazovanje sestavljeno iz D komponent , se za njegov opis uporabi D - dimenzionalna gostotna funkcija Gaussove normalne porazdelitve bim ( ot ) = N ( ot ; µim ; ?
Slika 3.3 prikazuje primer gostote verjetnosti posamezne komponente opazovanja kot mešanice treh gostot normalnih porazdelitev .
x 10 1.2 1 0.8 0.6 0.4 0.2 0 -10 -8 -6 -4 -2 0 2 4 6 8 10 xj Slika 3.3 : Gostota porazdelitve komponente opazovanja xj kot mešanica treh gostot normalnih porazdelitev .
Zato sta v tem primeru napaka in s tem tudi vpliv na končno uspešnost sistema zelo odvisna od koreliranosti značilk v opisu signala .
Množica opisuje verjetnostno porazdelitev začetnih stanj procesa ={ i } , i = P ( q1 = i ) , 1 i N. Pri razpoznavanju govora se HMM modeli še dodatno omejijo pri prehajanju med notranjimi stanji ; v nekem trenutku lahko , ali ostanejo v istem stanju i ali pa preidejo v naslednje i+1 .
Tovrstni modeli se imenujejo tudi " levo-desni " 1 , ker je prehajanje možno le v smeri od začetnega stanja z oznako 1 proti končnemu N. Začetno stanje je vedno tudi prvo v množici zaporednih stanj q. Za te modele torej velja i = j = N 1 ?
i = sicer Primer " levo-desnega " modela s 6 notranjimi stanji prikazuje Slika 3.4.
1 1 t =2 Po avtorju se imenujejo tudi Bakisovi modeli .
32 Izraz ( 3.15 ) je enostaven , ker je zaporedje notranjih stanj znano .
Pri prikritih Markovih modelih je to zaporedje skrito , zato bi bilo teoretično potrebno izračunati vsoto teh verjetnosti po vseh možnih zaporedjih notranjih stanj ( 3.16 ) .
Pri praktični uporabi HMM modelov se rešujejo trije osnovni problemi1 : • problem evaluacije : izračun verjetnosti , s katero model = ( A , B , ) generira dano zaporedje opazovanj O = { o1 , o2 , …
Postopek izračuna verjetnost kot statistično mero za podobnost med opisom določene govorne enote , " skritim " v parametrih posameznega modela in dejanskim zaporedjem opazovanj kot trenutnim vhodnim opisom .
Na osnovi rezultatov tega postopka se izvrši dejanska izbira med Običajno se izbere govorna enota , ki generiranja vhodnega opisa signala .
, qT t =2 Ker je zaporedje stanj nedoločljivo , je potrebno izračunati vsoto parcialnih verjetnosti po vseh možnih zaporedjih notranjih stanj .
Najpogosteje se izbere kar pot od začetnega do končnega stanja sistema , ki maksimira verjetnost P ( O | ).
Končni rezultat je najbolj verjetno zaporedje notranjih stanj procesa .
• problem učenja : določanje parametrov modela = ( A , B , ) , da bo verjetnost P ( O | ) za podano zaporedje opazovanj O največja Problem je zahteven , ker ni znana njegova analitična rešitev .
Za učenje HMM modelov se lahko uporabijo tudi alternativni postopki .
Parametri modelov se določijo že prej v postopku učenja .
Osnovne atribute HMM referenčnega sistema podaja Tabela 3.1.
35 • parametrizacija govornega signala ( " HCode " ) • inicializacija HMM modelov ( " HInit " ) • učenje HMM modelov ( " HRest " , " HERest " ) • razpoznavanje ( " HVite " ) V postopku priprave sistema se najprej govorna zbirka razdeli na učni in testni del .
Govorni signal se razdeli na 32 ms dolge okvirje , ki so med seboj razmaknjeni za 10ms .
Najprej se izračuna 22 FBANK značilk , iz njih pa še MFCC značilke , ki so bile uporabljene v praktičnih preizkusih : • MFCC značilke ( 13 značilk v enem vektorju ) Vrednosti parametrov modelov se določajo v postopku učenja , ki se po izbranem kriteriju optimalnosti prilagajajo opisom besed v učnem delu baze .
V referenčnem sistemu je uporabljen kriterij " maksimalne podobnosti " 1 , ki vzpodbuja povečevanje verjetnosti za tisti model , ki ustreza govorni enoti v trenutnemu vhodnemu opisu .
Uspešnost učenja se preveri še z razpoznavanjem ( " HVite " ) na neodvisnih testnih množicah .
V procesu razpoznavanja poteka vrednotenje posameznih hipotez s pomočjo Viterbijevega iskanja .
HMM besedni modeli so vsebovali 8 notranjih stanj .
V referenčnem sistemu so modeli za izgovorjave vseh možnih besed in model tišine , ki opisuje signal pred in po izgovorjavi .
Klasični trinivojski perceptron nastopa v vlogi akustičnega modela , medtem ko algoritem Viterbijevega iskanja opravlja funkcijo časovnega modela .
Zaloga vrednosti po naraščajoči zahtevnosti poljubno dolga zaporedja števk neznan govorec majhen slovar ( 13 besed – ŠTEVKE , 10 – NUMBERS ) enostavna gramatika – enakovredna izbira med omenjenimi besedami ( ŠTEVKE ) in nizi besed ( NUMBERS ) Tabela 3.2 : Osnovni atributi referenčnega CSLU SRG .
Bistvena prednost razpoznavalnika je majhna prostorska in časovna kompleksnost [ 53 ] .
Še posebej to velja za vse bolj aktualno paradigmo porazdeljenega procesiranja govornih signalov [ 54 ] .
Ob tem se bodo namreč poenotili tudi opisi 37 govornih signalov , od katerih se pričakuje tako dobra reprodukcija zajetih signalov ( pomembno za osebno govorno komunikacijo ) kot tudi uspešno razpoznavanje njihove vsebine ( npr. avtomatska tvorba pisnih dokumentov ) .
V nadaljevanju so najprej predstavljene osnovne značilnosti nevronskih mrež pri akustičnem modeliranju govornih signalov , zatem pa še podrobnosti konkretne izvedbe posameznih postopkov v referenčnem CSLU razpoznavalniku .
3.3.1 Nevronske mreže kot akustični modeli Nevronske mreže so nastale kot poskus funkcionalnega modeliranja skupkov živčnih celic .
V zadnjem času je prišlo do intenzivnega razvoja tega koncepta , najrazličnejših področjih .
Najpogosteje opravlja vlogo akustičnega modela ; posamezne opise signala razvršča v elementarne razrede osnovnih govornih enot – običajno fonemov .
Vrednosti izhodnega vektorja so enake izračunanim aktivacijam nevronov na zadnjem nivoju .
Če je perceptron pravilno naučen z zadostnim številom učnih primerov , pogojne verjetnosti p ( Ci | x ) [ 55 ] ; Ci predstavlja govorni enoti i ustrezni razred , x pa vhodni vektor značilk .
Osnovno shemo hibridnega sistema prikazuje Slika 3.83. ( b ) spektralna analiza ( e Viterbijevo iskanje čas slovar , gramatika Slika 3.8 : Delovanje referenčnega CSLU razpoznavalnika .
Govorni signal ( a ) se najprej v procesu parametrizacije spremeni v zaporedje vektorjev značilk ( b ) , nato vstopi v fazo akustične klasifikacije ( c ) , ki jo opravi trinivojski perceptron ( d ) .
Rezultat klasifikacije je verjetnostna matrika ( e ) , na kateri se izvede postopek Viterbijevega iskanja ; določi končni rezultat razpoznavanja ( f ) .
40 podrobneje opisani pomembnejši procesi v delovanju sistema , več podatkov pa se nahaja še v dodatku C. 3.3.2.1 Parametrizacija Postopek parametrizacije je podrobneje opisan že v podpoglavju 2.2.
Govorni signal se razdeli na 32 ms dolge okvirje z 10 ms razmika .
Namesto izračuna klasičnih delta značilk po izrazu ( 2.7 ) , se v tem primeru uporabi t.i. kontekstno okno ; več sosednjih okvirjev se preprosto združi v skupni vektor značilk ( Slika 3.8-c ) .
V praktičnih preizkusih so bile uporabljene MFCC značilke s kontekstnim oknom : • MFCC značilke ( 5*13=65 značilk v enem vektorju ) Glede na željo po preučitvi vpliva oken na bolj elementarni ravni bi bilo smiselno uporabiti še bolj osnovne predstavitve signala .
Besede v slovarju se zato zapišejo kot zaporedja fonemov , ki ponazarjajo njihovo izgovorjavo .
Fonemske zapise besed v slovarjih obeh referenčnih govornih zbirk prikazujeta Tabela 3.3 in Tabela 3.4.
Problem koartikulacije je na prikazan način učinkovito rešen , vendar za ceno precej večjega števila elementarnih govornih enot - kategorij .
Na srečo se izkaže , da je mogoče kontekstne odvisnosti fonemov izraziti z relacijami med njihovimi večjimi skupinami .
Razdelitve fonemov v manjše enote – kategorije – za obe referenčni govorni zbirki prikazujeta Tabela 3.6 in Tabela 3.7.
Fonem Št. enot Fonem Št. enot Fonem .
3.3.2.3 Učenje trinivojskega perceptrona V CSLU razpoznavalniku se proces učenja perceptrona izvaja s standardnim postopkom vzvratnega razširjanja napake .
Osnovni cilj postopka je zmanjševanje srednje kvadratne napake , ki je za k-ti učni primer določena z izrazom : ?
Napaka izhodnega nevrona ej ( k ) je razlika med želeno dj ( k ) in dobljeno vrednostjo oj ( k ) : e ( k ) = d ( k ) - o ( k ) .
Vrednost nevrona j v nivoju l ob učnem primeru k je Q v ( l ) ( k ) = ( k ) yi ( l -1 ) ( k ) , i = 1 kjer sta yi ( l-1 ) ( k ) izhod nevrona i v predhodnem nivoju in wji ( l ) ( k ) sinaptične uteži na povezavi med nevronoma i in j v prejšnjem ter trenutnem nivoju ; Q je število Npr. povprečje petih hipotez z najvišjimi verjetnostmi .
2. " vzvratni prehod " – učenje mreže ; izvrši se prilagoditev uteži v skladu z pravilom popravljanja napake : Postopek se začne z izračunom napake na izhodnem nivoju ej ( k ) ( 3.21 ) in postopoma napreduje skozi nivoje proti vhodnim vrednostim .
( k ) = e ( L ) ( k ) o ( k ) ( 1 - o ( k ) ) , kjer je oj ( k ) izhodna vrednost mreže in ej ( L ) ( k ) napaka na Lokalni gradient za nevron j v skritem nivoju l je določen z izrazom ?
Sinaptične uteži mreže v nivoju l se spremenijo z upoštevanjem delta pravila 45 ?
( k ) y ( l-1 ) ( k ) , kjer je ?
Z iterativnim izvajanjem postopka vzvratnega razširjanja napake se izhodne vrednosti vse bolj približujejo zadanim učnim vrednostim v skladu s kriterijem srednje kvadratne napake ?
k = 1 Pri tem je proces učenja potrebno prekiniti , še preden pride do pretirane prilagoditve učnim podatkom , ki povzroči manjšo uspešnost na neodvisni validacijski množici .
Celoten postopek učenja je povzet v naslednjem okvirju .
Postopek učenja nevronske mreže V učni množici se nahajajo pari vhodnih vektorjev x ( k ) in želenih izhodnih vrednosti mreže d ( k ) : U = { [ x ( k ) , d ( k ) ] ; k = 1 , 2 , ...
( 3.30 ) Osnovni koraki učenja so : • inicializacija ( začetne vrednosti vseh parametrov so običajno majhne naključno izbrane vrednosti ) • za vsak prehod podatkov • za vsak učni primer iz U • prehod naprej • vzvratni prehod s prilagajanjem uteži • prilagoditev učnega koraka 46 V CSLU sistemu se najprej izvede učenje mreže v 40 iteracijah .
Posebnost postopka učenja v fonemsko zasnovanih SRG ( mednje sodi tudi CSLU razpoznavalnik ) je t.i. trofazno učenje .
Učenje se nato izvede v treh korakih : 1. učenje nevronske mreže na fonemsko označenih učnih primerih ( manjša podmnožica celotne učne množice ) 2. naučena mreža avtomatsko fonemsko označi preostali del učne množice 3. postopek učenja se ponovi z večjim številom učnih primerov V CSLU paketu je na voljo tudi še postopek učenja po t.i. " Forward-Backward " načelu1 , ki se pri učenju tovrstnih sistemov kljub dodatni kompleksnosti pogosto uporabi .
Praktični preizkusi potrjujejo , da so tako naučene mreže v splošnem uspešnejše od tistih brez tega dodatnega postopka [ 56 ] .
Glavna naloga Viterbijevega iskanja je , da matriko preslika v končne verjetnosti za vse besede v slovarju .
Nato se po načelu dinamičnega programiranja " prehodi " pot za vsako besedo v skladu z dovoljenim zaporedjem kategorij .
Končni rezultat postopka so verjetnosti za vse besede v slovarju .
NAČRTOVANJE IN UPORABA NESIMETRIČNIH OKEN V SISTEMIH ZA RAZPOZNAVANJE GOVORA Že v podpoglavju 2.2.1 je bila na kratko obravnavana vloga oken v frekvenčni analizi govornih signalov .
Če ima zaznaven pozitivni učinek na robustnost SRG in hitrost razpoznave , je sprememba upravičena .
Rezultat frekvenčne analize signalov je kompleksni frekvenčni odziv .
Da bi bil vpliv okna na ta odziv ničen , bi okno moralo imeti idealne lastnosti , ki v praksi niso dosegljive .
Podrobnejšem opisu vloge oken v frekvenčni analizi govornih signalov je posvečeno podpoglavje 4.1.
Vendar so , glede na potreben čas za preučitev in implementacijo množice specializiranih metod , splošne metode v tem primeru boljša izbira .
Obstajajo že prvi prototipi tovrstnih razpoznavalnikov , ki zaenkrat temeljijo na t.i. globalni nevronski mreži ; ta vključuje tako proces parametrizacije kot tudi akustične klasifikacije [ 80 ] .
V prihodnosti bo takih sistemov vedno več ; ustrezni postopki učenja pa bodo najverjetneje bližje 49 splošnim optimizacijskim metodam , ki bolje obvladujejo raznolikost takšne zasnove .
Pri načrtovanju nesimetričnih oken je potrebno najprej določiti lastnosti želene rešitve in ustrezne optimizacijske kriterije .
Proučevanje vpliva na uspešnost SRG zahteva načrtovanje nesimetričnih oken z različnimi lastnostmi in večje število praktičnih preizkusov .
V podpoglavju 4.5 je podrobneje opisanih nekaj različnih metod za načrtovanje oken s sprotno analizo lastnosti dobljenih rešitev .
4.1 OKNA V FREKVENČNI ANALIZI GOVORNIH SIGNALOV Kratkočasovna Fourierova transformacija ( KČFT ) je najbolj razširjen postopek frekvenčne analize na področju ARG .
Vzorci v vsakem okvirju se najprej pomnožijo z okenskim zaporedjem .
Enakovredna operacija v frekvenčnem prostoru je konvolucijski integral med Fourierovima transformoma okna W ( e j ?
Iz ( 4.1 ) se lahko določi idealen frekvenčni odziv okna W ( e j ?
V amplitudnem odzivu okna bi moral biti glavni val neskončno ozek in amplituda stranskih valov neskončno majhna .
Na področju splošne frekvenčne analize signalov se običajno izpostavita dva pojava , ki sta neposredno odvisna prav od lastnosti uporabljenega okna in natančneje opredeljena v ( 4.1 ) : 50 • spektralno " razmazanje " Amplitudni odziv okenskega zaporedja ima t.i. glavni val s končno strmino prehoda v področje stranskih valov .
• spektralno " puščanje " Amplitudni odziv okenskega zaporedja ima izven glavnega vala le končno dušenje – t.i. stranske valove , ki povzročijo " puščanje " energije posamezne frekvenčne komponente v druge dele amplitudnega spektra .
Slika 4.1-a je nastala z uporabo Hammingovega okna in Slika 4.1-b z modificiranim Poissonovim oknom1 , ki ima sicer zaradi širšega glavnega vala večje razmazanje , a zaradi nižjih stranskih valov precej manjše spektralno puščanje .
Zato je možnost absolutnih izboljšav v tem primeru omejena , ker ni mogoče poljubno zmanjšati vpliva enega , ne da bi se pri tem povečal vpliv drugega .
Z uporabo oken na področju ARG se pojavi še problem določitve njihovega želenega amplitudnega odziva .
Posebna pozornost je v nadaljevanju posvečena iskanju odgovorov na ta osnovna vprašanja .
4.2 PREDNOSTI NESIMETRIČNIH OKEN Trenutno v SRG prevladujejo simetrična okenska zaporedja z linearnim faznim odzivom1 , ki je bolj pomemben pri uporabi zaporedja kot enotinega odziva LČI2 sistema ; vse frekvenčne komponente signala se namreč pri prehodu skozi tak sistem enako zakasnijo .
V primeru uporabe zaporedja kot okna v frekvenčni analizi SRG pa je linearnost faze manj pomembna .
Med njimi sta najmočnejša predvsem dva argumenta : • s področja načrtovanja KEO filtrov je znano , da se s sprostitvijo zahteve po linearnosti faze lahko dosežejo boljše lastnosti filtra • na področju kodiranja govornih signalov so nesimetrična okna že dokaj razširjena , predvsem zaradi krajših časovnih zakasnitev pri analizi govornih signalov Npr. Hammingovo , Blackmanovo , Kaiserjeva okna .
52 Prvo dejstvo je podlaga za načrtovanje nesimetričnih oken , ki imajo nekatere pomembne lastnosti boljše od simetričnih .
Tako se npr. lahko dosežejo nižji stranski valovi in s tem zmanjša spektralno puščanje .
Slika 4.2 prikazuje rezultate analize koreliranosti FBANK značilk pri skupini 70 govorcev iz govorne zbirke NUMBERS .
Razlika se v primeru dodanih motenj še poveča ( Slika 4.2-b ) .
Na tak način dobljeno okno ( t.i. hibridno Hamming-kosinusno okno2 ) je sestavni del standarda ITU3 za postopek kompresije govornega signala s krajšo časovno zakasnitvijo4 [ 31 ] .
Lastnost časovne zakasnitve je na področju kodiranja govornih signalov postala bistvenega pomena z razmahom njihovega prenosa po digitalnih omrežjih .
Da bi razlike v časovni zakasnitvi prišle bolj do izraza , je bil uporabljen drseč izračun obeh spektrogramov .
Razvidno je , da simetrično okno v splošnem povzroča kasnejšo detekcijo posameznih komponent v signalu .
Zato se vse pogosteje v zvezi z njimi pojavlja tudi zahteva po krajših časovnih zakasnitvah v njihovem delovanju ; še posebej to velja za časovno kritične aplikacije - npr. prevajanje .
4.3 UPORABA SPLOŠNIH OPTIMIZACIJSKIH METOD Poglobljena analiza množice obstoječih optimizacijskih metod , ki bi se lahko uporabile za načrtovanje oken v SRG , presega namen tega dela .
Poleg tega je raznolikost kriterijev , želenih rešitev in drugih parametrov tako velika , da je uporaba vsaki situaciji prilagojenih metod in zamudna .
Poleg splošnih lastnosti , kot so hitrost , stabilnost in robustnost , se v primeru načrtovanja oken od izbrane metode zahteva še enostavno dinamično določanje želene rešitve , funkcije napake in poljubnih omejitev .
Na osnovi doseženih rešitev , hitrosti in stabilnosti iskanja rešitev ter ugotovljene enostavnosti manipulacije z omejitvami in funkcijo napake je bila izbrana najustreznejša metoda oziroma njena implementacija - SOLVOPT2 .
Podrobnejši opis izbrane metode SOLVOPT se nahaja v [ 124 , 125 ] , njena uporaba pri načrtovanju oken po različnih kriterijih pa je podrobneje predstavljena v dodatku A. 4.4 ŽELENE LASTNOSTI IN KRITERIJI NAČRTOVANJA NESIMETRIČNIH OKEN Posebnosti področja ARG in specifično vrednotenje optimalnosti oken z vidika robustnosti razpoznavanja pomembno vplivajo na želene lastnosti okna in kriterije za njegovo načrtovanje .
V nadaljevanju sta najprej opisana dva najbolj znana kriterija za načrtovanje digitalnih filtrov oziroma oken .
Sledi še opis nekaterih alternativnih kriterijev , ki so za dosego želenih lastnosti bolj primerni .
Med optimalnimi rešitvami po obeh kriterijih je nekaj pomembnih razlik .
Do večjih razlik pride le pri obravnavi spektralnega puščanja .
V tem primeru bi okno moralo imeti ( ob dopustnem povišanju v neposredni bližini glavnega vala ) precej nižje vrednosti amplitudnega odziva v oddaljenih delih spektra .
Ta zahteva je nedvomno v tesnejši povezavi z MSE kriterijem .
58 4.4.2 Želene lastnosti okna Eno temeljnih vprašanj pri načrtovanju nesimetričnih oken v SRG so lastnosti želenega amplitudnega odziva okna .
Na osnovi izkušenj in znanj s področij načrtovanja digitalnih filtrov , frekvenčne analize in razpoznavanja govora se kljub temu lahko izpostavi nekaj ugotovitev , ki so pomembne za oblikovanje želenega amplitudnega odziva : • odsekoma konstanten amplitudni odziv ( zelo pogost pri načrtovanju filtrov ) ni nujno najbolj primeren tudi za načrtovanje oken • parametrizacija v SRG združuje informacije v sosednjih frekvenčnih točkah , zato je bližnje spektralno puščanje manj pomembno • ločljivost frekvenčne analize je v SRG manj pomembna [ 57 ] • delovanje SRG pogosto temelji na implicitnih predpostavkah , na katere lahko imajo lastnosti okna pomemben vpliv ( npr. spektralno puščanje zmanjšuje neodvisnost informacij v frekvenčnih pasovih oziroma značilkah , kar lahko negativno vpliva na uspešnost HMM razpoznavalnikov ) • v govornih signalih so pogoste frekvenčno omejene motnje ( npr. brnenje , zvoki , piski ) - z večjim spektralnim puščanjem se " prenesejo " tudi v druge dele spektra in zmanjšujejo nivo za razpoznavo koristnih informacij • filtri za frekvenčno analizo v človekovi govorni percepciji imajo širše glavne valove ter monotono padajoče amplitudne odzive • monotoni amplitudni odzivi so zaželeni v nekaterih posebnih postopkih procesiranja zvočnih signalov [ 66 ] Idealni amplitudni odziv okna je v praksi nedosegljiv .
Glede na povedano so želene lastnosti amplitudnega odziva naslednje : • širši glavni val in nižji stranski valovi • padajoča višina stranskih valov • monoton potek 59 4.4.3 Kriteriji za načrtovanje oken Po določitvi osnovnih značilnosti želene rešitve je potrebna še razprava o možnih kriterijih za njeno načrtovanje .
Glede na časovno kompleksnost iskanja optimalnih rešitev osnovnega problema je smotrno preizkusiti še enostavnejše načine načrtovanja oken s pomočjo parametričnih modelov , ki so zelo blizu značilnostim človekovega sluha .
V teh primerih so namreč značilnosti amplitudnega odziva rešitve , določene že z izbiro samega modela in ustreznih parametrov .
Zato so za tovrstna načrtovanja zanimivi tudi kriteriji , ki ne vsebujejo eksplicitne definicije želenega amplitudnega odziva ; posebej zanimivi so trije : • " MSR " - razmerje energij glavnega in stranskih valov [ 93 ] 2 H ( e ) d ?
60 Kriterij MSR je zaradi pozornosti , namenjene nesimetričnim oknom , manj zanimiv , ker vodi v simetrične rešitve1 .
" TDI " izraža mero za časovno zakasnitev2 pri uporabi okna v KČFT , medtem ko " D " izraža razmerje med energijo najvišje točke glavnega vala in ostalega spektra v celoti .
4.5 NAČRTOVANJE NESIMETRIČNIH OKEN Nekatere naše dosedanje raziskave so pokazale [ 78-82 ] , da je vpliv okna na robustnost SRG precej večji , kot bi sprva bilo mogoče pričakovati glede na majhno pozornost , posvečeno temu področju .
Najpomembnejšo vlogo pri določanju vpliva okenske funkcije ima njen amplitudni odziv .
Podrobnejši opis se nahaja v prvem podpoglavju ( 4.5.1 ) .
Psihoakustične in biološke raziskave potrjujejo tezo , da je frekvenčna analiza v človekovem sluhu sestavljena iz množice enostavnejših filtrov , ki jih je mogoče posnemati z ustreznimi modeli .
Omenjeni modeli so že v prejšnjih raziskavah pokazali pozitiven vpliv na robustnost SRG [ 80-82 ] – enaka pričakovanja pa je mogoče izraziti tudi za rezultate , predstavljene v tem delu .
Uporaba NEO parametričnih modelov je podrobneje obravnavana v podpoglavju 4.5.2.
Nesimetrična okna se lahko načrtujejo tudi s pomočjo obstoječih simetričnih .
61 Za KEO filtre z linearno fazo oziroma simetrična okna obstaja za načrtovanje učinkovit Parks-McClellanov postopek [ 117 ] , ki rešuje problem realne aproksimacije po Čebiševem kriteriju .
Druga , t.i. Čebiševa napaka amplitudnega odziva ( podpoglavje 4.5.1.2 ) , je ohlapnejša različica prve , saj upošteva kot funkcijo napake absolutno vrednost razlike obeh amplitudnih odzivov .
Čebiševa napaka je definirana kot absolutna vrednost razlike med obema kompleksnima frekvenčnima odzivoma – želenim in dobljenim .
4.5.1.1.1 Definicija problema Poiskati želimo optimalni enotin odziv filtra dolžine N , h * = [ h * ( 0 ) , h * ( 1 ) , ...
4.5.1.1.2 Optimalna rešitev problema Za prej definirani problem ( 4.10 ) - ( 4.14 ) obstaja enolična optimalna rešitev .
Pri reševanju zastavljenega problema se lahko uporabi več optimizacijskih metod ; v nadaljevanju sta v ločenih podpoglavjih podrobneje predstavljeni dve .
Ker eksplicitne zahteve po simetriji ni več , fazni odzivi dobljenih oken niso več linearni .
-?
Problem se lahko sedaj zapiše v obliki primarnega linearnega programa : Določi h = [ h ( 0 ) , h ( 1 ) , ...
0 k = 1 Problem neskončnega števila točk ( , ) iz primarnega linearnega programa se v dualnem omeji na obravnavo N+1 " ekstremalnih " točk , katerih uteži so neničelne – imenujejo se tudi bazne spremenljivke .
4.5.1.1.4 Načrtovanje s pomočjo posplošenega Remezovega algoritma Osnovna ideja te metode je uporaba znanega Remezovega algoritma na splošnejšem problemu aproksimacije poljubnega frekvenčnega odziva .
Postopek načrtovanja poteka v iteracijskih korakih .
Njegove vrednosti se zato med postopkom spreminjajo po vnaprej določenih empiričnih pravilih .
4.5.1.2 Kriterij Čebiševe napake amplitudnega odziva Kriterij je ohlapnejši od Čebiševe napake frekvenčnega odziva ( podpoglavje 4.5.1.1 ) , saj kot napako upošteva le absolutno vrednost razlike v obeh amplitudnih odzivih ( 4.25 ) .
Funkcija napake je določena z izrazom 66 E ' ( e j ?
) | , ???
Podrobnosti dejanske izvedbe načrtovanja so v dodatku A. 4.5.1.3 Primerjava rezultatov obeh metod Za primerjavo opisanih metod so bila načrtovana simetrična in nesimetrična okna z enakim želenim amplitudnim odzivom dolžine N = 2561. Ta je bil odsekoma konstanten z začetkom zapornega pasu v točki 3-kratne širine glavnega vala enako dolgega Hammingovega okna .
V nadaljevanju ( Slika 4.6 , Slika 4.7 ) je prikazana primerjava lastnosti po obeh kriterijih načrtovanih oken z relativnim razmerjem uteži napak v glavnem in stranskih valovih 1:10.
Za lažjo primerjavo so okna normalizirana2 .
Okno z linearno fazo , načrtovano s Parks-McClellanovim postopkom , ima oznako " hremez _ 10 " .
Z " hlinprog _ 10 " je označeno okno , dobljeno s pomočjo linearnega programiranja po kriteriju Čebiševe napake frekvenčnega odziva ( obe predstavljeni rezultate ) , in s " hsolvopt _ 10 " rešitev , dobljena po kriteriju Čebiševe napake amplitudnega odziva .
Pri frekvenci vzorčenja Fs = 8000Hz to ustreza oknu dolžine 32 ms .
67 hsolvopt _ 10 0.03 hlinprog _ 10 hremez _ 10 , hlinprog _ 10 hsolvopt _ 10 h ( n ) 0.06 0.08 0.1 normalizirana frekvenca Slika 4.6 : Prikaz amplitudnih odzivov in časovnih potekov oken , načrtovanih po kriteriju kompleksne Čebiševe napake .
Metoda SOLVOPT je dala v vseh primerih konsistentne rezultate .
Višina stranskih valov oken " hsolvopt " je bila vedno nižja od ustreznih " hremez " oken ; prav tako je večja utež napake vedno pomenila tudi nižje stranske valove – seveda na račun večje napake v glavnem valu , za katero se predvideva , da je v tem primeru manj pomembna .
Rezultate praktičnega preizkusa na sistemu CSLU-NUMBERS-MFCC2 prikazuje Slika 4.8.
To je najbolj zaznavno pri vrednosti uteži 1000 oziroma oknih " hremez _ 1000 " in " hsolvopt _ 1000 " ; pri tem je posebej zanimivo tudi to , da je vpliv konsistenten v vseh navedenih skupinah testnih množic , razen pri osnovni ( " čist " ) .
Ustrezne oznake so npr. " remez _ 1000 " ali " solvopt _ 10 " , kjer beseda pomeni metodo načrtovanja , številka pa relativno utež napake izven glavnega vala .
Praktični preizkusi so označeni z zaporedjem oznak " ime _ sistema-govorna zbirka-tip _ značilk " .
Ideja o oknih , ki jih je mogoče načrtovati s pomočjo preprostih NEO sistemov , izvira z več področij : • kodiranje govornih signalov – postopek rekurzivnega izračuna LPC značilk [ 102 ] • spoznanja o človekovem sluhu [ 68 ] – enostavna oblika filtrov v frekvenčni analizi • NEO sistemi nizkega reda – enostavnost , monotonost amplitudnih odzivov Predstavniki družine " NEO oken " so končni odseki odzivov na enotin impulz preprostih NEO sistemov s prevajalno funkcijo ?
Parametre NEO sistemov za generiranje izbranih oken prikazuje Tabela 4.1.
Amplitudne odzive in časovne poteke izbranih NEO oken prikazuje Slika 4.9.
Pri tovrstnih primerjavah je potrebno bolj upoštevati še druge dejavnike .
NEO okna so v časovnih potekih precej ožja in potemtakem efektivno zajamejo manj podatkov .
Tako je vpliv efektivne dolžine okna v primerjavah s Hammingovim zmanjšan .
Nenazadnje pa je potrebno upoštevati še tezo , ki govori o odvisnosti doseženih rezultatov od dejanskih podatkov oziroma pogojev delovanja .
Zato sta bili obe " problematični " NEO okni preizkušeni še na govorni zbirki NUMBERS ( Slika 4.10 – zadnji vrstici ) , kjer so rezultati v skladu s pričakovanji ; boljše lastnosti okna NEO3 so se odrazile tudi v večji uspešnosti SRG .
4.5.2.1 NEO eksponentna okna Pri podrobnejši analizi NEO oken se izkaže , da je mogoče v primeru NEO sistema ( 4.27 ) z dvema poloma ( M = 2 ) in dodatnim členom ?
z-1 v števcu prevajalne funkcije H ( z ) odziv na Rezultati Hammingovih oken vseh treh dolžin so bili zelo podobni ( Slika 5.1 ) .
< 1 .
Časovni poteki vseh oken , razen posebej označene izjeme3 , so zaradi krajše časovne zakasnitve prezrcaljeni .
Pri načrtovanju NEO eksponentnih oken z metodo SOLVOPT se pokaže zanimiva lastnost ; s spreminjanjem lege polov se napaki po obeh alternativnih kriterijih ( TDI in D ) 4 spreminjata po značilni krivulji ( Slika 4.11 ) , podobni tisti , ki prikazuje relacijo med " minimaks " in MSE napako pri splošnem načrtovanju končnih zaporedij ( Slika 4.4 ) .
Za praktični preizkus v referenčnem okolju je bilo izbranih 6 eksponentnih oken v značilnih točkah krivulje .
Takrat sta okni bili izbrani na osnovi analize V nadaljevanju imenovana " eksponentna " okna .
Slika 4.11 potrjuje , da ta izbira ni bila naključje , ampak predstavlja sprejemljiv kompromis .
eksponentnih oken od napak po kriterijih TDI in D. 74 Slika 4.12 prikazuje amplitudne odzive in časovne poteke izbranih eksponentnih oken .
Izbrana eksponentna okna so bila preizkušena na referenčnem CSLU SRG ob uporabi obeh govornih zbirk .
4.5.3 Nesimetrične modifikacije obstoječih oken Značilnost enostavnih , eksplicitno določenih simetričnih oken1 so vnaprej znane karakteristične lastnosti , ki jih ni mogoče prilagajati specifičnim potrebam .
76 pogosto med seboj kombinirajo na najrazličnejše načine .
ITU okno namreč v okvirju bolj poudari " novejše " vzorce govornega signala , medtem ko simetrično okno ( v tem primeru " Hann " ) poudari " starejše " vzorce okoli sredine okvirja ( Slika 4.15 ) .
Iz amplitudnega odziva ITU okna ( Slika 4.15 ) je razvidno , da nekatere njegove lastnosti ( predvsem nižje asimptotično dušenje ) niso povsem v skladu z že navedenimi spoznanji o potrebnih lastnostih okna za robustno razpoznavanje govora ( podpoglavje 4.4.2 ) .
Pri tem je potrebno upoštevati , da je primarni namen uporabe ITU okna postopek kodiranja , ki temelji na LPC analizi ; ta velja za manj občutljivo na spremembe v amplitudnem odzivu .
Kljub temu je mogoče v preizkus na obeh področjih predlagati dve alternativni možnosti .
Hannovo okno bolj ustreza deklariranim lastnostim želenega amplitudnega odziva in predstavlja resno alternativo najširše uporabljanemu Hammingovemu oknu .
Drugo predlagano okno , t.i. modificirano Poissonovo okno , pa je z množenjem pridobljena kombinacija časovno premaknjenega Poissonovega in simetričnega Hannovega okna : ?
Modificirano Poissonovo okno združuje dobre lastnosti dveh oken : • krajša časovna zakasnitev – časovno premaknjeno Poissonovo okno • dobro asimptotično dušenje – Hannovo okno 78 APoisson 3 2 1.5 D 1 APoisson 5 , 5a 0.5 APoisson 8 APoisson 16 0 110 115 120 125 130 135 140 145 150 TDI Slika 4.16 : Prikaz modificiranih Poissonovih oken v odvisnosti od napak po kriterijih TDI in D. Opisano okno je v nadaljevanju imenovano kot modificirano nesimetrično Poissonovo okno ali krajše " APoisson " oziroma " AP " .
Njegova osnovna značilnost v primerjavi z ITU oknom je ob sicer daljši časovni zakasnitvi , precej boljši amplitudni odziv .
Časovni poteki vseh izbranih oken , razen posebej označene izjeme ( " APoisson 5a " ) , so zaradi krajše časovne zakasnitve prezrcaljeni .
modificiranih Poissonovih oken od napak po obeh alternativnih kriterijih ( TDI in D ) .
Za praktični preizkus je bilo izbranih 6 oken v značilnih točkah omenjene krivulje , katerih časovni poteki so bili zaradi krajše zakasnitve prezrcaljeni .
Podrobnejši podatki o izbranih oknih se nahajajo v Tabeli 4.3.
se : - zmanjšuje asimptotično padanje vrednosti amplitudnega odziva - povečuje TDI ( krajša časovna zakasnitev ) - manjša efektivna dolžina okna APoisson35 35 Tabela 4.3 : Parametri modificiranih Poissonovih oken .
80 Rezultati izbranih oken na CSLU-MFCC sistemu in obeh govornih zbirkah ( Slika 4.18 , Slika 4.19 ) na prvi pogled niso povsem v skladu s pričakovanji .
To pomeni , da je asimptotično padajoča vrednost amplitudnega odziva sicer pomembna lastnost , še zdaleč pa ne tudi edina .
= 5. Efektivna dolžina tega okna , določena z izrazom ( 4.7 ) , je namreč enaka efektivni dolžini 25ms dolgega Hammingovega okna , ki se je med svojimi tremi različnimi dolžinami ( 16ms , 25ms , 32ms ) izkazalo za najbolj robustno1 .
V prid tej ugotovitvi je tudi znano dejstvo s področja ARG , da je dolžina uporabljenega okna kompromis med obema bolj skrajnima željama : daljšim oknom za uspešno razpoznavanje stacionarnih glasov ( samoglasniki ) in krajšim za razpoznavanje krajših , nestacionarnih glasov ( npr. zaporniki ) .
Ta dejstva postavljajo pod vprašaj primernost frekvenčne analize govornih signalov z enako dolgim oknom , kar pa je predmet drugih raziskav [ 57 ] .
4.6 UGOTOVITVE Na osnovi analize načrtovanih oken in rezultatov delnih praktičnih preizkusov se ugotovi naslednje : • Asimptotično padanje višine stranskih valov in s tem spektralno puščanje pozitivno vpliva na robustnost SRG .
• Problem efektivne dolžine okna ima širše ozadje .
Za ARG vemo , da je dinamična dolžina okna najboljša rešitev , saj je konstantna dolžina precejšnja poenostavitev .
Obstaja 82 optimalna točka , ki je najboljši kompromis širin glavnih valov v frekvenčnem in časovnem prostoru .
Enaka ugotovitev velja tudi za kriterij usmerjenosti – " D " ( Slika 4.11 in Slika 4.16 ) .
• Medsebojna primerjava obeh kriterijev samo na osnovi točk na karakteristični krivulji je poenostavitev , vendar pri danih parametričnih modelih druge možnosti ni .
Glede na to , da imata obe okni v paru enak amplitudni odziv , očitno nastopi še dodaten vpliv krajšanja časovne zakasnitve , ki je glede na rezultate zelo odvisen od uporabljene govorne zbirke .
Rezultati namreč pokažejo , da sta razliki nekonsistentni v odvisnosti od uporabljene govorne zbirke ( pri NEO eksponentnih oknih je npr. nezrcaljeno okno " Exp 4a " v primeru zbirke ŠTEVKE boljše od zrcaljene različice " Exp 4 " – Slika 4.13 , v primeru NUMBERS pa slabše – Slika 4.14 ) .
Zaradi krajše časovne zakasnitve so časovni poteki večine nesimetričnih oken v podpoglavjih 4.5.2 in 4.5.3 prezrcaljeni .
Zaradi naših prejšnjih raziskav , kjer zrcaljenje časovnih potekov ni bilo izvedeno , v primerjavah nastopijo tudi takrat uporabljena okna , ki imajo nezrcaljen časovni potek – njihovi oznaki je na koncu dodana še črka " a " .
Poleg načrtovanja nesimetričnih oken je pomembna še proučitev njihovega vpliva na uspešnost in robustnost SRG .
Osnovno izhodišče praktičnih preizkusov je zagotovitev zadostne raznolikosti referenčnega okolja , ki omogoča splošnejšo oceno vpliva okna na končno uspešnost SRG .
S tem se lahko razkrijejo še morebitni vplivi ostalih dejavnikov .
Podrobnejše " uglaševanje " obeh referenčnih sistemov za dosego absolutno najboljših kvantitativnih rezultatov namreč presega namen disertacije .
Zato bo interpretacija rezultatov v nadaljevanju bolj usmerjena k drugim dejavnikom : npr. vplivu uporabljenih referenčnih sistemov , zbirk in ostalih parametrov .
V podpoglavju 5.3 se nahaja primerjava uspešnosti ITU okna in predlaganih alternativnih rešitev .
Uspešnost SRG je v tabelah izražena v odstotku uspešno razpoznanih besed .
V prvi sta najbolj popularni simetrični Hammingovo in Hannovo , v drugi pa se nahajajo izbrana nesimetrična okna .
V nadaljevanju so najprej za vsako od kombinacij referenčnih SRG in govornih zbirk navedeni rezultati skupine simetričnih oken .
Hammingovo okno je zaradi že v podpoglavju 4.5.3 omenjenega problema efektivne širine okna v časovnem poteku ovrednoteno v več možnih dolžinah : 16ms , 25ms , 32ms .
V primerjavah so navedene povprečne vrednosti po posameznih skupinah testnih množic in na koncu še povprečje po vseh testnih množicah .
Podrobnejša specifikacija uporabljenih oznak skupin testnih množic se nahaja v dodatku D. Na koncu vsakega podpoglavja sledi še primerjava uspešnosti na manjšem številu izbranih testnih množic , pri katerih je prišlo do večjih razlik v uspešnosti posameznih oken .
5.1.1 " CSLU-ŠTEVKE-MFCC " SRG Primerjava uspešnosti CSLU razpoznavalnika ob uporabi govorne zbirke ŠTEVKE je prikazana na slikah 5.1-5.3.
Za predstavitev govornega signala so bile uporabljene kepstralno normalizirane MFCC značilke ; po 13 v vsakem od 5 okvirjev t.i. kontekstnega okna , kar skupaj pomeni 65 značilk v vektorju .
Med simetričnimi okni ( Slika 5.1 ) v povprečju precej izstopa Hannovo ; pozitivna razlika nastane predvsem v kombinaciji aditivnih in konvolutivnih motenj .
Podrobnejša primerjava uspešnosti na izbranih testnih množicah ( Slika 5.3 ) pokaže največja razhajanja v primeru konvolutivnih motenj ; še posebej pri nizkoprepustni konvolutivni spremembi testnih množic ( oznaka " llp " ) .
Dokaj nevzpodbudne rezultate ima ITU okno , ki je v primerjavi s Hammingovim še nekoliko slabše ; glede na izrazitejše spektralno puščanje je tak izid pričakovan .
Hamming 25ms Hann APoisson 5a Exp 4a ITU Hamming Cosine aditivne aditivne aditivne konvolu - 12dB 6dB 0dB tivne 85,88 72,57 55,85 83,67 86,35 74,48 55,09 82,78 86,95 75,51 56,61 84,12 87,83 75,16 55,88 85,70 85,72 73,56 53,32 82,39 Slika 5.2 : Uspešnost CSLU-ŠTEVKE-MFCC SRG z izbranimi simetričnimi in nesimetričnimi okni .
Proces parametrizacije in predstavitev signala sta enaka tistim pri zbirki ŠTEVKE v podpoglavju 5.1.1.
Razlika je sicer majhna , vendar imajo zaradi večje velikosti testnih množic rezultati večjo težo .
Zanimiv pojav je težko natančneje opredeliti , ker je zmožnost interpretacije naučenega znanja pri nevronskih mrežah omejena .
85,63 69,10 41,31 87,53 73,88 56,94 32,09 58,01 87,04 71,56 44,85 89,29 76,73 61,12 36,54 61,47 83,38 68,79 43,43 88,67 74,64 59,20 35,22 59,59 86,84 73,24 45,81 87,45 79,45 66,28 40,82 64,65 Slika 5.4 : Uspešnost CSLU-NUMBERS-MFCC SRG s simetričnimi okni .
Razlike so v primerjavi z zbirko ŠTEVKE manjše , vendar še vedno dokaj konsistentno v prid oknom z manjšim spektralnim puščanjem ( Hann , Exp , APoisson ) .
Nivo motenj v testnih množicah je bil enak kot pri " CSLU-ŠTEVKE-MFCC " razpoznavalniku ( podpoglavje 5.1.1 ) .
Delta značilke pri preizkusih na HMM razpoznavalniku v želji po večji raznolikosti niso bile uporabljene , zato so rezultati v primerjavi s " CSLU-ŠTEVKE - MFCC " razpoznavalnikom pričakovano slabši .
Vsi rezultati HMM razpoznavalnika so bili dobljeni z uporabo 8 mešanic normalnih porazdelitev .
V podobnih primerih se običajno HMM modeli z različnim številom mešanic ovrednotijo na validacijski množici ; za preizkus na testni množici se izberejo najuspešnejši med njimi .
Ker število mešanic lahko bistveno vpliva na robustnost SRG , so bili vsi preizkusi izvedeni ob enakem številu uporabljenih mešanic .
Izbrani nesimetrični okni sta konsistentno najboljši v vseh skupinah testnih množic ( Slika 5.8 ) .
Okna namreč zmanjšujejo nivo motenj le posredno z omejevanjem lastnosti spektralnega puščanja .
Na področju ARG je znanih kar nekaj aktivnejših načinov odpravljanja motenj ( npr. spektralno odštevanje , adaptivno filtriranje ) , vendar so ti časovno in prostorsko precej bolj zahtevni .
5.2 ZAPOREDNI PREIZKUS Rezultati tega preizkusa so za končne ugotovitve o vplivu nesimetričnih oken še posebej pomembni .
Na ta način je bilo naučenemu sistemu okno spremenjeno šele v fazi delovanja .
V primerjavi izidov vseh treh vrstic je skrit odgovor na vprašanje , ali uporaba " boljšega " okna brez ponovnega učenja povzroči večjo robustnost sistema .
Pri govorni zbirki ŠTEVKE ( Slika 5.10 ) je zboljšanje opazno skoraj v vseh stolpcih .
Nekoliko manj izrazito je v primeru zbirke NUMBERS ( Slika 5.11 ) , vendar v povprečju še vedno dovolj dobro .
Enake ugotovitve veljajo tudi v primeru HMM SRG ( Slika 5.12 ) , le da so razlike v uspešnosti oken manjše ; ustrezno manjše je tudi izboljšanje v 2. vrstici .
Za aditivne motnje pa ni tako značilen , ker je njihov amplitudni spekter v povprečju bolj enakomeren ; seveda pa se aditivne motnje med seboj 92 Hamming -> ITU ITU -> ITU Hamming -> Hamming Hamming -> Exp 4 Exp 4a -> Exp 4 aditivne aditivne aditivne konvolu - 12dB 6dB 0dB tivne 83,38 68,79 43,43 86,56 83,47 68,44 42,66 86,35 88,01 72,38 43,87 85,93 83,38 68,79 43,43 86,56 84,26 69,72 43,72 86,07 88,08 72,33 43,91 86,84 Slika 5.11 : Uspešnost CSLU-NUMBERS-MFCC SRG z izbranimi okni v zaporednem preizkusu .
Slika 5.13 prikazuje še podrobnejšo primerjavo po posameznih testnih množicah iz skupine aditivnih motenj z razmerjem SNR 0 dB ( oznaka " aditivne 0dB " ) .
Pri podrobnejši analizi prikazanih motenj se je pokazala le ena izrazitejša skupna lastnost imenovanih motenj – večje vrednosti amplitudnega odziva v nižjem frekvenčnem pasu .
Očitno je oddaljeno spektralno puščanje okna pomembnejše , saj pada s spektralno razdaljo , ki je največja prav med obema skrajnima točkama amplitudnega spektra .
Glede na analizo njegovega amplitudnega odziva ni mogoče pričakovati izrazitejših pozitivnih učinkov , saj pri pomembnejših lastnostih ni zaznavno boljši od Hammingovega okna , ki glede na rezultate ne velja za dobro izbiro .
V primerjavo je vključeno še predlagano alternativno " Hann – kosinusno " okno , ki je pokazalo vzpodbudnejše rezultate .
95 Hamming 25ms ITU Hamming Cosine ITU Hann Cosine aditivne aditivne aditivne konvolu - 12dB 6dB 0dB tivne 74,85 64,24 46,37 73,05 72,72 63,20 48,58 71,62 72,66 63,86 49,98 71,14 Slika 5.15 : Uspešnost HMM-ŠTEVKE-MFCC SRG s kombiniranimi kosinusnimi okni .
5.4 UGOTOVITVE Na osnovi prikazanih rezultatov se ugotovi naslednje : • Zaporedni preizkusi dokazujejo , da so obstoječi SRG že sposobni dokaj učinkovito uporabiti boljše opise govornih signalov iz procesa parametrizacije .
To dejstvo je vzpodbuda za nadaljnje delo .
• Pri kombinaciji aditivnih in nizkoprepustnih konvolutivnih motenj pride do zelo velikih razlik v uspešnosti SRG .
• Primerjava uspešnosti obeh referenčnih sistemov je že v izhodiščih opredeljena za manj pomembno .
HMM referenčni sistem namreč v svojem delovanju uporablja le vektor 13 statičnih MFCC značilk .
Zato je njegova nekoliko slabša robustnost pričakovana .
S pomočjo znanj s področja frekvenčne analize signalov so se bolj natančno opredelile razlike v posameznih lastnostih oken .
Zaradi časovne kompleksnosti je pri tem bilo potrebno omejevati množico preizkusov in jo uporabljati karseda selektivno .
Z vidika splošne frekvenčne analize so ugotovitve nedvomno širšega in bolj dolgoročnega značaja .
Pri interpretacijah rezultatov sta bila enakomerno zastopana empirični in teoretični vidik .
Zato so bile za končne ocene poleg samih rezultatov pomembne še posebnosti in značilnosti 98 postopkov načrtovanja ter dobljenih oken .
V nadaljevanju so najprej podane končne ugotovitve o pomenu posameznih lastnosti okna in priporočili za njihovo uporabo na področju ARG .
Poglavje se zaključi z razpravo o splošnejšem pomenu opravljenega dela in smernicami za nadaljnje raziskave .
• padajoča višina stranskih valov Spektralno puščanje je po moji oceni ena najpomembnejših lastnosti okna pri uporabi v ARG .
Pomen puščanja pa se lahko v povezavi s konkretno zasnovo SRG še potencira – npr. v primeru predpostavke o neodvisnosti značilk , povezane z uporabo diagonalne kovariančne matrike v HMM SRG .
Zaradi medsebojne povezanosti lastnosti oken so še posebej zanimive tiste kombinacije z možnostjo obojestranskih izboljšav .
Zato je prava vrednost te lastnosti prav v povezavi s prejšnjo – širšim glavnim valom .
V implementacijah SRG se v postopku parametrizacije običajno izvede združevanje frekvenčnih pasov .
Praktični preizkusi celo kažejo , da je mogoče s temi okni uspešno nadomestiti tiste v že delujočih SRG brez ponovnega učenja .
• Uporaba ITU okna , ki je sicer zelo pogosto pri kodiranju govora , na področju ARG ne daje dobrih rezultatov .
6.3 POMEN OPRAVLJENIH RAZISKAV IN NADALJNJE SMERNICE Analiza predstavljenih praktičnih rezultatov v 4. in 5. poglavju pokaže precejšnje povečanje inherentne robustnosti SRG ob uporabi nesimetričnih oken .
Njihove analitično potrjene boljše lastnosti so se pozitivno odrazile tudi na rezultatih praktičnih preizkusov .
Če so namreč okna v določenih lastnostih ekstremna , se lahko pozitivni vpliv izgubi , največkrat ravno zaradi s tem povezanega poslabšanja katere od ostalih pomembnih lastnosti .
Večina vseh primerjav v disertaciji je narejenih na osnovi povprečnih vrednosti skupin testnih množic .
To dejstvo opozarja ne samo na to , da je vpliv okna odvisen tudi od realnih podatkov , ampak tudi na to , da se verjetno največji razvojni potencial nahaja prav v možnosti dinamičnega spreminjanja parametrov okna in parametrizacije nasploh .
Vsekakor pa bo za učinkovito tovrstno implementacijo potrebno še bolj uskladiti delovanje obeh glavnih procesov v SRG in opraviti še celo vrsto drugih izboljšav .
Nesimetrična okna oziroma raziskave v disertaciji imajo tudi širši pomen .
Predlagani postopki načrtovanja nesimetričnih oken so zelo učinkoviti in uporabni tudi na drugih področjih .
Prava moč omenjenih modelov pa se skriva v njihovi parametrični fleksibilnosti ; s pomikanjem polov po osi proti koordinatnem izhodišču se npr. širi oziroma oži glavni val in spreminja dušenje v amplitudnem odzivu ter efektivna dolžina odziva na enotin impulz .
NEO modeli so zato uporabni tudi kot del množice filtrov , ki lahko opravlja alternativni postopek parametrizacije .
Glavna potencialna prednost takšne zasnove je možnost dinamičnega spreminjanja lastnosti glede na trenutne značilnosti vhodnega govora .
Zato bi bilo zanimivo preizkusiti okna v disertaciji še na sistemih z velikim slovarjem , ki so zaradi svoje zahtevnosti na besednem nivoju podobno uspešni kot referenčna sistema v prisotnosti motenj .
S tem bi bil dan odgovor na vprašanje , ali je vpliv oken enako zaznaven tudi pri bolj zahtevnem razpoznavanju in manj motenih signalih ali pa je izključno povezan le s pojavom izrazitejših motenj .
101 A. UPORABA SPLOŠNE OPTIMIZACIJSKE METODE ZA NAČRTOVANJE NESIMETRIČNIH OKEN Za načrtovanje nesimetričnih oken z različnimi želenimi lastnostmi in kriteriji napake je najprimernejša uporaba splošnih optimizacijskih metod .
V disertaciji je uporabljena metoda SOLVOPT [ 124 , 125 ] , ki je primerna za nelinearno optimizacijo .
Postopek načrtovanja je v primeru uporabe omenjene metode SOLVOPT dokaj enostaven .
Najprej se določi optimizacijski kriterij , po potrebi še omejitve , in vzpostavi začetne pogoje za izvedbo optimizacijske metode .
A.1 Postopek načrtovanja Pred optimizacijo je potrebno določiti še nekaj začetnih konstantnih vrednosti .
Za načrtovanje po Čebiševem kriteriju se izračuna želen amplitudni odziv ( " optim _ amp " ) in pozitivno utežnostno zaporedje ( " optim _ utezi " ) .
Izbrana spodnja meja zapornega pasu je točka trikratne širine glavnega vala enako dolgega Hammingovega okna .
V nasprotnem primeru gradient izračuna metoda sama .
102 N = 256 ; global optim _ freq frekvence optim _ amp optim _ utezi Ntock pass trans stop Ntock = 2 ^ ( floor ( log2 ( N * 64 ) ) ) ; tocke = linspace ( 0. , 0.5 , Ntock ) ; frekvence = 2 * pi * tocke ; ratio = 272 / 256 ; bands = [ 0. 3*0.002 3*0.007080 0.5 ] ; bands _ freq = bands * 2 * pi ; amp _ desired = [ 1 0 ] ; pass = [ ] ; trans = [ ] ; stop = [ ] ; for ii = 1:length ( tocke ) , if ( tocke ( ii ) <= bands ( 2 ) ) pass = [ pass ii ] ; elseif ( tocke ( ii ) <= bands ( 3 ) ) trans = [ trans ii ] ; else stop = [ stop ii ] ; end , end weights = [ 1 10 ] ; optim _ freq = [ pass stop ] * 2 * pi ; optim _ utezi = utezi ( bands _ freq , weights , frekvence ) ; optim _ amp = zeljeni ( bands _ freq , amp _ desired , frekvence ) ; [ resitev , vrednost ] = solvopt ( rand ( 1 , N ) , ' funkcija _ napake ' ) ; Izpis A.1 : Izvedba postopka načrtovanja nesimetričnih oken .
* abs ( ( optim _ amp-act _ amp ) ) ) ; Izpis A.2 : Funkcija za izračun Čebiševe napake amplitudnega odziva .
105 B. HMM SPECIFIKACIJE PARAMETROV PRAK - TIČNIH PREIZKUSOV V dodatku so podane podrobnosti implementacije referenčnega HMM sistema in na njem izvedenih praktičnih preizkusov .
Tabela B.1 opisuje sestavo uporabljenih množic izgovorjav2 in druge pomembnejše podatke HMM SRG .
Tabela B.2 vsebuje vhodne podatke pri uporabi orodij za izvedbo praktičnih preizkusov .
Podrobnejša predstavitev uporabljenih testnih množic je v dodatku D. 106 MFCC _ E - A - M - g - H ime _ datoteke _ okna.bin - W - e - m - n 12 - p 22 - f 10.0 - w 32.0 MFCC < NumStates > 10 < StreamInfo > 1 13 < VecSize > 13 < diagC > < nullD > < MFCC _ E > HVite - d $ testhmm - S testset.features labels.lis1 grammar.net1 Tabela B.2 : Uporaba programskih orodij v referenčnem HMM razpoznavalniku .
Sistem je implementiran z orodji programskega paketa " CSLU Speech Toolkit " .
V nadaljevanju se nahajajo podrobnejši podatki o sami implementaciji sistema in praktičnih preizkusih .
Tabela C.1 prikazuje najpomembnejše parametre preizkusov CSLU sistema na obeh govornih zbirkah .
V prvem podpoglavju ( C.1 ) se nahaja izvorna koda postopka izračuna MFCC značilk v procesu parametrizacije .
Učna množica Validacijska Zbirka št. kategorij množica ( 1. , 3. korak ) ( stavkov , besed ) NUMBERS 2000,4000 555 , 3211 ŠTEVKE 2000,4000 78,1014 Tabela C.1 : Specifikacija izvedenih preizkusov CSLU razpoznavalnika .
Splošen opis referenčnega CSLU sistema se nahaja v podpoglavju 3.3 , več podrobnosti pa v literaturi na spletnem naslovu " http://cslu.cse.ogi.edu/toolkit ".
108 C.1 Parametrizacija z MFCC značilkami MFCC proc compute _ feat { wave up _ feat samplerate } { upvar $ up _ feat feat if { [ wave info $ wave - rate ] !=
109 C.2 Konfiguracija preizkusov na zbirki NUMBERS Komentar ime preizkusa zbirka frekvenca vzorčenja parametri za določanje datotek v vseh množicah pot do izvajalnih skript skripta za preslikavo fonemov skripta , ki izvede parametrizacijo signala želeno število kategorij - 1. korak učenja želeno število kategorij - 3. korak učenja zgornje število prehodov pri učenju spodnje število prehodov pri učenju vrednost Praga velikost vektorja značilk izvedi 1. korak učenja izvedi 3. korak učenja ne izvedi » forward-backward « učenja vzorci okna so zapisani v tej datoteki specifikacije testnih množic pot do posnetkov motenj specifikacije konvolutivnih sprememb specifikacije aditivnih motenj specifikacije ciljnih razmerij signal – šum ( SNR ) Izpis C.2 : Konfiguracijska datoteka praktičnih preizkusov CSLU sistema na zbirki NUMBERS .
110 C.3 Konfiguracija preizkusov na zbirki ŠTEVKE Komentar ime preizkusa zbirka frekvenca vzorčenja filtri za določanje datotek v vseh množicah pot do izvajalnih skript skripta za preslikavo fonemov skripta , ki izvede parametrizacijo signala želeno število kategorij - 1. korak učenja želeno število kategorij - 3. korak učenja zgornje število prehodov pri učenju spodnje število prehodov pri učenju vrednost Praga velikost vektorja značilk izvedi 1. korak učenja izvedi 3. korak učenja ne izvedi » forward-backward « učenja vzorci okna so zapisani v tej datoteki specifikacije testnih množic pot do posnetkov motenj specifikacije konvolutivnih sprememb specifikacije aditivnih motenj specifikacije ciljnih razmerij signal – šum ( SNR ) Izpis C.3 : Konfiguracijska datoteka praktičnih preizkusov CSLU sistema na zbirki ŠTEVKE .
Vsaka testna množica zaseda eno vrstico v ustrezni tabeli .
Opis uporabljenih motenj v posamezni množici se nahaja v 1. in 2. stolpcu vseh tabel .
V 3. stolpcu je oznaka testne množice , v ostalih pa še uporabljene oznake v prikazih uspešnosti referenčnih SRG v disertaciji .
Če oznaka zajema več množic , je ustrezen podatek v prikazu enak povprečju uspešnosti sistema na množicah v skupini .
D.1 Aditivne in konvolutivne motnje posamezno Aditivne motnje govor 12.0dB volvo 12.0dB tovarna 12.0dB f-16 12.0dB beli šum 12.0dB roza šum 12.0dB pas 900Hz 12.0dB govor 6.0dB volvo 6.0dB tovarna 6.0dB f-16 6.0dB beli šum 6.0dB roza šum 6.0dB pas 900Hz 6.0dB govor 0.0dB volvo 0.0dB tovarna 0.0dB f-16 0.0dB beli šum 0.0dB roza šum 0.0dB pas 900Hz 0.0dB Tabela D.1 : Specifikacija skupin testnih množic posameznih aditivnih in konvolutivnih motenj .
D.2 Aditivne in konvolutivne motnje skupaj – SNR = 12dB Oznaka množice govor 12.0dB+llp volvo 12.0dB+llp tovarna 12.0dB+llp f-16 12.0dB+llp beli šum 12.0dB+llp roza šum 12.0dB+llp pas 900Hz 12.0dB+llp govor 12.0dB+lp volvo 12.0dB+lp tovarna 12.0dB+lp f-16 12.0dB+lp beli šum 12.0dB+lp roza šum 12.0dB+lp pas 900Hz 12.0dB+lp govor 12.0dB+hp volvo 12.0dB+hp tovarna 12.0dB+hp f-16 12.0dB+hp beli šum 12.0dB+hp roza šum 12.0dB+hp pas 900Hz 12.0dB+hp govor 12.0dB+odjek volvo 12.0dB+odjek tovarna 12.0dB+odjek f-16 12.0dB+odjek beli šum 12.0dB+odjek roza šum 12.0dB+odjek pas 900Hz 12.0dB+odjek Tabela D.2 : Specifikacija skupin testnih množic kombinacije aditivnih in konvolutivnih motenj pri razmerju SNR 12dB .
D.3 Aditivne in konvolutivne motnje skupaj - SNR = 6dB Oznaka množice govor 6.0dB+llp volvo 6.0dB+llp tovarna 6.0dB+llp f-16 6.0dB+llp beli šum 6.0dB+llp roza šum 6.0dB+llp pas 900Hz 6.0dB+llp govor 6.0dB+lp volvo 6.0dB+lp tovarna 6.0dB+lp f-16 6.0dB+lp beli šum 6.0dB+lp roza šum 6.0dB+lp pas 900Hz 6.0dB+lp govor 6.0dB+hp volvo 6.0dB+hp tovarna 6.0dB+hp f-16 6.0dB+hp beli šum 6.0dB+hp roza šum 6.0dB+hp pas 900Hz 6.0dB+hp govor 6.0dB+odjek volvo 6.0dB+odjek tovarna 6.0dB+odjek f-16 6.0dB+odjek beli šum 6.0dB+odjek roza šum 6.0dB+odjek pas 900Hz 6.0dB+odjek Tabela D.3 : Specifikacija skupin testnih množic kombinacije aditivnih in konvolutivnih motenj pri razmerju SNR 6dB .
D.4 Aditivne in konvolutivne motnje skupaj - SNR = 0dB Oznaka množice govor 0.0dB+llp volvo 0.0dB+llp tovarna 0.0dB+llp f-16 0.0dB+llp beli šum 0.0dB+llp roza šum 0.0dB+llp pas 900Hz 0.0dB+llp govor 0.0dB+lp volvo 0.0dB+lp tovarna 0.0dB+lp f-16 0.0dB+lp beli šum 0.0dB+lp roza šum 0.0dB+lp pas 900Hz 0.0dB+lp govor 0.0dB+hp volvo 0.0dB+hp tovarna 0.0dB+hp f-16 0.0dB+hp beli šum 0.0dB+hp roza šum 0.0dB+hp pas 900Hz 0.0dB+hp govor 0.0dB+odjek volvo 0.0dB+odjek tovarna 0.0dB+odjek f-16 0.0dB+odjek beli šum 0.0dB+odjek roza šum 0.0dB+odjek pas 900Hz 0.0dB+odjek Tabela D.4 : Specifikacija skupin testnih množic kombinacije aditivnih in konvolutivnih motenj pri razmerju SNR 0dB .
IZVIRNI PRISPEVKI Izvirni prispevki k znanosti so povzeti v naslednjih točkah : • izpeljava splošnega postopka za načrtovanje nesimetričnih oken Izpeljan je bil postopek , s pomočjo katerega se problem načrtovanja nesimetričnih oken pretvori v obliko , ki jo je mogoče rešiti s pomočjo splošne gradientne optimizacijske metode .
Njegova glavna prednost je enostavno določanje poljubnega optimizacijskega kriterija in drugih parametrov .
• izpeljava alternativnega postopka za načrtovanje nesimetričnih oken na osnovi digitalnih filtrov z neskončnim enotinim odzivom Glavna slabost načrtovanja nesimetričnih oken s splošnimi optimizacijskimi metodami je velika časovna kompleksnost .
Zato je bil izpeljan hitrejši alternativni postopek , ki temelji na uporabi preprostih parametričnih modelov v obliki NEO filtrov .
Dobljena okna imajo zaradi uporabe modelov sicer specifične , vnaprej določene amplitudne odzive , ki pa se izkažejo kot zelo primerni za razpoznavanje govora .
Merjena je bila uspešnost razpoznavanja sistemov na večji skupini testnih množic z motnjami , ki niso bile prisotne v postopku učenja ( inherentna robustnost ) .
128 • ocena pomembnosti posameznih lastnosti oken pri razpoznavanju govora Lastnost z največjim vplivom na robustnost razpoznavanja je hitrost padanja višine stranskih valov .
Vendar je ta lastnost povezana še z drugim pomembnim dejavnikom – efektivno širino okna v časovnem prostoru , ki prav tako vpliva na robustnost SRG .
Model ima majhno število parametrov , ki omogočajo enostavno optimizacijo po različnih kriterijih .
Okna imajo tudi značilen potek amplitudnega odziva z dobrim asimptotičnim padanjem višine stranskih valov .
se lahko določa širina glavnega vala v časovnem in frekvenčnem prostoru ter višina stranskih valov .
• izpeljava postopka nesimetrične modifikacije Poissonovega okna V postopku modifikacije se simetrično Poissonovo okno v časovnem prostoru najprej pomakne in nato še pomnoži s Hannovim oknom .
Dobljeno nesimetrično okno ima boljše asimptotično padanje višine stranskih valov in krajšo časovno zakasnitev .
V praktičnem delu smo izdelali lastni oblikoslovni označevalnik in prilagodili odprtokodna označevalnika za procesiranje besedil v slovenskem jeziku .
Učno množico je predstavljal korpus FidaPlus .
Poglavje 1 Uvod Oblikoslovno označevanje je za slavista dokaj preprosto opravilo , medtem ko je za računalnik težak , netrivialen problem [ 3 ] .
V računalništvu spada v področje obdelave naravnega jezika ( angleško „ natural language processing " ali NLP ) .
V postopku določanja besednih vrst določimo vsaki besedi besedno vrsto glede na njen pomen in kontekst .
Določenim besednim vrstam lahko določimo še kategorije , kot so : spol , sklon , število , čas in podobno .
Pregibni jeziki so zelo kompleksni jeziki in mednje sodi tudi slovenščina .
Na drugi strani se slovenščina v tem oziru uvršča med bolj zapletene jezike , saj ima zelo svoboden besedni red in hkrati bogato pregibnost besed .
Tu tiči tudi razlog , zakaj so določeni pristopi oblikoslovnega označevanja bolj primerni za eno , drugi pa za drugo vrsto jezikov .
Na drugi strani pa obstaja še mnogo drugih jezikov , npr. ugrofinski , katerih pregibnost in skladnja bazira tudi na pripo - nah ; primer je turški jezik .
2.1 Problemi 4 2.1 Problemi Najlažji pristop za določanje besednih vrst je imeti seznam besed in za vsako od teh besedno vrsto .
Vendar ima lahko vsaka ( ločena ) beseda več besednih vrst ; odvisno od pomena in konteksta .
Tak primer je poved „ Gori na gori gori .
Ta problem poskušamo rešiti z raz - ličnimi metodami , kot so : skriti model Markova , označevanje s pravili in verjetnostno označevanje .
O tem govori Zipfov zakon [ 5 ] , in sicer v vsakem naravnem jeziku je pogo - stost n-te najpogosteje uporabljene besede približno recipročno odvisna od n. Najpogostejša beseda se bo pojavila približno dvakrat pogosteje kot druga najpogostejša beseda , ki se pa bo pojavila približno dvakrat pogosteje kot četrta najpogostejša .
Kot primer smo vzeli besede iz prvih 100 dokumentov korpusa FidaPlus .
Tako tabela 2.1 kot slika 2.1 prikazu - jeta Zipfov zakon .
Kot vidimo , je besed , ki so se pojavile samo enkrat , zelo veliko , besed , ki so se pa pojevile večkrat pa zelo malo .
2.2 Metode oblikoslovnega označevanja Naštete probleme lahko rešujemo z različnimi metodami .
Mednje sodijo sta - tistično določanje besednih vrst s skritim modelom Markova , označevanje z oblikoslovnim slovarjem , s slovarjem označenih pripon , zelo napredna je tudi metoda z logaritemsko-linearnim modelom , s slovarjem označenih n-gramov , s slovarjem n-gramov pripon in predpon ter z vnaprej predpisanimi pravili .
D o k u m e n t _ I z p e l j a n k a .
D o k u m e n t _ I z p e l j a n k a .
Beseda Frekvenca Otrokom 36 napne 1 la 21 Swierad 1 raziskav 15 šALEKSANDAR 1 pogledov 12 paintih 1 vladno 10 stomatologije 1 02:03:00 AM 8 sestavilo 1 nizozemske 7 32:27:00 1 fantastično 6 upoštevno 1 elementa 5 71zobna 1 gostja 5 kraki 1 južnega 4 ohlajene 1 novinarskih 4 1918-1945 1 skušata 4 kopiranju 1 poskusila 3 kolektive 1 medosno 3 razdejana 1 požira 3 hrome 1 strjevanju 3 obstoječ 1 vedremu 2 prijavljen 1 posojen 2 karoserijskim 1 Calista 2 hlapec 1 prstu 2 Melona 1 obstali 2 terjalo 1 oskrbuje 2 WWI 1 Šebenik 2 Jeremy 1 prenašam 2 pogrešam 1 samoupravi 2 ambicijami 1 številkama 1 tovornjakarje 1 arhitekturnega 1 krojile 1 Joergensen 1 kompulzivnih 1 interdisciplinarnosti 1 Gilles 1 otočke 1 2.3 Uporaba Besedilu določimo besedne vrste in njene kategorije ( spol , sklon , število ...
) , da lahko s pomočjo slovničnih pravil računalnik lažje razume njihov pomen .
Vsaka besedna vrsta ima namreč nek svoj pomen .
Seveda lahko s pomočjo slovničnih pravil sintetiziramo želene stavke tako , da bodo slovnično ( oblikoslovno za posamezne besede in skladenjsko znotraj stavka ) pravilni , pri čemer nujno potrebujemo oblikoslovni slovar , ki ima za vsako besedo določeno besedno vrsto in pregibno obliko .
Oblikoslovno označevanje je uporabno tudi pri preverjanju slovničnih pra - vilnosti že napisanega besedila , pri čemer pa prav tako zraven oblikoslovnega slovarja potrebujemo tudi slovnična pravila .
Opis označevalnika TreeTagger 8 Poglavje 3 Opis označevalnika TreeTagger TreeTagger deluje podobno kot označevalnik n-gramov , ki temelji na skritem modelu Markova ( angleško Hidden Markov model ali HMM ) [ 9 ] .
Ka - dar so frekvence zelo nizke ali celo 0 , potem ta metoda odpove .
Odločitveno drevo zgradimo iz učne množice trigramov z algoritmom ID3 ( angleško Iterative Dichotomiser 3 ) , ki ga je leta 1938 napisal Quinlan .
Slika 3.1 prikazuje primer takšnega odločitvenega drevesa .
Naj - prej poiščemo obliko predhodne besede oblika-1 tako , da sledimo drevesu 3.1 Skriti model Markova 9 Slika 3.1 : Odločitveno drevo in iščemo povezavo da in nato na enak način obliko predpredhodne besede oblika-2 .
Recimo , da nas zanima verjetnost samostalnika , ki je za pridevnikom in veznikom P ( Sam | Vez , Prid ) .
Po sprehodu po drevesu dobimo rezultat 70 %.
Naloge skritega modela Markova so najti verjetnosti za posame - 3.2 Leksikon in drevo pripon 10 Slika 3.2 : končni avtomat za skriti model Markova zna zaporedja stanj , ki jih dobimo z algoritmom forward [ 2 ] , najti najbolj verjetna zaporedja ob dani množici izhodnih zaporedij , kar rešuje algoritem Viterbi in najti najbolj verjetno zaporedje prehodov in izhodnih verjetnosti ob dani množici izhodnih zaporedij , kar rešuje algoritem forward-backward .
Skriti model Markova lahko tako uporabimo kot način učenja oblikoslovnega označevalnika besedil .
Stanja so besedne vrste ( samostalnik , pridevnik ...
Tako tudi TreeTagger določi najbolj verjetna zaporedja besednih vrst za dana zaporedja besed .
3.2 Leksikon in drevo pripon Leksikon je sestavljen iz treh delov : 1. leksikon polnih besed 2. leksikon pripon 3. privzeti vnos 3.2 Leksikon in drevo pripon 11 Pri označevanju TreeTagger najprej poskusi poiskati besedo v leksikonu polnih besed .
V nasprotnem primeru pretvori vse velike črke v besedi v male in poskusi še enkrat .
Prvi del leksikona , leksikon polnih besed , TreeTagger ustvari iz korpusa .
Drugi del leksikona , leksikon pripon , je organiziran v drevesno strukturo , kot je prikazano na sliki 3.3.
TreeTagger najprej začne iskanje v korenu drevesa , nato gre v vozlišče s črko , ki je na koncu besede .
Pri besedi se tako pomika od zadaj naprej in gre po drevesu , dokler ne pride do lista .
Recimo , da bi želeli določiti besedno vrsto za besedo grenkasto , ki je v le - ksikonu polnih besed ni .
V drevesu se dalje pomaknemu v vozlišče s črko t , nato v vozlišče s črko s in v vozlišče s črko a ter k. Ta pot v drevesu obstaja , zato vrnemo vektor verjetnosti , in TreeTagger lahko z 83.87 % verjetnostjo besedo grenkasto označi kot prislov in z 16.13 % verjetnostjo kot pridevnik .
Vektorje verjetnosti dobimo tako , da preštejemo pojavitve vseh parov pripona / oblika .
3.2 Leksikon in drevo pripon 12 Slika 3.3 : Drevo pripon z vektorji verjetnosti Tretji del leksikona , privzeti vnos , dobimo tako , da iz korpusa določimo pogostost za vsako besedno vrsto .
Za dokumente našega korpusa FidaPlus bi TreeTagger zgradil privzeti vnos , ki je prikazan v tabeli 3.1. 3.2 Leksikon in drevo pripon 13 Tabela 3.1 : Privzeti vnos TreeTagger-ja , izračunan iz korpusa FidaPlus .
xjFj ( w , t ) p ( t | w ; x ) = Kjer je funkcija Z ( w , x ) = e in x vektor uteži .
t ?
Te omejitve se določijo iz učne množice besedila .
Če bi želeli omejiti sistem , da se beseda krompir označi kot samostalnik , bi morali definirati naslednjo omejitev oz. funkcijo značilnosti : f ( h , t ) = 1 če wi = krompir in t = samostalnik 4.1 Funkcije značilnosti v osnovnem modelu označevalnika Osnovni model ob določanju oznake ti upošteva prejšnji dve oznaki , trenutno besedo in naslednjo besedo { ti-1 ti-2 wi wi+1 } .
Funkcije značilnosti za redke be - sede izboljšujejo označevanje neznanih besed .
tip značilnosti predloga splošna wi = X & ti = T splošna ti-1 = T1 & ti = T splošna ti-1 = T1 & ti-2 = T2 & ti = T splošna wi+1 = X & ti = T redka pripona besede wi = S , | S | < 5 & ti = T redka predpona besede wi = P , 1 < | P | < 5 & ti = T redka beseda wi vsebuje število & ti = T redka beseda wi vsebuje veliko tiskano črko & ti = T redka beseda wi vsebuje vezaj & ti = T Med redke besede uvršča označevalnik besede , ki se v učni množici po - javijo manj kot določeno število krat ( v mojem primeru je bilo to manj kot sedemkrat ) .
Označevalnik uporablja tudi metode , ki lahko določene funkcije značil - nosti odstranijo , saj bi le te vodile do napačne statistike in posledično do 4.2 Funkcije značilnosti zahtevnejših modelov 16 Slika 4.1 : Dvosmerni model za funkcije značilnosti slabšega označevanja .
Te funkcije značilnosti lahko nastanejo kot posledica redkosti podatkov ali pa napak v označeni učni množici .
4.2 Funkcije značilnosti zahtevnejših modelov Za uspešnejše označevanje je potrebno v označevalnik vključiti modele , ki za označevanje upoštevajo tudi besede in oznake ne samo levo od označevane besede , ampak tudi desno od nje [ 10 ] .
model predloga L t0 , t-1 R t0 , t+1 L + L2 t0 , t-1 , t0 , t-2 R + R2 t0 , t+1 , t0 , t+2 L + R t0 , t-1 , t0 , t+1 LL t0 , t-1 , t-2 RR t0 , t+1 , t+2 LR t0 , t-1 , t+1 L + LL + LLL t0 , t-1 , t0 , t-1 , t-2 , t0 , t-1 , t-2 , t-3 R + LR + LLR t0 , t+1 , t0 , t-1 , t+1 , t0 , t-1 , t-2 , t+1 L + LL + LR + RR + R t0 , t-1 , t0 , t-1 , t-2 , t0 , t-1 , t+1 , t0 , t+1 , t0 , t+1 , t+2 3W t0 , w0 , t0 , w-1 , t0 , w+1 best t0 , w0 , t-1 , t0 , w0 , t+1 , t0 , w-1 , w0 , t0 , w0 , w+1 Model L+R za določitev besedne vrste uporablja že označeni besedi levo in desno od označevane .
4.3 Metode za izboljšavo oblikoslovnega označevanja neznanih besed 17 Model L + LL + LLL pa uporablja prejšnje tri oznake in je tipičen primer skritega modela Markova 3. reda .
Model 3W za določitev besedne vrste uporablja trenutno besedo , ki jo označujemo , kot levo in desno besedo .
Funkcije značilnosti tega modela so sestavljene iz prejšnje , trenutne in naslednje besede ter besedne vrste prejšnje in naslednje besede .
4.3 Metode za izboljšavo oblikoslovnega označevanja ne - znanih besed Natančnost označevanja neznanih besed je v splošnem manjša kot natančnost označevanja že poznanih besed .
Zato Stanfordov označevalnik uporablja različne metode , ki poskušajo izboljšati njihovo natančnost označevanja .
, privzamemo , da gre za podjetje , torej za sa - mostalnik ( za slovenska podjetja bi lahko ta seznam dopolnili recimo z d.o.o. , s.p. ...).
Lastni oblikoslovni označevalnik besedil 18 Poglavje 5 Lastni oblikoslovni označevalnik besedil Pri najdenih odprtokodnih oblikoslovnih označevalnikih besedil smo naleteli na problem pri načinu učenja .
Za učno množico smo uporabili korpus FidaPlus ( Poglavje 5.1 ) .
Dokumenti tega korpusa so datoteke XML ( angleško Extensible Markup Language ) , zato smo se odločili , da jih bomo shranili v podatkovno bazo , kjer bomo lahko z poizvedovalnim jezikom SQL ( angleško Structured Query Language ) delali poljubne poizvedbe .
Lastni označevalnik smo potem lahko implementirali tako , da poizveduje po bazi in ugotavlja verjetnosti besednih vrst za posame - zne besede .
Da korpus vsebuje čim več različnih besed , so dokumenti karseda različnih zvrsti : časopisi in strokovna , nestro - kovna , pesniška , prozna in dramska besedila .
Dokumenti so nam uporabni kot učna množica za naše označevalnike besedil , prav tako nam koristijo kot testna množica , s katero lahko ovrednotimo naše označevalnike .
Vsak 5.1 Korpus FidaPlus 19 dokument je dokument XML , v njem je značka p , ki predstavlja odstavek , vgnezdena značka s , ki predstavlja poved , ta pa ima vgnezdeni znački : w , ki predstavlja besedo , ali c , ki predstavlja ločila .
Primer ene od povedi je viden v kodi 1. 5.1.1 Razlaga kod msd Koda msd je sestavljena iz več znakov , kjer vsak pove dodatno kategorijo besede [ 4 ] .
Najpomembnejši je prvi znak , ki pove besedno vrsto , in sicer : S pomeni samostalnik , G glagol , P pridevnik , R prislov , D predlog , V veznik , L členek , M medmet , K števnik , O okrajšavo in Z zaimek .
Naslednji znaki pa povedo dodatne lastnosti za dano besedno vrsto ; recimo vrsto , spol , sklon , število za samostalnik ; čas , osebo za glagol itd.
Primer kode msd za samo - stalnik je videti v tabeli 5.1.
mesto kategorija vrednost oznaka 1 vrsta občno ime o lastno ime l 2 spol moški m ženski z srednji s 3 število ednina e množina m dvojina d 4 sklon imenovalnik i rodilnik r dajalnik d tožilnik t mestnik m orodnik o 5 ne uporabljamo 7 živost ne n da d 5.1.2 Problemi korpusa FidaPlus Približno 7 % besedila v korpusu FidaPlus ni lektoriranega , zato marsikatera beseda ni označena ali pa je označena narobe .
Dokumenti v korpusu FidaPlus so slabo napisani dokumenti XML , saj ponekod značke niso ali pa so narobe zaključene .
Namesto z naborom zna - kov UTF-8 ( angleško 8-bit UCS / Unicode Transformation Format ) so posebni znaki bili zapisani kot entitete HTML ( Hyper Text Markup Language ) , re - cimo š kot & scaron ; , ž kot & zcaron ; , č kot & ccaron ; itd.
Recimo : prislov je bil označen s kodo Rsm , kjer bi 3. znak moral predstavljati stopnjo prislova , vendar stopnja z oznako m v pri - 5.2 Načrt in postopek polnjenja podatkovne baze 21 ročniku za FidaPlus ni definirana .
Ta - kšne povedi so pri označevanju nesmiselne , saj bi nam bigrami in trigrami , dobljeni iz teh dokumentov , samo pokvarili statistiko .
5.2 Načrt in postopek polnjenja podatkovne baze ERD ( entitetno-relacijski diagram ) podatkovne baze prikazuje slika 5.1.
Vsebuje kopijo celotnega korpusa , kar pomeni , da lahko z enostavnimi poizvedbami dobimo seznam označenih unigramov , bigramov , trigramov , n-gramov in vseh njihovih verjetnosti .
Dobimo lahko frekvence besed v dokumentih in frekvence dokumentov za posamezno be - sedo , ugotovimo verjetnosti besednih vrst in verjetnosti za njihovo zaporedje , ugotovimo frekvence za končnice besed poljubnih dolžin in verjetnosti za njihove besedne vrste , ugotovimo frekvence za n-grame kratic in prav tako verjetnosti za njihove besedne vrste itd.
Tabele BesednaVrsta , Vrsta , Kategorija in VrednostKategorija smo napol - nili ročno , saj so njihove vrednosti znane iz pravil slovenske slovnice .
Tabela VrednostKategorija pa vsebuje njihove vrednosti .
5.2 Načrt in postopek polnjenja podatkovne baze 22 Slika 5.1 : ER diagram baze v kateri je shranjen korpus FidaPlus 5.2 Načrt in postopek polnjenja podatkovne baze 23 Za tabele Lema , Izpeljanka , Dokument , Paragraf , Poved in Poved _ Izpeljanka smo napisali javanski program , ki razčleni ( angleško „ parse " ) besedilo iz kor - pusa FidaPlus in ga vstavi v bazo .
Algoritem 2 Razčlenjevalnik FidaPlus korpusa .
Za izgradnjo tabele Dokument _ Izpeljanka smo morali združiti tabele : Po - ved _ Izpeljanka , Poved , Paragraf in Dokument , jih razvrstiti v skupine po atri - butu IzpeljankaID in DokumentID ter določiti frekvenco v vsaki skupini .
Za izgradnjo tabele Izpeljanka _ Izpeljanka in Trigram je postopek težji in tudi časovno bolj potraten .
Tabela vsebuje vse izpeljanke brez ločil , zato so tam , kjer so prej bila ločila , sedaj v tabeli luknje , kar pomeni , da si vrednosti v stolpcu MestoVPovedi ne sledijo po vrsti .
Zaradi poenostavitve pri naslednjih poizvedbah , smo naredili še pogled ( angleško view ) IzpeljankaVPovediBrezLocil , kjer smo združili tabeli 5.2 Načrt in postopek polnjenja podatkovne baze 24 Izpeljanka in PovedIzpeljankaBrezLocil .
Tabela verjetnostTaggaVPovedi je zgrajena podobno kot prejšnja tabela , vendar smo tu potrebovali 3 tabele Poved _ IzpeljankaBrezLocil , kjer pa smo za pogoj zahtevali , da je atribut MestoVPovedi prve tabele za 1 manjši kot 5.3 Implementacija označevalnika 25 Slika 5.2 : Uporabniški vmesnik za lastni oblikoslovni označevalnik atribut MestoVPovedi druge tabele in da je atribut MestoVPovedi druge ta - bele za 1 manjši kot tretje tabele .
Na koncu smo razvrstili v skupine še po prvem znaku vseh treh atributov msd in določili frekvence za vsako skupino .
Uporabniški vmesnik ( slika 5.2 ) je zelo preprost , in sicer je potrebno izbrati vhodno datoteko , ki predstavlja neoznačeno besedilo in izhodno datoteko , v katero bo označeval - nik shranil besedilo , ki ga je označil .
Označevalnik najprej besedilo , ki ga označuje , prebere v pomnilnik , nato 5.3 Implementacija označevalnika 26 Tabela 5.2 : Primer vhoda in izhoda lastnega označevalnika .
vhodna datoteka izhodna datoteka Nisem Nisem g je je z videl videl g .
SENT Danes Danes r je je g lepo lepo p vreme vreme s .
Algoritem 5 Razčlenjevanje neoznačenega dokumenta , ki ga želimo označiti .
Za označevanje potre - bujemo 6 zgoščenih tabel , in sicer za : ločila , unigrame , bigrame , trigrame , 5.3 Implementacija označevalnika 27 za verjetnosti besedne vrste , ki je na drugem mestu v povedi s pogojem , da poznamo besedno vrsto na prvem mestu P ( t1 | t0 ) in za verjetnosti besedne vrste s pogojem , da poznamo prejšnji dve besedni vrsti P ( ti | ti-2ti-1 ) .
Označevanje poteka tako , da označujemo vsako poved posebej .
Postopek za to prikazuje algoritem 6.
V zgoščeni tabeli poišče trigram in tako dobi besedne vrste za vse tri besede .
Nato tem besedam v povedi priredi besedno vrsto .
V tabeli trigramov so shranjene samo besedne vrste , ki so za vsak tri - gram najbolj verjetne .
V primeru , da iskanega trigrama v tabeli ni , označe - valnik pusti besede neoznačene .
Po končanem označevanju trigramov , začne iskati bigrame .
Dobljene besedne vrste pri - redi besedam , ki še niso označene , saj je natančnost bigramov manjša , kot je natančnost trigramov .
Tudi besedne vrste bigramov so izbrane v skladu z naj - 5.3 Implementacija označevalnika 28 Algoritem 6 Gradnja seznama unigramov , bigramov in trigramov .
Tu pogleda v zgoščeno tabelo unigramov , ki za iskani unigram vrne besedno vrsto z največjo verje - tnostjo .
Te besede označevalnik označi s pomočjo že označenih besed tako , da poi - šče verjetnosti za zaporedje besednih vrst .
Za ta namen smo v bazi ustvarili tabeli verjetnostTagga2MestoPovedi in verjetnostTaggaVPovedi .
Najprej označevalnik preveri , če je označena prva beseda .
Če je , gremo naprej , drugače pa iskanje po tabeli verje - tnostTagga2MestoPovedi vrne najverjetnejšo besedno vrsto , ki sledi besedni vrsti , s katero je označena prva beseda .
Sedaj lahko označevalnik pri označevanju upošteva dve predhodno označeni besedi , kar nam da boljše rezultate , kot če bi upošteval samo eno predhodno besedo .
Narediti je potrebno še poizvedbo po tabeli verjetnostTaggaVPovedi , ki vrne najverjetnejšo besedno vrsto , ki sledi besednima vrstama predhodno označenima besedama .
Sedaj imamo vse besede v dokumentu označene in dokument je potrebno samo še shraniti v izhodno datoteko .
Merjenje kakovosti in hitrosti opisanih označevalnikov 30 Poglavje 6 Merjenje kakovosti in hitrosti opisanih označevalnikov Oblikoslovni označevalniki TreeTagger , Stanfordov označevalnik , kot tudi naš označevalnik , ne določijo vseh besednih vrst 100 % pravilno .
Kot smo že povedali , nam problem predstavljajo dvoumne besede , kot je beseda „ spo - ročila " , ki je lahko samostalnik ali glagol .
Tem besedam brez konteksta ne moremo določiti besedne vrste .
Opisani označevalniki tako statistično ali s kakšno drugo metodo določijo možno besedno vrsto za take besede .
Tako je njihova besedna vrsta pravilna v recimo 95 % in ne v 100 % primerih .
6.1 Evaluator označenih dokumentov 6.1.1 Predpogoj Evaluator deluje tako , da kot vhod prejme dve datoteki .
Prva datoteka je izhod iz označevalnika in njena oblika mora biti takšna kot v tabeli 5.2.
Drugo datoteko pa tvorimo iz korpusa FidaPlus , in sicer mora tudi ustrezati obliki , ki je prikazana v tabeli 5.2.
Pri tvorjenju druge datoteke smo napisali razčle - njevalnik , ki pretvori več dokumentov iz korpusa FidaPlus v en dokument , ki ustreza obliki vhodne datoteke evaluatorja .
Medtem ko Stanfordov oblikoslovni označevalnik ustvari datoteko v drugačni obliki .
Če pa se ujemata , potem primerja še besedni vrsti obeh besed .
Dodatno smo še preizkusili delovanje oblikoslovnih označevalnikov na besedilu , ki je bilo del učne množice .
Te učne množice so bili označeni dokumenti v obliki , ki jo prikazuje tabela 5.2.
Za lastni oblikoslovni označevalnik smo za učno množico v bazi ustvarili več tabel , ki predstavljajo unigrame , bigrame in trigrame , in to za vsako verzijo in za vsako velikost učne množice .
Kot zanimivost naj omenimo , da so tabele , ki so bile namenjene preizkušanju imele skupaj 165.159.667 vrstic .
/ g o r i .
Tudi lastni označevalnik smo prilagodili , in sicer smo dodali dve vno - sni polji , kjer smo zraven vhodne in izhodne datoteke podali velikost učne množice in njeno verzijo .
Parameter verzija se nanaša na izboljšavo našega lastnega označevalnika , kar bomo opisali v podpoglavju 6.6.
Prilagojen upo - rabniški vmesnik vidite na sliki 6.1.
Tako so v času označevanja nastali dokumenti , ki so služili kot vhod v 6.4 Potek generiranja označenih dokumentov 34 Algoritem 8 Skripta za učenje in označevanje z označevalnikom Stanford .
n l p .
t a g g e r - t r a i n F i l e t r a i n S t a n f o r d .
t x t 2 3 t i m e r 4 5 j a v a - mx1600m - c l a s s p a t h s t a n f o r d - p o s t a g g e r .
Razlika teh dveh časov nam je dala čas trajanja označevanja .
Primer uporabe tega programa je viden v algoritmu ( 7 ) in ( 8 ) .
Tabela 6.2 in graf 6.3 prikazuje uspešnost označevanja vsakega od oblikoslovnih označevalnikov pri določeni velikosti učne množice .
Kot vidimo iz grafa 6.3 , kakovost označevanja pri učni množici do 200 dokumentov narašča približno z enako hitrostjo kot v prejšnjem primeru , saj 6.5 Rezultati 37 Tabela 6.2 : Delež pravilnosti označevanja poznane preizkusne množice dokumentov .
Pri učni množici od 200 do 400 dokumentov pa vidimo , da kakovost označevanja strmo naraste in pri 400 dokumentih ponekod doseže vrh .
Označevalniki si ne zapomnijo celotne učne množice , temveč iz samo verjetnosti besednih vrst za posamezno besedo , verjetnosti besednih vrst za bigrame , pripone ipd.
Kot vidimo so v primeru preizkusne množice , ki je del učne množice rezultati vseeno precej boljši kot v primeru preizkusne množice , ki ni del učne množice .
Čeprav gre samo 6.5 Rezultati 38 Slika 6.3 : Graf uspešnosti označevanja za poznano preizkusno množico za dober odstotek izboljšanja označevanja , je pri teh odstotkih to zelo veliko izboljšanje , saj je vsak nadaljnji odstotek mnogo težje doseči .
Tabela 6.3 in graf 6.4 prikazujeta čas trajanja označevanja 3.860.007 besed dolgega besedila zbranega iz 200 dokumentov korpusa FidaPlus , za različne velikosti učne množice .
Iz tabele 6.3 in grafa 6.4 vidimo , da ob povečanju učne množice hitrost označevanja bistveno ne naraste .
Število unigramov , bigramov in tri - gramov v odvisnosti od števila dokumentov učne množice vidimo v tabeli 6.4 na grafu 6.5. 6.5 Rezultati 39 Slika 6.4 : Graf časa označevanja dokumentov Slika 6.5 : Graf , ki prikazuje število različnih unigramov , bigramov in trigramov v odvisnosti od velikosti učne množice .
V naslednjem poglavju si poglejmo idejo , s katero smo pohitrili naš obliko - slovni označevalnik na račun 1 % slabšega označevanja .
6.6 Izboljšava hitrosti lastnega oblikoslovnega označeval - nika besedil Ker je našemu označevalniku začelo primanjkovati hitrega pomnilnika , smo se odločili , da bomo iz baze odstranili unigrame , bigrame in trigrame , ki se v učni množici pojavijo manj krat od določenega števila .
Tako je naš označevalnik uspel označiti bese - dilo v primeru 1.500 dokumentov velike učne množice v 10,8 s ( tabela 6.3 ) .
Kakovost označevanja je padla za samo dobra 2 % ( tabela 6.1 ) .
To je zelo majhen padec glede na to , da smo izločili zelo veliko podatkov , namenjenih za označevanje .
Vidimo , da je pri 1.500 dokumentih tu še samo 1.133.571 trigramov , v prejšnjem primeru pa kar 9.929.184.
Zaloga vrednosti trigramov je mnogo večja od zaloge vrednosti bigramov , zato se slednji začnejo prej ponavljati , medtem ko se tri - grami zelo redko ponovijo .
6.7 Naraščanje števila unigramov , bigramov in trigramov 43 Slika 6.6 : Graf , ki prikazuje število različnih unigramov , bigramov in trigramov po odstra - nitvni v verziji 1 ( Gv1 ) , v odvisnosti od velikosti učne množice .
Število unigramov , bigramov in trigramov prikazuje tabela 6.6 in graf 6.7.
6.7 Naraščanje števila unigramov , bigramov in trigramov Kot vidimo iz prejšnjih tabel in grafov , število unigramov , bigramov in tri - gramov s povečanjem korpusa ne narašča linearno , ampak narašča približno logaritemsko .
6.7 Naraščanje števila unigramov , bigramov in trigramov 44 Slika 6.7 : Graf , ki prikazuje število različnih unigramov , bigramov in trigramov po odstra - nitvni v verziji 2 ( Gv2 ) , v odvisnosti od velikosti učne množice .
Slika 6.8 : Graf prikazuje število unigramov v različnih verzijah lastnega oblikoslovnega označevalnika .
6.7 Naraščanje števila unigramov , bigramov in trigramov 45 Tabela 6.6 : Število različnih unigramov , bigramov in trigramov po odstranitvni v verziji 2 ( Gv2 ) , v odvisnosti od velikosti učne množice .
6.7 Naraščanje števila unigramov , bigramov in trigramov 46 Slika 6.9 : Graf prikazuje število bigramov v različnih verzijah lastnega oblikoslovnega ozna - čevalnika .
V diplomski nalogi smo se srečali s problemi pri dolo - čanju besednih vrst , kot so dvoumnost in neznane besede .
Zato ne obstaja tak označevalnik , ki bi določeval besedne vrste 100 % pravilno , se pa vsi posku - šajo čim bolj približati tej čarobni meji .
Najboljše določanje besednih vrst , ki smo ga v tem diplomskem delu dosegli , je bilo 95.9 % na besedilu , ki ni bilo del učne množice .
Stanfordov deluje na principu logaritemsko-lineranega pogojno verjetno - stnega modela , pri čemer uporablja metodo maksimalne entropije .
Pri do - deljevanju besedne vrste za posamezno besedo tako upošteva vse besede v označevani povedi .
Oblikoslovni označevalnik TreeTagger pa si v času učenja zgradi odloči - 7.
Zaključek 48 tveno drevo za verjetnosti prehodov med besednimi vrstami , leksikon polnih besed , leksikon pripon in na koncu še določi privzeti vnos .
Nato s pomočjo vsega tega poskuša določiti besedno vrsto za vsako besedo , tako da bo ta imela največjo verjetnost .
Na koncu smo naredili meritve , kjer smo določili odstotek pravilnega označevanja , kot tudi hitrost vsakega od označevalnikov .
Ugotovili smo tudi , da se po določem številu dokumentov v učni množici kakovost označevanja ne izboljšuje več oz. se izboljšuje zanemarljivo malo .
Za nadaljnje delo bi lahko izboljšali naš oblikoslovni označevalnik tako , da bi ga dopolnili z zamislimi iz omenjenih odprtokodnih označevalnikov , izboljšali bi ga lahko s pomočjo WordNeta , z raznimi pravili ( npr. za predlo - gom sledi en ali več pridevnikov in nato samostalnik , določanjem pomožnega glagola ) in z dodatnim slovarjem , ki ima enoumno označene besede in bese - dne zveze .
SAMODEJNO IZDELOVANJE BESEDILNIH LOGIČNIH NALOG V SLOVENŠČINI 1 Povzetek in ključne besede S sestavljanjem besedilnih logičnih nalog je precej dela , zato je bilo narejenih že kar nekaj programov , ki to olajšajo , kar je bilo raziskano v uvodu .
V slovenščini je bil za tabelarične naloge med drugim narejen program Spesni , katerega slaba stran je , da je treba za vsako tematiko izdelati novo predlogo , kar zahteva precej dela .
Uporabljena je bila tehnologija iz strojnega prevajalnika Presis podjetja Amebis , pri čemer je bilo najprej preverjeno , ali Presisov vmesni jezik podpira vse , kar je potrebno za izdelavo logičnih nalog , za kar so bili uporabljeni primeri nalog , zbranih iz različnih virov .
Program deluje tako , da se s Presisovim analizatorjem prevede vzorčni stavek v vmesni jezik , identificirajo se možne lastnosti , ki se lahko v nalogi spreminjajo , in zaloga možnih vrednosti zadnje , za kar se uporabijo podatki o nadpomenih in podpomenih iz podatkovne baze Ases .
Program potem sestavi tabelarično nalogo in nato seznam trditev predela v povedi , zapisane v vmesnem jeziku , pri čemer poskuša trditve čim bolj združevati in jih na koncu narediti tudi čim bolj sovisne , torej take , da se navezujejo druga na drugo .
Na koncu Presisov generator prevede povedi iz vmesnega jezika v naravni jezik ( slovenščino ) .
Na koncu je bil program uspešno preizkušen še za angleščino , in sicer tako za primer , ko je tudi vzorčni stavek v angleščini , kot za primer , ko je ista naloga narejena hkrati v slovenščini in angleščini .
Program je bil preizkušen na večjem številu primerov ( npr. na časopisnih naslovih ) , da se je ocenilo , kako pogosto mu uspe iz vzorčnega stavka izdelati uporabno nalogo .
Pokazalo se je , da je mogoče hitro narediti naloge z zelo različnimi tematikami , še bolje pa to deluje , če namesto naključnih vzorčnih stavkov ročno sestavimo primerne stavke .
Prostor za izboljšave je predvsem pri delu analizatorja ( razdvoumljanje ) , popolnosti pomenske mreže v Asesu , dale bi se narediti tudi tabelarične naloge z bolj zapletenimi trditvami , uporabljene tehnologije pa bi bilo možno uporabiti tudi pri izdelovanju drugih vrst besedilnih logičnih nalog .
Zato je smiselno razvijati računalniške programe za pomoč sestavljavcem nalog vsaj za preprostejše tipe nalog , tako da sestavljavcem ostane več časa za sestavljanje inovativnejših nalog .
Magistrska naloga se osredotoča na besedilne logične naloge , torej tiste , ki so podane kot besedilo .
To je smiselno zato , ker je večina svetovnega razvoja na področju jezikovnih tehnologij v angleščini , ki se slovnično precej razlikuje od slovenščine , zato razvitih izdelkov ni mogoče preprosto predelati za slovenščino , pri nebesedilnih nalogah ( npr. sudoku , številske ( pa tudi navadne , za katere potrebujemo le drug seznam besed ) križanke ipd. ) pa jezik ni problem in je program mogoče uporabiti za kateri koli jezik .
Tvorjenje besedila , ki je za to potrebno , je tudi pomembno področje računalniške obdelave naravnega jezika in uporabno še v druge namene [ 30 ] .
Opisana bo jezikovna infrastruktura ( prevajalni sistem Presis , njegov vmesni jezik in podatkovna baza Ases ) , ki bo uporabljena pri tvorjenju povedi v naravnem jeziku .
Z združevanjem stavkov [ 6 ] in povečanjem sovisnosti [ 21 ] bo doseženo , da bo sestavljena naloga zvenela čim manj ponavljajoče , čim bolj naravno – čim bolj podobno temu , kar bi napisal človek .
2.1 Logične naloge Za začetnika logičnih nalog velja angleški matematik Charles Lutwidge Dodgson , bolj znan pod psevdonimom Lewis Carroll , avtor knjige Alica v čudežni deželi [ 38 ] .
Naloga določi določene povezave med predmeti in lastnostmi ( ali obstoj ali neobstoj povezave ) , potem pa je treba s sklepanjem dopolniti razpredelnico in povezati vse predmete in lastnosti .
V angleščini se naloga pogosto imenuje tudi Zebra puzzle [ 40 ] ; obstaja več različic , ena izmed njih je napisana v prilogi 6.3.1.
D N D N N N N N 2. pravilo : Če NE nastopa pri neki vrednosti za eno lastnost na vseh skupnih mestih pri drugi lastnosti , razen na enem mestu , potem je na tem mestu DA. N N N N D N N 5 3. pravilo : Pri dveh lastnostih se dve vrednosti med seboj izključujeta ( komplementirata ) .
Druga vrsta nalog je , da je treba za dani svet ugotoviti , ali je stavek ( zapisan ali v naravnem jeziku ali v jeziku prvega reda ) v njem resničen ali ne .
2.2 Dosedanji poskusi samodejnega izdelovanja nalog Kljub temu da se marsikdo raje ukvarja s samodejnim reševanjem logičnih nalog ( npr. [ 24 ] ) , tudi sestavljanje nalog ni popolnoma zanemarjeno .
6 2.2.1 Angleščina Leta 2001 je v [ 29 ] Bart Paintner teoretično opisal logične naloge , reševanje v Prologu in tudi postopek sestavljanja čim težjih nalog s pomočjo dinamičnega programiranja , vendar se ni ukvarjal s prevodom naloge v naravni jezik .
Delo je zanimivo zaradi ugotavljanja , kdaj je neka logična naloga bolj ali manj zahtevna .
Delo je zanimiv primer zajemanja znanja , ocenjuje tudi težavnost izdelanih nalog , ne ukvarja pa se podrobneje z generacijo naravnega jezika , saj naloge niso takega tipa , da bi bilo to potrebno .
Uporaben pristop je metoda , ki za preprečevanje alternativnih rešitev uporabi program za reševanje in v primeru , da ta ne najde alternativne rešitve do določene zahtevnosti iskanja , sklepa , da je naloga enolično rešljiva .
Na spletni strani [ 36 ] je Izidor Hafner v okviru Wolfram Demonstration Projects objavil program v Mathematici , ki generira naloge iz vitezov in oprod .
Vse naloge imajo isto tematiko , možno pa je izbirati med lastnostmi ( osnovna lastnost so hiše in njihove številke ( zaporedje ) , dodatno pa je možno izbrati še do 10 lastnosti ( barva hiše , narodnost lastnika , najljubša pijača lastnika , hišni ljubljenček , kaj kadi , najljubša hrana , drevo pred hišo , najljubši šport , rože pred hišo in vrsta avta ) in številom zapisov ( od 3 do 10 ) .
Where does everybody live ?
Še nekaj nalog , izdelanih s to stranjo , je v prilogi 6.3.1. 8 2.2.1.1.2 Analiza strani Na strani ni objavljenih nobenih podrobnejših informacij o načinu dela strani , tudi na e-pismo z vprašanji ni bilo odziva .
2.2.2 Slovenščina Program za izdelavo tabelaričnih nalog je leta 1997 izdelal Izidor Hafner [ 10 ] , dopolnjena verzija pa je bila opisana v [ 11 ] .
Program omogoča izbiranje pogojev , pri čemer avtomatsko dopolnjuje sklepe , ki jih izpelje s pomočjo pravil izpeljevanja pri logičnih nalogah [ 9 ] .
Končni rezultat je seznam potrebnih pogojev , ki pa še niso zapisani v naravnem jeziku , zato je za dokončanje naloge treba še precej dela ( program pa je zato v resnici jezikovno neodvisen , če seveda izvzamemo , da je uporabniški vmesnik v slovenščini ) .
v obliko : @ x ( Cube ( x ) $ ( / y ( Dodec ( y ) & RightOf ( x , y ) ) ) ) / x ( ( Dodec ( x ) & ( @ y ( Cube ( y ) $ RightOf ( x , y ) ) ) ) ) Cube ( b ) $ Cube ( a ) Uporabnost tega programa pri sestavljanju logičnih nalog je v tem , da se lahko napiše seznam trditev v naravnem jeziku , ki se s tem programom prevedejo v logični zapis ( pri čemer program opozori tudi na morebitne napake in dvoumnosti ) , potem pa se s programom Svet Tarskega preveri , ali trditve v danem svetu veljajo ali ne .
Reševalec dobi dani svet in seznam trditev v naravnem jeziku ter mora ugotoviti , ali so trditve v danem svetu resnične ali ne .
9 2.3 Program Spesni Cilj programa Spesni [ 16 ] je bil čim bolj samodejno izdelovanje nalog , in to tako v prvem delu , ko se izbirajo pogoji , kot tudi pri prevajanju pogojev v naravni jezik .
Programu moramo povedati ime teme ( in s tem tudi ime datoteke s predlogo o temi ) , število lastnosti ( ki mora biti manjše ali enako številu lastnosti v temi ) , število zapisov ( ki mora biti manjše ali enako najmanjšemu številu zapisov v uporabljenih lastnostih v uporabljeni temi ) , število trditev z DA in število nalog , ki naj jih naredi ( če se to ne navede , je privzeta vrednost 1 ) .
Število trditev z DA uporabimo zato , da lahko po potrebi poenostavimo nalogo s tem , da že v besedilu postavimo več trditev z DA ( program ne bo hotel postaviti preveč takih trditev ) .
2.3.1 Predloga za naloge Opis predloge za naloge je povzet po [ 16 ] .
Vsaka lastnost se začne z vrstico , ki se začne z znakom » # « , ki mu sledita presledek in ime lastnosti .
Potem sledijo vsak v svoji vrstici posamezni zapisi za dano lastnost ; če je možnih več oblik za dane zapise , morajo biti oblike ločene z znakom »;«.
Vsi zapisi za dano lastnost morajo imeti enako število oblik .
Če je za isti par lastnosti ( oz. kombinacije parov ) napisanih več pravil , bo program naključno izbral eno .
V paru med lastnostma je lahko črka D ( trdilno pravilo ) ali N ( nikalno pravilo ) .
Če gre za kombinacijo , so pari med seboj povezani z znakom »+«.
Če se v kombinaciji ponovi ista lastnost , vendar nima vsakič iste vrednosti , je treba naslednje pojavitve označiti s pripono » ' 1 « , » ' 2 « ...
V tem 10 opisu se lahko med »<>« uporabljajo imena lastnosti , kar pomeni , da program na tem mestu našteje vse uporabljene zapise za dano lastnost .
2.3.2 Primer predloge Naveden je kratek primer predloge za Spesni ; več obsežnejših primerov je v prilogi 6.6. # ime Miran ; Irena ; a Jure ; Tine ; Meta ; a # predmet kemija ; kemije ; kemiji ; kemijo matematika ; matematike ; matematiki ; matematiko fizika ; fizike ; fiziki ; fiziko biologija ; biologije ; biologiji ; biologijo logika ; logike ; logiki ; logiko # dan ponedeljek ; ponedeljek torek ; torek sreda ; sredo četrtek ; četrtek petek ; petek ## < ime > D < predmet > : < ime > je pisal < ime:1 > test iz < predmet:1 > .
< ime > D < predmet > : < predmet:3 > je pisal < ime:1 > < ime > .
< ime > N < predmet > : < predmet:1 > ni pisal < ime:1 > < ime > .
< predmet > D < dan > : V < dan:1 > je bil test iz < predmet:1 > .
< predmet > N < dan > : V < dan:1 > ni bilo testa iz < predmet:1 > .
< ime > N < predmet > + < ime'1 > N < predmet > + < ime'2 > N < predmet > : < ime > , < ime'1 > in < ime'2 > niso pisali testa iz < predmet:1 > .
# 3 3 Trije znanci ( < ime > ) so prejšnji teden pisali vsak po en test ( < predmet > ) , in sicer v različnih dneh .
V sredo ni bilo testa iz logike ali matematike .
Rešitev je : 3 ime , predmet , dan 5 Miran , kemija , ponedeljek Meta , fizika , torek Jure , biologija , sreda Tine , matematika , četrtek Irena , logika , petek Več primerov nalog , izdelanih s programom Spesni , je v prilogi 6.3. 2.3.4 Postopek samodejne izdelave tabelarične naloge Spesni naredi tabelarično nalogo po naslednjem postopku ( začne s prazno tabelo ) : - izbere eno prazno polje in da vanj trditve DA oz. NE ( na začetku določeno število trditev DA , naprej trditve NE ) , pri čemer trditve DA postavlja le na diagonale , drugod pa NE , - po pravilih izpeljevanja [ 9 ] postavi še v vsa druga polja trditve DA oz. NE , ki jih je mogoče izpeljati iz dosedanjih trditev in njihovih izpeljav , - postopek ponavlja , dokler tabela ni polna .
Ko je tabela polna , prevede seznam trditev v naravni jezik s pomočjo vzorcev v nastavitveni datoteki ( prednost imajo vzorci , ki pokrijejo hkrati čim več trditev ) .
Leta 2009 je bil predstavljen še nemško-slovenski prevajalnik .
Prevajalnik temelji na jezikovni zbirki Ases , iz katere dobi vse potrebne jezikovne podatke in ki bo opisana v naslednji točki .
Kadar analizatorju ne uspe analizirati stavka , uporabi Presis pomožne metode , v skrajnem primeru pa prevede stavek dobesedno besedo po besedo ali celo pusti besede neprevedene .
Podrobnejši opis je v [ 1 ] in [ 2 ] , tukaj bomo opisali le nekaj osnov , ki bodo uporabljene pri delu , in pa bolj podrobno glagolske predloge , ki doslej še nikjer niso bile podrobneje opisane .
Elementi v zbirki so besede , zveze , skupine , predloge in pomeni .
Beseda vsebuje podatke o osnovni obliki besede in vseh možnih oblikah pregibanja ( npr. beseda » miza « ima oblike » mize « , » mizi « , » mizo « ipd. ) .
Vsaki obliki je pripisana oblikoskladenjska oznaka , ki pove besedno vrsto in druge podatke oblike ( pri samostalniku npr. vrsto samostalnika ( občno ime ali pa vrsta lastnega imena ) , sklon , spol , število ( slovnično in pomensko ) , živost ) .
Dodani so še podatki o uporabnosti besede , torej ali je beseda primerna za uvrstitev v črkovalnik ( baza sicer vsebuje tudi pogoste zatipkane oz. napačne besede ) in ali lahko nastopa le v zvezah , ne pa samostojno ( tak primer je pridevnik » Škofji « , ki lahko nastopa v zvezi » Škofja Loka « ipd. , sicer pa gre verjetno za napako ) .
Glagolska predloga pove , na kakšen način se glagol uporablja v stavku , s katerimi skloni in predlogi se povezuje .
Med pomeni so lahko določene povezave , ki povedo , kateri pomeni tipično nastopajo skupaj ( ali pa ne smejo nastopati skupaj ) .
Podrobneje so opisani v točki 2.4.1.2. 2.4.1.1 Glagolske predloge Ideja glagolskih predlog je bila na kratko predstavljena že v [ 19 ] , vendar do zdaj še ni bil objavljen podrobnejši opis , zato je ta dodan v prilogi 6.1.
Deli predloge , ki se lahko spreminjajo , imajo določene oznake ( od P1 do P9 ) , ki povedo , na kakšen način se povezujejo z drugimi predlogami znotraj pomena .
Trpne oblike se naredijo avtomatsko , in sicer tako , da predmet v tožilniku postane osebek , glagol pa se prestavi v trpno obliko .
Nadrobnost delitve pomenov je odvisna od potreb ; za potrebe prevajanja morajo npr. biti pomeni ločeni , kadar imajo različne prevode .
Tako sta zdaj v Asesu dva pomena , » peta ( noga ) « in » peta ( pri obutvi ) « , po potrebi pa se lahko dodajo še pravila za razdvoumljanje ( če nekoga boli peta , to zanesljivo ni peta čevlja ) .
Pomeni so med sabo lahko povezani z odnosi .
Ti odnosi se uporabljajo pri razdvoumljanju , da se analizator lahko odloči v primerih , ko kaže neka beseda na več možnih pomenov ( primer , pri katerem pride prav označevanje nenavadnih kombinacij , je kombinacija pridevniškega pomena » časoven « in samostalniškega » muha « ; to pomaga pri razdvoumljanju angleškega stavka » Time flies .
« ) .
Možno pa je , da katera od vsebovanih predlog ne vsebuje vseh oznak , uporabljenih v drugih – v takem primeru se bo predloga uporabila le , kadar v analizi ni te oznake .
Težava nastane le v primeru , kadar za neki jezik ne obstaja nobena predloga , ki bi imela vse oznake , ki se pojavljajo v drugih jezikih .
Na ta način je mogoče povedati , da se neki samostalnik tipično veže točno na mestu osebka ali določenega predmeta , in ne le , da tipično nastopa z nekim glagolom .
Pri teh odnosih je možno uporabiti tudi štiri posebne pomene : ime pomena pomen odnosa s tem pomenom $ $ je oseba oznaka mora kazati na osebo $ $ ni oseba oznaka ne sme kazati na osebo $ $ moški spol oznaka mora kazati na osebo moškega spola $ $ ženski spol oznaka mora kazati na osebo ženskega spola Pri imenih pomenov , ki so vezani na te posebne pomene , se to pri ustreznih delih označi z nizi » / OS « , » / NIOS « , » / M « , » / Ž « ( če se to nanaša na osebek , se označi kar glagol ) .
2.4.2 Vmesni jezik Vmesni jezik je bil na kratko opisan v [ 18 ] in [ 15 ] .
Vmesni jezik je razdeljen na dve ravni : na spodnji je opis stavkov ( kamor so všteti tudi polstavki ) , na zgornji pa opis , kako so ti stavki povezani v povedi .
15 2.4.2.1 Opis stavka Elementi vmesnega jezika so napisani v ( navadnih ) oklepajih , znotraj so lahko gnezdeni še drugi elementi ( odvisno od elementa ) .
Imena elementov imajo po tri črke , lahko jim sledijo še parametri , ki so odvisni od posameznega elementa .
Po potrebi so napisane oznake lem , oznake pomenov , oznake oblikoskladenjskih oznak , položaji besed v stavku itd.
Osnovni element v stavku je vedno POV ( poved ; ostaja iz zgodovinskih razlogov , ker je bilo na začetku mišljeno , da bosta obe ravni opisa vmesnega jezika združeni v eno ) , znotraj tega pa je ali STA ( stavek ) ali STC ( stavčni člen ) .
Podroben opis in primeri so v prilogi 6.2.1. 2.4.2.2 Opis povedi Na začetku zasnove vmesnega jezika je bilo zamišljeno , da bo tudi povezovanje stavkov v povedi zajeto v istem zapisu kot opis stavkov , vendar se je pri tem pokazala težava , da je v splošnem možnih veliko različnih analiz že na ravni stavkov .
Podrobnejši opis je v prilogi 6.2.2. 2.4.2.3 Delčna analiza Kadar stavka ni mogoče analizirati ( morda je uporabljen slovnični gradnik , ki ga analizator še ne pozna , ali neznana beseda ali pa je v stavku napaka , ki je analizator ne zna samodejno odpraviti ) , se vseeno lahko zgodi , da se določeni deli stavka dajo prepoznati ( npr. predložna zveza , kombinacija osebka s povedkom ipd. ) .
Opis zapisa delčne analize je v prilogi 6.2.3. 16 3 Dopolnjevanje vmesnega jezika Ob začetku dela se pokazalo , da Presisov vmesni jezik nekaterih slovničnih struktur , potrebnih za zapis logičnih nalog , še ne pokriva , zato ga je bilo treba dopolniti ( točka 2.4.2 in priloga 6.2 opisujeta že dopolnjeni vmesni jezik , pri katerem so upoštevane dopolnitve , narejene pri izdelavi te naloge ) .
Novi pristop na ravni povedi bo zahteval še temeljito predelavo generatorja , s katero bo med obstoječi ravni odstavkov in stavkov dodana še raven povedi , vendar to še ni bilo izvedeno .
3.1 Ugotavljanje pomanjkljivosti vmesnega jezika Da se ugotovi , česa Presisov vmesni jezik še ne pokriva , je bil sestavljen seznam trditev , ki se pojavljajo v tabelaričnih nalogah .
Ena od težav so besede , ki jih še ni v slovarju .
Tak primer je priimek Plazovnik , ki ga bo tako smiselno dodati v Ases ( kjer se priimki precej sistematično zbirajo ) , in še nekaj osebnih imen iz primerov .
Bolj težavna so imena blagovnih znamk , glasbenih skupin in podobno .
Pogosto uporabljene bi bilo sicer mogoče vnesti v slovar , v splošnem pa bi bilo s tem preveč dela , preveč takih vnesenih besed pa bi lahko začelo motiti tudi delovanje črkovalnika .
Druga potrebna dopolnitev so primerjave ( Punca iz Pirana je starejša kot Anja .
Naslednja potrebna dopolnitev so pogojne povedi ( če ...
Primer nalog , ki bi se dale delati s to dopolnitvijo , so naloge iz sveta Tarskega .
Zato je glagolske predloge treba dopolniti z novim elementom , ki bo zajel ta primer .
3.2 Večdelni vezniki V precejšnem delu primerov , ki jih Besani ni uspelo analizirati , se je pokazalo , da so vzrok dvodelni vezniki ( Orla ni videl niti Peter niti Janez .
S pomočjo elektronske verzije Slovenskega pravopisa 2001 so bili poiskani primeri slovenskih večdelnih ( bolj natančno dvodelnih ) veznikov in razvrščeni v pomenske / slovnične skupine .
niti – niti ne – ne * neither – nor 18 Deli so lahko besede ali stavki .
kakor – tako kot – tako Deli so tipično stavki , pred drugim delom je vejica .
Dela sta lahko tudi razmaknjena ( da je vmes glagol ) : Tako kot zdravniki so mu tudi nekateri prijatelji predlagali oddih .
Problem večdelnih veznikov je bilo treba rešiti na treh ravneh : na ravni besed oz. besednih oblik , na ravni analizatorja in na ravni vmesnega jezika .
Pri vmesnem jeziku mora biti zapis tak , da dvodelnost ne vpliva na pomen .
Pri besedah se je pojavila dilema , ali naj deli večdelnega veznika ostanejo samostojne besede oz. fraze ali naj bodo to besedne oblike skupne leme .
Če bi bili deli le besedne oblike , bi to poenostavilo delo analizatorju , ki bi tako lahko sestavljal dele s pravilom , da mora biti ista lema ( podobno , kot to počne pri sestavljenih nemških glagolih ( anlesen – Ich lese an .
) .
Prvi del veznika postane osnovni element predloge , drugi del pa njen element ( kategorija VEZNIK ) .
Prvi in drugi del veznika dobita ločeni lemi v bazi ( sta ločeni besedi , pa čeprav sicer enaki ) .
Razlika je le , da se na koncu v vmesni jezik pri vezniku zapiše mesto obeh delov .
Dodatno je bilo treba dodati še preverjanje , da je analizator , če je že uporabil prvi del veznika , obvezno našel tudi drugi del , preden je element zaključil .
Pri vezniškem paru niti – niti ( in na splošno pri stopnjevalnih veznikih ) se je pojavila dilema , v katerem številu je rezultat , kadar je tako povezan osebek , ali je torej pravilno » Niti Janez niti Miha nista prišla .
3.3 Primerjanje V vmesnem jeziku se niso dali zapisati stavki , kot so : Punca iz Pirana je starejša kot Anja .
Na prvi 20 pogled se zdi , da sta pri tretjem primeru možnosti » manj « in » več « , pri četrtem pa le » toliko « , vprašanje pa je , kako to označiti v bazi ( morda z dodatnim pomenom za ta namen ?
Take primere bo najbolj smiselno reševati na podoben način kot tretjega in četrtega , in to v povezavi s prilastkovimi odvisniki na ravni povedi vmesnega jezika .
Če je b kocka , potem je tudi a kocka .
Pri določanju pogojnih odvisnikov v slovenščini dela precej težav neknjižna uporaba veznika če namesto pravilnega knjižnega ali pri pretvorbi vprašalnega premega govora v odvisni govor : Vprašal je , če pride .
Ta uporaba je sicer neknjižna , vendar tako pogosta , da je ni mogoče zanemariti in jo mora analizator nujno upoštevati z isto prioriteto kot pravilno uporabo .
3.4.1 Tipi pogojnih povedi Tradicionalno so v slovnicah ( npr. latinski [ 37 ] , angleški [ 22 ] ali nemški [ 25 ] ) glede na uresničljivost ( in s tem slovnični čas ) pogojne povedi razdeljene v tri tipe ( ki jim nekateri dodajajo še četrtega [ 41 ] ) .
3.4.1.1 Realni tip Govori o prihodnosti , obstaja realna možnost , da se pogoj uresniči .
3.4.1.2 Potencialni tip Tudi govori o prihodnosti , vendar ni velike možnosti , da se uresniči .
21 3.4.1.3 Irealni tip Govori o preteklosti , pogoj se ni izpolnil in se tudi več ne more .
V slovenščini je ta tip v splošnem težko ločiti od potencialnega tipa , ker zanj običajno uporabimo enak slovnični čas , kar zelo zaplete delo analizatorju .
3.4.2 Zapis v vmesnem jeziku Pri zapisu v vmesnem jeziku se časi zapišejo tako , kot bi bili v slovenščini ( podobno kot že tudi pri odvisnem govoru ) , generator pa potem izbere ustrezne čase glede na tip pogoja .
Generator bo potem glede na tip pogoja , čas in ciljni jezik prestavil glavni stavek in pogojni odvisnik v ustrezni čas .
22 Treba se je sicer zavedati , da namen vmesnega jezika nikakor ni preslikava naravnega jezika v neki logični zapis , ampak le bolj formalen zapis naravnega jezika , ki nekoliko poenostavi delo z naravnim jezikom .
Pri analizi rezultatov se je pokazala tudi težava pri analizi stavka Vse kocke so v istem stolpcu .
Analizator je namesto pričakovane predloge » biti PDJ « uporabil predlogo » biti { PR3 } POD « in tako v analizi ločil » vse « od » kocke « v različna stavčna člena ( povedkovo določilo in osebek ) , namesto da bi bil » vse « levi prilastek osebka .
Ocenjevanje različic v analizatorju je bilo treba dopolniti s pravilom , da če je pridevniško povedkovo določilo neposredno pred osebkom , je ta različica manj verjetna ( in je bolj verjetno vse skupaj osebek , če je to le možno ) .
3.6 Predmetna povedkova določila Pri primeru » Marko se ne piše Gorjanc .
Dosedanja povedkova določila so bila le pridevniška , nova kategorija pa je bila imenovana predmetna povedkova določila .
Primera za predmetno povedkovo določilo imena sta : Marko se piše Gorjanc .
Primer za predmetno povedkovo določilo trajanja je : Irena je stara 16 let .
Primer za predmetno povedkovo določilo cene je : Jopica stane 20 evrov .
23 3.7 Povezovanje imen in priimkov Pri generaciji primerov , v katerih nastopata skupaj ime in priimek , se je pokazalo , da vmesni jezik glede tega še ni dovolj dodelan .
« , torej pri vseh primerih , v katerih gre za desni ujemalni prilastek .
Analiza generatorja je pokazala , da uporablja oblikoskladenjsko oznako prilastka za to , da ugotovi , ali je treba narediti rodilnik : to naredi v primeru , da gre za obči samostalnik , kar deluje v večini primerov , zato ta pomanjkljivost vmesnega jezika v Presisu ni opazna .
Pregled literature ( [ 31 ] , [ 27 ] ) je pokazal , da ne bo dovolj ločevati le med ujemalnimi ( Janez Novak , stric Janez , mesto Ljubljana ) in neujemalnimi prilastki , ampak da so tudi ( samostalniški ) neujemalni desni prilastki precej raznoliki , saj je lahko prilastek v imenovalniku ( hotel Turist ) , rodilniku ( hiša učenosti , pisanje pisma ) in tudi dajalniku ( pismo očetu ) .
Dodatno se zaplete še pri rodilniških primerih , v katerih prva beseda označuje količino ( pest orehov , kozarec vode , kilogram krompirja ) , kjer je slovnično sicer desna beseda prilastek , pomensko pa je jedro ( in jih [ 27 ] tudi označuje kot jedro pri stavčni analizi ) , kar pomeni tudi , da bi moral analizator to upoštevati pri iskanju kombinacij pomenov ( » Popil je kozarec vode .
« , pri katerem privijanje pesti ne pomeni ničesar , medtem kot privijanje matice lepo razdvoumi besedo matica ( in tudi privijanje ) ) , kar se pa lahko zgodi le , če je to v analizi posebej označeno .
« Odločitev je bila , da se vse to razreši tako , da se v vmesni jezik uvede element IMP ( imenski prilastek ) , ki bo povedal , kdaj gre za desni ujemalni prilastek ali desni neujemalni imenovalniški prilastek .
Zveze tipa » človek žaba « bodo morale biti vnesene kot zveze v bazi .
Element IMP bo imel zadaj podatek , ki bo povedal , za kakšno vrsto imena gre : osebno ime , priimek ali drugo .
Znotraj elementa IMP bo element SAM , večbesedna imena bodo morala biti rešena kot zveze .
Za večbesedne priimke pa bomo uvedli posebni oznaki za vrsto imena v IMP pri drugem priimku , in sicer odvisno od tega , ali sta priimka ločena s presledkom ali z vezajem .
Možna rešitev za to bi bila , da se pri vseh pomenih priimkov dodajo še pomeni za ženski spol .
Analizator je sicer zložil stavčne člene v takem vrstnem redu , kot so nastopali v stavkih , vendar generator tega potem ni upošteval ( z izjemo začetnih prislovnih določil ) .
Pri izboljševanju sovisnosti besedila ( točka 4.3.8 ) pa se je pokazalo , da bo to nujno zapisati v vmesnem jeziku in ustrezno dopolniti generator , če želimo vplivati na sovisnost besedila .
V nekaterih primerih generator za zdaj še ne podpira popolnoma členjenja po aktualnosti , recimo v predlogah , ki imajo podatek v PRZ , česar generator še ne zna postaviti na začetek stavka .
25 4 Sestavljanje tabelaričnih nalog S programom Spesni ( podrobneje opisanim v točki 2.3 ) je sicer mogoče hitro narediti veliko število tabelaričnih nalog na določeno tematiko , je pa precej dela , če se hoče ta tematika zamenjati ( ker je treba narediti novo predlogo ( opisano v točki 2.3.1 ) , tako da je težko narediti veliko tematik , zaradi česar naloge lahko postanejo preveč enolične .
Namesto Presisa bi se dal uporabiti tudi kateri drugi strojni prevajalnik , ki uporablja vmesni jezik , pri čemer bi bilo treba ustrezno prilagoditi del , ki prevaja nalogo v vmesni jezik .
Kot vmesni jezik bi bil lahko uporabljen e-speranto [ 26 ] , ki pa še ni razvit do stopnje , na kateri bi bil uporaben ( in manjkajo še tolmači ( generatorji ) e-speranta v naravne jezike ter prevajalniki ( analizatorji ) iz naravnih jezikov v e-speranto ) .
Vzorčni stavek je npr. : Borut je napisal zeleno simfonijo marca .
Analizator ga analizira in dobi rezultat v vmesnem jeziku .
Deli , ki so samostalnik , prislov ali pridevnik , so kandidati za spremenljivke , v tem primeru Borut , zelen , simfonija in marca .
Analiza vzorčnega stavka je ( originalna celotna analiza za ta vzorčni stavek je v prilogi 6.2.1.1 , vendar je tam narejena z drugo verzijo baze , tako da so oznake lem in pomenov drugačne ) : * ( - POV : ( - STAg-npppdvt - - - - - - - : ( 1OSB : ( - SFR : ( - DSF : ( - JED : ( - SAMe : { ; $ 0xxxxxx } [ ] < > ) ) ) ) ) , ( * PVD : ( - GPO : [ ] ) ) , ( 0PVD : ( - GGL : { 3aba8a ; 585242d } [ ] < > ) ) , ( 2PR4 : ( - SFR : ( - DSF : ( - PFR : ( - DPF : ( - PRVo : { ; $ 1xxxxxx } [ ] < > ) ) ) , ( - JED : ( - SAMe : { ; $ 2xxxxxx } [ ] < > ) ) ) ) ) , ( - PDOc : ( - PRF : ( - PRSo : { ; $ 3xxxxxx } [ ] < > ) ) ) , ( - LOCkp : [ ] ) ) ) Poiskane in označene so že štiri lastnosti , ki se jih da spreminjati ( z » $ 0xxxxxx « do » $ 3xxxxxx « ) , izbrisane so odvečne oznake lem , odvečni pomeni , položaji v stavku in oblikoskladenjske oznake .
4.1.1 Postopek iskanja možnosti za lastnost Kandidati za spremenljivo lastnost so samostalniki , pridevniki , prislovi in števniki .
Števniki so lahko lastnost , kadar so celoštevilčni , spreminjanje decimalnih števil bi bilo zoprno .
Odgovor ni preprost , preizkušanje različnih možnosti je pokazalo , da se je dobro izogibati zelo splošnim nadpomenom z velikim številom podpomenov , kot so P:S : $ oseba , P:S : $ organizacija oz. P:S : $ poklic , kadar je le mogoče , drugače pa je v splošnem bolje izbrati nadpomen .
Pri samostalniku sodišče pa je bolje izbrati različne vrste sodišč ( ustavno sodišče , vrhovno sodišče , kazensko sodišče , delovno sodišče , deželno sodišče ipd. ) kot pa splošne organizacije , pri čemer lahko dobimo vse od poslanske skupine do policije , parlamenta , cerkvenega zbora , centralnega komiteja in strelskega voda .
Pri podpomenih se je pokazalo še , da bi bilo smiselno , da bi se jih dalo v Asesu razdeliti v skupine ; podpomeni pri sodišču so tako mešanica različnih vrst sodišč glede na vrste postopkov , glede na stopnjo in glede na krajevno pristojnost .
4.1.1.1 Določanje nadpomena Kadar je kot nadpomen uporabljena katera od splošnih kategorij , ki sploh nimajo neposredno vezanih besed ( v Asesu se taki pomeni označujejo z znakom »$« na začetku imena ) , je treba vseeno najti neki nadpomen , ki se bo lahko uporabil v primeru , da je ta lastnost v stavku obvezna in se je ne da izpustiti pri prevajanju v vmesni ( in potem ciljni ) jezik .
V ta namen so bili uporabljeni štirje pomeni , in sicer : • žival , ki se uporabi pri živalih ; • rastlina , ki se uporabi pri rastlinah ; • nekdo , ki se uporabi pri osebah ; • nekaj , ki se uporabi v drugih primerih .
Podatek o tem , ali neki pomen predstavlja osebo , je zelo pomemben pri razdvoumljanju , zato je bil zelo dosledno vnesen pri vseh pomenih v Asesu .
Tak primer sta pomena » P:S:pesem ( za petje ) « in » P:S:pesem ( poezija ) « , ki sta razdeljena zaradi angleščine ( » song « in » poem « ) , medtem ko je v slovenščini oboje » pesem « .
Taki primeri so nerodni zaradi tega , ker bi se lahko zgodilo , da sta oba taka pomena uvrščena kot možni vrednosti za lastnost , pri prevajanju iz vmesnega jezika v naravni jezik pa bi se oba pomena prevedla v isto besedo , zaradi česar ju pri reševanju ne bi bilo mogoče ločiti in bi naloga postala nerešljiva .
Zato je treba dodatno zagotoviti , da se nobeden od pomenov , ki so 27 našteti kot možne vrednosti za lastnost , ne prevede v isto besedo v ciljnem jeziku kot kateri drug .
Dodaten zaplet je , da bi se lahko enaka beseda pojavila tudi med različnimi lastnostmi , npr. » Marko « bi bilo lahko tako ime kot priimek in stavek » Marko je napisal motet .
4.1.2.1 Tabela lastnosti V tabeli lastnosti so za vsako oznako lastnosti ( od $ 0 do maksimalno $ 9 ) naslednji podatki : - vrsta lastnosti ( ali nadomešča običajni samostalnik , pridevnik ali prislov ; ali nadomešča števnik ; ali nadomešča del datuma – dan , mesec ali leto ) ; - nadpomen ( kadar obstaja , lahko je tudi splošen ) ; - podatek , ali je nadpomen zaimek ( da se lahko spremeni element SAM v SAZ , kar je pomembno zato , da se morebitni pridevnik prestavi nazaj , pri angleščini pa tudi izpusti člen ) ; - število možnih vrednosti ; - seznam pomenov za možne vrednosti ; - originalni pomen , ki ga je zamenjala lastnost ( da bi bilo možno narediti več vzorčnih stavkov , ki bi jih med seboj povezovale lastnosti ) .
4.1.2.2 Tabela stavkov Za vsak stavek so shranjeni glavna analiza in stalni deli iz analize ( to so deli , ki niso del nobene lastnosti ) ter tabela za lastnosti , v kateri so za vsako lastnost v stavku shranjeni naslednji podatki : - oznaka lastnosti , ki kaže na tabelo lastnosti ; - del analize s to lastnostjo ; - podatek , ali je lastnost v stavku obvezna ( v primeru , ko hočemo narediti stavek brez te lastnosti , je tako treba uporabiti splošni nadpomen lastnosti ) ; določanje tega je kar zapleteno ; če ima lastnost oznako , je treba preveriti v predlogi , ali je ta del predloge obvezen , pri osebku pa je treba ugotoviti , ali je možno narediti trpno obliko – le v tem primeru je osebek lahko neobvezen ( vendar pa mora potem biti obvezen predmet , sicer bi prišli do primera , ko ni v stavku niti osebka niti predmeta , takega stavka pa ne bi bilo mogoče sestaviti ) ; lastnosti brez oznake v predlogi so vedno neobvezne ) ; - podatek o nadrejeni lastnosti ( če obstaja ) , tj. lastnosti , ki mora biti obvezno zraven ( če je sicer ne bi bilo , je treba uporabiti splošni nadpomen te lastnosti ) ; - podatek o vrsti lastnosti ( ali gre za desni rodilniški prilastek ) ; - podatek o prepovedani kombinaciji , če ta obstaja ( torej katera lastnost ne sme biti hkrati uporabljena v tem stavku , primer so imenski prilastki , opisani v 4.1.3.3 ) .
28 4.1.3 Posebne strukture v vzorčnih stavkih Dokler je vsaka lastnost v svojem stavčnem členu , je luščenje lastnosti znotraj stavka precej preproste , paziti je treba le na to , ali je neki stavčni člen obvezen v stavku .
4.1.3.1 Levi pridevniški prilastek Pridevnik ne more nastopati sam , zato mora samostalniška lastnost obvezno imeti nadpomen , s katerim se ta pridevnik lahko poveže v primeru , da samostalniške lastnosti ni .
4.1.3.2 Desni samostalniški prilastek Tudi tukaj prilastek ne more nastopati sam , zato mora lastnost v jedru obvezno imeti nadpomen .
4.1.3.3 Imenski prilastek Kot imenski prilastek lahko nastopata tako jedro kot prilastek ( spremenjen v jedro ) , težava pa nastopi , kadar potrebujemo oboje hkrati .
Dodatni stavek je odvisen od vrste imenskega prilastka , za priimek mora biti » pisati se « , v drugih primerih pa » imenovati se « .
4.1.3.4 Datumi Datumi so zapisani v analizi z elementom XLE ( opisanim v prilogi 6.2.4.47 ) , kot del tega elementa so zapisani dan , mesec in leto .
Že sama stavčna analiza naravnih jezikov je zelo kompleksen problem , razdvoumljanje pa je še težji ( kar se hitro opazi pri uporabi strojnih prevajalnikov ) .
4.1.4.1 Neprimeren stavek za izdelavo tematike Osnovne zahteve , da je stavek uporaben za izdelavo tematike , so : - stavek mora biti v povednem naklonu ( ne sme biti vprašanje ali velelnik ali pogoj ) ; - stavek mora biti trdilni ; - ne sme vsebovati veznikov in vejic za naštevanje ; - imeti mora vsaj tri lastnosti , ki se lahko spreminjajo ( načeloma bi zadoščali že dve , ampak taka naloga bi bila prelahka in nezanimiva ) ; 29 - lastnosti morajo biti take , da je mogoče najti po pomenu sorodne besede in nadpomenko ; - v enem stavčnem členu ne smeta biti več kot dve lastnosti ( ker se sicer strukture lahko preveč zapletejo ) ; - stavek ne sme biti del sestavljene povedi .
4.1.4.2 Neuspela analiza Za to , da analiza stavka ne uspe , je možnih več razlogov .
Stavek lahko vsebuje neznano besedo , slovnično konstrukcijo , ki je analizator še ne pozna , ali pa je v vhodnem stavku kakšna slovnična ali tipkarska napaka ( nekatere vrste napak zna analizator sicer samodejno spregledati , v takem primeru bo naloga lahko narejena in bo celo avtomatsko popravljena ) .
4.1.4.3 Manjkajoče predloge oz. pomeni Ases se še gradi , zato še nima vnesenih pomenov za vse besede ( in predlog za vse glagole ) .
Take primere je veliko teže avtomatsko odkriti kot besede , ki so popolnoma brez pomenov .
Dodajanje novih pomenov in predvsem predlog je zelo zahtevno delo , ki zahteva veliko časa ( ni neobičajno , da vnašanje predlog za en glagol vzame več kot pol ure ) , zato bo še dolgo trajalo , preden bo Ases popolnoma opisan s pomeni .
V prvem primeru so v Asesu manjkali vneseni nadpomeni , kar je za konkreten primer sicer preprosto rešljivo z dodajanjem ustreznih relacij v bazo , v splošnem pa je seveda to zelo obsežno delo , zato bo vedno obstajala možnost , da bo v primeru stavka beseda , za katere pomen ni ustreznega nadpomena ali pa celo nima pomena , torej primer stavka ne bo uporaben za izdelavo naloge , dokler se Ases ne dopolni .
Na neki način nasprotna težava pa se je pojavila pri osebnih imenih , priimkih in imenih krajev ( oz. prebivalcev teh krajev ) .
Vsi znani priimki so bili v Asesu združeni v en sam nadpomen , ki je tako vseboval veliko število elementov , vendar so bili ti priimki lahko tudi zelo redki oz. v določenem jeziku sploh niso imeli vnesene nobene besede ( priimek je vnesen le v angleščini , ne pa tudi v slovenščini ) .
Ta težava je bila rešena tako , da so bili v Ases dodani dodatni nadpomeni za po 30 200 najpogostejših priimkov , moških imen in ženskih imen v Sloveniji ( seznami so bili najdeni na spletnih straneh Statističnega urada Republike Slovenije4 ) ter nadpomen za mesta v Sloveniji ( 75 mest , seznam je bil najden na Wikipediji5 ) , slovenske gore in slovenske reke .
Stranska korist uvedbe teh novih nadpomenov je bila , da je bilo pri tem preverjeno , ali so ti najpogostejši priimki in imena ( ter vsa mesta ) res vneseni v Ases ( hitro je mogoče spregledati , da manjka v bazi priimek , kot je Škof , ker to zakrije vnesen občni samostalnik škof in ga tako preverjanje spiskov še neznanih besed ne odkrije ) .
Če vzamemo primera : Miha je potico z orehi .
Miha je potico z rokami .
Ne nazadnje bi bilo možno celo , da drugi stavek nastopa v zgodbi o ljudožerskem plemenu , katerega specialiteta je potica , narejena iz rok .
Pokazalo pa se je , da v nekaterih primerih Spesni da v nalogo preveč trditev , torej so včasih nekatere trditve take , ki so izpeljive iz preostalih .
Z analizo je bil najden primer , v katerem pride do tega : Dodamo novo trditev spodaj levo : Pokaže se , da postane desni zgornji N odveč : Že brez njega se namreč lahko izpelje celotna tabela : http://www.stat.si/imena.asp http://sl.wikipedia.org/wiki/Seznam_mest_v_Sloveniji 31 Ta primer je pokazal , da samo pravila izpeljevanja [ 9 ] še ne zagotavljajo , da ne bo prišlo do odvečnih trditev .
Celoten postopek programa je naslednji ( začnemo s prazno tabelo ) : - izbere eno prazno polje in da vanj trditve DA oz. NE ( na začetku določeno število trditev DA , naprej trditve NE ) , pri čemer trditve DA postavlja le na diagonale , drugod pa NE , - po pravilih izpeljevanja [ 9 ] postavi še v vsa druga polja trditve DA oz. NE , ki jih je mogoče izpeljati iz dosedanjih trditev in njihovih izpeljav , - preveri , ali je katera od prejšnjih trditev izpeljiva iz ostalih , in jo v tem primeru zbriše s seznama , - postopek ponavlja , dokler tabela ni polna .
4.3 Prevajanje trditev v vmesni jezik V tabeli stavkov ( 4.1.2.2 ) program poišče stavek , ki lahko poveže lastnosti , nastopajoče v trditvi .
Matjaž ni napisal skladbe septembra .
Zvonko ni napisal moteta .
Bela skladba ni bila napisana avgusta .
Modra skladba ni bila napisana maja .
Simfonična pesnitev ni bila napisana februarja .
Rožnata skladba ni bila napisana februarja .
Naloga je sicer že popolnoma razumljiva in rešljiva , vendar se besedilo naloge preveč ponavlja in kot celota zveni preveč umetno .
Ena od metod je združevanje osebkov ali predmetov , kadar je drugo v stavkih enako ; bolj zapletena metoda pa je npr. pomensko združevanje , kjer lahko združimo » ponedeljek , torek , sreda , četrtek , petek « v » delavnik « .
Z raziskavami združevanja stavkov se ukvarja tudi [ 23 ] , vendar predvsem s problemi , pri katerih je že vhod besedilo in je največja težava najti stavke , ki bi jih združili , medtem ko so pri tabelaričnih nalogah trditve že zapisane na računalniku razumljiv način , kar olajša iskanje stavkov , ki bi jih lahko združili .
33 4.3.2 Sestavljanje dveh nikalnih trditev Da bi rešil del ponavljanj v besedilu naloge , sem se odločil uporabiti večdelne veznike ( dodane v vmesni jezik pri 3.2 ) , in sicer pri nikalnih trditvah ( pri trdilnih trditvah do takih ponavljanj ne more priti ) .
Bela skladba ni bila napisana niti maja niti aprila .
Suita ni bila napisana niti septembra niti aprila .
Motet ni bil napisan niti maja niti februarja .
Modra skladba ni bila napisana maja .
Tako narejena naloga je naslednja : Modra skladba je bila napisana ali septembra ali februarja .
Niti moder niti rjav koral ni bil napisan .
Vmesni jezik za zdaj podpira le dvodelne veznike , zato tega še ni mogoče narediti , je pa smiselno v prihodnosti razmisliti o taki razširitvi vmesnega jezika in vezniških predlog .
Modra skladba ni bila napisana aprila .
Modra skladba ni bila napisana avgusta .
Niti simfonična pesnitev niti suita nista bili napisani niti februarja niti maja .
Zato je bilo sestavljanje dvojnih parov premaknjeno za sestavljanje , kadar ostaneta le dve možni trditvi .
Izdelana naloga je tako naslednja : Modra skladba je bila napisana ali septembra ali februarja .
Bela skladba ni bila napisana niti maja niti aprila .
Bela skladba ni bila napisana avgusta .
Rjava skladba ni bila napisana maja .
Prvi primer zveni nerodno , vendar je izvedljiv , drugega primera pa sploh ni mogoče zapisati v vmesnem jeziku ( ker je v IMP lahko le SAM in ne SFR ) , vendar ga je mogoče razvezati z dodatnim vzorčnim stavkom : Niti Celjanu niti Kranjčanu ni bilo ime niti Peter niti Janez .
4.3.6 Dodajanje trditev v obliki prilastkovih odvisnikov Prilastkovi odvisniki v vmesnem jeziku ( in še posebej v generatorju ) niso popolnoma podprti , dajo pa se zapisati taki , ki pridejo za glavnim stavkom .
Ta popravek generatorja je smiselno izvesti skupaj s celovito prenovo za uvedbo ravni zapisa povedi v vmesnem jeziku , ki pa bo kar precej zahtevna in ne bo končana do zaključka te naloge , zato te vrste sestavljanja trditev tačas še ni smiselno uvesti , ker bo le pokvarila rezultat s slabo napisanimi stavki , čeprav bi sicer zmanjšala število povedi .
4.3.7 Mešanje povedi s trditvami Nekoliko moteča lastnost do zdaj narejene naloge je , da so povedi , ki so narejene po istem pravilu , napisane zapored .
Niti vijoličasta niti rožnata koračnica ni bila napisana .
4.3.8 Izboljšanje sovisnosti trditev Osnovni cilj sistemov za generacijo naravnega jezika je , da je izhodno besedilo čim bolj sovisno , tj. vsebinsko skladno oz. urejeno [ 21 ] .
38 V zgornjem primeru je tako smiselno , da trditvi : Niti Zvonko niti Andrej nista napisala simfonične pesnitve .
V tem primeru se je treba vprašati , če nismo reševalcu že preveč olajšali dela , saj tako takoj vidi , da je bila kantata napisana oktobra , kar sicer na prvi pogled ni bilo tako očitno .
Pri vpeljavi spreminjanja besednega reda se je pokazala omejitev generatorja , ki je stavke generiral ne glede na vrstni red delov v vmesnem jeziku ( ker vmesni jezik ni specificiral , da je vrstni red elementov pomemben ) , zato je bilo treba to dopolniti ( točka 3.8 ) .
4.3.8.1 Metoda izboljševanja sovisnosti Najprej sta bili narejeni funkciji za spreminjanje vrstnega reda trditev in vrstnega reda znotraj trditve .
Pri prvem se : Modra skladba je bila napisana ali septembra ali februarja .
Po še drugi funkciji ( vrstni red znotraj trditve ) pa dobimo : Ali februarja ali septembra je bila modra skladba napisana .
Zato je bilo treba malo dopolniti prevajanje v vmesni jezik tako , da pridejo stalni deli med oba podatka in ne na konec , potem pa popraviti še generator v ciljni jezik , da je to tudi pravilno upošteval .
Dobljeni rezultat obeh spreminjanj vrstnega reda je naslednji : Ali februarja ali septembra je bila napisana modra skladba .
Nato med preostankom poiščemo kandidata , ki se prilega zaključku , in ga damo na konec .
Rožnata skladba ni bila napisana niti aprila niti februarja .
Rapsodija je bila napisana ali julija ali aprila .
Bela skladba ni bila napisana avgusta .
4.4 Prevajanje v ciljni jezik Zaradi vseh izvedenih dopolnitev v vmesnem jeziku in s tem v generatorju ( kot tudi analizatorju ) v okviru poglavja 3 je prevajanje v ciljni jezik relativno preprosto , treba je le napolniti ustrezno vhodno strukturo in poklicati funkcijo za izpis povedi v generatorju .
Na posamični pomen je v splošnem lahko vezanih več besed ( torej sopomenk ) .
Niti aprila niti maja ni bila zložena bela skladba .
Bela skladba ni bila napisana avgusta .
Naloga je bila ročno rešena in rezultat je bil naslednji : Matjaž je napisal rožnat motet avgusta .
4.4.2 Težave pri prevajanju v ciljni jezik Kot glavna težava se je pokazal napačen besedni red pri prilastkovih odvisnikih ( glej 4.3.6 ) , kar je bilo rešeno tako , da naloge ne uporabljajo prilastkovih odvisnikov .
Pokazalo se je tudi , da generator marsikje ni pravilno upošteval členjenja po aktualnosti v vmesnem jeziku ( dodanega v točki 3.8 ) , kar je bilo sproti popravljeno , pri čemer je bilo treba paziti , da to ni pokvarilo rezultatov strojnega prevajalnika Presis .
41 4.4.2.1 Zanikani stavki brez pomožnih glagolov Časopisni naslovi so tipično napisani brez pomožnega glagola ( » Sodišče izdalo soglasje za 35 milijonov evrov kredita Merkurju « ) in najprej je tudi generator ohranjal isti slog .
Ta težava je bila rešena tako , da zdaj generator doda pomožni glagol tudi , če je v vmesnem jeziku označeno , naj ga izpusti , kadar je stavek zanikan .
Rezultat je tako : Soglasje za niti 37 niti 36 milijonov evrov kredita ni bilo izdano .
In tudi sicer se je pokazalo , da tako ohranjanje sloga izvornega stavka za izdelavo nalog ni smiselno , zato zdaj že razbiranje tematike označi v vmesnem jeziku , da je pomožni glagol potreben ne glede na to , kako je bil napisan izvorni stavek .
4.4.2.2 Tvorba trpnikov pri glagolih brez trpnega deležnika Težava se je pojavila pri glagolu pasti ( pasem ) , ki nima določenega trpnega deležnika na – n , s katerim bi lahko naredili trpnik ( » Ovca je bila pasena v petek .
Zato je osnovno spremno besedilo vsaj seznam seznamov možnih imen po lastnostih .
Druga možnost pa je , da je vzorčni stavek v slovenščini , generator je slovenski , pri izdelavi naloge pa se hkrati uporabita generatorja za slovenščino in angleščino , tako da je rezultat vzporedni prevod iste naloge .
4.6.1 Naloga le v angleščini Primer rezultata , pri katerem je vzorčni stavek v angleščini , je naslednji : George wrote the symphony in June .
The requiem was written either in March or in December .
V prvem poskusu je bil preprosto za prevodom vsake povedi v naravni jezik zamenjan izhodni jezik in prevod ponovljen .
Rezultat je zdaj kar v redu , v angleškem prevodu manjka nekaj členov , načeloma pa je naloga razumljiva .
Presisovi moduli namreč lahko delujejo na dva načina : podatke lahko uporabljajo neposredno iz Asesa ali pa uporabljajo izpeljano podatkovno zbirko , ki je zgrajena s posebnim postopkom iz Asesa .
43 Prednost uporabe izpeljane podatkovne zbirke je , da je veliko hitrejša ( faktor 100 ) od neposredne uporabe Asesa , je pa tudi krajša ( 200 MB proti 10 GB ) .
4.7 Dopolnitev programa Spesni Program Spesni je bil dopolnjen tako , da se je stari način v celoti ohranil ( popravljen je bil samo hrošč , ki je v nalogo dajal preveč trditev ) , dodano je bilo le to , da se lahko s posebnim imenom teme preklopi v novi način delovanja .
Za imenom teme moramo povedati število lastnosti ( ki mora biti manjše ali enako številu lastnosti v temi ) , število zapisov ( ki mora biti manjše ali enako najmanjšemu številu zapisov v uporabljenih lastnostih v uporabljeni temi ) , število trditev z DA in število nalog , ki naj jih naredi ( če se to ne navede , je privzeta vrednost 1 ) .
Primer uporabe programa je : spesni " test@Borut je napisal zeleno simfonijo .
" 3 4 1 5 Program naredi pet nalog s tremi lastnostmi in po štirimi možnostmi , dá eno pozitivno trditev , imena izhodnih datotek se začnejo s test , vzorčni stavek pa je » Borut je napisal zeleno simfonijo .
Program je v datoteki SPESNI.EXE , na istem imeniku pa mora biti še datoteka OZSLSL.APZ , ki vsebuje izpeljano podatkovno zbirko in je nujna za delovanje .
44 5 Sklepne ugotovitve Nadgradnja programa Spesni s samodejnim luščenjem tematike iz vzorčnih stavkov ( narejena v poglavju 4 ) je pokazala , da so moduli prevajalnega Presisa zelo uporabni za izdelavo besedilnih logičnih nalog , še posebej po vseh dopolnitvah vmesnega jezika ( in posledično analizatorja in generatorja ) , ki so bile izvedene v poglavju 3.
5.1 Preizkus sestavljanja tabelaričnih nalog iz časopisnih naslovov Za poskus je bila uporabljena spletna stran Times.si6 , ki zbira novice z različnih strani z novicami .
Na strani so bili poiskani naslovi ali stavki v kratkem opisu novice , ki so ustrezali vsaj osnovnim zahtevam za vzorčne stavke ( mora biti glagolski stavek , ne sme biti večstavčna poved , mora biti v povednem naklonu in trdilni ) .
Primeri nalog , sestavljenih iz navedenih vzorčnih stavkov , so v prilogi 6.7.1. http://www.times.si/ 45 5.2 Uporabnost programa za sestavljanje tabelaričnih nalog V poglavju 5.1 se je pokazalo , da ni težko najti stavkov , ki so primerni za tematiko .
Iz vzorčnega stavka je tako smiselno izpustiti dele , ki se ne dajo prevesti v lastnost in so tako stalno enaki ( če seveda niso bistveni za razumevanje stavka ) .
Dodajanje pridevnikov v splošnem ne pomaga , ker nimajo dobro določenih nadpomenov ; izjema so barve in pridevniki iz krajevnih imen , mesecev in dni v tednu .
Kadar je kaj narobe razdvoumljeno , se da včasih pomagati s tako spremembo vzorčnega stavka , da ta postane bolj nedvoumen ( če damo npr. » napisati pesem « , ni jasno , ali je ta pesem literarno delo ali skladba , pri » zložiti pesem « pa to postane nedvoumno ) .
Nekaj primerov nalog , narejenih z novo verzijo programa Spesni , je v prilogi 6.7. 5.3 Možne izboljšave prevajanja v naravni jezik Sovisnost bi se dala še povečati z uporabo osebnih zaimkov .
Vendar pa je podatek lahko različnega spola , tako da bi bilo treba to upoštevati pri prevajanju v vmesni jezik , kar je precej nerodno ( in tudi zapleteno , ker pomen ne nosi tega podatka , za nameček pa je še jezikovno odvisno ) .
Boljša ( in uporabna tudi pri strojnem prevajanju ) rešitev bi bila , da se v vmesnem jeziku pri osebnih ( in tudi pri kazalnih ) zaimkih predvidi , da je za zaimkom še podatek o originalni samostalniški frazi , na katero se zaimek nanaša .
Tako bi lahko trditev » Miha je Kamničan .
5.4 Možne izboljšave sestavljanja tabelaričnih nalog Poleg izboljšav pri prevajanju v vmesni jezik je še nekaj možnih izboljšav pri sami izdelavi nalog .
Glavna omejitev je , da pozna naloga zdaj le dve vrsti trditev : da neki lastnosti sta povezani ali pa , da nista , kar pa nista edini možnosti .
5.4.1 Uporaba urejenosti znotraj lastnosti Pri številčnih lastnostih ( npr. starost , višina , hišna številka ipd. ) bi bilo možno zapise urediti po velikosti in potem uvesti trditve v obliki , da je nekdo starejši od drugega , manjši od drugega , da je vmes natanko eden ipd.
5.4.3 Večje število elementov znotraj lastnosti Če spet izhajamo iz stavka » Borut je napisal zeleno simfonijo marca .
Primer predloge je : G:G:SL : [ kupiti ] { PR3 } { PR4 } = ¤ S:G:SL:kupiti !
P1 !
NEOB Predloga je zgrajena iz imena , jedrnega elementa ( ki je lahko beseda , zveza ali skupina ) , podatkov predloge in delov predloge .
6.1.1 Jedrni element predloge Jedrni element je lahko glagol , pridevnik ali prislov , in sicer kot beseda , zveza ali skupina ( le pri glagolih ) .
V primeru , da je jedrni element pridevnik ali prislov , to pomeni , da se uporablja v povezavi z glagolom biti ( kot povedkovo določilo ) ( pri drugih jezikih je to ustrezno be , sein oz. jam ) .
Ta način zapisa je uporabljen , ker bi bilo sicer na glagol biti vezanih preveč besed , kar je zoprno za analizator , saj je glagol biti daleč najpogostejša beseda v besedilih in bi to lahko precej upočasnilo analizo .
Izjema so » modalni prislovi « , npr. » rad « ali » lahko « , ki so povezani s katerim koli glagolom .
V angleščini so povezane britanske in ameriške različice glagolov , v slovenščini ( tudi v nemščini ) ) pa dovršne in nedovršne oblike .
možnost pomen NIPD v stavku s to predlogo ne smejo biti dodana dodatna prislovna določila ZAN pri pomenu , dobljenem iz te predloge , se zanikanost obrne – zanikani stavek postane trdilni in obratno NIZAN predloga ne sme biti v zanikanem stavku SE ( SL , DE ) ob glagolu je povratni osebni zaimek v tožilniku ( se oz. sich , mich ) SI ( SL , DE ) ob glagolu je povratni osebni zaimek v dajalniku ( si oz. sich , mir ) KAM v stavku s to predlogo je lahko prislovno določilo kraja , ki je odgovor na vprašalnico » kam « oz. » od kod « TO ( EN ) PRI se lahko izrazi s predlogom to FROM ( EN ) PRI se lahko izrazi s predlogom from FOR ( EN ) PRI se lahko izrazi s predlogom for 48 6.1.3 Del predloge Vsak del ima kategorijo , oznako ( lahko prazno ) , lemo ( lahko prazno ) , oblikoskladenjsko oznako ( lahko prazno ) in podatke dela .
Možne kategorije delov so naslednje : kategorija pomen OS osebek PR1 predmet v imenovalniku ( samostalniško povedkovo določilo ) PR2 predmet v rodilniku PR3 predmet v dajalniku PR4 predmet v tožilniku PR5 predmet v mestniku ( ne obstaja ) PR6 predmet v orodniku ( ne obstaja ) PRD direktni predmet PRI indirektni predmet PRE predložno dopolnilo , ki je tipično za predmetom ( za ang. frazne glagole ) , mora imeti določeno lemo PD prislovno določilo , tipično mora imeti določeno lemo PRT predložno dopolnilo , ki mora biti takoj za glagolom ( za ang. frazne glagole ) , mora imeti določeno lemo PRZ predložna zveza , lema pove predlog , preostali del gre v oznako ; kadar se želi določiti celotna predložna zveza , jo je treba dodati kot zvezo ( prislov ) in dodati kot kategorijo PD NED nedoločnik NAM ( SL ) namenilnik ING ( EN ) deležnik na – ing PPT ( EN ) pretekli deležnik 49 Oznake povedo , kako se podatki prenašajo med posameznimi predlogami .
Te oznake se potem vpišejo v vmesni jezik in generator z njihovo pomočjo določi , kateri del uporabi v izhodni predlogi ( ker ni nujno , da je npr. osebek pri eni predlogi pri istem pomenu tudi osebek ) .
Lema pove , katera beseda ( ali zveza ) se mora pojaviti na tem mestu .
Oblikoskladenjska oznaka ne sme biti preveč natančna – pri slovenščini npr. za PR4 ne sme biti oblikoskladenjske oznake , ki bi zapovedovala tožilnik , ker je PR4 pri zanikanih stavkih v rodilniku .
Pri podatkih dela so lahko vključene naslednje možnosti : možnost pomen NEOB del ni obvezen OSZ del mora biti osebni zaimek SVOJ na tem mestu mora biti svojilni pridevnik iz podatka ; s tem je omogočeno , da se predmet iz ene predloge izenači s svojilnim pridevnikom v drugi ; element je samostalniška fraza , svojilnost se odstrani ta možnost mora biti vključena na predmetu , delu s to možnostjo pa mora slediti še isti predmet brez te možnosti / ukinjeno 50 6.1.4 Ime predloge Ime predloge sicer ni pomembno za sámo delovanje Presisa ali drugih programov ( ki tako uporabljajo le številčne kode predlog ) , temveč je dogovor za zapisovanje pomemben zato , da je baza laže berljiva za ljudi .
Če je predloga brez osebka ( pri slovenščini ) , je glagol zapisan v tretji osebi ednine za srednji spol v sedanjiku .
Podatki dela se lahko dodajo z znakom » / « , najpomembnejši podatek je neobveznost , ki se označi tako , da se del napiše med zavitimi oklepaji ( { PR4 } ) .
Je osnovni del strojnega prevajalnika Presis , programa za iskanje slovničnih napak Besana in tudi drugih programov , ki jih razvija podjetje Amebis , npr. za samodejno luščenje slovarja iz vzporednega korpusa [ 18 ] in za izdelavo baze znanja iz korpusa v sistemu dialoga Kolos ( ki je bila razvita v okviru projekta Uvid [ 15 ] ) , ki bo predvidoma vključena tudi v naslednji različici programa za klepetanje Klepec7 .
Kljub temu , da je vmesni jezik bil že večkrat omenjen in tudi na hitro predstavljen v člankih ( [ 18 ] , [ 15 ] ) , nikoli ni bilo možnosti za celovito predstavitev , zato bodo v tej prilogi celovito predstavljeni tudi tisti deli vmesnega jezika , ki sicer niso bili uporabljeni v tej nalogi .
6.2.1 Zapis stavka Elementi vmesnega jezika so napisani v ( navadnih ) oklepajih , znotraj so lahko gnezdeni še drugi elementi ( odvisno od elementa ) .
Najprej je en statusni znak ( ki je lahko minus , enačaj ( le pri STA , kjer pomeni , da je glagolska predloga uganjena ) , zvezdica ( stalni element iz predloge ) , plus ( znotraj je oznaka iz predloge ) ali števka ( oznaka iz glagolske predloge ali 0 za osnovni glagol ) , temu sledi tričrkovno ime elementa , potem odvisno od elementa lahko sledijo parametri elementa , čemur sledi znak »:« ( ali v nekaterih posebnih primerih tudi »;«).
Pri osnovnih elementih ( ki nimajo podelementov ) so zadaj med zavitimi oklepaji podatki o vsebini , in sicer je naprej koda leme ( v šestnajstiškem sistemu ) , potem je znak » ; « , čemur sledi seznam možnih kod pomenov , ločenih med sabo z vejico ( seznam pomenov je lahko tudi prazen , če beseda nima določenega pomena ) .
Pri elementih STS in STV je med zavitimi oklepaji desetiško zapisano samo število – leme in pomenov ni .
Temu v oglatih oklepajih sledi mesto besede , na katero se nanaša element , v stavku .
Mesto je zapisano desetiško , če se element nanaša na več besed ( oz. na zvezo ) , je tam seznam mest , ločenih z vejicami ( brez vmesnih presledkov ) .
Na koncu je med lomljenimi oklepaji (<>) lahko napisana koda ( šestnajstiško ) oblikoskladenjskega opisa besede , na katero se element nanaša .
Osnovni element v stavku je vedno POV ( poved ; ostaja iz zgodovinskih razlogov , ker je bilo na začetku mišljeno , da bosta obe ravni opisa vmesnega jezika združeni v eni ) , čemur sledi STA ali STC .
Oznake iz glagolske predloge so najpomembnejši vezni element , ki povezuje stavčne člene v stavek ; podatek o tem , kaj je osebek ali predmet , ni pomemben za generator , ki to izve tako , da poveže te oznake z glagolsko predlogo v izhodnem jeziku .
Iz elementa STA se vidi , da gre za glavni stavek , povedni naklon , preteklik , tvorni način in trdilni stavek .
* ( - POV : ( - STAg-npprdvt - - - - - - - : ( 1OSB : ( - SFR : ( - DSF : ( - JED : ( - VPRse : { 1d5f05 ; c3370a } [ 0 ] < 15a4 > ) ) ) ) ) , ( * PVD : ( - GPO : [ 1 ] ) ) , ( 0PVD : ( - GGL : { 3a36e2 ; 353417 } [ 2 ] < 1f68 > ) ) , ( 2PR4 : ( - SFR : ( - DSF : ( - JED : ( - SAMe : { 61031a ; 21ccfed , 21cd04c } [ 3 ] < 50 > ) ) ) ) ) , ( - LOCkr : [ 4 ] ) ) ) 6.2.2 Zapis povedi Enota pri zapisu povedi so stavki oz. njihove analize .
Različne analize povedi so med seboj ločene z znakom »&«.
Analiza stavka je označena s številko stavka , piko in seznamom možnih analiz , ločenih z vejicami ( v vrstnem redu po verjetnosti ) .
Glavni stavki so zapisani le z analizo stavka , vse drugo pa ima spredaj črkovno oznako ( ki ji sledi dodaten podatek , odvisen od vrste ) , čemur v navadnih oklepajih sledi oznaka analize stavka oz. seznam le-teh .
Možni elementi v povedi so naslednji : oznaka pomen podatek R prilastkov odvisnik navezava D osebkov ali predmetni odvisnik navezava O prislovni odvisnik vrsta P priredje vrsta J pogojni odvisnik ( pogoj ) vrsta ( tipi so opisani v točki 3.4.1 ) r – realni tip i – irealni tip p – potencialni tip z – zanesljivi tip L polstavek vrsta G govor vrsta p – premi o – odvisni K vrivek med oklepaji Navezava pove oznako v glavnem stavku ( oz. stavku , na katerega se odvisnik nanaša ) , torej na kateri element se odvisnik nanaša .
Kadar na potrebnem mestu ni običajne oznake , ki jo določa glagolska predloga , se po potrebi dodajo dodatne oznake , in sicer male črke od a do z. 6.2.2.1 Primeri zapisa analize povedi Slep je , kdor se s petjem ukvarja .
1.1 ; D1 ( 2.1 ) Poved sestavlja prva analiza prvega stavka , ki je glavni stavek , in osebkov odvisnik ( ki je prva analiza drugega stavka ) , ki je vezan na oznako » 1 « v glagolski predlogi ( kar je običajno osebek ) .
( stavek 5 je 1 + 3 ) Oc ( 5.1 ) ; R1 ( 2.1 ) ; 4.1 54 6.2.3 Delčna analiza Večkrat se zgodi , da analizatorju ne uspe analizirati stavka ( npr. zaradi neznanih besed , tipkarskih oz. slovničnih napak , slovničnih struktur , ki jih analizator še ne pozna ) , vendar pa kljub temu lahko prepozna ( oz. obstaja velika verjetnost , da jih pravilno prepozna ) posamezne dele , npr. predložne zveze ( kombinacije predloga in samostalniške fraze ) .
Ta informacija lahko npr. pomaga strojnemu prevajalniku , da postavi samostalniško frazo v pravi sklon glede na predlog , čeprav analiza stavka ni bila uspešna .
Delcev je lahko več , vmes so lahko ( oz. tipično so ) besede , ki niso del nobenega delca .
Program , ki uporablja Presisov analizator , mora upoštevati delčno analizo tako , da jo prepozna in je ne zamenja z uspešno analizo .
podvrsta pri vrsti p : sklon : 1234 pri vrsti r ali o : povezani del : 1 – 9 parameter 3 n navadni govor govor o odvisni govor parameter 4 - pomožnika ni pomožnik p ima pomožnik b brez pomožnika parameter 5 p povedni naklon v velelni g pogojni z želelni o občudovalni k vezni ( konjunktiv ) parameter 6 s sedanji čas p pretekli r prihodnji e predpretekli j pretekli prihodnjik ( le vmesno ) parameter 7 d dovršni dovršnost n nedovršni 64 s simple c continuous parameter 8 v tvorni način t trpni parameter 9 t trdilni trdilnost n nikalni parameter 10 točen čas parameter 11 - rezervirano parameter 12 - rezervirano parameter 13 - rezervirano parameter 14 - rezervirano parameter 15 - rezervirano parameter 16 - ni napake napaka n manjka zanikanje sestavljeni element nujno vsebuje PVD lahko vsebuje OSB PR1 PR2 PR3 PR4 PRD PRI PDO POD PDL VEZ DST 6.2.4.40 STC oznaka STC ime samostojni stavčni člen opis nima parametrov sestavljeni element nujno vsebuje OSB ali PR4 ali PRD ali ZVA ali PDO ali MED ali POD 6.2.4.41 STS 65 parameter 1 g glavni vrsta v vrstilni parameter 2 a arabski zapis b besedni parameter 3 m moški spol z ženski s srednji parameter 4 p prva oseba d druga t tretja elementarni element vsebovana besedna vrsta K 6.2.4.42 STV oznaka STV ime števnik ( pridevniški ) opis med {} je zapisano število ( arabsko ) namesto leme in pomenov nima parametrov parameter 1 g glavni vrsta v vrstilni parameter 2 a arabski zapis b besedni elementarni element vsebovana besedna vrsta K 6.2.4.43 SVP oznaka SVP ime svojilni pridevnik opis nima parametrov parameter 1 o osnovnik stopnja p primernik s presežnik e elativ sestavljeni element nujno vsebuje SFR 6.2.4.44 VEZ oznaka VEZ ime veznik opis nima parametrov parameter 1 p priredni vrsta o odvisniški parameter 2 podvrsta 66 parameter 3 vrsta prislova elementarni element vsebovana besedna vrsta V 6.2.4.45 VPR oznaka VPR ime vprašalnica opis nima parametrov parameter 1 s samostalniška vrsta p pridevniška r prislovna v vprašalnica ( ali ...)
o osebkova parameter 2 podvrsta elementarni element vsebovana besedna vrsta V 6.2.4.46 XCD oznaka XCD ime posebno časovno prislovno določilo opis parameter 1 a - / že % C predlog b v % C c pred % C d po % C e čez % C f do % C g za % C r prej % C s pozneje % C parameter 2 - ni drugi del a pred b po sestavljeni element nujno vsebuje PZV ali SFR 6.2.4.47 XLE oznaka XLE ime posebno datumsko prislovno določilo opis parameter 1 a datum , med { } , format { a , a07 , ac , a-1970 } 67 1. element : predlog a ni b od c do d do e po f pred 2. element : dan , dvomestno - ni a s številko b z besedo 3. element : mesec , a - januar , b - februar , ...
, l - december - ni a s številko b z besedo 4. element : leto , zapisan z arabsko številko - ni a s številko b z besedo drugi znak : štetje - nič a našega štetja b pred našim štetjem tip b dan v tednu , med { } , format { aaa } 1. element : predlog a ni 2. element : dan a - ponedeljek , b – torek , ...
, g - nedelja 3. element : del dneva - nič a zjutraj b dopoldne c opoldne d popoldne e zvečer f ponoči elementarni element vsebovana besedna vrsta K , D , S 6.2.4.48 ZVA oznaka ZVA ime zvalnik opis nima parametrov sestavljeni element nujno vsebuje SFR 68 6.3 Primeri izjav v tabelaričnih nalogah ( Einsteinova uganka ) Britanec živi v rdeči hiši .
Lastnik konja živi zraven osebe , ki kadi Dunhill .
( Naloge , narejene s programom Spesni ) Hribar , ki mu ni ime Miran , ni šel na Špik .
Gorišek ni videl veverice .
Petih osebnih napak nista naredila igralca s številkama 6 in 8. štirih točk nista dosegla igralca s številkama 6 in 11.
Košarkar s številko 8 ni dosegel 20 točk niti ni naredil ene osebne napake .
Igralec s številko 6 ni naredil ene ali štirih osebnih napak .
71 Prof. Vektoršek nima rad elektronov .
Antiprotoni v sredo ne bodo trkali .
Prof. Vektoršek v petek ne bo izvajal poskusa .
Ena oseba ima pri imenu in priimku isti začetnici .
Niti prodajalec knjig niti Anita nista iz Krškega , od koder ni tisti , ki prodaja že 5 let .
Novakovi niso najštevilčnejša družina .
Evina številka pa je za dve večja od ravnateljičine .
Sanjina številka je soda , tajna agentka pa ima liho hišno številko .
Zmago je premagal nasprotnika v tekmi s sodo zaporedno številko .
Čenča je par iz stanovanja v svoji rubriki obravnavala v četrtek .
( L & RN , št. 6 , letnik II , str. 5 ) Urša Sodnik ima osebo iz Novega mesta na svoji levi , turistko pod zelenim senčnikom pa na desni strani , vendar ne sedi neposredno poleg njiju .
Tina Tavželj je doma iz Celja ; turistka z rumenim senčnikom ni desna soseda Peter Peternelj .
Olga Jarnik je druga v vrsti , vendar njen senčnik ni vijoličaste barve .
Četrti senčnik je moder ; dekle , ki ga je najelo , ni doma iz Kranja , njeno ime pa se ne začne na isto črko kot priimek .
Janez je bil tretji .
Gospod Erjavec je bil na vrsti za Vesno , toda pred Gregorjem ( ki ni bil na vrsti zadnji ) .
( L & RN , št. 4 , letnik VI , str. 6 ) Janezova hči , ki je plavalka , se ne piše Kos .
Športnica s priimkom Krajnc je Bojanova hči , ki pa ni gimnastičarka .
V sobi številka 10 je otrok spal z medvedkom .
Otrok , ki je star štiri leta , ima najraje zvončke .
Darila , ki je v spalnici , a ni vaza , profesorica ni dobila od Marinega razreda .
Damijan je vodnik , ki je od svojega varovanca zahteval , da na večernem zboru poje solo .
V Sarinem vodu se nihče ne imenuje Jonas .
Vasja je všeč Karolini .
35-letnik goji rože , 25-letnik je Andrej .
There is one house between the Norwegian and the eucalyptus trees on the right .
The person in house four eats spaghetties .
Michael didn't write the exam on Monday or Wednesday .
On Monday there wasn't the exam in biology .
D : Č je oproda .
6.5 Primeri izjav v svetu Tarskega Vsak kvadrat je desno od nekega dodekaedra .
a in b sta enako velika .
vsa majhna telesa so v isti vrstici .
Something is a large cube .
6.6 Primeri predlog za program Spesni V naslednjih točkah so podane tri relativno obsežne predloge za program Spesni ( opisan v točki 2.3 ) .
< ime > D < predmet > : < predmet:3 > je pisal < ime:1 > < ime > .
< ime > N < predmet > : < predmet:1 > ni pisal < ime:1 > < ime > .
< dan > D < ocena > : V < dan:1 > je bila ocena < ocena > .
< ime > N < ocena > + < ime > N < ocena'1 > : < ime > ni dobil < ime:1 > ocene < ocena > ali < ocena'1 > .
< ime > N < ocena > + < ime > N < ocena'1 > + < ime > N < ocena'2 > : < ime > ni dobil < ime:1 > ocene < ocena > , < ocena'1 > ali < ocena'2 > .
< dan > N < ocena > + < dan > N < ocena'1 > : V < dan:1 > ni bilo ocene < ocena > ali < ocena'1 > .
< predmet > N < ocena > + < predmet > N < ocena'1 > + < predmet > N < ocena'2 > : Pri < predmet:2 > ni bilo ocene < ocena > , < ocena'1 > ali < ocena'2 > .
Ugotovi , kdo je pisal kaj in kdaj , če veš naslednje : # 3 4 Šola 86 Štirje znanci ( < ime > ) so prejšnji teden pisali vsak po en test ( < predmet > ) , in sicer v različnih dneh ( < dan > ) .
Ugotovi , kdo je pisal kaj , kdaj in kakšno oceno je dobil , če veš naslednje : ## 6.6.2 Hribi # ime Aleš Borut Ivo Iztok Janez Janko Jože Jure Marko Matej Miha Miran Miro Peter Robert Simon Tine # priimek Hribar Gorišek Gorjak Gorjanc Gornik Goršek Gričar Gričnik Hribernik Hriberšek Hribovšek Planinc Planinšek Pohodnik Vrhovnik # gora Brana ; Brano ; Brani Grintovec ; Grintovec ; Grintovcu Jalovec ; Jalovec ; Jalovcu Kalška gora ; Kalško goro ; Kalški gori 87 Kanin ; Kanin ; Kaninu Kočna ; Kočno ; Kočni Krn ; Krn ; Krnu Lubnik ; Lubnik ; Lubniku Mangart ; Mangart ; Mangartu Ojstrica ; Ojstrico ; Ojstrici Planjava ; Planjavo ; Planjavi Prisojnik ; Prisojnik ; Prisojniku Razor ; Razor ; Razorju Rjavina ; Rjavino ; Rjavini Rombon ; Rombon ; Rombonu Rzenik ; Rzenik ; Rzeniku Stenar ; Stenar ; Stenarju Špik ; Špik ; Špiku Triglav ; Triglav ; Triglavu Velika planina ; Veliko planino ; Veliki planini # kraj Celje ; v Celju ; Celjan Domžale ; v Domžalah ; Domžalčan Jesenice ; na Jesenicah ; Jeseničan Kamnik ; v Kamniku ; Kamničan Kranj ; v Kranju ; Kranjčan Ljubljana ; v Ljubljani ; Ljubljančan Maribor ; v Mariboru ; Mariborčan Medvode ; v Medvodah ; Medvoščan Nova Gorica ; v Novi Gorici ; Novogoričan Novo mesto ; v Novem mestu ; Novomeščan Škofja Loka ; v Škofji Loki ; Škofjeločan Tržič ; v Tržiču ; Tržičan # žival divji prašič ; divjega prašiča ; divjega prašiča gams ; gamsa ; gamsa kača ; kačo ; kače kozorog ; kozoroga ; kozoroga lisica ; lisico ; lisice medved ; medveda ; medveda močerad ; močerada ; močerada orel ; orla ; orla svizec ; svizca ; svizca veverica ; veverico ; veverice zajec ; zajca ; zajca ## < ime > D < priimek > : < ime > se piše < priimek > .
< priimek > D < kraj > : < priimek > je doma < kraj:1 > .
< ime > N < priimek > : < ime > se ne piše < priimek > .
< ime > N < kraj > : < ime > ni doma < kraj:1 > .
< priimek > N < gora > : < priimek > ni šel na < gora:1 > .
< priimek > N < žival > : < priimek > ni videl < žival:2 > .
88 < gora > N < kraj > : < kraj:2 > ni šel na < gora:1 > .
< gora > N < žival > : < žival:2 > niso videli na < gora:2 > .
< ime > D < priimek > + < ime > N < gora > : < ime > < priimek > ni šel na < gora:1 > .
< ime > D < priimek > + < ime > N < kraj > : < ime > < priimek > ni doma < kraj:1 > .
< ime > D < priimek > + < ime > N < žival > : < ime > < priimek > ni videl < žival:2 > .
< ime > N < gora > + < ime > N < gora'1 > + < ime > N < gora'2 > + < ime > N < gora'3 > : < ime > ni šel na < gora:1 > , < gora'1:1 > , < gora'2:1 > ali < gora'3:1 > .
< ime > N < priimek > + < ime > N < gora > : < ime > , ki se ne piše < priimek > , ni šel na < gora:1 > .
< ime > N < priimek > + < ime > N < priimek'1 > + < ime > N < gora > : < ime > , ki se ne piše < priimek > ali < priimek'1 > , ni šel na < gora:1 > .
< ime > N < žival > + < ime'1 > N < žival > : < žival:2 > ni videl niti < ime > niti < ime'1 > .
< ime > N < kraj > + < ime'1 > N < kraj > : < kraj:1 > ni doma niti < ime > niti < ime'1 > .
< priimek > N < kraj > + < priimek > N < kraj'1 > : < priimek > ni doma < kraj:1 > ali < kraj'1:1 > .
< ime > N < priimek > + < ime > N < priimek'1 > : < ime > se ne piše < priimek > ali < priimek'1 > .
< ime > N < priimek > + < priimek > N < gora > : < priimek > , ki mu ni ime < ime > , ni šel na < gora:1 > .
< priimek > N < gora > + < ime > N < gora > : Na < gora:1 > ni šel niti < priimek > niti < ime > .
# 3 4 Štirje planinci ( < ime > ) , z različnimi priimki ( < priimek > ) so šli na različne gore ( < gora > ) .
Za vsakega določi ime , priimek in kam je šel .
# 4 4 Štirje planinci ( < ime > ) , z različnimi priimki ( < priimek > ) in doma v različnih krajih ( < kraj > ) , so šli na različne gore ( < gora > ) .
Za vsakega določi ime , priimek , kje je doma in kam je šel .
Za vsakega določi ime , priimek , od kje je , kam je šel in katero žival je videl .
< priimek > N < dan > : Prof. < priimek > < dan:1 > ne bo izvajal poskusa .
< delec > N < dosežek > : Z < delec:1 > ne pričakujejo < dosežek:1 > .
< dan > N < dosežek > : < dan:1 > < dosežek:1 > zanesljivo ne bo .
< priimek > D < delec > + < priimek > N < dan > : Prof. < priimek > s svojimi priljubljenimi < delec:1 > ne bo izvajal poskusa < dan:1 > .
< priimek > N < dosežek > + < priimek'1 > N < dosežek > : < dosežek:1 > ne poskuša doseči niti prof. < priimek > niti prof. < priimek'1 > .
# 3 4 Štirje profesorji ( < priimek > ) bodo v trkalniku izvajali poskuse s trkanjem svojih priljubljenih delcev ( < delec > ) , vsak drug dan v tednu ( < dan > ) .
# 3 5 Pet profesorjev ( < priimek > ) bo v trkalniku izvajalo poskuse s trkanjem svojih priljubljenih delcev ( < delec > ) , vsak drug dan v tednu ( < dan > ) .
## 6.7 Primeri nalog , izdelanih z novo verzijo programa Spesni Vzorčni stavek je napisan odebeljeno , sledi mu sestavljena naloga .
V ponedeljek ni bil sprogramiran dober protivirusni program .
Dokopa se družinski človek do ali državljanske pravice do sanj ali človekove pravice do sanj .
Niti fizik niti kovač se ne imenujeta Berto .
Paleontolog se imenuje Bryan .
Bagra ni nabavila vnukinja .
Niti povzročitve niti srečanja niso odjeknili zaradi ovulacije v študentskem nečem .
Okrog poldneva je v Podkraju v občini Hrastnik v reko Savo padel moški 94 V nečem v niti občini Ravne na Koroškem niti občini Žalec okoli poldne nista padla niti ekshibicionist niti komunist Komunist je cmoknil okoli poldne v Austinu v občini nekaj V nečem v občini Idrija okoli poldne je cmoknil nekdo v ali reko Čabranka ali reko Nevljica V reko Nevljica okoli poldne sta padla ali inkvizitor ali klerik Klerik ni padel okoli poldne v Brazzavillu v občini nekaj V Brazzavillu v občini nekaj okoli poldne ni cmoknil nekdo v niti reko Dragonja niti reko Čabranka V ali reko Čabranka ali reko Vipava okoli poldne je padel inkvizitor Niti inkvizitor niti klerik nista padla okoli poldne v La Pazu v občini nekaj V nečem v občini Žalec okoli poldne ni padel nekdo v niti reko Čabranka niti reko Vipava V reko Vipava okoli poldne sta padla ali beg ali klerik V nečem v občini Medvode okoli poldne ni padel komunist Komunist ni padel okoli poldne v reko Paka V niti reko Paka niti reko Drava okoli poldne ni cmoknil komik V nečem v niti občini Žalec niti občini Velenje okoli poldne ni cmoknil nekdo v reko Dragonja Cmoknil ni nekdo okoli poldne v Metzu v občini Idrija V nečem v občini Velenje okoli poldne ni cmoknil nekdo v niti reko Drava niti reko Paka V niti Metzu v občini nekaj niti Brazzavillu v občini nekaj okoli poldne ni padel ekshibicionist Padel ni nekdo okoli poldne v Nankingu v občini Žalec V Metzu v občini nekaj okoli poldne ni padel nekdo v reko Nevljica V reki Vipavi našli bombe iz prve svetovne vojne Niso izbrskali tempiranih bomb iz prve svetovne vojne Iz prve svetovne vojne so izbrskali bombe v reki Sava V niti reki Selška Sora niti reki Pivka niso našli bomb iz prve svete vojne Iz niti prve svete vojne niti prve verske vojne niso izbrskali bomb V reki Savinja niso izbrskali niti tempiranih bomb niti ročnih bomb Našli so ročne bombe iz ali prve psihološke vojne ali prve nasledstvene vojne Iz ali dvajsete nasledstvene vojne ali dvajsete svetovne vojne so izbrskali bombe Izbrskali so bombe iz ali dvajsete ali petindvajsete psihološke vojne Iz niti prve psihološke vojne niti prve totalne vojne niso našli tempiranih bomb Niso izbrskali niti tempiranih bomb niti globinskih bomb iz niti dvanajste niti devetindvajsete vojne Niso našli bomb iz devetindvajsete verske vojne Iz prve verske vojne niso izbrskali atomskih bomb Niso izbrskali atomskih bomb v niti reki Čabranka niti reki Savinja V niti reki Savinja niti reki Pivka niso našli bomb iz prve totalne vojne Niso našli dimnih bomb iz devetindvajsete vojne V niti reki Pivka niti reki Selška Sora niso našli ročnih bomb Niso izbrskali dimnih bomb iz niti devetnajste niti dvanajste vojne Našli so bombe iz ali devetnajste psihološke vojne ali devetnajste svetovne vojne Optimizacija spletnih strani za iskalnik Google Povzetek V diplomski nalogi sem v uvodnih poglavjih predstavil delovanje spletnih iskalnikov .
Kakšni so njihovi cilji in namen ter tehnologije .
V naslednjih poglavjih sem se posvetil procesu optimizacije spletne strani za spletne iskalnike in teoriji , ki stoji za tem .
Ključne besede : spletni iskalniki , Google , optimizacija spletne strani , SEO .
Uvod v optimizacijo Spletni iskalniki kot so Google , Yahoo !
Po drugi strani pa z bogato in informativno vsebino pomagamo tudi iskalnikom , da lahko indeksirajo vsebino naše spletne strani in tako na najboljši možni način zagotovijo vračanje ustreznih rezultatov na poizvedbe uporabnikov iskalnikov .
Na spletu se pojavljajo članki in podjetja , ki trdijo , da lahko z določenimi postopki izboljšajo prepoznavnost in uvrščanje spletne strani med iskalnimi rezultati .
Tako se bom v diplomskem delu lotil raziskovanja področja optimizacij spletnih strani za spletne iskalnike .
Rad bi pokazal , da je optimizacija spletne strani mogoča in pri tem upošteval tudi načelo o optimizaciji z omejenimi finančnimi sredstvi .
Spletni iskalnik Google ima približno 65-odstotni delež svetovnega tržišča med vsemi iskalniki , kar pomeni , da njihovi strežniki prejmejo vsako sekundo preko 2900 iskalnih zahtevkov .
Skozi nove trende uporabe spleta , ljudje opravijo tudi spletne nakupe , storitve bančništva in socialnih omrežij .
Velika večina teh prihodkov prihaja iz modela » plačilo na klik « ( pay-per-click ) , v katerem oglaševalci plačajo samo za uporabnike , ki so kliknili na njihov oglas .
Glede na to , da lahko uporabniki uporabljajo katerikoli iskalnik za pridobitev želenih informacij , je delo spletnih iskalnikov , da priskrbijo hitre , relevantne in ažurne rezultate iskanja .
Tako se uporabniki odločijo za spletni iskalnik s katerim mislijo , da bodo dobili najboljše želene rezultate v najkrajšem možnem času .
4 Kot rezultat tega , spletni iskalniki namenijo ogromne količine časa , energije in finančnih sredstev v izboljšanje relevantnosti iskalnih rezultatov .
Ker je uspešnost spletnega iskalnika močno odvisna od ustreznih rezultatov , je manipulacija razvrstitve spletnih strani , ki povzročajo neustreznost rezultatov iskanja ( generalno označene kot » spam « ) , obravnavana zelo resno .
Vsak spletni iskalnik zaposluje veliko ljudi , katerih cilj je zgolj iskanje ter eliminiranje » spam « vsebine iz njihovih rezultatov iskanja .
Na evropskih tleh , je razkorak med iskalnikom Google ter konkurenco še večji , ni pa to pravilo na vseh tržiščih .
Slika 2 : Tržni deleži spletnih iskalnikov v ZDA ( povzeto po comScore ) [ 1 ] .
Cilji uporabnikov spletnih iskalnikov Osnovni cilj uporabnika je pridobitev ustreznih rezultatov glede na poizvedbo .
Različni tipi iskanj ne nudijo enake preusmeritve uporabnika v dobrobit podjetja , tako nekdo , ki išče določene informacije , predstavlja veliko manjši potencial za nakup , kot nekdo ki išče določeno znamko ali storitev .
Iskalne fraze Iskalne fraze uporabnikov iskalnikov so praviloma sestavljene iz ene do treh besed , po podatkih spletne strani comScore [ 21 ] pa je bila v letu 2009 povprečna dolžina iskalnega niza 2,9 besede .
Iz podatkov je razvidno , da največ iskalnih fraz vsebuje dve besedi , ter da se število besed v iskalnem nizu s časom postopoma dviguje na večje število ključnih besed [ 1 ] .
Z optimizacijo spletne strani lahko vplivamo le na vsebino , ki je prikazana pri organskih rezultatih iskanja ( slika 3 ) [ 1 ] .
Slika 3 : Prikaz območja organskih in sponzoriranih rezultatov .
Googlebot uporablja algoritmični proces : strežniški programi določijo strani za obhod in pogostost le-teh ter količino pregledanih podstrani .
Googlebot v večini primerov obišče stran in indeksira vse podstrani le v nekaj sekundah .
Zaupanje spletnih iskalnikov se doseže z dolgotrajnim doseganjem dobre ocene vsebine in željo uporabnikov po prikazovanju te vsebine .
Ustreznost vsebine pomeni stopnjo , na kateri se vrnjeni rezultati ujemajo z iskalno frazo .
Rezultat je ustreznejši , če se iskana fraza pojavi večkrat in je vsebovana tudi v naslovih oz. podnaslovih .
Pri tem ocenjevanju upošteva tudi pomembnost vsake strani , ki odda glas , saj imajo glasovi z nekaterih strani večjo vrednost in tako boljšo oceno strani , za katere glasujejo .
Pomembne strani prejmejo višjo uvrstitev PageRank in so prikazane na vrhu zadetkov iskanja .
Googlova tehnologija določi pomembnost strani zgolj prek združene inteligence spleta .
Na prikaz zadetkov nikakor ne vpliva človek in prav zato uporabniki zaupajo Googlu kot viru objektivnih informacij , saj njihove uvrstitve ni mogoče spreminjati z denarjem [ 3 ] .
Analiziranje razvrstitvenih faktorjev Raziskava je narejena pri podjetju SEOmoz [ 4 ] , ki je raziskovala najbolj pomembne razvrstitvene faktorje na področju spletne optimizacije .
Rezultati raziskave nam pokažejo trenutne trende najpomembnejših razvrstitvenih dejavnikov in tudi najbolj škodljive dejavnike .
Besede v naslovnem polju veliko povejo o vsebini dokumenta in je tako uporaben element , na katerega se lahko iskalniki osredotočijo .
Eden izmed razlogov je tudi ta , da je naslov najbolj viden del spletne strani .
Splošno je znano je , da spletni iskalniki dajejo največjo težo besedam na začetku naslova .
• Besedni opis dohodne povezave – Ko neka spletna stran kaže na drugo stran , je tekst , ki je uporabljen za opis povezave , tudi uporabljen kot močen signal za spletne iskalnike .
Skrbniki spletnih strani , ki se odločijo za dodajanje povezav svoje strani na druge spletne strani , pogosto vpišejo tekst s ključnimi besedami v opis povezave .
To lahko preverimo na več načinov .
• Starost spletne strani – Ta meritev je pogosto presenečenje za vse nove upravitelje spletnih strani , ampak ni dvoma , da je tudi ta dejavnik pomemben pri razvrstitvenem faktorju .
Razlog , da je to dober faktor , je dejstvo , ki nam da vedeti , da spletna stran obstaja že dolgo časa tako , da je verjetno v očeh obiskovalcev zaupanja vredna stran .
Slabo narejene spletne strani , brez dobre vsebine , se po navadi ne uspejo obdržati dlje časa .
• Popularnost povezav , znotraj lastne strukture spletne strani – Spletni iskalniki se zanašajo na avtorja , da jim pokaže , kateri del spletne strani je za njih najbolj pomemben .
9 • Popularnost povezav spletne strani v tematski skupnosti – Ta meritev govori o vzpostavitvi dobrega odnosa v določeni spletni skupnosti , saj so njihovo omenjanje in povezave na spletno stran z njihove strani , dober kazalnik njihovega zaupanja v spletno stran in njeno vsebino .
• Uporaba ključnih besed v telesu besedila na spletni strani – Spletni iskalniki med drugim tudi pregledajo celotno besedilo spletne strani .
Pri pisanju vsebine se ni priporočljivo omejiti samo na ključne besede , ampak tudi na sopomenke , ker iskalnik lahko kasneje z njimi določi večjo relevantnost vsebine pri vračanju rezultatov , ki jih iščejo uporabniki .
Drugi razvrstitveni faktorji Med veliko množico razvrstitvenih faktorjev , ki pomagajo določati uporabnost in priljubljenost strani , se pojavlja še nekaj omembe vrednih .
Veliki preskoki na recimo trideset povezav na dan pa pomenijo , da je stran močno poskočila v popularnosti , ali pa je to signal , da stran pridobiva povezave na nedovoljeni način .
• Podatki o uporabi strani – Uporaba strani se pokaže , če uporabnik klikne na rezultat iskanja v spletnem iskalniku in takoj za tem , ko prispe na spletno stran , pritisne gumb za vrnitev nazaj na rezultate iskanja in izbere drug rezultat iz istega iskalnega niza .
• Podatki o uporabnikih – Personalizacija iskanja je trenutno ena izmed najbolj omenjenih tematik pri uporabi iskalnikov .
Drug način uporabe zajema podatkov o uporabniku , bi bil lahko izbrani jezik za prikaz iskalnika .
Negativni razvrstitveni faktorji Raziskava podjetja SEOmoz obsega tudi lestvico nezaželenih razvrstitvenih faktorjev , ki škodijo ugledu spletne strani in s tem posledično povzročajo slabo uvrščenost v iskalnih rezultatih [ 1 ] .
• Strežnik je pogosto nedosegljiv za spletne pajke – Spletni iskalniki želijo , da imajo uporabniki spleta tekoč in neprekinjen dostop do vsebine na spletu .
• Vsebina spletne strani je podobna ali enaka drugim spletnim stranem - Spletni iskalniki želijo prikazati veliko raznolike in unikatne vsebine .
Če ima spletna stran zelo malo vsebine , ali pa je povečini duplikat druge spletne strani , je to potencialno razlog za slabše uvrščanje spletne strani .
• Povezave na spletne strani slabe kvalitete / strani z vsiljeno vsebino – Način , kako škodovati razvrščanju spletne strani , je tudi ustvarjanje povezav na strani s slabim slovesom in vsebino .
• Podvojeni naslovi / meta html značke na podstraneh – Ker je naslov pomemben dejavnik , je ponavljanje naslova negativni razvrščevalni signal .
V povezavi s tem , so tudi podvojeni meta opisi in meta ključne besede , označeni kot negativni signali za spletno stran .
Pri tem se je potrebno zavedati da lahko pride do naraščanja trendov : • Spletni iskalniki usmerjajo na spletne strani ogromne količine prometa .
• Vidnost spletne strani ustvarja tihi oglaševalni efekt , kjer iskalci povezujejo kvaliteto storitev , izdelkov ter zaupanje s spletnimi stranmi , ki so razvrščene visoko v rezultatih iskanja .
• Dramatična je rast interakcij med klasičnim in internetnim marketingom , saj se vedno več ljudi odloča za ogled izdelka in njegovih karakteristik na spletu pred nakupom v klasičnih trgovinah .
Osebe , ki optimizirajo spletno stran , morajo poznati storitve , produkte , bodoči razvoj spletne strani in vse povezane poslovne komponente tako dobro , kot zaposleni v marketinških oddelkih , pa naj gre za internetno ali navadno poslovanje .
Tako za popolno optimizacijo spletnih strani v nadaljevanju obravnavamo naslednje korake : • Analiza in načrtovanje • Izbira ključnih besed • Realizacija spletne strani • Pridobivanje povezav • Merjenje rezultatov Kot primer za opisovanje smo ustvarili resnično spletno stran , preko katere bomo razložili podrobnosti konkretne izvedbe vseh korakov do polno optimizirane spletne strani .
Končne rezultate pa bomo tudi primerjali s staro , že obstoječo spletno stranjo podjetja Lap d.o.o. [ 16 ] .
Strateški cilji optimizacije , ki jih lahko dosežemo Čeprav optimizacija ni čudežno zdravilo za vsa podjetja , lahko pripomore k strategiji poslovanja na več pomembnih načinov .
• Vidnost – Potrošniki predvidevajo , da je visoka pozicija v spletnih iskalnikih dokazilo za kvalitetno storitev in zaupanje vredno podjetje .
• Obisk spletne strani – Dolgo je že tega , ko je veljalo , » stran je izdelana in obiskovalci bodo že prišli « .
Današnje okolje je zelo tekmovalno in zato je potrebno 13 zagotoviti usmerjeno optimizacijo spletne strani , ki bo na spletno stran usmerila kvaliteten promet .
Za večino organizacij to pomeni prodajo , pridobivanje strank ali prihodke od oglaševanja .
Planiranje optimizacije spletne strani Pri planiranju optimizacije je vključevanje optimizacijske strategije v načrtovalni proces spletne strani , že preden je spletna stran objavljena na spletu , postala nuja , saj sama optimizacija vsebuje veliko korakov , ki jih je potrebno doreči , preden se začne z razvojem in določanjem vsebine same spletne strani [ 1 ] .
Take omejitve v osnovni različici uporablja CMS sistem Wordpress , vendar pa se da to preprosto odpraviti z dodatnimi komponentami .
Za nekatere ključne besede je naravno iskanje zelo intenzivno , vendar to ne pomeni , da moramo obupati , pomeni le , da je potrebno poiskati manj zastopane ključne besede , ter graditi tudi na njih [ 1 ] .
Brez dohodnih povezav so možnosti za konkuriranje med ključnimi besedami v iskalnikih zelo majhne .
Iskalniki kot je Google in 14 njihovi algoritmi , pripisujejo veliko težo merjenju in ocenjevanju dohodnih povezav .
Če je vsebina spletne strani povprečne kvalitete in pokriva enako tematsko področje kot že na ducate drugih strani , ne bo privabila veliko dohodnih povezav .
Če pa se na spletni strani objavlja kvalitetna vsebina ali kako novo orodje , ki ga bodo mnogi želeli uporabljati , potem je veliko bolj verjetno , da bo stran pridobila več dohodnih povezav .
Zato razumevanje strateških dejavnosti konkurence igra kritično vlogo pri optimizaciji ter ciljih poslovne inteligence .
Spletni strežnik bazira na operacijskemu sistemu Linux , ter spletnem HTTP strežniku Apache in MySQL podatkovni bazi [ 1 ] .
2.1.2.
Uporaba naprednih iskalnih tehnik Pri analiziranju konkurence in kasneje tudi pri določanju vsebine in iskanju primernih besed si pomagamo lahko z več orodji .
Pri osnovnem iskanju besed nam je v veliko pomoč aplikacija Google keywords , o kateri bomo več zvedeli v kasnejših poglavjih .
• ( site : ) – iskanje omejeno na domeno ; primer uporabe ( site:www.google.com ) , nam vrne v rezultatih iskanja vse podstrani določene domene , ki jih je indeksiral Google .
Temu ukazu lahko dodamo še ključne besede in s tem omejimo iskanje rezultatov po samo specifični spletni strani .
15 • ( inurl : ) / ( allinurl : ) – iskanje besed omejeno samo na URL naslov ; primer uporabe ( inurl:spletna inurl:trgovina = allinurl:spletna trgovina ) , tako dobimo v rezultatih spletne strani ki v naslovu vsebujejo iskane besede .
• ( intitle : ) / ( allintitle : ) – iskanje po ključnih besedah po naslovih vsebine spletnih strani ; primer uporabe ( intitle:spletna intitle:trgovina = allintitle:spletna trgovina ) nam z vrnjenimi rezultati , pove koliko spletnih strani je že optimiziranih na določeno besedo ali besedno zvezo .
• ( intext : ) – iskanje omejeno samo na besedilo v telesu spletne strani ; primer uporabe ( intext:darila ) , poišče spletne strani ki vsebujejo najbolj relevantno oz. najbolj optimizirano vsebino glede na iskalno geslo .
Večje je število rezultatov , težje bo uresničiti preboj spletne strani na vrh za določeno iskalno frazo .
• ( info : ) – Poda informacije o podani spletni strani ; Primer uporabe ( info:www.fri.uni - lj.si ) , rezultati nam podajo informacije , če je bila stran indeksirana , lahko nas tudi opozori , če ima spletna stran težave kot so podvojena vsebina , DNS problemi .
Razumevanje , kako delujejo spletni iskalniki , je pomembna komponenta optimizacije spletnih strani .
Ob analizi konkurence smo vpisali ključne besede » fasaderstvo « in » gradbeništvo « ter si pobližje ogledali vrnjene rezultate : • koliko imajo konkurenčne spletne strani indeksiranih podstrani ( z uporabo ukaza site:Spletno _ mesto ) , • koliko ima spletna stran dohodnih povezav in katere so , preverimo na spletni strani AddMe [ 6 ] , • ter kakšno je mesečno povpraševanje za take storitve na slovenskem tržišču , kar se kasneje v rezultatih pojavi tudi pri obdelavi rezultatov ključnih besed .
Z raziskovanjem ključnih besed lahko predvidimo spremembe v povpraševanju , odgovorimo na njih ter ponudimo izdelke in storitve , ki jih uporabniki spletnih iskalnikov že aktivno iščejo .
Vsaka beseda , ki je vpisana v iskalnike je na tak ali drugačen način nekje 16 shranjena in orodja za raziskovanje ključnih besed , katere bomo spoznali kasneje , nam omogočajo dostop do teh shranjenih statistik .
Rezultati » dolgega repa « , pri iskalnih povpraševanjih Prijetno se je ukvarjati s ključnimi besedami , ki imajo 500 ali tudi do 5000 dnevnih poizvedb , vendar pa v resničnosti te popularni iskalni nizi zavzemajo manj kot 30% realnega dnevnega iskanja na spletu .
Preostalih 70% leži na tako imenovanem » dolgem repu « spletnega iskanja .
Slika 5 : Dolgi rep iskanja .
Pristop k določanju ključnih besed Ker je določanje ključnih besed postopek , ki se vedno ponavlja , ga lahko izvajamo tudi po korakih [ 1 ] .
Izdelajte seznam ključnih 1-3 besednih fraz , ki opišejo produkt oz. storitev .
3.
Preglejte spletne strani konkurence ter izluščite njihove ključne besede .
Če jih je velika količina , potem jih je potrebno razvrstiti v kategorije in podkategorije .
Ogled že obstoječe statistike iskanja ob morebitni uporabi » Google analytics « orodja .
Zato lahko predpostavljamo , da so investirali v znanje , kako njihove stranke razmišljajo in kakšni so najboljši načini , da jim ponudijo svoj produkt oz. storitev .
Preglejte spletno stran konkurence , katere ključne besede uporabljajo za produkte , ki tekmujejo z vašimi .
Dodajte te pridobljene ideje in tako ustvarite robusten seznam ključnih besed , ki jih lahko uporabimo za izhodiščno točko .
Izbrane besede predstavljajo po našem mnenju najbolj ustrezne fraze , ki bi potencialno lahko bile kandidati za optimizacijo .
Orodje za raziskovanje ključnih besed Ko imamo narejen seznam potencialnih ključnih besed , sledi določanje njihove pomembnosti in tukaj pride na vrsto orodje Google AdWords Keyword tool [ 5 ] .
Orodje za ključne besede nam ponuja dve možnosti iskanja ( slika 6 ) .
Prva možnost je , da vpišemo ključne besede ali fraze in orodje bo vrnilo povezane besede glede na izbrano vrsto ujemanja ( približno , [ natančno ] ali » besedna zveza « ) .
Za prikaz lahko izberemo tudi posamezne izbrane informacije za vsako besedo med rezultati .
Med bolj relevantnimi so kriteriji Globalno mesečno iskanje , ki nam pove , povprečno koliko iskanj se nanaša na to ključno besedo .
Prav tako pa lahko pri iskanju ključnih besed uporabimo kar okvirček , kamor vpišemo naslov spletnega mesta in tako nam orodje za ključne besede kar samo prebrska stran ter izlušči ustrezne ključne besede in njihove statistike .
Slika 6 : Prikaz zaslonske maske Googlovega orodja za ključne besede .
Pridobljeni rezultati kažejo število globalnih mesečnih iskanj za ključno besedo v določenem obdobju .
Treba je biti pozoren pri rezultatih , in sicer beseda gradbeništvo se pojavi tudi zapisana kot gradbenistvo - brez šumnikov , kar se izkaže , da Google v rezultatih združuje iste besede s šumniki in brez .
Tako pri določanju meta opisov in ključnih besed ni potrebno zapisovati ključnih besed v obeh oblikah s šumniki in brez , kot je bila praksa v preteklih letih .
Omenjeno orodje nam omogoča pridobitve približkov prometa za različne ključne besede .
Orodje je odlično za ustvarjanje seznama in zanimivih informacij o vsaki besedi , pri ocenjevanju prometa pa je orodje , kot predvidevanje dnevnih obiskov spletne strani in ceno dnevnega oglaševanja .
Določanje vrednosti ključnih besed Ko je naš seznam nabora vseh potencialnih ključnih besed dokončan , je potrebno analizirati besede in določiti največje vrednosti in najvišjo povračilo naše investicije .
Za pridobitev grobe ideje , o primernosti in tekmovalnosti besede so priročne naslednje merske funkcije : • Volumen iskanj ( koliko ljudi išče to ključno besedo ) ; • Število plačniških konkurentov in cene oglasa za uvrstitev med prve štiri rezultate ; • Moč obstoječih strani ( starost , moč povezav , usmerjenost in relevantnost ) prvih 10 rezultatov ; • Število iskanj za točno določeno besedo ali frazo ( določevanje vrednosti z uporabo funkcije » allintitle : « ) Fazi načrtovanja tehnološke izvedbe spletne strani in izbire ključnih besed sledi praktična realizacija spletne strani .
Praktična realizacija optimizacije spletnih strani Kot je že bilo omenjeno , je spletna optimizacija , ko se osredotočimo na posamezne dele , spreminjanje malih delčkov spletne strani .
Pri ustvarjanju spletne strani je treba predvsem misliti na dobro vsebino in uporabno spletno stran , da bodo uporabniki zadovoljni s pridobljenimi informacijami .
Po ugibanjih različnih strokovnjakov naj bi imeli neposredni dejavniki na spletni strani pri Googlovem algoritmu težo vsaj štirideset odstotkov , kar pomeni , da vsebina in realizacija vsebine predstavljata štirideset odstotkov , preostali del pa so posredni dejavniki , kot so dohodne povezave in ostale sheme notranjih povezav .
Tako drugi viri navajajo , da neposredna vsebina predstavlja le dvanajst odstotni delež celotnega algoritma .
Neposredni dejavniki pri optimizaciji strani ( On page factors ) Neposredni dejavniki na spletni strani so tisti , katere vsebino lahko določimo na našem spletnem mestu .
Tako bo dobra vsebina , posredovala informacije uporabnikom , ki so jih iskali in s tem upravičila visoko pozicijo pri rezultatih iskanja .
Naslov bo prav tako prikazan na vrhu spletnega brskalnika .
Naslovi globlje na strani naj vsebujejo bolj natančne opise in se osredotočijo na vsebino določene podstrani .
Lahko tudi vsebujejo ime podjetja .
Dobra praksa za naslovne značke Natančno opišite vsebino konkretne podstrani – Izberite naslov , ki efektivno komunicira z vsebino podstrani .
Ustvarite unikatne naslove za vsako podstran – Po dobri praksi naj bi vsaka podstran vsebovala unikaten naslov , saj le tako Google lahko ugotovi , da se strani med seboj razlikujejo .
Uporabite kratke in jedrnate naslove – Naslovi so lahko kratki in informativni .
Z uporabo Google Webmaster Tools , lahko preverite s priročno analizo vsebine , ki nam pove , če so naše opisne značke predolge , prekratke ali morda prevečkrat ponovljene ( enake informacije so prikazane tudi za naslove ) .
Dodajanje opisovalnih meta značk je vedno dobra praksa v primeru , da Google ne najde primernega izbora besedila na vsebini strani .
Izrezki iskane vsebine so ob prikazu v rezultatih iskalnika odebeljeni , tako dobi uporabnik predstavo o relevantnosti vsebine z iskanim izrazom .
Dobra praksa za meta značke Natančno povzemite vsebino podstrani – Napišite opise , ki so informativni in pritegnejo pozornost uporabnika , če jih vidijo v izrezku pod rezultatom iskane vsebine .
Prav tako ni zaželeno uporabljati generičnih opisov in vrivanja nepotrebnih besed .
Uporabite unikatne opise za vsako podstran – Unikatni opisi pomagajo uporabnikom in iskalnikom , še posebno , kadar bo iskalnik vrnil več rezultatov z iste spletne strani , tako bo lahko uporabnik izbral točno podstran , glede na opis [ 8 ] .
Uporaba preprostih opisnih URL naslovov Ustvarjanje opisnih kategorij in imen dokumentov na spletni strani ne pomaga samo pri boljši organizaciji spletne strani , ampak vodi tudi do boljšega preiskovanja in indeksiranja dokumentov za spletne iskalnike .
Primer dobrega naslova http://www.fasaderstvo-lap.si/fasaderstvo/fasade-sto/ Naslov ki ni zaželen http://www.fasaderstvo-lap.si/folder1/1059998/clanki/992911.html URL naslov dokumenta je izpisan tudi pri iskalnih rezultatih .
Morebitne vsebovane ključne besede so odebeljene in lahko pomagajo pri določanju boljše relevantnosti vsebine najdenega rezultata in posledično višje pozicije med izpisanimi rezultati .
Dobra praksa pri URL strukturah Uporaba besed v naslovih - Naslovi , ki vsebujejo relevantne besede glede na vsebino strani , so prijaznejši do uporabnikov , ki brskajo po spletni strani .
Preprosta struktura spletne strani - Ustvarite preproste strukture , ki dobro uredijo vašo vsebino in so hkrati preproste za uporabnike in njihovo navigacijo po spletni strani .
Naredimo spletno stran s preprosto navigacijo Da bi uporabniki čim hitreje našli želeno vsebino , je na spletni strani potrebno vzpostaviti dobro in preprosto navigacijo .
Navigacija tudi pomaga spletnim iskalnikom razumeti pomembnost vsebine .
Vsebina na prvi strani predstavlja večjo pomembnost kot , vsebina prikazana v globlji strukturi spletne strani .
Čeprav so vrnjeni rezultati iskanja posredovani na nivoju dotične podstrani pa ima Google vseeno rad občutek , ki kaže , kakšno vlogo igra ta podstran v celoviti strukturi strani .
Če ne gre za malo spletno stran , je dobro razmisliti o tem , kako bodo obiskovalci prešli iz osnovne strani na podstran , ki bo vsebovala bolj specifično vsebino .
/ / Gradnja / / Fasaderstvo / / Fasade Sto / / Fasade Rofix / / Strojni ometi / / Urejanje okolice / / Svetovanje / / Kontakt / Struktura dokumentov za spletno stran Mapa strani je preprosta podstran na spletni strani , ki ob večjih in manj preglednih spletnih straneh prikaže strukturo spletne strani in po navadi vsebuje hierarhični seznam podstrani .
Uporabniki uporabljajo mapo strani , če imajo težave z iskanjem vsebine na spletni strani .
Tudi iskalniki s pregledom mape strani , dobijo dobra navodila za nadaljnje raziskovanje strani s t.i. pajkom [ 8 ] .
Dobra praksa za navigacije spletnih strani Tekoča in naravna hierarhija – Ustvarite najpreprostejše pogoje za uporabnike , ob prehodu iz osnovnih strani na podstrani z bolj specifično vsebino .
Uporaba navigacije s t.i. » krušnimi drobtinicami « ( breadcrumbs ) – Taka navigacija se uporablja predvsem pri spletnih straneh z veliko nivoji in vsebine .
Uporabna » 404 stran « ( iskana datoteka ne obstaja ) – Uporabniki bodo občasno prišli do strani , ki ne obstaja .
Vsebina in odziv uporabnikov sta dejavnosti , ki pomagata graditi ugled spletne strani pri uporabnikih in v iskalnikih .
Dobre prakse pri ustvarjanju vsebine Ustvarite vsebino preprosto za branje – Uporabniki uživajo ob vsebini , ki je napisana dobro in razumljivo .
Uporaba primernega izrazoslovja – Mislite na besede , ki bi jih uporabniki lahko iskali z namenom , da pridobijo želene informacije .
Uporabnik , ki mu je vsebina strani bližje , lahko za iskanje uporablja bolj strokovne izraze , kot pa nekdo , ki mu vsebina ni tako blizu .
Zato je dobro v vsebini uporabiti izraze obeh vrst ter njihove sopomenke za običajne in bolj strokovne uporabnike .
Izogibajte se ponovnem objavljanju stare vsebine , ter objavljanju duplikatov oz. podobne vsebine na večih podstraneh .
Vsebina naj bo primarno namenjena uporabnikom in ne spletnim iskalnikom - Ustvarite vsebino spletne strani za potrebe uporabnika , hkrati pa poskrbite , da je vsebina enostavno dostopna spletnim iskalnikom [ 8 ] .
Dobra praksa pri opisovanju povezav Izberite opisne besede – Besedilo , ki opisuje povezavo , naj bi priskrbelo vsaj osnovno idejo o vsebini strani , na katero kaže .
Primerna uporaba naslovnih značk ( < h1 > , < h2 > ) Naslovne značke so uporabljene za predstavitev strukture strani uporabnikom .
Različne velikosti naslovov , ki so uporabljeni po vrsti , ustvarijo hierarhijo vsebine na spletni strani ter tako olajšajo uporabnikom prebiranje vsebine , saj jo delijo na logične dele .
Dobra praksa za naslovne značke Naslov kot povzetek vsebine – Podobno kot pri pisanju povzetka za večji članek , se pri vsebini strani osredotočite na ključne točke besedila in njim primerno določite naslov .
Optimizirana uporaba slik Slike delujejo kot eden preprostejših delov vsebine spletne strani , vendar pa jih je potrebno tako kot vse ostalo , optimizirati .
Dobra praksa za uporabo slik Uporaba kratkih in jedrnatih opisov – Tako kot pri ostalih delih optimizacije strani , je tudi pri optimizaciji slik najboljše uporabiti kratke in jedrnate opise .
Neprimerna so tudi dolga imena slik in vsiljevanje ključnih besed v samo ime ali opis .
Efektivna uporaba datoteke robots.txt Datoteka » robots.txt « , pove spletnim iskalnikom , ali lahko dostopajo in indeksirajo določene dele spletne strani .
Pri določenih delih spletne strani ne želimo , da bi bile indeksirane , ker lahko ne bi 28 bile uporabne , če bi bile prikazane pod rezultati iskanja .
Dobra praksa za uporabo datoteke » robots.txt « Uporaba bolj varnih metod za občutljivo vsebino – Pri blokiranju občutljive vsebine , naj se ne bi uporabljal » robots.txt « .
Razlog za to je , da bi iskalniki še vedno lahko kazali na URL naslov , katerega blokiramo .
Če spletna stran bloga vsebuje javne komentarje , potem lahko povezava znotraj teh komentarjev prenaša ugled strani na strani , za katere nismo pripravljeni jamčiti .
Blokiranje sledenja povezav je priporočljivo tudi za knjige gostov , forume in ostale oblike objavljanja vsebin uporabnikov spleta .
Kot pri večini področjih optimizacije pa pretiravanje lahko škodi rangu spletne strani [ 10 ] .
Dobra praksa promoviranja spletne strani O novi vsebini in storitvah pišite blog – Blog zapis na lastni spletni strani , ki obvešča obiskovalce , da smo dodali nekaj novega , je odličen način kako razširiti glas o novi vsebini ali storitvah Promovirajmo tudi izven interneta – Tudi promoviranje izven interneta lahko obrodi sadove .
Na primer , če imamo poslovno stran , lahko naslov spletne strani objavimo na vizitkah , glavah dokumentov , plakatih itd.
Zemljevid spletnega mesta ( » XML Sitemaps « ) Z zemljevidi spletnega mesta lahko Googlu pokažemo našo vsebino spletne strani , ki je morda pajki nebi odkrili .
Tako imamo lahko zemljevide slik , video posnetkov , novic , itn. Na primer zemljevid video vsebine vsebuje podatke o dolžini videa , kategoriji in formatu .
V zemljevidih podamo na splošno tudi druge informacije kot so pomembnost določenega dela strani , kako pogosto pričakujemo , da se bo vsebina spreminjala in datum zadnje posodobitve .
Zemljevidi spletnega mesta so uporabni , ko : - ima spletna stran dinamično vsebino , - deli spletne strani med indeksiranjem še niso odkriti z Googlebotom , - Če je spletna stran nova in nima veliko povezav , ki kažejo na njo , je iskalnikom težko odkriti spletno stran , - ima spletna stran velik arhiv vsebine , ki je slabo ali celo ni povezana med sabo .
Google ne jamči , da bo ob prejemu zemljevida spletnega mesta indeksiral celotno vsebino , mu pa to posreduje informacije o spletni strani in njeni strukturi , ki bo v prihodnje omogočalo redne obhode pajkov in boljše indeksiranje vsebine spletne strani .
V našem primeru za diplomsko nalogo smo vpisali spletno stran v imenike spletnih strani pri : • Najdi.si • Slowwwenia.si • Matkurja.com • Poslovnik.si Slika 8 : Prikaz izpisa v imeniku spletnih strani pri Najdi.si Pri vpisih v imenike je pomembno , da ob povezavah ni » rel = nofollow « atributov , saj taka povezava nima vpliva na Googlov algoritem .
Pomembno je tudi da besedilo opisa povezave vsebuje ključne besede , za katere optimiziramo spletno stran .
Zadnji trendi nakazujejo , da tudi Googlov algoritem daje nekaj teže , če je naša spletna stran vidna in povezana tudi s temi omrežji .
Zato vsaka optimizacija vsebuje tudi povezovanje s socialnimi omrežji in neposredni kontakt uporabnikov spleta .
Prednosti SMM so predvsem cenovna ugodnost saj je večino časa SMM popolnoma brezplačen in rezultati so takojšnji .
Kot tudi pregled nad odzivi uporabnikov , kar predstavlja neprecenljive informacije za vsako podjetje ki trži storitve ali izdelke .
Najbolj priljubljena socialna omrežja so tako v Sloveniji YouTube , Facebook , Twitter , MySpace .
Nudijo pa nam tudi bolj tehnično plat analize , pregled indeksirane vsebine , pogostost obiskov pajka , napake pri brskanju po strani in druge karakteristike .
Orodja za spletne skrbnike - Google Webmaster Tools Spletni iskalniki ponujajo brezplačna orodja za skrbnike spletnih strani .
Uporaba teh orodij lahko pomaga odkriti in odpraviti probleme s spletno stranjo , kar lahko pripomore k boljšemu uvrščanju spletne strani [ 8 ] .
Slika 10 : Vmesnik Googlovih orodij za skrbnike V orodju lahko skrbniki vidijo : - dele spletne strani , s katerimi je imel Googlebot probleme , - naložimo lahko » XML zemljevid « spletne strani , - analiziramo in generiramo datoteko » robots.txt « , - odstranimo določene podstrani , ki so že indeksirane , za katere tega ne želimo , - določimo privzeto domeno ali naslov vsebuje » www « ali ne , - opozori nas na probleme z naslovnimi in opisnimi meta značkami , na primer , če se vsebina ponavlja ali prikazuje kakšno drugo napako , - prikaže glavne iskalne poizvedbe , ki so prikazale našo spletno stran med rezultati , - pridobimo občutek kako Googlebot vidi spletno stran , z orodjem ki je na voljo , - odstranimo nezaželene povezave , ki bi jih lahko Google uporabil za računanje ugleda spletne strani , - opozorila o kršenju pravil , ki narekujejo vodila o kvaliteti spletne strani in prošnjo za ponovno obravnavanje spletne strani po težki kršitvi in ob morebitni izgubi ugleda ter blokiranju strani med iskalnimi rezultati , 4.2.
Slika 11 : Vmesnik Google Analytics .
Rezultati optimizacije in pregled prometa na spletni strani Pri optimizaciji testne spletne strani smo se osredotočili na ključne besede » fasaderstvo « in » gradbeništvo « , ostale besede so dodane brez misli na optimizacijo .
Rezultati zavzemajo obdobje enega meseca in pol uvrstitve spletne strani v indekse iskalnikov za novo spletno stran .
Idealnejše bi bilo obdobje vsaj treh mesecev .
Tako bomo predstavili vrednotenje ključnih besed glede na uvrstitev v iskalnih rezultatih in primerjavo števila obiskovalcev stare in nove spletne strani .
Pozicije spletne strani , glede na ključne besede v iskalnih rezultatih ( tabela 3 ) , v iskalnikih Google in Najdi.si predstavljene v spodnji tabeli , so pridobljene s programom IBP [ 20 ] .
Program pridobi rezultate tako , da simulira človeško poizvedovanje na spletnem iskalniku ter vrne pozicije in stran , kjer se nahajajo iskani nizi .
Pri stari spletni strani pa se pokaže , da v primeru iskanja po ključni 35 besedi ( » fasaderstvo « ) stran ni med prvimi stotimi zadetki .
Tabela 3 : Predstavitev uvrščanja ključnih besed v iskalniku Google in Najdi.si Stara spletna stran Nova spletna stran ( www.lap.si ) ( www.fasaderstvo-lap.si ) Google Najdi.si Google Najdi.si ( pozicija / stran ) ( pozicija / stran ) ( pozicija / stran ) ( pozicija / stran ) / 17/2 15/2 21/3 33/4 / 62/7 / / / / / 22/3 16/2 23/3 69/7 70/8 73/8 52/6 9/1 / / / / Prikaz obiska spletne strani Po merjenju uspešnosti uvrščanja ključnih besed v rezultatih , upoštevamo za določanje uspešnosti optimizacije tudi statistike obiskov spletne strani .
Iz grafov je razvidno , da je nova spletna stran ob uvrstitvi v iskalnike hitro pridobila dnevni obisk in tako tudi ostala v mali prednosti v primerjavi s staro spletno stranjo .
Drseč .
Primerjava obiska spletnih strani v enakem obdobju V tem delu so prikazani rezultati obiska spletne strani v obdobju od 5. septembra 2010 do 13. oktobra 2010 za obe spletni strani .
16 14 12 10 Stara stran Nova Stran 0 10 20 30 40 50 št. dni Prikaz obiskov spletnih strani v opazovanju .
37 Več statističnih podatkov nam ponudi tudi orodje Google Analytics ( slika 12 ) .
Podatki o obisku spletnih strani v obdobju slabega meseca ( Tabela 4 ) kažejo , da je bila nova spletna stran obiskana 128-krat , v primerjavo s staro spletno stranjo , ki je zbrala le 42 obiskov .
Da je bila nova stran grajena z mislijo na privlačno vsebino in pregledno navigacijo , ki uporabnika spodbujata k raziskovanju vsebine spletne strani , potrjujejo tudi meritve .
Povprečni čas obiska spletne strani nam da občutek , koliko časa se obiskovalci zadržujejo na naši spletni strani .
Orodje Google Analytics nam omogoča , da imamo na dlani vedno veliko informacij o uporabi in obnašanju spletne strani .
Ena izmed zanimivih meritev je pregled in primerjanje statistike virov obiskov spletnih strani ( slika 13 , 14 ) .
Na novi strani znaša ta delež 26% ( 34 obiskovalcev ) v primerjavi s staro , ki dosega le 12% ( 9 obiskovalcev ) .
Lahko povzamemo , da so tudi zgoraj naštete dejavnosti enako pomembne za pridobivanje obiskovalcev naše spletne strani .
Pri stari spletni strani lahko pripišemo večji delež zaradi manjšega deleža napotenih obiskovalcev iz drugih spletnih strani .
V diplomski nalogi sem dokazal , da z optimizacijo spletne strani posredno in neposredno , v relativno kratkem časovnem obdobju , vplivamo na določene dele tržišča .
To lahko dosežemo tudi brez uporabe dragih programskih orodij , oglaševanja in ostalih storitev , ki jih ponujajo podjetja .
Vendar pa se je potrebno zavedati , da lahko določene korake tega procesa preskočimo s pomočjo finančnih sredstev in pravim pristopom oz. pomočjo podjetij , ki ponujajo storitve optimizacije .
V idealnem svetu bi bila na prvem mestu vrnjenih rezultatov iskanja vedno tista prava informacija , ki smo jo želeli .
Tako je nujno potrebno pridobiti PageRank točkovanje dohodnih povezav spletnih strani , ki so že uveljavljene in pripravljene , prenesti tudi na nas ( jamčiti za našo stran ) .
Tukaj sta predvsem v ospredju internetna direktorija strani Dmoz [ 19 ] ( Google ) , ki je brezplačen in Yahoo [ 22 ] , ki je plačniški .
V zaključku naj naštejem vse uporabljene tehnike za optimizacijo naše testne spletne strani : pridobivanje in analiziranje ključnih besed z uporabo orodje Google Adwords analiziranje konkurence in njihove dejavnosti , z uporabo Googlovih razširjenih možnosti spletnega iskanja , oblikovanje vsebine spletne strani glede na izbrane ključne besede , prilagoditev CMS sistema Wordpress z dodatki za optimizacijo , uporaba ključne besede v domeni spletne strani , uporaba ključnih besed v H1 in H2 naslovih vsebine podstrani , uporaba ključnih besed v opisih zunanjih in notranjih povezav , uporaba unikatnih meta značk ( » Description « in » Keywords « ) za vse podstrani , uporaba datotek Sitemaps.xml in robots.txt , objava spletne strani v spletnih imenikih , trajno merjenje rezultatov in prilagajanje vsebine .
Zato ima vsak posameznik svojo tehniko in svoje male skrivnosti optimizacije , ki prinesejo rezultate , kar pomeni , da obstaja veliko poti do končnega uspeha .
Algoritmi iskalnikov pa se tudi iz dneva v dan spreminjajo z novimi tehnologijami in željo po vedno večji natančnosti vračanja ustreznih rezultatov .
Od naslednje generacije svetovnega spleta tako pričakujemo avtomatizirane storitve , ki temeljijo na semantiki , izraženi v računalniku razumljivi obliki , uporabo teh podatkov pa bodo omogočali mehanizmi sklepanja in različne hevristične metode .
Aplikacije semantičnega spleta , ki temeljijo na ontologijah , so trenutno omejene bolj na akademsko okolje , medtem ko je uspešnih implementacij v gospodarstvu še malo .
Enostavni in uporabniku prijazni pristopi za razvoj ontologij , skupaj s podpornim orodjem , predstavljajo zelo pomemben dejavnik , ki mu moramo nameniti še veliko pozornosti z vidika raziskovalnega dela .
Obstoječi pristopi za razvoj ontologij so tehnično zelo zahtevni , saj je učna krivulja uporabnikov zelo dolga in tako niso najbolj primerni za poslovne uporabnike .
Večina obstoječih pristopov zahteva pri procesu razvoja dodatno vlogo inženirja znanj , ki skrbi za prenos dejanskega znanja od poslovnih uporabnikov do načrtovalcev ontologij , ki znanje zapišejo v enem od izbranih formalizmov .
Vpeljava več abstraktnih ravni obvladovanja kompleksnosti , kot predlagajo sistemi za obvladovanje poslovnih pravil in pristop MDA , se izkažejo za zelo učinkovite pri razvoju in obvladovanju razvoja ontologij za uporabo v poslovnih aplikacijah .
Številne raziskave so identificirale pogoste napake in anomalije pri razvoju ontologij , ki jih lahko smiselno vključimo v sam proces razvoja in uporabniku pomagamo pri preprečevanju in odpravljanju pogostih načrtovalskih napak .
V okviru doktorske disertacije je bil glavni namen opredeliti inovativen model za hiter razvoj ontologij ( ROD ) , ki je primeren za uporabnike brez poglobljenega tehničnega znanja in znanja načrtovanja ontologij .
V okviru omenjenega procesa razvoja so podprte predrazvojne , razvojne in porazvojne aktivnosti od zajema poslovnega slovarja do uporabe razvite ontologije v obliki funkcionalne komponente v informacijskem sistemu .
V predlaganem procesu ROD za razvoj ontologij poteka po posameznih korakih v procesu nenehna evaluacija razvite ontologije , ki uporabnika vodi skozi proces in mu daje navodila za izboljšanje kvalitete razvite ontologije .
Za boljšo podporo procesu ROD je bil razvit tudi prototip orodja IntelliOnto , ki predstavlja grafični vmesnik za razvoj ontologij in neposredno vključuje proces ROD ter indikator popolnosti ontologije .
V okviru samega modela ROD so bili identificirani tudi različni načini uporabe funkcionalnih komponente ontologije v informacijskih sistemih , kjer je možna uporaba celotne razvite ontologije ali samo shematskega dela v različnih primerih uporabe .
Za lažjo integracijo z obstoječimi podatki je eden od prispevkov tudi opredelitev vmesnikov za neposredno povezovanje delno strukturiranih virov v ontologijo , kjer lahko s pomočjo generičnega pristopa regularnih izrazov v ontologijo vključimo poljuben delno strukturiran vir ; od dokumentov , spletnih strani , podatkovnih baz , datotek CSV ipd.
Pristop ROD se je v tem primeru izkazal za učinkovitega , saj je bilo za delujočo različico ontologije potrebnih manj iteracij , prav tako pa je kakovost razvite ontologije prej dosegla zahtevani prag potrditve .
S tem omenjena doktorska disertacija celostno opredeljuje model za hiter razvoj ontologij , ki uporabniku brez poglobljenih tehničnih znanj omogoča razvoj ontologij in uporabo številnih prednosti semantičnega spleta ter s tem izdelavo semantično obogatenih aplikacij , ki lahko na zelo intuitiven način uporabljajo številne podatkovne vire , tudi delno strukturirane .
Ključne besede : ontologije , semantični splet , metodologije za razvoj ontologij , poslovna pravila , evaluacija ontologij , hiter razvoj ontologij , ROD , IntelliOnto .
1 UVOD 1.1 OPIS PODROČJA IN PROBLEMATIKE V doktorski disertaciji bom pri opredelitvi modela za hiter razvoj ontologij s pristopom obvladovanja poslovnih pravil za uporabo v poslovnih aplikacijah združil raziskovalna področja obvladovanja znanja , ontologij in pristopa obvladovanja poslovnih pravil pri razvoju informacijskih sistemov .
Ta sprememba je prisilila organizacije , da začnejo delovati bolj " inteligentno " ter se začnejo gibati izven ustaljenih okvirov delovanja .
Ključna naloga današnjih sistemov za obvladovanje znanja je predvsem podpora ponovni uporabi znanja .
Če posplošimo , agenti ( ljudje in programski agenti ) za souporabo znanja potrebujejo nek skupen jezik .
V prvi vrsti predstavljajo skupno in dogovorjeno razumevanje znanja v okviru problemske domene .
V takšni obliki se uporabljajo kot skupni jezik pri komunikaciji med agenti .
Pojem ontologije je zgodovinsko gledano na številnih področjih dobil različne opredelitve .
Razlogi za razvoj ontologij ( Noy and McGuinness 2001 , Abou-Zeid 2003 ) se gibljejo od souporabe skupnega razumevanja problemske domene med ljudmi in programskimi S t r a n 1 1. pog l a vj e | Uvo d agenti , omogočanja ponovne uporabe domenskega znanja do razjasnitve domnev v okviru določene domene .
V strokovni in znanstveni literaturi ima izraz ontologija številne pomene , od taksonomije ( Corcho , et al. 2003 , Lavbič 2005 , SanJuan and Ibekwe-SanJuan 2006 , Veale 2006 ) ( znanje z minimalno hierarhično strukturo ) , do slovarja ( Miller 1995 , Bechhofer and Goble 2001 , Hartel , et al. 2005 , Yu 2006 ) ( besede in sinonimi ) , tematskih področij ( Park and Hunting 2002 , Schweiger , et al. 2003 , Alvarado , et al. 2004 , Dong and Li 2004 , Olsevicova 2006 ) ( podpora organizaciji in navigaciji po večji količini podatkov ) , konceptualnega modela ( Mylopoulos 1998 , Erdmann and Studer 1999 , Jovanović and Gašević 2005 , Valarakos , et al. 2006 ) ( bolj kompleksno znanje ) in teorije logike ( Waterson and Preece 1999 , Corcho , et al. 2003 ) ( zelo bogato , kompleksno , konsistentno znanje ) .
Seznam raziskovalnih prispevkov na temo ontologij in obvladovanja znanja s pomočjo tehnologij semantičnega spleta ( Uschold and King 1995 , Bernaras , et al. 1996 , Uschold and Grueninger 1996 , Swartout , et al. 1997 , Erdmann and Studer 1999 , Fernandez-Lopez , et al. 1999 , Schreiber , et al. 1999 , Cui , et al. 2001 , Fensel 2001 , Holsapple and Joshi 2002 , Jarrar and Meersman 2002 , Abou-Zeid 2003 , Caplinskas , et al. 2003 , Corcho , et al. 2003 , Firat 2003 , Kotis and Vouros 2003 , Sure 2003 , Nicola , et al. 2005 , Brambilla , et al. 2006 , Davies , et al. 2006 ) nakazuje na visoko dinamiko raziskav , saj gre za relativno novo področje , s katerim se ukvarjajo številni raziskovalci .
Večina pristopov pri procesu zapisa znanja zahteva dodatnega uporabnika z vlogo inženirja znanja ( knowledge engineer ) , ki domensko znanje prenese v formalno obliko v okviru baze znanja .
Ena od kritik obstoječih metodologij ( Sure 2003 , Davies , et al. 2006 ) je tudi ta , da ne posvečajo podpore procesu vzdrževanja razvite ontologije .
Za rešitev tega problema se kot zanimiv pristop kažejo poslovna pravila in Model Driven Architecture ( MDA ) ( Frankel 2003 ) , ki jo je opredelil Object Management Group ( OMG ) ter je podrobneje predstavljena v poglavju 2.3.3.
V zadnjih desetletjih so postala poslovna pravila priljubljena predvsem v okviru raziskav s področja informacijskih sistemov zaradi vpeljave fleksibilnosti in sposobnosti enostavnega spreminjanja poslovne logike ( Bajec and Krisper 2005 ) .
Najdemo lahko številne raziskovalne prispevke iz poslovnih pravil na področju podatkovnih baz ( Morgenstern 1983 , Widom and Ceri 1996 ) , metod za predstavitev poslovnih pravil v podatkovnih modelih ( Nijssen and Halpin 1989 , Date 2000 ) in objektno usmerjenega razvoja ( Greenspan , et al. 1982 , Struck 1999 ) .
Ontologija se nahaja na izvajalni ravni , kar je pri MDA analogno ravni PSM medtem ko se poslovni slovar in poslovna pravila nahajajo na najvišji ravni CIM .
Oba pristopa imata tudi isti cilj zajema znanja ( semantike ) , neodvisno od določene aplikacije ali opravila .
Tako se razlikujeta od pristopov konceptualnega modeliranja ( npr. UML ) , ki domensko znanje opisujejo za uporabo v določenih aplikacijah .
Oba pristopa prav tako uporabljata podobno obliko .
Poslovni slovar s poslovnimi pravili in ontologija sta sestavljena iz medsebojno povezanih konceptov in pravil ( npr. identiteta , kardinalnost , taksonomija ipd. ) , ki omejujejo in določajo pomen teh konceptov .
Pristop poslovnih pravil se bolj osredotoča na naravni S t r a n 3 1. pog l a vj e | Uvo d jezik in človeku lažje berljivo sintakso , medtem ko mora biti pri ontologijah vsak element modela skladen s formalnim jezikom , sicer ga ni mogoče uporabljati v izvajalnem okolju .
Iz besed W. Edwards Deminga " If you can't describe what you are doing as a process , you don't know what you're doing " lahko sklepamo , da je del problema prav gotovo v obstoječih metodologijah , saj je razpoložljivost preverjenih postopkov dober pokazatelj zrelosti tehnologije in postopka uporabe .
a. Ali obstajajo skupne točke pristopa obvladovanja poslovnih pravil v informacijskih sistemih in uporabe ontologij na semantičnem spletu ?
Prispevek bo predvsem na ravni povečane prijaznosti do uporabnika , saj bo zahtevana raven tehničnega znanja , glede na obstoječe pristope , močno zmanjšana .
V okviru analize obstoječega stanja sem za potrebe oblikovanja modela in procesa hitre izgradnje ontologij izhajal iz publikacij in raziskav s področja metodologij razvoja ontologij in širšega področja metodologij razvoja programske opreme ter pristopov razvoja poslovnih pravil v informacijskih sistemih .
Na podlagi analize in primerjave obstoječih metodologij sem identificiral potrebne korake in elemente , ki so uporabljeni pri pristopu .
Namen je izboljšati obstoječe procese gradnje ontologij s smernicami pristopa obvladovanja poslovnih pravil .
Le ta bo zapisana v standardiziranih jezikih semantičnega spleta , kar bo omogočalo čim večjo stopnjo izmenljivosti in ponovne uporabljivosti .
Pristop bo vključeval tudi čim večjo ponovno uporabljivost virov pri gradnji poslovnega slovarja in pripadajočih pravil : a. preučiti je bilo potrebno načine vključevanja obstoječih virov in semantičnega opisovanja teh virov zaradi lažje integracije , b. za pogosto uporabljane vire so bili razviti semantični opisi v obliki ontologij virov , c. opredeljeni načini ponovne uporabe obstoječih ontologij in d. opredeljeni načini uporabe razvite ontologije v poslovnih aplikacijah .
Orodje je osredotočeno na enostavno in intuitivno uporabo , primerno za poslovnega uporabnika , z minimalno ravnjo tehničnih znanj .
V okviru doktorske disertacije bomo potrdili naslednje hipoteze , ki so podrobneje opisane v nadaljevanju .
1.3.3 HIPOTEZA 3 S pomočjo pristopa ROD je mogoče izdelati aplikacijo semantičnega spleta , ki je neodvisna od tehnologije in izvajalne platforme ter uporablja podatke iz različnih virov .
1.3.4 HIPOTEZA 4 Prototip orodja za podporo procesu ROD omogoča uporabniku sledenje korakom procesa za hiter razvoj in nenehno evaluacijo razvite ontologije .
1.4 NADALJNJA VSEBINA DISERTACIJE V poglavju 2 so predstavljena raziskovalna področja kot osnova in temelj za omenjeno doktorsko disertacijo .
S pomočjo različnih komponent pomena ( izraz , predstava in stvar v realnem svetu ) je v trikotniku pomena predstavljen pomen ontologij pri predstavitvi znanja v računalništvu in kako se je skozi čas spreminjal pogled razvijalcev na podatke .
Podana je tudi formalna opredelitev ontologije ter osnovni gradniki ( koncepti , lastnosti , primerki in aksiomi ) .
Osnovni jeziki za predstavitev ontologij so zgolj omenjeni , medtem ko so podrobneje opisani označevalni jeziki , ki temeljijo na sintaktičnem jeziku XML .
Pomembno raziskovalno področje so tudi poslovna pravila in sistemi za obvladovanje poslovnih pravil ( poglavje 2.3 , str. 27 ) , katerih razvoj in uporaba je predstavljena skozi čas .
Predvsem zaradi poenostavitev razvoja ontologij so se S t r a n 6 1. pog l a v j e | Uvo d že pojavili nekateri pristopi za uporabo opredelitev ontologij na semantičnem spletu , saj je med obema pristopoma ( semantični splet in poslovna pravila ) veliko podobnosti .
Sledi pregled obstoječih raziskav , ki je razdeljen na dva dela , in sicer pregled metodologij za razvoj ontologij v poglavju 2.4 na strani 33 in pregled pristopov za evaluacijo ontologij v poglavju 2.5 na strani 49.
Pregled pristopov za razvoj ontologij je rezultat podrobne analize najbolj tipičnih predstavnikov posameznih pristopov in metodologij za razvoj ontologij .
Vseh opisanih pristopov je 12 , identificirane pa so tudi prednosti in slabosti posameznih pristopov .
Pregled pristopov za evaluacijo ontologij povzema vse pristope , najdene v literaturi , v 4 skupine , ki so kasneje podrobno opisane in predstavljene s posameznimi predstavniki .
V uvodu ( poglavje 3.1 , str. 51 ) sta predstavljena dva vidika razvoja ontologij po pristopu ROD : ( 1 ) vidik ponovne uporabe in ( 2 ) procesni vidik .
Proces ROD je razdeljen v faze pred razvoja , razvoja in po razvoja s podrobnim opisom posameznih aktivnosti , ki so vsebovane v omenjenih fazah .
V okviru predrazvoja ( poglavje 3.2.1 , str. 53 ) je predstavljena študija izvedljivosti , medtem ko razvoj ( poglavje 0 , str. 54 ) sestavljajo številne aktivnosti .
V okviru zajema poslovnega slovarja ( poglavje 3.2.2.1 , str. 54 ) so predstavljeni neformalizirani pristopi k opredelitvi problemske domene , semantično opisovanje virov in problemi pri združevanju ontologij , s katerimi se uporabnik sreča v začetnih korakih razvoja ontologij .
Naslednji koraki so identifikacija seznama primerkov konceptov in lastnosti ( poglavje 3.2.2.2 , str. 61 ) , identifikacije taksonomije ( poglavje 3.2.2.3 , str. 62 ) , identifikacija ad hoc relacij ( poglavje 3.2.2.4 , str. 62 ) , opis atributov in relacij konceptov ( poglavje 3.2.2.5 , str. 62 ) .
Zadnji korak v fazi razvoja pa je dodajanje kompleksnih omejitev in pravil ( poglavje 3.2.2.6 , str. 63 ) , kjer so podrobno predstavljeni različni načini zajema pravil v obliki kaj-če pravil , odločitvene tabele in odločitvenega drevesa .
Sledi aktivnost kompozicije funkcionalne komponente ( poglavje 3.2.3.2 , str. 72 ) , kjer je najprej potrebno opredeliti V / I , izbrati koncepte , relacije , omejitve in pravila ter na koncu identificirati cilj .
Celoten proces razvoj ontologij je podprt z indikatorjem popolnosti ontologij ( OC ) ( poglavje 3.3 , str. 77 ) , ki uporabnikom omogoča lažje sledenje procesu razvoja in ga z nenehnim nadzorovanjem kvalitete razvite ontologije usmerja pri odpravi napak in večanju aplikabilnosti razvite ontologije .
V nadaljevanju so predstavljeni posamezni semantični testi , ki se izvajajo nad ontologijo po posameznih komponentah ontologije : TBox ( poglavje 0 , str. 85 ) , RBox ( poglavje 3.3.3 , str. 98 ) in ABox ( poglavje 3.3.4 , str. 113 ) .
V nadaljevanju je tudi prikazan način zajema pravil v vseh treh oblikah v poglavju 4.1.1.2 na strani 171 ter podprti jeziki za zapis ontologije ( poglavje 4.1.2 , str. 179 ) .
Drugi del evaluacije je izveden eksperiment na primeru trgovanja na finančnih trgih ( poglavje 4.2 , str. 179 ) .
Pristop ROD je bil primerjan z ad hoc pristopom razvoja ontologij , ki temelji na dobrih praksah .
Zahteve so bile razvoj ontologije , ki je jedro aplikacije semantičnega spleta za podporo finančnemu trgovanju z možnostjo opredelitve poljubnih trgovalnih strategij .
Pri razvoju je bilo zrno opazovanja ena iteracija , kjer se je spremljala popolnost ontologije , rast števila aksiomov po posameznih iteracijah ter potrebno število iteracij za izpolnitev uporabniških zahtev .
S t r a n 8 2. p og l a v j e | Ra z i s kova l no pod r o č j e 2 RAZISKOVALNO PODROČJE 2.1 SEMANTIČNI SPLET 2.1.1 SVETOVNI SPLET IN MOTIVACIJA ZA SEMANTIČNI SPLET Ob začetkih razvoja računalništva svetovni splet še ni bil prisoten .
Splet je kot koncept začel razvijati leta 1989 Tim Berners-Lee , ki je bil takrat zaposlen pri CERN-u , evropski organizaciji za fizikalne raziskave .
Tehnično osebje pri CERN-u je nujno potrebovalo storitev skupne rabe dokumentov med različnimi računalniki .
Osnovna ideja Berners-Leeja je bila omogočiti vsakemu uporabniku objavo podatkov na svojem računalniku tako , da so lahko drugi uporabniki dostopali do njih iz poljubne lokacije .
V končni fazi si je želel , da bo na tej ideji nastalo učinkovito sodelovanje med ljudmi s pomočjo računalnikov : I have always imagined the information space as something to which everyone has immediate and intuitive access , and not just to browse but to create …
V nasprotju s to ugotovitvijo dandanes večino pomena na svetovnem spletu interpretirajo uporabniki sami , ki pregledujejo spletne strani , oznake in povezave ter tehnični uporabniki , ki pripravljajo specializirane programe za delo s takšnimi podatki .
porazdeljene podatkovne baze ( W3C 2000 ) govori o tem , da podatkih tekstovnih informacijskih sistemih – zagotoviti zadostno raven prilagodljivosti , ki nam omogoča predstavitev podatkovnih baz in logičnih pravil in medsebojno povezovanje z namenom pridobivanja dodatne vrednosti .
• Tim Berners-Lee trdi , da je semantični splet infrastruktura in ne aplikacija , zato je dejanski izziv pomanjkanje avtomatizirane infrastrukture v obstoječi različici svetovnega spleta .
Semantični splet lahko preprosto opišemo tudi z osnovnimi lastnostmi , ki jih pogosto povezujemo s semantičnim spletom ( Allemang and Hendler 2008 ) .
Kot posledica slogana AAA lahko v vsakem trenutku v obstoječo bazo znanja dodamo novo dejstvo , kar posledično pomeni , da lahko v vsakem trenutku obstajajo informacije , ki nam niso znane .
Vrednost vključitve v omrežje se povečuje s številom sodelujočih , kar se posledično izkaže v povečanem krogu sodelovanja .
S t r a n 10 2. p og l a v j e | Ra z i s kova l no pod r o č j e 2.1.3 SKLAD TEHNOLOGIJ SEMANTIČNEGA SPLETA Trenutna različica svetovnega spleta ( WWW ) je ogromna množica med seboj povezanih dokumentov , ki jih prenašajo računalniki in predstavljajo ljudje .
Semantični splet se osredotoča na skupno rabo podatkov in ne dokumentov .
Z drugimi besedami gre pri tem projektu za vzpostavitev skupnega ogrodja , ki bi omogočalo skupno rabo podatkov in ponovno uporabo med aplikacijami , podjetji in mejami skupnosti .
Slika 1 : Sklad semantičnega spleta Slika 1 prikazuje arhitekturo semantičnega spleta v obliki sklada .
Najnižja raven temelji na URI2 in UNICODE , ki sta pomembna elementa obstoječega svetovnega spleta .
Uporaba URI-ja je zelo pomembna v URI je enolični identifikator vira ( ang. Uniform Resource Identifier ) .
Naslednja raven z jezikom XML5 se ukvarja predvsem s sintakso podatkov in shema XML z opredelitvijo imenskega prostora .
Dokument XML vsebuje elemente , ki jih lahko gnezdimo in lahko imajo atribute ter vsebino .
S pomočjo imenskega prostora XML pa lahko opredelimo različne označevalne slovarje v okviru istega dokumenta XML .
Shema XML se uporablja za izražanje sheme določene množice dokumentov XML .
Shema RDF ( RDF / S ) je naslednja raven , ki je nastala zato , da imamo na voljo standardiziran način za opis taksonomij .
RDF / S se uporablja za opis razrednih taksonomij in taksonomij lastnosti – na ta način lahko razvijemo " lahke ontologije " .
Jezik OWL temelji na opisni logiki in ima na voljo več konstruktov kot RDF / S. Sintaktično je integriran v RDF , tako da kot RDF / S prinaša dodaten standardiziran slovar .
Za podporo pravilom poleg konstruktov že omenjenih jezikov , ki so že na voljo , na področju semantičnega spleta ravno tako obstajajo standardizirani jeziki za pravila .
Vsa semantika in pravila se izvajajo na ravneh pod ravnjo zaupanja , rezultati mehanizma sklepanja pa se bodo uporabili za dokazovanje sklepov .
Za zagotavljanje zanesljivih virov se bo uporabljala kriptografija , kot so digitalni podpisi za preverjanje izvora virov .
Nekateri si ga predstavljajo kot splet podatkov , kjer so le-ti predstavljeni v obliki RDF in OWL .
Drugi razmišljajo o semantičnem spletu inteligenca – računalniški programi , ki rešujejo kompleksne optimizacijske uporabnikov sploh ne razume .
Poslovni uporabniki vedno opredelijo problem v pogledu uporabniške vrednosti in pravijo , karkoli že je , potrebuje enostavne in otipljive aplikacije za potrošnike in organizacije .
Pristop od spodaj navzgor temelji na opisih podatkov na spletnih straneh in jeziku RDF tako , da so podatki zajeti v računalniku razumljivi obliki .
podpiral RDF in mikroformate .
zgoraj navzdol , so npr. OpenCalais6 , Dapper7 , BlueOrganizer8 ipd. 2.1.4.2 Tehnologije za opisovanje : RDF , mikroformati in meta oznake Najbolj obsežen pristop je RDF , ki je najbolj pomen s pomočjo spreminjanja obstoječih strani HTML z uporabo določenih slogov CSS .
Trenutno se uporabljajo na straneh , kot je Flickr9 , LinkedIn10 ipd.
Ostaja pa obljuba , da bodo te informacije nekoč znale s pridom uporabljati aplikacije , zgrajene nad semantičnim spletom .
Uporaba semantičnih tehnologij se v njihovih glavah preslika v nekaj inteligentnega , kar posledično pomeni tudi dobro trženje – trditev " naši produkti so boljši in pametnejši , ker uporabljamo semantični splet " je zelo dobra reklama za organizacije .
RDF omogoča način komunikacije na temeljih že razširjenega jezika XML , poleg tega pa ima matematično osnovo za omogočanje semantike .
Vendar je težava v tem , da Googlov iskalni algoritem , ki temelji na statistični S t r a n 14 2. p og l a v j e | Ra z i s kova l no pod r o č j e analizi , še vedno dobro obvladuje entitete , kot so ljudje , mesta in organizacije .
" , nam odgovori popolnoma točno ( Slika 2 ) .
Slika 3 : Ideja semantične podatkovne baze Osredotočena je na izgradnjo osebne baze znanja in temelji na uvozu številnih nestrukturiranih podatkov ter gradi bazo ljudi , podjetij , stvari , lokacij ipd.
Takšna baza znanja je npr. zelo uporabna pri poosebljenem iskanju .
Slika 4 : Različni pogledi na ontologije Pojmovanje ontologije se v zalednem delu začne z razširjenimi ER modeli in predikatno logiko , s podporo odločanju , mehanizmi sklepanja in EAI , saj je na tej ravni semantika formalno določena .
Slika 5 : Kompleksnost ontologije Kompleksnost razvite ontologije številni avtorji označujejo kot lahka ali težka ontologija , ki je seveda pomensko bolj bogata od zapisa v podatkovni bazi , http://www.freebase.com http://esw.w3.org/topic/SweoIG/TaskForces/CommunityProjects/LinkingOpenData • Slika 7 poskuša v strnjeni obliki prikazati tri komponente pomena ( Daconta , et al. 2003 ) slovenščini ) .
Prva komponenta v spodnjem levem kotu je izraz , ki ga sestavljajo simboli ( oznake za predstavo ) ali besede v slovenskem jeziku in pravila za združevanje teh izrazov v stavke .
V nasprotnem primeru bomo skoraj zagotovo poznali pomen izraza " avtomobil " , ker imamo predstavo o tem izrazu v realnem svetu ( ima štiri gume , motor , porabi določeno količino goriva itd ) .
Ravno zaradi tega je v trikotniku ( Slika 7 ) med izrazom in stvarjo v realnem svetu šibkejša povezava , saj ni neposredne povezave , ker človek pri povezovanju pojmov in stvari v realnem svetu potrebuje predstavo .
Slika 7 : Vloga slovarja in ontologije v trikotniku pomena Slovar se v splošnem ukvarja z levo stranjo trikotnika ( izrazi in predstave ) , medtem ko je ontologija večinoma osredotočena na desno stran ( predstave in stvari v realnem svetu ) , kot to prikazuje Slika 7.
Slovar je v prvi vrsti klasifikacijski prostor v določeni domeni ali množici domen ali celo v širšem svetu , predvsem za potrebe iskanja in pridobivanja informacij .
Na drugi strani želi ontologija predstaviti zapleteno semantiko predstav in relacij med predstavami , njihovimi lastnostmi , vrednostmi , omejitvami in pravili .
Slika 8 prikazuje pogled razvijalcev na evolucijo podatkov , kjer je razviden vpliv podatkov na razvoj programske opreme ( Daconta , et al. 2003 , Lavbič 2005 ) .
Ideja o varovanju podatkov s pomočjo rezerviranih besed in metod za dostop povzroči dvig ravni pomembnosti podatkov tako , da postanejo enakovredni metodam , ki s temi 2. p og l a v j e | Ra z i s kova l no pod r o č j e podatki manipulirajo .
S prihodom XML-a , MDA-ja ( poglavje 2.3.3 ) in podpore meta podatkom v času izvajanja vstopamo v obdobje , kjer podatki postajajo bolj pomembni kot sintaktična pravilnost , ampak predvsem semantična .
Slika 8 : Pogled razvijalcev na podatke 2.2.2 OSNOVNI GRADNIKI IN FORMALNA OPREDELITEV Ključni element vseh aplikacij semantičnega spleta so ontologije ( Davies , et al. in formalna specializacija konceptualizacije problemske domene " ( Gruber 1993 ) .
Komplementaren del pa se uporablja za modeliranje razširjenega znanja in ga včasih imenujemo tudi baza znanja .
Ta razširjen del ontologije vsebuje trditve o primerkih konceptov in relacij , kot je temu analogno izrazno znanje ( ABox ) pri opisni logiki .
primerke razredov , vendar zaradi enostavnosti govorimo o lastnostih .
Razrede lahko tudi organiziramo v hierarhije tipa nadrazred in podrazred , kar Primerek ( ang. Individual ) je lahko primerek razreda oz. lastnost , ki medsebojno povezuje Predpostavka enoličnega imena ( ang. Unique Name Assumption ) .
Pri kompleksnejših primerih ontologij so dodane omejitve glede dovoljenih vrednosti razredov in lastnosti , kot so kardinalnost , velikost ipd.
Pri samem razvoju in implementaciji ontologije je vedno potreben razmislek , kaj bo aplikacija zahtevala v smislu izraznosti in mehanizmov sklepanja , saj vsi jeziki ne omogočajo predstavitev izbranih komponent na enak način .
Predstavitev in sklepanje na osnovi enostavnih informacij , kot so koncepti , taksonomije in preproste binarne relacije , pogosto niso dovolj , ko razvijamo kompleksnejše ontologije .
Razdelimo jih lahko v dve skupini , in sicer : • skupina osnovnih jezikov za predstavitev znanja in 2. p og l a vj e | Ra z i s kova l no pod r o č j e • skupina označevalnih jezikov za predstavitev ontologij , ki večinoma temeljijo na sintaksi XML .
Predstavljeni so tudi vplivi , ki so jih imeli določeni jeziki na razvoj novih jezikov .
Slika 10 : Kronološki pregled razvoja jezikova za predstavitev ontologij V nadaljevanju bosta podrobneje predstavljeni obe skupini z značilnimi predstavniki .
Jezik LOOM je bil sprva namenjen zgolj predstavitvi znanja , vendar je nadalje omogočal tudi predstavitev naslednjih komponent ontologij : koncepti , taksonomije , n-tere relacije , Pri deklarativni semantiki je za pomen izrazov v predstavitvi razumljiv brez uporabe Splošnost jezika KIF je v predstavitvi poljubnih stavkov v obliki predikatnega računa 1. reda .
S t r a n 22 2. p og l a v j e | Ra z i s kova l no pod r o č j e funkcije , aksiome in pravila .
Temelji na opisni logiki in produkcijskih pravilih ter omogoča samodejno klasifikacijo konceptov .
Protokol OKBC omogoča dostop do različnih sistemov za predstavitev znanja in s tem omogoča enoten model predstavitve znanja ter temelji na splošni konceptualizaciji razredov , primerkov , dedovanja ipd. 2.2.3.2 Označevalni jeziki za predstavitev ontologij Z razširjenostjo interneta se je začel razvoj jezikov za predstavitev ontologij , ki so temeljili na lastnostih svetovnega spleta , njihova največja vrednost pa se kaže v kontekstu semantičnega spleta .
Slika 11 : Označevalni jeziki za predstavitev ontologij V nadaljevanju bodo omenjeni jeziki tudi podrobneje predstavljeni .
XML je enostaven za analiziranje in 2. p og l a vj e | Ra z i s kova l no pod r o č j e razčlenjevanje , njegova sintaksa je dobro definirana in tudi berljiva človeškemu uporabniku .
Kot osnova za jezik XOL sta bila uporabljena jezika Ontolingua in OML , v katerih je bila združena visoka izraznost jezika OKBC ter sintakse OML-ja na osnovi jezika XML .
Razvoj ontologij v jeziku XOL ne podpira nobeno orodje , vendar temelji na jeziku XML , tako da lahko za oblikovanje dokumentov XOL uporabljamo tudi urejevalnike XML .
2.2.3.2.3 SHOE ( Simple HTML Ontology Extension ) SHOE je bil prvotno razvit kot razširitev jezika HTML , ki je vključeval dodane semantične podatke HTML drugim spletnim dokumentom , kar je omogočalo strojno berljivost dokumentov .
Programski agenti so lahko s pomočjo jezika SHOE zbirali informacije o spletnih straneh in dokumentih , izboljšali mehanizme iskanja in kopičili znanje .
Ta proces je bil sestavljen iz treh faz : definiranja ontologije , označitve strani HTML s semantičnimi podatki iz ontologij o vsebini dokumenta in kreiranja programskega agenta za osveževanje informacij s pomočjo iskanja preko vseh obstoječih strani .
Jedro OML je povezano z logičnimi vidiki jezika in je vključeno v vse ostale ravni .
Z izjavami v jeziku RDF < > 2. p og l a v j e | Ra z i s kova l no pod r o č j e Slika 12 : Primer izjave RDF RDF je v prvi vrsti sistem za modeliranje podatkov .
Problem integracije podatkov je tako preveden na preprosto poenoteno obravnavo vseh takšnih izjav RDF iz različnih podatkovnih virov .
Glede na to , da ta težava ni nova , se pri jeziku RDF uporablja že obstoječa rešitev svetovnega spleta – enolični identifikator vira ( URI ) .
Shema podatkovne baze zagotavlja podatke o glavi in ključne podatke o tabelah v relacijski podatkovni bazi .
V sami relacijski tabeli ni nobenega podatka , ki bi nakazoval pomen informacij v določenem stolpcu , ali da je izbrani stolpec uporabljen kot indeks .
Vsi ti podatki se nahajajo v shemi podatkovne baze , ki je neodvisna od relacije ( se ne spreminja od zapisa do zapisa ) .
Kot pri vseh novejših jezikih za opredelitev shem , je tudi RDF / S zapisan v odvisnem jeziku RDF .
Shema RDF razširja jezik RDF s konstrukti , kot so razredi , dedovanje razredov , lastnosti , dedovanje lastnosti , definicijsko območje in zaloga vrednosti .
Na ta način je možno delno procesiranje ontologije , v primeru , da agent , ki je sposoben procesiranja manj izrazne ontologije , ontologijo na višji ravni .
OWL je sestavljen iz • OWL Lite je primeren za problemske domene , kjer je potrebna le klasifikacija vrednosti 0 in 1.
Oznako OWL DL je jezik dobil zaradi skladnosti z opisno logiko .
Jeziku OWL Full lahko na primer razred obravnava kot množico posameznih razredov ali kot primerek ; to v jeziku OWL DL ni dovoljeno .
Opisane ravni OWL predstavljajo naraščajočo stopnjo izraznosti , kar pomeni , da višje ravni vsebujejo funkcionalnosti nižjih .
Trditve , predstavljene na nižjem nivoju , so veljavne tudi na višjem , obratno pa to ne velja .
Podatki zajeti v jeziku OWL se interpretirajo kot sklopi primerkov in sklopi lastnosti , ki primerke povezujejo med seboj .
Primer je " zakon " težnosti , ki očitno ni poslovno pravilo ; prav tako to niso matematična " pravila " .
Bolj pomembno vprašanje pri opredelitvi poslovnega pravila je pomen " pravila " .
Npr. pri obvladovanju poslovnih procesov je najbolj pogosta interpretacija poslovnega pravila kot kriterij v točkah odločitve procesnega modela .
V ostalih primerih pa so takšne točke lahko zelo zapletene , npr. ali naj zahtevo po izplačilu zavarovalne premije obravnavamo S t r a n 27 2. p og l a vj e | Ra z i s kova l no pod r o č j e kot odobreno , zavrnjeno ali kot morebitno goljufijo .
Področje poslovnih pravil izhaja z raziskovalnega področja umetne inteligence , kjer so jih uspešno uporabili kot način predstavitve znanja .
V sistemih za obvladovanje znanja lahko znanje in sklepanje novih dejstev poslovnih uporabnikov zajamemo v obliki kompleksnih omrežij pravil .
Pravila so shranjena v bazi pravil , medtem ko jih obdeluje posebna komponenta , ki se imenuje stroj za sklepanje .
Stroj za sklepanje preverja pogoje pravil in se odloča glede na izpolnjenost pogojev , katero pravilo je potrebno izvršiti ( Bajec and Krisper 2005 ) .
Veliko raziskovalcev se je ukvarjalo z uporabo poslovnih pravil v okviru podatkovnih baz .
Naslednja raziskava se je osredotočila na deduktivne podatkovne baze ( Gallaire , et al. 1984 ) .
Ko se je pojavila ideja o implementaciji poslovnih pravil v okviru sistemov za upravljanje s podatkovnimi bazami , se je veliko raziskav osredotočilo na odkrivanje metod za predstavitev poslovnih pravil v podatkovnih modelih ( Tanaka 1992 ) .
Zato so najprej nastale številne razširitve ( npr. ER-RM , BIER ipd. ) , kot tudi tehnike in metode ( npr. ELH pri SSADM , Rossova metoda ipd. ) .
Z vedno večjo priljubljenostjo poslovnih pravil se je pojavila tudi potreba po neposrednem obvladovanju poslovnih pravil zaradi podpore celotnemu življenjskemu ciklu poslovnih pravil .
Organizacija OMG se ukvarja tudi s predstavitvijo pomena v okviru poslovnih pravil , kjer je nastal predlog Semantic of Business Vocabulary and Business Rules ( SBVR ) .
V okviru svojega dolgoletnega delovanja so predstavili tudi manifest poslovnih pravil , kjer v sledečem seznamu predstavljamo zgolj nekaj ključnih elementov : Zahteve so na prvem mestu .
Pravila se primarno uporabljajo kot del poslovnih in tehnoloških modelov .
Ločitev od procesov in ne delitev po aplikacijah .
Pravila temeljijo na dejstvih in dejstva dejstva uvajajo trditve o teh konceptih ; pravila pa omejujejo in podpirajo ta dejstva .
Pravila so osnova znanja organizacije , t. j. osnova poslovnega znanja .
Poslovna pravila morajo biti zajeta v takšni obliki , da lahko njihovo ustreznost preverijo poslovni uporabniki .
Poslovna pravila morajo biti predstavljena tudi v takšni obliki , da jih lahko med seboj dosledno primerjamo .
Pravila opredelujejo poslovno prakso in smernice vodenja , podpirajo pa jih poslovni cilji in preoblikujejo različni vplivi .
V nadaljevanju poglavja bodo le-te v strnjeni obliki tudi predstavljene .
Področje poslovnih pravil in semantičnega spleta ima zelo različne ciljne uporabnike .
Medtem ko je pri pristopu obvladovanja poslovnih pravil eden od glavnih ciljev izboljšana komunikacija med uporabniki , je pri semantičnem spletu glavni cilj izboljšava komunikacije med računalniki .
Pri obeh pristopih pa je pričakovan stranski učinek tudi izboljšana komunikacija med uporabniki in računalniki .
Glede na različne ciljne uporabnike se oba pristopa nahajata na različnih ravneh pri OMG-jevi arhitekturi MDA .
Model ontologije se nahaja na izvajalni ravni , kar je pri MDA analogno ravni PSM , medtem ko se poslovni slovar in poslovna pravila nahajata na najvišji ravni CIM .
Pri razvoju ontologij se veliko raziskovalcev ukvarja z zmanjšanjem kompleksnosti razvoja ontologij , ki bi jih razvijali domenski eksperti ( poslovni uporabniki brez ustreznega tehničnega znanja formalne logike ali računalniškega programiranja ) in ne strokovnjaki , ki obvladajo formalno logiko ter razvoj ontologij .
Ravno s to težavo se ukvarjamo tudi v tej disertaciji , v kateri je podrobna rešitev predstavljena v obliki modela za hiter razvoj ontologij v poglavju 3.
Tehnike obeh področij , semantičnega spleta in poslovnih pravil imajo isti cilj , t. j. zajem pomena realnega sveta , neodvisno od izbrane aplikacije ali opravila .
Na ta način se modeli ontologije in poslovni slovarji razlikujejo od pristopov konceptualnega načrtovanja ( npr. UML ali ORM ) , ki so namenjeni predvsem opredelitvi domenskega znanja za izbrano aplikacijo .
Poslovni slovar in ontologijo sestavljajo medsebojno povezani koncepti in pravila ( npr. identiteta , kardinalnost , taksonomija ipd. ) , ki omejujejo pomen prvotno opredeljenih konceptov , tako da gre za predstavitev v podobni obliki .
Pri poslovnem slovarju pa lahko semantiko opredelimo tudi z opredelitvijo koncepta .
Pristop s poslovnimi pravili je tudi bolj osredotočen na naravni jezik oz. uporabniku berljiv način prikaza .
Pri semantičnem spletu pa mora biti vsak element , ki je del ontologije , skladen s formalnim jezikom , saj ga v nasprotnem primeru ni mogoče uporabiti na izvajalni ravni .
Zahtevana raven izraznosti je pri poslovnih pravilih visoka , saj vključuje logike višjega reda , predikatno logiko itd.
Zelo pomembna razlika pa je tudi v predpostavki zaprtega sveta , ki velja za sisteme za obvladovanje poslovnih pravil in predpostavki odprtega sveta , na kateri temeljijo jeziki za predstavitev znanja na semantičnem spletu .
S t r a n 30 2. p og l a v j e | Ra z i s kova l no pod r o č j e 2.3.3 PRISTOP MDA Če pogledamo zgodovino razvoja programske opreme , je opaziti izrazito povečanje uporabe abstraktnih modelov .
Tako je načrtovanje vedno bližje pridobivanju znanja , trenutno stanje na tem področju pa je zelo dobro predstavljeno v Model Driven Architecture ( MDA ) ( Đurić , et al. 2005 ) .
Pristop SBVR , ki smo ga že omenili v poglavju 2.3.1 , je zelo zanimiv , saj se loteva procesa razvoja poslovnih pravil in pomena poslovnega slovarja loteva na način , ki je skladen z arhitekturo MDA ( Slika 14 ) .
Slika 14 : Vloga SBVR pri pristopu MDA Pristop SBVR je usmerjen k opredelitvi poslovnih pravil in poslovnih slovarjev , kjer razviti poslovni modeli opisujejo ter podpirajo poslovne in ne sisteme IT. V okviru MDA so Računsko neodvisen model ( ang. Computation Independent Model ( CIM ) ) je pogled na sistem , ki ne prikazuje podrobnosti sistemske strukture .
Pri razvoju programske opreme ga imenujemo tudi domenski model , za katerega skrbijo domenski uporabniki .
Z drugimi besedami ga lahko opišemo kot model , namenjen tehnološko nevtralnim navideznim strojem .
Model odvisen od platforme ( ang. Platform Specific Model ( PSM ) ) vsebuje podrobne opredelitve računalniškega sistema .
Vendar je potrebno upoštevati tudi druge skupnosti , kjer podjetje obratuje – partnerska podjetja , interesne skupine , regulatorje ipd.
Pomemben vidik skupnosti so podskupine znotraj podjetja , ki morda potrebujejo jedro skupnega razumevanja ( začenši z osnovnimi koncepti ) v različnih besednjakih , od specializiranega žargona do različnih svetovnih jezikov .
Slika 15 : Meta model pristopa SBVR K jedru skupnega razumevanja prispeva skupnost , in to jedro je sestavljeno iz konceptov in poslovnih pravil .
Koncepti in poslovna pravila v jedru skupnega razumevanja morajo biti predstavljena v takšni obliki ( slovarju ) , ki je sprejemljiv in uporaben s strani poslovnih uporabnikov , ki to predstavitev poslovanja uporabljajo .
Prav tako pa s pristopom SVBR omogočimo pretvorbo poslovnih slovarjev in pravil v predikatni logiki 1. reda v implementacijo informacijskega sistema , za kar skrbijo uporabniki IT. 2.4 PREGLED METODOLOGIJ ZA RAZVOJ ONTOLOGIJ Že v uvodnem poglavju 1 smo ugotovili , da na področju metodologij za razvoj ontologij obstajajo številni pristopi , ki jih v okviru tega poglavja podrobneje predstavljamo .
Ogrodje primerjave metodologij za razvoj ontologij povzemamo po ( Corcho , et al. 2003 , Senica 2008 ) in se pri primerjavi osredotočamo na številne elemente in poglede .
Pri načrtu strategije izgradnje je pomemben načrt življenjskega cikla , strategija upoštevanja aplikacije , uporaba visokonivojskih ontologij in strategija identifikacije konceptov .
Zelo pomemben atribut je načrt procesa razvoja ontologije , v katerem lahko aktivnosti pri metodologijah za razvoj ontologij razdelimo v naslednje skupine : • Aktivnosti upravljanja z ontologijo Postopki pri aktivnostih upravljanja z ontologijo morajo vsebovati načrt razvrščanja nalog pri razvoju ontologije .
• Aktivnosti razvoja ontologije Pri razvoju ontologije je pomembno , da so opredeljeni postopki za študije izvedljivosti in okolja , za katerega je ontologija razvita .
Ob začetku gradnje mora razvijalec ontologije opredeliti postopke in ontologijo konceptualizirati , formalizirati in implementirati .
• Spremljevalne aktivnosti Pri podpori razvoja ontologij so prisotne številne aktivnosti od pridobivanja znanja do vrednotenja , integracije , združevanja , razvrščanja , upravljanja s konfiguracijami itd.
Pri pregledu obstoječih metodologij pa upoštevamo tudi uporabo metodologije ( sprejetost s strani drugih razvojnih skupin ) in tehnološko podporo ( obstoj orodij ) .
V nadaljevanju poglavja bodo podrobneje predstavljene obstoječe metodologije , medtem ko bo v poglavju 3 predstavljen predlagan proces hitrega razvoja ontologij .
Slika 13 umešča proces ROD in obstoječe pristope glede na dva vidika : primernost za poslovnega uporabnika in kompleksnost razvite ontologije .
Na desni strani diagrama se nahajajo najbolj kompleksne metodologije , ki omogočajo tudi razvoj najbolj izraznih in popolnih ontologij .
Termini , kot sta atribut in vrednost atributa , so primeri terminov za predstavitev znanja .
Metodologija Cyc se je uporabljala v raziskovalnih programih za razvoj visoko zmogljivih baz znanj za izboljšanje tehnologije računalniškega pridobivanja , predstavitve in manipulacije z znanjem .
Omenjena metodologija se uporablja samo pri gradnji baze znanja Cyc , kljub temu pa ima Cyc tudi nekaj primerov uporabe , ki prikazujejo znanje v različnih domenah in z različnih pogledov .
Za aplikacije , ki uporabljajo ontologijo Cyc , obstaja več modulov in mehanizmov sklepanja , ki so že vgrajeni v bazo znanja Cyc .
Eden izmed njih je sistem za integracijo heterogenih podatkovnih baz .
Na ta način se podatki v podatkovnih bazah interpretirajo na način , ki se uporablja v slovarju Cyc .
Naslednji modul pa omogoča razširitev baze znanja Cyc z informacijami s svetovnega spleta .
Poleg modulov je bilo razvitih nekaj agentov Cyc , ki uporabljajo osnovno znanje iz baze Cyc , ostalo pa iz specifičnih domen agentov .
Projekt Cyc je močno povečal prepoznavnost tehnologij na področju obvladovanja znanja , hkrati pa je njegova večja pomanjkljivost ravno dejstvo , da so želeli v okviru projekta zmodelirati " celoten svet " .
Med samim izvajanjem projekta se je ta kompleksna naloga razdelila na manjše dele , tudi z razdelitvijo višjenivojske ontologije .
2.4.2 ENTERPRISE ONTOLOGY Metodologija Enterprise Ontology je nastala pri razvoju ontologije za modeliranje procesov in predpisuje navodila ter korake za razvoj ontologij , ki so naslednji : 1.
Gradnja ontologije a. Zajem ontologije Namen zajema ontologije je identifikacija ključnih konceptov in relacij v izbrani problemski domeni .
Rezultat je ontologija z visoko ravnjo podrobnosti .
Rezultat je ontologija , v kateri lažje obvladujemo raven podrobnosti .
Rezultat je ontologija , v kateri dobimo ravnovesje med ravnmi podrobnosti .
c. Integracija obstoječih ontologij Med procesom zajema in kodiranja ontologije je potrebno razmisliti o uporabi in vključevanju že obstoječih ontologij .
Prav tako so nekateri koraki , kot je npr. zajemanje znanja , premalo podrobno opredeljeni .
Omenjena metodologija je imela zelo velik vpliv na kasnejše pristope za razvoj ontologij .
2.4.3 TOVE Metodologija je nastala na podlagi izkušenj iz projekta TOVE , kjer so razvili ontologijo v okviru problemske domene modeliranja poslovnih procesov in aktivnosti .
Model sicer ni zgrajen neposredno , ampak se naprej opredeli neformalen opis na podlagi specifikacije ontologije , nato pa se ta opis formalizira .
Metodologija predlaga naslednje korake : 1.
S pomočjo ontologije moramo biti sposobni odgovoriti na omenjena vprašanja z uporabo opredeljenih konceptov , ki temeljijo na aksiomih .
Vprašanja kompetence so strukturirana tako , da se odgovor na določeno vprašanje lahko uporabi tudi kot odgovor pri bolj splošnem vprašanju iste ali druge ontologije , kar dosežemo s pomočjo operacij kompozicije in dekompozicije .
Namen vprašanj je opredelitev omejitev , kaj vse ontologija vsebuje .
Vprašanja kompetence se lahko uporabijo tudi za oceno , ali ontologija vključuje vse zahteve .
Določitev terminologije v jeziku opisne logike prvega reda a. Zbiranje neformalne terminologije Na podlagi vprašanj kompetence lahko opredelimo osnovne pojme , ki jih je potrebno zajeti v naši problemski domeni .
b. Specifikacija formalne terminologije Na podlagi neformalnih vprašanj kompetence se pri ontologiji določi terminologija ontologije s pomočjo izbranega jezika .
Ti pojmi kasneje v 5. koraku omogočajo izražanje opredelitev in omejitev s pomočjo aksiomov .
Opredelitve aksiomov s pomočjo jezika opisne logike prvega reda Aksiomi v ontologiji določajo opredelitev konceptov ontologije in omejitve pri njihovi interpretaciji .
Preprosta opredelitev konceptov v logiki prvega reda nam ne zagotavlja uporabne ontologije , temveč potrebujemo za opredelitev semantike še dodatne omejitve v obliki aksiomov .
Razvoj aksiomov je tako očitno iterativen proces .
Omenjena metodologija ne vključuje procesov , ki potekajo pred in po razvoju ontologije ter procesov upravljanja projekta .
Slika 17 : Razvojne faze metodologije TOVE 2.4.4 KACTUS Metodologija je nastala v okviru projekta Esprit KACTUS , po katerem nosi tudi ime .
Eden izmed ciljev omenjenega projekta je bil raziskati možnosti ponovne uporabe znanja v kompleksnih tehničnih sistemih s pomočjo ontologij .
Pristop razvoja ontologij je v tem primeru pogojen z razvojem aplikacije , kjer se ob novi aplikaciji vedno zgradi tudi ontologija , ki vključuje potrebno znanje za aplikacijo .
Osnovni načrt , ki temelji na povezanih kategorijah višjenivojskih ontologij .
Proces načrtovanja vključuje tudi iskanje obstoječih ontologij za druge aplikacije .
Življenjski cikel ontologij , razvitih s to metodologijo , je podoben življenjskemu ciklu aplikacije , na katero se nanaša , zato je tudi sam proces razvoja ontologij aplikacijsko odvisen .
Razvojni proces namreč temelji na aktivnostih standarda IEEE za razvoj programske opreme , aktivnosti pa so razdeljene v življenjski cikel , skozi katerega potuje ontologija po določenih stopnjah , kjer se te aktivnosti izvedejo .
Pri gradnji ontologije se najprej opredeli konceptualni model , ki se kasneje preslika v formaliziran model .
Slika 18 : Zapis ontologije v metodologiji METHONTOLOGY 2.4.5.1 Razvojni proces ontologij Proces opredeljuje aktivnosti , ki se izvedejo pri gradnji ontologije in jih delimo v naslednje kategorije : • Aktivnosti upravljanja z ontologijo vključujejo planiranje , kontrolo in zagotavljanje kakovosti .
Pri planiranju se opravi identifikacija nalog , ki jih je potrebno opraviti , njihova priprava in izračun potrebnega časa in virov ( ljudje , programska oprema , strojna oprema ) .
Aktivnost zagotavljanja kakovosti preverja kakovost rezultatov metodologije ( ontologije , programska oprema , dokumentacija ipd. ) .
V aktivnosti konceptualizacije se domensko znanje strukturira v razumljive modele na nivoju znanja .
Po razvoju aktivnost vzdrževanja skrbi za posodabljanje in morebitne popravke ontologije .
S t r a n 39 2. p og l a vj e | Ra z i s kova l no pod r o č j e • Podporne aktivnosti se izvajajo sočasno z razvojno usmerjenimi aktivnostmi .
Aktivnost integracije se izvede v primeru ponovne uporabe drugih ontologij , in sicer pri spajanju ali združevanju .
Rezultat spajanja je nova ontologija , medtem ko združevanje vzpostavi le povezave med obstoječimi ontologijami in tako ohranja njihovo obliko .
Proces razvoja predstavlja aktivnosti , ki se morajo izvesti , vendar ne opisuje , kdaj katera aktivnost nastopi in kako si morajo le-te slediti .
Vsak cikel se začne s planiranjem aktivnosti , ki zajemajo načrtovanje opravil in virov .
in sicer najprej specifikacija , vzporedno pa se pričnejo odvijati aktivnosti upravljanja , kontrole in zagotavljanja kakovosti ter podporne aktivnosti – zajemanje znanja , integracija , vrednotenje , dokumentiranje in upravljanje konfiguracij ( Slika 19 ) .
Slika 19 : Razvojni proces in življenjski cikel metodologije METHONTOLOGY V vsakem ciklu gre prototip ontologije skozi vse razvojne aktivnosti ( specifikacija , konceptualizacija , formalizacija , implementacija in vzdrževanje ) .
V vsakem razvojnem ciklu potekajo naslednji koraki : • specifikacija prototipa , • izgradnja konceptualnega modela iz znanja , pridobljenega v sklopu aktivnosti zajemanja znanja , ki večinoma poteka med konceptualizacijo , • formalizacija konceptualnega modela , • implementacija formaliziranega konceptualnega modela ( lahko se izvede samodejno , če je na voljo avtomatizirana preslikava iz formalizacije v jezik za implementacijo ontologije ) in • vzdrževanje ontologije , ki lahko vodi tudi do novega razvojnega cikla , če zahteve niso dosežene ali se pojavijo nove .
Kot je bilo že prej omenjeno , podporne aktivnosti in aktivnosti upravljanja potekajo vzporedno z razvojnimi aktivnostmi , medtem ko vključenost podpornih aktivnosti ni enakomerna skozi celoten življenjski cikel ontologije .
Na začetku razvoja se zajame največ znanja , ontologije se na konceptualni ravni integrirajo pred implementacijo , priporočljivo pa je tudi izvajanje natančnega vrednotenja v fazi konceptualizacije , tako da se izognemo kasnejšim napakam .
2.4.6 SENSUS Ontologija SENSUS se uporablja za procesiranje naravnih jezikov in obsega široko konceptualno strukturo za razvoj strojnih prevajalnikov .
Baza ontologije je bila razvita s spajanjem dveh višjenivojskih lingvističnih ontologij in semantičnih kategorij slovarja , kasneje pa sta bila dodana še španski in japonski besednjak .
Vključuje pojme na višji in srednji ravni abstrakcije , v splošnem pa ne vsebuje pojmov iz specifičnih domen .
Za izgradnjo domenskih ontologij se domenski pojmi povezujejo z ontologijo SENSUS , nepotrebni pojmi v ontologiji pa se odstranijo .
2.4.6.1 Razvojni proces Metodologija uporablja strategijo od sredine navzven za izpeljevanje domenskih ontologij iz večje ontologije .
Zbirka pojmov je osnova , 2. pojmi se ročno povežejo z ontologijo SENSUS , 3. vključeni so vsi koncepti in poti od osnovnih pojmov do korena ontologije SENSUS , 2. p og l a vj e | Ra z i s kova l no pod r o č j e 4. vključijo se še dodatni pojmi , ki so v okviru domene pomembni , 5. vozlišča , skozi katera poteka veliko poti , se vključijo v ontologijo v obliki celotnega poddrevesa .
Omenjen pristop spodbuja skupno rabo znanja , saj je osnovna ontologija vedno uporabljena za razvoj ontologij v določenih domenah .
Slika 20 : Pristop SENSUS k razvoju ontologij 2.4.7 COMMONKADS CommonKADS ni prava metodologija za razvoj ontologij .
Uporabljena notacija je združljiva z jezikom UML , orodji za podporo metodologiji pa sta PC PACK in KADS22 , ki omogočata sodelovanje inženirjev znanj in domenskih strokovnjakov .
Metodologija je pomembna predvsem zaradi dejstva , da je uporabljena kot osnova številnim drugim pristopom .
Ontologija je pri tem pristopu razdeljena na dva dela : • Jedro ontologije je sestavljeno iz možnih konceptualizacij domene iz realnega sveta .
Slika 21 : Pristop DOGMA k razvoju ontologij 2.4.9 OTK METHODOLOGY Metodologija OTK je bila razvita v okviru evropskega projekta On-To-Knowledge , pri katerem so se ukvarjali s predstavitvijo in vzdrževanjem aplikacij , ki upravljajo z znanjem v podjetjih na podlagi ontologij .
Slika 22 : Ortogonalna procesa razvoja metodologije OTK Metodologija se deli na dva tipa procesov ( Slika 22 ) : • razvoj znanja in • meta razvoj znanja .
Proces razvoja znanja se ukvarja predvsem z uporabo ontologij , medtem ko se meta razvoj znanja ukvarja z začetnim razvojem in vzpostavitvijo ontologije .
2.4.9.1 Proces meta razvoja znanja Slika 23 prikazuje proces meta razvoja znanja , ki ga sestavlja pet osnovnih korakov .
Vsak korak vsebuje številne podkorake , na koncu pa zahteva odločitev o zadostitvi zahtevam ter specifične rezultate .
Na razvoj takšnih aplikacij ima vpliv tudi proces razvoja programske opreme in človeške ugotovitve .
Slika 23 : Koraki meta procesa razvoja metodologije OTK 2.4.9.2 Proces razvoja znanja Po vzpostavitvi aplikacije za upravljanje z znanjem v organizaciji se proces razvoja znanja izvaja v naslednjih korakih ( Slika 24 ) : • Kreiranje znanja in uvažanje dokumentov ter meta podatkov .
• Opredelitev pomembnosti oz. povezanosti zajetega znanja z obstoječim znanjem , kjer se opredelijo tudi povezovalni meta podatki .
Slika 24 : Proces razvoja znanja pri metodologiji OTK 2. p og l a v j e | Ra z i s kova l no pod r o č j e Pri metodologiji OTK za razvoj ontologij je zelo pomembno , da so napotki domenskim strokovnjakom zelo strokovni .
Sodelovanje pri razvoju ontologij zahteva fizično prisotnost in tudi napredno podporo orodij .
Omenjena metodologija je zelo podrobno opisana in vsebuje tudi aktivnosti upravljanja projekta ter aktivnosti , ki se izvajajo pred in po razvoju .
Razvoj ontologije je podprt skozi celoten življenjski cikel , kar posledično pripelje do uporabne ontologije .
Za dosego tega cilja pa morajo biti opravila za upravljanje ontologij informacij .
• skupinsko obravnavanje kritik , • primerjava različnih verzij , • uporaba dogovorjenih ontologij , • vključevanje izvlečkov v ontologije .
Pri razvoju ontologij po metodologiji DILIGENT sodelujejo številni strokovnjaki z različnimi znanji , ki se med seboj dopolnjujejo , vsi skupaj pa sodelujejo pri izdelavi iste ontologije .
Odgovoren je tudi za nadgrajevanje , ki je ponavadi posledica lokalnih sprememb uporabnikov , ki se nato prenesejo celoten proces pa kontrolira nadzorni svet .
Proces se prične z gradnjo začetne ontologije , pri kateri sodeluje manjša skupina domenskih strokovnjakov , uporabnikov in razvijalcev ontologije , kjer skušajo najti majhno in sporazumno prvo verzijo skupne ontologije .
Pri tem lahko prosto spreminjajo lokalno verzijo ontologije , ne pa tudi skupne ontologije , za katero nadzorni svet zbira predloge za spremembe in beleži lokalne prilagoditve .
Nadzorni svet analizira uporabniške predloge za spremembe in skuša najti podobnosti med ontologijami uporabnikov .
Pri tem je glavna aktivnost odločanje , katere spremembe bodo dodane naslednji verziji ontologije , v kateri se poskuša najti ravnotežje med potrebami in zahtevami uporabnikov .
Nadzorni svet mora redno posodabljati skupno ontologijo , da se lokalne verzije ne oddaljijo preveč od skupine .
Pri tem sodelujejo uporabniki s predlogi za spremembe , domenski strokovnjaki potrdijo skladnost sprememb s problemsko domeno , razvijalci ontologij pa skrbijo za tehnično izvedbo sprememb .
Namen razvoja , ki temelji na primerih uporabe , je izdelati ontologijo , ki čim bolj ustreza uporabnikom – ljudem in programskim agentom .
Rezultat cikla je vedno nova verzija ontologije .
Vsaka faza se naprej deli na iteracije , kjer pri vsaki iteraciji poteka pet delovnih tokov : zajem zahtev , analiza , načrtovanje , implementacija in testiranje .
Začetne faze se bolj osredotočajo na zajem zahtev , poznejše pa ontologijo razširjajo in dopolnjujejo .
Zajem zahtev je proces opredelitve znanja , ki bo v ontologiji zajeto .
Koraki so naslednji : a. opredelitev problemske domene , b. opredelitev razloga ( motivacijski scenarij ) in namen razvoja , c. opredelitev področja in obseg delovanja , d. identifikacija vprašanj kompetence in e. izdelava diagramov primerov uporabe .
Rezultat tega delovnega toka je model analize .
Načrtovanje sestavljajo naslednji koraki : 2. p og l a v j e | Ra z i s kova l no pod r o č j e a. strukturiranje konceptov in relacij ( opredelitev razrednih diagramov ) in b. realizacija primerov uporabe ( opredelitev diagramov zaporedja in sodelovanja ) .
Rezultat tega delovnega toka je model implementacije .
Testiranje omogoča preverjanje pravilnosti zajetih specifikacij , kjer je razvitih več testnih primerov , ki testirajo skladnost z zahtevami .
V primerjavi s standardom IEEE razvoja programske opreme metodologija UPON vključuje podporo procesom razvoja , dokumentiranja , vrednotenja in zajemanja zahtev , ne vključuje pa procesa upravljanja projekta in procesov pred in po razvoju ontologij .
2.5 PREGLED PRISTOPOV ZA EVALUACIJO ONTOLOGIJ V literaturi obstajajo številni pristopi za evaluacijo ontologij .
Glede na pregled obstoječih pristopov v ( Gómez-Pérez 1999 , Hartmann , et al. 2004 , Brank , et al. 2005 , Gangemi , et al. 2006 ) lahko le-te klasificiramo v naslednje kategorije : • primerjava ontologije s t. i. zlatim standardom ( Maedche and Staab 2002 ) , • uporaba ontologije v aplikaciji in evaluacija rezultatov ( Porzel and Malaka 2004 ) , • primerjava s podatki o problemski domeni , ki jo ontologija zajema ( Brewster , et al. 2004 ) , • evaluacija s strani uporabnikov ( Lozano-Tello and Gómez-Pérez 2004 , Noy , et al. 2005 ) .
Pred uporabo ontologije v programu je potrebno zagotoviti , da je ontologija brez napak .
Avtorji v ( Porzel and Malaka 2004 ) predlagajo opravilno usmerjen pristop k evaluaciji ontologije .
Implementacija evOWLution vsebuje strategije za evaluacijo različnih konstruktov jezika za zapis ontologij in strategije za evaluacijo logične načrtovalci ontologije merijo ustreznost obstoječih ontologij glede na zahteve njihovih sistemov .
Pristop , ki ga predlagajo avtorji v ( Noy , et al. 2005 ) , temelji na označevanju ontologij s strani uporabnikov na odprt način in temelji na uporabi spletnega brskalnika za Protégé26 ontologije .
Omogočanje označevanja in pregledovanja ontologij spletnim uporabnikom je zelo pomemben korak pri pospeševanju evaluacije ontologij in ponovni uporabi .
Slika 28 prikazuje različna vidika , ki jih proces razvoja ontologij ROD obravnava .
Slika 28 : Različna vidika na proces razvoja ontologij ROD Vidik ponovne uporabe temelji na treh enostavnih korakih , ki jih prikazuje Slika 29.
Na tem mestu se pospešuje mantra semantičnega spleta ter govori o razvoju takšnih komponent , ki se lahko ponovno uporabijo .
Poslovni uporabnik najprej začne z zajemom konceptov , medsebojnih relacij in omejitev nad koncepti in relacijami .
Zadnji korak pri procesu razvoja ontologije je uporaba ontologije s kreiranjem funkcionalne komponente za uporabo v drugih sistemih .
Na ta način omogočimo nenehno preverjanje popolnosti ontologije in vodimo uporabnika skozi korake razvojnega cikla .
Slika 29 : Poenostavljen pogled na model za hiter razvoj aplikacij 3.2 PROCES RAZVOJA Proces razvoja ontologij po principu modela hitrega razvoja ontologij ROD je sestavljen iz 3 faz : predrazvoj , razvoj in porazvoj , kot to prikazuje Slika 30.
V fazi predrazvoja je rezultat študija izvedljivosti , ki se nato uporablja v poznejših fazah razvoja opredelitve osnovnega modela in modela implementacije .
Do tega modela pridemo v zadnji fazi , v kateri kreiramo funkcionalne komponente za uporabo v ostalih sistemih .
Slika 30 : Proces hitrega razvoja ontologij 3.2.1 PREDRAZVOJ 3.2.1.1 Študija izvedljivosti Prvi korak v fazi predrazvoja se ukvarja s študijo izvedljivosti problemske domene ( korak 1 ) .
Pri opisu projekta se uporablja naravni jezik , prav tako pa moramo pripraviti seznam vseh virov , ki vsebujejo pomembne informacije o projektu , da jih bomo lahko kasneje vključili v proces razvoja .
Ti viri vključujejo relacijske in analitične podatkovne baze , tekstovne datoteke , dokument Office in PDF , spletne strani in reference na ostale ontologije .
Faza razvoja je razdeljena na številne aktivnosti : zajem poslovnega slovarja ( korak 2.1 ) , seznam primerov konceptov in lastnosti ( korak 2.2 ) , identifikacija taksonomije ( korak 2.3 ) , identifikacija ad hoc relacij ( korak 2.4 ) , opis atributov in relacij konceptov ( korak 2.5 ) in dodajanje kompleksnih omejitev in pravil ( korak 2.6 ) .
Zelo pomemben element omenjene faze je nenehna evaluacija razvite ontologije s pomočjo indikatorja popolnosti ontologije , ki je podrobneje predstavljen v poglavju 3.3. 3.2.2.1 Zajem poslovnega slovarja korak faze razvoja je konceptov in ad hoc relacij v ustvarjati podrobnostmi , kot je ime koncepta , opis v naravnem jeziku in sinonimi29 .
Pristop pogosto prikazujemo analogno " črni škatli " , saj na takšen način lažje obvladujemo probleme .
procesu ROD pa poleg tega predlagamo še neformaliziran pristop .
Takšen način razvoja omenjajo v okviru izboljšav številni obstoječi pristopi ( Davies , et al. 2006 ) , saj se je neformalni .
Predlagane tehnike za zajem ontologije so naslednje : • • • vnos poslovnih pravil v uporabniku prijazni obliki .
Obstoječe vzorcev pri zgodnjih fazah načrtovanja , saj se izkaže , da stroga formalizacija na tem mestu ni primerna .
Veliko raziskav s področja asociativnega razmišljanja ( Chakrabarti , et al. 2000 , Cole , et al. 2002 , Ware 2004 ) in vizualizacije podatkov ( Spence and Apperley 1982 , Furnas 1986 , Sarkar and Brown 1994 ) je prav tako potrdilo dejstvo , da različne tehnike , ki upoštevajo kontekst v veliki meri , poenostavijo obvladovanje podatkov .
Povezava med dvema točkama se vedno preslika v lastnost , medtem ko se točka po potrebi preslika v razred ali eno od lastnosti ( podatkovna oz. objektna ) .
Naslednja tehnika je identifikacija konceptov in relacij iz opisa v naravnem jeziku , ki se aplicira na opis projekta iz študije izvedljivosti in vse identificirane dodatne vire ( tekstovne datoteke , dokumente Office in PDF , spletne strani ipd. ) .
Temelje analize besedil najdemo na področjih analize naravnega jezika , umetne inteligence in strojnega učenja .
Najenostavnejše metode temeljijo na analizi besed ter se nadgrajujejo s sinonimi , koncepti , hierarhijo konceptov , relacijami ter pravili .
Slika 32 : Gradnja ontologije s pomočjo analize besedila Na semantičnem spletu so na voljo številne rešitve , storitve in pristopi , ki to olajšujejo .
po g l a v j e | Mo d e l z a h i t er r a z v o j o n t o l o g i j Slika 34 : Gradnja ontologije s pomočjo odločitvenega drevesa Pri pristopu ROD zato uvajamo naslednje mehanizme za lažje obvladovanje pravil : • enostavna pravila ( Slika 33 ) , • odločitvena drevesa ( Slika 34 ) in • odločitvene tabele ( Slika 35 ) .
Slika 35 : Gradnja ontologije s pomočjo odločitvene tabele Podrobnosti zajema znanja v omenjenih oblikah so predstavljene v razdelku 3.2.2.6 , v katerem je poudarek na dodajanju kompleksnih omejitev in pravil .
3.2.2.1.2 Semantično opisovanje virov Pri semantičnem opisovanju virov sledimo pristopu od spodaj navzgor , olajšati želimo načrtovanje z uporabo gradnikov , ki jih bomo kasneje tudi potrebovali .
V okviru konzorcija W3C deluje interesna skupina W3C SWEO Linking Open Data35 , ki želi razširiti obstoječi splet podatkov v odprti obliki s pomočjo jezika RDF in medsebojno ki so medsebojno semantično povezani in vsebujejo kar 4,7 milijard trojic RDF ter 142 milijonov medsebojnih povezav ) .
S pomočjo povezav RDF lahko zelo enostavno krmarimo med podatki v okviru enega podatkovnega vira ter povezanimi podatki v ostalih virih .
Te povezave lahko izkoriščajo tudi spletni pajki , ki iščejo po semantičnem spletu .
Prednost tako pridobljenih podatkov je predvsem v obliki rezultata , saj na takšen način dobimo strukturirane podatke , ki jih lahko neposredno uporabimo v drugih aplikacijah , in ne zgolj povezave na spletne strani HTML , kjer so podatki v nestrukturirani obliki .
http://esw.w3.org/topic/SweoIG/TaskForces/CommunityProjects/LinkingOpenData/ Slika 36 : Medsebojno povezani spletni viri , ki so nastali v okviru projekta W3C SWEO Linking Open Data ( LOD ) Interne vire v organizaciji , ki bi jih prav tako radi uporabili pri razvoju semantično obogatenih informacij in še niso predstavljeni v strukturirani obliki , pa lahko s pomočjo vmesnikov ravno tako pripravimo v strukturirani obliki .
Pri semantičnem opisovanju virov bi za vsakega od pogostih virov opredelili postopek , ki uporabniku omogoča enostavno vključitev v ontologijo .
Rezultat procesa semantičnega opisovanja vira je ontologija vira , ki jo lahko poljubno uporabimo v semantično obogateni aplikaciji .
Viri , ki so podprti v okviru razvoja ontologij ROD , so naslednji : • shema podatkovne baze , • podatki CSV , • spletni viri ( WS , RSS , HTML ipd. ) , • strukturirana poročila in • obstoječe ontologije .
Pri podatkih , shranjenih v podatkovnih bazah , lahko potrebne podatke črpamo kar neposredno iz logičnega modela , pogosteje pa kar iz fizičnega modela v obliki tabel , relacij in omejitev .
Pri omenjenem postopku ( Slika 37 ) najprej izberemo tabele , ki jih potrebujemo , in nadaljujemo z izbiro ustreznih atributov , medsebojnih relacij in kasneje po potrebi te elemente še dodatno opišemo ( npr. omejitve ( referenčne integritete ) nad tabelami in nekatera imena atributov , ki nimajo uporabniku prijaznih imen , zato je na tem mestu potrebno dodati opise v naravnem jeziku ) .
o n t o l o g i j Delno samodejna pretvorba ter dodatno opisovanje elementov ID datum Leto Četrtletje Mesec Dan v mesecu Teden Dan v tednu Delovni dan .
: steviloProdanihArtiklov : kategorija : proizvajalec ID artikla Naziv Cena Znamka Proizvajalec Cenovni razpon Kategorija Podkategorija Slika 37 : Pretvorba sheme podatkovne baze v ontologijo Zelo veliko podatkov je mogoče najti v obliki CSV36 , ki je najpreprostejši zapis podatkov .
Podatki , ki jih na ta način dobimo , se nahajajo v 1.
Višja kot je normalna oblika , manj so podatki izpostavljeni nedoslednostim .
Slika 39 : Ponovna uporaba obstoječih ontologij Kjer je le mogoče , se pri izgradnji semantično obogatenih aplikacij spodbuja ponovna uporaba ( Slika 39 ) bodisi z dinamičnim ali statičnim uvozom .
Podprto je iskanje po ontologijah semantičnega spleta ( npr. iskalnik Swoogle38 ) , uporaba podatkov iz virov , ki so povezani v okviru projekta LOD , ter uvoz podatkov iz splošnih ontologij , kot je Cyc39 , OpenGALEN40 , WordNet41 idr. 3.2.2.1.3 Problemi pri združevanju ontologij Pri združevanju različnih ontologij virov in globalnega pogleda na problemsko domeno se pojavijo številne težave in neskladja .
Uporabnik ima za pogoste napake na voljo način razrešitve s pomočjo indikatorja popolnosti ontologije OC ( podrobneje predstavljen v poglavju 3.3 ) in drugih pristopov za lažjo integracijo ontologij .
WordNet je zelo obširna baza znanja v angleškem jeziku , ki je slovarskega tipa .
o Neusklajenost na meta ravni lastnosti in koncepta ( npr. v eni ontologiji uporabimo lastnost naslov , v drugi pa koncept lastnost ) .
o Neusklajenost na meta ravni podatka in lastnosti .
o Semantična raznovrstnost podatkov v obliki različnih formatov identičnih informacij .
• Konflikti glede skale in valute ( npr. $ 100 v enem primeru in 100 € v drugem ) .
• Konflikti vključevanja ( npr. letna prodaja je del skupne prodaje ) • Konflikti prekrivanja ( npr. evropski poslovni partnerji v eni ontologiji imajo določen presek s ponudniki računalnikov v drugi ontologiji ) .
• Nekonsistentnost in podvojenost o Natančnost podatkov ( npr. vrednost 0,9999 v enem viru in 1 v drugem ) .
3.2.2.2 Seznam primerkov konceptov in lastnosti Drugi korak faze razvoja je identifikacija seznama primerkov konceptov in lastnosti .
V prejšnjem koraku smo opredelili enostavno shemo problemske domene , medtem ko mora uporabnik v tem koraku podati dejanske primere konceptov in relacij ( primerke razredov in lastnosti ) .
Vsak koncept in tudi relacija morata imeti opredeljene primere iz realnega sveta ( npr. primerki delnic pri trgovanju s finančnimi inštrumenti bi lahko bili AAPL , S t r a n 61 3 .
3.2.2.3 Identifikacija taksonomije Tretji korak faze razvoja je prejšnjega koraka .
3.2.2.4 Identifikacija ad hoc relacij Korak faze razvoja identifikacija ad hoc relacij je analogen prejšnjemu , a s to razliko , da je v tem koraku pod drobnogledom identifikacija podlastnosti in ekvivalentnih lastnosti .
Do tega trenutku imamo opredeljeno enostavno ontologijo , zato mora uporabnik dodatno opisati koncepte z lastnostmi in omogočiti sprehod med posameznimi koncepti s pomočjo medsebojnih relacij .
Pri odločitvi za tip relacije moramo odgovoriti na vprašanje , ali relacija koncept povezuje z atomarnim podatkom ( npr. leto , opis , število elementov ipd. ) ali je sestavljena ( npr. trgovalni dan ) , kar vodi do nadaljnje dekompozicije .
Pri kompleksnih relacijah ( Slika 138 ) imamo na voljo dve možnosti : povezovanje relacije z obstoječim konceptom kompleksne relacije .
Podrobnosti posameznih korakov lahko najdete v razdelku 4.1.1.1.1 Sprehod po semantični mreži in dodajanje omejitev .
Kardinalnost ( ang. cardinality ) omejuje število dejanskih primerkov povezav , ki so povezani s primerki razreda .
Operativna pravila največkrat vnašamo v KAJ-ČE obliki , v primeru večkratne odvisnosti med pogoji pa so pogosto bolj primerni pogledi odločitvene tabele in odločitvenega drevesa .
Odločitveno drevo je še posebej uporabno kot grafična predstavitev toka odločitev .
Odločitvena tabela pa je primerna predvsem takrat , ko moramo opisati več pogojev v strnjeni obliki .
Vsak atom pravila zajamemo s pomočjo obrazca , ki se razlikuje glede na tip atoma .
Slika 40 : Primer obrazca za zajem atoma Obrazec atoma sestavljajo argumenti in povezovalno besedilo , ki smiselno povezuje argumente izbranega atoma .
Vezni tekst je lahko vnaprej opredeljen , lahko pa se tudi dinamično pridobi iz sheme ontologije ( npr. pri entitetah se namesto imena prikaže opis v naravnem jeziku , ki ga morajo uporabniki opredeliti že pri koraku 3.2.2.1 , v katerem se zajame poslovni slovar ) .
Primerke razredov in obstoječe spremenljivke izbiramo iz seznama , v katerem se upoštevajo omejitve ontologije ( npr. domena , zaloga vrednosti , kardinalnost ipd. ) .
S pomočjo omenjenih obrazcev uporabniku omogočimo vnašanje naprednih omejitev ontologije v obliki blizu naravnega jezika .
Zato pristop poleg zajema pravil v kaj-če obliki predvideva tudi zajem v obliki odločitvene tabele in odločitvenih dreves .
Če del pravila imenujemo tudi telo pravila , medtem ko je kaj del glava pravila .
( Posledica n ) Slika 41 : Zajem pravila v kaj-če obliki Slika 42 prikazuje primer pravila iz ontologije FITS , v kateri opredeljujemo prodajni signal na podlagi » engulfing « trgovalnega vzorca .
Slika 42 : Primer pravila v kaj-če obliki 3.2.2.6.1.2 Odločitvena tabela Odločitvena tabela ima v začetnih stolpcih najprej opredeljene pogoje , nadaljnji stolpci pa predstavljajo posledice .
Če imamo pogojev , potem je največje število stolpcev v tabeli enako 2 , ki predstavlja vse možne kombinacije pogojev , kjer lahko opredelimo poljubne posledice .
Takšna tabela združuje več kaj-če pravil , kjer vsaka vrstica predstavlja novo kaj-če pravilo .
Zajem pravil na takšen način je uporaben predvsem takrat , ko želimo zajeti več pravil hkrati , pri tem pa je unija pogojev v telesu pravila razmeroma majhna , obstaja pa večji presek med omenjenimi pogoji .
Pomanjkljivost tega pristopa se pokaže pri zajemu pravil z večjim številom različnih pogojev v telesu , saj potem obvladovanje postane nepregledno , ker število permutacij in s tem stolpcev v tabel eksponentno narašča .
Po drugi strani pa število pogojev v telesu na zajem pravil ne vpliva tako negativno , saj število vrstic raste linearno .
…
Tabela 2 : Zajem pravila v obliki odločitvene tabele Takšno tabelo pravil lahko zapišemo tudi v kaj-če obliki , kjer je vsak stolpec posamezno pravilo .
Če želimo zapisati npr. pravilo v 1. stolpcu ( Tabela 2 ) , potem dobimo naslednje pravilo 1 ?
Slika 43 prikazuje primer japonske trgovalne strategije in opredelitev razlogov za izvedbo akcije ter nakupnih in prodajnih signalov .
Slika 43 : Primer skupine pravil v obliki odločitvene tabele Oznaka v stolpcu označuje prisotnost pogoja oz. posledice .
3.2.2.6.1.3 Zajem z odločitvenim drevesom Zajem pravil v obliki odločitvenega drevesa je uporaben takrat , ko se telesi ( če del ) več pravil razlikujejo v zgolj nekaj pogojih , katerih pravilnost pa se odloča v glavi ( kaj del ) .
Zajem pravil tako poteka v obliki binarnega drevesa ( Slika 44 ) .
Slika 44 : Zajem pravila v obliki odločitvenega drevesa Pri gradnji drevesa vedno začnemo z dejstvi , ki so skupna vsem pravilom , nato pa na podlagi dodatnih pogojev vejimo drevo v poddrevesa .
Končni listi v drevesih so posledice , ki nastopajo v glavi pravil .
Slika 45 prikazuje primer odločitvenega drevesa za opredelitev barve telesa svečnika , ki je lahko bele ali črne barve .
Med dejstvi so opredeljeni osnovni podatki , s katerimi operiramo , kot je trgovalni dan ter cena ob odprtju in zaprtju .
Pogoj je v tem primeru zgolj eden , in sicer razmerje večje ali enako med ceno zaprtja in ceno odprtja .
Slika 45 : Primer pravila v obliki odločitvenega drevesa 3.2.3 PORAZVOJ Zadnja faza je porazvoj , katere je osnovni cilj je opredeliti model implementacije ( korak 3 ) .
Faza porazvoja je razdeljena na dve pomembnejši aktivnosti : povezava slovarja s podatki ( korak 3.1 ) in kompozicija funkcionalne komponente ( korak 3.2 ) .
Nadalje je korak 3.2 sestavljen iz naslednjih podkorakov : opredelitev V / I ( korak 3.2.1 ) , izbira konceptov , relacij , omejitev in pravil ( korak 3.2.2 ) in identifikacije cilja ( korak 3.2.3 ) .
S stališča evaluacije je faza porazvoja sorodna fazi razvoja , saj se ravno tako izvaja nenehna evaluacija s pomočjo indikatorja popolnosti ( poglavje 3.3 ) .
3.2.3.1 Povezava slovarja s podatki Prvi korak porazvoja je povezava slovarja s podatki .
Omenjena lastnost ima podobno vlogo kot identifikator pri relacijskih podatkovnih bazah .
Za razliko od relacijskih podatkovnih baz pri relacijah , ki imata isti identifikator , ne dobimo napake , ampak mehanizmi semantičnega spleta sklepajo , da gre za isti entiteti .
Če imamo več različnih virov , ki imajo skupni enolični identifikator ( npr. simbol finančnega inštrumenta ) in različne atribute ter imena , potem nam semantični splet omogoča izvedbo integracije na zelo enostaven način .
Če na primer zahtevamo podatke o delnici GRVG , bomo kot rezultat dobili integrirane podatke obeh virov ( iz enega vira npr. črpamo trgovalne podatke , medtem ko iz drugega podatke o poslovanju ) .
Pri analogni integraciji v podatkovni bazi bi na podoben način prišli do napake , saj sistem za upravljanje s podatkovno bazo ne dovoljuje več relacij z istim identifikatorjem .
Slika 47 : Integracija podatkov iz relacijske podatkovne baze Pri integraciji ontologij po pristopu ROD se za opredelitev taksonomije priporočajo aksiomi podrazred , ekvivalentni razred , podlastnost in ekvivalentna lastnost , medtem ko se pri primerih uporabe , kjer je poudarek na vsebinski integraciji , priporoča uporaba inverznih funkcijskih lastnosti , kar vodi do ekvivalence primerkov .
Slika 48 : Integracija primerkov iz datoteke CSV Zelo veliko podatkov je na voljo v relacijskih in analitičnih podatkovnih bazah , ki jih lahko pri procesu ROD neposredno uporabimo pri gradnji semantično obogatenih aplikacij .
Uporabnik izhaja iz dela sheme obstoječe ontologije , ki jo želimo povezati z dejanskimi podatki iz realnega sveta ( t. i. primerki razredov in lastnosti ) .
Integracijo tako izvedemo na ravni sheme ontologije in relacijske sheme , relacije iz relacijske baze pa se prenašajo v primerke v ontologiji .
S pomočjo čarovnika in uporabe regularnih izrazov44 ima uporabnik skoraj neomejene možnosti pri ponovni uporabi nestrukturiranih podatkov iz tekstovnih datotek , dokumentov Office in PDF , spletnih strani itd.
Spletni naslov strani http://finance.google.com/finance?q=AAPL Dinamična povezava z ontologijo simbol .
) : AAPL \ ) Regularni izraz za luščenje podatkov Grafična predstavitev spletna strani < div class = " g-unit sfe-break-left " id = " rt-content " > < div class = g-wrap > < div class = " g-section sfe-break-bottom-8 " > < div class = " g-tpl-67-33 g-split hdg top " id = companyheader > < div class = " g-unit g-first " > < h3 > Apple Inc .
Slika 49 : Integracija primerkov iz delno strukturirane spletne strani Zelo veliko podatkov je na voljo v enostavni tekstovni obliki CSV , saj takšen način izvoza podpira večina programov .
Slika 48 prikazuje uvoz zgodovinskih prometnih podatkov za izbrane finančne inštrumente iz spletnega vira Yahoo Finance .
Slika 49 prikazuje uvoz podatkov iz spletnega portala Google Finance , in sicer podrobnosti o finančnih inštrumentih , kot sta opis in borza , kjer kotirajo .
To je najbolj generičen dostop do poljubnega delno strukturiranega vira podatkov , saj v celoti temeljimo na regularnih izrazih , s pomočjo katerih opišemo vzorec , kjer se zahtevani podatek nahaja .
3.2.3.2 Kompozicija funkcionalne komponente Zaradi pomislekov , ki se nam porajajo v prejšnjem koraku , se v tem koraku ukvarjamo s kompozicijo funkcionalne komponente .
Namen je priprava delujoče funkcionalne enote , ki temelji na izbranih gradnikih ontologije in je primerna za izbran primer uporabe .
3.2.3.2.1 Opredelitev V / I Prvi korak pri kompoziciji funkcionalne komponente je opredelitev vhodnih in izhodnih podatkov .
Uporabnik v grafičnem načinu izbere želen vhod in izhod , ki se kasneje preslika v poizvedbo SparQL in postane del meta podatkov funkcionalne komponente .
Za napredne poizvedbe je naprednim uporabnikom na voljo tudi neposreden vnos poizvedbe .
V problemski domeni finančnega trgovanja ( Slika 50 ) bi lahko vhodni podatek bila izbrana delnica , medtem ko na izhodu pričakujemo glede na trgovalno strategijo klasifikacijo teh trgovalnih dni , ki bi predstavljali nakupne ali prodajne signale .
Slika 50 : Primer opredelitve vhoda in izhoda funkcionalne komponente 3.2.3.2.2 Izbira konceptov , relacij , omejitev in pravil Naslednji korak je izbira konceptov , relacij , omejitev in pravil , kjer uporabniki podrobneje opredelijo vhod in izhod .
Ontologijo predstavimo kot neusmerjen graf , , kjer je množica razredov , pa množica relacij podrazred in objektne lastnosti .
Slika 51 : Primer izbire konceptov , relacij , omejitev , pravil in dinamičnih uvozov V problemski domeni finančnega trgovanja bi ta korak vključeval opredelitev regularnih izrazov za luščenje podatkov o delnicah iz izbranih spletnih strani in datotek CSV ter preslikave v gradnike ontologije .
predlagajEntiteteInAksiomeZaVkljucitev ‹ Točke grafa so entitete ( razredi , podatkovne in objektne lastnosti ) ‹ Povezave v grafu so relacije podrazred in povezava razredov ter lastnosti ‹ Aksiomi , ki jih sestavljajo atomi entitet in povezav ' ?
' , konec sprehoda po vseh točkah grafa vrni ' konec BFS ’ ( G , v ) izvedi iskanje v širino na grafu , z začetkom v točki vrni obiskan pod-graf " konec Algoritem 1 : Predlagaj entitete in aksiome za vključitev v funkcionalno komponento 3.2.3.2.3 Identifikacija cilja Zadnji korak je identifikacija cilja , kjer je omejitev okolje uporabe ontologije in se kreira funkcionalna komponenta za uporabo ob izbranih nastavitvah .
Obstajajo številne možnosti za uporabo funkcionalne komponente ( Slika 29 ) in jih lahko razdelimo v dve kategoriji : • uporaba sheme ( TBox , RBox in pravila ) o podatkovna baza , o semantično preverjanje podatkov , o semantika komunikacijskega protokola inteligentnega agenta , o omejitev uporabniškega vmesnika ipd. • uporaba sheme skupaj s primerki ( TBox , RBox , ABox in pravila ) , o gradnik BPEL v obliki točke odločitve , o način delovanja inteligentnega agenta ( JADE ) , o paket poslovnih pravil , o samostojna aplikacija ( J2SE , J2EE , WS ) .
Pri gradnji ontologije izhajamo iz ponovne uporabe virov ( npr. tekstovnih datotek , svetovnega spleta , podatkovnih baz ipd. ) .
Pri procesu ROD je podrt tudi proces v nasprotno smer in sicer izvoz ontologije v eno od zgoraj omenjenih ciljnih okolij .
Pri izvozu ontologije v shemo podatkovne baze , se razredi izvozijo v relacijske tabele , lastnosti v relacije med tabelami ter aksiomi v integritete omejitve in prožilce v podatkovni bazi .
Inteligentni agent , kot je računalniški sistem , ki je sposoben prilagodljivega in avtonomnega delovanja v dinamičnem in nepredvidljivem okolju ( Wooldridge 2002 ) , postaja vedno bolj pomemben gradnik pri razvoju naprednih informacijskih rešitev .
Uporaba ontologije pri omejitvi uporabniškega vmesnika se predlaga v primeru preverjanja uporabniškega vnosa v sistem .
Področje avtomatizacije poslovnih procesov postaja vedno pomembnejše predvsem zaradi vse večjega povezovanja ( B2B , B2C , B2G ipd. ) , zato je uporaba ontologij na tem področju , predvsem za naprednejše obvladovanje takšne avtomatizacije , pristop , ki prinaša veliko prednosti .
Za izvajanje poslovnih procesov je standardizacija na tem področju poskrbela , da je najbolj uporabljan jezik za izvajanje poslovnih procesov BPEL ( Margolis and Sharpe 2007 ) .
Proces ROD zato omogoča izvoz funkcionalne komponente v obliki gradnika BPEL , ki ga lahko vključimo v poslovni proces in je primeren predvsem za vlogo točke odločitve ( Slika 52 ) .
Slika 52 : Primer izvoza funkcionalne komponente v obliki BPEL Za namen uporabe sheme ontologije smo že v začetku poglavja omenili opredelitev semantike komunikacijskega protokola inteligentnega agenta .
V primeru naprednejše uporabe lahko v izvoz vključimo tudi primerke in na ta način podpremo delovanje inteligentnega agenta , kjer je podprta agentna platforma JADE .
Proces ROD temelji na pristopu obvladovanja poslovnih pravil , zato je posledično podprt tudi izvoz ontologije v obliki paketa poslovnih pravil .
Glede na to , da ROD podpira poenostavljene načine vnosa poslovnih pravil ( KAJ-ČE pravila , odločitveno drevo in Eden od načinov za neposredno preverjanje funkcionalnosti je v obliki samostojne aplikacije , kjer nam sistem omogoča izvoz aplikacije v Java okolju ( J2SE in J2EE ) , za širšo podporo pa je na voljo tudi objava v obliki spletne storitve .
Uporaba neodvisno od procesa ROD z ostalimi metodologijami za razvoj ontologij ali brez uporabe kakršnekoli metodologije .
Primer akcije : Če odstranite anomalijo v komponenti RBox , potem boste ' pošta ' .
Združite prej omenjene lastnosti v okvir novega koncepta in 2.
Uporaba v obliki orodja za pomoč • Medtem ko se uporabnik nahaja pri določenem koraku procesa ROD , se indikator popolnosti OC prilagaja trenutnemu koraku s ponastavitvijo uteži poteka zajem poslovnega slovarja , ni potrebe po preverjanju odvečnih primerkov , obstoju neuporabljenih konceptov ali inverznih lastnosti , 45 Popolnost v okviru omenjene doktorske disertacije se nanaša na semantično popolnost , i. e. Učinek je opredeljen kot delež izboljšave ontologije v primeru , da izvedemo korake za 3 .
• Ko indikator popolnosti OC doseže določeno raven ( npr. 80 % ) , lahko uporabnik nadaljuje z aktivnostmi naslednjega koraka v procesu .
Posodobljena vrednost OC se izračuna sproti za vsako fazo posebej in se vedno , ko le-ta preseže določeno raven , sproži priporočilo za nadaljevanje izvajanju aktivnosti procesa ROD , od zajema poslovnega slovarja pa do kreiranja funkcionalnih komponent za uporabo v ostalih sistemih .
• V primeru da ontologija že obstaja , lahko s pomočjo ocene OC umestimo razvito ontologijo v pripadajoč izpopolnjevanjem ontologije ontologija že ima opredeljeno taksonomijo , zato lahko nadaljujemo kar s korakom 2.4 , v katerem poteka identifikacija binarnih relacij ) .
Indikator popolnosti ( OC ) je opredeljen kot [ kjer je C množica razredov , P množica lastnosti , R množica pravil in I množica primerkov .
OC je obtežena vsota semantičnih testov , medtem ko se uteži dinamično spreminjajo pri prehajanju iz ene faze v drugo fazo procesa ROD ( Tabela 3 ) .
OC lahko tako opredelimo kot ?
V primeru ( Slika 53 ) , potem je ?
Slika 53 : Drevo pogojev indikatorja popolnosti OC s semantičnimi testi v listih in pripadajočimi utežmi Drevo pogojev ( Slika 53 ) , ki se upošteva pri izračunu popolnosti ontologije , vsebuje semantične teste , ki se izvedejo pri preverjanju ontologije .
Naslednje ravni so naprej razdeljene glede na klasifikacijo napak v ( Fahad and Quadir 2008 ) in so opis , razdelitev , odvečnost , doslednost in anomalija .
Listi drevesa , ki se upoštevajo pri izračunu ocene OC so implementirani kot semantični testi , medtem ko vsi ostali elementi predstavljajo S t r a n 79 3 .
po g l a v j e | Mo d e l z a h i t e r r a z v o j o n t o l o g i j za izračun indikatorja popolnosti OC je pogoj in , utež med pogojema in .
0 označi pogoj X kot obiskan če ne obstaja podpogoj od X , potem ' Izvedi semantični test na listu vrni • sicer za vse pogoje Y , ki so podpogoji od X , tako da Y še ni obiskan ' Agregiraj ocene popolnosti če w X , Y 0 potem zra unaj Y , w X , Y vrni • Algoritem 2 : Izračun indikatorja popolnosti OC porazdelitev uteži pogojev ( Slika V naslovnih celicah vrstic med pogojem očeta in pogojem sina , medtem ko tiče porazvojnih opredelitve modela implementacije , mora biti uporabnik pozoren na ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) Zajem Seznam Identifikacija Identifikacija Opis Dodajanje Povezava poslovnega primerov taksonomije ad hoc relacij atributov in kompleksnih slovarja s slovarja konceptov relacij omejitev in podatki in lastnosti konceptov pravil 0,70 ( 0 , 70 ) 0,40 ( 0 , 40 ) 0,40 ( 0 , 40 ) 0,30 ( 0 , 30 ) 0,50 ( 0 , 50 ) 0,50 ( 0 , 50 ) 0,40 ( 0 , 40 ) 0,70 ( 1 , 00 ) 0,40 ( 1 , 00 ) 0,16 ( 0 , 40 ) 0,12 ( 0 , 40 ) 0,10 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,08 ( 0 , 20 ) 0,14 ( 0 , 20 ) 0,08 ( 0 , 20 ) 0,03 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,28 ( 0 , 40 ) 0,16 ( 0 , 40 ) 0,06 ( 0 , 40 ) 0,05 ( 0 , 40 ) 0,04 ( 0 , 40 ) 0,04 ( 0 , 40 ) 0,03 ( 0 , 40 ) 0,28 ( 0 , 40 ) 0,16 ( 0 , 40 ) 0,07 ( 0 , 40 ) 0,05 ( 0 , 40 ) 0,04 ( 0 , 40 ) 0,04 ( 0 , 40 ) 0,03 ( 0 , 40 ) - - 0,06 ( 0 , 15 ) 0,05 ( 0 , 15 ) 0,05 ( 0 , 10 ) 0,05 ( 0 , 10 ) 0,04 ( 0 , 10 ) - - 0,06 ( 1 , 00 ) 0,05 ( 1 , 00 ) 0,05 ( 1 , 00 ) 0,05 ( 1 , 00 ) 0,04 ( 1 , 00 ) - - 0,06 ( 0 , 15 ) 0,04 ( 0 , 15 ) 0,15 ( 0 , 30 ) 0,15 ( 0 , 30 ) 0,12 ( 0 , 30 ) - - - - 0,07 ( 0 , 50 ) 0,07 ( 0 , 50 ) 0,06 ( 0 , 50 ) - - 0,06 ( 1 , 00 ) 0,05 ( 1 , 00 ) 0,08 ( 0 , 50 ) 0,08 ( 0 , 50 ) 0,06 ( 0 , 50 ) - - 0,06 ( 0 , 15 ) 0,05 ( 0 , 15 ) 0,10 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,08 ( 0 , 20 ) - - 0,06 ( 1 , 00 ) 0,05 ( 1 , 00 ) 0,10 ( 1 , 00 ) 0,10 ( 1 , 00 ) 0,08 ( 1 , 00 ) S t r a n 80 3 .
po g l a v j e | Mo d e l z a h i t er r a z v o j ( 2.5 ) ( 2.6 ) ( 3.1 ) Opis Dodajanje Povezava atributov in kompleksnih slovarja s relacij omejitev in podatki konceptov pravil 0,10 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,08 ( 0 , 20 ) 0,10 ( 1 , 00 ) 0,10 ( 1 , 00 ) 0,08 ( 1 , 00 ) 0,50 ( 0 , 50 ) 0,50 ( 0 , 50 ) 0,40 ( 0 , 40 ) 0,10 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,08 ( 0 , 20 ) 0,03 ( 0 , 30 ) 0,03 ( 0 , 30 ) 0,02 ( 0 , 30 ) 0,05 ( 0 , 50 ) 0,05 ( 0 , 50 ) 0,04 ( 0 , 50 ) 0,02 ( 0 , 50 ) 0,02 ( 0 , 50 ) 0,02 ( 0 , 50 ) 0,03 ( 0 , 50 ) 0,03 ( 0 , 50 ) 0,02 ( 0 , 50 ) 0,02 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,02 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,10 ( 0 , 20 ) 0,08 ( 0 , 20 ) 0,05 ( 0 , 50 ) 0,05 ( 0 , 50 ) 0,04 ( 0 , 50 ) 0,05 ( 0 , 50 ) 0,05 ( 0 , 50 ) 0,04 ( 0 , 50 ) 0,15 ( 0 , 30 ) 0,15 ( 0 , 30 ) 0,12 ( 0 , 30 ) 0,08 ( 0 , 50 ) 0,08 ( 0 , 50 ) 0,06 ( 0 , 50 ) 0,07 ( 0 , 50 ) 0,07 ( 0 , 50 ) 0,06 ( 0 , 50 ) 0,15 ( 0 , 30 ) 0,15 ( 0 , 30 ) 0,12 ( 0 , 30 ) 0,15 ( 1 , 00 ) 0,15 ( 1 , 00 ) 0,12 ( 1 , 00 ) - - 0,20 ( 0 , 20 ) - - 0,08 ( 0 , 40 ) - - 0,06 ( 0 , 80 ) - - 0,02 ( 0 , 20 ) - - 0,01 ( 0 , 60 ) - - 0,01 ( 0 , 40 ) - - 0,04 ( 0 , 20 ) - - 0,02 ( 0 , 50 ) - - 0,02 ( 0 , 50 ) - - - - - - - - - - - - - - - - - - - - - - - - - - 0,04 ( 0 , 20 ) - - 0,02 ( 0 , 50 ) - - 0,02 ( 0 , 50 ) S t r a n 81 o n t o l o g i j ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) Identifikacija Identifikacija Opis Dodajanje Povezava taksonomije ad hoc relacij atributov in kompleksnih slovarja s relacij omejitev in podatki konceptov pravil - - - - 0,04 ( 0 , 20 ) - - - - 0,02 ( 0 , 50 ) - - - - 0,02 ( 0 , 50 ) Tabela 3 : Uteži pri izračunu indikatorja popolnosti ( OC ) ontologije za vsak posamezen korak v procesu ROD Kot je že bilo omenjeno , imamo pri taksonomiji semantičnih testov za izračun indikatorja dimenziji klasifikacij .
V nasprotju s tem pa pri naslednjih korakih 2.2 , 2.3 in 2.4 s pomočjo vnašanja primerkov razredov in lastnosti poskušamo pomagati uporabniku pri opredelitvi taksonomije , zato na pomembnosti pridobi tudi komponenta ABox .
Na koncu želimo razvito ontologijo uporabiti kot komponento v informacijskem sistemu .
Slika 54 : Vpliv uteži komponent na 1. nivoju ( TBox , RBox in ABox ) korakov v procesu ROD Druga dimenzija delitve je glede kategorije napake , ki se pojavi v ontologiji .
V naslednjih korakih 2.3 in 2.4 poleg opisa postane pomembna tudi razdelitev razredov lastnosti , kjer se preverja predvsem pravilnost opredeljene S t r a n 82 3 .
V naslednjih korakih , ko ontologijo še dodatno opredeljujemo , pa postane pomembno tudi preverjanje odvečnosti , anomalije in doslednosti .
Slika 55 : Vpliv uteži komponent na 2. nivoju ( opis , razdelitev , odvečnost , doslednost in anomalija ) korakov v procesu ROD Pri izračunu indikatorja popolnosti OC dobimo dva rezultata ( Slika 56 ) : • oceno OC in • priporočila za izboljšavo ocene OC. Slika 56 : Uporabniški vmesnik prikaza rezultata izračuna OC Slika 56 prikazuje procentualno vrednost ocene OC ( npr. 68 %) in je prikazana v obliki grafičnega indikatorja stanja .
Takšen prikaz daje poudarek na področja , ki potrebujejo izboljšavo , in S t r a n 83 3 .
Vsa priporočila , ki so rezultat izračuna indikatorja popolnosti , so prikazana v tabelarični obliki in urejena v padajočem zaporedju po vplivu , ki ga imajo na popolnost ontologije .
Ko uporabnik izbere določeno priporočilo , se pričakovan vpliv prikaže tudi na radarskem grafu , tako da si uporabnik lažje predstavlja kakšna bo dejanska posledica v primeru izvedbe spremembe v ontologiji .
Ko uporabnik sledi procesu ROD in se nahaja v določenem koraku razvoja , se indikator OC prilagodi omenjenem koraku z utežmi semantičnih testov ( Tabela 3 prikazuje porazdelitev uteži v procesu ROD ) pri izračunu ( npr. v koraku 2.1 procesa ROD , kjer se zajame poslovni slovar , ni potrebe po semantičnih testih , kot so odvečnost primerkov , neuporabljen razred ali obstoj inverzne lastnosti , ampak je poudarek na opisu komponent TBox in RBox ter obstoju poti med razredi ) .
Slika 57 : Izračun popolnosti ontologije Ko ocena indikatorja OC doseže določeno mejo ( npr. 80 % ) , lahko uporabnik nadaljuje z naslednjim korakom ( Slika 57 ) .
Prilagojena vrednost popolnosti ontologije se izračuna sproti in se vedno , ko je dosežena mejna vrednost , generira priporočilo nadaljevanja v naslednji korak .
Na takšen način proces ROD uporabniku pomaga pri procesu razvoja ontologije od opredelitve poslovnega slovarja do izdelave funkcionalne komponente .
3.3.2 KOMPONENTA TBOX 3.3.2.1 Opis 3.3.2.1.1 Obstoj razreda Problem : Razredi so osnovni gradniki ontologije , zato so nujno potrebni .
V primeru , da ne obstajajo , ne moremo uporabljati naprednih mehanizmov za predstavitev znanja .
Postopek : preveriObstojRazreda ‹ Število razredov v ontologiji če 1 potem 0 sicer 1 konec pogoja če vrni konec Algoritem 3 : Preveri obstoj razreda Rezultat : Ocena indikatorja popolnosti ontologije , ki upošteva obstoj razredov .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 16% 12% 8% 4% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 58 : Pomembnost preverjanja obstoja razreda ( opis komponente TBox ) pri izračunu OC Primer : Slika 59 prikazuje enostavno ontologijo , v kateri so opredeljeni 3 razredi .
Slika 59 : Primer preverjanja obstoja razreda ( opis komponente TBox ) pri izračunu OC Po izvedbi algoritma dobimo oceno 1 , ki je rezultat dejstva 3 1. 3.3.2.1.2 Angleško Problem : Ko razmišljamo o ponovni uporabi ontologije in uporabi ontologije v aplikacijah , je opis v naravnem jeziku zelo pomemben .
Opis komponente TBox je predvsem v obliki oznak in opisov .
Cilj : Identificirati razrede , pri katerih manjkajo oznake ali opisi v angleškem jeziku ter omogočiti uporabniku , da doda manjkajoče opise .
, " " konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 4 : Preveri opis razreda v angleškem naravnem jeziku Rezultat : Množica parov , , ki označujejo manjkajočo oznako ali opis razreda , ter ocena indikatorja popolnosti ontologije , ki upošteva opis razreda v angleškem jeziku .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 30% 20% 10% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 60 : Pomembnost preverjanja opisa razreda v angleškem naravnem jeziku ( opis komponente TBox ) pri izračunu OC Primer : Slika 61 prikazuje ontologijo z oznakami in opisi razredov v angleškem jeziku .
Slika 61 : Primer preverjanja opisa razreda v angleškem naravnem jeziku ( opis komponente TBox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednje razrede z manjkajočimi opisi testne z manjkajočimi opisi v angleškem naravnem jeziku je 1 — 0,667. • 3.3.2.1.3 Problem : Ko razmišljamo o ponovni uporabi ontologije in uporabi ontologije v aplikacijah , je opis v naravnem jeziku zelo pomemben .
Poleg opisa v angleškem jeziku , je pomemben tudi opis v drugem jeziku , saj tako podpremo večjezičnost ontologije .
Opis komponente TBox je predvsem obliki v oznak in opisov .
Postopek : Za vsak razred pogledamo , ali obstajata oznaka in opis v jeziku , drugačnem od angleškega .
preveriOpisRazredaVDrugemJeziku 1 ‹ Število razredov v ontologiji ‹ Množica jezikov , uporabljenih za opis v naravnem jeziku ‹ Število opisov razredov ( desc ) v izbranem jeziku ( lang ) ‹ oznaka razreda v jeziku lang ‹ opis razreda v jeziku lang Ř izberi najboljši iz , kjer velja za vsak ?
, " " konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 5 : Preveri opis razreda v naravnem jeziku , drugačnem od angleškega Rezultat : Množica parov , , ki označuje manjkajočo oznako ali opis razreda ter ocena indikatorja popolnosti ontologije , ki upošteva naravni opis razreda v jeziku , drugačnem od angleškega .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 30% 20% 10% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 62 : Pomembnost preverjanja opisa razreda v naravnem jeziku , drugačnem od angleškega ( opis komponente TBox ) pri izračunu OC Primer : Slika 63 prikazuje ontologijo z oznakami in opisi razredov v slovenskem in španskem jeziku .
razredi z manjkajočimi opisi v slovenskem jeziku : manjkajočimi opisi v naravnem jeziku , drugačnem od angleškega , je 1 — — — • • • 3.3.2.2 Razdelitev 3.3.2.2.1 Skupni razred Problem : Pri razdelitvi razredov v taksonomijo se pogosto zgodi , da je določen razred podrazred razredov , ki so razdruženi47 .
Cilj : Identificirati skupine razredov , pri katerih se pojavlja napaka skupnih razredov , in omogočiti uporabniku spremembo ontologije v smeri odprave relacij podrazredov do razdruženih razredov .
?
, , konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 6 : Preveri skupne razrede Rezultat : Množica trojic , 1.
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 64 : Pomembnost preverjanja skupnih razredov ( razdelitev komponente TBox ) pri izračunu OC Primer : Slika 65 prikazuje ontologijo , ki vsebuje razrede in njihovo medsebojno povezanost z relacijami podrazred ter številne napake skupnih razredov .
Slika 65 : Primer preverjanja skupnih razredov ( razdelitev komponente TBox ) pri izračunu OC Po izvedbi algoritma dobimo seznam naslednjih skupnih razredov : { Dolgoročno posojilo , Depozit , Posojilo } , { Dolg , Obrestni inštrument , Izvedeni inštrument na blago } in { Dolžniški inštrument , Delnica , Lastniško izvedeni inštrument } .
Ocena testne ontologije z napakami skupnih razredov je 1 — — — 0,842. 3.3.2.3 Odvečnost 3.3.2.3.1 Identična opredelitev Problem : Pri modeliranju ontologij uporabniki pogosto kreirajo več razredov z različnimi imeni , vendar z identično formalno opredelitvijo .
Postopek : Za vsak razred preverimo vse pripadajoče aksiome .
, označi kot obiskan konec pogoja če konec sprehoda po aksiomih razreda konec sprehoda po razredih vrni in konec Algoritem 7 : Preveri identično opredelitev razreda Rezultat : Množica parov razredov , z identično opredelitvijo in različnimi imeni ter ocena indikatorja popolnosti ontologije , ki upošteva identično opredelitev razreda .
Globalna utež v procesu ROD : ' • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 66 : Pomembnost preverjanja identične opredelitve razreda ( odvečnost komponente TBox ) pri izračunu OC Primer : Slika 67 prikazuje ontologijo , ki vsebuje razreda z identično formalno opredelitvijo in različnima imenoma .
Slika 67 : Primer preverjanja identične opredelitve razreda ( odvečnost komponente TBox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednjo identično opredelitev razreda : { ETF , Na borzi trgovan sklad } .
Ocena testne ontologije , ki upošteva identično opredelitev razreda , je 1 — 0,900. • 3.3.2.3.2 Odvečnost podrazreda Problem : Do odvečnosti podrazreda pride takrat , ko načrtovalec ontologije neposredno ali posredno opredeli , da je razred podrazred razredov in , medtem ko velja , da je podrazred razreda .
, ?
, konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 8 : Preveri odvečnost podrazreda S t r a n 93 3 .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 12% 10% 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 68 : Pomembnost preverjanja odvečnosti podrazreda ( odvečnost komponente TBox ) pri izračunu OC Primer : Slika 69 prikazuje ontologijo s številnimi podrazred relacijami , tako neposrednimi kot tudi posrednimi .
Slika 69 : Primer preverjanja odvečnosti podrazreda ( odvečnost komponente TBox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednje odvečne podrazred relacije : č , č š in š , š š .
poisciCiklicne Napake 1 ‹ Število razredov v ontologiji ‹ Točke grafa so razredi ‹ Povezave v grafu so relacije podrazred Ř medtem ko v , obstajajo cikli izberi cikel iz množice vseh ciklov , kjer velja ?
odstrani vse točke cikla iz , – konec pogoja vrni in konec Algoritem 9 : Poišči ciklične napake Rezultat : Množica ciklov s pripadajočimi razredi , ki predstavljajo ciklične napake in ocena indikatorja popolnosti ontologije , ki upošteva ciklične napake .
po g l a v j e | Mo d e l z a h i t e r r a z v o j o n t o l o g i j Primer : Slika 71 prikazuje ontologijo s številnimi cikličnimi napakami ( , in ).
Slika 71 : Primer preverjanja cikličnih napak ( doslednost komponente TBox ) pri izračunu OC Po izvedbi algoritma so odkrite naslednje ciklične napake : { Trgovalni dan , Nakup , Doji nakup , Dolg Doji nakup } , { Delnica , Vroča delnica , Zelo vroča delnica } in { Finančni inštrument , ETF } .
Ocena testne ontologije z upoštevanjem cikličnih napak je 1 — — — 0,250. 3.3.2.5 Anomalija 3.3.2.5.1 Veriga dedovanja Problem : Pri opredelitvi taksonomije razredov lahko načrtovalec ontologije uporablja relacijo podrazred na poljubnih ravneh med posameznimi razredi .
Ko je takšna veriga dedovanja ( zaporedna uporaba relacij podrazred ) dovolj dolga in obstajajo razredi v tej verigi , ki nimajo ustreznih opisov , razen zadnjega člena v verigi , gre za napako verige dedovanja .
Cilj : Poiskati verige dedovanja in omogočiti uporabniku rešitev problema – razdelitev verige dedovanja v podhierarhije ali odstraniti nepotrebne relacije podrazred .
‹ Število neposrednih relacij podrazred v ontologiji ‹ je podrazred od ‹ Aksiom razreda , kjer velja ‹ Množica vnaprej opredeljenih48 aksiomov razreda ‹ Množica vnaprej opredeljenih aksiomov razreda brez aksiomov tipa podrazred ‹ Množica razred , katerih razred je podrazred Ř dokler ?
, konec pogoja vrni in konec Algoritem 10 : Poišči verigo dedovanja Rezultat : Množica verig dedovanja v obliki { podroben razred , splošen razred , { razredi , ki sestavljajo verigo dedovanja } } in ocena indikatorja popolnosti ontologije , ki upošteva verigo dedovanja .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 12% 10% 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 72 : Pomembnost iskanja verige dedovanja ( anomalija komponente TBox ) pri izračunu OC Primer : Slika 73 prikazuje ontologijo z neposrednimi relacijami podrazred in dodatnimi opisi z lastnostmi .
Nekateri razredi kršijo pravilo verige dedovanja in so zato tudi ustrezno barvno označeni .
Slika 73 : Primer iskanja verige dedovanja ( anomalija komponente TBox ) pri izračunu OC Po izvedbi algoritma dobimo naslednje verige dedovanja : { Opcijsko izveden inštrument , Inštrument lastniškega kapitala , { Lastniško izveden inštrument } } , { Večinoma obvezniški sklad , Sklad denarnega trga , { Mešani sklad , Uravnoteženi sklad , Obvezniško usmerjen sklad } } in { Zadolžnica , Investicije in skladi , { Izveden inštrument , Pogodbeni izvedeni inštrument } } .
Ocena testne ontologije z upoštevanjem verige dedovanja je 1 — — — 0,647. 3.3.3 KOMPONENTA RBOX 3.3.3.1 Opis 3.3.3.1.1 Obstoj lastnosti Problem : Lastnosti so poleg razredov osnovni gradniki ontologije , zato so nujno potrebni .
Cilj : Preveriti , ali obstajajo lastnosti v ontologiji .
Postopek : preveriObstojLastnosti ‹ Število lastnosti v ontologiji če 1 potem 0 sicer 1 konec pogoja če vrni konec Algoritem 11 : Preveri obstoj lastnosti Rezultat : Ocena indikatorja popolnosti ontologije , ki upošteva obstoj lastnosti .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 74 : Pomembnost preverjanja obstoja lastnosti ( opis komponente RBox ) pri izračunu OC Primer : Slika 75 prikazuje enostavno ontologijo , v kateri ni opredeljenih nobenih lastnosti Slika 75 : Primer preverjanja obstoja lastnosti ( opis komponente RBox ) pri izračunu OC Po izvedbi algoritma dobimo oceno 1 , ki je rezultat dejstva 0 1. 3.3.3.1.2 Opis lastnosti 3.3.3.1.2.1 Angleško Problem : Ko razmišljamo o ponovni uporabi ontologije in uporabi ontologije v aplikacijah , je opis v naravnem jeziku zelo pomemben .
Če takšni opisi obstajajo , lahko načrtovalci ontologijo , ki jo je razvil nekdo drug in dal v skupno rabo , hitreje najdejo in uporabijo .
Opis komponente RBox je predvsem v obliki oznak in opisov .
Cilj : Identificirati lastnosti , pri katerih manjkajo oznake ali opisi v angleškem jeziku ter omogočiti uporabniku , da doda manjkajoče opise .
, " " konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 12 : Preveri opis lastnosti v angleškem naravnem jeziku Rezultat : Množica parov , , ki označuje manjkajočo oznako ali opis lastnosti , ter ocena indikatorja popolnosti ontologije , ki upošteva naravni opis lastnosti v angleškem jeziku .
Globalna utež v procesu ROD : • • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 76 : Pomembnost preverjanja opisa lastnosti v angleškem naravnem jeziku ( opis komponente RBox ) pri izračunu OC Primer : Slika 77 prikazuje ontologijo z oznakami in opisi lastnosti v angleškem jeziku .
Financial instrument is traded on trading day.@en Slika 77 : Primer preverjanja opisa lastnosti v angleškem naravnem jeziku ( opis komponente RBox ) pri OC Po izvedbi algoritma odkrijemo naslednjo lastnost z manjkajočim opisom v angleškem jeziku : , " " .
Ocena testne ontologije z manjkajočimi opisi v angleškem naravnem jeziku je 1 — • 3.3.3.1.2.2 Ostalo Problem : Ko razmišljamo o ponovni uporabi ontologije in uporabi ontologije v aplikacijah , je opis v naravnem jeziku zelo pomemben .
Poleg opisa v angleškem jeziku je pomemben tudi opis v drugem jeziku , saj tako podpremo večjezičnost ontologije .
Opis komponente RBox je predvsem v obliki oznak in opisov .
preveriOpisLastnostiVDrugemJeziku 1 ‹ Število lastnosti v ontologiji ‹ Množica jezikov , uporabljenih za opis v naravnem jeziku ‹ Število opisov lastnosti v izbranem jeziku ‹ oznaka lastnosti v jeziku lang ‹ opis lastnosti v jeziku lang Ř izberi najboljši iz , kjer velja za vsako ?
, " " konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 13 : Preveri opis lastnosti v naravnem jeziku , drugačnem od angleškega Rezultat : Množica parov , , ki označuje manjkajočo oznako ali opis razreda ter ocena indikatorja popolnosti ontologije , ki upošteva naravni opis razreda v jeziku , drugačnem od angleškega .
Globalna utež v procesu ROD : • • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 78 : Pomembnost preverjanja opisa lastnosti v naravnem jeziku , drugačnem od angleškega ( opis komponente RBox ) pri izračunu OC Primer : Slika 79 prikazuje ontologijo z oznakami in opisi lastnosti v slovenskem in španskem jeziku .
Slika 79 : Primer preverjanja opisa lastnosti v naravnem jeziku , drugačnem od angleškega ( opis komponente RBox ) pri izračunu OC Po izvedbi algoritma je preferenčni jezik za ocenjevanje slovenski , v nasprotju s španskim , ker obstajata dva opisa v slovenskem jeziku in le eden v španskem .
Ocena testne ontologije z manjkajočimi opisi v naravnem jeziku , drugačnem od angleškega , je 1 — • 3.3.3.1.3 Opis razreda Problem : Pri načrtovanju ontologije ob opredelitvi lastnosti načrtovalec ontologije včasih pozabi definirati definicijsko območje in zalogo vrednosti .
‹ definicijsko območje lastnosti ‹ zaloga vrednosti lastnosti Ř za vsako ?
, " " konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 14 : Preveri opis razreda S t r a n 10 3 3 .
po g l a v j e | Mo d e l z a h i t e r r a z v o j o n t o l o g i j Rezultat : Množica parov , , ki označuje manjkajočo definicijsko območje ali zalogo vrednosti določene aktivnosti ter ocena indikatorja popolnosti ontologije , ki upošteva opise razredov .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 80 : Pomembnost preverjanja opisa razreda ( opis komponente RBox ) pri izračunu OC Primer : Slika 81 prikazuje enostavno ontologijo z 2 razredoma in 2 lastnostmi , v kateri lastnosti niso pravilno opredeljene .
Slika 81 : Primer preverjanja opisa razreda ( opis komponente RBox ) pri izračunu OC Po izvedbi algoritma je odkrita naslednja lastnost , ki je pomanjkljivo opredeljena : , " " .
Ocena testne ontologije z nepopolnim opisom razreda je 1 — 0,750. • 3.3.3.2 Razdelitev 3.3.3.2.1 Obstoj inverzne lastnosti Problem : Če želimo omogočiti popolno sprehajanje med razredi v ontologiji , k temu zelo veliko prispeva dejstvo , da ima vsaka objektna lastnost opredeljeno tudi inverzno lastnost .
Poiskati objektne lastnosti brez opredeljenih inverznih lastnosti in omogočiti uporabniku dodajanje manjkajočih opredelitev .
preveriObstojInverzneLastnosti 1 ‹ Število objektnih lastnosti v ontologiji ‹ Inverzna lastnost lastnosti Ř za vsako objektno lastnost ?
konec pogoja če označi kot obiskano konec sprehoda po objektnih lastnostih vrni in konec Algoritem 15 : Preveri obstoj inverzne lastnosti Rezultat : Množica lastnosti , ki nima opredeljenih inverznih lastnosti , in ocena indikatorja popolnosti ontologije , ki upošteva obstoj inverznih lastnosti .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 82 : Pomembnost preverjanja obstoja inverznih lastnosti ( razdelitev komponente RBox ) pri izračunu OC Primer : Slika 83 prikazuje enostavno ontologijo , ki vsebuje različne objektne lastnosti , kjer nekatere nimajo opredeljenih inverznih lastnosti .
Slika 83 : Primer preverjanja obstoja inverznih lastnosti ( razdelitev komponente RBox ) pri izračunu OC .
Ocena testne ontologije , ki upošteva obstoj inverzne lastnosti je 1 — Pot med razredi Problem : Pri gradnji ontologije želimo opredeliti takšen podatkovni slovar , v katerem so koncepti medsebojno povezani .
Postopek : Ontologijo predstavimo kot neusmerjen graf , , kjer je množica razredov , pa množica relacij podrazred in objektne lastnosti .
poisciPotMedRazredi 0 ‹ Število razredov v ontologiji ‹ Točke grafa so razredi ‹ Povezave v grafu so relacije podrazred in objektne lastnosti Ř za vsako ?
• • konec sprehoda po vseh točkah grafa vrni in konec BFS ’ ( G , v ) izvedi iskanje v širino na grafu G , z začetkom v točki odstrani vse obiskane točke iz grafa vrni množico vseh obiskanih točk konec Algoritem 16 : Poišči pot med razredi Rezultat : Nepovezane množice razredov in ocena indikatorja popolnosti ontologije , ki upošteva pot med razredi .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 84 : Pomembnost iskanja poti med razredi ( razdelitev komponente RBox ) pri izračunu OC Primer : Slika 85 prikazuje ontologijo z dvema množicama nepovezanih razredov , tako da ne obstaja pot med vsemi razredi ontologije .
Slika 85 : Primer iskanja poti med razredi ( razdelitev komponente RBox ) pri izračunu OC identificirane naslednje nepovezane množice konceptov : , , • • razredi , je • 3.3.3.3 Odvečnost 3.3.3.3.1 Identična opredelitev Problem : Pri modeliranju ontologij uporabniki pogosto kreirajo več lastnosti z različnimi imeni , vendar z identično formalno opredelitvijo .
Cilj : Preveriti , ali v ontologiji obstajajo lastnosti z identično formalno opredelitvijo in omogočiti uporabniku rešitev problema – uvedba ekvivalentnih lastnosti , združevanja lastnosti ali odstranitve razredov .
Če je množica aksiomov lastnosti identična množici aksiomov lastnosti , in velja , potem smo identificirali dve lastnosti , ki imata različni imeni in identični formalni opredelitvi .
, označi kot obiskano konec pogoja če konec sprehoda po aksiomih lastnosti konec sprehoda po lastnostih vrni in konec Algoritem 17 : Preveri identično opredelitev lastnosti Rezultat : Množica parov lastnosti , z identično opredelitvijo in različnimi imeni ter ocena indikatorja popolnosti ontologije , ki upošteva identično opredelitev lastnosti .
Globalna utež v procesu ROD : ' • • Pomembnost v procesu ROD : 10% 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 86 : Pomembnost preverjanja identične opredelitve lastnosti ( odvečnost komponente RBox ) pri izračunu OC prikazuje ontologijo , ki vsebuje lastnosti z identično formalno 3 .
: seTrgujeNa rdfs:range rdfs:domain rdfs:range rdfs:domain : temeljiNa : jeDel : odvisenOd : jeUdelezenPri rdfs:domain rdfs:range rdfs:domain rdfs:range : ETF Slika 87 : Primer preverjanja identične opredelitve lastnosti ( odvečnost komponente RBox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednji identični opredelitvi lastnosti : , in , ž .
Ocena testne ontologije , ki upošteva identično opredelitev lastnosti , je 1 — — 0,800. • • 3.3.3.3.2 Odvečnost podlastnosti Problem : Do odvečnosti podlastnosti pride takrat , ko načrtovalec ontologije neposredno ali posredno opredeli , da je lastnost podlastnost lastnosti in , medtem ko velja , da je podlastnost lastnosti .
, konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 18 : Preveri odvečnost podlastnosti Rezultat : Množica parov lastnosti , z odvečno relacijo podlastnost in ocena indikatorja popolnosti ontologije , ki upošteva odvečnost podlastnosti .
Anomalija Ponavljajoča se skupina lastnosti Problem : Včasih načrtovalci ontologije slabo opredelijo ontologijo z uporabo iste skupine lastnosti pri opredelitvi različnih razredov .
Ta skupina lastnosti se imenuje ponavljajoča se skupina lastnosti in jo je potrebno zamenjati z abstraktnim razredom , ki vsebuje vse omenjene lastnosti v vseh opredelitvah razredov , kjer se ta ponavljajoča skupina lastnosti uporablja .
Cilj : Preveriti , ali v ontologiji obstajajo ponavljajoče se skupine lastnosti , in omogočiti uporabniku rešitev problema – kreiranje novega razreda z omenjenimi lastnostmi in povezava le-tega na tiste razrede , ki uporabljajo ponavljajoče se skupine lastnosti .
Posledica pa je večje število razredov , vendar preglednejša ontologija .
objektne lastnosti Ř dokler obstaja popoln dvodelni podgraf ' v grafu , • izberi najboljšega kandidate " iz množice ' , kjer velja ?
, , — • vrni in konec Rezultat : Množica ponavljajočih skupin lastnosti v obliki ( razdelek z razredi , razdelek s skupine lastnosti .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 16% 12% 8% 4% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 90 : Pomembnost iskanja ponavljajoče se skupine lastnosti ( anomalija komponente RBox ) pri izračunu OC Primer : Slika 91 prikazuje ontologijo z dvema ponavljajočima se skupinama lastnosti in je predstavljena v obliki dvodelnega grafa .
Slika 91 : Primer iskanja ponavljajoče se skupine lastnosti ( anomalija komponente RBox ) pri izračunu OC v obliki popolnega dvodelnega grafa Po izvedbi algoritma sta odkriti naslednji ponavljajoči se skupini lastnosti : { { Oseba , Dolg } , { ulica , hišna številka , poštna številka } } in { { Dolg , Račun } , { vrednost , valuta } } .
Slika 92 : Primer odprave ponavljajoče se skupine lastnosti ( anomalija komponente RBox ) pri izračunu OC v obliki popolnega dvodelnega grafa S t r a n 11 2 3 .
po g l a v j e | Mo d e l z a h i t er r a z v o j o n t o l o g i j 3.3.4 KOMPONENTA ABOX 3.3.4.1 Opis 3.3.4.1.1 Formalen opis Problem : Primerki razredov in lastnosti morajo biti v skladu z aksiomi , ki so opredeljeni v shematskem delu ontologije .
Uporabniku so na podlagi seznama kršitev na voljo akcije , ki jih lahko izvede za odpravo nepravilnosti .
Pri primerkih lastnosti pa preverjamo definicijsko območje in zalogo vrednosti .
] ) ‹ Zaloga vrednosti lastnosti ‹ Definicijsko območje lastnosti Ř za vsak ?
če je primerek razreda potem je množica razredov , katere je primerek je množica lastnosti , povezana z unijo razredov iz za vsako ?
‹ Kardinalnost lastnosti ‹ Število primerkov lastnosti ‹ Primerek lastnosti če ?
, konec pogoja če konec sprehoda po lastnostih sicer če je primerek lastnosti potem je množica lastnosti , katere je primerek če ?
, " " sicer konec pogoja če konec pogoja če konec sprehoda po primerkih vrni in konec Algoritem 20 : Preveri formalen opis primerkov Rezultat : Množica parov , , kjer je za vsak primerek prikazan tudi vzrok nepopolnosti formalnega opisa , in ocena indikatorja popolnosti ontologije , ki upošteva formalen opis primerkov .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 93 : Pomembnost preverjanja formalnega opisa primerkov ( opis komponente ABox ) pri izračunu OC Primer : Slika 94 prikazuje ontologijo z osmimi primerki ( štirje primerki razredov in štirje primerki lastnosti ) .
Testna ontologija vsebuje številne kršitve sheme , in sicer se nanašajo na kršitev kardinalnosti lastnosti .
Slika 94 : Primer preverjanja formalnega opisa primerkov ( opis komponente ABox ) pri izračunu OC algoritma so odkrite naslednje kršitve formalnega opisa primerkov : , , , , , , , , , , , in , .
Ocena testne ontologije z nepopolnim formalnim opisom • • primerkov je 0,600. 3.3.4.1.2 Obstoj primerka 3.3.4.1.2.1 Razred Problem : Za vsak razred v ontologiji , ki ima tudi primerek , velja , da je takšen gradnik dejansko uporabljiv v aplikaciji .
konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 21 : Preveri obstoj primerkov razreda Rezultat : Množica razredov brez primerkov in ocena indikatorja popolnosti ontologije , ki upošteva obstoj primerkov razreda .
Globalna utež v procesu ROD : • • • Pomembnost v procesu ROD : 30% 20% 10% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 95 : Pomembnost preverjanja obstoja primerkov razreda ( opis komponente ABox ) pri izračunu OC Primer : Slika 96 prikazuje ontologijo s štirimi razredi in štirimi primerki razredov .
Slika 96 : Primer preverjanje obstoja primerkov razreda ( opis komponente ABox ) pri izračunu OC naslednje , .
konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 22 : Preveri obstoj primerkov lastnosti Rezultat : Množica lastnosti brez primerkov in ocena indikatorja popolnosti ontologije , ki upošteva obstoj primerkov lastnosti .
Globalna utež v procesu ROD : • • • Pomembnost v procesu ROD : 20% 15% 10% 5% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 97 : Pomembnost preverjanja obstoja primerkov lastnosti ( opis komponente ABox ) pri izračunu OC Primer : Slika 98 prikazuje ontologijo s štirimi lastnostmi in dvema primerkoma lastnosti .
Slika 98 : Primer preverjanja obstoja primerkov lastnosti ( opis komponente ABox ) pri izračunu OC Po izvedbi algoritma identificiramo naslednje lastnosti z manjkajočimi primerki : , .
Ocena testne ontologije z manjkajočimi primerki lastnosti je 1 — — 0,500. 3.3.4.2 Razdelitev 3.3.4.2.1 Skupni primerek Problem : Pri kreiranju primerkov razredov se pogosto zgodi , da določen primerek pripada razredom , ki so razdruženi .
V tem primeru pride do napake skupnih primerkov .
Postopek : Za vsak primerek se preveri , ali v množici razredov , kjer so razredi , katerih je neposredni primerek , obstajata razreda in , ki sta razdružena .
preveriSkupnePrimerke 1 ‹ Število neposrednih primerkov v ontologiji ‹ Množica razredov , katerih je neposredni primerek ?
, ?
, , konec pogoja če konec sprehoda po vseh primerkih vrni in konec Algoritem 23 : Preveri skupne primerke Rezultat : Množica predstavlja napako skupnega primerka in ocena indikatorja popolnosti ontologije , ki upošteva skupne primerke .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 99 : Pomembnost preverjanja skupnih primerkov ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 100 prikazuje ontologijo , ki vsebuje razrede , njihovo medsebojno povezanost z relacijami podrazred , primerke razredov in številne napake skupnih primerkov .
Po izvedbi algoritma dobimo seznam naslednjih skupnih primerkov : { DEP301 , Depozit , { BRENT , Obrestni inštrument , Izvedeni inštrument na blago } in { FXI , Delnica , Lastniški izveden instrument } .
Ocena testne ontologije z napakami skupnih primerkov je — — Slika 100 : Primer preverjanja skupnih primerkov ( razdelitev komponente ABox ) pri izračunu OC 3.3.4.2.2 Zunanji primerek Problem : Pri dekompoziciji razredov v podrazrede se pogosto zgodi , da primerek razreda ne pripada nobenemu od podrazredov .
V tem primeru pride do napake zunanjih primerkov .
Postopek : Za vsak razred preverimo , če obstaja kakšen primerek , ki ne obstaja v množici primerkov podrazredov .
konec pogoja če konec sprehoda po vseh razredih – vrni in konec Algoritem 24 : Preveri zunanje primerke Rezultat : Množica razredov , kjer je prišlo do kršitve zunanjih primerkov , in ocena indikatorja popolnosti ontologije , ki upošteva zunanje primerke .
Globalna utež v procesu ROD : • • Pomembnost v procesu ROD : 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 101 : Pomembnost preverjanja zunanjih primerkov ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 102 prikazuje enostavno ontologijo , v kateri so prisotne napake zunanjih primerkov .
Slika 102 : Primer preverjanja zunanjih primerkov ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi č š .
Če na podlagi omenjenih rezultatov poskušamo odpraviti to napako , je ena od možnih rešitev prikazana na naslednjem primeru ( Slika 103 ) .
Slika 103 : Primer odpravljenega problema pri preverjanju zunanjih primerkov ( razdelitev komponente ABox ) pri izračunu OC S t r a n 12 1 3 .
Cilj : S podatkovno usmerjenim pristopom na podlagi primerkov razredov predlagati relacije podrazred med posameznimi razredi .
Postopek : Pari razredov , so identificirani kot potencialni kandidati za podrazrede , če vsebujejo skupne primerke .
Slika 104 : Vsebinska vprašanja za identifikacijo relacij podrazred Po identifikaciji omenjenih parov razredov se uporabniku postavijo vsebinska vprašanja , in ( Slika 104 ) in glede na odgovore so možni naslednji scenariji ( Slika 105 ) : Slika 105 : Različni scenariji pri identifikaciji relacij tipa podrazred predlagane , a v ontologiji ne obstajajo .
‹ je podrazred od 0 ‹ Število manjkajočih relacij podrazred v ontologiji Rezultat : Množica parov razredov , , kjer se predlaga relacija podrazred ?
in ocena indikatorja popolnosti ontologije , ki upošteva predlagane relacije podrazred .
Globalna utež v procesu ROD : • • • • Pomembnost v procesu ROD : 10% 8% 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 106 : Pomembnost predlaganja relacij podrazred ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 107 prikazuje proces predlaganja relacij podrazred na podlagi primerkov razredov .
Slika 107 : Primer predlaganja relacij podrazred ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi algoritma in posredovanih odgovorih na vsebinska vprašanja dobimo naslednji relaciji podrazred : , č š in č š , .
Ocena testne ontologije s predlaganimi relacijami podrazred je 1 — 0,500. 3.3.4.2.3.1.2 Ekvivalenten razred Problem : Tehnično neizobraženi uporabniki imajo pogosto težave pri opredelitvi razredne taksonomije brez dodatne pomoči , še posebej pri združevanju več ontologij skupaj .
Cilj : S podatkovno usmerjenim pristopom na podlagi primerkov razredov predlagati ekvivalentne relacije med posameznimi razredi .
Postopek : Pari razredov , so identificirani kot potencialni kandidati za ekvivalentne razrede , če vsebujejo skupne primerke .
Po identifikacij omenjenih parov razredov se uporabniku postavijo vsebinska vprašanja , in ( Slika 104 ) in glede na odgovore je možen naslednji scenarij ( Slika 108 ) : , ?
Slika 108 : Scenarij pri identifikaciji relacije tipa ekvivalentni razred Ocena indikatorja popolnosti ontologije temelji na številu relacij ekvivalentni razred , ki so predlagane , a v ontologiji ne obstajajo .
potem 1 konec pogoja če konec pogoja če konec pogoja če konec sprehoda po vseh razredih konec sprehoda po vseh razredih 1 — vrni in konec Rezultat : Množica parov razredov , , kjer se predlaga relacija ekvivalentni razred ?
Globalna utež v procesu ROD : • • • • Pomembnost v procesu ROD : 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 109 : Pomembnost predlaganja relacij ekvivalentni razred ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 110 prikazuje proces predlaganja relacij ekvivalentni razred na podlagi primerkov razredov .
z razredi Finančni inštrument , Delnica na odgovore vsebinskih vprašanj je prikazan tudi končni rezultat .
S t r a n 12 6 o n t o l o g i j So primerki { CMP , GOOG , KO in ISRG } razreda [ Delnica ] ravno tako primerki razreda [ Finančni inštrument ] ?
Q3 So primerki { EEB , FXI in AA0UX4 } razreda [ Finančni inštrument ] ravno tako primerki razreda [ Delnica ] ?
Q2 So vsi primerki razreda [ ETF ] tudi primerki razreda [ Finančni inštrument ] in obratno ?
Slika 110 : Primer predlaganja relacij ekvivalentni razred ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi algoritma in posredovanih odgovorih na vsebinska vprašanja dobimo naslednjo relacijo ekvivalenten razred : , č š .
Ocena testne ontologije s 0. neizobraženi uporabniki imajo pogosto težave pri opredelitvi podrazredih razredov , se takšno opravilo močno poenostavi , saj mora uporabnik le vnesti primerke Cilj : S taksonomijo z vnašanjem primerkov razredov .
po g l a v j e | Mo d e l z a h i t e r r a z v o j o n t o l o g i j ¬ , ?
Ř Slika 111 : Scenarij pri identifikaciji relacij tipa razdružen razred Ocena indikatorja popolnosti ontologije temelji na številu vseh razdruženih parov podrazredov , ki so predlagani , a v ontologiji ne obstajajo .
Ř ‹ Množica vseh parov podrazredov , v ontologiji Ř za vsak ?
za vsak par podrazredov , ?
, kjer velja ?
?
, konec pogoja če konec pogoja če konec sprehoda po parih podrazredov konec sprehoda po vseh razredih 1 — vrni in konec Algoritem 27 : Predlagaj relacije razdružen razred Rezultat : Množica parov razredov , , kjer se predlaga relacija razdružen razred ?
Ř in ocena indikatorja popolnosti ontologije , ki upošteva predlagane relacije razdružen razred .
Globalna utež v procesu ROD : • • • • Pomembnost v procesu ROD : 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 112 : Pomembnost predlaganja relacij razdružen razred ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 113 prikazuje proces predlaganja relacij razdružen razred na podlagi primerkov razredov .
Slika 113 : Primer predlaganja relacij razdružen razred ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi algoritma in posredovanih odgovorih na vsebinska vprašanja dobimo naslednjo relacijo razdružen razred : , .
Ocena testne ontologije s predlaganimi relacijami razdružen razred je 1 — 3.3.4.2.3.2 Lastnost 3.3.4.2.3.2.1 Podlastnost Problem : Tehnično neizobraženi uporabniki imajo pogosto težave pri opredelitvi taksonomije lastnosti brez dodatne pomoči .
Če uporabniku pri tem pomagamo s klasifikacijo vnesenih primerkov lastnosti , se takšno opravilo močno poenostavi , saj mora uporabnik le vnesti primerke posameznih lastnosti in odgovoriti na nekaj enostavnih vsebinskih vprašanj .
Cilj : S podatkovno usmerjenim pristopom na podlagi primerkov lastnosti predlagati relacije podlastnost med posameznimi lastnostmi .
Slika 114 : Vsebinska vprašanja za identifikacijo relacij podlastnost Po identifikaciji omenjenih parov lastnosti se uporabniku postavijo vsebinska vprašanja , in ( Slika 114 ) in glede na odgovore so možni naslednji scenariji ( Slika 115 ) : Slika 115 : Različni scenariji pri identifikaciji relacij tipa podlastnost Ocena indikatorja popolnosti ontologije temelji na številu relacij podlastnost , ki so predlagane , a v ontologiji ne obstajajo .
¬ , ?
potem 1 konec pogoja če konec pogoja če konec pogoja če konec sprehoda po vseh lastnostih konec sprehoda po vseh lastnostih 1 — vrni in konec Algoritem 28 : Predlagaj relacije podlastnost Rezultat : Množica parov lastnosti , , kjer se predlaga relacija podlastnost ?
in ocena indikatorja popolnosti ontologije , ki upošteva predlagane relacije podlastnost .
Globalna utež v procesu ROD : • • • • Pomembnost v procesu ROD : 6% 4% 2% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 116 : Pomembnost predlaganja relacij podlastnost ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 117 prikazuje proces predlaganja relacij podlastnost na podlagi primerkov lastnosti .
Glede na odgovore vsebinskih vprašanj je prikazan tudi končni rezultat .
Slika 117 : Primer predlaganja relacij podlastnost ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi algoritma in posredovanih odgovorih na vsebinska vprašanja dobimo naslednji relaciji podlastnost : { se redko trguje na , se trguje na } in { se pogosto trguje na , se trguje na } .
Ocena testne ontologije s predlaganimi relacijami podlastnost je 1 — 0,500. 3.3.4.2.3.2.2 Ekvivalentna lastnost Problem : Tehnično neizobraženi uporabniki imajo pogosto težave pri opredelitvi taksonomije lastnosti brez dodatne pomoči , še posebej pri združevanju več ontologij skupaj .
Cilj : S podatkovno usmerjenim pristopom na podlagi primerkov lastnosti predlagati ekvivalentne relacije med posameznimi razredi .
Po identifikaciji omenjenih parov lastnosti se uporabniku postavijo vsebinska vprašanja , in ( Slika 114 ) in glede na odgovore je možen naslednji scenarij ( Slika 118 ) : Slika 118 : Scenarij pri identifikaciji relacije tipa ekvivalentna lastnost Ocena indikatorja popolnosti ontologije temelji na številu relacij ekvivalentna lastnost , ki so predlagane , a v ontologiji ne obstajajo .
potem 1 konec pogoja če konec pogoja če konec pogoja če konec sprehoda po vseh lastnostih konec sprehoda po vseh lastnostih 1 — vrni in konec Rezultat : Množica lastnosti , , kjer se predlaga relacija ekvivalentna lastnost ?
in indikatorja popolnosti ontologije , ki upošteva predlagane relacije ekvivalentna lastnost .
Globalna utež v procesu ROD : • • • • Pomembnost v procesu ROD : 4% 3% 2% 1% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 119 : Pomembnost predlaganja relacij ekvivalentna lastnost ( razdelitev komponente ABox ) pri izračunu OC Primer : Slika 120 prikazuje proces predlaganja relacij ekvivalentna lastnost na podlagi primerkov lastnosti .
Glede na odgovore vsebinskih vprašanj je prikazan tudi končni rezultat .
Slika 120 : Primer predlaganja relacij ekvivalentna lastnost ( razdelitev komponente ABox ) pri izračunu OC Po izvedbi algoritma in posredovanih odgovorih na vsebinska vprašanja dobimo naslednjo relacijo ekvivalentna lastnost : , .
Ocena testne ontologije s predlaganimi relacijami ekvivalentna lastnost je 1 — 0. 3.3.4.3 Odvečnost 3.3.4.3.1 Identična opredelitev Problem : Pri kreiranju primerkov pogosto pride do težave različnih primerkov , ki imajo identično formalno opredelitev , vendar različna imena .
Dejstvo je , da gre za isti pojem , vendar drugače poimenovan ( t. i. sinonim ) .
Cilj : Preveriti , ali v ontologiji obstajajo primerki z identično formalno opredelitvijo , in omogočiti uporabniku rešitev problema – uvedba identičnih primerkov , združevanje primerkov ali odstranitev odvečnih primerkov .
Pri primerkih razredov se preverja enakost množice vseh primerkov lastnosti , povezanih s primerkom razreda in enakost množice razredov , katerim primerek pripada .
Pri primerkih lastnosti pa se primerja množica definicijskih območij , množica zalog vrednosti in množica lastnosti , katerim primerek pripada .
preveriIdenticnoOpredelitevPrimerka 1 ‹ Število razredov v ontologiji ‹ Število lastnosti v ontologiji ‹ Primerek razreda ‹ Primerek lastnosti ‹ Množica vseh primerkov lastnosti ( opisne , podatkovne in objektne ) , povezanih s primerkov razreda ‹ Množica razredov , katerih je primerek ‹ Množica lastnosti , katerih je primerek ‹ Definicijsko območje primerka lastnosti ‹ Zaloga vrednosti primerka lastnosti Ř za vsak ?
Globalna utež v procesu ROD : ' • • Pomembnost v procesu ROD : 3% 2% 1% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 121 : Pomembnost preverjanja identične opredelitve primerka ( odvečnost komponente ABox ) pri izračunu OC Primer : Slika 122 prikazuje opredelitvijo in različnima imenoma .
Slika 122 : Primer preverjanja identične opredelitve primerka ( odvečnost komponente ABox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednjo identično opredelitev primerka : primerek razreda , , .
Ocena testne ontologije , ki upošteva identično opredelitev primerka , je 1 — 3.3.4.3.2 Odvečnost primerka Do odvečnosti relacije pripadnosti razredu pride takrat , ko načrtovalec podrazred razredu .
Neposredna pripadnost primerka razredu je odvečna , saj velja posredna pripadnost razredu preko relacije podrazred med razredoma in .
Postopek : Za vsak primerek ( razreda ali lastnosti ) preverimo , ali vsebuje večkratne pripadnosti razredu ali lastnosti , ki so odvečne .
če je primerek razreda ‹ Množica razredov , katerih je primerek za vsak ?
, konec pogoja če konec sprehoda po razredih sicer če je primerek lastnosti ‹ Množica lastnosti , katerih je primerek za vsako ?
?
, konec pogoja če konec sprehoda po lastnostih konec pogoja če konec sprehoda po vseh primerkih vrni in konec Algoritem 31 : Preveri odvečnost primerka Rezultat : Množica parov , in , , kjer je odkrita odvečnost primerka in ocena indikatorja popolnosti ontologije , ki upošteva odvečnost primerka .
Globalna utež v procesu ROD : • • Globalna pomembnost v procesu ROD : 3% 2% 1% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 123 : Pomembnost preverjanja odvečnosti primerka ( odvečnost komponente ABox ) pri izračunu OC prikazuje ontologijo z neposrednimi primerki , v kateri nekateri : GOOG : AAPL .
{ EB5EP4 , Finančni inštrument } , { GOOG , Finančni inštrument } in inštrument } .
Ocena testne ontologije , ki upošteva odvečnost primerkov , 0,861. 3.3.4.4 Anomalija 3.3.4.4.1 Neuporabljen razred se nikoli ne uporabi v aplikaciji in nima primerkov .
Največkrat se pojavlja v večjih ontologijah , in sicer v situacijah , ko je bil v fazi razvoja določen razred zamenjan s generaliziranim razredom .
Neuporabljen razred ni vedno kandidat za brisanje , saj ga je včasih smiselno obdržati zaradi ponovne uporabljivosti ali standardizacije Načrtovalec ontologije se mora tako odločiti med ponovno uporabljivostjo prvotne ontologije in poenostavljenega pristopa k razvoju ontologij , kjer obdržimo le razrede , ki jih potrebujemo .
če ?
konec pogoja če konec sprehoda po vseh razredih vrni in konec Algoritem 32 : Poišči neuporabljene razrede Rezultat : Množica neuporabljenih razredov in ocena indikatorja popolnosti ontologije , ki upošteva odvečnost primerka .
Globalna utež v procesu ROD : • • Globalna pomembnost v procesu ROD : 3% 2% 1% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 125 : Pomembnost iskanja neuporabljenih razredov ( anomalija komponente ABox ) pri izračunu OC Primer : Slika 126 prikazuje ontologijo , ki vsebuje neuporabljene koncepte .
Slika 126 : Primer iskanja neuporabljenih razredov ( anomalija komponente ABox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednja neuporabljena razreda : , .
Ocena testne ontologije , ki upošteva neuporabljene razrede , je 1 — — 0,333. 3.3.4.4.2 Neuporabljena lastnost Problem : Neuporabljena lastnost je zadnja lastnost v hierarhiji , ki se nikoli ne uporabi v aplikaciji in nima primerkov .
Največkrat se pojavlja v večjih ontologijah , in sicer v situacijah , ko je bila v fazi razvoja določena lastnost zamenjana s specializirano ali generalizirano lastnostjo .
Neuporabljena lastnost ni vedno kandidat za brisanje , saj jo je včasih smiselno obdržati zaradi ponovne uporabljivosti ali standardizacije ontologije .
Načrtovalec ontologije se mora tako odločiti med ponovno uporabljivostjo prvotne ontologije in poenostavljenim pristopom k razvoju ontologij , kjer obdržimo le lastnosti , ki jih potrebujemo .
Cilj : Preveriti , ali v ontologiji obstajajo neuporabljene lastnosti , in omogočiti uporabniku rešitev problema – odstranitev lastnosti ali dodajanje primerkov .
‹ je podlastnost od ‹ Primerek pripada lastnosti Ř za vsako ?
?
konec pogoja če konec sprehoda po vseh lastnostih vrni in konec Algoritem 33 : Poišči neuporabljene lastnosti Rezultat : Množica neuporabljenih lastnosti in ocena indikatorja popolnosti ontologije , ki upošteva odvečnost primerka .
po g l a v j e | Mo d e l z a h i t er r a z v o j o n t o l o g i j Globalna utež v procesu ROD : • • Globalna pomembnost v procesu ROD : 3% 2% 1% 0% ( 2.1 ) ( 2.2 ) ( 2.3 ) ( 2.4 ) ( 2.5 ) ( 2.6 ) ( 3.1 ) koraki v procesu ROD Slika 127 : Pomembnost iskanja neuporabljenih lastnosti ( anomalija komponente ABox ) pri izračunu OC Primer : Slika 128 prikazuje ontologijo , ki vsebuje neuporabljene lastnosti .
Slika 128 : Primer iskanja neuporabljenih lastnosti ( anomalija komponente ABox ) pri izračunu OC Po izvedbi algoritma odkrijemo naslednjo neuporabljeno lastnost : .
Ocena testne ontologije , ki upošteva neuporabljene lastnosti , je 1 — Za podporo hitremu IntelliOnto ( podrobnosti v poglavju 4.1 ) .
Pri celotnem procesu je na voljo tudi indikator popolnosti ontologije ( OC ) , ki uporabniku pomaga pri napredovanju po korakih procesa ROD ter nenehno preverja kvaliteto ontologije .
Aplikabilnost in primernost procesa ROD pri hitrem razvoju ontologij sta bili izmerjeni na primeru ontologije finančnega trgovanja na finančnih trgih ( podrobnosti v poglavju 4.2 ) .
Pri procesu razvoja se je merila vsaka posamezna iteracija razvoja ki jo je uporabnik izvedel .
Namen evaluacije je pokazati , da se s procesom pristopa ROD k hitremu razvoju ontologij , zmanjša število iteracij in da se kvaliteta razvite ontologije konstantno vzdržuje in ni večjih nihanj , saj uporabniku v primeru nepopolne ontologije ni dovoljen prehod v naslednji korak procesa .
4.1 ORODJE INTELLIONTO Za lažjo in hitrejšo uporabo hitrega pristopa za razvoj ontologij ( ROD ) je bil razvit prototip orodja IntelliOnto .
Slika 129 : Preslikava problemske domene v ontologijo s pomočjo procesa ROD uporabniški vmesnik orodja IntelliOnto , ki je razdeljen v več funkcionalnih delov .
Več najdete na Slika 130 : Uporabniški vmesnik orodja IntelliOnto Prikaz sosednosti konceptov omogoča obvladovanje kompleksnosti ontologije z uporabo filtra sosednosti .
Uporabnik lahko s pomočjo drsnika enostavno nastavlja število korakov , ki se pri izračunu sosednosti upoštevajo .
Rezultati evaluacije ( Slika 56 in Slika 130 ) so predstavljeni v obliki indikatorja od 0 % do 100 % in seznama akcij , ki jih je potrebno izvesti , da dosežemo boljšo stopnjo popolnosti ontologije .
Koraki procesa razvoja ontologije pomagajo uporabniku pri sledenju zaporednih korakov procesa ROD .
Status je del uporabniškega vmesnika , kjer so prikazane podrobnosti o izvedenih akcijah in nekateri odzivi sistema .
Osrednji del za manipulacijo s koncepti in pravili je grafično usmerjen in omogoča uporabnikom enostavno kreiranje konceptov , medsebojnih povezav in omejitev na način , ki kar najbolj spominja na izražanje v naravnem jeziku .
Pri delu npr. uporabljamo pogovorne izraze , medtem ko poslovni svet zahteva uporabo uradno sprejete terminologije , kar lahko zelo elegantno rešimo z uporabo sinonimov .
V nadaljevanju bodo podrobneje predstavljeni vsi omenjeni načini .
Osnovni gradniki , ki nastopajo v točkah grafa , so : • razredi , • lastnosti in • primerki .
Slika 131 prikazuje podrobnejšo opredelitev razreda , kjer lahko dodamo : opis v naravnem jeziku , dodaten opis in primerke koncepta .
Slika 131 : Korak 1 dodajanja omejitev Pri lastnostih lahko dodajamo opis v naravnem jeziku ter dodaten opis ( Slika 132 ) .
Slika 132 : Korak 2 dodajanja omejitev Pri dodatnem opisovanju primerkov imamo ravno tako na voljo več možnosti , in sicer opis primerka ter opredelitev enakosti oz. različnosti , kot prikazuje Slika 133.
Slika 133 : Korak 3 dodajanja omejitev V začetnih fazah razvoja ontologije je zelo pomemben opis entitet v naravnem jeziku .
Pri vseh opisih je podprta večjezičnost , kar pomeni , da lahko opise zapišemo v poljubnem jeziku , medtem ko sistem uporabnika spodbuja k uporabi vsaj dveh jezikov ( angleškega jezika kot splošno sprejetega , kar pozitivno vpliva na ponovno uporabnost in lokalni jezik , v katerem je ontologija razvita , npr. slovenski jezik ) .
Tak pristop se pokaže kot zelo uporaben tudi pri opredelitvi naprednejših omejitev in pravil , saj se pri takšni opredelitvi samodejno in dinamično generira približek opisa v naravnem jeziku , tako da je semantično modeliranje uporabniku zelo poenostavljeno .
Slika 134 : Korak 1.1 dodajanja omejitev Rezultat omenjene akcije sta naslednja aksioma v ontologiji : < owl:Class rdf:ID = " FinancniInstrument " > < rdfs:label xml:lang = " si " > Finančni inštrument < / rdfs:label > < rdfs:comment xml:lang = " si " > Poljubna oblika financiranja .
< / rdfs:comment > < / owl:Class > Razrede je možno tudi dodatno opisati , in sicer na naslednje načine ( Slika 135 ) : • nov opis z lastnostjo , • dopolnjen opis z lastnostjo in • dopolnjena opredelitev koncepta .
Slika 135 : Korak 1.2 dodajanja omejitev Pri dodajanju novega opisa v obliki lastnosti uporabnik najprej izbere za kakšen tip opisa gre ( Slika 136 ) : • enostaven opis v obliki podatkovne lastnosti ali • kompleksen opis v obliki objektne lastnosti .
Zaradi enostavnejšega vnosa ima pri tipu lastnosti na voljo več načinov .
V nasprotnem primeru lahko našteje testne podatke , iz katerih se nato sklepa o podatkovnem tipu .
Slika 137 : Korak 1.2.1.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:DatatypeProperty rdf:ID = " simbol " > < rdfs:label xml:lang = " si " > simbol < / rdfs:label > < rdfs:domain rdf:resource = " # FinancniInstrument " / > < rdfs:range rdf:resource = " xsd:string " / > < / owl:Class > Pri kompleksnem opisu je potrebno opredeliti nov razred , ki dodatno opisuje obstoječega ( Slika 138 ) .
Če razred , ki dodatno opisuje izbranega , že obstaja , ga preprosto izberemo s seznama , sicer kreiramo novega .
Slika 138 : Korak 1.2.1.2 dodajanje omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:ObjectProperty rdf:ID = " seTrgujeNa " > < rdfs:label xml:lang = " si " > se trguje na < / rdfs:label > < rdfs:domain rdf:resource = " # FinancniInstrument " / > < rdfs:range rdf:resource = " # TrgovalniDan " / > < / owl:Class > Uporabnik lahko tudi dodatno opredeli že obstoječe lastnosti ( Slika 139 ) , in sicer najprej izbere lastnost s seznama , kjer so prikazane zgolj lastnosti z definicijskim območjem izbranega razreda .
Ko je lastnost izbrana , se lahko nastavi : • vrednost in • števnost lastnosti .
Slika 140 : Korak 1.2.2.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:Class rdf:ID = " FinancniInstrument " > < owl:equivalentClass > < owl:Restriction > < owl:onProperty > < owl:ObjectPropertyrdf:ID = " kotiraNaBorzi " > < / owl:onProperty > < owl:allValuesFrom > < owl:Class rdf:ID = " Borza " / > < / owl:allValuesFrom > < / owl:Restriction > < / owl:equivalentClass > ...
< / owl:Class > Pri števnosti lastnosti uporabnik nastavlja najmanjše in največje število primerkov , ki je lahko povezano z določenim primerkom izbranega razreda ( Slika 141 ) .
Slika 141 : Korak 1.2.2.2 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:Class rdf:ID = " FinancniInstrument " > < owl:equivalentClass > < owl:Class > < owl:intersectionOf rdf:parseType = " Collection " > < owl:Restriction > < owl:onProperty > < owl:ObjectPropertyrdf:ID = " kotiraNaBorzi " > < / owl:onProperty > < owl:minCardinality rdf:datatype = xsd:int > 1 < / owl:minCardinality > < / owl:Restriction > < owl:Restriction > S t r a n 14 9 4. pog l a v j e | Ev a l ua c i j a < owl:onProperty > < owl:ObjectPropertyrdf:ID = " kotiraNaBorzi " > < / owl:onProperty > < owl:maxCardinality rdf:datatype = xsd:int > 4 < / owl:maxCardinality > < / owl:Restriction > < / owl:Class > < / owl:equivalentClass > ...
Uporabnik ima na tem mestu možnost dodatne opredelitve razreda v smislu vsebovanosti primerkov oz. omejitve opredelitve .
Slika 142 : Korak 1.2.3 dodajanja omejitev Pri prvi od možnosti ( vsebovanost primerkov ) se opredeljujejo aksiomi owl:equivalentClass , owl:disjointWith in rdfs:subClassOf .
Slika 143 : Korak 1.2.3.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : S t r a n 15 0 4. pog l a vj e | Eva l ua c i j a < owl:Class rdf:ID = " FinancniInstrument " > < owl:equivalentClass > < owl:Class rdf:ID = " FI " / > < / owl:equivalentClass > < owl:disjointWith > < owl:Class rdf:ID = " TrgovalniDan " / > < / owl:disjointWith > ...
< / owl:Class > < owl:Class rdf:ID = " Delnica " > < rdfs:subClassOf rdf:resource = " # FinancniInstrument " / > < / owl:Class > Naslednja možnost dopolnitve opisa opredelitve koncepta je omejitev opredelitve ( Slika 144 ) , kjer se razrede opredeli s pomočjo teorije množic .
Za primerke Posojilo velja , da : • so , ali primerki koncepta Kratkoročno posojilo ali primerki koncepta Dolgoročno posojilo Posojilo Kratkoročno posojilo Dolgoročno posojilo • so , in primerki koncepta Denarno sredstvo in primerki koncepta Finančni inštrument Posojilo Denarno sredstvo Finančni inštrument • so vsi ostali primerki , ki niso Depozit Posojilo Depozit Slika 144 : Korak 1.2.3.2 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:Class rdf:ID = " Posojilo " > < owl:equivalentClass > < owl:Class > < owl:intersectionOf rdf:parseType = " Collection " > S t r a n 15 1 4. pog l a v j e | Ev a l ua c i j a < owl:Class > < owl:complementOf > < owl:Class rdf:ID = " Depozit " / > < / owl:complementOf > < / owl:Class > < owl:Class > < owl:unionOf rdf:parseType = " Collection " > < owl:Class rdf:ID = " KratkorocnoPosojilo " / > < owl:Class rdf:ID = " DolgorocnoPosojilo " / > < / owl:unionOf > < / owl:Class > < owl:Class > < owl:intersectionOf rdf:parseType = " Collection " > < owl:Class rdf:ID = " DenarnoSredstvo " / > < owl:Class rdf:ID = " FinancniInstrument " / > < / owl:intersectionOf > < / owl:Class > < / owl:intersectionOf > < / owl:Class > < / owl:equivalentClass > < / owl:Class > Poleg opisa razreda v naravnem jeziku in dodatnega opisa razreda lahko uporabnik dodaja tudi primerke koncepta ( Slika 145 ) .
Za izbran razred se preberejo vse omejitve in aksiomi , ki so predstavljeni v obliki zahtevanih opisov in podatkov koncepta .
Slika 146 : Korak 1.3.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < FinancniInstrument rdf:ID = " GoogleInc " > < rdfs:label rdf:datatype = " xsd:string " > Google Inc .
< / rdfs:label > < ISIN rdf:datatype = " xsd:string " > US38259P5089 < / ISIN > < ime rdf:datatype = " xsd:string " > Google Inc .
Slika 147 : Korak 1.3.2 dodajanja omejitev Rezultat omenjene akcije je naslednji aksiom v ontologiji : < FinancniInstrument rdf:ID = " Krkadd " > ...
Slika 148 : Korak 2.1 dodajanja omejitev Rezultat omenjene akcije sta naslednja aksioma v ontologiji : < owl:ObjectProperty rdf:ID = " seTrgujeNa " > < rdfs:label xml:lang = " si " > se trguje na < / rdfs:label > < rdfs:comment xml:lang = " si " > Finančni inštrument se trguje na trgovalni dan .
Slika 149 : Korak 2.2 dodajanja omejitev Pri smeri lastnosti se upošteva načelo sprehajanja po semantični mreži , kjer naj ne bi obstajali izolirani otoki razredov , ki med seboj niso povezani .
Slika 150 : Korak 2.2.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:ObjectProperty rdf:ID = " seTrgujeNa " > < rdfs:domain rdf:resource = " # FinancniInstrument " / > < rdfs:range rdf:resource = " # TrgovalniDan " > < owl:inverseOf > < owl:ObjectProperty rdf:ID = " veljaZa " / > < / owl:inverseOf > ...
Slika 151 : Korak 2.2.2 dodajanja omejitev Pri omejitvi opredelitve se podobno kot pri razredih omejuje hierarhija lastnosti s pomočjo aksiomov owl:equivalentProperty in rdfs:subPropertyOf .
Slika 152 : Korak 2.2.2.1 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:ObjectProperty rdf:ID = " sePogostoTrgujeNa " > < rdfs:subPropertyOf > < owl:ObjectProperty rdf:ID = " seTrgujeNa " > < / rdfs:subPropertyOf > < / owl:ObjectProperty > < owl:ObjectProperty rdf:ID = " seZamenjujeLastnistvo " > < owl:equivalentProperty > < owl:ObjectProperty rdf:ID = " seTrgujeNa " > < / owl:equivalentProperty > < / owl:ObjectProperty > Naslednja od omejitev je funkcionalnost povezav , kjer je potrebno določiti , ali je lastnost funkcionalna ali inverzno funkcionalna .
• owl:InverseFunctionalProperty o Za lastnost < izbrana lastnost > velja , da primerek < definicijskega območja izbrane lastnosti > lahko opisuje samo en primerek < zaloge vrednosti izbrane lastnosti > .
Slika 153 : Korak 2.2.2.2 dodajanja omejitev S t r a n 15 6 4. pog l a vj e | Eva l ua c i j a Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < owl:InverseFunctionalProperty rdf:about = " seTrgujeNa " > ...
< / owl:InverseFunctionalProperty > Prehajanje povezav je tudi ena od podrobnosti , ki jih lahko uporabnik opredeli pri povezavah .
Pri prehodnosti povezav upoštevamo lastnosti tranzitivnosti in simetričnosti , kar uporabnik ugotovi s pomočjo vsebinskega vprašalnika ( Slika 154 ) : • owl:SymmetricProperty • owl:TransitiveProperty Slika 154 : Korak 2.2.2.3 dodajanja omejitev Pri dodatnem opisovanju primerkov lahko primerek opišemo oz. opredelimo kot medsebojno enakost ali različnost med primerki .
Če želimo dodatno opisati primerek , potem gre za identično opravilo , ki smo ga že predstavili v koraku 1.3.1 pri dodajanju primerkov razredu .
V primeru opredelitve enakosti oz. različnosti med primerki pa ima uporabnik na voljo obrazec , na katerem določi , ali je izbrani primerek identičen obstoječemu primerku oz. ali obstaja kakšen primerek , ki je eksplicitno različen od izbranega primerka ( Slika 155 ) .
Slika 155 : Korak 3.2 dodajanja omejitev Rezultat omenjene akcije so naslednji aksiomi v ontologiji : < FinancniInstrument rdf:ID = " GoogleInc " > < owl:sameAs rdf:resource = " # Google " > < owl:differentFrom rdf:resource = " # AppleInc " / > < / FinancniInstrument > 4.1.1.1.2 Vnos omejitev v obliki atomov pravil Ko uporabnik izbere način vnosa pravil ( kaj-če , odločitveno drevo ali odločitvena tabela ) je vnos omejitev identičen za vse tri načine .
Slika 156 : Korak A vnosa omejitev Na začetku uporabnik izbere tip atoma , ki ga želi vnesti .
4.1.1.1.2.1 Primerek razreda Omejitev primerka razreda se uporablja za izražanje pripadnosti primerka izbranemu razredu .
Slika 157 : Korak A.A vnosa omejitev Uporabnik lahko spreminja zgolj argumente in sicer najprej razred , kateremu naj primerek pripada .
Slika 158 prikazuje omenjeno akcijo , kjer se uporabniku prikaže seznam vseh razredov ontologije .
Slika 158 : Korak A.A.A vnosa omejitev Ko je izbira potrjena , se obrazec le-temu prilagodi , kot prikazuje Slika 159.
Slika 159 : Korak A.A.A.A vnosa omejitev Vnos omejitve se lahko začne tudi z vnosom primerka , kjer so na voljo naslednje možnosti ( Slika 160 ) : • nova spremenljivka , • obstoječa spremenljivka in • obstoječi primerek .
Slika 160 : Korak A.A.B vnosa omejitev Če se uporabnik odloči uporabiti novo spremenljivko , ga vnese s pomočjo obrazca ( Slika 161 ) , kjer se preverja tudi potencialen obstoj spremenljivke .
Slika 161 : Korak A.A.B.A vnosa omejitev Izbira obstoječe spremenljivke je izvedena tako , da se uporabniku prikaže seznam vseh spremenljivk , ki so na voljo ( Slika 162 ) .
Slika 162 : Korak A.A.B.B vnosa omejitev Zadnja od možnosti izbire primerka je obstoječi primerek ( Slika 163 ) .
Slika 163 : Korak A.A.B.C vnosa omejitev Po opredelitvi obeh potrebnih omejitev se obrazec prilagodi ( Slika 164 ) in vnos omejitve primerka razreda je končan .
dan1 ) medtem ko je izvorna koda v jeziku semantičnega spleta SWRL naslednja < swrl:ClassAtom > < swrl:classPredicate rdf:resource = " # TrgovalniDan " / > < swrl:argument1 rdf:resource = " # dan1 " / > < / swrl:ClassAtom > 4.1.1.1.2.2 Omejitev relacije Pri omejitvi relacije uporabnik opredeli omejitev povezave med dvema entitetama oz. podatkovnima tipoma .
Slika 165 : Korak A.C vnosa omejitev Obrazec za opredelitev omejitve enostavne relacije ( Slika 166 ) vsebuje tri argumente ( opis , primerek in vrednost ) ter vezni tekst .
Slika 167 : Korak A.C.B vnosa omejitev Vezni tekst se v obeh primerih kreira dinamično in je odvisen od izbrane relacije ter se pridobi iz sheme ontologije ( opis entitete v naravnem jeziku ) .
Na tem mestu se prikaže seznam vseh podatkovnih lastnosti ter pripadajoča zaloga vrednosti , da lahko uporabnik lažje izlušči kontekst uporabe ( npr. razlog za izvedbo akcije od Trgovalni dan ) .
Slika 168 : Korak A.C.A.A vnosa omejitev Ob izbiri podatkovne lastnosti se spremeni tudi vnosni obrazec , in sicer se upošteva definicijsko območje , tako da se spremeni naziv argumenta Primerek v Primerek < zaloga vrednosti podatkovne lastnosti > , v našem primeru je to Primerek Trgovalni dan ( Slika 169 ) .
Slika 169 : Korak A.C.A.A.A vnosa omejitev Uporabnik mora v nadaljevanju nastaviti še primerek podatkovne lastnosti in vrednost omenjene lastnosti ( Slika 170 ) .
Slika 170 : Korak A.C.A.A.A.A vnosa omejitev Podobno je tudi pri nastavljanju vrednosti , kjer so na voljo naslednje možnosti : • nova spremenljivka , • obstoječa spremenljivka in • konstantna vrednost .
Če uporabnik izbere novo spremenljivko pri primerku in konstantno vrednost podatkovne lastnosti , se pojavi vnosno okno , kjer uporabnik vnese potrebne podatke ( Slika 171 ) .
Slika 171 : Korak A.C.A.A.A.A.A vnosa omejitev Omejitev je tako opredeljena in prikazan v približku naravnega jezika ( Slika 172 ) .
" ) S t r a n 16 3 4. pog l a v j e | Ev a l ua c i j a medtem ko je izvorna koda v jeziku semantičnega spleta SWRL naslednja < swrl:DatavaluedPropertyAtom > < swrl:propertyPredicate rdf:resource = " # razlogZaIzvedboAkcije " / > < swrl:argument1 rdf:resource = " # dan2 " / > < swrl:argument2 rdf:datatype = " xsd:string " > Prisotnost » engulfing « trgovalnega vzorca < / swrl:argument2 > < / swrl:DatavaluedPropertyAtom > V primeru izbire obstoječih spremenljivk imamo na voljo izbiro že opredeljenih spremenljivk , kjer se upoštevajo tudi omejitve ontologije .
Pri spremenljivkah vrednosti pa se upošteva zaloga vrednosti podatkovne relacije , tako da je dovoljen vnos le izbranega enostavnega podatkovnega tipa .
Slika 173 : Korak A.C.A.A.A.A.B vnosa omejitev Zadnja možnost je izbira obstoječih primerkov in nove spremenljivke pri vrednosti podatkovne relacije ( Slika 174 ) .
Slika 174 : Korak A.C.A.A.A.A.B vnosa omejitev Pri omejitvi kompleksne relacije se od uporabnika najprej zahteva opredelitev relacije , ki jo želimo omejiti ( Slika 175 ) .
Slika 175 : Korak A.C.B.A vnosa omejitev Ob izbiri objektne lastnosti se spremeni tudi vnosni obrazec , in sicer se upošteva definicijsko območje in zaloga vrednosti , tako da se spremeni naziv argumenta Primerek v Primerek < definicijsko območje objektne lastnosti > in Primerek < zaloga vrednosti objektne lastnosti > ( Slika 176 ) .
Slika 176 : Korak A.C.B.A.A vnosa omejitev Uporabnik mora v nadaljevanju nastaviti še primerek podatkovne lastnosti in vrednost omenjene lastnosti ( Slika 177 ) .
Slika 177 : Korak A.C.B.A.A.A vnosa omejitev Če uporabnik izbere novo spremenljivko pri definicijskem območju objektne lastnosti in obstoječi primerek pri zalogi vrednosti , se pojavi vnosno okno , kjer uporabnik vnese potrebne podatke in izbere obstoječe primerke s seznama ( Slika 178 ) .
Slika 178 : Korak A.C.B.A.A.A.A vnosa omejitev Omejitev je tako opredeljena in prikazana v približku naravnega jezika ( Slika 179 ) .
Uporabnik lahko pri gradnji ontologije izbira med naslednjimi možnostmi ( Slika 180 ) : • primerjava podatkov , • primerjava primerkov , • matematične funkcije in • operacije z nizi .
Slika 180 : Korak A.D vnosa omejitev Obrazec za vnos omejitve primerjave podatkov je sestavljen iz treh atributov , in sicer dveh podatkov ter operacije , ki se izvede ( Slika 181 ) .
Slika 181 : Korak A.D.A vnosa omejitev Uporabnik lahko izbira med najbolj pogosto uporabljanimi operacijami za primerjavo podatkov , in sicer ( Slika 182 ) : • enakost ( = ) , • neenakost ( ?
Slika 182 : Korak A.D.A.A vnosa omejitev Ko je operacija primerjave določena , je potrebno izbrati podatek , kjer imamo na voljo naslednje možnosti ( Slika 183 ) : • nova spremenljivka , • obstoječa spremenljivka in • konstantna vrednost .
Slika 183 : Korak A.D.A.A.A vnosa omejitev Če uporabnik izbere novo spremenljivko in konstantno vrednost pri podatkih , potem ima na voljo obrazec za vnos vrednosti ( Slika 184 ) .
Ime nove spremenljivke današnja cena ob odprtju Izberi novo spremenljivko Primerjava podatkov Primerjava primerkov Matematične funkcije Operacije z nizi Nastavi konstantno vrednost Slika 184 : Korak A.D.A.A.A.A vnosa omejitev Omejitev je tako opredeljena in prikazana v približku naravnega jezika ( Slika 185 ) .
danasnjaCenaObOdprtju , 112.36 ) medtem ko je izvorna koda v jeziku semantičnega spleta SWRL naslednja < swrl:BuiltinAtom > < swrl:builtin rdf:resource = " swrlb:greaterThanOrEqual " / > < swrl:argument1 rdf:resource = " # danasnjaCenaObOdprtju " / > < swrl:argument2 rdf:datatype = " xsd:float " > 112.36 < / swrl:argument2 > < / swrl:BuiltinAtom > Obrazec za vnos omejitve primerjave primerkov je sestavljen iz treh atributov , in sicer dveh primerkov ter operacije ( ne ) enakosti ( Slika 186 ) .
Slika 186 : Korak A.D.B vnosa omejitev Uporabnik lahko izbira med operacijama enakosti in neenakosti ( Slika 187 ) .
Slika 187 : Korak A.D.B.A vnosa omejitev Ko izberemo ustrezno operacijo primerjave med primerki , se prilagodi tudi obrazec za opredelitev omejitve ( Slika 188 ) .
Slika 188 : Korak A.D.B.A.A vnosa omejitev Uporabnik mora v nadaljevanju določiti še vrednosti obeh primerkov , ki jih izbere iz padajočega seznama vrednosti ( Slika 189 ) .
Slika 189 : Korak A.D.B.A.A.A vnosa omejitev Po izbiri ustreznih primerkov je omejitev opredeljena in prikazana v približku naravnega jezika ( Slika 190 ) .
Slika 190 : Korak A.D.B.A.A.A.A vnosa omejitev Pri matematičnih omejitvah imamo na voljo vnaprej opredeljene enostavne operacije seštevanja ( + ) , odštevanja ( - ) , množenja ( * ) , deljenja (/) in absolutne vrednosti .
Slika 191 : Korak A.D.C vnosa omejitev Obrazec za vnos omejitve matematične operacije je sestavljen iz štirih atributov , dveh števil , na katerih se operacija izvede in rezultata .
Slika 192 : Korak A.D.C.A vnosa omejitev Pri izbiri števila imamo podobno kot pri ostalih vnosih omejitev na voljo naslednje možnosti ( Slika 193 ) : • nova spremenljivka , • obstoječa spremenljivka in • konstantna vrednost .
Slika 193 : Korak A.D.C.A.A vnosa omejitev Po ustreznem nastavljanju vrednosti se obrazec prilagodi in izjava je v približku naravnega jezika prikazana na Slika 194.
Slika 194 : Korak A.D.C.A.A.A vnosa omejitev Omenjeno omejitev lahko v abstraktni sintaksi zapišemo kot swrlb:subtract ( ?
4.1.1.2.1 Zajem pravil z odločitvenim drevesom Pravila za določanje barve telesa svečnika so naslednja : • Če je cena ob zaprtju trgovalnega dne višja ali enaka od cene ob odprtju , je telo svečnika bele barve .
Slika 195 : Zajem pravil za določitev barve telesa svečnika z modulom odločitvenega drevesa Izvorna koda 1 prikazuje abstraktno sintakso jezika SWRL za omenjeni pravili , zajeti s pomočjo odločitvenega drevesa .
cenaOdprtja ) ?
dan ) Izvorna koda 1 : Pravili za določitev barve telesa svečnika v abstraktni sintaksi SWRL Izvorna koda 2 prikazuje sintakso SWRL omenjenih pravil , ki se uporablja na izvajalni ravni v stroju za sklepanje .
< swrl:Imp > < swrl:head rdf:parseType = " Collection " > < swrl:ClassAtom > < swrl:classPredicate rdf:resource = " # WhiteBody " / > < swrl:argument1 rdf:resource = " # dan " / > < / swrl:ClassAtom > < / swrl:head > < swrl:body rdf:parseType = " Collection " > < swrl:ClassAtom > < swrl:classPredicate rdf:resource = " # TradingDay " / > < swrl:argument1 rdf:resource = " # dan " / > < / swrl:ClassAtom > < swrl:DatavaluedPropertyAtom > < swrl:propertyPredicate rdf:resource = " # cenaZaprtja " / > S t r a n 17 2 4. pog l a vj e | Eva l ua c i j a < swrl:argument1 rdf:resource = " # dan " / > < swrl:argument2 rdf:resource = " # close " / > < / swrl:DatavaluedPropertyAtom > < swrl:DatavaluedPropertyAtom > < swrl:propertyPredicate rdf:resource = " # cenaOdprtja " / > < swrl:argument1 rdf:resource = " # dan " / > < swrl:argument2 rdf:resource = " # open " / > < / swrl:DatavaluedPropertyAtom > < swrl:BuiltinAtom > < swrl:builtin rdf:resource = " swrlb:greaterThanOrEqual " / > < swrl:argument1 rdf:resource = " # cenaZaprtja " / > < swrl:argument2 rdf:resource = " # cenaOdprtja " / > < / swrl:BuiltinAtom > < / swrl:body > < / swrl:Imp > < swrl:Imp > < swrl:head rdf:parseType = " Collection " > < swrl:ClassAtom > < swrl:classPredicate rdf:resource = " # BlackBody " / > < swrl:argument1 rdf:resource = " # dan " / > < / swrl:ClassAtom > < / swrl:head > < swrl:body rdf:parseType = " Collection " > < swrl:ClassAtom > < swrl:classPredicate rdf:resource = " # TradingDay " / > < swrl:argument1 rdf:resource = " # dan " / > < / swrl:ClassAtom > < swrl:DatavaluedPropertyAtom > < swrl:propertyPredicate rdf:resource = " # cenaZaprtja " / > < swrl:argument1 rdf:resource = " # dan " / > < swrl:argument2 rdf:resource = " # close " / > < / swrl:DatavaluedPropertyAtom > < swrl:DatavaluedPropertyAtom > < swrl:propertyPredicate rdf:resource = " # cenaOdprtja " / > < swrl:argument1 rdf:resource = " # dan " / > < swrl:argument2 rdf:resource = " # open " / > < / swrl:DatavaluedPropertyAtom > < swrl:BuiltinAtom > < swrl:builtin rdf:resource = " swrlb:lessThan " / > < swrl:argument1 rdf:resource = " # cenaZaprtja " / > < swrl:argument2 rdf:resource = " # cenaOdprtja " / > < / swrl:BuiltinAtom > < / swrl:body > < / swrl:Imp > Izvorna koda 2 : Pravili za določitev barve telesa svečnika v sintaksi SWRL 4.1.1.2.2 Zajem pravil z odločitveno tabelo Pravila za določanje prodajnih in nakupnih signalov so naslednja : • Če ima predhodni trgovalni dan belo telo svečnika in je trenutni dan » engulfing « vzorec svečnika z velikim črnim telesom , ki je danes dosegel najvišjo vrednost , potem gre za prodajni trgovalni signal , zaradi prisotnosti » engulfing « trgovalnega vzorca .
• Če je predhodni trgovalni dan » doji « vzorec svečnika in je trenutni dan » engulfing « vzorec svečnika z velikim črnim telesom , ki je danes dosegel najvišjo vrednost , potem gre za prodajni trgovalni signal , zaradi prisotnosti » engulfing « trgovalnega vzorca .
Slika 196 : Zajem pravil za proženje prodajnih in nakupnih signalov S t r a n 17 4 4. pog l a vj e | Eva l ua c i j a Izvorna koda 3 prikazuje abstraktno sintakso jezika SWRL za omenjena pravila , zajeta s pomočjo odločitvene tabele .
Razvidno je , da je vsak stolpec v odločitveni tabeli implementiran kot enostavno pravilo , kar nam omogoča gradnjo kompleksnih odločitvenih tabel .
dan2 ) › SellTradingDay ( ?
dan2 ) nextTradingDay ( ?
dan2 ) ?
dan2 ) Izvorna koda 3 : Pravila za proženje prodajnih in nakupnih signalov v abstraktni sintaksi SWRL Izvorna koda 4 prikazuje sintakso SWRL omenjenih pravil , ki se uporablja na izvajalni ravni v stroju za sklepanje .
Za zajem konceptov , relacij in aksiomov opisne logike ( DL ) se uporablja zapis OWL , medtem ko se pravila shranjujejo v obliki SWRL .
Orodje je oblikovano do te mere , da v največji meri uporabniku poskuša pomagati pri razvoju in tako zmanjšati potrebo po tehničnem znanju , ki bi bilo drugače potrebno za načrtovanje ontologij .
Uporabniku npr. ni potrebno poznati pojmov , kot so podrazred , ekvivalenten razred , razdružen razred , ekvivalentna lastnost , enostaven podatkovni tip ipd. , zato ker obstajajo mehanizmi ( poglavje 0 ) , ki omogočajo identifikacijo teh omejitev glede na vnesene podatke in odgovore na vsebinska vprašanja ( npr. identifikacija taksonomije v korakih 2.3 in 2.4 pristopa ROD ) .
Razvito ontologijo lahko po zaključku porazvojne faze izvozimo v različne funkcionalne komponente , kot je bilo predstavljeno v poglavju 3.2.3.2.3. 4.2 PRIMER TRGOVANJA NA FINANČNIH TRGIH 4.2.1 METODA Model hitrega razvoja ontologij ( ROD ) je bil preverjen na problemski domeni trgovanja s finančnimi inštrumenti .
Zahteva je bila razvoj ontologije , ki vsebuje osnovne podatke o finančnih inštrumentih in trgovalnih strategijah s pomočjo procesa ROD .
Rešitev naj bi uporabniku omogočala testiranje različnih trgovalnih strategij ( vsaj treh ) na dejanskih trgovalnih podatkih , ki so za izbrane finančne inštrumente na voljo v pripravljenih datotekah CSV , na voljo pa je tudi S t r a n 17 9 4. pog l a v j e | Ev a l ua c i j a spletni vir Yahoo Finance52 s trenutnimi in zgodovinskimi podatki o trgovanju poljubnih finančnih inštrumentov na ameriških borzah .
Razvita rešitev je morala biti predstavljena kot funkcionalna komponenta v obliki samostojne aplikacije J2SE z vhodnim parametrom simbola finančnega inštrumenta in izhodnimi parametri trgovalnih dni , kjer so se generirali nakupni ali prodajni signali skupaj z razlago za akcijo .
Uporabnik ( dober poznavalec problemske domene z osnovnim znanjem računalništva ) je opredelil ontologijo z zahtevanimi podatki o finančnih inštrumentih in vsaj tri trgovalne združevati in testirati samostojno ali v poljubni podatkov je bil en korak iteracije pri razvoju ontologije , kjer nas je zanimala ocena popolnosti ontologije in število gradnikov ontologije ( razredi , lastnosti in aksiomi , skupaj s pravili ) .
Pristop hitrega razvoja ontologije po procesu ROD ( pristop ROD ) je bil primerjan z ad hoc pristopom razvoja ontologij , ki je temeljil predvsem na obstoječih metodologijah CommonKADS , OTK in METHONTOLOGY .
Pri razvoju ontologije po pristopu ROD je bil uporabljen predlagan model razvoja in orodji IntelliOnto ter Protégé .
Na koncu testiranja je bil rezultat v obliki razvite ontologije in funkcionalne komponente ter podatki o poteku samega procesa po posameznih iteracijah .
Ontologija FITS , ki je nastala v okviru razvoja po modelu ROD , je podrobneje predstavljena v prilogi ( Priloga 1 : Primer trgovanja s finančnimi inštrumenti ) .
Pri gradnji ontologije smo pri obeh pristopih izhajali iz naslednjih enostavnih dejstev o trgovanju s finančnimi • Specializacija koncepta finančni inštrument je predstavljena z tudi trgovalni dan .
Vsi koncepti so v skladu s pravili indikatorja popolnosti ontologije opisani s formalnimi lastnostmi kot tudi opisi v naravnem jeziku .
Trgovalne strategije so opredeljene v ločenih ontologijah in so v obstoječo ontologijo vključene s pomočjo dinamičnega uvoza .
Trgovalna strategija bi sicer vsebovala omejitve 52 http://finance.yahoo.com .
V okviru eksperimenta so nastale tri različne trgovalne strategije : • naivna trgovalna strategija , • trgovalna strategija na podlagi drsečega povprečja in • trgovalna strategija japonskih svečnikov .
Vhodni podatki v ontologijo so bili trgovalni podatki delnic Apple Inc .
( GOOG ) in UltraShort S & P ProShares ( SDS ) v obdobju enega meseca .
Primerki trgovalnih podatkov so bili v času izvajanja pridobljeni iz spletne strani Yahoo Finance in datotečnega sistema iz datotek CSV .
Proces gradnje ontologije in izvoza le-te v obliki funkcionalne komponente je prikazan na spodnjih grafih ( Slika 197 in Slika 198 ) .
Slika 197 : Ocena popolnosti ontologije in število elementov v ontologiji glede na posamezne iteracije in faze v procesu ROD Slika 198 : Ocena popolnosti ontologije in število elementov v ontologiji glede na posamezne iteracije v ad hoc procesu razvoja Pri primerjavi obeh pristopov lahko pridemo do naslednjih izsledkov : • za dosego zadanega cilja razvoja ontologije za trgovanje s finančnimi inštrumenti je po procesu ROD potrebno manj iteracij ( 30 ) kot pri ad hoc pristopu ( 37 ) , • ontologija je skozi celoten proces in tudi na koncu bolj popolna ter primerna za uporabo pri procesu ROD kot pri ad hoc pristopu , saj se napake preverjajo in opozarjajo uporabnika sproti , • potrebna raven tehničnega znanja za zajem ontologije pri procesu ROD je manjša , saj so na voljo mehanizmi preslikave v obliki orodja IntelliOnto , ki to izboljšajo .
Pri procesu razvoja ontologije ROD je imel uporabnik stalno podporo indikatorja popolnosti ontologije ( OC ) in priporočil za napredovanje v naslednje faze razvoja .
Ko je S t r a n 18 1 4. pog l a v j e | Ev a l ua c i j a uporabnik začel z določeno fazo razvoja ontologije in izvajal aktivnosti ( poglavje 3.2 ) v okviru te faze , se je sproti izračunavala popolnost ontologije .
Medtem ko je ocena OC manjša od 100 % , uporabnik sledi navodilom in priporočilom za izboljšanje ( Slika 56 ) .
Uporabnik ima na osnovi evaluacije na voljo številne podatke – osnovna statistika ontologije ( število razredov , lastnosti , pravil , primerkov itd. ) , grafični pogled na indikator popolnosti ontologije in podrobnosti evaluacije , priporočila za izboljšavo ter zgodovina sprememb .
Osnovni element je indikator popolnosti ontologije , ki je predstavljen v grafični obliki in prikazuje procentualno vrednost popolnosti ontologije od 0 % do 100 %.
Sledijo priporočila za izboljšavo ontologije in njihovi vplivi ( npr. odstrani ciklične napake ( +10 % ) , opiši koncepte v naravnem jeziku ( +8 % ) , poveži koncepte med seboj ( +7 %) itd. ) .
Slika 56 prikazuje , da lahko ciklične napake odstranimo tako , da odstranimo dvosmerno povezavo med konceptom Delnica in Finančni inštrument .
Zasenčeno območje z močnejšimi robovi predstavlja trenutno stanje , medtem ko rdeča točka predstavlja stanje , ki ga bomo dosegli , če izberemo predlagano izboljšavo .
Ko ocena popolnosti ontologije pade pod mejno vrednost ( v našem eksperimentu je to 80 % , kot prikazuje Slika 197 ) , sistem predlaga prehod v naslednjo fazo .
4.2.2.1 Podroben proces razvoja ontologije Uporabnik je dobil zahteve , na podlagi katerih je moral zgraditi osnovno različico trgovalne strategije .
Uporabnik je imel na voljo dva načina razvoja : • ad hoc , brez upoštevanja priporočil in • sledenje pristopu ROD ter upoštevanje priporočil OC ( rezultat v prilogi ( Priloga 1 : Primer trgovanja s finančnimi inštrumenti ) ) .
Pri procesu ROD je imel uporabnik ves čas na voljo pomoč indikatorja popolnosti ( OC ) ontologije , ki je podrobneje razdeljen na komponente , predstavljene v poglavju 3.3 ( Slika 199 ) .
4.2.2.1.1 Zajem poslovnega slovarja ( faza 2.1 ) Prvi korak faze razvoja je zajem poslovnega slovarja , v katerem začnemo z naštevanjem konceptov in ad hoc relacij v obliki miselnega vzorca .
Uporabnik enostavno začne ustvarjati neformalno opisan miselni vzorec o problemski domeni .
Začetno stanje pri razvoju je prazna ontologija , ki jo začne uporabnik razširjati ( 1. iteracija ) z dodajanjem konceptov finančni inštrument , borza in trgovalni dan .
Doda se tudi povezava med konceptoma finančni inštrument in borza , ki predstavlja kotiranje finančnega inštrumenta na borzi .
Po pregledu priporočil in grafičnega prikaza popolnosti ontologije v obliki radarskega grafa ugotovimo , da sta pomanjkljivi komponenti opis ( D ) in razdelitev ( P ) .
V nadaljevanju uporabnik še naprej dodaja koncepte ( delnica , K.O. certifikat , ETF , nakupni trgovalni dan in prodajni trgovalni dan ) in njihove medsebojne povezave ( finančni inštrument se trguje na borzi ) ter skrbi za opis omenjenih entitet v naravnem jeziku , saj bodo ti podatki kasneje potrebni pri opredelitvi naprednejših omejitev ontologije .
V tem primeru so bili doseženi potrebni pogoji za napredovanje v naslednjo razvojno fazo .
Začetno stanje 1. iteracija 2. iteracija 3. iteracija 0 % 29 % 53,7 % 43,7 % 4. iteracija 5. iteracija 92,8 % 91,4 % Slika 200 : Iteracije faze 2.1 4.2.2.1.2 Seznam primerov konceptov in lastnosti ( faza 2.2 ) Ko uporabnik potrdi napredovanje v naslednjo fazo , se uteži pri vrednotenju popolnosti ontologije prilagodijo tej fazi .
1. iteracija v omenjeni fazi je vrednotenje ontologije iz zadnje iteracije prejšnje faze .
Razlog je v dejstvu , da se v tej fazi ontologija vrednoti z dodatnimi semantičnimi testi , ki v prejšnji fazi niso bili potrebni , saj ni bilo na tem poudarka .
› › › 6. iteracija 7. iteracija 8. iteracija 9. iteracija 54,3 % 66,3 % 75,3 % 79,9 % 10. iteracija 83,7 % Slika 201 : Iteracije faze 2.2 V omenjeni fazi razvoja je potrebno identificirati seznam primerkov konceptov in lastnosti .
V prejšnjem koraku smo opredelili enostavno shemo problemske domene , medtem ko mora uporabnik v tem koraku podati dejanske primere konceptov in relacij ( primerke razredov in lastnosti ) .
Rezultati tega koraka so zelo pomembni v naslednjih korakih 2.3 in 2.4 , kjer se iz dejanskih primerov gradi taksonomija konceptov in relacij .
S tem zaporedoma izboljšujemo kakovost razvite ontologije vse do 10. iteracije , kjer presežemo mejno vrednost in to nam omogoča napredovanje v naslednjo fazo razvoja ontologije .
4.2.2.1.3 Identifikacija taksonomije ( faza 2.3 ) Tretji korak faze razvoja je identifikacija taksonomije glede na dejanske primerke iz prejšnjega koraka .
Algoritem za identifikacijo taksonomije poskuša najti podrazrede , ekvivalentne razrede in razdružene razrede .
To opravilo se posledično močno poenostavi , saj se zgolj uporabijo primerki razredov iz prejšnje faze ter se odgovori na nekaj enostavnih vsebinskih vprašanj ( Slika 104 ) .
› › › 11. iteracija 12. iteracija 13. iteracija 14. iteracija 74,3 % 86 % 96,6 % 98,7 % Slika 202 : Iteracije faze 2.3 S tem podatkovno usmerjenim pristopom , na podlagi primerkov razredov , se predlagajo relacije podrazred , ekvivalenten razred in razdružen razred med posameznimi razredi .
Na podlagi odgovorov na vsebinska vprašanja so razredi delnica , ETF in K.O. certifikat med seboj razdruženi .
Pregledajo se skupni primerki in glede na ugotovitve se uporabniku zastavijo enostavna vsebinska vprašanja .
15. iteracija 99,3 % Slika 203 : Iteracija faze 2.4 Ker v omenjenem modeliranju problemske domene ne obstajajo podlastnosti ali ekvivalentne lastnosti , se popolnost ontologije iz prejšnjega koraka celo poviša na 99,3 % in nadaljevanje v naslednjo fazo razvoja je neposredno omogočeno .
Do tega trenutku imamo opredeljeno enostavno ontologijo , zato mora uporabnik dodatno opisati koncepte z lastnostmi in omogočiti sprehod med posameznimi koncepti s pomočjo medsebojnih relacij .
› › › 16. iteracija 17. iteracija 18. iteracija 19. iteracija 95 % 92 % 96 % 96,5 % › 20. iteracija 21. iteracija 100 % 100 % Slika 204 : Iteracije faze 2.5 Kot pokaže analiza popolnosti ontologije v iteraciji od 16 do 21 , se pomanjkljivosti pojavljajo predvsem v komponenti opisa ( D ) in razdelitve ( P ) .
Najprej uporabnik doda objektne lastnosti ( kompleksne relacije ) finančni inštrument temelji na finančnem inštrumentu in trgovalni dan ima naslednji trgovalni dan ter pripadajoče inverzne lastnosti , ki izboljšajo sprehajanje po ontologiji v obliki semantične mreže .
Enostavne relacije ISIN , K.O. meja , lokacija , datum , cena odprtja , cena zaprtja , najnižja cena , najvišja cena , število poslov , razlog za akcijo se uporabijo za dodatno opisovanje razredov .
Iteraciji , pa je potrebno relacije opremiti tudi z opisi v naravnem jeziku in njihovimi zalogami vrednosti .
4.2.2.1.6 Dodajanje kompleksnih omejitev in pravil ( faza 2.6 ) Zadnji korak pri fazi razvoja je dodajanje kompleksnih omejitev in pravil .
V začetnih korakih ( 22. iteracija ) uporabnik opredeli enostavno trgovalno strategijo z dodajanjem dveh pravil za kreiranje prodajnih in nakupnih signalov , in sicer na podlagi preverjanja tridnevne zaporedne rasti ali padca zaključnih cen .
Namen 23. iteracije je predpriprava na opredelitev preostalih dveh trgovalnih strategij .
› › › 22. iteracija 23. iteracija 24. iteracija 25. iteracija 100 % 96 % 100 % 100 % Slika 205 : Iteracije faze 2.6 V zadnjih iteracijah ( 24. in 25. ) uporabnik doda vsa potrebna pravila v okviru strategije enostavnih drsečih povprečij ( Slika 216 ) in japonske trgovalne strategije ( Slika 217 ) .
Ocena popolnosti je skozi vse iteracije obravnavane faze zelo visoka , saj je uporabnik zgolj v nekaterih vmesnih korakih pozabil na opise omejitev v naravnem jeziku ( pri dodajanju podpornih entitet za opredelitev trgovalnih pravil ) .
4.2.2.1.7 Povezava slovarja s podatki ( faza 3.1 ) Namen obravnavanega koraka je priprava smiselno povezanih ontologij , ki tvorijo funkcionalno celoto .
Končni rezultat celotnega procesa prikazuje Slika 208 , na kateri so prikazane vse vsebovane ontologije in njihova medsebojna povezanost .
› › › 26. iteracija 27. iteracija 28. iteracija 29. iteracija 96,4 % 87,5 % 92,9 % 97 % 30. iteracija 97,4 % Slika 206 : Iteracije faze 3.1 V nadaljevanju si je uporabnik izbral naslednje finančne inštrumente : Google Inc .
, PCX Corporation in Krka d. d. , na podlagi katerih so ravno tako nastale ontologije posameznih finančnih inštrumentov , ki črpajo podatke iz izbranih virov ; FI-Yahoo - Finance-CSV-GOOG , FI-Yahoo-Finance-CSV-AAPL , FI-Yahoo-Finance-HTML-PCX in FI - AmiBroker-KRKG .
Popolnost ontologije skozi celotno fazo ostane nad zahtevano spodnjo mejo ( 80 % ) , manjša nihanja se pojavijo predvsem zaradi dodajanja novih ontologij , vendar so le-te enostavne in obvladljive , proces ROD pa uporabniku pri integraciji tudi pomaga s čarovniki .
4.2.2.1.8 Kompozicija funkcionalne komponente ( faza 3.2 ) Zadnji korak porazvojnih aktivnosti je kompozicija funkcionalne komponente , ki jo nadalje sestavljajo podaktivnost opredelitve V / I , izbira konceptov , relacij , omejitev in pravil ter identifikacija cilja .
S t r a n 18 8 4. pog l a vj e | Eva l ua c i j a Na začetku je uporabnik preprosto izbral vhodne in izhodne parametre , ki so del funkcionalne komponente .
Na vhodu je potrebno vnesti simbol finančnega inštrumenta , medtem ko na izhodu pričakujemo trgovalni dan s prodajnim ali nakupnim signalom , datum pojava in opis trgovalnega signala ( Slika 50 ) .
Izbiro konceptov , relacij , omejitev in pravil je uporabnik prepustil algoritmu za predlaganje entitet in aksiomov za vključitev ( Algoritem 1 ) .
Na koncu je cilj za funkcionalno komponento J2SE aplikacija , kot je zahtevano v metodi evaluacije .
Pojmi , kot so razred , podrazred , lastnost in primerek , so bili temeljni gradniki objektno usmerjenih in tudi ekspertnih sistemov .
Pogosto se zgodi , da napredni uporabniki tehnologije semantičnega spleta vidijo kot pristope iz preteklosti in tako za njih ne prinašajo nobene dodane vrednosti .
Semantični splet se od ekspertnih sistemov razlikuje po podobnem principu .
V primerjavi s sistemi za predstavitev znanja , ki so bili razviti v kontekstu ekspertnih sistemov , je OWL zelo omejen ; vendar je to za spletni jezik čisto primerno .
V okviru ekspertnih sistemov so tudi cilji semantičnega spleta zelo skromni .
Ideja ekspertnega sistema je bila simulirati reševanje problemov z učinkovitostjo , podobno človeškemu strokovnjaku .
Svetovni splet nas je zagotovo naučil , da uporabniki ne želijo računalnikov , ki bi delovali kot strokovnjaki , ampak želijo imeti dostop do podatkov , na katerih uporabijo svoje strokovno znanje , ko je seveda to potrebno .
Semantični splet to idejo razvije še korak dlje .
Splet je učinkovit pri prikazovanju poljubnega vira spletnemu uporabniku , vendar če potrebnih podatkov ni na enem mestu , mora za integracijo poskrbeti uporabnik sam .
Semantični splet ne uporablja tehnologije ekspertnih sistemov in ne posnema delovanje strokovnjaka , temveč uporablja to tehnologijo za zbiranje informacij , tako da ima posamezen uporabnik integriran dostop do spleta informacij .
Na prvi pogled takšen pristop deluje zelo kaotično .
Uspeh spleta ( in tudi specializiranih spletnih strani , kot je Wikipedia ) je dokazal , da obstaja dovolj velik motiv za dodajanje kvalitetnih podatkov , kar posledično pomeni , da je splet v splošnem koristna in celo nepogrešljiva struktura .
Svetovni splet , s katerim imamo opravka vsakodnevno , sestavljajo predvsem dokumenti , ki jih prebirajo in obdelujejo uporabniki pri brskanju po spletu .
Vendar za mnoge spletne strani velja , da v podatkovnih bazah skrivajo veliko več podatkov , kot pa jih je prikazanih na strani .
Da te podatke predstavimo v globalni in integrirani obliki , moramo na nek način opredeliti , kako so podatki na enem mestu povezani s podatki na drugem .
Po pregledu obstoječih pristopov smo ugotovili , da so le-ti preveč zapleteni in povsem neprimerni za uporabnike , ki nimajo ustreznega tehničnega znanja in znanja načrtovanja ontologij .
Namen raziskave , predstavljene v omenjeni doktorski disertaciji , je bil v opredelitvi modela za hiter razvoj ontologij , ki bo primeren ravno za takšen profil uporabnikov .
5.2 REZULTATI Na podlagi raziskovalnih vprašanj , podanih v uvodnem poglavju 1.2 , smo prišli do izsledkov in zaključkov ter konkretnih prispevkov znanosti , ki so povzeti v tekočem poglavju .
Pri pregledu primernih pristopov za hiter razvoj delov poslovnih aplikacij , ki temeljijo na ontologijah , je bilo najprej najpomembnejše raziskovalno vprašanje , ali so obstoječi pristopi in metodologije zadostni pri celostni podpori uporabe ontologij v poslovnih aplikacijah .
Kot smo ugotovili s podrobnim pregledom obstoječih pristopov in metodologij za razvoj ontologij v poglavju 2.4 na strani 33 , so obstoječi pristopi glede podpore uporabnikom brez tehnološkega znanja in znanja načrtovanja ontologij zelo omejeni , saj večina pristopov potrebuje vmesni člen v obliki uporabnika , ki znanje poslovnega uporabnika zapiše v formalni obliki z jeziki semantičnega spleta .
Ugotovitve so tudi pokazale , da obstoječi pristopi niso zadostni pri celostni podpori uporabe ontologij v poslovnih aplikacijah , saj ne podpirajo celotnega življenjskega cikla razvoja ontologij , proces razvoja pa se ponavadi konča z zadnjo uspešno iteracijo .
Prav tako ni podpore porazvojnim aktivnostim .
Sprejetost ontologij pri razvoju poslovnih aplikacij je prav tako nezadostna , saj je področje semantičnega spleta in uporabe ontologij še nezrelo , zato je v gospodarstvu malo uspešnih implementacij , vendar se stanje izboljšuje .
Pristop ROD naslavlja raziskovalno vprašanje tudi o načinu in ravni , kjer lahko ontologijo uporabimo v poslovnih aplikacijah .
Pri pristopu ROD se predlaga uporaba razvite ontologije v obliki funkcionalne komponente , kot je podrobneje predstavljeno v poglavju 3.2.3.2.3 na strani 75.
Eden od raziskovalnih izzivov je bila tudi raziskava , ali lahko uporaba tehnologij semantičnega spleta zmanjša potrebno raven tehničnega znanja uporabnikov pri opredelitvi problemske domene in zajemu znanja .
Mera , do katere lahko poslovni uporabnik brez ustreznih tehničnih znanj pripravi ontologijo , primerno za uporabo v poslovni aplikaciji , je prikazana na praktičnem primeru ontologije FITS za trgovanje s finančnimi inštrumenti , katere razvoj je podrobno predstavljen v poglavju 4.2 na strani 179 , končni rezultat pa v prilogi ( Priloga 1 : Primer trgovanja s finančnimi inštrumenti ) .
V okviru omenjenega raziskovalnega vprašanja smo se spraševali tudi , kako doseči raven abstrakcije , kjer poslovni uporabnik vnaša domensko znanje v čim bolj neformalizirani , naravnemu jeziku podobni obliki , hkrati pa želimo doseči zadostno stopnjo formalizacije , da lahko na izvajalni ravni smiselno uporabimo mehanizme sklepanja .
S pomočjo pristopa ROD , predstavljenem v poglavju 3.2 na strani 52 , je uporabniku omogočena opredelitev problemske domene od zajema poslovnega slovarja do kompozicije funkcionalne komponente .
Podrobnosti neposredne podpore uporabniku pa so zajete v okviru prototipa orodja IntelliOnto , ki je predstavljen v poglavju 4.1 na strani 142.
Ugotovili smo , da skupne točke in podobnosti ter tudi razlike med področjem semantičnega spleta in poslovnimi pravili obstajajo in so podrobneje predstavljene v poglavju 2.3.2 na strani 29.
Vpeljava pristopa obvladovanja poslovnih pravil pri razvoju informacijskih sistemov ter aplikacija na hiter proces razvoja ontologij je predstavljena v poglavju 3.2.2.1.1 na strani 55 in poglavju 3.2.2.6 na strani 63.
Osnovni cilj doktorske disertacije , predstavljen v uvodnem poglavju 1.2 , je opredeliti model za hiter razvoj ontologij , ki je primeren za uporabnike brez poglobljenega tehničnega znanja razvoja in načrtovanja ontologij .
Ideja nenehnega preverjanja ustreznosti ontologije je temeljila na obstoječih pristopih za evaluacijo ontologij , vendar se omenjena aktivnost pri procesu ROD izvaja nenehno ob vsaki iteraciji .
Implementacija omenjenega pristopa je realizirana v obliki indikatorja popolnosti ontologije OC , ki je podrobneje predstavljen v poglavju 3.3.
Prednost indikatorja OC je v njegovi dinamični naravi izračunavanja , saj se v vsakem koraku procesa ROD razvoja prilagodi , tako da se uteži nastavijo trenutnim potrebam .
Posledično to pomeni , da v začetnih fazah pri zajemu poslovnega slovarja ni potrebe po preverjanju odvečnih primerkov , obstoju neuporabljenih konceptov ali inverznih lastnosti , temveč je poudarek na opisu komponent TBox in RBox v naravnem jeziku in obstoju povezave med vsemi koncepti .
Za potrditev aplikabilnosti pristopa ROD in indikatorja OC je bil omenjen proces preverjen na problemski domeni trgovanja s finančnimi inštrumenti na finančnih trgih ter je podrobneje predstavljen v poglavju 4.2.
Primerjava je bila izvedena med pristopom ROD in ad hoc pristopom , kjer se je spremljala rast števila aksiomov in popolnost ontologije skozi posamezne iteracije .
Rezultati so pokazali , da je bila omenjena problemska domena s procesom ROD implementirana 23 % hitreje oz. je bilo potrebno 7 iteracij manj , kot pri ad hoc pristopu .
Prav tako je bil opazen bolj konstanten trend kakovosti ontologije , saj se je le-ta pri pristopu ROD konvergirala k 100 % , medtem ko je pri ad hod pristopu močno alternirala .
Rezultat razvoja je predstavljen v prilogi ( Priloga 1 : Primer trgovanja s finančnimi inštrumenti ) , v kateri so vse podrobnosti ontologije FITS .
Omenjeno ontologijo sestavljajo številne medsebojno povezane ontologije , ki so vse zajete v standardnih jezikih semantičnega spleta ( OWL , SWRL ) , zato je poskrbljeno tudi za neodvisnost od izvajalne platforme in stroja za sklepanje .
Razvita ontologija je popolnoma funkcionalna in primerna za uporabo v aplikaciji semantičnega spleta , saj črpa podatke iz ostalih spletnih virov , ki so dostopni preko vmesnikov .
Pri problemski domeni finančnega trgovanja pa je dosežena tudi zelo velika stopnja modularnosti , saj lahko uporabnik poljubno dodaja svoje interpretacije pravil za finančno trgovanje , medtem ko lahko temelji tudi na obstoječih .
5.2.4 HIPOTEZA 4 Prototip orodja za podporo procesu ROD omogoča uporabniku sledenje korakom procesa za hiter razvoj in nenehno evaluacijo razvite ontologije .
Prototip orodja IntelliOnto je bil razvit za potrebe lažje in hitrejše uporabe hitrega pristopa za razvoj ontologij ( ROD ) .
Gre za spletno aplikacijo , ki omogoča vnos naprednih omejitev ontologije na dva načina : ( 1 ) sprehod po semantični mreži in dodajanje omejitev ( poglavje 4.1.1.1.1 ) in ( 2 ) vnos omejitev v obliki atomov pravil ( poglavje 4.1.1.1.2 ) .
Pri sprehodu po semantični mreži uporabniku omogočimo pregled obstoječe baze znanja in neposredne manipulacije z obstoječim znanjem ter možnost dodajanja novih aksiomov v uporabniku prijazni obliki .
Vnos omejitev v obliki atomov pravil pa predstavlja vmesnik , ki omogoča dodajanje poslovnih pravil problemske domene .
V okviru uporabniškega vmesnika je vključen tudi indikator popolnosti , ki nam v obliki radarskega grafa sproti prikazuje popolnost razvite ontologije in nam pomaga s priporočili , kaj lahko naredimo , da izboljšamo našo ontologijo .
Indikator OC je povezan tudi s samim procesom razvoja , saj nam glede na popolnost razvite ontologije predlaga prehod v naslednjo fazo razvoja in nas skozi celoten proces razvoja tudi vodi .
Inovativen model za hiter razvoj ontologij ( ROD ) , ki je primeren za uporabnike brez podrobnega tehničnega znanja in znanja načrtovanja ontologij .
Prototip orodja IntelliOnto za boljšo podporo procesu ROD , ki predstavlja grafični vmesnik k razvoju ontologij in neposredno vključuje proces ROD ter indikator popolnosti ontologije ( OC ) .
Razvita ontologija FITS za podporo trgovanju s finančnimi inštrumenti , ki s svojo modularno zasnovo omogoča ponovno uporabo .
Identifikacija načinov uporabe funkcionalnih komponent ontologije v informacijskih sistemih , kjer je možna uporaba celotne razvite ontologije ali samo shematskega dela ( TBox + RBox ) v različnih primerih uporabe .
Opredelitev vmesnikov za neposredno povezovanje delno strukturiranih virov v ontologijo , kjer lahko s pomočjo generičnega pristopa regularnih izrazov v ontologijo vključimo poljuben delno strukturiran vir ; od dokumentov , spletnih strani , podatkovnih baz , datotek CSV ipd. 5.4 MOŽNOSTI ZA NADALJNJE DELO 5.4.1 RAZŠIRITEV INDIKATORJA POPOLNOSTI ONTOLOGIJE Indikator popolnosti ontologije v trenutni različici podpira 31 semantičnih testov , ki so razdeljeni v naslednje kategorije : opis ( 10 ) , razdelitev ( 10 ) , odvečnost ( 6 ) , doslednost ( 1 ) in anomalija ( 4 ) .
Za boljše rezultate bi bilo potrebno dodati še dodatne semantične teste , predvsem v kategoriji doslednosti .
Zaradi modularne zasnove indikatorja popolnosti je omenjeno opravilo zelo enostavno izvedljivo , saj z dodatni testi zgolj prilagodimo obstoječe uteži in uporabnik pri razvoju ne opazi razlik v podpori , pojavijo se zgolj dodatne možnosti priporočil izboljšanja ontologije .
5.4.2 IZBOLJŠANJE PODPORE ORODJA Trenutna podpora razvoju je v obliki prototipa orodja IntelliOnto , ki vključuje osnovne funkcionalnosti in temelji na spletnem okolju .
Za bolj popolno podporo bi bilo v orodje potrebno dodati vse funkcionalnosti pristopa ROD , saj lahko le na ta način popolnoma podpremo hiter razvoj ontologij , ki je primeren za uporabnike brez naprednega tehničnega znanja in predhodnega znanja načrtovanja ontologij .
V obeh primerih je zagotovo ključnega pomena vključitev podpore indikatorja popolnosti ontologije , ki je v trenutni različici orodja IntelliOnto že prisotna .
5.4.3 INTEGRACIJA MODELA ZA HITER RAZVOJ ONTOLOGIJ S SOCIALNIMI OMREŽJI V uspeh svetovnega spleta prav gotovo ne moremo dvomiti , pri prehodu na t. i. splet 2.0 pa se je zgodil zanimiv premik v smeri dodajanja novih vsebin , saj so predvsem tehnično neizobraženi uporabniki prevzeli pobudo pri soustvarjanju vsebine na svetovnem spletu s pojavom različnih storitev socialnega spleta , kot so forumi , spletni dnevniki , spletna mesta za druženje , storitve takojšnjega sporočanja , souporaba multimedijskih vsebin ipd.
Slika 207 : Vpliv socialnih omrežij Z vodenim pristopom k opredelitvi določenih problemskih domen lahko s pomočjo folksonomij že dosežemo dobre rezultate , ideja za nadaljnje delo na omenjeni doktorski disertaciji pa je prenos pristopa za hiter razvoj ontologij na socialni splet .
S pripravo aplikacije za najbolj priljubljena socialna omrežja , kot sta npr. Facebook in LinkedIn , bi lahko dosegli kritično maso uporabnikov , ki praviloma niso tehnično dobro izobraženi , lahko pa bi s pomočjo pristopa ROD razvijali aplikacije semantičnega spleta .
5.4.4 INTEGRACIJA PRISTOPA S PRISTOPI SAMODEJNEGA UČENJA ONTOLOGIJ Pristop predstavljen v omenjeni doktorski disertaciji , temelji na načinu opredelitve ontologije , v katerem ima osrednjo vlogo uporabnik , ki prenese znanje v formalizirano obliko .
Za prihodnje izboljšave omenjenega pristopa bi bilo zagotovo koristno vključiti omenjene pristope v proces ROD , kar bi ga še dodatno poenostavilo in približalo poslovnim uporabnikom .
Pri podatkovno orientiranem razčlenjevanju je vir učnih in testnih podatkov drevesnica , to je besedilni korpus , ki je ročno označen z odvisnostnimi drevesi .
Točnost razčlenjevanja se oceni tako , da se avtomatsko zgrajena odvisnostna drevesa iz besedila v testnem delu drevesnice primerja z ročno zgrajenimi drevesi .
V doktorski disertaciji je predstavljen novo razviti algoritem za razčlenjevanje z iskanjem stavkov in naštevanj – ARISiN , ki vključuje strojno učenje in hevristična pravila za predstavitev predznanja o jeziku .
Slovenska odvisnostna drevesnica , SDT ( angl. Slovene Dependency Treebank ) je služila kot učna in testna množica za algoritem ARISiN .
Algoritem najprej s pomočjo hevrističnih pravil identificira kandidate za redukcijo .
Preostale kandidate reducira v meta pojavnice .
Ta postopek se ponavlja do takrat , ko algoritem ne uspe najti nobenega stavka ali naštevanja več .
Zaporedja besed , ki jih je algoritem reduciral v prvi fazi , razčlenijo trije različni osnovni razčlenjevalni modeli oziroma novo razviti razčlenjevalnik s pravili .
Nova odvisnostna drevesa nato algoritem ARISiN združi v končno odvisnostno drevo povedi .
Časovna zahtevnost algoritma za iskanje in redukcijo stavkov in naštevanj je O ( n ) , pri čemer je n število pojavnic v povedi .
Opravila , kot so prevajanje med naravnimi jeziki , zapis govora , iskanje informacij v besedilih , izdelava slovarjev ipd.
Prvi korak obdelave besedila praviloma predstavlja oblikoslovna analiza in morebitna lematizacija .
Strojno prevajanje Luščenje informacij Odgovarjanje na vprašanja ...
Opisana je z drevesom , ki ponazarja medsebojne odnose sestavnih delov povedi .
1.1 Namen , cilji Kakovostno skladenjsko razčlenjevanje v splošnem omogoči boljše delovanje aplikacij s področja jezikovnih tehnologij .
Namen raziskav v okviru doktorske disertacije je razvoj novih algoritmov za izboljšanje točnosti skladenjskega razčlenjevanja .
Konkretni cilji so naslednji : • Razvoj novih metod za iskanje stavkov in naštevanj z upoštevanjem posebnosti slovenskega jezika .
Metode temeljijo na strojnem učenju in hevrističnih pravilih , in so poleg slovenščine uporabne tudi za sorodne visoko pregibne jezike .
• S pomočjo novih algoritmov za iskanje stavkov in naštevanj zvišati točnost skladenjskega razčlenjevanja za slovenščino .
1.2 Pregled vsebine Drugo poglavje podaja pregled področja , ki ga obravnava doktorska disertacija , in predstavlja sorodna dela o skladenjskem razčlenjevanju ter iskanju stavkov in naštevanj .
V tretjem poglavju so opisane tehnologije , uporabljene pri razvoju novih algoritmov .
Zadnje poglavje vsebuje povzetek opravljenega dela in rezultatov , opisuje znanstveno relevantnost pričujočega dela in nakazuje možne poti nadaljnjega raziskovanja .
Poglavje 2 Pregled področja in sorodna dela Poglavje vsebuje opis področij skladenjskega razčlenjevanja , iskanja stavkov in naštevanj ter podaja pregled sorodnega dela .
2.1 Skladenjsko razčlenjevanje Obstajajo različne vrste skladenjskega razčlenjevanja besedila .
Glede na njihovo notranjo sestavo tem delom določijo tipe , kot so glagolska fraza ( angl. verb phrase , VP ) , samostalniška fraza ( angl. noun phrase , NP ) , predložna fraza ( angl. prepositional phrase , PP ) itd.
Slika 2.1 prikazuje dekompozicijsko drevo za angleško poved " Economic news had little effect on financial markets .
" Slovenski prevod : " Gospodarske novice so imele majhen vpliv na finančne trge .
3 4 POGLAVJE 2.
PREGLED PODROČJA IN SORODNA DELA Slika 2.1 : Primer dekompozicijskega drevesa .
Odvisnostna predstavitev ( angl. dependency representation ) je drug način za opis strukture besedila .
V odvisnostnih drevesih so pojavnice ( besede in ločila ) med seboj povezane neposredno , brez vmesnih elementov .
Slika 2.2 prikazuje primer odvisnostnega drevesa za poved " Stanovanje je bilo v sedmem nadstropju in Winston , ki je imel devetintrideset let , je stopal počasi in se vmes večkrat ustavljal .
Pojem odvisnosti temelji na tem , da je možno skladenjsko strukturo povedi predstaviti z binarnimi asimetričnimi relacijami med pojavnicami v povedi , ki so predstavljene z vozlišči v drevesu .
SKLADENJSKO RAZČLENJEVANJE 5 Slika 2.2 : Primer odvisnostnega drevesa .
• P se mora v slovničnih atributih ujemati z N. • N določa položaj P v povedi .
Ti kriteriji predstavljajo neformalne smernice in jih lahko vzamemo kot okvirni skupni imenovalec za različne odvisnostne prestavitve ; vsaka predstavitev zase točno določa pravila za določanje odvisnostnih relacij .
Predstavitve se med seboj razlikujejo glede na določene lastnosti .
Druga lastnost , po kateri se predstavitve razlikujejo med seboj , je nabor oznak povezav .
Te so lahko omejene le na kategorije , kot so osebek , povedek , predmet itd. , nekateri pa uporabljajo označevanje , ki opisuje tudi semantične lastnosti [ 41 , 28 , 21 ] .
Odvisnostne predstavitve se ločijo tudi po tem , ali dopuščajo neprojektivne povezave ali ne .
Povezava je projektivna , če ne seka nobene navidezne navpičnice , ki poteka navzdol iz višje ležečih vozlišč v drevesu , in neprojektivna sicer ( definicija je vezana na predstavitev 6 POGLAVJE 2.
PREGLED PODROČJA IN SORODNA DELA drevesa takega tipa , kot je prikazana na sliki 2.2 ) .
V jezikih s prostim besednim vrstnim redom ( primer : slovanski jeziki ) pogosteje nastopajo skladenjske enote , katerih sestavni deli v povedi ne nastopajo v neprekinjenem zaporedju , poimenujmo jih nezvezne enote .
To je tudi ena od prednosti odvisnostnih predstavitev v primerjavi z dekompozicijskimi .
2.1.2 Slovenska odvisnostna drevesnica ( SDT ) in Praška odvisnostna drevesnica ( PDT ) Razdelek opisuje drevesnici SDT in PDT [ 33 ] v katerih je za zapis dreves uporabljena odvisnostna predstavitev .
Drevesnica SDT je služila kot učno-testna množica podatkov pri raziskavah opisanih v pričujočem delu .
Pravila za ročno označevanje drevesnice SDT je v svojem diplomskem delu po priročniku za označevanje drevesnice PDT priredila Ledinek [ 47 ] .
Obe drevesnici temeljita na odvisnostni predstavitvi FGD ( Functional generative description ) [ 73 ] , pri čemer drevesnica SDT vsebuje 55.208 pojavnic , ki so označene z odvisnostnimi drevesi na sintaktičnem nivoju .
Besedni vrstni red v povedi je enak vrstnemu redu vozlišč v drevesu , gledano z leve proti desni .
2.1.3 Avtomatsko razčlenjevanje Eden od možnih pristopov k razčlenjevanju je slovnično orientiran pristop , kjer se uporablja formalno definirane slovnice , ki poskušajo opisati naravni jezik L. Ta pristop je problematičen zaradi sestave naravnih jezikov , ki se ne podrejajo formalnim omejitvam .
To je referenčni korpus besedila z razčlenitvami , drevesnica , ki so jo ročno izdelali eksperti .
Omeniti velja še , da v praksi razčlenjevalni algoritmi pogosto predstavljajo srednjo pot z združevanjem pozitivnih lastnosti obeh pristopov .
Pričujoče delo podrobneje obravnava podatkovno orientiran pristop k razčlenjevanju .
SKLADENJSKO RAZČLENJEVANJE 7 • Formalni model M , ki definira dovoljene razčlenitve povedi v jeziku L. • Vzorec besedila Tv = ( x1 , ...
Vzorec besedila Tv s pripadajočimi razčlenitvami Av so učni podatki , ki jih dobimo iz drevesnice za jezik L. Pri tem razčlenitev yi pripada povedi xi .
Če razčlenitve Av ne obstajajo , bo to primer nenadzorovanega učenja ; tak pristop je redko v uporabi , saj tipično daje bistveno slabše rezultate .
• Učna metoda , ki iz vzorca besedila Tv z induktivnim mehanizmom določi vrednosti parametrov iz množice ?
• Razčlenjevalna metoda , katere izhod je najboljša razčlenitev y za poved x glede na S ( x , y ) in določeno vrednost parametrov iz množice ?.
2.1.4 Sorodna dela Ker je tema doktorske disertacije odvisnostno razčlenjevanje , se ta razdelek osredotoča le na to vrsto razčlenjevanja .
Prvi sistemi za podatkovno orientirano odvisnostno razčlenjevanje so temeljili na formalnih modelih v obliki slovnic .
Tak primer je delo Carrola idr. [ 7 ] , kjer je opisan sistem za izdelavo slovnice z nenadzorovanim učenjem nad umetno izdelanim korpusom besedila .
PREGLED PODROČJA IN SORODNA DELA Eisner [ 22 , 23 ] opisuje več razčlenjevalnih modelov .
Eisner je bil prvi , ki je uspel doseči podobno točnost pri odvisnostnem razčlenjevanju , kot so jo dosegali algoritmi za dekompozicijsko razčlenjevanje , ob upoštevanju dejstva , da kriteriji za ovrednotenje obeh vrst razčlenjevanja niso striktno ekvivalentni .
S kombinacijo uporabe diskriminativnih ocenjevalnih metod in algoritma Chu-Liu-Edmonds za iskanje maksimalnih vpetih dreves v usmerjenih grafih je omenjeni pristop mogoče razširiti tako , da so v drevesih dovoljene tudi neprojektivne povezave [ 56 ] .
Collins idr. [ 14 ] so za odvisnostno razčlenjevanje uporabili generativne verjetnostne modele na podatkih odvisnostne drevesnice PDT [ 32 ] .
Postopek razčlenjevanja je potekal tako , da so odvisnostno drevesnico najprej pretvorili v dekompozicijski format .
Podatki v taki obliki so služili kot učni primeri .
Vsi do sedaj omenjeni pristopi so namenjeni le določanju povezav v drevesu .
V drugem koraku določi končne povezave .
Njihov razčlenjevalni algoritem deluje po načelu premakni – reduciraj .
Podoben sistem je razvil tudi Nivre [ 62 ] , le da njegov sistem celotno drevo zgradi v enem prehodu čez poved , hkrati določa tudi oznake povezav in za izbiro razčlenjevalnih akcij uporablja leno učenje ( angl. lazy learning ) .
Najobsežnejši pregled odvisnostnega razčlenjevanja ponujata konferenci CoNLL 2006 ( Conference on Computational Natural Language Learning ) [ 5 ] in CoNLL 2007 [ 63 ] , kjer sta bili organizirani tekmovanji 19 ( 2006 ) oziroma 23 ( 2007 ) odvisnostnih razčlenjevalnikov , ki so bili preizkušeni na 12 ( 2006 ) oziroma 10 ( 2007 ) drevesnicah .
ISKANJE STAVKOV 9 konferenci CoNLL 2006 je najboljše rezultate dosegal razčlenjevalnik MSTP ( Maximum spanning-tree parser ) [ 55 ] , na konferenci CoNLL 2007 pa razčlenjevalnik Malt [ 34 ] .
2.2 Iskanje stavkov V znanstveni literaturi obstaja več pogledov na to , kaj sestavlja stavek [ 48 , 79 ] .
Vsebuje lahko dodatne elemente , kot so osebek , predmet , prilastek ipd. , ki glagolsko obliko točneje opisujejo .
Ker ne obstaja splošno sprejeta enotna definicija stavka , je v navadi , da glede na podatke , ki jih obdelujemo , izdelamo točno formalno definicijo .
V drevesnici Penn Treebank so v besedilu razmejeni tudi stavki .
Tik za odprtim oklepajem je za vsak stavek določen še tip , kot prikazuje primer na sliki 2.3. ( S Coach them in ( S-NOM handling complaints ) ( SBAR-PRP so that ( S they can resolve problems immediately ) ) .
) Slika 2.3 : Primer označitve stavkov .
" je razdeljena na segmente na naslednji način ( pojavnice označene z Di predstavljajo mejnike med segmenti , poleg češkega besedila je v oklepajih še prevod v slovenščino ) : • D0 : Zatímco ( Medtem ko ) • neúspěch bývá sirotkem ( je neuspeh sirota ) • D1 : , 10 POGLAVJE 2.
Na sliki 2.4 je prikazan diagram segmentov za to poved .
Slika 2.4 : Primer diagrama segmentov v povedi .
Abney iskanje stavkov uporablja kot filter v svojem razčlenjevalniku CASS ( Cascaded analysis of syntactic structure ) .
Sistem Ejerhedove je namenjen iskanju stavkov za izboljšanje sinteze govora .
Do sedaj opisani sistemi , temelječi na ekspertnih pravilih , so dosegali dobre rezultate s točnostjo oziroma priklicem nad 90 % ( primerjava rezultatov različnih avtorjev služi lahko le za orientacijo , saj mere točnosti niso vedno enake , prav tako tudi ne definicija in kompleksnost stavkov ) .
V izogib ročnemu delu pri izdelavi pravil je možno uporabiti strojno učenje nad korpusom , označenim s stavčnimi mejami .
Orasan [ 65 ] je za iskanje stavkov v angleškem besedilu uporabil leno učenje in manjše število pravil za naknadno obdelavo .
Tekmovanje je bilo razdeljeno na tri dele : določanje začetkov in koncev stavkov ter iskanje celih stavkov .
Tjong Kim Sang [ 77 ] je sistem za iskanje stavkov zgradil na podlagi lenega učenja ( F-mera 67 %).
Carreras in Marquez [ 6 ] sta dosegla najboljši rezultat s sistemom binarnih odločitev , ki sta jih modelirala z odločitvenimi drevesi in algoritmom AdaBoost ( F-mera 78 %).
Nadaljnji razvoj nekaterih omenjenih sistemov je opisan v [ 78 , 61 , 19 ] .
2.3 Razčlenjevanje z iskanjem stavkov Osnovni princip delovanja razčlenjevalnikov je , da poved obravnavajo kot nedeljivo celoto .
Prepoznavanje stavkov , ki poteka s pomočjo ekspertnih pravil , je vpleteno v proces razčlenjevanja .
Osnova algoritma je razmejitev na stavke , kjer stavek predstavlja temeljno enoto razčlenjevanja .
PREGLED PODROČJA IN SORODNA DELA 2.4 Iskanje naštevanj Naštevanje ( angl. intraclausal coordination ) ravno tako predstavlja manjšo zaključeno enoto znotraj povedi oziroma stavka .
Poglavje 3 Pregled uporabljenih tehnologij Poglavje predstavlja obstoječe tehnologije in metode , ki so v uporabi v našem algoritmu za razčlenjevanje z iskanjem stavkov in naštevanj ( ARISiN ) .
Najprej formalno definirajmo osnovne pojme , s katerimi operirajo razčlenjevalniki .
1 , ...
n } množica vozlišč , ki predstavljajo pojavnice v povedi , E = { ( i , j ) } , i = 1...nV , j = 1...nV množica povezav ter L = { l1 , ...
3.1 Razčlenjevalnik MSTP Razčlenjevalnik MSTP odvisnostno razčlenjevanje modelira kot iskanje maksimalnega vpetega drevesa v usmerjenih grafih .
Nad pojavnicami v povedi , predstavljenimi z vozlišči , algoritem najprej zgradi graf .
Povezavam med vozlišči priredi ocene glede na lastnosti povezave in vrednosti utežnega vektorja , ki jih pridobi z učenjem nad ročno označeno drevesnico .
Za določanje oznak povezav so avtorji uporabili markovski model prvega reda , 13 14 POGLAVJE 3.
xt je poved in yt pripadajoče ročno zgrajeno odvisnostno drevo .
j ) : ocena povezave , definirana kot skalarni produkt u · l ( i , j ) , pri čemer je u vektor uteži , l ( i , j ) pa vektor lastnosti z dvojiškimi vrednostmi , ki predstavljajo povezavo med vozliščema ?
Za iskanje maksimalnega vpetega drevesa uporablja algoritem Chu-Liu-Edmonds [ 13 ] ( glej algoritma 2 , 3 ) , ki preišče celoten prostor možnih rešitev .
Za vsako vozlišče izbere vhodno povezavo z največjo oceno in tako dobi podgraf .
Skupine vozlišč v ciklih reducira v eno samo vozlišče v originalnem grafu ter na novo preračuna ocene vhodnih in izhodnih povezav novega vozlišča .
Izvedba algoritma , ki jo predlaga Tarjan [ 75 ] , ima časovno zahtevnost O ( n2 ) .
11 : end if 3.2 Malt Razčlenjevalnik Malt postopek razčlenjevanja opiše kot zaporedje stanj , t.i. konfiguracij , ki vodijo od začetnega ( brez povezav med vozlišči ) do končnega stanja ( vsa vozlišča so povezana v odvisnostno drevo ) .
16 POGLAVJE 3.
C 7 : end for 8 : return PC 3.2.1 Razčlenjevanje kot zaporedje prehodov med konfiguracijami Vozlišča , ki predstavljajo pojavnice iz povedi x dolžine n , poimenujmo z indeksi i , 1 ?
Konfiguracija je četvorka c = ( ?
j pri čemer je j ?
n ) , • h ( i ) : funkcija , ki določa očeta vozlišča i , z vrednostjo 0 , če oče ni definiran , • d ( i ) : funkcija , ki določa oznako povezave med vozliščem i in njegovim očetom , z vrednostjo 0 , če oznaka ni definirana .
predstavlja vozlišča pojavnic , ki jih je razčlenjevalnik že obravnaval , medtem ko so v seznamu T preostala vozlišča .
Postopek razčlenjevanja opisuje algoritem 4.
MALT 17 odvisnostno drevo povedi .
Razčlenjevalnik pozna naslednje prehode med konfiguracijami , poleg njih so navedeni pogoji , kdaj so prehodi izvedljivi : 1.
Vhod : • g ( c ) : klasifikator , ki glede na konfiguracijo c določi naslednji prehod p. • ‹ p ( c ) : operacija , ki vrne novo konfiguracijo glede na prehod p iz konfiguracije c. Izhod : • h , d : funkciji , ki definirata odvisnostno drevo .
Določanje učnih primerov prikazuje algoritem 5.
Ravno tako kot pri razčlenjevanju je učni algoritem zaporedje prehodov med začetno in končno konfiguracijo , le da se namesto s klasifikatorjem nov prehod določi skladno z drevesom v zlatem standardu ( glej algoritem 6 , funkcija oracle ) .
Ker je število prehodov enako številu pojavnic v povedi , se iz celotne drevesnice dobi število učnih primerov , ki je enako dolžini besedila v drevesnici .
PREGLED UPORABLJENIH TEHNOLOGIJ Algoritem 5 Algoritem Malt , priprava učne množice .
x je poved in y = ( V , E , L ) pripadajoče ročno zgrajeno odvisnostno drevo .
Vhod : glej algoritem 5 Izhod : • Ustrezen prehod , glede na strukturo drevesa .
MALT 19 3.2.3 Atributni opis konfiguracij Ker bi opis konfiguracij s celotnim seznamom T , skladom ?
V atributnem opisu nastopajo lastnosti naslednjih vozlišč : • ?
0 ) je atribut z vrednostjo besedne oblike naslednjega vozlišča , d ( l ( ?
Razčlenjevalnik Malt tako loči tri različne modele , ki so združeni v atributni opis : • MSD model , označen kot ?
0 ) , m ( ?
, w ( ?
Parametri i , j in k ( dvojiške vrednosti ) določajo prisotnost atributov d ( l ( ?
Pri uporabi razčlenjevalnika Malt je možno s parametri določiti , kateri in kakšni modeli so vključeni v atributni opis .
Glagolski segmenti vsebujejo vsaj en določni glagol , medtem ko neglagolski segmenti od glagolov lahko vsebujejo zgolj nedoločnike .
Segmentacija povedi je zaporedje mejnikov in segmentov ( S1 , D1 , ...
, Sn , Dn ) , pri čemer je Si = ( si , 1 , ...
3.4 Strojno učenje Razdelek podaja kratek opis strojnega učenja in delovanja strojnih klasifikatorjev , s poudarkom na tistih algoritmih , ki so sestavni del algoritma ARISiN .
Običajno metode strojnega učenja razdelimo v tri skupine : Učni algoritmi odkrivajo pravila v strukturiranih podatkih .
Učno množico predstavljajo primeri , ki imajo vnaprej določen razred .
Učni algoritmi odkrivajo zakonitosti v podatkih , ne da bi bili ti podatki kakorkoli vnaprej strukturirani .
Končni rezultat so gruče primerov , v katerih primeri izkazujejo določene skupne lastnosti .
Predstavnik prve skupine algoritmov je J48 [ 83 ] ( priredba algoritma C4.5 [ 72 ] ) , ki gradi odločitvena drevesa .
Struktura odvisnostnih dreves vsebuje večino potrebnih informacij , ki so potrebne za definicije .
Poleg tega je v definicije vključen še morfološki nivo opisa besedila , t.i. MSD oznake , ki za vsako pojavnico hranijo podatke o njenih lastnostih , kot so število , oseba , sklon , spol ipd.
Za vsako pojavnico je v drevesnici na voljo tudi lema .
Pojavnica je trojka t = ( f , m , e ) , kjer je f njena oblika , m predstavlja MSD oznako in e lemo .
Vozlišče je trojka ?
Polni opis besede ‘ ki ’ v drevesu na sliki 2.2 je tako ( ‘ ki ’ , ‘ Css ’ , ‘ ki ’ ) .
Pripadajoče vozlišče opišemo kot ( ( ‘ ki ’ , ‘ Css ’ , ‘ ki ’ ) , ‘ AuxC ’ , ?
V doktorski disertaciji so pojavnice označene z malimi latinskimi , vozlišča pa z malimi grškimi črkami .
Potrebna je še definicija nekaterih posebnih tipov pojavnic .
Za točnejši opis MSD oznak glej Dodatek .
Tip pojavnice Pogoj Priredni veznik pos ( t , 1 ) = ‘ C ’ in pos ( t , 2 ) = ‘ c ’ Podredni veznik pos ( t , 1 ) = ‘ C ’ in pos ( t , 2 ) = ‘ s ’ Določni glagol pos ( t , 1 ) = ‘ V ’ in pos ( t , 3 ) = ‘ n ’ Oziralni zaimek pos ( t , 1 ) = ‘ R ’ Pomožni glagol l = ‘ AuxV ’ 4.1 Definicije stavkov V drevesnici SDT smo identificirali tri vrste stavkov , ki so predstavljeni kot poddrevesa v odvisnostnem drevesu povedi : • podredni stavki , začenši s podrednim veznikom - tip 1 , • podredni stavki , ki se ne začnejo s podrednim veznikom - tip 2 , • priredni stavki .
Vozlišče ?
, ki predstavlja pojavnico t , je koren podrednega stavka tipa 1 , če je pojavnica t podredni veznik in je eden od otrok nepomožni določni glagol ali koren stavčnega priredja .
, ki predstavlja pojavnico t , je koren podrednega stavka tipa 2 , če je pojavnica t nepomožni določni glagol , katerega oče ni niti podredni veznik niti koren stavčnega priredja niti beseda z lemo ‘ biti ’ .
, ki predstavlja pojavnico t , je koren prirednega stavka , če je pojavnica t nepomožni določni glagol in je njen oče koren stavčnega priredja .
Na sliki 4.1 so besede stavčnih korenov podčrtane .
Vozlišče besede ‘ ki ’ je koren podrednega stavka tipa 1. 4.1.
Naj bo K množica vseh korenov prirednih stavkov in stavčnih priredij , ki so potomci korena poddrevesa T .
Skrajno desni stavek sestavljajo naslednja vozlišča : • poddrevo vozlišča ßn ( na sliki 4.1 , poddrevo vozlišča ‘ počival ’ ) , 24 POGLAVJE 4.
i , j ( na sliki 4.1 poddrevo – v tem primeru le eno vozlišče – vozlišča ‘ in ’ z oznako povezave ‘ AuxY ’ .
4.2 Definicija naštevanja Naštevanja ( znotrajstavčna koordinacija , angl. intraclausal coordination ) so v odvisnostnem drevesu predstavljena kot poddrevesa , podobno kot stavki .
z oznako l je koren naštevanja , če je l = ‘ Coord ’ in noben od otrok ni določni glagol .
Odvisnostno drevo na sliki 4.2 vsebuje dve poddrevesi naštevanj .
Algoritem ARISiN vključuje več različnih osnovnih razčlenjevalnih modelov , ki jih izdelamo tako , da poljubni jezikovno neodvisni odvisnostni razčlenjevalnik naučimo na drevesnici ciljnega jezika .
Algoritem ARISiN je sestavljen iz dveh faz : 1.
V poglavju sta najprej opisani obe fazi algoritma , nato je opisan postopek priprave učnih množic za strojne klasifikatorje , uporabljene v prvi fazi in razčlenjevalne modele uporabljene v drugi fazi .
5.1 Prva faza : iskanje in redukcija stavkov ter naštevanj V tej fazi algoritem ARISiN poved razstavi na stavke in naštevanja ( glej algoritem 7 ) .
Najprej poved razdeli na segmente , kot je obrazloženo v razdelku 3.3.
Opisan postopek se ponavlja , dokler algoritem uspe najti stavke in naštevanja oziroma dokler v povedi obstaja več kot en glagolski segment .
1 : repeat 2 : segmentiraj ( ) 3 : boolNaselNastevanje := najdiNastevanja ( ) 4 : segmentiraj ( ) 5 : boolNaselStavek := najdiStavke ( ) 6 : until not ( boolNaselNastevanje or boolNaselStavek ) 5.1.1 Algoritem za iskanje naštevanj Algoritem deluje z naštevanji , kjer so glavne besede ( angl. head words ) predlogi , samostalniki ali pridevniki .
V drugem koraku neprimerne kandidate izloči .
Na koncu iz glavnih besed naredi naštevanja in jih reducira v meta pojavnico ( glej algoritem 8 ) .
Naj bo cat ( t ) funkcija , ki vrne vrsto pojavnice t. Naj bo case ( t ) funkcija , ki vrne sklon pojavnice t , če je pojavnica samostalnik ali pridevnik .
V prvem koraku , pri iskanju kandidatov ( algoritem 8 , najdiKandidate ( ) ) , algoritem uporabi naslednje hevristično pravilo : Definicija 10.
Hevristično pravilo A : če ?
V drugem koraku algoritem množico kandidatov filtrira ( algoritem 8 , filtrirajKandidate ( ) ) .
Najprej jih pretvori v pare sosednjih glavnih besed ( ci , ci+1 ) , 0 < i < n. Vsak par preveri z novim hevrističnim pravilom , ki je vsebuje tri pogoje .
Naj funkcije cc ( t ) , sc ( t ) , rp ( t ) in fv ( t ) vrnejo pravilno vrednost ( true ) , če je pojavnica t priredni veznik , podredni veznik , oziralni zaimek ali določni glagol in nepravilno vrednost ( false ) sicer .
¬ rp ( ti , j ) .
PRVA FAZA : ISKANJE IN REDUKCIJA STAVKOV TER NAŠTEVANJ 29 Pogoj I zahteva , da med glavnimi besedami ne sme biti dvopičij , podpičij , pomišljajev , vezajev , oklepajev , določnih glagolov , oziralnih zaimkov in podrednih veznikov .
Pogoj II zahteva , da je izmed vseh pojavnic med dvema sosednjima glavnima beseda natanko en mejnik med segmenti Dk = ( ti , j ) , ki vsebuje natanko eno pojavnico .
Ta pojavnica mora biti vejica ali priredni veznik .
Hevristično pravilo B : če katerikoli od pogojev I , II ali III za katerikoli par ( ci , ci+1 ) ni izpolnjen , potem skupino besed ( c1 , ...
Obstaja sicer še skupina treh besed iste vrste in v istem sklonu ( ‘ pladnji ’ , ‘ ure ’ , ‘ mešanica ’ ) , ki se skladajo s hevrističnim pravilom A , vendar jih hevristično pravilo B izloči iz množice kandidatov ; med njimi je več nedovoljenih veznikov , vejic , določnih glagolov .
Če je vsaj en par klasificiran negativno , algoritem zavrže celotno skupino glavnih besed , kateri pripada par .
Z uporabo programskega paketa WEKA [ 83 ] so bili razviti trije različni klasifikatorji , za vsako vrsto besed , ki jo algoritem ARISiN obvlada , svojega .
Klasifikatorji so tipa AdaBoost [ 29 ] z J48 drevesi kot osnovnim klasifikatorjem .
Vir učnih primerov je bila drevesnica SDT .
Za opis primerov z atributi algoritem uporabi pojavnice med glavnima besedama v paru , ki so razdeljene na dve skupini : pojavnice med levo glavno besedo in vejico / prirednim veznikom ( skupina A ) ter pojavnice med vejico / prirednim veznikom in desno glavno besedo ( skupina B ) .
Tri podčrtane besede se skladajo hevrističnim pravilom A , vendar za njih ne drži hevristično pravilo B. MSD oznake ( poševno ) so prikazane pod pojavnicami .
Zaporedja pojavnic , ki se začenjano s prvo glavno besedo in končujejo z zadnjo glavno besedo zamenja z meta pojavnico z imenom ‘ NAST ’ ( naštevanje ) .
Priredi ji MSD oznako z enako besedno vrsto in sklonom kot pri glavnih besedah .
V tabeli 5.1 se nahaja atributni opis para glavnih besed s slike 5.2.
Glavne besede so izpisane krepko , skupina B je podčrtana .
MSD oznake so izpisane pod besedami .
5.1.2 Algoritem za iskanje stavkov Stavek je sestavljen iz enega ali več segmentov in mejnikov .
Iskanje stavkov poteka v povedih , ki vsebujejo več kot en glagolski segment ( glej algoritem 9 ) .
Naj funkcija vs ( S ) vrne pravilno vrednost , če je S glagolski segment .
PRVA FAZA : ISKANJE IN REDUKCIJA STAVKOV TER NAŠTEVANJ 31 Tabela 5.1 : Atributni opis para glavnih besed , ki sestavljata naštevanje na sliki 5.2.
, skupina A 0 Velikost skupine , skupina A 0 Velikost skupine , skupina B 2 Atribut Vrednost Razred 1 Slika 5.3 : V povedi so trije stavki .
n - 1 ?
Če pogoj IV ne drži , algoritem glagolski segment strojno klasificira ( algoritem 9 , klasificiraj ( ) ) .
Klasifikator Beta je v uporabi za ostale primere .
V atributni opis je poleg obravnavanega segmenta Si vključen še predhodni mejnik Di-1 ter pari mejnik / segment Di-2 / Si-1 , Di-3 / Si-2 , Di / Si+1 in Di+1 / Si+2 .
Vsak par mejnik / segment Dk-1 / Sk je opisan z naslednjimi atributi : • Prisotnost prirednega veznika ( dvojiške vrednosti ) .
• Pomožni glagol se pojavlja pred deležnikom ( vrednosti : ‘ da ’ , ‘ ne ’ , ‘ ni definirano ’ ) .
Za iskanje takih skupin glavnih besed se uporabi hevristični pravili A in B , pri čemer nekatere pogoje opustimo .
Polni atributni opis tega segmenta zajema informacije iz naslednjih parov mejnik / segment : • [ in ] / ‘ popolnoma neuporabnimi ključavnicami ’ , • [ , ] / ‘ stare ure ’ , • [ , ki ] / ‘ se še pretvarjale niso ’ , • [ , da ] / ‘ gredo ’ , • [ , in ] / ‘ mešanica druge ropotije ’ .
[ , ki ] / ‘ se še pretvarjale niso ’ [ , ] / ‘ stare ure ’ Atribut Vrednost Atribut Vrednost Priredni veznik 0 Priredni veznik 0 Podredni veznik 1 Podredni veznik 0 Ločilo ‘ vejica ’ Ločilo ‘ vejica ’ Oziralni zaimek 0 Oziralni zaimek 0 Pomož .
gl .
‘ ni definirano ’ Tip segmenta ‘ glagolski ’ Tip segmenta ‘ neglagolski ’ Križajoče naštevanje 0 Križajoče naštevanje 0 Atribut Vrednost Razred 1 Če je segment klasificiran pozitivno ali pogoj IV drži , pomeni , da je algoritem našel enosegmentni stavek , ki ga lahko reducira ( algoritem 9 , reduciraj ( ) ) .
Čeprav celoten stavek sestavljata segment in mejnik pred njim , algoritem mejnika ne reducira ; mejniki namreč igrajo pomembno vlogo v drugi fazi , pri gradnji odvisnostnega drevesa .
Če se ta mejnik začne z vejico , kateri sledi veznik vezalnega , stopnjevalnega ali ločnega priredja , vejica pomeni konec stavka .
Zaporedja , ki so reducirana v isti iteraciji , se nahajajo na istem nivoju sklada .
Meta pojavnici algoritem priredi MSD oznako glavnega glagola v segmentu .
Reducirana zaporedja so podčrtana , glavne besede naštevanj so izpisane krepko , mejniki med segmenti so omejeni z oglatimi oklepaji , MSD oznake so izpisane poševno .
Meta pojavnice naštevanj so poimenovane ‘ NAST ’ , meta pojavnice stavkov pa ‘ POD ST T1 ’ , ‘ POD ST T2 ’ ali ‘ PRIR ST ’ .
Pojavnice nimajo vloge mejnika niti ne vplivajo na pogoje hevrističnega pravila B. Na sliki 5.4 v koraku b ) sta dva taka mejnika : [ , ki ] in [ , da ] .
V koraku c ) , kjer zaporedje pojavnic ‘ , stare ure , ki POD ST T1 , da POD ST T1 ’ predstavlja en sam segment , algoritem najde še eno 5.2.
5.2 Druga faza : gradnja odvisnostnih dreves V tej fazi algoritem ARISiN zaporedja , reducirana v prvi fazi , razčleni z enim od treh osnovnih razčlenjevalnih modelov : začetni razčlenjevalni model , stavčni razčlenjevalni model ali razčlenjevalni model za naštevanja .
Na sliki 5.5 je orisano delovanje celotne faze , ki predstavlja nadaljevanje obdelave besedila , prikazane na sliki 5.4.
V takem primeru algoritem drevo zavrže , uporabi razčlenjevalnik s pravili in na novo zgradi začetno drevo .
Razširjena zaporedja algoritem razčleni s stavčnim razčlenjevalnim modelom oziroma z razčlenjevalnim modelom za naštevanja ( slika 5.5č ) .
V drevesu povedi poddrevesa meta pojavnic algoritem zamenja z novo izdelanimi poddrevesi ( slika 5.5d ) .
Vozlišča meta pojavnic nekaterih zaporedij , ki se sicer nahajajo na enakem nivoju sklada , so v drevesu povedi lahko v nadrejeno-podrejenem odnosu .
Tak primer sta obe vozlišči ‘ POD ST T1 ’ na sliki 5.5d .
Na sliki 5.5 je prikazana samo prva iteracija .
5.3 Priprava učnih množic Luščenje učnih primerov iz drevesnice SDT poteka v treh ločenih sklopih .
Algoritem najprej poišče učne primere za klasifikatorja pri iskanju stavkov ; poimenujmo to učno množico Uk .
V tem sklopu najde tudi pozitivne primere za klasifikatorje skupin glavnih besed naštevanj ( množico poimenujmo Uk ) , 36 POGLAVJE 5.
Na levi strani slike ( a , d ) je prikazana rast drevesa povedi .
PRIPRAVA UČNIH MNOŽIC 37 Algoritem 10 Druga faza : gradnja odvisnostnih dreves .
, Sm , n )]: sklad z m nivoji , kjer je Si , j zaporedje reducirano v meta pojavnico vozlišča ?
Izhod : • T : odvisnostno drevo povedi .
i , j ) , N ) 7 : end for 8 : rearrange ( ST ACK ) 9 : until ST ACK is empty negativne primere za ta klasifikator pa poišče v tretjem sklopu ( to množico poimenujmo Uk ).
Primeri iz vseh dreves skupaj sestavljajo celotne učne množice , kar pomeni , da se nekateri primeri znotraj posameznih množic ponavljajo .
Pri tem je bilo upoštevano še pravilo , da v učnih množicah klasifikatorjev en primer ne more biti hkrati pozitiven in negativen , tako da se v takih slučajih negativne primere izloči iz učnih množic .
5.3.1 Učni primeri za klasifikator stavkov Algoritem 11 v odvisnostnem drevesu najprej poišče stavke glede na definicije , opisane v 4.
Enosegmentni stavki predstavljajo pozitivne učne primere ( podčrtano na slikah 5.6 in 5.7 ) .
Negativni primeri ( krepko na slikah 5.6 in 5.7 ) so tisti glagolski segmenti , ki predstavljajo samo del stavka , ostali deli stavka pa so segmenti drugje v povedi ( ležeče na slikah 5.6 in 5.7 ) .
Vhod : par poved x / odvisnostno drevo y , iz katerega algoritem poišče učne primere .
5.3.2 Učni primeri za razčlenjevalnike ter pozitivni učni primeri za klasifikator skupin glavnih besed Priprava učnih množic za različne razčlenjevalne modele in pridobivanje pozitivnih primerov za klasifikatorje skupin glavnih besed potekata hkrati .
PRIPRAVA UČNIH MNOŽIC 39 Slika 5.7 : Drevo s primeri glagolskih segmentov kot pozitivnih in negativnih primerov .
v učno množico začetnega razčlenjevalnega modela Ur ( slika 5.8a ) .
Algoritem nato drevo povedi obreže ( odrezana poddrevesa prikazuje slika 5.8c , na sliki 5.8a so mesta obrezovanja označena s križci ) .
V primeru naštevanj algoritem iz poddrevesa izlušči še pozitivni učni primer za klasifikator glavnih besed in ga doda v množico Uk .
Končni rezultat obrezovanja je drevo na sliki 5.8č , ki predstavlja vhodni podatek za naslednjo iteracijo .
5.3.3 Negativni učni primeri za klasifikator glavnih besed naštevanj Negativnih primerov za klasifikator glavnih besed v drevesnici SDT ni možno poiskati neposredno , saj niso posebej označeni .
V tem primeru se uporabi algoritem za iskanje 40 POGLAVJE 5.
• np ( y ) : funkcija , ki vrne seznam korenov enostavnih naštevanj in stavkov v drevesu y. • p ( y , ?):
funkcija , ki obreže drevo y pri vozlišču ?.
Izjema : če je vozlišče koren podrednega stavka tipa 1 , funkcija obreže drevo pri določnem glagolu , ki je otrok korena .
Funkcija vrne poddrevo .
• mls ( y ) : funkcija vrne seznam pozitivnih učnih primerov za klasifikator glavnih besed , ki jih izlušči iz poddrevesa y. Izhod : • Ur , Ur , Ur , Uk : učne množice za razčlenjevalne modele in množica pozitivnih učnih primerov za klasifikator glavnih besed naštevanj 1 : while true do dodaj t v Ur N := np ( t ) if N = () then exit end if for all ?
Iz skupin , ki ustrezajo pogojem hevrističnih pravil , se izloči tiste , ki so bile osnova za pozitivne primere ( glej razdelek 5.3.2 ) .
Postopek je zapisan v algoritmu 13.
Na sliki 5.9 sta dve besedi , ki ustrezata hevrističnima praviloma A in B , vendar ne predstavljata skupine glavnih besed naštevanja .
PRIPRAVA UČNIH MNOŽIC 41 Slika 5.8 : Potek priprave učnih množic .
Drevesa na levi strani so učni primeri za začetni razčlenjevalni model .
Drevesa na desni strani sodijo v učne množice stavčnega razčlenjevalnega modela in modela za razčlenjevanje naštevanj .
Vhod : • t : odvisnostno drevo povedi • hg ( y ) : funkcija , ki v drevesu y najde skupine besed , ki ustrezajo hevrističnima praviloma A in B ( glej razdelek 5.1.1 ) , ter vrne seznam učnih primerov .
Uk then 4 : dodaj p v Uk - 5 : end if 6 : end for Slika 5.9 : Negativni učni primer klasifikatorja skupin glavnih besed .
Skupini besed A in B , iz katerih izvirajo informacije za atributni opis primera , sta podčrtani .
5.4 Razčlenjevalnik s pravili Razčlenjevalnik s pravili uporabimo v drugi faz in sicer takrat , kadar algoritem ARISiN zazna napake , ki jih osnovni razčlenjevalni model naredi pri gradnji začetnega drevesa .
RAZČLENJEVALNIK S PRAVILI 43 5.4.1 Zaznavanje napak Algoritem ARISiN najprej analizira začetno drevo , s tem da pregleda vse poti , ki se začnejo v listih in končajo v korenu drevesa , kot je prikazano na sliki 5.10.
Podredni stavek namreč ne more biti glavni stavek povedi , niti ne more biti v koordinaciji z drugimi prirednimi stavki , kot kaže primer na sliki 5.10.
Slika 5.10 : Prikaz analize začetnega drevesa .
V spodnjem delu slike so prikazane nekatere poti v drevesu , ki se začnejo v listih in končajo v korenu .
Poti , ki nakazujeta napako v drevesu , sta označeni s križcem .
5.4.2 Novo začetno drevo – prvi prehod Algoritem 14 v prvem prehodu obdela meta pojavnice prirednih stavkov .
Če je v povedi samo ena taka pojavnica , jo razčlenjevalnik postavi neposredno pod tehnično vozlišče ( slika 5.11a ) .
V nasprotnem primeru ustvari novo poddrevo , ki ga postavi neposredno pod tehnično vozlišče .
Koren poddrevesa , ki predstavlja koren priredja stavkov , je vozlišče 44 POGLAVJE 5.
Meta pojavnice in pojavnice mejnikov tik pred njimi postanejo otroci korena priredja stavkov ( slika 5.11b ) .
Algoritem 14 Razčlenjevalnik s pravili , prvi prehod .
, µ ) : funkcija , ki postavi vozlišče µ pod vozlišče ?.
) : funkcija , vrne pravilno , če vozlišče ?
Vozlišča meta pojavnic podrednih stavkov tipa 1 algoritem postavi pod podredne veznike levo od njih ( slika 5.12b ) ; tudi vejice neposredno pred podrednimi vezniki razčlenjevalnik v drevo postavi pod podredne veznike .
Vozlišča meta pojavnic podrednih stavkov tipa 2 algoritem postavi pod najbližjo meta pojavnico na levi ; 5.4.
Meta pojavnice prirednih stavkov , katere razčlenjevalnik najprej postavi v drevo , so izpisane krepko .
Algoritem 15 Razčlenjevalnik s pravili , drugi prehod .
Pojavnice , ki so že v drevesu , so izpisane v sivi barvi .
V prvem delu opisuje izvor in strukturo učno / testnih podatkov ter predstavlja način merjenja uspešnosti razčlenjevalnih algoritmov .
Večje kot je ujemanje , točnejši je algoritem .
Če je število označenih primerov majhno , nastane problem , kako zagotoviti primerno velikost testne množice ; če se prevelik del podatkov izloči iz procesa učenja , ocena točnosti delovanja algoritma ne bo smiselna , saj se iz manjše učne množice algoritem slabše uči .
OVREDNOTENJE ALGORITMA ARISIN 6.2 Opis učnih in testnih podatkov , mere točnosti Za ovrednotenje algoritma ARISiN je bila uporabljena Slovenska odvisnostna drevesnica ( SDT ) .
Drevesnica SDT vsebuje 55.208 pojavnic , od tega 38.646 pojavnic izvira iz prvega dela romana " 1984 " Georgea Orwella [ 66 ] , preostali del pa iz korpusa SVEZ-IJS [ 27 ] .
Drevesnica SDT je predstavljala vir za učno množico osnovnih razčlenjevalnih modelov in strojnih klasifikatorjev ter testno množico in zlati standard za ovrednotenje celotnega algoritma ARISiN .
Na tekmovanju na konferenci CoNLL 2006 sta dosegla prvi in drugi najboljši rezultat za slovenščino , zato sta bila uporabljena za razvoj osnovnih razčlenjevalnih modelov .
Samostojni razčlenjevalnik MSTP predstavlja algoritem z največjo točnostjo razčlenjevanja za slovenščino do sedaj .
Poskusi z algoritmom ARISiN so praviloma parni , enkrat z osnovnimi razčlenjevalnimi modeli MSTP , drugič z modeli razčlenjevalnika Malt .
Atributni opis pri razčlenjevalniku Malt je sestavljen iz modelov ?
Definirajmo mere v okviru enega odvisnostnega drevesa .
OVREDNOTENJE RAZLIČNIH VERZIJ ALGORITMA ARISIN 49 Slika 6.1 : Primer ovrednotenja razčlenjevanja glede na različne mere točnosti .
Pri meri C se upošteva povezave , kjer podrejeno vozlišče ni ločilo , razen če ima povezava v zlatem standardu oznako ‘ Coord ’ .
Pri strukturi dreves , kot jo imata drevesnici SDT in PDT , so ločila , ki so koreni naštevanj ter priredij stavkov , izjema .
Povezava v tako ločilo ( oznaka ‘ Coord ’ ) določa položaj naštevanja oziroma priredja znotraj celotne strukture odvisnostnega drevesa , kar je bila motivacija za uporabo mere C pri poskusih .
Na sliki 6.2 najdemo primere izračuna točnosti .
Slika 6.2a prikazuje drevo iz zlatega standarda , na ostalih slikah je drevo , ki ga je izdelal avtomatski razčlenjevalni algoritem .
Povezave , ki se ne nahajajo v množici Ma , so izrisane črtkano , povezave množice La so označene s kljukico .
Rezultati so bili pridobljeni na delu drevesnice SDT , ki izvira iz romana " 1984 " , kar se v tem razdelku obravnavama kot zlati standard za ovrednotenje algoritmov .
dimenzija , po kateri se razlikujejo poskusi , je uporaba razčlenjevalnika MSTP oziroma Malt za razvoj osnovnih razčlenjevalnih modelov .
Tako pridobljeni točnosti bosta nadalje služili kot izhodiščna rezultata za primerjavo z rezultati algoritma ARISiN .
Vse najdene kandidate za naštevanja in vse glagolske segmente je ARISiN reduciral v meta pojavnice .
Rezultati v tabelah , ki so označeni z zvezdico , se statistično signifikantno razlikujejo od izhodiščnega rezultata vsaj z verjetnostjo 95 %.
Tabela 6.1 : Točnost razčlenjevanja različnih verzij algoritma ARISiN z osnovnimi razčlenjevalnimi modeli MSTP v primerjavi z izhodiščnim rezultatom , ki ga je dosegel osnovni razčlenjevalnik MSTP brez izboljšav .
s pravili 79,46 % *81,74 % *81,34 % ARISiN , polna verzija 79,76 % *81,92 % *81,51 % Primerjava rezultatov glede na uporabo osnovnih razčlenjevalnikov pokaže , da z razčlenjevalnikom MSTP algoritem ARISiN dosega višje točnosti .
Uporaba razčlenjevalnika s pravili v polni verziji pripomore k nekoliko boljšemu rezultatu v primerjavi s četrtim poskusom .
Rezultati drugega poskusa kažejo , da se pri uporabi osnovnih razčlenjevalnih modelov MSTP tudi samo z iskanjem naštevanj nekoliko izboljša točnost razčlenjevanja , medtem ko iskanje naštevanj v primeru uporabe razčlenjevalnih modelov Malt poslabša točnost .
OVREDNOTENJE RAZLIČNIH VERZIJ ALGORITMA ARISIN 51 Slika 6.2 : Sprememba točnosti , ki jo dosegajo različne verzije algoritma ARISiN glede na izhodiščni rezultat .
OVREDNOTENJE ALGORITMA ARISIN Tabela 6.2 : Točnost razčlenjevanja različnih verzij algoritma ARISiN z osnovnimi razčlenjevalnimi modeli Malt v primerjavi z izhodiščnim rezultatom , ki ga je dosegel osnovni razčlenjevalnik Malt brez izboljšav .
6.4 Podrobna analiza komponent algoritma ARISiN Razdelek podaja podrobno analizo delovanja polne verzije algoritma ARISiN .
Najprej je opisana je analiza , kako algoritem obravnava naštevanja in različne vrste stavkov , nato je prikazana primerjava razčlenjevalnika s pravili z osnovnimi razčlenjevalnimi modeli .
V zlatem standardu se nahaja 615 naštevanj predlogov , samostalnikov in pridevnikov , torej takih , ki jih obravnava algoritem ARISiN .
Rezultati so predstavljeni v tabeli 6.3.
V prvem stolpcu je število skupin glavnih besed v avtomatsko izdelanih drevesih , ki so identične tistim v drevesih zlatega standarda .
V tretjem stolpcu je število skupin , v katerih nekatere najdene glavne besede nimajo vloge glavnih besed v zlatem standardu .
Rezultati kažejo , da je po številu najdenih skupin , ki so identične tistim v zlatem standardu , najuspešnejši algoritem ARISiN z osnovnimi razčlenjevalnimi modeli MSTP .
Osnovni razčlenjevalnik Malt deluje po tem kriteriju bolje kot 6.4.
Malt ) 388 42 18 algoritem ARISiN z osnovnimi razčlenjevalnimi modeli Malt ; po ostalih dveh kriterijih je osnovni razčlenjevalnik Malt celo najboljši izmed vseh , kar razlaga boljšo točnost razčlenjevanja v primerjavi z algoritmom ARISiN , ki vključuje samo iskanje naštevanj ( glej drugo vrstico tabele 6.2 ) .
Do določene mere je torej manj pomembno visoko število identično najdenih skupin glavnih besed , kot pa majhno število delno najdenih skupin ter še posebej skupin , ki vsebujejo besede , ki v zlatem standardu nimajo vloge glavnih besed .
V sklopu analize delovanja algoritma ARISiN smo ročno pregledali 200 naključno izbranih avtomatsko izdelanih dreves .
Sliki 6.4 in 6.5 predstavljata primere konkretnih razčlenitev dveh povedi .
Od vseh algoritmov to naštevanje najde samo osnovni razčlenjevalnik Malt , ki pri razčlenjevanju tudi sicer naredi najmanj napak .
Algoritem ARISiN v obeh primerih najprej išče naštevanja samostalnikov in nápak reducira zaporedje besed ‘ dan in ura ’ .
Segment levo od besede ‘ in ’ je neglagolski , zato glavni besedi zadoščata pogoju III hevrističnega pravila B ( glej razdelek 5.1.1 ) , čeravno je beseda ‘ in ’ v tem primeru meja med stavkoma .
Ko v naslednjem prehodu najde še besedi ‘ mrzel ’ in ‘ jasen ’ kot kandidata za glavne besede , ravno pogoj III prepreči redukcijo , saj je poved sestavljena samo še iz dveh glagolskih segmentov .
V drugem primeru algoritem ARISiN z obema vrstama osnovnih razčlenjevalnih modelov pravilno razčleni poved .
Algoritem ARISiN v prvi iteraciji prve faze najprej najde naštevanje ‘ starih , cunjastih ’ , v drugi iteraciji pa še naštevanje ‘ kuhanem zelju in NAST predpražnikih ’ , kar poenostavi delo razčlenjevalnemu modelu pri gradnji začetnega drevesa .
Drevo osnovnega razčlenjevalnika MSTP vsebuje pogosto napako , 54 POGLAVJE 6.
OVREDNOTENJE ALGORITMA ARISIN Slika 6.3 : Diagrami prikazujejo število najdenih skupin glavnih besed .
Tipična napaka osnovnega razčlenjevalnika Malt , kot je prikazana na sliki , je , da pod tehnično vozlišče postavi poleg glavnega glagola še druga vozlišča .
V primeru , da je naštevanje znotraj stavka , ki vsebuje pomožni glagol in deležnik , naštevanja ne bo mogoče najti , če je vejica oziroma priredni veznik med pomožnikom in deležnikom – algoritem bo besede levo in desno razumel kot dva glagolska segmenta in primer ne bo zadostil pogoju III hevrističnega pravila B. Kot neprilagodljiv se algoritem ARISiN izkaže tudi , kadar imajo besede napačne MSD oznake .
PODROBNA ANALIZA KOMPONENT ALGORITMA ARISIN 55 Slika 6.4 : Primer razčlenitve povedi z različnimi algoritmi .
V besedilu v zgornjem delu slike so mejniki med segmenti označeni z oglatimi oklepaji .
MSD oznake pod besedami so izpisane ležeče , oznake besednih vrst in sklonov so podčrtane .
OVREDNOTENJE ALGORITMA ARISIN Slika 6.5 : Primer razčlenitve povedi z različnimi algoritmi .
V besedilu v zgornjem delu slike so mejniki med segmenti označeni z oglatimi oklepaji .
Tabela 6.4 : Število najdenih skupin glavnih besed naštevanj v avtomatsko izdelanih drevesih , razčlenjeno glede na vrsto naštevanj .
MSTP ) 56 % 67 % 82 % Osnovni Malt 40 % 62 % 82 % ARISiN (+ osn .
V tabeli 6.4 zapisani rezultati pomenijo , kolikšen delež skupin določene vrste je določeni algoritem glede na zlati standard našel , upoštevaje le skupine , ki so bile identične s tistimi v zlatem standardu .
Kot je bilo pričakovati , so bili najboljši rezultati doseženi pri naštevanjih pridevnikov , ki so najenostavnejša vrsta naštevanj .
Najslabši rezultati so bili doseženi za naštevanja predlogov , ki predstavljajo najbolj kompleksen tip izmed obravnavanih naštevanj .
OVREDNOTENJE ALGORITMA ARISIN Slika 6.7 : Diagrami za različne razčlenjevalne algoritme prikazujejo delež najdenih skupin glavnih besed ( identičnih tistim v zlatem standardu ) glede na vse skupine določene vrste .
Pri primerjavi so bile upoštevane samo besede , ne pa tudi ločila .
OVREDNOTENJE ALGORITMA ARISIN razčlenjevanja ( glej tabeli 6.1 in 6.2 , primerjava izhodiščnih rezultatov in polne verzije algoritma ARISiN ) .
Razčlenjevalnik Malt bistveno slabše obravnava stavčno strukturo kot algoritem MSTP .
Pri številu delno najdenih stavkov je algoritem ARISiN z osnovnimi razčlenjevalnimi modeli MSTP nekoliko slabši ( večje število delno najdenih stavkov ) kot osnovni razčlenjevalnik MSTP , medtem ko v primeru osnovnih razčlenjevalnih modelov Malt algoritem ARISiN doseže bistveno boljše rezultate kot osnovni razčlenjevalnik .
Situacija je obratna pri številu stavkov , ki vsebujejo dodatne , nedovoljene besede , kjer pri uporabi razčlenjevalnika MSTP algoritem ARISiN doseže boljše rezultate ( manjše število nepravilnih stavkov ) , pri uporabi razčlenjevalnika Malt pa slabše .
Ravno tako kot pri naštevanjih je pomembno , da algoritem ARISiN pri iskanju stavkov ne zagreši prevelikega števila takih napak , kjer bi v stavek vsilil napačne besede , kar bi lahko izničilo učinek pravilno najdenih stavkov .
Stavke v odvisnostnem drevesu lahko identificiramo z njihovimi glavnimi glagoli .
Algoritem za analizo je za vsak glavni glagol g poiskal , kateri od ostalih glavnih glagolov p je njegov najbližji predhodnik .
Nato je za vse razčlenjevalne algoritme izmeril , kakšen je delež glavnih glagolov g s pravilnimi najbližjimi predhodniki p. Na sliki 6.9a ima glagol ‘ zna ’ pravilnega najbližjega predhodnika ‘ dela ’ , medtem ko je na sliki 6.9b najbližji predhodni določni glagol ‘ blefiral ’ napačen .
Slika 6.9 : Primera pravilnega ( drevo a ) in nepravilnega ( drevo b ) predhodnika glavnega glagola .
PODROBNA ANALIZA KOMPONENT ALGORITMA ARISIN 61 Rezultati so predstavljeni v tabeli in na sliki 6.10.
Algoritem ARISiN vedno doseže boljše rezultate v primerjavi z osnovnim razčlenjevalnikom istega tipa , ki je bil v algoritmu uporabljen .
Prav tako uporaba razčlenjevalnika Malt daje slabše rezultate kot uporaba razčlenjevalnika MSTP .
Slika 6.10 : Delež glavnih glagolov , ki imajo v odvisnostnem drevesu pravi glavni glagol za predhodnika .
Naslednja primera izvirata iz množice 200 ročno pregledanih povedi in njihovih avtomatskih razčlenitev .
V primeru na sliki 6.11 algoritem ARISiN najde vse tri stavke v povedi , kar omogoči , da z uporabo osnovnih razčlenjevalnih modelov MSTP dobimo popolnoma točno razčlenitev .
Osnovni razčlenjevalnik MSTP ne prepozna , da je v povedi priredje dveh stavkov in postavi podredni stavek v koordinacijo s prvim prirednim stavkom .
Algoritem ARISiN z osnovnimi razčlenjevalnimi modeli Malt sicer prepozna , da sta glagola ‘ Brcnil ’ in ‘ zavil ’ v koordinaciji , vendar podredni stavek postavi v odvisnost od prvega prirednega stavka namesto od drugega .
Osnovni razčlenjevalnik Malt popolnoma zgreši strukturo drevesa in , kar je zelo značilno za take primere , precejšnje število besed postavi neposredno pod tehnično vozlišče .
V drugem primeru ( sliki 6.12 in 6.13 ) ima algoritem ARISiN precejšnje težave pri 62 POGLAVJE 6.
OVREDNOTENJE ALGORITMA ARISIN Slika 6.11 : Primer razčlenitve povedi z različnimi razčlenjevalnimi algoritmi .
PODROBNA ANALIZA KOMPONENT ALGORITMA ARISIN 63 prepoznavanju stavkov , predvsem zaradi velikega števila segmentov v povedi .
Algoritem ARISiN je manj uspešen pri iskanju stavkov v povedih , v katerih je veliko neglagolskih segmentov in vrinjenih stavkov .
Algoritem ARISiN deluje tudi slabše nad povedmi , kjer v koordinaciji s prirednim stavkom nastopajo pojavnice , ki ne sestavljajo celotnega stavka , recimo v primerih opuščanja besed .
Kot pri iskanju naštevanj tudi pri iskanju stavkov algoritmu ARISiN povzročajo preglavice napačne MSD oznake besed .
Malt ) 37 % 46 % 28 % Vsi algoritmi dosegajo najboljše rezultate pri podrednih stavkih tipa 1.
Testne množice iz 64 POGLAVJE 6.
OVREDNOTENJE ALGORITMA ARISIN Slika 6.12 : Primer razčlenitve povedi ( razčlenjevalnik MSTP ) .
poskusov s polno verzijo algoritma ARISiN , opisanih v razdelku 6.3 , so bile razdeljene na šest podmnožic , v katerih so bili različni tipi povedi : • povedi brez glagolov , 66 POGLAVJE 6.
OVREDNOTENJE ALGORITMA ARISIN Slika 6.15 : Diagrami za različne razčlenjevalne algoritme prikazujejo delež najdenih stavkov , identičnih glede na zlati standard , glede na vse stavke določene vrste .
Kot enostavčno poved obravnavamo táko , ki vsebuje samo eno kompleksno glagolsko obliko ( glavni glagol z morebitnimi pomožniki ) , dvostavčna poved ima dve kompleksni glagolski obliki , itn. Za vsako podmnožico posebej je bila izmerjena točnost razčlenjevanja .
Delež različnih tipov povedi je predstavljen z diagramom na sliki 6.16.
Rezultati so predstavljeni v tabeli 6.7.
Po vrsticah so rezultati razporejeni glede na različne razčlenjevalne algoritme , po stolpcih so razporejeni za vsak tip povedi posebej .
V tabeli je zapisana mera točnosti C. Na diagramih na sliki 6.17 je prikazana razlika točnosti v odstotnih točkah med algoritmom ARISiN in ustreznim osnovnim razčlenjevalnikom kot izhodiščnim rezultatom .
Na enostavčnih povedih sta bila opravljena dodatna poskusa z dvema različnima verzijami algoritma 6.4.
0 1 2 3 4 > = 5 Osnovni MSTP 72,05 % 83,42 % 81,78 % 80,56 % 78,13 % 75,72 % ARISiN (+ osn .
Razlika 3,03 odstotne točke med rezultatom poskusa B in izhodiščnim rezultatom ( 83,42 %) je statistično signifikantna , medtem ko razlika 0,24 odstotne točke med rezultatom poskusa A in izhodiščnim rezultatom ni .
Pri rezultatih v tabeli 6.7 je opaziti dva trenda : pri uporabi osnovnih razčlenjevalnih modelov MSTP se doprinos k točnosti z uporabo algoritma ARISiN zmanjšuje od enostavčnih povedi naprej .
6.4.4 Analiza razčlenjevalnika s pravili Razdelek predstavlja analizo delovanja razčlenjevalnika s pravili .
Prvi korak v drugi fazi algoritma ARISiN je izdelava začetnega odvisnostnega drevesa z začetnimi razčlenjevalnimi modeli .
Drevesa , v katerih so le meta pojavnice , vezniki in ločila , poimenujmo enostavna začetna drevesa .
Algoritem ARISiN lahko v njih zazna določene napake , požene razčlenjevalnik s pravili in zgradi novo verzijo začetnega drevesa .
Analize so bile osredotočene na primerjavo starih verzij enostavnih začetnih dreves , v katerih so bile ugotovljene napake , in novih verzij teh dreves .
Od vseh enostavnih začetnih dreves algoritem ARISiN zazna napake v 17% dreves , izdelanih z razčlenjevalnikom MSTP , in v 25% primerih dreves , izdelanih z razčlenjevalnikom Malt .
Primerjave avtomatsko izdelanih enostavnih začetnih dreves z zlatim standardom ni mogoče izvesti na klasičen način z merami točnosti V , L in M kot pri meritvah v prejšnjih razdelkih .
Algoritem ARISiN v prvi fazi naredi napake in pri nekaterih povedih število 6.4.
PODROBNA ANALIZA KOMPONENT ALGORITMA ARISIN 69 meta pojavnic ni pravilno glede na zlati standard .
Ovrednotenje točnosti razčlenjevanja pri enostavnih začetnih drevesih je zaradi zgoraj navedenih razlogov potekalo po novem postopku .
Meta pojavnice v avtomatsko izdelanih drevesih algoritem za izmero točnosti najprej zamenja z glavnimi glagoli stavka , ki jih meta pojavnice predstavljajo .
Mera točnosti razčlenjevanja je delež vozlišč v transformiranem avtomatsko izdelanem drevesu , ki imajo pravilnega očeta glede na transformirano drevo iz zlatega standarda .
Tabela in slika 6.18 predstavljata točnost razčlenjevanja različnih algoritmov .
Z medsebojno primerjavo osnovnih razčlenjevalnikov se izkaže , da v drevesih z napakami manjšo točnost doseže razčlenjevalnik MSTP , a je delež vseh enostavnih dreves z ugotovljenimi napakami pri razčlenjevalniku MSTP manjši .
Primerjava točnosti razčlenjevanja polne verzije algoritma ARISiN ter verzije brez razčlenjevalnika s pravili ( zadnja in predzadnja vrstica v tabelah 6.1 in 6.2 ) pokažeta , da za relativno majhen napredek gledano v celoti ni razlog slabo delovanje razčlenjevalnika s pravili , ampak majhno število dreves , nad katerimi je možno uporabiti razčlenjevalnik s pravili .
Po ročnem pregledu 100 avtomatsko izdelanih začetnih dreves smo našli dve tipični napaki osnovnih razčlenjevalnih modelov MSTP in Malt .
Drugi tip napake je koordinacija meta pojavnice podrednega in prirednega stavka , vendar je v tem primeru treba omeniti , da to v nekaterih izjemnih primerih ni napaka ; takrat napako naredi razčlenjevalnik s pravili , ki takih primerov ne zmore pravilno obravnavati .
Sliki 6.19 in 6.20 predstavljata razčlenitvi dveh enostavnih začetnih dreves .
Osnovni razčlenjevalnik MSTP nápak postavi v koordinacijo prvi priredni veznik in drugo meta pojavnico , osnovni razčlenjevalnik Malt obe omenjeni pojavnici postavi pod tehnično vozlišče .
Osnovna razčlenjevalnika sicer pravilno določita koordinacijo prvih dveh meta pojavnic ; vendar ravno tako ne prepoznata dvonivojskega priredja in tudi popolnoma zgrešita hierarhijo zadnjih treh meta pojavnic .
6.5 Spreminjanje velikosti učne množice Razdelek predstavlja dve seriji poskusov , namenjenih oceni točnosti razčlenjevanja glede na količino in tip učnih podatkov .
Za učne in testne podatke je služilo besedilo , ki pripada delu drevesnice SDT izvirajočem iz 6.5.
SPREMINJANJE VELIKOSTI UČNE MNOŽICE 71 Slika 6.19 : Primeri razčlenitev enostavnega začetnega drevesa .
Zgoraj na sliki je prikazano , kako algoritem ARISiN reducira stavke v meta pojavnice .
Mejniki med stavki so označeni z oglatimi oklepaji .
OVREDNOTENJE ALGORITMA ARISIN Slika 6.20 : Primeri razčlenitev enostavnega začetnega drevesa .
Poskusi , v katerih učne in testne množice vsebujejo vse podatke iz drevesnice SDT , torej tudi tiste , ki izvirajo iz korpusa SVEZ-IJS .
V vsaki ponovitvi prečnega preverjanja je učna množica vsebovala le 20 , 40 , 60 oziroma 80 odstotkov podatkov , kot prikazuje slika 6.21.
Slika 6.21 : Diagrami prikazujejo razmerje podatkov , uporabljenih za učno in testno množico .
Rezultati , predstavljeni v tabeli 6.8 , so po vrsticah razvrščeni glede na razčlenjevalne algoritme in po stolpcih za vsak poskus posebej .
OVREDNOTENJE ALGORITMA ARISIN Tabela 6.8 : Točnost razčlenjevanja glede na spremenljivo količino učnih podatkov , predstavljena z mero C. Zadnji stolpec tabele za lažjo primerjavo vsebuje rezultate iz tabel 6.1 in 6.2.
SPREMINJANJE VELIKOSTI UČNE MNOŽICE 75 Slika 6.23 : Diagrama za različne poskuse prikazujeta razlike točnosti med algoritmom ARISiN in osnovnima razčlenjevalnikoma , ki predstavljata izhodiščna rezultata .
večjih količinah učnih podatkov , vendar lahko sklenemo , da bi še dodatno povečanje učne množice lahko še znatno pripomoglo k boljši točnosti razčlenjevanja .
6.5.2 Učna množica – celotna drevesnica SDT V drugi seriji poskusov je učno-testno množico predstavljala celotna drevesnica SDT , torej del , ki izvira iz romana " 1984 " , in tudi del , ki je bil vzet iz korpusa SVEZ-IJS .
Ciljnih povedi za iskanje stavkov je v SVEZ-IJS delu drevesnice bistveno manj , medtem ko je število naštevanj glede na število povedi približno v enakem razmerju tako v besedilu iz romana " 1984 " kot v tistem iz korpusa SVEZ-IJS .
Opravljena sta bila dva poskusa s polno verzijo algoritma ARISiN , vsakič z drugimi osnovnimi razčlenjevalnimi modeli ( tabela 6.9 , drugi stolpec ) .
Rezultata drugih dveh poskusov z osnovnima razčlenjevalnikoma služita kot izhodišče za ovrednotenje algoritma ARISiN ( tabela 6.9 , prvi stolpec ) .
V tabeli je vpisana mera točnosti C. Obe razliki med algoritmom ARISiN in ustreznim osnovnim razčlenjevalnikom sta statistično signifikantni vsaj z verjetnostjo 95 %.
točke ) MSTP 80,34 % 81,06 % 0,72 Malt 73,91 % 75,52 % 1,61 Poglavje 7 Zaključek V zadnjem poglavju so povzeti rezultati raziskav doktorske disertacije ter predstavljeni izvirni prispevki znanosti in možne nadaljnje poti raziskovanja za izboljšanje algoritmov .
7.1 Izsledki raziskav Rezultati poskusov kažejo , da osnovni razčlenjevalniki brez predznanja o jeziku manj uspešno odkrivajo določene strukture v besedilu in da dekompozicija kompleksnih problemov pri razčlenjevanju v manjše podprobleme pozitivno vpliva na povečanje točnosti izgradnje odvisnostnih dreves .
Algoritem ARISiN vpliva samo na določene jezikovne strukture – stavke in naštevanja .
V drevesnici SDT , ki je služila za preizkus algoritma , je 17 % povedi enostavčnih oziroma brezglagolskih , ki hkrati ne vsebujejo naštevanj ; pri teh povedih algoritem ARISiN ne spreminja točnosti razčlenjevanja .
Podrobna analiza iskanja naštevanj in stavkov , skeleta glavnih glagolov in delovanje razčlenjevalnika s pravili v razdelku 6.4 bolj kontrastno prikaže prednosti algoritma ARISiN v primerjavi z osnovnimi razčlenjevalniki .
Točnost razčlenjevalnika MSTP je večja v primerjavi z točnostjo razčlenjevalnika Malt , tudi z nadgradnjo z algoritmom ARISiN razmerje ostane enako .
Prednost razčlenjevalnika Malt je hitrost delovanja , saj je njegova časovna zahtevnost le O ( n ) , pri čemer je n število pojavnic v povedi , v primerjavi s zahtevnostjo O ( n2 ) pri razčlenjevalniku MSTP .
Časovna zahtevnost algoritmov za iskanje stavkov in naštevanj je O ( n ) , kar pomeni , da nadgradnja z algoritmom ARISiN ne zvišuje časovne zahtevnosti v primerjavi z osnovnima 77 78 POGLAVJE 7.
Kot izvirne prispevke doktorske disertacije lahko obravnavamo nove algoritme za iskanje stavkov in naštevanj v slovenskem besedilu .
Najpomembnejši rezultat je povečanje točnosti skladenjskega razčlenjevanja slovenskega jezika .
Algoritem ARISiN iskanje stavkov modelira na nov način v primerjavi z do sedaj poznanimi metodami , ki se osredotočajo predvsem na iskanje stavčnih mej .
Metode delujejo kot nadgradnja mehanizma segmentacije povedi .
• S pomočjo hevrističnih pravil in strojnega učenja je bilo v postopek skladenjskega razčlenjevanja vgrajeno znanje o specifikah slovenskega jezika .
• Algoritmi temeljijo na načrtnem izkoriščanju informacij , ki jih ponuja visoka pregibnost slovenskega jezika .
7.3 Nadaljnje raziskave Dobro zasnovano raziskovalno delo se nikoli ne zaključi , saj novi odgovori odpirajo nova vprašanja .
Pri razčlenjevalniku MSTP bi lahko povečali uteži ustreznim povezavam grafa povedi in tako dopustili algoritmu za iskanje maksimalnega vpetega drevesa , da najde najprimernejšo razčlenitev .
Pri razčlenjevalniku Malt bi informacije o stavčni strukturi lahko vnesli z novimi atributi pri strojni klasifikaciji .
• Poleg iskanja naštevanj predlogov , samostalnikov in pridevnikov bi lahko še razširili nabor besednih vrst pri iskanju skupin glavnih besed .
NADALJNJE RAZISKAVE 79 • V strojnih klasifikatorjih bi lahko uporabili dodatne atribute .
Na primer , pri naštevanjih bi za opis v atributnem modelu lahko uporabili še pojavnice , ki se nahajajo levo od najbolj leve ter desno od najbolj desne glavne besede naštevanja .
• S hevrističnimi pravili bi bilo možno v algoritem vključiti dodatno predznanje o slovenščini .
• Pri razčlenjevalniku s pravili se ponuja še precej možnosti nadgradnje in izboljšav , saj trenutna verzija predpostavlja preveč uniformno medstavčno strukturo znotraj povedi .
PROGRAMSKO OGRODJE ZA PROCESIRANJE BESEDIL V NARAVNEM JEZIKU PROGRAMSKO OGRODJE ZA PROCESIRANJE BESEDIL V NARAVNEM JEZIKU Ključne besede : procesiranje naravnega jezika , procesiranje besedil , tekstovno rudarjenje , programsko ogrodje , programski dodatki , slovenski jezik Povzetek V magistrskem delu predstavimo področje obdelave naravnega jezika in besedilnega rudarjenja ter opišemo opravila obeh področij .
Nadaljujemo z opisom generičnega programskega paketa GATE za procesiranje naravnega jezika , predvsem besedil v angleškem jeziku .
V glavnem delu predstavimo lastno implementacijo razširljivega programskega paketa za procesiranje besedil v slovenskem jeziku , kjer predstavimo interno zgradbo programskega paketa , podamo podroben primer implementacije programskega dodatka in zgradbo dokumenta , ki hrani rezultate procesiranja .
Delovanje programskega paketa predstavimo na konkretnih primerih uporabe .
Programsko ogrodje za procesiranje besedil v naravnem jeziku SOFTWARE FRAMEWORK FOR NATURAL LANGUAGE PROCESSING Programsko ogrodje za procesiranje besedil v naravnem jeziku VIII 1 UVOD Z razmahom informacijskih tehnologij na vseh področjih se je povečala tudi količina podatkov , ki so na razpolago , s tem pa tudi potreba po boljših orodjih za delo s temi podatki .
K temu je bistveno prispevalo tudi medmrežje , ki je danes verjetno eno največjih virov podatkov .
Precejšen del teh podatkov se nahaja v pisni obliki , torej kot besedilo , pisano v naravnem jeziku .
Količina besedil v digitalni obliki dnevno zaradi redne uporabe informacijskih tehnologij , ampak se v digitalno obliko pretvarjajo tudi besedila , ki še niso digitalizirana .
Zaradi velike količine besedil pa se pojavlja težava , da iskanje po besedilu ni več dovolj dobro orodje , hkrati pa se pojavlja potreba , da bi ta besedila bila uporabna še kako drugače in ne samo kot čtivo za ljudi ; npr. za strojno obdelavo .
Digitalna knjižnica Univerze v Mariboru , http://dkum.uni-mb.si/ Programsko ogrodje za procesiranje besedil v naravnem jeziku 2 1.1 RAZISKOVALNO PODROČJE V tem magistrskem delu smo se osredotočili na procesiranje besedil .
Obe področji zajemata vrsto opravil , ki se izvajajo nad besedili v naravnem jeziku ; opravila pa niso nujno omejena na eno samo raziskovalno področje , ampak se med seboj prepletajo .
1.2 CILJI Prvi cilj tega magistrskega dela je spoznati področje procesiranja naravnega jezika , tekstovnega rudarjenja in opravil , ki se pojavljajo v obeh področjih .
Drugi cilj je implementacija programske opreme , ki omogoča implementacijo posameznih opravil predvsem s področja procesiranja naravnega jezika .
Pri implementaciji smo se osredotočili na procesiranje besedil v slovenskem jeziku .
Cilji pri implementaciji so : implementirati opravila za procesiranje besedil v slovenskem jeziku v obliki komponent oz. programskih dodatkov , zagotoviti , da bodo komponente čim bolj prilagodljive , da bo možna pouporaba v različnih procesih procesiranja besedil , Programsko ogrodje za procesiranje besedil v naravnem jeziku 3 omogočiti enostavno izdelavo novih komponent , izdelati programsko ogrodje , ki zagotavlja enostavno upravljanje in uporabo implementiranih komponent , ogrodje mora biti enostavno za uporabo razvijalcem programske opreme , kot tudi razvijalcem v drugih razvojnih okoljih oz. platformah , zagotoviti dokumentacijo , potrebno za uporabo implementiranih komponent kot tudi za implementacijo novih .
Implementacija v obliki programskih dodatkov omogoča , da posameznik podrobno razišče in reši določen problem področja , rešitev pa je nato na voljo drugim kot programski dodatek , katerega delovanje ni potrebno podrobno poznati .
Posamezna opravila so dejansko raziskovalna področja zase , saj zajemajo množico algoritmov , zato bi podrobno opisovanje bilo preobsežno .
1.3 STRUKTURA DELA Delo je sestavljeno iz šestih poglavij .
Po uvodu sledi pregled raziskovalnega področja procesiranja naravnega jezika in tekstovnega rudarjenja .
Sledi opis odprtokodnega , prosto dostopnega generičnega programskega ogrodja GATE ( angl. » General Architecture for Text Engineering « ) , ki je namenjen procesiranju besedil v naravnem jeziku .
Ogrodje sicer Programsko ogrodje za procesiranje besedil v naravnem jeziku 4 omogoča procesiranje besedil v različnih jezikih , primarno pa je namenjeno angleščini .
Poleg ogrodja so opisana nekatera vgrajena orodja in programski dodatki , ki so del osnovnega paketa .
Glavni del magistrskega dela predstavlja opis lastne implementacije razširljivega programskega paketa za procesiranje besedil v slovenskem jeziku .
Opisan je enoten model dokumenta , preko katerega se izvaja komunikacija med programskimi dodatki .
Sledi podroben opis nekaterih programskih dodatkov , ki so bili implementirani v okviru tega dela , ostali dodatki pa so samo našteti .
Tehnologije naravnega jezika Prepoznava Strojno Sinteza Tekstovno govora prevajanje besedil rudarjenje ...
Slika 1 : Predstavitev raziskovalnih področij Cilj v NLP je obdelati nestrukturirano besedilo v naravnem jeziku tako , da je strojno razumljivo , kar je bistveno za uspešno jezikovno interakcijo med človekom in strojem .
Največji problem na tem področju je ravno doseganje » razumljivosti « , zato je NLP kategoriziran kot » AI-poln « problem ( angl. » AI-complete « oz. » AI-hard « , kjer je AI angl. Programsko ogrodje za procesiranje besedil v naravnem jeziku 6 » Artificial Inteligence « ) .
2.1 OPRAVILA NLP je dalje razdeljen na več raziskovalnih področjih , ki uporabljajo množico različnih algoritmov , ki so opisani v nadaljevanju .
Ti algoritmi se ne uporabljajo zgolj samostojno niti izključno v NLP , ampak nekateri pomagajo pri pripravi podatkov za druge algoritme , uporabljajo pa se tudi na drugih področjih ( npr. pri pripravi podatkov za tekstovno rudarjenje ) .
Obstaja več različnih pristopov h krnenju , kot so grobi pristop , rezanje končnice , lematizacija , stohastični pristop in hibridni pristop .
Krnjenje se izvede Programsko ogrodje za procesiranje besedil v naravnem jeziku 7 tako , da se poišče zapis z iskano obliko , nato pa besedo zamenja s korensko obliko istega zapisa .
Slabost takšnega pristopa je , da zahteva ročno vstavljanje dvojic , zahteva precej pomnilniškega prostora , iskanje je lahko precej potratno in deluje samo v primeru , ko iskana dvojica v tabeli obstaja , sicer ne da rezultata .
Prednosti so zelo enostavna implementacija , dobra natančnost ( ko je tabela enkrat napolnjena ) , tabelo lahko dopolnjujejo ljudje brez posebnega znanja o jeziku ( in s tem povečajo natančnost krnjenja ) in sposobnost krnjenja besed , katerih oblika je bistveno drugačna od korena .
Prednost tega pristopa je bistveno manjša prostorska zahtevnost glede na grobi pristop , saj je seznam pravil bistveno krajši kot seznam dvojic , krajši seznam pa je tudi lažje urejati , hkrati pa je iskanje po krajšem seznamu tudi hitrejše .
Pisanje pravil zahteva določeno znanje o konkretnem jeziku , kar je slabost v primerjavi z grobim pristopom .
Algoritmi tega tipa imajo med drugim težave z določanjem korenske oblike v primeru , ko oblika besede ni sestavljena iz korena in pripone , ampak se piše bistveno drugače .
Vsi algoritmi pa niso enako primerni za vsak jezik , npr. odstranjevanje končnic je v angleščini lažje implementirati s pomočjo pravil , saj se besed v angleščini ne sklanja in je Programsko ogrodje za procesiranje besedil v naravnem jeziku 8 takšnih pravil malo v primerjavi z npr. slovenščino .
Lematizacijo se najlažje izvaja s pomočjo morfološkega slovarja , kjer imamo zapisane pare izpeljanka – osnovna oblika , vendar ta pristop ne deluje v vseh primerih oz. v vseh jezikih .
Če se sinonim odkrije , se besedo ali frazo enostavno zamenja z normalizirano obliko .
Včasih je za določanje sinonima potrebno ugotoviti kontekst te besede , kar zahteva predhodno označbo besednih vrst ( opis tega opravila je podan v naslednjem podpoglavju ) .
Označevanje ni enostavno , saj se lahko veliko besed nahaja v različnih vlogah glede na kontekst uporabe .
Označevanje se izvede s pomočjo PoS označevalnikov ( angl. » PoS tagger « ) , pri tem pa obstaja cela vrsta različnih algoritmov z različnimi pristopi .
Problem s tem pristopom je pridobivanje označenega korpusa , ki se izdela ročno s strani strokovnjaka in je zato izredno časovno zahtevna operacija .
Pri nenadziranem učenju se PoS označbe določijo samodejno na podlagi vzorcev uporabe besed ; raziskave pa so pokazale , da so ugotovljeni razredi presenetljivo podobni ročno izdelanim označbam .
Obe skupini algoritmov se dalje delita na : algoritme na podlagi pravil , statistične algoritme , algoritme na osnovi nevronskih mrež in algoritme na osnovi evolucijskih in genetskih pristopov .
Ugotavljanje pomena je lahko izredno težko , saj obstajajo primeri , pri katerih se niti ljudje ne strinjajo glede prave rešitve .
Takšen pristop pa zaenkrat ni uspešen , saj obsežna baza splošnega znanja zaenkrat še ne obstaja oz. ni zapisana v primernem formatu , razen za nekatera zelo ozka področja .
V zadnjem času se kot zbirko znanja poskuša uporabljati javno dostopne zbirke znanja , kot so spletna enciklopedija Wikipedia3 [ 20 ] in pomenska mreža WordNet4 .
Sklici so lahko nanašajo na besede v stavku ( prej omenjeni primer ) ali v drugih stavkih .
« se beseda » so « v prvem stavku sklicuje na opice , v http://www.wikipedia.org/ http://wordnet.princeton.edu/ Primeri z Wikipedije : http://en.wikipedia.org/wiki/Anaphora_resolution Programsko ogrodje za procesiranje besedil v naravnem jeziku 11 drugem pa na banane .
Zadnji primer pogosto nastopi v sporočilih e-pošte , kjer se sklicujemo na nekaj iz prejšnjega sporočila ali na nekaj , kar je bilo dogovorjeno ustno .
Običajna aplikacija so predvsem spletni in namizni iskalniki , ker se z vpisom iskanega vzorca ( iskalnega niza , ki lahko vsebuje tudi operatorje ) izvede iskanje besedil oz. dokumentov , ki iskanemu vzorcu ustrezajo .
Iskalni niz ne identificira posameznih zapisov ( mišljeno kakršnekoli vsebine ) , ampak jih zajema več .
Glavna naloga algoritmov s tega področja je ugotavljanje stopnje ustreznosti posameznih zapisov glede na podan iskalni niz .
Da se lahko ocena čim prej izračuna , je potrebno zapise predhodno predelati v obliko , ki hitro računanje omogoča , s tega stališča pa imamo množico različnih pristopov , ki so na sliki 2 omenjeni in razdeljeni v različne skupine glede na matematično ozadje in lastnosti uporabljenega modela .
V prvi kategoriji so pristopi , ki slonijo na teoriji množic , pri čemer so kot elementi pojavljajo besede in fraze , iskanje pa se izvaja z operacijami nad množicami .
Drugi pristopi slonijo na algebri , kjer se dokumente in poizvedbe predstavi kot vektorje , matrike ali zaporedja ( angl. » tuple « ) .
Omenjene metode lahko v grobem delimo v dve skupini in sicer na nadzirane ( angl. » supervised « ) in nenadzirane ( angl. » unsupervised « ) klasifikatorje .
Obstajajo tudi delno nadzirani Vir : http://en.wikipedia.org/wiki/File:Information-Retrieval-Models.png , izvorni vir : [ 27 ] Programsko ogrodje za procesiranje besedil v naravnem jeziku 14 klasifikatorji .
V večini pristopov se besedila predstavijo kot vektorji , razlika med pristopi pa je v načinu obdelave teh vektorjev z namenom pridobivanja gruč .
Pri tem se uporabljajo pristopi s pomočjo slovarja ali statistični pristopi ; slednji so zaenkrat sicer slabši , vendar ne zahtevajo ročnega dela , kot je to v primeru slovarjev , ki jih morajo napolniti strokovnjaki [ 33 ] .
Primer Programsko ogrodje za procesiranje besedil v naravnem jeziku 15 algoritma za ekstrakcijo lastnih imen je opisan v [ 33 ] , medtem ko je v [ 35 ] naveden primer algoritma za samodejno ekstrakcijo konceptov .
Povzetek naj bi še vedno vseboval ključno vsebino izvornega dokumenta .
Raziskave [ 34 ] kažejo tudi , da ljudje raje berejo povzetke po metodi ekstrakcije kot abstrakcije , saj se pri abstrakciji zaradi sinteze izgubi besedilo » med vrsticami « .
Poleg povzetkov posameznih dokumentov pride v poštev tudi izdelava povzetkov kategorij in gruč dokumentov .
Obstaja možnost ročnega ocenjevanja , kjer človek prebere strojno izdelan povzetek , vendar je to izredno časovno zahtevno , saj mora človek poleg povzetka prebrati še celotno besedilo .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 16 Uspešna implementacija sistema za izdelavo povzetkov bi bila zelo uporabna povsod , kjer imamo dela z večjo količino dokumentov , npr. pri iskalnikih pa tudi v digitalnih knjižnicah .
2.3 PODROČJA UPORABE Procesiranje naravnega jezika in tekstovnega rudarjenja pride prav povsod , kjer imamo opravka z večjimi količinami tekstovnih podatkov .
Z razmahom uporabe informacijske tehnologije na praktično vseh področjih človeškega delovanja se širi tudi uporabnost obeh področij znanosti .
Nekatera področja uporabe tekstovnega rudarjenja in NLP so [ 10 ] : Varnostni sistemi in sistemi nadzora .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 17 Splošna programska oprema .
Vedno več je spletnih iskalnikov , ki omogočajo poizvedbe v naravnem jeziku , znajo popraviti zatipkane poizvedbe ( v stilu " ste morda mislili ...
Izpisi rezultatov se prav tako izboljšujejo , povzetki zadetkov so bolj smiselni in odvisni od same poizvedbe , zadetki so pogosto razvrščeni v skupine glede na iskalni niz in tematiko zadetkov .
Če iskalnik omogoča poizvedbe v naravnem jeziku in je kot poizvedba postavljeno konkretno vprašanje , potem iskalnik poleg zadetkov vrne tudi konkreten odgovor .
Tekstovno rudarjenje se je pričelo uporabljati tudi pri večjih trgovcih in ponudnikih plačljivih storitev za podporo upravljanju odnosov s potrošniki .
Tekstovno rudarjenje se izvaja nad elektronsko pošto , ki jo razdeli na pritožbe in ostalo pošto , pritožbe pa se nato obravnava prioritetno in s tem prepreči morebiten odhod strank .
IBM Computational Linquistics And Text Mining Group , http://www.research.ibm.com/dssgrp/index.html Microsoft Text Mining , Search and Navigation Research , http://research.microsoft.com/en-us/groups/tmsn/ http://www.powerset.com/ http://www.textmining.ugent.be/ Programsko ogrodje za procesiranje besedil v naravnem jeziku 18 Akademske aplikacije .
Tekstovno rudarjenje je postalo zanimivo predvsem za založnike znanstvenih člankov , saj se s tem lahko izboljšajo iskalniki ; sploh za nekatere znanstvene veje , katerih besedila zajemajo zelo specifične informacije .
Daleč najboljši način je primerjava z ročno označenim besedilom , ki ga označi strokovnjak s področja lingvistike ( v primeru NLP ) ali določenega strokovnega področja ( npr. pri klasifikaciji člankov določenega strokovnega področja ) .
Dejstvo je , da je pridobivanje že označenih gradiv naporno in časovno zelo potratno opravilo .
Rezultat primerjave so izračunane vrednosti za natančnost , priklic in F1-vrednost .
Organizatorji teh dogodkov priskrbijo referenčni korpus ( že označen ) , s katerim lahko znanstveniki primerjajo svoje rezultate , referenčni korpus pa je uporaben tudi kot učni korpus pri pristopih s strojnim učenjem .
S stališča implementacije programske opreme , ki bi ta opravila izvajala , je zato smiselno razmišljati v smeri , da se posamezna opravila implementira v obliki ločenih komponent , ki omogočajo enostavno pouporabo in medsebojno neodvisnost .
Sestavljena aplikacija olajša primerjavo in ocenjevanje različnih implementacij opravil z uporabo različnih algoritmov , saj bi npr. v aplikaciji s petimi komponentami menjavali le eno , ostale pa bi ostale enake .
S tem odstranimo stranske učinke , ki bi jih povzročile različne implementacije drugih komponent , katerih zmogljivost nas pri meritvi ne zanima .
V nadaljevanju sta opisani dve implementaciji na podlagi programskih komponent oz. dodatkov .
Paket so razvili na univerzi Sheffield , prva verzija je izšla leta 1996 , leta 2002 pa je bil celoten programski paket napisan na novo .
GATE je integriran z nekaterimi drugimi projekti z različnih področij , npr. Lucene , Google in Yahoo s področja pridobivanja podatkov ( iskalniki ) , Weka in SVMLight s področja strojnega učenja , Sesame in OWLIM s področja dela z ontologijami , nekaterimi razčlenjevalniki ( angl. » parser « ) in drugimi projekti .
Od julija 2007 dalje je na voljo različica 4 , od oktobra 2008 pa beta verzije 5.
V nadaljevanju je opisan predvsem tehnični vidik programskega paketa GATE , uporabljena pa je bila dokumentacija in programska oprema verzije 4.
ogrodje : zagotavlja ponovno uporabnost sistema ter prinaša množico komponent , ki jih uporabniki lahko ponovno uporabijo , razširijo ali prilagodijo svojim potrebam .
Moduli zagotavljajo osnovne operacije za procesiranje besedila , kot so POS označevalnik .
Okolje vsebuje razna Programsko ogrodje za procesiranje besedil v naravnem jeziku 22 orodja , ki pomagajo pri odkrivanju in odpravljanju napak , primerjavi delovanja pri različnih nastavitvah oz. pri uporabi različnih komponent ( z istim namenom ) ter orodja za vizualizacijo rezultatov .
GUI je prikazan na sliki 3.
Slika 3 : GATE GUI Aplikacije , ki jih razvijemo za GATE , se lahko uporabijo tudi izven GUI in sicer preko GATE API-ja ; posamezni deli , kot so procesne komponente , komponente za vizualizacijo , dokumentni model , pa se lahko uporabijo ločeno v drugih aplikacijah .
Prednost takšne razdelitve je v tem , da se lahko komponente teh tipov razvijajo medsebojno neodvisno ; npr. za jezikovni vir skrbi jezikoslovec , za algoritme pa programer .
Komponente se lahko naložijo z lokalnega ali oddaljenega računalnika ( preko HTTP ) in jih je možno razširiti brez poseganja v sam GATE .
Obnašanje procesnih virov nadziramo s pomočjo nastavitev ; bodisi direktno ali preko zunanjih datotek , ki jih navedemo v nastavitvah .
Pri razvijanju aplikacij v grafičnem vmesniku GATE se uporabnik odloči , katere komponente naj v aplikaciji nastopajo , v kakšnem vrstnem redu , s kakšnimi nastavitvami in na katerih podatkih ( dokumentu ali korpusu ) .
Mnogi algoritmi s področja procesiranja naravnih jezikov potrebujejo za delovanje že označen korpus , npr. za učenje .
Na sliki 4 lahko vidimo uporabniški vmesnik ogrodja GATE , ki prikazuje trenutno vsebino dokumenta korpusa .
Dokument je bil obdelan s procesnimi viri ANNIE , eden izmed procesnih virov pa je označil mesta London , New York in Paris .
Če procesni vir nekega mesta ne bi poznal , bi mesto lahko označili ročno .
V besedilu bi Programsko ogrodje za procesiranje besedil v naravnem jeziku 24 izbrali zapis mesta in s klikom na desni miškin gumb priklicali dodaten uporabniški vmesnik , ki omogoča izbiro oznake za izbrano besedilo .
Ker so ti procesni viri splošni , jih lahko uporabimo posamezno ali skupaj z drugimi procesnimi Programsko ogrodje za procesiranje besedil v naravnem jeziku 25 viri ( ki niso del tega paketa ) in s tem tvorimo nove aplikacije .
V aplikacijah procesiranja naravnega jezika je to prvi korak , je domensko in aplikacijsko neodvisen , zato se ta procesorski vir vedno pojavi v aplikacijah tega tipa .
Ta procesni vir ne zahteva predhodno izvedbo virov » tokenizer « niti » sentence splitter « , je pa priporočljivo , saj bistveno izboljša rezultate PoS označevalnika .
JAPE omogoča vklop oz. izklop prioritete pravil .
Entiteti poveže , če sta obe istega tipa ( v našem primeru tipa " organizacija " ) oz. Če je ena označena kot ne-kategorizirano ime .
Ker dodatek kategorizira neznane imenovane entitete , se s tem izboljša detekcija imenovanih entitet .
Dodatek na vhodu med drugim prejme tabelo imenovanih entitet z aliasi , s katero se izvede povezovanje imenovanih entitet z različnimi zapisi , kot to velja za naš primer s kratico FERI .
Dodatek zahteva izvedbo vseh prej omenjenih dodatkov , interno pa je zgrajen iz več delov , katerih opis delovanja je precej obsežen , zato tukaj niso opisani .
Našteti procesni viri so navedeni tudi na zaslonskem posnetku GATE grafičnega uporabniškega vmesnika z naloženimi viri paketa ANNIE ( stran 22 , slika 3 ) .
3.2 PODATKI IN PODATKOVNI MODEL GATE omogoča uporabo vrsto različnih formatov , npr. XML , RTF , HTML , SGML , e-pošto in golo besedilo .
Če katerega od teh odpremo v GATE , se vsebina analizira in pretvori v poenoten format z zaznamki , ki temelji na modificirani verziji formata TIPSTER [ 7 ] , ki je s tem postal združljiv s formatom ATLAS [ 7 ] in ki uporablja mehanizem , v angl. imenovan z » stand-off markup « .
Na sliki 5 je prikazana delna vsebina datoteke XML , ki je rezultat procesiranja stavka » Just a sample .
Element » GateDocumentFeatures « vsebuje osnovne podatke o izvorni datoteki , kot so polno ime datoteke in tip ( angl. » MIME type « ) .
Sledi element » TextWithNodes « , ki vsebuje omenjen stavek , dodatno opremljen z elementi » Node « z lastnimi identifikatorji .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 27 Slika 5 : Primer v GATE obdelanega dokumenta Programsko ogrodje za procesiranje besedil v naravnem jeziku 28 Nadaljuje se z več elementi » AnnotationSet « , kjer vsak vsebuje elemente » Annotation « .
Ogrodje GATE prinaša podporo za trajno hrambo jezikovnih virov in trenutno omogoča : uporabo relacijske podatkovne baze ; npr. Oracle , Java serializacijo in lasten format XML .
3.3 VGRAJENA ORODJA GATE vsebuje dve orodji , ki sta namenjeni testiranju rezultatov in merjenju učinkovitosti .
Primerjavo je smiselno izvesti med GATE označenim dokumentom in ročno označenim dokumentom ali med dvema GATE označenima dokumentoma , ki sta bila označena z različnimi procesnimi viri ali pri različnih nastavitvah .
V obeh primerih kot rezultat dobimo poročilo z obema dokumentoma eden poleg drugega , kjer so z barvami označene razlike med označbami obeh dokumentov .
Prvi dokument je obravnavan kot referenčni ( 100% pravilen ) in je izbran v seznamu » Key « .
Ta dokument je dejansko kopija prvega , le da je bil drugemu s pomočjo GATE GUI označba za mesto » Paris « ročno odstranjena .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 29 Slika 6 : AnnotationDiff 3.3.2 Merjenje zmogljivosti Deluje podobno kot AnnotationDiff , le da obdela celoten korpus in ne samo en dokument , poleg tega hrani meritve v zgodovini .
Orodje potrebuje čisti korpus ( brez označb ) in označen referenčni korpus .
V vseh treh primerih dobimo poročilo za vsak dokument korpusa kot tudi za celotni korpus v primerjavi z referenčnim korpusom .
Kot primer so v nadaljevanju navedene tri aplikacije , realizirane s pomočjo GATE [ 7 ] .
Drug cilj je identifikacija parametrov , ki so potrebni pri implementaciji dobrih sistemov za prepoznavanje imen v različnih domenah , žanrih in medijih .
Npr. manj formalni zapisi ne sledijo čisto pravilom pisanja imen npr. z velikimi začetnicami , s pikami in podobno , kar povzroča težavo za generične sisteme za prepoznavanje imenovanih entitet .
Sistem je dosegel 93% natančnost in 95% priklic na besedilih različnih tipov [ 7 ] .
Semantično označevanje je doseglo 91% natančnost in 76% priklic , kar je bilo bistveno boljše v primerjavi z drugimi sistemi v tistem obdobju .
Dodatki naredijo celoten programski paket enostavno razširljiv , združevanje dodatkov v procese pa omogoča prilagodljivost programskega paketa za različne naloge .
TextProc deluje na podoben način kot človek , ki mora označiti dele besedila .
TextProc deluje podobno , le da se namesto črte ustvari " značka " , ki " kaže " na začetni in končni znak v besedilu , ki je " podčrtan " , nato pa v objekt zapiše oznako ( poljuben niz ) , ki velja za to značko .
Algoritem označevanja se zapiše v TextProc dodatke , vsak dodatek pa lahko označuje različne nize , pri tem pa si lahko pomaga z značkami drugih dodatkov ; npr. en dodatek bi označil vse besede , drugi označi stavke in povedi , spet tretji označi , da so nekatere že označene besede dejansko imena oz. priimki oseb , medtem ko četrti dodatek označi , da neka skupina povedi spada v isti odstavek .
Za dodatke ni nujno , da sploh kaj označujejo , ampak lahko samo uporabijo že obstoječe značke za npr. izračun statistike oz. producirajo Programsko ogrodje za procesiranje besedil v naravnem jeziku 32 kakšen drug rezultat , ki se npr. zapiše v ločeno datoteko .
Celotni programski paket je implementiran v ogrodju Microsoft .
Programski paket TextProc je implementiran zaradi rastoče potrebe po naprednem tekstovnem procesiranju v Laboratoriju za heterogene računalniške sisteme .
Za naše potrebe bi verjetno lahko uporabili kar GATE , vendar je s tem nekaj težav : GATE oz. njegovi dodatki so v prvi vrsti implementirani predvsem za angleški jezik , to magistrsko delo pa je osredotočeno na slovenski jezik .
Težava so predvsem slovarji in mnogi algoritmi , ki so v slovenščini drugačni ; npr. v angleščini skoraj ni pregibanja besed .
NET tehnologiji , je za lažjo uporabo in integracijo z drugimi rešitvami smiselno uporabiti tehnologijo , ki jo že uporabljamo in imamo z njo tudi največ izkušenj .
Upravlja z dodatki in dokumenti korpusa ter skrbi za izvajanje TextProc procesov ( več o procesu kasneje , v nadaljevanju pa » TextProc proces « imenujemo kar » proces « ) .
TextProc dodatki : predstavlja implementacijo posameznega dodatka .
TextProc določa več tipov dodatkov , ki so opisani kasneje v tem poglavju .
TextProcWS : spletna storitev ( angl. " web service " ) , ki omogoča uporabo TextProc programskega paketa v drugih programskih rešitvah brez poznavanja podrobnosti o TextProc .
TextProcDemo : testna spletna stran , ki je namenjena testnemu izvajanju procesov oz. demonstraciji funkcionalnosti programskega paketa TextProc .
Vhodni parametri so enaki kot pri spletni storitvi , le da je tukaj dodana možnost oblikovanja izhoda , če je privzeti izhodni format XML .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 34 Druge Druge aplikacije aplikacije TextProcWS TextProc dodatek TextProc dodatek ITextProc TextProc dodatek Slika 7 : Vizualna predstavitev TextProc programskega paketa Slika 8 : Glavno okno TextProcGUI namizne aplikacije Programsko ogrodje za procesiranje besedil v naravnem jeziku 35 Na sliki 8 lahko vidimo glavno okno okenske aplikacije TextProcGUI .
V preostalem ( večinskem ) delu okna se izmenjujejo različni okvirji , odvisno od izbire v levem delu oz. v meniju aplikacije .
Slednji okvir vsebuje dva kontrolnika za prikaz napredka ( angl. » progress bar « ) , ki prikazujeta stanje procesa med izvajanjem .
Nekateri dodatki med izvajanjem izpisujejo še dodatne podatke o poteku izvajanja , kar se izpiše nad drugim kontrolnikom napredka .
Ta dodatek se uporablja kot del uporabniškega vmesnika TextProcGUI , kjer lahko uporabnik izbere enega izmed dodatkov tega tipa , nato pa z nekaj vhodnimi podatki v korpus vstavi celo množico dokumentov ; npr. dodatek » FilePopulator « na vhodu prejme pot do mape in tip datoteke , nakar v korpus vstavi vse datoteke iz te mape s podano končnico .
Dokument nato vstavi v korpus .
Vhodni parametri v dodatek tega tipa so npr. ime datoteke ali pa niz za povezavo z bazo .
Dodatek tega tipa ima običajno enako imenovan dodatek tipa InputPopulator , saj InputPopulator izdeluje dokumente s točno določenim InputConnector-jem .
V času pisanja ni bil implementiran noben dodatek tega tipa .
Tip je identičen tipu Processor , le da je dodatke tega tipa mogoče izbrati v uporabniških vmesnikih za ročno shranjevanje dokumentov po izvedbi procesa .
Tukaj gre dejansko za posebne objekte , ki med drugim zajemajo tudi podatke o dejanskih dokumentih ; npr. datoteke z diska , zapise iz podatkovne baze ali kaj drugega .
Za polnjenje korpusa se uporabi dodatek tipa » InputPopulator « , ki ustvari TextProc dokumente ; eni izmed lastnosti dokumenta pa nastavi pravo instanco dodatka tipa » InputConnector « , ki priskrbi vsebino dokumenta .
dodatki : v proces dodamo dodatke , ki se morajo pojavljati v smiselnem vrstnem redu .
V proces lahko dodamo samo dodatke tipa » Processor « in » OutputConnector « .
skripta : množica preprostih ukazov , s katerimi lahko spremenimo nastavitve dodatkov ali procesa in prožimo nekatere akcije , kot so npr. ponastavitev ali ponoven zagon procesa .
V okvirju » Process « ( slika 9 ) kliknemo z desnim miškinim gumbom , kar odpre kontekstno odvisen menu .
Z levim miškinim gumbom lahko kliknemo na že vstavljen proces , kar odpre generično okno z nastavitvami tega dodatka .
Ostali tipi dodatkov sodelujejo v času priprave korpusa in jih ni mogoče nadzirati neposredno .
Dodatki v procesu med seboj ne komunicirajo direktno , ampak preko TextProc dokumentov , ki so navedeni v korpusu .
Zgradba TextProc dokumenta je naslednja : vhodni konektor : dodatek tipa » InputConnector « , ki se poveže z virom podatkov in pridobi golo besedilo , npr. prebere vsebino datoteke .
metapodatki : zbirka poljubnih podatkov o izvornem besedilu .
Na zahtevo se lahko tukaj zapišejo ime , verzija in opis dodatkov , ki so ta dokument obdelali .
golo besedilo : besedilo , kot je bilo podano na vhodu oz. kot ga je vrnil vhodni konektor .
zbirke značk : dokument lahko vsebuje poljubno število zbirk značk , vsaka zbirka zajema poljubno število značk .
Značke so rezultat izvedbe dodatkov .
Na sliki 10 je zapis XML TextProc dokumenta , kot je bil zapisan po izvedbi procesa .
Slika 10 : Primer TextProc dokumenta v obliki XML Programsko ogrodje za procesiranje besedil v naravnem jeziku 38 Na sliki 11 vidimo primer zapisa XML istega dokumenta z razširjenim elementom » Meta « .
Na sliki 12 je prikazana vsebina seznama značke » Stavki « , ki vsebuje samo en element » Tag « , ker je v konkretnem primeru pač samo en stavek .
Slika 11 : Seznam metapodatkov Slika 12 : Zbirka značk z eno značko Programsko ogrodje za procesiranje besedil v naravnem jeziku 39 Seznami značk lahko vsebujejo poljubno število značk ( elementov " Tag " ) .
Posamezna značka se lahko sklicuje na druge značke v istem ali drugih seznamih , npr. značka na sliki 12 je značka stavka , ki se sklicuje na značke besed tega stavka ( seznam " CTags " ) in na značko povedi , v kateri je stavek ( seznam " PTags " ) .
Značka , tj. razred » Tag « je predstavljena z naslednjim programskim vmesnikom : public interface ITag { int ID { get ; } int Start { get ; set ; } int Stop { get ; set ; } int Length { get ; } int Line { get ; set ; } ArrayList CTags { get ; } ArrayList PTags { get ; } Document Document { get ; set ; } / / ni v vmesniku private ObjectCollection _ Properties ; Pomen atributov je naslednji : ID : identifikator značke .
Vsaka značka ima svoj ID , ki je unikaten na nivoju posameznega dokumenta .
Start : pozicija prvega znaka v besedilu , kamor kaže značka .
Stop : pozicija končnega znaka v besedilu , kamor kaže značka .
Če značka kaže na en sam znak , potem imata Start in Stop enako vrednost .
Lastnost se izračuna iz vrednosti lastnosti Start in Stop .
Line : številka vrstice s prvim znakom te značke .
Značka lahko kaže na besedilo , ki zajema več vrstic , zato je tukaj navedena številka vrstice s prvim znakom te značke .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 40 Properties : seznam lastnosti , ki ni naveden v programskem vmesniku , niti ni javno dostopen .
Ta seznam vsebuje objekte tipa StringCollection , tako da lahko posamezna lastnost nosi več različnih vrednosti .
Na sliki 13 vidimo še en primer zapisa značke v obliki XML , ki kaže na prvo besedo stavka " To je primer .
Slika 13 : Primer značke v zapisu XML Programsko ogrodje za procesiranje besedil v naravnem jeziku 41 Značka se nahaja v seznamu značk " Tokens " ( / Doc / TagSets / Tokens ) , gledamo pa element " Tag " z atributom ID in vrednostjo 1.
Opazimo lahko , da ima značka nekatere lastnosti , zapisane kot atribute elementa .
V elementu » Tag « opazimo element » Value « , ki ni obvezen in je prisoten le , če je izpis zahtevan preko nastavitev dodatka » Tokenizer « ( opisan v poglavju 4.4.4 na strani 59 ) .
Omenili smo , da lahko vsaki lastnosti dodamo več vrednosti , zato imata oba elementa podelemente tipa » Add « , element » TreeTaggerTag « pa ima dva elementa .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 42 Slika 14 : Povezave med značkami Programsko ogrodje za procesiranje besedil v naravnem jeziku 43 4.2 PRIMER IZDELAVE DODATKA V nadaljevanju je kot primer navedena izvorna koda dodatka z imenom » Odstavki « .
Implementacija vsakega dodatka je razdeljena na tri dele : priprava projekta in implementacija osnovne kode dodatka , implementacija celotne funkcionalnosti , priprava dokumentacije dodatka .
Dodatek uporablja značke , ki jih ustvarijo dodatki » Tokenizer « in » Stavki « , s pomočjo katerih odkrije odstavke .
4.2.1 Priprava projekta in implementacija osnove dodatka Prvi korak je priprava projekta .
Programski paket TextProc je izdelan v MS Visual Studio 2003 v C # 1.0 , zato dodatek implementiramo v tem okolju .
Naslednji korak je , da v projekt dodamo referenco na zbirko ITextProc.dll , ki vsebuje programske vmesnike , potrebne za implementacijo dodatka .
TextProc namreč dodatke naloži dinamično , pri tem pa se predvideva , da je ime glavnega razreda enako imenu zbirke DLL .
V zbirki lahko sicer uporabimo tudi druge razrede .
< / summary > 14 : public TextProc.ITextProc.IProcEnv ProcEnv { 15 : get { return _ ProcEnv ; } Programsko ogrodje za procesiranje besedil v naravnem jeziku 44 16 : set { _ ProcEnv = value ; } 17 : } 18 : 19 : / / / < summary > Tip TextProc dodatka , samo za branje .
< / param > 31 : public void Run ( TextProc.ITextProc.Document doc ) { 32 : } 33 : 34 : / / / < summary > Konec procesa , shranim skupne rezultate .
Sledi deklaracija razreda dodatka z imenom » Odstavki « , ki implementira programski vmesnik tipa dodatka , ki ga implementiramo ( v našem primeru » IProcessor « ) .
Ta lastnost predstavlja procesno okolje dodatka , preko katerega lahko dodatek dostopa do korpusa oz. se uporabi za sporočanje internega statusa .
Lastnost » PluginType « je namenjena samo branju in nosi tip dodatka .
) .
V tej metodi se implementira glavna funkcionalnost dodatka .
Metoda » Finish « se zažene , ko so obdelani vsi dokumenti in je namenjena zaključnemu delu procesiranja , npr. zapiranje datotek , izračun skupne statistike in podobno .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 45 Pod pripravo dodatka spada še sprememba datoteke » AssemblyInfo.cs « , ki nosi metapodatke zbirke tega dodatka .
Oboje se prebere ob nalaganju dodatka in uporabi na več mestih ; npr. pri prikazu seznama dodatkov v TextProcGUI oz. je pri izvedbi procesa mogoče zahtevati izpis verzij uporabljenih dodatkov med metapodatke TextProc dokumenta .
4.2.2 Implementacija dodatka V nadaljevanju je prikazana preostala izvorna koda našega dodatka .
Delovanje algoritma je sledeče : naš dodatek ustvari značko za odstavek , ki ji v seznam potomcev dodaja reference na značke povedi .
Če se med tema dvema značkama pojavita vsaj dve znački za novo vrstico ( znak » \ n « ) , ustvari novo značko za odstavek .
Ta za posamezen dokument zajema : ime dokumenta , število odstavkov , najmanjše število povedi v odstavku , povprečno število povedi v odstavku in največje število povedi v odstavku .
Parameter ni obvezen ; če pot ni navedena , statistike ne bomo računali .
Vhodni Programsko ogrodje za procesiranje besedil v naravnem jeziku 46 parameter bo v obliki lastnosti , ki shranjuje v razredno spremenljivko ; potrebovali bomo še privatne spremenljivke za interno uporabo .
Razredu bomo torej dodali razredne spremenljivke : 1 : / / vhodni parametri dodatka 2 : private string _ StatsXmlFileName = ""; / / ime dateke za statistko 3 : 4 : / / interni podatki , za statistiko korpusa 5 : private bool _ IsReady = false ; / / ali je dodatek pripravljen 6 : private XmlTextWriter _ Xml = null ; / / XML datoteka V regijo » Lastnosti « dodamo novo lastnost , ki bo vhodni parameter našega dodatka .
Dve lastnosti sta že dodani v osnovi ( » ProcEnv « in » PluginType « ) , dodatne lastnosti pa TextProcCore samodejno obravnava kot vhodne parametre in jih je možno nastavljati npr. v TextProcGUI oz. se zapišejo v datoteko XML procesa kot nastavitve dodatka .
_ IsReady ) Prepare ( ) ; / / prvi klic , pripravimo podatke 03 : 04 : / / dobimo sezname vseh povedi , stavkov in besed 05 : ArrayList povedi = doc.GetTagSetCollection ( " Povedi " ) ; 06 : ArrayList stavki = doc.GetTagSetCollection ( " Stavki " ) ; 07 : ArrayList tokeni = doc.GetTagSetCollection ( " Tokens " ) ; 08 : 09 : / / pripravimo ostale podatke 10 : ArrayList odstavki = new ArrayList ( ) ; / / seznam odstavkov 11 : ITag tag = null ; / / delovna znacka 12 : ITag odstavek = null ; / / znacka - odstavek 13 : int t1 , t2 ; / / indeksa besed 14 : int lsi = 0 ; / / indeks zadnje iskane besede 15 : int stVrstic = 0 ; / / števec vrstic 16 : string wordClass = ""; / / trenutni tip besede 17 : 18 : if ( povedi.Count == 0 ) return ; / / ni povedi / odstavkov , kar koncamo 19 : if ( povedi.Count > 0 ) { 20 : / / zagotovo vsaj en odstavek , naredimo novo znacko za odstavek Programsko ogrodje za procesiranje besedil v naravnem jeziku 47 21 : / / dokument skrbi za izdelavo znack ( skrbi za ID-je znack ) 22 : odstavek = doc.NewTag ( ) ; 23 : 24 : / / poved dodamo v odstavek kot potomca ; povedi se ta odstavek doda 25 : / / kot oce samodejno 26 : odstavek.AddChildTag ( ( ITag ) povedi [ 0 ] ) ; 27 : } 28 : 29 : / / obdelam ostale povedi 30 : for ( int i = 1 ; i < povedi.Count ; i + + ) { 31 : tag = ( ITag ) povedi [ i ] ; 32 : 33 : / / dobim zadnjo besedo prejšnje in prvo besedo trenutne povedi 34 : t1 = VrniZadnjiToken ( doc , povedi , i-1 , lsi ) ; 35 : t2 = VrniPrviToken ( doc , povedi , i , lsi ) ; 36 : if ( t1 > t2 ) throw new Exception ( " Napacen vrstni red besed !
" ) ; 37 : 38 : / / kasneje se išce indeks znack v seznamu besed , s tem poskrbimo , 39 : / / da se ne išce v delu seznama , kjer zagotovo ni 40 : lsi = t2 ; 41 : 42 : / / ugotovim število vrstic med tema besedama ( med povedima ) 43 : stVrstic = 0 ; 44 : for ( int j = t1+1 ; j < t2 ; j + + ) { 45 : tag = ( ITag ) tokeni [ j ] ; 46 : if ( tag.GetString ( ) .
52 : } 53 : } 54 : 55 : / / naredim nov odstavek , v kolikor je potrebno 56 : if ( stVrstic > 1 && odstavek.CTags.Count > 0 ) { 57 : odstavek.SetStartStopLineFromTags ( ) ; / / zakljucim odstavek 58 : odstavki.Add ( odstavek ) ; / / dodam odstavek na seznam odstavkov 59 : odstavek = doc.NewTag ( ) ; / / naredim nov odstavek 60 : } 61 : odstavek.AddChildTag ( ( ITag ) povedi [ i ] ) ; / / dodam poved v odstavek 62 : } 63 : / / koncamo ; ce trenutni odstavek ni zakljucen , ga zakljucimo sedaj 64 : if ( odstavek.CTags.Count > 0 ) { 65 : odstavek.SetStartStopLineFromTags ( ) ; 66 : odstavki.Add ( odstavek ) ; 67 : } 68 : / / dodam odstavke v dokument 69 : doc.AddTagSetCollection ( " Odstavki " , odstavki ) ; 70 : / / obdelam statistiko 71 : ZapisiStatistiko ( doc.GetName ( ) , odstavki ) ; 72 : } Programsko ogrodje za procesiranje besedil v naravnem jeziku 48 Metoda » Finish « se kliče , ko je celoten korpus obdelan .
null ) { 37 : int minPovedi = int.MaxValue ; 38 : int sumPovedi = 0 ; 39 : int maxPovedi = 0 ; 40 : int stOdstavkov = odstavki.Count ; Programsko ogrodje za procesiranje besedil v naravnem jeziku 49 41 : float avgPovedi = 0 ; 42 : ITag t = null ; 43 : 44 : / / izracunam statistiko 45 : for ( int i = 0 ; i < odstavki.Count ; i + + ) { 46 : t = ( ITag ) odstavki [ i ] ; 47 : if ( t.CTags.Count < minPovedi ) minPovedi = t.CTags.Count ; 48 : if ( t.CTags.Count > maxPovedi ) maxPovedi = t.CTags.Count ; 49 : sumPovedi + = t.CTags.Count ; 50 : } 51 : avgPovedi = sumPovedi * 1.0f / stOdstavkov ; 52 : 53 : / / zapišem v XML 54 : _ Xml.WriteStartElement ( " Doc " ) ; 55 : _ Xml.WriteAttributeString ( " Name " , docIme ) ; 56 : _ Xml.WriteAttributeString ( " StOdstavkov " , stOdstavkov.ToString ( ) ) ; 57 : _ Xml.WriteAttributeString ( " MinStPovedi " , minPovedi.ToString ( ) ) ; 58 : _ Xml.WriteAttributeString ( " AvgStPovedi " , avgPovedi.ToString ( ) ) ; 59 : _ Xml.WriteAttributeString ( " MaxStPovedi " , maxPovedi.ToString ( ) ) ; 60 : _ Xml.WriteEndElement ( ) ; 61 : } 62 : } 63 : 64 : # endregion V okviru magistrskega dela je bilo izdelanih več kot 40 dodatkov , s tem pa so se pokazale določene dobre prakse pri implementaciji .
Iz tega naslova so v nadaljevanju navedeni nasveti , ki se jih je priporočljivo držati pri izdelavi dodatkov : Če implementacija dodatka zahteva kakršnokoli pripravo podatkov , potem se naj to izvede ob prvem zagonu metode » Run « .
Če je dodatek računsko zahteven in se zato izvaja dlje časa , potem je dobro , da takšen dodatek procesno okolje redno obvešča o internem statusu .
Če se proces Programsko ogrodje za procesiranje besedil v naravnem jeziku 50 izvaja v TextProcGUI , potem se ta status izpiše in je uporabnik seznanjen z dogajanjem .
V imenskem prostoru TextProc.Tools komponente ITextProc je implementirana množica funkcionalnosti , ki so se izkazale za splošno uporabne ; npr. za branje in pisanje tekstovnih datotek , XSL transformacija , generiranje imen datotek in podobno .
Kot je že omenjeno , lahko imajo dodatki kot lastnosti samo primitivne tipe .
Če dodatek potrebuje lastnosti kompleksnih tipov ali pa veliko število lastnosti , potem naj se take nastavitve berejo iz datoteke , dodatek pa naj ima kot lastnost lokacijo te datoteke .
4.2.3 Dokumentacija dodatka Ker ima vsak dodatek svoje nastavitve je potrebno poskrbeti , da so te nastavitve tudi dobro opisane .
V času pisanja magistrskega dela je vsa dokumentacija TextProc programskega paketa zapisana v datoteki CHM .
To datoteko je kasneje možno dodati v datoteko CHM .
Če ima dodatek dokumentacijo zapisano v tem formatu , se mora datoteka imenovati enako kot dodatek , le da ima končnico » .
html « , datoteka pa se mora nahajati v mapi , kjer se nahajajo zbirke dodatkov ( datoteke tipa DLL ) .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 51 TXT : datoteka z golim besedilom .
Za vsako lastnost navedemo nabor dovoljenih vrednosti in njihov vpliv na delovanje dodatka .
Na sliki 15 je prikazana aplikacija TextProcGUI , kjer imamo odprte nastavitve dodatka » Hasher « .
Slika 15 : TextProcGUI po kliku na gumb " Help " Programsko ogrodje za procesiranje besedil v naravnem jeziku 52 4.3 PROGRAMSKA UPORABA PAKETA TEXTPROC Poleg uporabe TextProcGUI okenske aplikacije je bil programski paket TextProc že v osnovi načrtovan tako , da ga je mogoče uporabiti tudi programsko v drugih aplikacijah , torej za integracijo z drugimi programskimi rešitvami .
Takšna uporaba zahteva namestitev TextProc programskega paketa na razvojni računalnik , primer uporabe pa je podrobneje opisan v naslednjem podpoglavju .
Ta funkcionalnost je vključena v programski knjižnici DLL z imenom TextProcCore , ki je ena od komponent programskega paketa TextProc ( slika 7 , stran 34 ) .
Ta primer uporabe ne zahteva namestitve programskega paketa TextProc na lokalni računalnik , saj je TextProc dosegljiv preko spleta .
Slabost je lahko počasnost zaradi mrežne komunikacije , ki pa je lahko zanemarljiva , če gre za kompleksne in počasne procese obdelave besedil .
Spletna storitev je bila implementirana kot TextProcWS , ki je ena od komponent programskega paketa TextProc .
V času pisanja magistrskega dela takšna funkcionalnost ni bila potrebna , zato ta opcija ni bila implementirana .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 53 4.3.1 Uporaba TextProcCore Predpostavimo , da delamo v okolju MS Visual Studio 2003 ( višje verzije niso bile preverjene ) in želimo v naši aplikaciji programsko uporabiti funkcionalnosti programskega paketa TextProc .
" ; 04 : 05 : / / ustvarim instanco TextProc procesorja 06 : TextProc.Core.Folders f = new TextProc.Core.Folders ( ) ; 07 : TextProc.Core.Processor p = new TextProc.Core.Processor ( f ) ; 08 : 09 : / / naložim TextProc proces iz datoteke 10 : p.LoadFromXmlFile ( xmlFileName ) ; 11 : 12 : / / pripravim dokument 13 : TextProc.ITextProc.Document d = new TextProc.ITextProc.Document ( ) ; 14 : d.PlainText = text ; 15 : 16 : / / dokument dodam v korpus 17 : p.Corpus.AddDocument ( d ) ; 18 : 19 : / / poženem TextProc process 20 : p.Run ( ) ; 21 : 22 : / / dobim rezultat ( odvisno od nastavitev , obicajno XML ) 23 : text = d.PlainText ; Programsko ogrodje za procesiranje besedil v naravnem jeziku 54 To je vsa programska koda , ki je potrebna za izvedbo TextProc procesa .
Rezultat je odvisen od nastavitev procesa ; lahko je karkoli v obliki niza ( tipa string ) .
Navedena programska koda je dejansko delna kopija iz implementacije spletne storitve , le da se pri spletni storitvi vsebina in datoteka procesa določita na podlagi vhodnih parametrov .
Uporaba programskega paketa pa je bila preverjena tudi v MS Visual Studio 2008 z MS .
V času pisanja magistrskega dela ni bila preverjena možnost implementacije dodatka v novejšem ogrodju .
Primer izvorne kode : 01 : / / pripravimo dokument 02 : TextProc.ITextProc.Document d = new Document ( ) ; 03 : d.PlainText = txtBesedilo.Text ; 04 : 05 : / / pripravimo dodatek in poženemo 06 : TextProc.Plugin.SimplifyText p = new TextProc.Plugin.SimplifyText ( ) ; 07 : p.RemoveHtmlTags = true ; 08 : p.Run ( d ) ; 09 : 10 : / / izpišemo rezultat 11 : txtBesedilo.Text = d.PlainText ; Dodatek se je izvedel brez težav .
Nekateri dodatki rezultate vrnejo šele po klicu javne metode » Finish « , kar je potrebno upoštevati pri takšni uporabi .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 55 Čeprav je takšna uporaba mogoča , pa ni nujno smiselna .
Rezultati so shranjeni v dokumentu , ki ga dodatek prejme kot parameter ob klicu metode » Run « .
Če je programsko opremo ( npr. program ) mogoče zagnati preko ukazne vrstice , potem jo je zagotovo mogoče uporabiti tudi v dodatkih TextProc .
Naloga dodatka je , da pripravi podatke za zunanjo aplikacijo in jo zažene .
V programskem jeziku Java bi torej implementirali preprost program za izvajanje iz ukazne vrstice , ki bi poganjal GATE aplikacije , s tem pa bi bila mogoča integracija s TextProc .
Ta možnost v času pisanja magistrskega dela ni bila preverjena .
Pri implementaciji niso bili izbrani najboljši možni algoritmi za Programsko ogrodje za procesiranje besedil v naravnem jeziku 56 določeno nalogo v NLP , ampak dovolj dobri za prikaz koncepta implementacije teh algoritmov v obliki dodatkov .
FilePopulator skrbi za polnjenje korpusa s TextProc dokumenti , katerih vsebina izvira iz datotek na disku .
Korpus napolni na podlagi treh vhodnih podatkov : polne poti mape z datotekami ( npr. » c : \ datoteke \ « ) , filter imena datotek , privzeta vrednost je » * .
Privzeta vrednost je 0 , kar napolni korpus z vsemi datotekami , ki ustrezajo prvima dvema parametroma .
FilePopulator nikoli ne nastopa v TextProc procesu , ampak se uporablja v okviru aplikacije TextProcGUI , kot je prikazano na sliki 16.
Slika 16 : TextProcGUI s pogledom na korpus Programsko ogrodje za procesiranje besedil v naravnem jeziku 57 Opazimo lahko , da je v okvirju » Process « na levo izbrana opcija » Corpus « , zato je na desni prikazan isto imenovani okvir s seznamom dokumentov , ki je na sliki prazen .
Pod seznamom se nahaja padajoč seznam dodatkov tipa InputPopulator .
Iz opisa TextProc dokumenta se lahko spomnimo , da ima ta med drugimi lastnost za vhodni konektor , FilePopulator pa to lastnost napolni z objektom tipa FileConnector .
Kot vhodni podatek prejme polno ime datoteke , ki ga dobi od FilePopulator-ja .
V nasprotju s FilePopulator-jem pa FileConnector nastopa kot del TextProc procesa in se serializira v datoteko XML pri shranjevanju procesa na disk .
Vsaka vrnjena vrstica predstavlja en TextProc dokument , vrnjeni identifikatorji pa morajo zadostovati za izbiro vsebine , ki se zapiše kot golo besedilo dokumenta .
Primer za spletni Portal CHP ( programska oprema , na kateri tečejo spletni portali npr. FERI , Inštituta za računalništvo itd. ) , ki vrne vse zapise v slovenskem jeziku : SELECT mlngPodrocjeID , mlngJezikID FROM Podrocje _ Jezik WHERE mlngJezikID = 1060 parameter z imenom » SingleQuery « in predstavlja niz poizvedbe SQL , ki vrne stolpce z besedilom , iz katerih se sestavi končno golo besedilo TextProc dokumenta .
SQL je zapisan kot predloga , kjer se številke z zavitimi oklepaji Programsko ogrodje za procesiranje besedil v naravnem jeziku 58 zamenjajo z vrednostjo iz stolpca s podanim indeksom .
Primer za Portal CHP je naslednji : SELECT mstrNaziv , mstrOpis , mstrVsebina FROM Podrocje _ Jezik WHERE mlngPodrocjeID = { 0 } AND mlngJezikID = { 1 } sledi parameter , ki ima več pomenov .
Rezultat transformacije postane vsebina TextProc dokumenta .
Če navedemo vrednost » XML « , bo vsebina TextProc dokumenta prej omenjeni XML .
Pri uporabi te opcije se vsebina dokumenta TextProc ne zapiše in nadaljnje procesiranje v istem procesu nima smisla .
Če navedemo karkoli drugega , potem naveden niz postane ločilnik ( delimiter ) , s katerim se združijo vsebine vseh vrnjenih stolpcev , združeni niz pa postane vsebina dokumenta TextProc , največja dolžina imena dokumenta .
Vsak TextProc dokument nosi ime , ki se lahko uporabi kot ime datoteke , če se vsebino dokumenta zapiše na disk , predloga za ime dokumenta , ki se lahko uporabi kot ime datoteke , če se dokument zapiše na disk .
Če bi se ime dokumenta uporabilo kot ime datoteke , potem končnico datoteke določi dodatek , ki vsebino zapiše .
Primer za Portal CHP , ki omogoča , da se iz imena lahko določi točen zapis , na katerem vsebina dokumenta bazira : Pod { 0 } J { 1 } _ { text } MsSqlConnector poskrbi , da se vsebina prebere iz podatkovne baze , obdela in shrani kot vsebino TextProc dokumenta .
Dodatek od dodatka MsSqlConnector prejme kopijo vseh parametrov , razen parameter » MultiQuery « .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 59 4.4.3 BlankDocPopulator in BlankDocConnector Gre za podobno nalogo kot jo izvajata prejšnja dva dodatka , ki polnita korpus z dokumenti , le da se tokrat v korpus dodajajo prazni dokumenti .
Dodatek požene predlogo skozi metodo string.format in prejme zaporedno številko dokumenta .
Privzeta vrednost je » Doc _ { 0 } « , kar generira imena Doc _ 0 , Doc _ 1 , Doc _ 2 itd.
Prazni dokumenti so uporabni v dveh primerih , in sicer ko se vsebina dokumentov generira ( dokumenti so izhod , ne vhod ) ali pa v primeru , da TextProc proces dokumentov v korpusu ne potrebuje .
Do slednje situacije pride v primeru izdelave poročila detektorja plagiatov ( več v poglavju 4.6.3 , stran 75 ) , ki na vhodu ne potrebuje dokumentov v korpusu , saj se korpus nahaja v podatkovni bazi in ni potrebe po nalaganju dokumentov v korpus TextProc procesa .
Ker pa se proces pri praznem korpusu ne izvede ( proces se izvede toliko krat , kolikor je dokumentov v korpusu ) , je bilo potrebno v korpus dodati prazen dokument , da se proces izvede točno enkrat .
Vsebina datoteke je naslednja : Stevilka = ^ \ d + $ MalaBeseda = ^ [ a-zcćšCž ] + $ VelikaBeseda = ^ [ A-ZCĆŽŠĐ ] + $ Naziv = ^ [ A-ZCĆŽŠĐ ] [ a-zcćšCž ] + $ Oznaka = ^ [ a-zA-Z0-9 ] + $ Presledek = ^[ \ t ] + $ Koncilo = ^[.!?]+$
Locilo = ^ [ , ; : - ] $ Vrstica = ^ [ \ r \ n ] $ Oklep = ^["'\(\)\[\]\{\}<>]$ Neznano Programsko ogrodje za procesiranje besedil v naravnem jeziku 60 Vsaka vrstica datoteke zajema en razred , ki se prične z nazivom , konča pa z regularnim izrazom .
Rezultat izvedbe dodatka je zbirka značk » Tokens « z značkami , ki imajo lastnost » WordClass « z nazivom določenega razreda .
V primeru uporabe tega dodatka je smiselno , da se izvede takoj za dodatkom » Tokenizer « , saj ta » popravi « podatke v TextProc dokumentu , hkrati pa zmanjša število značk tipa » Tokens « .
Nastavitve dodatka zajemajo niz za povezavo s podatkovno bazo in ali naj k znački doda naziv besedne vrste .
Če posamezna beseda nima leme , vzame kar besedo .
Dodatek zahteva predhodno izvedbo dodatkov Tokenizer , TagMerger ( opcijsko ) , Stavki in Odstavki ( opcijsko ) .
Dodatek se uporablja v okviru Programsko ogrodje za procesiranje besedil v naravnem jeziku 61 detektorja plagiatov , kjer se besedilo lematizira .
4.4.8 Stavki Že iz imena lahko ugotovimo , da dodatek označi stavke , hkrati pa označi še povedi .
Izračunana vrednost se shrani v lastnost značke , ki jo nastavimo .
Nastavi se tudi čas čakanja med posameznimi prenosi , da pri prenosu ne bi preveč obremenili strežnika .
S pomočjo dodatka smo iz arhiva novic za rubriko » Slovenija « prenesli 51.216 člankov , ki zajemajo novice od 12.11.1997 do 02.04.2009 , golo besedilo pa skupaj zaseda 84.854.095 zlogov .
V spodnji tabeli so kot zanimivost navedeni združeni podatki vseh sej .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 62 Tabela 1 : Statistika prenešenih člankov 24ur.com Uspešno prenesenih : 51.216 člankov Prenos ( HTML ) : 2.798.134.915 B ( ~2,61 GB ) Zapisano golo besedilo : 84.854.095 B ( ~81 MB ) Čas prenosa : 56 ur 42 minut Koristnih podatkov : 3,03 % Znakov : 82.842.311 Besed : 12.074.177 Povedi : 600.392 Povednih povedi : 512.908 Velelnih povedi : 740 Vprašalnih povedi : 10.427 Najdaljša poved : 1983 znakov Naslovnih povedi ( brez ločila ) : 76.317 Odstavkov : 304.611 Najdaljši odstavek : 3372 znakov Pri prenosu so upoštevani samo prenosi datotek HTML , in sicer osnovne strani brez drugih multimedijskih datotek .
Majhen del člankov je bil uporabljen za testiranje nekaterih TextProc dodatkov ; celoten korpus pa je bil uporabljen pri testiranju detektorja plagiatov , ki je podrobneje opisan v poglavju 4.6.3 ( stran 75 ) .
Celoten korpus je bil uporabljen tudi v drugih , ločenih raziskovalnih projektih .
Novice s spletne strani 24ur.com so bile izbrane , ker je bilo golo besedilo enostavno izluščiti iz preostale HTML vsebine , hkrati pa je vsebina pisana v dovolj čisti , uradni slovenščini .
Za označevanje besednih vrst ni bil implementiran poseben označevalnik , ampak je uporabljen eden od prosto dostopnih označevalnikov .
Pred uporabo označevalnika je bilo potrebno izvesti učenje le-tega .
Za učenje označevalnika smo uporabili Slovensko-angleški paralelni korpus IJS-ELAN [ 3 ] , ki zajema Programsko ogrodje za procesiranje besedil v naravnem jeziku 63 15 slovenskih besedil z 58.824 besedami .
Vse besede imajo ročno označeno besedno vrsto in določeno lemo .
Rezultat primerjave na testnem koprusu je naslednji : 90,58% popolnega ujemanja , v 6,53% je ujemanje v besedni vrsti , ne pa v spolu , sklonu , številu ali ostalih lastnostih ter v 2,89% so besede povsem napačno označene .
Naloga dodatka » PoS _ TreeTagger « je , da vsebino dokumenta predela v začasno datoteko v zahtevanem formatu , nato pa požene označevalnik , ki označi začasno datoteko .
Označbe so angleške kratice , naš označevalnik pa na zahtevo te označbe prevede v slovenski jezik in jih izpiše v polnem besedilu .
Prevodi so zapisani v datoteki XML , zato lahko označbe prevedemo v poljuben jezik .
4.4.13 EntityTagger EntityTagger je dodatek , ki označuje imenovane entitete ( osebna imena , imena krajev ...
Entitete so zapisane v podatkovni bazi v več tabelah , ki so ločene glede na tip entitete , zaenkrat pa ge samo za slovenska imena .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 64 Tabela 2 : Seznam imenovanih entitet Imena Št. zapisov Barve 14 Dnevi 7 Države 114 Moška imena 3179 Ženska imena 3416 Kraji 508 Meseci 12 Priimki 27317 Dvotisočaki ( gore ) 427 Reke 59 Valute 103 Označevalnik zaenkrat označuje samo imena , ki so zapisana z eno besedo .
Datoteka zajema seznam pravil , primer zapisa enega izmed pravil izgleda takole : < rule ext = " miju " new = " mi " / > <!--
Pravila so zapisana po vrsti glede na dolžino niza v atributu » ext « , v istem vrstnem redu se pregleduje besede .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 65 V času pisanja tega magistrskega dela je datoteka XML zajemala 92 pravil .
Algoritem smo testirali na pregibnih samostalniških in pridevniških oblikah moških in ženskih imen ter priimkih .
Seznam pregibnih oblik skupaj s pravilno korensko obliko je bil pridobljen iz sistema za odgovarjanje na vprašanja v slovenskem jeziku , ki je bil razvit v našem laboratoriju [ 12 ] .
Algoritem krnjenja ima naslednjo uspešnost : Tabela 3 : Uspešnost krnjenja besed Isti algoritem se uporablja tudi za krnjenje drugih tipov imenovanih entitet , ki so naštete v tabeli 2 ( prejšnja stran ) , vendar obsežen seznam njihovih oblik ni bil na voljo za preiskušanje .
Rezultat testiranja so tudi izpis oblike besede , njene korenske oblike in oblike , ki jo je določil algoritem .
Na podlagi teh podatkov je enostavno določiti novo pravilo in algoritem ponovno zagnati .
V prihodnje bo seznam pravil dopolnjen ali pa bo algoritem zamenjan z boljšim , ki po možnosti ne zahteva ročnega dela .
Rezultat je uporabljen v TextProc integrirani pomoči v obliki CHM za izpis primerov programske kode in tudi za izpise , ki se nahajajo v tem magistrskem delu ( npr. v poglavju 4.2 , stran 43 ) .
Dodatek vhodno programsko kodo opremi s HTML značkami in pred vsako vrstico doda številko vrstice , vrne pa le del dokumenta HTML .
Rezultat lahko ročno kopiramo v željen dokument HTML oz. se v primeru uporabe preko TextProcWS z XSLT transformira v veljaven dokument HTML , ki med drugim s pomočjo CSS ( angl. » Cascading Style Sheets « ) določa tudi obliko izpisa , tj. barve , tip in velikost pisave itd.
Dodatek v procesu pred sabo zahteva izvedbo dodatka Tokenizer in ima vhodne parametre , s katerimi je mogoče nadzirati obliko kode HTML in se zato lahko teoretično uporabi tudi za druge Programsko ogrodje za procesiranje besedil v naravnem jeziku 66 programske jezike , katerih sintaksa je podobna programski kodi C # ( Java , JavaScript , C , C++ ..
Vhodni parametri so : seznam rezerviranih besed programskega jezika , posamezne besede so ločene z vejico .
Vrednost je lahko prazen niz , kar rezultat zapiše nazaj v vsebino TextProc dokumenta .
V tem primeru se rezultati vseh dokumentov zapišejo v isto datoteko .
4.4.15 XmlWriter Dodatek zapiše rezultat procesiranja posameznega dokumenta v datoteko ali nazaj v vsebino TextProc dokumenta v obliki XML ( prikazano na slikah v poglavju 4.1 , slike 10 , 12 , 13 in 14 ) .
Vhodni parametri dodatka so : polna pot do mape , v katero se naj hranijo datoteke XML .
Ime datoteke se vzame iz imena posameznega TextProc dokumenta ; privzeto prazen niz .
XML se zapiše nazaj v vsebino TextProc dokumenta .
Privzet je prazen niz ( polnega besedila ne izpiše ) ; največkrat uporabljena je vrednost » Tags « , kar izpiše polno besedilo posameznih besed .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 67 naziv datoteke XSL , ki se v XML zapiše v direktivo xml-stylesheet .
Privzet je prazen niz ; ime navedena datoteke ni potrebno pisati kot polna pot .
Ta dodatek je bistven za delovanje TextProc procesov , ki so na voljo preko spletne strani ( TextProcDemo.aspx ) oz. spletne storitve ( TextProcWS.asmx ) .
Vhodno besedilo se iz vnosnega polja spletne strani oz. vhodnega parametra spletne storitve skopira v vsebino TextProc dokumenta , ki se nato obdela v TextProc procesu .
Zadnji dodatek v procesu je XmlWriter , ki TextProc dokument zapiše v obliki XML nazaj v vsebino dokumenta .
Rezultat razreza je 179 datotek ; prva velikosti 5.199 znakov in predzadnja 911.345 znakov .
Zadnja datoteka je bila zbrisana , saj je šlo za ostanek vsebine in je za meritev nepomembna .
Za primerjavo : če bi golo besedilo skopirali v urejevalnik besedil Word pisarniškega paketa Microsoft Office 2007 pri nastavitvah pisave New Times Roman velikost 12 in višino vrstice 1,5 , bi za prvi dokument dobili skoraj dve strani , za največjega pa 288 strani neprekinjenega besedila .
Na sliki 17 lahko vidimo rezultate meritve časovnih zahtevnosti nekaterih dodatkov .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 68 35 Tokenizer TagMerger Stavki Odstavki Leme Hasher PoS _ TreeTagger Statistics 100 200 300 400 500 600 700 800 Dolžina dokumenta [ znakov ] Slika 17 : Časovne zahtevnosti dodatkov Na grafu lahko vidimo , da imajo vsi izvedeni dodatki linearno časovno različno strmino .
Razlog za počasnost dodatka Leme je slaba implementacija komunikacije s podatkovno bazo .
Dodatek namreč za vsako besedo posebej kliče shranjeno SQL proceduro ( angl. » stored procedure « ) za lematizacijo , kar zahteva precej časa .
Uspešnost spremembe dodatka je bila preverjena s ponovnim zagonom istega procesa nad istim korpusom , rezultati pa so vidni na sliki 18.
Ostali dodatki imajo podobne časovne zahtevnosti kot prej , kar je pričakovano .
Na sliki 19 lahko vidimo deleže časovnih zahtev posameznih dodatkov ( pri Programsko ogrodje za procesiranje besedil v naravnem jeziku 69 popravljenem dodatku Leme ) .
35 800 900 x1000 Tokenizer TagMerger Stavki Odstavki Leme Hasher PoS _ TreeTagger Statistics Programsko ogrodje za procesiranje besedil v naravnem jeziku 70 4.4.17 Ostali dodatki Implementirana je bila še množica drugih dodatkov , ki bodisi niso bistveni ali pa niso implementirani v celoti : CharTuples : izmeri frekvence pojavnosti sosednjih znakov v besedilih .
Dodatek bi lahko uporabili nad korpusom slovenskih besedil , rezultat pa se lahko uporabi pri izločanju zatipkanih besed ali tujk .
Rezultat meritve je prikazan v prejšnjem poglavju ( 4.4.16 ) .
Elan _ Analizer : uporabljen za analizo stavkov in povedi ELAN korpusa .
Leme4PoSCorrection : zamenja TreeTagger PoS značko z besedno vrsto , določeno s pomočjo oblikoslovnega slovarja , če je v slovarju najdena samo ena oblika za iskano besedo .
PatternTagger : išče vzorce v značkah na nivoju besed in jih označi z novimi značkami , npr. ločeno značko za moško ime in ločeno značko za priimek skupaj označi z novo značko kot osebo .
Pravila za združevanje so zapisana v zunanji tekstovni datoteki , katere polno ime podamo kot lastnost dodatka .
Dodatek se predvsem namenjen za uporabo v procesih , ki so Programsko ogrodje za procesiranje besedil v naravnem jeziku 71 dosegljivi preko TextProcDemo in TextProcWS .
pdUploader : obdela besedilo za detekcijo plagiatov in shrani obdelan dokument v korpus na TextProc strežniku .
Responder : nadomesti vsebino dokumenta TextProc z vsebino iz datoteke z diska .
RegExTagger : označi dele besedila glede na regularne izraze , ki so podani v vhodni datoteki .
Searcher : išče značke v enem izmed seznamov značk , ki imajo določeno lastnost z določeno vrednostjo .
SimplifyText : omogoča poenostavitev besedila , tj. odstrani značke HTML , nadomesti nekatere značke HTML z drugimi znaki , odstrani tabulatorje in odvečne presledke .
Del podatkov o prenesenih člankih 24ur.com ( tabela 1 , stran 62 ) je bil pridobljen s pomočjo tega dodatka .
TagStringFilter : filtrira besedilo določene zbirke značk s podanim regularnim izrazom .
Besedilo ustreznih in po potrebi neustreznih značk nato zapiše v ločene datoteke .
Uporabljeno za » lepši « izpis besedil , ki so pridobljene iz spletnih strani , kjer je besedilo včasih zapisano v eni dolgi vrstici .
Uporabljen je bil za primerjavo ročno označenih dokumentov ELAN korpusa s testnimi dokumenti , ki tudi izhajajo iz ELAN korpusa in so bili označeni s pomočjo označevalnika TreeTagger .
Statistični podatki o uspešnosti označevalnika , navedeni v poglavju 4.4.12 ( stran 62 ) so bili pridobljeni s pomočjo tega dodatka .
xslt : izvede XSLT transformacijo nad zapisom XML TextProc dokumenta , rezultat pa zapiše v izhodno datoteko ali nazaj v vsebino TextProc dokumenta .
TextWriter : zapiše besedilo TextProc dokumenta nazaj v tekstovno datoteko ( .
Statistika se zapisuje v obliki XML .
Statistika zajema čas trajanja in porabo pomnilnika posameznega TextProc dodatka , če je merjenje pomnilnika omogočeno .
Tako čas izvedbe in porabo pomnilnika se meri v TextProcCore , podatke pa sproti zapiše v TextProc dokument .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 73 4.5 SKRIPTA TextProc proces lahko vsebuje preproste ukaze , s katerimi lahko spreminjamo nastavitve ali prožimo nekatere akcije .
Skripta je koristna v dveh primerih : eksperimentiranje : s pomočjo skripte lahko avtomatiziramo izvajanje istega procesa pri različnih nastavitvah .
spreminjanje nastavitev vnaprej pripravljenih procesov : procesov , objavljenih preko TextProcDemo in TextProcWS do sedaj ni bilo mogoče spreminjati .
Skripta je tako vhodni podatek , preko katerega je mogoče spreminjati nastavitve procesa .
Primer so procesi detektorja plagiatov .
[ ime lastnosti ] = [ vrednost ] ; omogoča spreminjanje nastavitve dodatka .
[ ime lastnosti procesa ] = [ vrednost ] ; spremeni vrednost lastnosti procesa na podano vrednost .
Primer : process.Beep = true ; Programsko ogrodje za procesiranje besedil v naravnem jeziku 74 doc [ 0 ] .
Uporabno samo v primeru uporabe preko TextProcDemo oz. TextProcWS , kjer se v korpusu nahaja samo en dokument in če proces dokument shrani na TextProc strežnik .
Name = " TestApp _ DocID _ 45 " ; run ( ) ; požene izvajanje TextProc procesa .
Če TextProc proces nima nobenega " run " ukaza v skripti ali pa je skripta prazna , se ta ukaz doda na konec skripte samodejno , da se proces izvede vsaj enkrat .
end ( ) ; takoj konča izvajanje TextProc procesa .
load ( [ ime datoteke XML ] ) ; naloži datoteko s TextProc procesom .
Primer : load ( " e : \ novProces.xml " ) ; save ( [ ime datoteke XML ] ) ; shrani TextProc proces v navedeno datoteko XML .
log.save ( [ ime datoteke TXT ] ) ; shrani vsebino dnevnika dogodkov v datoteko TXT .
Uporabno v primeru , ko s skripto izvedemo več samodejnih zagonov procesa in želimo imeti ločen dnevnik dogodkov za vsak zagon .
4.6 PRIMERI UPORABE V nadaljevanju so opisani nekateri bolj ali manj konkretni primeri uporabe TextProc programskega paketa .
4.6.1 PoS označevalnik V poglavju 4.4.12 na strani 62 je opisan dodatek PoS _ TreeTagger , ki pa sam zase ne deluje , ampak je dosegljiv preko za to pripravljenega procesa .
V procesu nastopajo naslednji TextProc dodatki : Tokenizer : razbije besedilo na osnovne enote , kot so besede , ločila itd.
TagMerger : združi nekatere nize , ki s stališča slovnice spadajo skupaj , npr. okrajšave in posebne oznake , kot so števila , datumi in podobno .
XmlWriter : zapiše procesiran dokument z značkami v datoteko XML oz. nadomesti vsebino dokumenta ( v primeru spletne storitve ) .
4.6.2 Označevalnik imenovanih entitet Gre za podoben proces kot PoS označevalnik , le da se namesto dodatka PoS _ TreeTagger izvede dodatek EntityTagger , ki je opisan v poglavju 4.4.13 na strani 63.
Detekcijo lahko izvedemo na več načinov , v okviru te magistrske naloge pa je bil s pomočjo TextProc programskega paketa implementiran postopek z uporabo zgoščevalne funkcije .
Postopek je naslednji : pridobimo golo besedilo dokumenta , Programsko ogrodje za procesiranje besedil v naravnem jeziku 76 besedilo razdelimo na manjše dele , npr. stavke , povedi in odstavke počistimo besedilo na nivoju stavkov .
S tem vsak del dobi unikatno , a bistveno krajšo vrednost od dejanskega besedila , primerjamo zgostitvene vrednosti delov dokumenta z deli drugih dokumentov , ki so bili obdelani predhodno .
Za izvedbo detekcije plagiatov je bilo potrebno implementirali nekaj novih dodatkov .
Celoten postopek je razdeljen na dva dela , in sicer pripravo dokumenta in iskanje kopij oz. podobnosti .
Oba dela sta realizirana v dveh ločenih TextProc procesih .
Detekcijo plagiatov v našem primeru izvajamo na nivoju celotnega dokumenta , na nivoju odstavkov in povedi .
Proces priprave dokumenta izvede večino prej opisanega postopka in zajema naslednje dodatke ( po vrsti ) : Tokenizer : razbije besedilo na osnovne enote , kot so besede , ločila itd.
TagMerger : združi nekatere nize , ki s stališča slovnice spadajo skupaj , npr. okrajšave in posebne oznake , kot so števila , datumi in podobno .
Leme : lematizira nize besed .
Stavki : razdeli besedilo na stavke in povedi .
Ta dodatek je v procesu dvakrat z različnimi nastavitvami , kjer prva instanca računa zgostitveno funkcijo po povedih , Programsko ogrodje za procesiranje besedil v naravnem jeziku 77 druga instanca pa po odstavkih .
Podatkovna baza omogoča hrambo dokumentov v več korpusih , zato pod nastavitvami določimo , pod kateri korpus se naj shrani .
Shema podatkovne baze je prikazana na sliki 20.
V tretji tabeli hranimo posamezne dele besedila , za katere je bila izračunana zgostitvena vrednost .
Seveda mora biti zgostitvena funkcija enaka za vse dokumente v korpusu , sicer primerjava nima smisla .
V ta namen je bil implementiran nov dodatek » pdReport « , ki izvede primerjavo med dokumenti in izdela poročilo o podobnosti .
Rezultat izvedbe dodatka je poročilo v obliki datoteke XML , kjer je seznam podobnih dokumentov s seznamom podobnosti .
Za lepši prikaz rezultatov je bila implementirana datoteka XSL , ki ujemanja dokumentov obarva z različnimi odtenki rdeče barve glede na deleže ujemanja vsebine tako , da je potencialna ujemanja mogoče hitro opaziti .
Detektor plagiatov je bil med drugim testiran tudi na člankih spletnega portala 24ur.com , ki smo jih dobili z enim od že opisanih dodatkov ( poglavje 4.4.11 , stran 61 ) .
Kot že zapisano , se detekcija izvede v dveh fazah oz. z dvema TextProc procesoma , in sicer priprava dokumentov in izdelava poročila .
Obe fazi sta bili izvedeni na računalniku z naslednjimi specifikacijami : Tabela 4 : Specifikacije testnega računalnika Operacijski sistem : MS Windows Server 2008 64bit CPE : Intel Core 2 Quad Q9400 @ 2,66 GHz Delovni pomnilnik : 4 GB Podatkovna baza : MS SQL Server 2008 V fazi priprave dokumentov so bili vsi članki obdelani in shranjeni v podatkovno bazo z naslednjimi rezultati : Tabela 5 : Statistika priprave dokumentov za detekcijo plagiatov Obdelanih člankov : 51.216 Čas trajanja izvede procesa : 1 uro 15 min 46 sek Shranjenih vrednosti MD5 povedi : 588.325 Shranjenih vrednosti MD5 odstavkov : 296.995 Št. zavrnjenih povedi : 12067 Št. zavrnjenih odstavkov : 7616 V tabeli zgoraj ( tabela 5 ) lahko vidimo število povedi in odstavkov , ki so bili zavrnjeni , tj. niso bili shranjeni .
Dodatek pdUpload namreč kot nastavitev prejme tudi podatek o najmanjši dovoljeni dolžini povedi oz. odstavka , ki se še shrani v bazo , krajše pa se ne .
V dokumentih so poleg besedil tudi nekatere » smeti « , ki nas pri detekciji ne zanimajo , npr. Programsko ogrodje za procesiranje besedil v naravnem jeziku 79 kratki odstavki ali povedi .
Ta za vsak dokument korpusa pokliče SQL shranjeno proceduro v podatkovni bazi , ki vrne rezultat iskanja , dodatek pa rezultate zapisuje v eno datoteko formata XML .
Rezultat prvega zagona izdelave poročila je naslednji : Tabela 6 : Rezultati zagona izdelave poročila detekcije plagiatov Obdelanih člankov : 51.216 Čas trajanja : 8 min 9 sek Kopij člankov : 242 Podobnih člankov : 401.528 parov Člankov v poročilu : 8208 Velikost poročila XML : 186.830.929 zlogov Rezultat je datoteka formata XML , vendar je bilo datoteko zaradi takšne velikosti težko pogledati v brskalniku , izvesti transformacijo ali odpreti v tekstovnem urejevalniku .
Datoteko je bilo zato potrebno zmanjšati , kar je bilo storjeno z implementacijo filtra , ki je iz datoteke izločil zapise , kjer je bila podobnost manjša od 20% , kar je datoteko zmanjšalo na približno 41 MB , s tem pa je mogoče odpreti tudi v brskalniku .
Po grobem pregledu rezultatov je bilo ugotovljeno , da je večina podobnosti med članki , pri katerih gre za vremenske napovedi , poročila vremenskih razmer po Sloveniji in sosednjih pokrajinah , poročila o razmerah na slovenskih cestah in nekaterih športnih izidov , npr. teniških turnirjev , izidi hokejske in košarkarske lige .
Navedeni članki se pojavljajo vse do leta 2000 , kasneje pa ne več .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 80 Slika 21 : Primer izpisa rezultata detektorja plagiatov Na sliki 21 lahko vidimo izsek izpisa rezultata detektorja plagiatov , ki je bil izveden v spletnem brskalniku s pomočjo transformacije XSL .
V isti vrstici se z mastno pisavo in v različnih barvah izpišeta odstotka podobnosti med dokumentoma , ki se izračuna v podatkovni bazi po naslednjem postopku .
vn } urejena množica vsebinskih elementov ( povedi ali odstavkov ) in H = { h1 , h2 , ..
Množici sta urejeni v enakem vrstnem redu , kot se vsebinski elementi pojavljajo v besedilu , npr. v1 predstavlja prvo poved ( v besedilu ) , ki ima zgostitveno vrednost h1 in vn predstavlja zadnjo poved z zgostitveno vrednostjo hn .
Pri primerjavi dokumentov D1 = { V1 , H1 } in D2 = { V2 , H2 } se prvi odstotek ( v datoteki XML zapisan v atributu simAtoB ) izračuna po enačbi ( 4 ) Programsko ogrodje za procesiranje besedil v naravnem jeziku 81 kjer je ( 5 ) ( 6 ) in len funkcija za izračun dolžine niza ali dokumenta .
Drugi odstotek ( v dokumentu XML zapisan v atributu simBtoA ) se izračuna podobno po enačbi ( 7 ) Barva izpisa odstotka je določena v transformacijski datoteki XSL .
V datoteki XML se lahko izpišejo tudi konkretni odstavki in povedi , ki imajo isto vrednost zgostitvene funkcije , vendar to zaradi velike količine le-teh v primeru člankov 24ur.com ni bilo izvedeno .
Detektor plagiatov je dosegljiv tudi preko TextProcDemo in TextProcWS , uporaba pa je opisana v poglavju 4.7.1. 4.7 TEXTPROCDEMO TextProcDemo je spletna stran , ki je namenjena testiranju oz. predstavitvi funkcionalnosti ogrodja TextProc .
Na spletni strani so objavljeni vnaprej pripravljeni procesi , ki jih je možno izvesti nad vpisanim besedilom .
Na sliki 22 je prikazana spletna stran , ki omogoča izvajanje vnaprej pripravljenih TextProc procesov .
Večina procesov vrača rezultat v obliki XML , TextProcDemo pa v drugem padajočem seznamu ponuja nekatere transformacije XSL , ki rezultat predelajo v drugo obliko .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 82 Slika 22 : TextProcDemo Transformacije so namenjene za : izločanje rezultatov , kjer se iz celotnega rezultata vrne samo določen del , ki uporabnika zanima , ostalo pa zavrže ; rezultat transformacije je lahko nov XML , prikaz rezultatov v človeku prijazni obliki .
Rezultat je običajno v obliki XHTML , nekatere transformacije pa omogočajo določen nivo interakcije , npr. barvanje delov besedila , ki so označeni ( npr. barvanje vseh priimkov , če gre za označevalnik imenovanih entitet ) .
Uporaba določenih procesov zahteva , da nastavitve spremenimo ; če Programsko ogrodje za procesiranje besedil v naravnem jeziku 83 takšen proces izberemo , se del skripte samodejno naloži v oknu za vnos skripte , vidno tudi na sliki 22.
Izjema je detektor plagiatov , ki se izvede v treh korakih , zato je uporaba le-tega podrobneje opisana v naslednjem podpoglavju .
Uporaba detektorja poteka v treh korakih , zato so bili pripravljeni trije TextProc procesi .
Koraki so : izdelava korpusa , priprava dokumentov in prenos v korpus , izdelava poročila detekcije plagiatov .
Prvi korak je priprava korpusa na TextProc strežniku .
Pri izbiri tega procesa se samodejno naloži naslednja skripta : process.pdManager.CorpusID = 0 ; process.pdManager.Password = ""; process.pdManager.Command = ""; Skripto dopolnimo tako , da podamo poljubno geslo ( spremenimo vrednost lastnosti Password ) in pod lastnost Command navedemo ukaz create .
Vhodno besedilo v tem primeru ni pomembno , lahko ga zbrišemo ali pustimo .
Rezultat izvedbe se prikaže v novem oknu in zajema eno samo številko , ki predstavlja ID korpusa .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 84 ID korpusa in geslo si moramo zapomniti , saj nadaljnji koraki zahtevajo vnos teh dveh vrednosti .
Sledi drugi korak , za kar izberemo proces za shranjevanje besedila kot dokument korpusa detektorja plagiatov .
Ob izbiri procesa se naloži naslednja skripta : process.pdManager.CorpusID = 0 ; process.pdManager.Password = ""; doc [ 0 ] .
Ime dokumenta naj bo takšno , da bo kasneje mogoče ugotoviti , za kateri dokument gre , npr. če gre za zapise iz podatkovne baze , je v ime smiselno vključiti ID zapisa iz te baze .
Proces lahko traja nekaj časa , odvisno od količine vnesenega besedila , na koncu pa se v novem oknu izpiše ID , ki ga je dokument dobil na TextProc strežniku .
Zadnji korak je izdelava poročila detekcije plagiatov , zato izberemo proces za izdela vo poročila detekcije plagiatov , ki samodejno naloži naslednjo skripto : process.pdManager.CorpusID = 0 ; process.pdManager.Password = ""; process.pdReport.DocAID = 0 ; process.pdReport.DocBID = 0 ; process.pdReport.Verbosity = 1 ; Ponovno vpišemo ID korpusa in geslo .
Zadnji trije parametri omogočajo vrsto različnih scenarijev , kot primer je tukaj naveden samo scenarij , pri katerem želimo detekcijo izvesti med vsemi dokumenti korpusa , poročilo pa naj vsebuje tudi sporno izvorno besedilo ( npr. povedi , ki so podobne ali enake ) .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 85 Po želji lahko v isti korpus vključimo nove dokumente , torej ponovimo drugi korak in izdelamo novo poročilo nad razširjenim korpusom .
Korpus lahko tudi počistimo ( zbrišemo dokumente ) ali popolnoma zbrišemo .
Vhodni parametri procesov so enaki v obeh primerih .
Edina razlika je , da je pri uporabi TextProcWS potrebno navesti ID procesa in ID oblike .
ID številke obeh so navedene v padajočih seznamih na spletni strani TextProcDemo .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 86 5 ZAKLJUČEK V uvodu je predstavljeno področje procesiranja naravnega jezika in tekstovnega rudarjenja .
V nadaljevanju sta podrobneje opisani obe področji s pregledom njihovih osnovnih opravil .
Glavni del magistrskega dela predstavlja opis lastne implementacije programskega paketa , imenovanega TextProc .
Programski paket prinaša ogrodje s programskimi dodatki , ki skupaj omogočajo sestavljanje in izvajanje poljubnih aplikacij na področju procesiranja naravnega jezika in tekstovnega rudarjenja .
Na primeru je prikazana celotna implementacija programskega dodatka z v celoti navedeno programsko kodo , kar bralcu omogoča implementacijo lastnih dodatkov za programski paket TextProc .
Ogrodje je bilo temu primerno prilagojeno in menimo , da je ogrodje ustrezno in dovolj stabilno za nadaljnjo uporabo in razvoj novih dodatkov .
raziskovalcem nudi dobro platformo za eksperimentiranje brez velikih naporov , saj ogrodje že nudi nekatere koristne funkcionalnosti , kot so merjenje časa izvajanja , Programsko ogrodje za procesiranje besedil v naravnem jeziku 87 porabe pomnilnika , izpis nekaterih statistik , vodenje napredka izvajanja dolgotrajnih procesov , dnevnik dogodkov ( primerno za razhroščevanje ) ...
Vse kar je potrebno vedeti o dodatku je pomen vhodnih parametrov , opisi pa so dosegljivi kar preko TextProcGUI s klikom na gumb za prikaz pomoči ( če je pomoč dodatka dosegljiva ) , TextProc lahko uporabljajo tudi razvijalci , ki jih procesiranje naravnega jezika niti ne zanima , vendar pri svojem delu potrebujejo rešitve s tega področja .
Za uporabo TextProcCore ali TextProcWS ter z vnaprej pripravljenimi TextProc procesi ne potrebujejo nobenega znanja .
Ena od slabosti programskega paketa TextProc oz. ogrodij na principu dodatkov na splošno je morda daljši časi izvajanja , ki je lahko kvečjemu problem v produkciji in manj pri raziskovalnem delu .
5.2 NADALJNJE DELO Programski paket bo v prihodnje razširjen , predvsem v obliki novih programskih dodatkov .
Dodatno bo implementirana možnost izvajanja TextProc procesov kar iz ukazne vrstice .
Pri razvoju dodatkov se pogosto testira dodatek tako , da se sestavi testni proces .
Z možnostjo uporabe preko ukazne vrstice bi zadostoval zagon skripte v Programsko ogrodje za procesiranje besedil v naravnem jeziku 88 ukazni vrstici .
Uporaba preko ukazne vrstice odpira tudi dodatno pot za integracijo v programskih jezikih oz. okoljih , kjer direktna vključitev ogrodja ali uporaba spletnih storitev ni mogoča .
Pri uporabi programskega paketa se je pokazala potreba po razširitvi TextProc dokumenta tako , da bi hranil besedilo v več delih .
Ena vrstica iz tabele v podatkovni bazi v tem primeru predstavlja en dokument , posamezni stolpci pa posamezen blok dokumenta .
Ta način omejuje uporabo , saj je nekatere procese smiselno izvajati na več dokumentih hkrati .
Procesiranje bi se nato izvedlo v ločenem procesu , kjer bi kot vhodni parameter prejeli identifikator ( je ) korpusa in / ali dokumentov , ki jih naj obdela .
Kot podporo temu bi bilo potrebno implementirati dodatek , ki bi omogočal polnjenje TextProc korpusa v procesu z dokumenti korpusa , shranjenega v podatkovni bazi .
Nekatere ideje so že bile realizirane na primeru detektorja plagiatov , vendar je implementacija namenjena izključno za detektor in ni splošno uporabna .
Problem je v implementaciji Programsko ogrodje za procesiranje besedil v naravnem jeziku 89 dodatkov , kjer nekaterih ni mogoče oz. ni smiselno paralelizirati ; npr. ker delujejo na nivoju korpusa in ne samo posameznega dokumenta ali pa dodatki uporabljajo skupne vire ( podatkovne baze , iste datoteke ) .
Programsko ogrodje za procesiranje besedil v naravnem jeziku 90 Spletna aplikacija za zajem in hrambo posnetkov slovenskega govora Povzetek V diplomskem delu je opisana spletna aplikacija za zajem in hrambo posnetkov govora slovenskega jezika .
Spletna aplikacija omogoča tudi dinamično spreminjanje vsebine preko sistema za upravljanje vsebin .
Preko njega lahko skrbnik sistema spreminja informa - cije , ki se prikažejo na posameznih spletnih straneh .
Vsi posnetki se zbirajo na strežniku od koder lahko vsak obiskovalec spletne strani le-te prosto prenese k sebi .
Posnetki se na strežnik prenesejo s pomočjo snemalnika govora .
Za implementacijo sistema za upravljanje vsebin je bila izbrana spletna tehnologija PHP , ki v povezavi z relacijsko podatkovno bazo MySQL tvorita ogrodje spletne aplikacije .
Snemalnik govora je implementiran s programskim jezikom Java in je kot applet aplikacija vključen v spletno aplikacijo .
Podani so tudi opisi nekaterih delov sistema , ki naj služijo kot začetna točka nadaljnjega razvoja spletne aplikacije .
Ključne besede : zajem govora , hramba posnetkov , sistem za upravljanje vsebin Uvod 5 1 Uvod V današnjem času se vedno bolj kažejo potrebe po računalniških sistemih , ki znajo razpoznati govorjene besede in glede na te izvršiti ustrezne opera - cije .
V zadnjih letih se je uporabnost takšnih sistemov zelo povečala in danes jih srečujemo tudi že v vsakodnevnem življenju , npr. kot pomoč ljudem z okvaro sluha , hitro klicanje na prenosnih telefonih , naročanje kino vstopnic , narekovanje bese - dila računalniku , …
Razpoznavanja govora je zapleten problem , ki se lahko rešuje na razli - čne načine .
Prva skupina tak - šnih modelov so stroji s končnim številom stanji , katerih predstavniki so deterministični in nedeterministični končni avtomati .
Tretja skupina so predikatni računi , ki se uporabljajo za modeliranje semantike jezika .
Četrta sku - pina modelov so verjetnostni modeli , kot so skriti modeli Markova ( HMM ) , ki se danes uporabljajo na področjih razpoznavanja govora , razumevanja dialogov , sinteze govora ter drugod [ 4 ] .
Ko govorec izgovori neko besedo ali stavek , se govorni signal prenese do razpoznavalnika govora , ki na osnovi slovarja in gramatike jezika prepozna posamezne besede .
Vsak razpoznavalnik govora je potrebno najprej naučiti prepoznavati besede jezika .
Ena izmed takšnih baz je tudi VoxForge [ 15 ] , ki v diplomskem delu služi kot zgled in vodilo pri razvoju spletne aplikacije za zajem in hrambo posnetkov sloven - skega jezika .
Zato je v tej diplomski nalogi obravnavana spletno aplikacijo , ki nudi zajem , hrambo in prost prenos posnetkov slovenskega jezika .
Izbira vrste tehnologije je zelo pomembna odločitev , ki ji je vre - dno nameniti pozornost , saj v veliki meri definira naslednji korak .
Za realizacijo diplomske naloge je bila izbrana spletna tehnologija PHP .
Nave - deni so razloge za in proti ter načini namestitve vseh potrebnih paketov za začetek razvoja spletne aplikacije .
Na koncu prvega sklopa so omenjena še znanja , ki so zaželena za razvijalca spletne aplikacije .
Današnje spletne aplikacije na svojih straneh in podstraneh nimajo več samo statične vse - bine , temveč jih je vedno več takšnih , ki omogočajo dinamično spreminja - nje vsebin .
Takšni sistemi se imenujejo sistemi za upravljanje vsebin ( CMS ) .
V nadaljevanju so ponazorjeni sestavni deli takšnega sistema in zaporedja akcij , ki se izvršijo na posameznih straneh in podstraneh .
Naslednji sklop diplomskega dela obravnava osrednji sestavni del sple - tne aplikacije za zajem in hrambo posnetkov slovenskega jezika - snemal - nik govora .
Na začetku predstavimo tehnologijo Java Applet , ki omogoča uporabo sistemskih virov na strani uporabnika .
Omenjamo tudi prednosti Poglavje 1 : Uvod 7 uporabe JNLP oziroma Java Web Start tehnologije .
Zato v nadaljevanju načrtujemo zgradbo takšne aplikacije , v kateri so predstavljeni moduli ( paketi ) in njihovo medsebojno povezovanje .
Za konec sklopa je opisana še izvedba nekaterih delov in postopkov snemalnika govora .
V predzadnjem delu diplomske naloge podamo nekaj primerov uporabe spletne aplikacije .
Primeri uporabe so prikazani za vse vrste obiskovalcev spletne strani : za navadne obiskovalce , ki lahko le snemajo in prenašajo ponujene tekste , uporabnike , ki poleg snemanja tudi dodajajo tekste , kot tudi za skrbnike sistema , ki s pomočjo sistema za spreminjanje vsebine spreminjajo vsebino strani in podstrani .
Navodila so podana v obliki slik zaslonskih mask in s spremljajočimi tekstovnimi navodili .
V zaključnem sklopu diplomskega dela ovrednotimo vse zastavljene zahteve , ki jih mora izpolnjevati sistem za zajem in hrambo posnetkov slovenskega jezika ter navedemo še nekatere možnosti za izboljšave .
8 Poglavje 2 : Vzpostavitev razvojnega okolja 9 2 Vzpostavitev razvojnega okolja V poglavju je najprej opredeljena tehnologija za implementacijo spletne aplikacije .
Pred začetkom razvoja izberemo tudi najprimernejši urejevalnik kode IDE in navedemo nekaj virov informacij , ki ponudijo bralcu dovolj teoretičnih osnov , da lahko prične z načrtovanjem in implementacijo spletne aplikacije .
Med kriteriji , po katerih se ocenjuje ustreznost posamezne spletne tehnologije se največkrat pojavijo [ 16 ] : • vnaprejšnje in dinamično prevajanje kode , ki omogoča hitrejše izvajanje spletne aplikacije , • če je jezik skriptni , se čas izvajanja programa podaljša , saj je potrebno jezik interpretirati , • možnost objektnega programiranja omogoča ponovno uporabo že napi - sane kode in zmanjša čas razvoja spletne aplikacije , • podprti jeziki , v katerih lahko implementiramo spletno aplikacijo , • odprtokodnost .
V nadaljevanju v tabeli 2.1 prikazujemo medsebojno primerjavo zgoraj omenjenih spletnih tehnologij po pravkar omenjenih kriterijih .
2.2 Namestitev spletnega strežnika , podatkovne baze in ostalih paketov Z odločitvijo za neko spletno tehnologijo je povezana tudi izbira strežnika .
Poleg strežnika Apache potrebujemo za razvoj spletne aplikacije še druge pakete , kot so PHP [ 12 ] , podatkovna baza MySQL [ 10 ] ter FTP Poglavje 2 : Vzpostavitev razvojnega okolja 11 strežnik FileZilla [ 5 ] .
Vsak , ki ima namen vzpostaviti razvojno okolje mora natan - čno vedeti , kako želi nastaviti vse nastavitve paketov , da bodo delovali pravilno .
To je velikokrat dolgotrajen postopek , ki zahteva poglobljeno poznavanje paketov , njihovih zmožnosti in zahtev .
Nekateri izmed njih ponujajo le pomoč pri pisanju kode s sintaktično analizo , avtomatičnim dopolnjevanjem ( code completion ) , označevanjem rezerviranih besed ( syntax highlight ) , medtem ko drugi omogočajo še mnogo več , kot na primer : • avtomatično prevajanje in končno izgradnjo projekta , • postopno izvajanje kode ( debugging ) , • vizualno urejanje grafičnega vmesnika .
NetBeans [ 11 ] je odprtokodni urejevalnik IDE , ki je produkt Sun Microsystems .
Osnovan je na programskem jeziku Java in vsebuje podporo za implementacijo različnih tehnologij : Java , JavaScript , PHP , Python , Ruby , Groovy , C , C + + , …
Poleg tega vsebuje odličen grafični urejevalnik , ki nam zelo poenostavi razvoj grafičnega vmesnika snemalne aplikacije , ki jo omenjamo v 4. poglavju .
Za nadaljnje informacije in nasvete je odličen vir domača stran PHP [ 12 ] , kjer lahko razvijalec najde dokumentacijo vseh razredov in funkcij .
Zelo priporočljiv začeten ( velikokrat pa tudi stalni ) vir informacij je spletna stran W3School Online [ 17 ] , kjer lahko razvijalec izve , katere tehnologije se trenutno uporabljajo na določenem področju in vsako od teh na osnovi velikega števila primerov podrobneje spozna .
Na koncu omenimo še spletno stran Lynda.com [ 9 ] , ki pa z razliko od zgornjih virov ponuja plačljiva video predavanja .
Računalniki morajo omogočati priklop mikrofona , preko katerega se zajema govor .
Shema sistema za zajem govora je predstavljena na sliki 3.1.
Bralec je obiskovalec , ki ta besedila snema .
Posnetki se nato shranijo na spletnem strežniku .
Kot že omenjeno , so osnovne zahteve , ki jih mora spletna aplikacija izpolnjevati , snemanje , hramba in možnost prenosa govornih posnetkov .
K tem zahtevam dodajamo še : 14 3.1 Spletna aplikacija • spletna aplikacija naj omogoča skrbniku , da lahko ta ustvari , bere , spreminja in briše zavihke strani in njihove vsebine ( CRUD – Create , Read , Update and Delete ) .
• spletna aplikacija mora omogočati uporabniku , da lahko ta hitro in enostavno vnaša tista besedila , za katera želi , da se prikazujejo v snemalniku govora , • v primeru , da se je uporabnik v postopku ustvarjanja besedila zmotil ali pa želi , da se kakšen stavek besedila izpusti ali na novo doda , mora spletna aplikacija omogočati tudi naknadno urejanje besedil , • v primeru velikega števila novih besedil naj spletna aplikacija ponudi bralcu tiste , ki so bile ustvarjene zadnje .
3.1 Spletna aplikacija 3.1.1 Načrt Slika 3.2 predstavlja načrt spletne aplikacije za zajem in hrambo posnet - kov .
Vsako stanje lahko razumemo kot eno ali več spletnih strani , ki morajo izpolnjevati vse v alinejah naštete zah - teve .
Uporabniške strani omogočajo uporabniku , da dodaja , spreminja ali briše svoja besedila .
Poglavje 3 : Načrt spletne aplikacije in podatkovne baze 15 Skrbniške strani predstavljajo jedro sistema za upravljaje vsebine .
Komponente teh strani so naslednje : • navigacija urejanja , ki skrbniku omogoča izbiro posameznega zavihka oziroma vsebine znotraj le-tega , • navigacija dodajanja , s katero skrbnik pove sistemu ali želi dodati nov zavihek ali novo vsebino , • odjava skrbnika iz sistema .
CRUD za zavihke in vsebino Slika 3.2 : Načrt spletne aplikacije za zajem in hrambo posnetkov .
16 3.1 Spletna aplikacija Strani za urejanje oziroma dodajanje zavihkov in vsebin omogočajo skrbniku , da preko CRUD-a za zavihke in vsebino spreminja pripadajoče informacije .
Stran za registracijo omogoča kreiranje novega uporabnika , ki dobi pra - vice za kreiranje novih besedil .
Bodoči uporabnik vnese želeno uporabniško ime in geslo , nato pa geslo potrdi s ponovnim vnosom le tega .
3.1.2 Datotečna hierarhija Datotečna hierarhija spletne aplikacije predstavlja razporeditev map - paketov in datotek spletne aplikacije .
V primeru nadaljnjega razvoja sis - tema sliki 3.3 in 3.4 predstavljata začetno točko za spoznavanje z načinom implementacije .
18 3.1 Spletna aplikacija Sliki 3.3 in 3.4 ponazarjata hierarhijo in vlogo map spletne aplikacije .
Omenimo posebej še mapo includes , ki je lokacija vseh večkrat uporablje - nih skript .
Slika 3.5 : Prikaz notranje zgradbe paketa includes in opis nalog posameznih skript .
3.1.3 Izvedba nekaterih delov spletne aplikacije Za zaključek poglavja 3.
Spletna aplikacija opišimo še nekaj pomembnejših delov sistema in pojasnimo način implementacije le teh .
Dostop do podatkov v podatkovni bazi je implementiran s tehniko ORM .
Objekt vsebuje njen opis , vključno z njenim imenom v bazi , vsemi imeni atributov , njihovimi tipi in seznamom primarnih ključev .
Ta poskrbi , da se ob njenem Poglavje 3 : Načrt spletne aplikacije in podatkovne baze 19 kreiranju ( v skripti site _ init.php ) vzpostavi povezava s podatkovno bazo in inicializirajo vsi objekti ORM .
Vse spletne strani se dinamično generirajo s tehnologijo PHP glede na zahtevo , ki jo pošlje obiskovalec .
Osnovni postopek prikazuje slika 3.6.
Na Slika 3.6 : Prikaz osnovnega postopka generiranja spletne strani .
začetku generiranja spletne strani se najprej zažene skripta config.php .
Njihove vloge v 20 3.1 Spletna aplikacija sistemu so razložene na sliki 3.5.
Metoda kot argument sprejme spremenljivko , v kateri je shranjena vrednost zavihka , ki ga je uporabnik izbral .
Sledi glavni del dokumenta HTML , to je vsebina .
Za vsako narekovanje ( sestavlja ga več posnetkov ) , ki ga obiskovalec odpošlje iz snemalnika govora , se v omenjeni mapi ustvari začasna mapa z unikatnim imenom .
Ko snemalnik govora odpošlje vse posnetke in so ti uspešno shranjeni v mapo upload / » unikatno _ ime « , se pokliče skripta finish _ upload.php , ki za vsak posnetek v podatkovno bazo vnese podatke o govorcu , ime posnetka in prepis narekovanega besedila .
Njena naloga je , da v podatkovni bazi preveri , kateri posnetki posameznega besedila še niso bili dodani v datoteko ZIP .
Nato vanjo doda vse še nedodane posnetke ter v datoteko XML , katere primer je na sliki 3.7 , doda ustrezne informacije o še nedodanih posnetkih .
Vsako od njih sestavljajo od 0 navzgor oštevilčeni posnetki in datoteka XML , ki vsebuje informacije za vse omenjene posne - tke .
< / text > < filename > 2.wav < / filename > < / recording > < / slovenian _ speech _ recordings > Slika 3.7 : Primer datoteke XML , v kateri so za vsak posnetek zapisani podatki o govorcu , besedilo , ki ga je bralec posnel , in ime datoteke s posnetkom .
3.2 Podatkovna baza Role ID _ Role < pi > Integer < M > RoleName Variable characters ( 20 ) < M > Description Variable characters ( 50 ) ID _ Role < pi > Recording < pi > Integer < M > Variable characters ( 50 ) < M > Boolean Text ( 5000 ) < M > Variable characters ( 20 ) < M > Characters ( 10 ) < M > Variable characters ( 10 ) < M > Variable characters ( 15 ) < M > Variable characters ( 20 ) < M > < pi > Subject < pi > Integer < M > Variable characters ( 20 ) < M > Variable characters ( 20 ) < M > Short integer < M > Boolean < M > ID _ Page < pi > Slika 3.8 : Konceptualni model podatkovne baze sistema , ki omogoča zajem , hrambo in prenos govornih posnetkov .
Poglavje 3 : Načrt spletne aplikacije in podatkovne baze 23 V nadaljevanju je podan natančnejši opis zgornjih tabel .
Username Varchar ( 20 ) • Uporabniško ime .
LastLogin Timestamp • Datume in čas zadnje prijave .
Blocked Boolean • Stanje uporabnika .
24 3.2 Podatkovna baza c ) Domain Tabela predstavlja besedilo , ki ga ustvari uporabnik z namenom , da lahko obiskovalci preko snemalnika govora posnamejo to besedilo .
Ziped Boolean Ali je posnetek že v datoteki ZIP ( za prenos ) ?
Poglavje 3 : Načrt spletne aplikacije in podatkovne baze 25 e ) Page Tabela predstavlja naslove znotraj neke spletne strani ali podstrani .
Tabela 3.5 : Tabela naslova znotraj strani ali podstrani .
SubjectPage Varchar ( 20 ) • Ime datoteke PHP , ki gene - rira to spletno stran .
Position Short integer • Pozicija spletne strani – lokacija zavihka .
26 3.2 Podatkovna baza Poglavje 4 : Snemalnik govora 27 4 Snemalnik govora Snemalnik govora je implementiran kot applet .
Ker je applet vgrajen v spletno stran , je njegovo izvajanje omejeno z kontekstom brskalnika [ 14 ] , kar pomeni , da ima omejene pravice pri dostopu do sistemskih virov .
V datoteki XML so zapisani tudi podatki o lokaciji paketa JAR ( Java archive ) , v katerem je shranjena aplikacija , ime glavnega razreda le-te in dodatni parametri .
V primeru , da govorni signal nima ustrezne jakosti , mora aplikacija omogočiti uporabniku , da jo primerno uravna .
Poleg posnetkov je potrebno imeti tudi podatke o govorcih , ki so snemali , zato naj snemal - nik omogoča enostavno zajemanje tudi teh podatkov .
Ta je razdeljena na več logičnih enot – programskih paketov , kjer vsak opravlja določeno nalogo .
FileManager.java Slika 4.1 : Prikaz programskih paketov , ki sestavljajo aplikacijo snemalnika govora .
Paket gui.components vsebuje razred WavePanel.java , ki v vmesniku aplikacije predstavlja površino , kjer se izrisuje jakost vhodnega signala , ko uporabnik preneha s snemanjem določenega primera .
Paketa gui.components in gui.layout preko svojih razredov skrbita za pravilen izgled in razporeditev nekaterih grafičnih elementov snemalnika govora .
Ta paket se imenuje gui.event .
Vsi paketi , ki so del paketa gui so na sliki 4.1 označeni z vijolično barvo .
Ko uporabnik v rubriki 30 4.2 Izvedba nekaterih delov snemalnika Snemanje govora pritisne na gumb Predvajaj se preko razreda Sound.java začne predvajanje izbranega posnetka .
Naslednji paket predstavlja razrede aplikacije , ki skrbijo za vse ostale naloge .
Paket se imenuje utilities , njegove naloge pa obsegajo : • izbira besedil , ki so ponujena bralcu , • generiranje naslova za hrambo in predvajanje posnetkov , • pošiljanje posnetkov .
Drugi paket pa je netscape.javascript , ki je del izvajalnega oko - lja JRE .
Dobljeni vrednosti nato shranimo v lokalne spremenljivke glavnega razreda .
Podatek o ponujenem številu stavkov bralcu služi v funkciji createGUI ( ) kot zgornja omejitev za ustvarjenje grafičnih elementov za narekovanje v rubriki Snemanje govora .
Nato se v izvorno kodo snemalne strani , ki jo generira applet.php , doda JavaScript funkcijo sendTextToApplet ( ) , ki jo prikazuje slika .
Slika 4.3 : Primer JavaScript funkcije , ki izvede klic funkcije znotraj applet aplikacije , ki jo znotraj kode HTML označuje id captureApplet .
Postopek je prikazan tudi na sliki 4.4. 4.2 Izvedba nekaterih delov snemalnika Hramba govornih posnetkov LAN / Internet Slika 4.4 : Shema pošiljanja posnetkov z bralčevega računalnika na strežnik .
Poglavje 5 : Primeri uporabe 33 5 Primeri uporabe Poglavje prikazuje primere uporabe za navadnega obiskovalca , registrira - nega uporabnika in skrbnika spletne strani in lahko služi kot hiter priroč - nik za spoznavanje s spletno aplikacijo .
34 5.1 Obiskovalec Slika 5.2 : Na strani Branje v rubriki Besedila izbere želeno besedilo s kli - kom na naslov besedila .
Slika 5.3 : Obiskovalec lahko izbere tudi katero od zadnjih ustvarjenih bese - dil kar iz rubrike Zadnja besedila na strani Domov .
Poglavje 5 : Primeri uporabe 35 5.2 Uporabnik Uporabnik predstavlja vsakogar , ki je že izvedel postopek registracije v sistem in se lahko zato ob obisku strani vpiše v sistem .
Slika 5.4 : Uporabnik iz navigacijskega menija izbere opcijo Novo besedilo .
Slika 5.5 : V primeru , da uporabnik še ni vpisan , ga sistem preusmeri na vpisno stran .
36 5.2 Uporabnik Slika 5.6 : Uporabnika sistem usmeri na spletno stran , kjer lahko s klikom na gumb Naprej > začne z kreiranjem novega besedila .
.
Poglavje 6 : Zaključek 39 6 Zaključek V diplomskem delu je opisana spletna aplikacija za zajem , hrambo in pre - nos posnetkov slovenskega jezika .
Spletna aplikacija implementira sistem za upravljanje vsebin , ki omogoča spremembo tekstovnih vsebin spletnih strani .
Sistem omogoča tudi kreiranje novih besedil , katerih stavki so v poljubnem vrstnem redu ponujeni obiskovalcem spletne strani .
Podani so tudi načini izvedbe nekaterih pomembnejših delov oziroma postopkov , ki sestavljajo spletno aplikacijo .
Opisane so bile tudi spletne tehnologije Java Applet , Web Start in JNLP , ki so uporabljene pri implementaciji snemalnika govora .
Opisani smo tudi postopke implementacije nekaterih sestavnih delov snemalnika .
Spletna aplikacija je trenutno prilagojena za prikazovanje v brskalnikih Google Chrome in Mozilla Firefox .
Za nadaljnji razvoj omenimo le nekaj možnosti , ki zadevajo tako sple - tno aplikacijo kot tudi snemalnik govora .
Prva takšna razširitev je implementacija iskalnika , ki bi poiskal in prikazal posnetke , ki bi ustrezali iskalnim kriterijem .
Sedanja različica snemalnika govora je implementirana tako , da se posnetki izbrišejo iz obiskovalčevega računal - nika tudi , če ti predhodno niso bili uspešno preneseni na strežnik .
Narejen je bil na poletni delavnici na univerzi JHU ( John Hopkins University ) in je trenutno najširše uporabljana zbirka v sistemih strojnega prevajanja .
Korpus je kodiran v XML zapis po navodilih TEI Guidelines P4 .
Sistem za prevajanje iz slovenščine v angleščino z uporabo zbirke EGYPT in korpusa IJS-ELAN predstavlja osnovo tega dela , osnovni sistem je bil še razširjen .
Delo predstavlja še motive za izbiro izvornega in ciljnega jezika ; to je vzrok , zakaj smo izbrali prevajanje iz slovenščine v angleščino in ne obratno .
Osnovni model je bil razširjen z uporabo beležk v korpusu , posebno z uporabo kontekstno neodvisnih lem , ki niso odvisne od bogate uporabe sklanjatev ter spreganja v slovenskem jeziku .
Novi prevodi so bili ovrednoteni ter rezultati primerjani z osnovnim sistemom Pri vrednotenju so bili uporabljeni isti testni primeri .
Prevodi , narejeni z našim sistemom , so primerjani z referenčnimi prevodi , računa se razdalja med obema prevodoma .
Razdalja pomeni normalizirano najmanjše število vstavitev , brisanj , zamenjav ter premestitev besed v ocenjevani povedi v primerjavi z referenčno .
Prevode našega sistema so pri tej metodi ocenjevali strokovnjaki , razvrščali so jih v pet razredov od " popolne nesmiselnosti " do " popolnega prevoda " .
1 UVOD To delo predstavlja prvi sistem za samodejno prevajanje iz slovenskega jezika v angleški na osnovi statističnega strojnega prevajanja ( SMT - Statistical Machine Translation ) .
Zapletene matematične osnove , ki so temelj SMT , so prav tako odvrnile marsikaterega raziskovalca .
V uvodnih delih so predstavljeni osnovni pojmi SMT in splošni pojmi strojnega prevajanja .
Nadaljevanje prinaša prikaz trenutno najbolj obetajoče in vsesplošno priznane zbirke orodij za rokovanje z dvojezično-vzporednimi korpusi Egypt .
Zbirka je nastala kot rezultat poletne delavnice na univerzi JHU .
S pomočjo predstavljene zbirke orodij je bil postavljen sistem za prevajanje besedil iz slovenščine v angleščino .
V delu je predstavljen sam sistem ter najpomembnejše faze učnega in prevajalnega dela sistema .
Naslednje poglavje predstavlja osnovne motivacije za izbiro izvornega jezika – slovenščine .
Kot materni jezik avtorja tega dela je bil prvi na lestvici izbire .
Drugi razlog je bil , da v Sloveniji takšen sistem še ni bil postavljen in preizkušan , tretji razlog pa je v sami zapletenosti slovenskega jezika , ki prinaša dodatne izzive .
Osnovni algoritmi po [ 1 ] so bili razširjeni z uporabo lem v korpusu .
Testiranje ter predstavitev rezultatov in njihovo komentiranje zaključujejo to delo .
Strojno prevajanje na splošnih domenah trenutno še ne dosega kakovosti prevodov drugih računalniških področij .
Poleg osnovnih jezikovnih pravil kot so sintaksa , gramatika , sinonimi besed oziroma fraz v obeh jezikih , mora sistem poznati še semantiko oziroma pomen prevajanih sporočil .
Problem učenja računalnika rešujemo na več načinov .
Najuspešnejša pot je uporaba množice strokovnjakov , ki opišejo vse zakonitosti in izjeme obeh jezikov , ter predstavijo vse zakonitosti in izjeme samega prevajanja med obema jezikoma .
Drugi način je , da prepustimo računalniku , da se sam nauči sintaktičnih in semantičnih pravil , tako da pregleda velike količine dvojezično-vzporednih besedil .
Tehnika statistične obdelave besedil je primerna za velike količine besedil , ki edina ponujajo dovolj informacij o nekem jeziku oziroma dovolj informacij za prevod med dvema jezikoma .
Statistični pristop je bil na področju MT le redko uporabljan , razloge pa gre iskati v precej zahtevni matematični podlagi , ki je potrebna za uporabo in razvoj statističnih MT metod .
2.1 Statistično strojno prevajanje Razdelek predstavlja osnovne pojme statističnega strojnega prevajanja – SMT ter osnovne motivacije za razvoj te mlade in do sedaj zapostavljane veje računalništva .
Že od nekdaj je poskušal človek opisati jezik s pomočjo pravil , prvi primeri segajo vsaj 2000 let nazaj , pri opisovanju večine naravnih jezikov s strogimi pravili pa se pojavijo težave .
Natančno določanje pravil jezika in ukleščenje v njihove stroge okvire ni obrodilo sadov .
Glavno orodje za iskanje takšnih vzorcev je štetje raznovrstnih objektov , bolj strokovno izraženo statistika .
Modeli so natančneje predstavljeni v 2.6. 2.2 Vzporedni korpus Vzporedni korpus predstavlja množico povedi iz dveh jezikov , izvornega in ciljnega .
Ciljni ter izvorni jezik se lahko pri uporabi tudi zamenjata , saj so tudi povedi izvornega jezika točni prevodi ciljnega .
Vzporedne korpuse uporabljamo kot osnovo za učenje prevajanja .
Uporabnost je zagotovljena s sodobnimi teksti z bogato vsebino ter aktivnimi tematikami .
Tabela 1 : Vsebina korpusa po sklopih ter z opisi Zbirka G. Orwell : Nineteen Eigty Four ( 1984 ) The Slovene translation of the book was published by ( Knjižnica Kondor ) , Mladinska knjiga in 1983. 2.3 Problem nepopolnih podatkov ( Scarce data problem ) Razdelek opisuje učenje na nepopolnih , redkih podatkih .
Največja težava statističnega strojnega prevajanja je učenje na nepopolnih , redkih podatkih .
Osnovni korpus ima določeno število dovolj dobro opisanih pravil ter dovolj pogosto zastopanih besed , vsebuje pa tudi velik odstotek slabo predstavljenih besed ter pravil .
Šumne podatke izločamo s pomočjo zakonitosti v podatkih , z izločanjem ekstremov .
Pri ročnem pregledovanju podatkov nam pomagajo strokovnjaki , v našem primeru jezikoslovci , ki sodelujejo že pri sestavljanju gradiv za korpus .
S pomočjo njihovih izkušenj lahko že v začetni fazi definiramo manjši , a bolj informativen korpus , ki je lažji za obdelavo .
Direktno prevajanje besed ne prinaša dovolj dobrih prevodov , vseeno pa obstaja določena povezava med posameznimi besedami v obeh povedih .
Primer povezav si lahko ogledamo na prikazu Slika 1.
Slika 1 : primer povezav med besedami v angleški ter slovenski povedi .
Formalna definicija poravnave : Niz parov < j , i > , kjer vsak par predstavlja povezavo med j-to besedo f ( slovenska beseda ) ter i-to besedo e ( angleška beseda ) .
Verjetnost lahko dobimo kot ( 1 ) vsoto vseh poravnav e in f. V našem sistemu uporabimo ta postopek samo za prva dva modela ( prevod besed ter lokalna poravnava ) , pri ostalih modelih pa aproksimiramo po naslednjem postopku : med učenjem najdemo najverjetnejšo poravnavo in izračunamo vsoto v ozki okolici .
2.5 Trifazni vzorec analiza-prenos-sinteza Za izboljšanje rezultatov prevajanja se , poleg opisanih modelov , uporablja različica trifaznega vzorca analiza-prenos-sinteza ( Analysis-Transfer-Synthesis ) .
Samo prevajanje ne poteka med osnovnim slovenskim in angleškim besedilom , ampak med vmesnima različicama obeh besedil .
Vzorec je sestavljen iz treh faz : • Analiza Ob učenju se vsak par povedi < e , f > predela v vmesni povedi < e ' , f ' > .
Angleška poved se prevede v vmesno poved , ki se lahko obrne nazaj v izvorno .
• Prenos Sama faza prenosa je glavni del sistema ter predstavlja definicijo in uporabo vseh opisanih modelov .
Uporaba predstavljenega vzorca ponuja trojno izboljšanje : • obvladovanje variant v besednjaku , ki zakrivajo pravila med jezikoma ; • zmanjšanje velikosti obeh besednjakov ; • znižanje bremena sistema z mešanjem besed ter izravnavo povedi .
Naš sistem v tej fazi ne spreminja besedil , saj je zaradi kompleksnosti problema ta faza izpuščena .
Sistem uporablja samo male črke in se tako izogne problemu velikih in malih črk , napake v črkovanju pa poskušamo odpraviti že na ravni korpusa .
• Lingvistična normalizacija predstavlja niz premikov , vstavljanj ter prepisov besed , ki služijo zbližanju obeh jezikov .
Ta del je še odprt za nadaljnji razvoj , zato je pri snovanju našega sistema izpuščen .
2.5.1 Uporaba trifaznega vzorca Do sedaj smo si ogledali modele , ki služijo prevajanju slovenskih besedil v angleška .
Slika 2 : Faze prevajalnega sistema 2.5.2 Analiza Slovensko besedilo f se pretvori v vmesno besedilo f ' , kot je opisano v poglavju 2.5. 2.5.3 Prenos V tej fazi se opravi dejansko dekodiranje besedil .
Drugi korak razširi H * ter s pomočjo izpiljenih modelov ponovno točkuje razširjeni niz .
Elementi H ( i ) so delni prevodi f ' .
Točkovanje hipotez dobimo s pomočjo produkta verjetnosti : ( 2 ) Zaradi hitrosti je niz kandidatov dekodiranja omejen na 140 najboljših angleških vmesnih povedi H * .
H * povečamo z brisanjem posameznih besed , dodajanjem ali spreminjanjem posameznih elementov .
Prvi uvaja v teorijo verjetnostnih modelov , drugi prikazuje shemo dekodiranja , tretji predstavlja osnove modeliranja jezika ter zadnji , najpomembnejši , prikazuje prevajalne modele , razvite v okviru projekta Candide .
Statistično strojno prevajanje do sedaj še ni doseglo rezultatov , ki bi omogočali izdelavo komercialnega prevajalnega sistema oziroma izdelavo uporabnega prevajalnega sistema .
V začetku devetdesetih so pri IBM zaključili s projektom , ki je obrodil kar nepričakovano dobre rezultate .
Temeljil je na samodejni statistični analizi dvojezičnih besedil ( rezultati in zaključki so opisani v [ 1 ] ) .
Oglejmo si primer prevoda besedila iz nekega jezika , vzemimo slovenski jezik , v besedilo v angleškem jeziku .
Za poved f v slovenskem jeziku si zamislimo , da je bila zgrajena iz pripadajoče povedi e v angleškem jeziku .
Angleška poved je prepotovala šumni komunikacijski kanal z zanimivo lastnostjo , vsako angleško poved prevede v slovensko .
Osnovna ideja sistema Candide je , da lahko eksperimentalno določimo lastnosti našega » kanala « , ki jih lahko zapišemo s pomočjo matematičnih pravil .
Torej iščemo : ( 4 ) Z uporabo Bayesove formule dobimo : ( 5 ) S zapišemo verjetnost da dobimo f kot izhod , če je e vhod našega prevajalnega kanala .
To funkcijo imenujemo jezikovni model ( language model ) .
Obe funkciji neodvisno porajata rezultata za kandidata za angleški prevod e. Prevajalni model zagotavlja , da besede v povedi e izražajo vsebino , zapisano v f. Jezikovni model zagotavlja , da je e res poved .
Problem učenja parametričnega modela na podatkih c je enostavno iskanje maksimuma .
Pogosto iščemo več kot le verjetnostni model opazovanih podatkov c. Iščemo možno skrito statistiko h , ki je odvisna od c , in je ne moremo direktno določiti .
h je v splošnem podmnožica H ( vse dovoljene statistike ) .
Najenostavnejši prevajalni model bi sestavili kot enostavno prevajanje slovenskih besed v angleške .
Takšno prevajanje le slabo odraža prevode iz realnega sveta , besedni red se spreminja , med prevodom se porajajo besede in besedne zveze ter nekatere tudi izginjajo .
Tako bomo za model prevajanja postavili ogromno parametrično enačbo .
Enačbo bomo postavili s pomočjo EM-učenja na dvojezično-vzporednem , slovensko-angleškem korpusu .
Parametrično enačbo bomo postavili tudi za model jezika .
EM postopek bomo opravili na angleškem besedilu ( postavili bomo verjetnosti pojavljanja vseh besed ) .
2.6.2 Dekodiranje Iskanje angleških besed , ki maksimirajo enačbo ( 2 ) brez omejitev , torej preiskovanje celotnega prostora angleških besed , je prehud problem za še tako dobre računalnike .
2.6.3 Modeliranje jezika Naj bo e niz angleških besed e1 ...
Model jezika ponuja verjetnost , da e predstavlja slovnično in semantično pravilno tvorjeno poved .
Kot primer vzemimo velikost besednjaka 10000 besed , kar je zelo majhna številka za vsak naravni jezik ter velikost fraz na 10 ( k = 10 ) .
Največje število trigramov v učnem korpusu je le | c | ( če bi se vsak trigram pojavil le enkrat ) , število vseh možnih trigramov pa je , ki je še vedno preveliko število za vsak primerno velik besednjak .
Model trojic ne upošteva semantičnih in sintaktičnih odvisnosti med besedami , ki so oddaljene več kot za dve mesti ( ne sodijo v isto trojico ) .
Sistem Candide uporablja dva prevajalna modela in sicer že opisanega , ki temelji na EM-učenju ter model največje entropije ( maximum-entropy model ) .
Uporabljena različica EM modela temelji na petih začasnih modelih .
Zadnji model predstavlja že naučeni prevajalni model .
Formulacija modela 1 ( prevajanje besed ) usmerja EM algoritem h globalnemu maksimumu .
Modeli so poimenovani z osnovnimi lastnostmi in tudi s popularno različico imena , ki se je med uporabniki veliko bolje prijela ( IBM-1 , ..
2.6.4.1 Prevajanje besed , ( word translation IBM-1 ) Je najenostavnejši model , ki kaže verjetnosti posameznih besednih prevodov .
2.6.4.2 Lokalna poravnava , ( local alignment IBM-2 ) Ta model določa lego angleške besede v dvojezičnem korpusu , ki predstavlja prevod izbrane besede f iz slovenske vzporedne povedi .
Nastajajo iz » ničte « besede v izvornem jeziku .
Formalno zapišemo to verjetnost s tremi spremenljivkami : ( 10 ) Formula predstavlja verjetnost , da je mesto j v slovenski povedi dolžine m poravnano z lego aj v neki angleški povedi dolžine l , ki je prevod prej opisane slovenske povedi .
2.6.4.3 Plodnost , ( fertility IBM-3 ) Ena sama angleška beseda lahko med prevajanjem » rodi « nič , eno ali celo več slovenskih besed .
Implicitno smo to dejstvo zajeli že s prejšnjim modelom , nov model pa nam eksplicitno določa verjetnost , da se neka angleška beseda prevede v določeno število slovenskih .
Plodnost je število slovenskih besed , ki jih proizvede angleška beseda ei ob prevodu , samo verjetnost pa zapišemo kot : , ( 11 ) ki podaja verjetnost , da je vrednost enaka n. 2.6.4.4 Poravnava na osnovi razredov , ( class-based alignment IBM-4 ) V prejšnjem modelu lahko opazimo , da so » plodnosti « besed odvisne od samih besed , poravnave pa ne .
Nov model odpravlja pomanjkljivost s pomočjo parametrov , ki temeljijo na razredu besede f. Vse besede f iz slovenskega besednjaka ter vse besede e iz angleškega razvrstimo v razrede ( naša različica je omejena na 50 razredov ) .
2.6.4.5 Poravnava brez nesmislov , ( non-deficient alignment IBM-5 ) Dva predhodna modela imata hudo pomanjkljivost , saj pripisujeta več kot ničelno verjetnost poravnavam , ki sploh ne ustrezajo slovenskim besedam .
Dve besedi lahko z enako verjetnostjo ležita na istem mestu v prevodu , besede ležijo pred začetkom in po koncu povedi .
Zadnji model takšne nesmisle odkrije in odstrani .
Verjetnost popravimo z uvajanjem » skritih « poravnav aJ = a1 …
Dobimo naslednji model : ( 12 ) kjer je : • - verjetnost dolžine povedi ; • - verjetnost pojavitve povedi f , če je izvorna poved e ( izvorna poved šumnega kanala ) ; • - verjetnost poravnav Z razširitvijo odvisnosti verjetnosti poravnav na razdalj aj – aj-1 z absolutnih pozicij aj dobimo homogeni , skriti Markov model , krajše HMM [ 9 ] .
Nov model je , poleg še dodatnih izboljšav , implementiran v novejši različici programa za gradnjo parametričnih prevajalnih modelov GIZA + + 3.1.2. 2.6.4.7 Kontekstno odvisni modeli Vsi do sedaj opisani modeli prevajajo besede neodvisno od njihove okolice ( če zanemarimo trojke ) .
Vsaka funkcija vrača nek boolov odgovor o slovenski besedi f , angleški besedi e ter angleškem kontekstu E. Učna metoda iterativno išče majhno podmnožico : , ( 13 ) ki pojasnjuje pomen angleške besede v kontekstu .
3 EGYPT Na poletni delavnici leta 1999 na JHU ( John Hopkins University ) so po vzoru [ 1 ] izdelali zbirko orodij , ki omogočajo postavitev popolnega SMT sistema , osnovanega na dvojezičnih vzporednih korpusih .
Sestavljena naj bo iz orodij za pripravo korpusov , orodij za dvojezično učenje ( postavitev parametričnih modelov ) ter orodij za takojšnje dekodiranje tekstov .
V zadnjih dneh delavnice naj bi postavili prevajalni sistem za nek nov jezik v enem samem dnevu ( potrditev enostavnosti uporabe orodij ) .
Modul se imenuje GIZA in je osnovan na algoritmih in modelih predstavljenih v [ 1 ] ter opisanih v 2.6.
Osnovna različica , napisana na delavnici uporablja samo modele IBM-1-2-3 , poznejše različice pa prinašajo implementacijo modelov IBM-4 , IBM-5 .
Nova različica , z imenom GIZA + + , uporablja nov model HMM ( skriti Markovski model ) namesto IBM-2 .
Besede v povedih morajo biti pretvorjene v zaznamke iz naravnih števil , in sicer najmanjše število opisuje besedo , ki se največkrat pojavlja .
S pomočjo vnaprejšnjih povezav pa po uporabi pretvarjamo nize števil v povedi .
Orodje uporablja HMM model , glej 2.6.4.6 , ki po osnovnih testiranjih izboljša natančnost prevajanja .
Orodje ni del osnovnega paketa Egypt , avtor je osnovno različico programa izboljšal in jo ponuja pod istimi pogoji kot osnovni paket .
Za delovanje potrebuje naučene prevajalne modele postavljene po vzoru zbirke Egypt ( predvsem GIZA / GIZA + + ) ter jezikovni model , postavljen z zbirko orodij » CMU Statistical Language Modeling Toolkit « .
Verjetnost , da se neka beseda prevede v izbrano slovensko besedo .
Verjetnost za vstavljanje NULL besed ( besed , ki služijo za porajanje novih besed v prevajanem jeziku ) .
Program sprejema kot vhod datoteko v SGML obliki , ki vsebuje dve povedi .
3.1.5 Whittle Razdelek predstavlja orodje za pripravo dvojezičnega vzporednega korpusa .
• Zamenja besede s števili glede na frekvenco ponovitev v korpusu .
Razredi so osnova modela IBM-4 .
Sama izdelava razredov je dolgotrajen proces , ki se izvaja skoraj toliko časa kot učenje vseh ostalih modelov .
Orodja so nastajala med snovanjem in implementacijo sistema , predstavljajo pa zbirko enostavnih programčkov za obdelavo besedil ter zbirko skript za lažjo uporabo in samodejnost postopkov .
Poleg orodij za delo z besedili je pripravljeno še orodje za testiranje kakovosti prevodov ( evaluation tool ) , ki po metodi SA / TA ( urejevalna razdalja , glej 10 ) samodejno oceni kakovost prevodov .
Ta zapis bere orodje za pripravo korpusa Whittle .
Kot parametre sprejme ime vhodne ter ime izhodne datoteke .
Med parametri navedemo metodo ( simple ter translation ) ter ime vhodne datoteke .
Kot vhod sprejme tudi prevode s standardnega vhoda ( STDIN ) .
Rezultat je niz ocen , za vsak par referenčni / ocenjevani prevod .
Omogoča samodejno prevajanje večjega števila povedi .
Strežnik omogoča prevajanje iz slovenskega v angleški jezik .
Orisani so načrt postavitve sistema , faze priprave korpusa in samega učenja .
Slika 3 : prikaz celotnega učnega procesa Učni proces sestavlja več ločenih modulov .
Na začetku potrebujemo dvojezični vzporedni korpus , saj je naš sistem osnovan na IJS-ELAN korpusu .
Povedi so zapisane vsaka v svoji vrstici ; istoležne povedi so prevod iz enega jezika v drugi in obratno .
• Jezikovni modeli nastajajo s pomočjo zbirke orodij za obdelavo besedil ter postavljanje jezikovnih modelov CMU ( Cambridge language modelling toolkit version 2 ) , ki zgradijo jezikovni model angleškega jezika na osnovi angleškega dela korpusa .
• Prevajalni modeli nastajajo s pomočjo orodij zbirke Egypt .
Predelan korpus podamo kot vhod orodju Whittle , ki omogoča razdelitev korpusa na učno in testno množico ter na predelavo v zapis , ki ga sprejme naslednji program v verigi , GIZA++ .
Ta zapis je podan v obliki dveh osnovnih tipov datotek .
Prva vsebuje vse besede razporejene po frekvenci pojavljanj v korpusu .
Besede so zapisane kot naravna števila .
GIZA + + je glavni modul sistema in omogoča izdelavo prevajalnih modulov .
Prevajalni modeli in jezikovni model predstavljajo zbirko tabel za preslikavo med slovensko in angleško povedjo .
Slika 4 : prikaz prehoda učnih primerov pri učenju prevajalnih modelov Whittle predela vhodni korpus v obliko , primerno za obdelavo s programom GIZA++ .
Vhodne povedi sprejema prek nastavljivih TCP / IP vrat , na istem naslovu se po poizvedbi nahaja tudi odgovor ( angleški prevod vhodne povedi ) .
Prevajalni sistem lahko uporabljamo prek skripte , napisane v programskem jeziku perl , ali prek spletnega vmesnika .
Spletni vmesnik omogoča enostavno uporabo prevajalnega sistema praktično vsem uporabnikom , saj je dostop do strežnika možen z vsakim spletnim brskalnikom .
Slika 6 : skripta dostavlja testne povedi naučenemu sistemu , zbrani prevodi so ocenjeni z metodo ureditvene razdalje Slika 6 kaže način izvedbe samodejnega testiranja po metodi SA / TA opisani v 10.
Testiranje je bilo izvedeno s pomočjo testnih primerov , ki jih je izbral modul Whittle .
Ti primeri vsebujejo tudi referenčne prevode , saj so del dvojezično-vzporednega korpusa .
Prevajalni modul se sprehodi prek vseh primerov ter prevede slovenske povedi na novem sistemu .
Slednji izpiše ocene kakovosti prevodov za vsak par .
4.1 Omejitve sistema Razdelek predstavlja omejitve prevajalnih sistemov .
Tako so se avtorji laže osredotočili na postavljene cilje in na postavljene probleme .
Uporaba šumnikov bi samo povečala težave pri postavljanju strežnika .
• Vse velike črke v korpusu so bile pred učenjem spremenjene v majhne .
• V korpusu so bila odpravljena vsa ločila , povedi so nedokončane , napakam pa laže sledimo .
5 SLOVENŠČINA Razdelek predstavlja motivacije pri izbiri izvornega jezika .
Opisane so značilnosti slovenskega jezika in težave , ki izhajajo iz teh posebnosti .
Glavna značilnost je dvojino , ki nas loči tudi od večine slovanskih jezikov .
Dvojina pri samem prevajanju ni problematična , če je le v korpusu dovolj povedi , ki jo uporabljajo .
Večina samostalnikov lahko tvori edninsko , dvojinsko ter množinsko obliko v šestih sklonih .
Kot materni jezik avtorja tega dela je bil prvi na lestvici izbire , dodatni razlog pa je , da trenutno še nimamo strojnega prevajalnika za ta jezik v poljubni tuj jezik .
Z izbiro slovenščine kot izvornega jezika želimo utreti pot izdelavi prevajalnika komercialne kakovosti za pomembnejše tuje jezike .
Razlogi za izbiro angleščine kot ciljnega jezika so dovolj enostavni in nazorni .
Angleščina je trenutno najširše uporabljan jezik v računalniškem svetu , smernice širitve uporabe jezika pa kažejo na še večjo razširjenost .
7 UPORABA LEM V DVOJEZIČNEM KORPUSU Razdelek predstavlja poskus izboljšave osnovnega delovanja prevajalnega sistema s pomočjo uvajanja informacije o jezikih v obliki lem .
Pregibne besedne vrste npr. " mize " , " mizi " pretvorimo na enotno osnovo , proces imenujemo lematizacija .
Z redukcijo besednih oblik na leme smo želeli omiliti največje pomanjkljivosti našega sistema .
Sistem je osnovan na premajhnem korpusu , tukaj pa je še vedno prisoten problem redkih podatkov ( scarce data problem ) .
Dvojezično – vzporedni korpus ELAN , ki je osnova našega sistema , je že lematiziran .
Pri učenju sistema smo uporabili lematizirane slovenske povedi ter osnovne angleške povedi .
Tako naučen sistem naj bi bil bolj odporen na sklanjanja in pregibanja v slovenskem jeziku , ki so v angleščini manj uporabljana .
Nov izgled korpusa : manufacture in which all the material of chapter 1 and 2 use must be wholly obtained izdelava pri kateri morati biti ves uporabljen material iz poglavje 1 in 2 v celota pridobiti Število različnih besed v slovenskem delu korpusa smo zmanjšali iz 39221 na 27211 oziroma na 69 odstotkov velikosti slovenskega dela osnovnega korpusa .
Testiranja so bila izvedena na enakih testnih primerih , obširneje so predstavljena v 10. 7.1 Lematiziranje izbranih besednih vrst Z lematiziranjem vseh besednih vrst smo sicer približali oba jezika , izgubili pa smo veliko podatkov o osnovni povedi : • čas povedi , • spol osebka , • število , • …
Postaviti smo želeli nov sistem , ki bi izkoriščal prednosti lematiziranja , hkrati pa odpravil opažene napake .
Nov sistem je bil naučen na podlagi korpusa sestavljenega iz besed v lematizirani obliki , besedam smo dodali morfosintaktične opise iz osnovnega korpusa , ki so s pomočjo leme popolnoma določali izvorno besedo .
Uvedli smo še poseben znak ' * ' , ki omogoča posploševanje prevajalnih pravil .
Mesto , kjer je zapisan znak * lahko sprejme poljuben opis , poljuben znak pravil .
Tabela 2 kaže pravila za opis besed ter primere uporabe .
IJS-ELAN oznake za to množico so Vm / N / A. Ostale besedne vrste , npr pomožni glagol , zaimek ( oznake iz IJS-ELAN Vc / P ) pa so bile uporabljene v nespremenjeni obliki .
Tabela 2 : Pravila za izbiro lem ter morfosintaktičnih opisov Besedna vrsta Za ostale besedne vrste izpišemo lemo Nabor besednih vrst za lematiziranje in predvsem priprava pravil sta bila pripravljena samo za preverjanje pravilnosti naših trditev .
Natančnejša analiza besedil ob pomoči jezikoslovcev bi verjetno prinesla drugačen nabor besednih vrst za lematiziranje .
Tako pripravljen sistem je skoraj neuporaben za ročno uporabo , saj kot vnos zahteva lematizirane besede z morfosintaktičnimi opisi .
zive zivali vse zivali iz poglavja morajo biti v celoti pridobljene meso in uzitni mesni klavnicni izdelki izdelava pri kateri morajo biti vsi uporabljeni materiali iz in poglavja v celoti pridobljeni ribe in raki mehkuzci in drugi vodni nevretencarji izdelava pri kateri morajo biti vsi uporabljeni materiali iz poglavja v celoti pridobljeni Slika 7 : Primeri povedi , ki so bile osnova nadaljnji obdelavi .
Povedi so brez ločil ter posebih slovenskih črk ( čšž ) .
ziv@A * * * zival@Ncfp * ves zival@Ncfp * iz poglavje@Ncns * morati biti v celota@Ncfs * pridobiti meso@Ncns * in uziten@A * * * mesen@A * * * klavnicen@A * * * izdelek@Ncmp * izdelava@Ncfs * pri kateri morati biti ves uporabljen@A * * * material@Ncmp * iz in p oglavje@Ncns * v celota@Ncfs * pridobiti riba@Ncfp * in rak@Ncmp * mehkuzec@Ncmp * in drug voden@A * * * nevretencar@Ncmp * izdelava@Ncfs * pri kateri morati biti ves uporabljen@A * * * material@Ncmp * iz poglavje@Ncns * v celota@Ncfs * pridobiti Slika 8 : Primeri predeleanih povedi z morfosintaktičnimi opisi in lemami Večina pozitivnih učinkov lematizacije je še vedno prisotna pri lematiziranju izbranih besednih vrst : • Samostalniki .
Povečamo besedni zaklad , uporabljamo osnovne oblike samostalnikov miza , mizi , mize – table • Pridevniki z različnimi končnicami ( rdeč , rdeča , rdeče ) se vsi preslikajo v eno angleško obliko ( red ) moder , modrega , modremu – blue Informacija o času je implicitno zapisana v pomožnih glagolih ; lematizacija te besedne vrste bi informacijo o času izpustila .
8 SLOVAR V DVOJEZIČNEM KORPUSU Razdelek predstavlja poskus dodatne izboljšave osnovnega delovanja prevajalnega sistema s pomočjo uvajanja informacije dodatne informacije o prevodih v obliki dvojezičnega slovarja .
Eden največjih problemov strojnega prevajanja je pridobitev dovolj velikega besednega zaklada .
Najenostavnejši način za dopolnitev besednega zaklada je uvedba slovarja .
Vsako besedo slovarja smo predstavili kot dodatno poved v korpusu .
Opravili smo vsa testiranja , rezultati so enostavno primerljivi z ostalimi sistemi , predstavljeni so v poglavju 10. 9 UPORABA PREDSTAVLJENIH METOD V PREVAJALNIH SISTEMIH Razdelek predstavlja uporabo metod za dodatno pomoč pri učenju prevajalnih sistemov .
Jezikovni model je pri vseh sistemih enak , saj je opis ciljnega jezika neodvisen od izbire prevajalne metode .
Vsi sistemi so bili postavljeni na osnovi istega korpusa , posamezne metode pa so upoštevale različna pravila za obdelavo izvornih povedi ter njihovih prevodov .
9.1 Osnovni prevajalni sistem Osnovni prevajalni sistem , postavljen na osnovi orodij zbirke Egypt in korpusa IJS-ELAN , je bil uporabljen kot dokaz uporabnosti orodij zbirke Egypt ter primernosti metod tudi za slovenski jezik .
Podobni sistemi so bili že postavljeni za kar nekaj jezikovnih parov , večinoma v kombinaciji z angleščino .
Sistem je bil uporabljen tudi kot referenčni sistem , ki naj bi ga nove metode izboljšale oziroma dobri rezultati bi pokazali primernost metod , slabi pa pokazali slabosti preizkušanih metod .
9.2 Sistem s popolnoma lematiziranim slovenskim delom korpusa Korpus ELAN , tudi slovenska različica IJS-ELAN , vsebuje besedilo v osnovnem jeziku ter prevedeno besedilo .
S pomočjo teh označb smo postavili nov korpus , kjer smo namesto izvornih slovenskih besed uporabili leme , osnovne oblike besed .
Slovenski del korpusa je bil predstavljen samo z lemami .
Slovenščina je visoko pregiben jezik s skoraj prostim besednim redom .
Z redukcijo besednih oblik na leme smo želeli omiliti razlike med obema jezikoma .
9.3 Sistem z lematiziranimi izbranimi besednimi vrstami Sistem je naučen na podlagi korpusa , sestavljenega iz dela besed v lematizirani obliki ter ostanka v nespremenjeni obliki .
IJS-ELAN oznake za to množico so Vm / N / A. Ostale besedne vrste , npr pomožni glagol , zaimek ( oznake iz IJS-ELAN Vc / P ) , pa so bile uporabljene v nespremenjeni obliki .
9.4 Osnovni sistem z dodanim slovarjem Uporabili smo enostaven besedni slovar ; tj. zbirko slovenskih besed ter njihovih enobesednih prevodov .
Vsaka beseda v slovarju predstavlja eno vrstico v razširjenem korpusu .
Verjetnost besednih prevodov besed prisotnih v slovarju , je gotovo večja od nič .
• Besede , ki so v slovarju in tudi v korpusu bi dobile večje verjetnosti za direktne prevode v besede drugega jezika ( spet v slovarju ) .
• Besedam , ki so v slovarju in jih ni v korpusu , bi modeli pripisali verjetnost , ki je večja od nič ; prevajalni sistem bi jih prepoznal in uporabil pri prevodu .
10 TESTIRANJE Poglavje predstavlja motivacijo za izvedbo testiranja sistema ter omejitve in sredstva , ki smo jih pri tem uporabili .
Pri strojnem učenju se pojavlja ravno toliko metod za vrednotenje sistemov prevajanja , kot je samih metod učenja ( učenja strojnega prevajanja ) .
Tolikšno število metod izvira iz dejstva , da se strokovnjaki ne uskladijo , kaj sploh je dober prevod , kaj šele , kakšna so merila za ocenitev prevoda .
Ovrednotili smo štiri sisteme : • Osnovni prevajalni sistem , postavljen na osnovi orodij zbirke Egypt in korpusa IJS-ELAN • Sistem s popolnoma lematiziranim slovenskim delom korpusa , slovenski del korpusa je bil predstavljen samo z lemami .
• Sistem z lematiziranimi samo izbranimi besednimi vrstami , samo izbrane besedne vrste so bile lematizirane , ostalo slovensko besedilo je bilo nedotaknjeno .
Naša naloga pri izbiri metod je bila zapletena , še posebej z osnovo našega sistema , ki je vezan na slovenski jezik s svojimi posebnostmi in slabo raziskanostjo .
Samodejna metoda se še nadalje loči na dve podrazličici , ki pa se razlikujeta le v upoštevanju ene količine .
10.1 Urejevalna razdalja Samodejna metoda je poimenovana enostavna natančnost oziroma natančnost preslikav .
Uporabili smo dve različni izvedenki te osnovne metode po [ 8 ] : • SA , simple accuracy , enostavna natančnost ( 14 ) Kjer je I število vrinjenih besed ( Inserted ) , D število brisanih ( Deleted ) , S število zamenjanih besed ( Substituted ) in R dolžina referenčne povedi ( Reference length ) .
Po [ 8 ] je natančnost preslikav primernejša mera za opisovanje preslikav , saj pravilne besede na napačnih mestih štejejo kot ena sama napaka in ne kot dve ( brisanje besede ter vrivanje na pravo mesto ) .
Porazdeljevanje prevodov v razrede opravlja človek , po možnosti strokovnjak .
Za preverjanje kakovosti ocenjevanja je uvedena še posebna skupina referenčnih prevodov , ki se prav tako razvrščajo v razrede .
10.3 Uporaba metod Metodi sta bili še dodatno testirani s pomočjo zbirke prevodov ( ročni prevodi testne množice ) .
Ta množica prevodov je bila postavljena kot idealni prevodi in njena ocena predstavlja oceno h kateri stremimo .
Testna množica je bila ocenjena z metodo SA / TA s koeficientom 2,82 oziroma s 36,84 odstotki ( 36,84 % predstavlja 100 %) Tabela 3 : rezultati testne skupine z metodo SA / TA Dodatno normaliziranje smo uvedli s pomočjo ročnega ocenjevanja testne množice prevodov .
Testna množica je bila ocenjena z metodo SSER s koeficientom 4,48 oziroma s 87 odstotki .
Testiranje s pomočjo opisanih metod se izvaja ( s testnimi primeri ) na naučenih modelih .
Metoda SSER , ki zahteva prisotnost eksperta , bi bila za celotno desetkratno prečno preverjanje preveč zamudna .
Opravili smo le nekaj deset ocenjevanj obeh sistemov ( na manjši množici testnih primerov , okrog 100 primerov ) .
Za pomoč pri testiranju , predvsem ročnemu delu , je bil izdelan dodatek k osnovnemu spletnemu vmesniku sistema za prevajanje , ki je omogočal izbiro povedi ter zapis ocen v podatkovno bazo .
Rezultati , podani v 11 , so razdeljeni na preverjanje kakovosti prevajanja osnovnih algoritmov ter izboljšanih različic .
Testiranje je bilo izvajano s pomočjo testnih primerov predstavljajo primere iz iste učne domene in niso del učnega korpusa , .
Tuji testni primeri niso bili uporabljeni , saj bi bila uporaba samodejne metode preverjanja onemogočena .
Isti testni primeri so bili uporabljeni pri vrednotenju vseh sistemov , osnovnega ter sistemov , ki uporabljajo obdelana besedila .
Za preverjanje metod je bila izdelana še dodatna množica umetnih testnih primerov ter zbirka umetnih referenčnih prevodov .
11 REZULTATI Poglavje podaja rezultate testiranja po posameznih kategorijah in kriterijih .
Zapisane so tudi razlage rezultatov in možne izboljšave Testiranje je potekalo v dveh stopnjah ; najprej testiranje kakovosti prevodov osnovnega sistema , v nadaljevanju pa še testiranje novega sistema .
Rezultati so med seboj primerljivi , same metode pa niso primerljive z metodami ostalih avtorjev .
11.1 Predstavitev rezultatov SA / TA samodejna metoda je bila izvedena na 519 primerih , preverjanje s testno množico pa na 100 primerih .
SSER metodo je izvajalo osem izvedencev različnih izobrazb : 4 univerzitetni diplomirani inženirji računalništva in informatike , 2 magistra računalništva in informatike ter 2 študenta angleščine in slovenščine .
Rezultati posameznih ovrednotenj so podani v tabeli 5.
Tabela 5 : Primerjava ocen osnovnega sistema , sistema z lemami ter testne množice prevodov ; primerjava je bila izvedena z obema metodama .
Dodane so popravljene vrednosti s popravkom glede na rezultate ocen testnih prevodov * Ocena osnovnega sistema je normalizirana z rezultatom testne skupine pri metodi SSER .
Testna skupina je upoštevana kot najboljši možen prevod Tabela 7 : Utežene ocene po metodi , utež je izbrana na osnovi predpostavke , da je testna skupina idealno prevedena ( 36,84 % ~ 100 %) 11.2 Rezultati vrednotenja osnovnega sistema Prevodi osnovnega sistema so kar vzpodbudni .
Osnovna metoda je kar obetajoča in primerna tudi za slovenski jezik .
11.3 Rezultati vrednotenja sistema z uporabo kontekstno neodvisnih lem Metoda razširitve osnovnih algoritmov z uporabo lem se je izkazala kot uspešna , saj se je natančnost prevodov , po vrednotenju z obema metodama , občutno izboljšala .
Izboljšavo lahko predstavimo tudi s številkami , rezultati podani v tabeli Tabela 5 , razdeljeni na metodi vrednotenja : • Metoda urejevalne razdalje ( samodejna , velika testna množica ) : • Osnovni sistem : 13,95 ; • Sistem s popolnoma lematiziranim slovenskim besedilom : 14,99 ; ( 16 ) • Metoda SSER ( ročna , s pomočjo poznavalcev , manjša množica ) : • Osnovni sistem : 19,12 ; • Sistem s popolnoma lematiziranim slovenskim besedilom : 24,12 ; ( 17 ) Obe metodi sta ugotovili kar občutno izboljšanje , predvsem ročna metoda .
Rezultati slednje pa vseeno niso dovolj kredibilni , saj je bilo testiranje izvedenoo na majhni množici .
Pri pretvarjanju osnovnih oblik v leme izgubimo veliko informacij , ki bi jih med prevajanjem potrebovali , kot so čas , spol , število ...
Te pomanjkljivosti smo želeli odpraviti z gradnjo novega sistema , ki bi poskušal predvsem odpraviti naštete pomanjkljivosti ob vsaj enako dobrem osnovnem prevajanju .
Sistem je predstavljen v 7.1 , rezultati pa v 11.4. 11.4 Rezultati vrednotenja sistema z izbranimi lemami Metoda se je izkazala kot uporabno , čeprav je bila izbira pravil precej nedodelana .
Kakovost lahko predstavimo tudi s številkami , rezultati podani v tabeli Tabela 5 , razdeljeni na metodi vrednotenja : • Metoda urejevalne razdalje ( samodejna , velika testna množica ) : • Sistem s popolnoma lematiziranim slovenskim besedilom : 14,99 ; • Sistem z izbranimi besednimi vrstami : 15,00 ; ( 18 ) • Metoda SSER ( ročna , s pomočjo poznavalcev , manjša množica ) : • Sistem s popolnoma lematiziranim slovenskim besedilom : 24,12 ; • Sistem z izbranimi besednimi vrstami : 25,00 ; ( 19 ) Angleške povedi , prevodi sistema , so veliko lepše oblikovane kot povedi iz popolnoma lematiziranega sistema .
11.5 Rezultati vrednotenja sistema s slovarjem Zadnja preizkušana metoda se ni izkazala za obetavno .
12 ZAKLJUČEK IN NADALJNJE DELO Poglavje predstavlja avtorjeva razmišljanja ob rezultatih .
Prenos orodij na slovensko-angleški prevajalnik je bil uspešen , algoritmi se obnašajo v okviru pričakovanj .
Pri pretvarjanju osnovnih oblik v leme izgubimo veliko informacij , ki bi jih med prevajanjem potrebovali , kot so čas , spol , število ...
Lematizirali smo le izbrane besedne vrste ter dodali morfosintaktične opise besed v učni korpus .
Samodejna metoda vrednotenja , oziroma metoda urejevalne razdalje ni pokazala nikakršnega napredka .
Subjektivna metoda , metoda ki naj bi v večji meri odsevala človekovo zaznavanje besedil pa je kazala kar občuten napredek .
Prevodi so bili lepše oblikovani in večina pomembnih informacij še vedno prisotnih .
Poleg uporabe lem za dograditev sistema se poraja uporaba dvojezičnega enosmernega slovarja kot najočitnejša možnost ( slovensko-angleški slovar ) , s čimer bi zmanjšali število neznanih besed v prevodih .
Tudi uporaba slovarja še ni povsem opuščena , saj bi lahko boljši in večji slovar vseeno pomagal pri bogatitvi besednega zaklada .
Napovedovanje branosti spletnih novic s tehniko podpornih vektorjev Povzetek Metode strojnega učenja se uspešno uporabljajo pri klasifikaciji teksta .
Tehnika podpornih vektorjev je v zadnjih letih doživela razcvet na tem po - dročju in dokazala vsestransko uspešnost pri problemih , ki jih sicer težko zapišemo v atributnem zapisu .
Vzpostavili smo bazo novic in na njej testirali natančnost razvitih klasifikacijskih modelov .
Z eksperimenti smo pokazali , da zna razvita tehnika modeliranja zanesljivo napovedati , katera današnja novica bo v prihodnje postala najbolj brana .
Ključne besede : analiza besedil , strojno učenje , rangiranje novic , tehnika podpornih vektorjev 1 Uvod Dandanes večina časopisov ponuja novice na svojih internetnih portalih .
Standardni sistemi učenja ( kot so nevronske mreže ali odločitvena drevesa ) delujejo nad podatki , ki jih pretvorimo v atributni zapis , torej v vektorje enake dolžine .
V tako opredeljenem prostoru lahko točke preprosto ločimo in nad njimi uporabimo standardne tehnike učenja ( interpolacija , razvrščanje v skupine ) .
Primer takih so slike , grafi in tekstovni dokumenti .
Problema klasifikacije internetnih novic smo se zato lotili z mod - ernimi metodami za strojno učenje analizo besedil , med katere spada tehnika podpornih vektorjev , tehnike iskanja za klasifikacijo najbolj informativnih besed , ter tehnike vrednotenja napovedanih modelov .
3 Poglavje 2 Metode in orodja 2.1 Problem podatkov Za podatke so naprimer besedila , katere ne moremo enostavno pretvoriti v atributni zapis , je ekstrakcija atributov kompleksna in draga kot rešitev celot - nega problema .
Tekstovni nizi oziroma besedila nimajo eksplicitno definiranih atributov , zato večina standardnih sistemov učenja ni primerna za njihovo klasifikacijo .
Pri normal - izaciji odstranimo vse znake , ki niso črke , ter pretvorimo ostalo besedilo , da to uporablja samo v male črke .
Temelji na ideji , ki jo je prvi predlagal Vapnik ( 1995 ) , kjer je jedro funkcija K , ki za dan par primerov vrne njuno podobnost .
Tako je problem dobre klasifikacije v večjem delu prenesen na jedro .
Osnovna različica SVM-ja se ukvarja s klasifikacijskimi problemi med dvema razredoma .
Vsak primerek je predstavljen s točko v nekem večrazsežnem realnem prostoru , učenje pa postane optimizacijski problem .
Iščemo tako hiperravnino , ki bo razmejila predstavnike enega razreda od predstavnikov drugega tako , da bi ležali učni primerki na pravi strani ravnine in še čim dlje od nje .
Ta optimizacijski problem lahko s pomočjo nekaj matematičnih pri - jemov preoblikujemo v dualno obliko , to pa rešujemo numerično .
6 Poglavje 2 : Metode in orodja 2.3.2 Izpeljava optimizacijskega problema • Imamo množico primerov , ki so predstavljeni z vektorji v xi ?
{ -1 , 1 } } n Slika 2.1 : Grafična predstavitev klasifikacijskega problema .
Enačbo ravnine zapišemo kot : wT x + b = 0 ( 2.2 ) Podporna vektorja sta definirana kot ( 2.4 ) : 2.3 Tehnika podpornih vektorjev 7 wT xi + b = 1 za pozitivni razred in ( 2.3 ) wT xi + b = -1 za negativni razred ( 2.4 ) Kjer je w normalni vektor ravnine , b pa konstanta .
n ( 2.5 ) Hiperravnin , ki ustrezajo danemu pogoju je lahko več , zato potrebujemo dodatni kriterij , po katerem določimo najboljšo izmed njih .
Ko računamo wT x + b = 0 za različne primere x , se pri vsaki točki pozna le to , kako daleč je od razmejitvene hiperravnine in na kateri strani je .
Slika 2.2 : Prikaz iskanja hipperravnine z najširšim robom .
Funkcijski in geometrijski rob Funkcijski rob ( 2.6 ) učnega primera ( xi , yi ) glede na hiperravnino ( w , b ) je število ?.
( w , b , i ) = yi ( wT xi + b ) ( 2.6 ) Funkcijski rob hiperravnine ( 2.7 ) glede na učno množico pa je razdalja naj - bližje točke do hiperravnine .
( w , b ) = mini = 1 , ...
Hiperravnina z najširšim robom Najpogosteje iščemo hiperravnino z najširšim robom .
Hiperravnina z najširšim robom ima največjo razdaljo od najbližje točke .
Razdalja med podpornima vektorjema je odvisna od w ( normale ) , zato je naš cilj dobiti minimalni w. Splošna definicija dualnega optimizacijskega problema Problem klasifikacije s tehniko podpornih vektorjev se tako prevede v op - timizacijski problem , ki je odvisen od w : 2.3 Tehnika podpornih vektorjev 9 Slika 2.3 : Prikaz podpornih vektorjev in ločilne hiperravnine .
• minimiziraj | | w | | 2 • pri pogojih : yi ( wT xi + b ) ?
2.3.3 Trik z jedri Tu pa nastopi tako imenovani trik jedra , kjer lahko notranji produkt zamen - jamo z jedrno funkcijo K. Znotraj jedra lahko primera preslikamo v poljubno dimenzijo in izračunamo njuno podobnost .
i = 1....l Konstanta C je parameter tehnike podpornih vektorjev , s katerim določamo obravnavo šum pri učenju ( 2.5 ) .
Z njo določimo , kako zelo naj dopušča 2.4 Vreča besed 11 Slika 2.5 : Kako s parametrom C obravnavamo šum .
odstopanja od osnovne skupine enega razreda .
Višji kot je , bolj je tehnika tolerantna do odstopanja .
Tehnika podpornih vektorjev je v osnovi namenjen reševanju dualnih problemov ( dva razreda ) .
Besedilo se najprej normaliziramo ( samo male 12 Poglavje 2 : Metode in orodja črke ) , odstranimo nepotrebne neinformativne besede in nato lematiziramo pre - ostalo .
Problem take predstavitve je , da izgubimo vso informacijo o zaporedju in sklanjatvi besed .
Prednost BOW formulacije je hiter in preprost izračun podobnosti dveh primerov .
Naj bo pogostost besede i definirana kot : tfi , j = k TF ( 2.12 ) je definirana kot frekvenca posamezne besede v danem besedilu j. Pri tem ni , j predstavlja frekvenco besede , deljeno s številom vseh besed v besedilu .
Besedila pretvo - rimo v vektor z visoko dimenzijo , kjer vsak element predstavlja zaporedni podniz dolžine n. Največja možna dimenzija za dani n je tako lahko | A | n. A je definiran kot celotna abeceda znakov .
Primer : Za dano besedilo d izpišemo vse možne 3-grame .
Končni rezultat je notranji produkt obeh primerov , glede na enake n-grame in njihove frekvence .
Utež 14 Poglavje 2 : Metode in orodja imenujemo upadajoči faktor .
Primer : podniz ’ c-a-r ’ se nahaja v besedi ’ card ’ in v besedi ’ custard ’ .
Ta problem se rešuje z dinamično implementacijo in učinkovitim približkom , glede na celotno zbirko .
Prehod na besede s seboj prinese zanimivo posledico .
Časovna zahtevnost se zmanjša , saj je dolžina možnih ujemajočih se zaporedij toliko nižja , da je tak način bistveno manj zahteven od izvedbe celotnega jedra podzaporedij .
V svoji originalni obliki se jedro podzaporedij nanaša le na štetje , kolikokrat se podnizi pojavijo v besedilu in ne vsebuje sheme za obteževanje elementov abecede .
bilo = 0.01 ) , saj s seboj ne prinese bistvene informacije o vsebini besedila .
Besedi ’ umor ’ pa lahko določimo visoko utež , saj s seboj nosi visoko informativno težo ( ?
Temelji na principu klasifikatorja , ki vrača verjetnost , da dani primer spada k pozi - tivnemu razredu .
16 Poglavje 2 : Metode in orodja Primer izračuna : • najprej sortiramo rezultate padajoče po verjetnosti , • AUC krivuljo narišemo tako , da sledimo rezultatom v tabeli , • če je razred primera enak 1 potem se premaknemo za eno gor , • sicer pa gremo v desno .
Korak Razred Verjetnost 1 1 0.90 2 1 0.80 3 1 0.70 4 -1 0.55 5 1 0.50 6 -1 0.40 7 -1 0.30 8 -1 0.20 9 -1 0.10 Tabela 2.2 : Klasifikacijski podatki 5 6 7 8 9 3 4 2 1 Tabela 2.3 : Prikaz korakov za risanje AUC grafa Koraki so prikazani v tabeli ( 2.3 ) .
Rezultat je grafična predstavitev krivulje , ki za posamezne pomnožice prikazuje doseženo natančnost .
Poglavje 3 Razvoj sistema za napovedovanje najbolj branih novic 3.1 Razvoj baze podatkov Za vsako iskanje zakonitosti v podatkih je pomembno imeti takšne podatke , ki bodo reprezentativno in nepristransko predstavljali probleme , katere bomo srečali v realnem svetu .
Področje diplomske naloge so novice , ki se nahajajo na internetnih portalih .
Najprej smo morali izbrati portal , ki nam bo nudil vse potrebne informacije o novicah .
Uspelo nam je pridobiti okoli 2500 novic za obdobje 22. mesecev , ki so razmeroma dolge , v primerjavi z ostalimi internetnimi portali .
Za potrebe klasifikacije smo podatke sortirali po branosti in jih razdelili na pozitiven in negativen razred .
Slika 3.1 : Prikaz razdelitve podatkov v pozitivni in negativni razred .
3.2 Znakovna jedra 3.2.1 BOW jedro Ko smo imeli izdelano bazo novic , smo pričeli z razvojem jeder , ki bodo znala povedati , kako zelo sta si dve novici podobni .
Prednost danega pristopa je visoka hitrost , vendar je potrebno za doseg zahtevane oblike podatkov uporabiti približek .
Problem , s katerim smo se srečali je , da preprosto nismo mogli obravnavati vseh besede , saj bi bil vektor za vsako novico dolg 30.000 , kar je nepraktično v realnih situacijah .
Slika 3.2 : Prikaz izbora besede za BOW jedro .
Količino besed pa smo omejili na 4000 , saj nadaljnje povišanje ni prineslo boljših rezultatov .
Vsi ti dodatni procesi znatno izboljšajo natančnost klasifikacije BOW jedra .
Prednost pri večji k-jih je , da kljub svojemu znakovnemu pristopu zajamejo semantične in lingvistične informacije posameznega besedila .
V tabeli ( 3.3 ) so prikazani rezultati merjenja AUC za posamezne k-je na 400 primerih z uporabo jedra RBF .
Ko najdemo primerno podmnožico za vsako novico , izračunamo frekvenco posameznih podnizov in rezultat shranimo kot vektor realnih števil .
Želimo se izogniti situaciji , kjer se model premalo prilagodi podatkom .
Primer je viden na sliki ( 3.3 ) , kjer linearno jedro išče hiperravnino v prostoru primerov , ki je prekompleksen za preprosto linearno rešitev .
Hkrati pa želimo biti pazljivi , saj se lahko pri visoki vrednostih parametrov model prekomerno prilagodi podatkom .
Primer prekomerne prilagoditve je lepo viden z uporabo jedra RBF , ki ima previsoki vrednosti parametrov C in ?.
Formulo za izračun uteži smo praktično preizkusili in dokazali , da je na - 3.3 Implementacija s SVM-jem 23 Slika 3.3 : Prikaz problema premajhnega in prekomernega prilagajanja modela .
Izračuna parametra C , ki je namen - jen obravnavanju šuma v zbirki novic , smo se lotili kot obravnave linearnega problema .
Parameter C smo v kombinaciji s preprosto linearno klasifikacijo povečevali toliko časa , dokler je z vsakim povečanjem posledično sledila večja vrednost AUC mere .
Želja je , da imamo skromen C , saj ne želimo , da se SVM model prekomerno prilagodi učnim podatkom .
Poglavje 4 Eksperimentalno ovrednotenje 4.1 Podatki Naši podatki so vsebovali 2500 novic , za obdobje 22. mesecev z internetne strani www.revija-reporter.si .
V pozitiven razred smo izbrali 20% najbolj branih novic , v negativni pa 70% najmanj branih novic .
4.2 Metodologija vrednotenja Naša metoda vrednotenja klasifikacijskega modela se imenuje krivulja učenja .
4.3 Rezultati Naslednji korak pri naših eksperimentih je bil preučiti , kako dobro jedra klasi - ficirajo naš prvotno zastavljeni problem .
Vzeli smo učno množico , ki vsebuje novice zadnjih dveh mesecev ( 200 26 4.3 Rezultati 27 Slika 4.1 : Krivulja učenja za posamezne kombinacije SVM in znakovnih jeder .
4.4 Diskusija Krivulja učenja ( 4.1 ) nam lepo prikazuje prednosti jedra RBF pri klasifikaciji novic na majhni učni množici , saj je njegova hiperravnina veliko bolj pri - lagodljiva za naš kompleksen problem .
Linearno jedro ima predvsem problem določiti hiperravnino , ki bo dovolj dobro razdelila oba razreda .
Ko primerjamo znakovna jedra vidimo , da smo pri jedru z n-grami dobili veliko boljše rezultate , kot pri BOW jedru .
Iz krivulje učenja smo sklepali , da bo SVM z jedrom RBF in jedrom z n-grami jedro tudi v realnem testu dosegel najboljše rezultate .
Našo pozornost smo namenili predvsem jedru BOW in jedru z n-grami , ki se razlikujeta glede na nivo obravnave besedila .
Izbrani pristop klasificiranja se lahko uporabi za iskanje zakonitosti v poljubnem besedilu , saj je naš pristop splošno uporaben za vse vrste klasi - fikacije besedila .
Za nadaljnji razvoj sistema za napovedovanje novic , bi lahko poskusili še vpliv SSK in W-S znakovnih jeder .
SAMODEJNO UČEČI SE SISTEM ZA SINTEZO ČLOVEŠKEGA GOVORA Povzetek Že desetletja se raziskovalci po celem svetu trudijo , da bi naredili sistem , ki bi iz poljubnih besedil tvoril tak umetni govorni signal , ki bi bil hkrati in razumljiv in bi zvenel kot naravni govor .
Najtežje dosegljiv cilj je visoka naravnost umetnega govora .
Pri izdelavi sistema računalniške sestave govora je potrebno združiti različna znanja , tako s področja procesiranja signalov , kot tudi jezikoslovja , glasoslovja in drugih znanosti .
Sistemi za sestavo govora , ki tvorijo najkakovostnejši govorni signal , delujejo tako , da s pomočjo raznih algoritmov obdelujejo in sestavljajo skupaj kratke posnetke naravnega govora .
V disertaciji je skupaj s postopki za njegovo izgradnjo opisan sistem NGS ( Nauči se Govoriti Sam ) , ki se iz posnetkov naravnega govora in pripadajočih besedil sam nauči tvoriti umetni govor .
Sistem spada v skupino sistemov , ki govorni signal tvorijo z izbiro in lepljenjem glasovnih enot iz zbirke posnetkov naravnega govora ( Unit Selection Synthesis ) .
Ustrezno zbirko posnetkov si v procesu učenja sproti ustvarja sistem sam s pomočjo algoritma za samodejni razrez , ki je rezultat raziskav doktorske disertacije .
Za sestavo zbirke posnetkov tako ne potrebujemo velike količine strokovnega dela , kar je še posebej primerno za slovenski jezik in tudi druge jezike , ki jih govori manjše število ljudi .
Prototipna različica NGS , ki je nastala kot rezultat doktorske disertacije , tvori razumljiv govor , končni cilj nadaljnjega dela , pa je doseči tudi visoko stopnjo naravnosti .
Pri nadaljnjem delu želimo izboljšati tudi natančnost samodejnega razreza in najti metode za samodejno pridobivanje prozodičnih značilk iz naravnega govornega signala .
Ključne besede : sinteza govora , sestava govora , sestava z izbiro enot , samodejni razrez govora , učeči se sistem .
1 Uvod Govor , kot eden najvažnejših načinov sporazumevanja med ljudmi , vedno bolj prodira tudi v komunikacijsko povezavo med človekom in strojem – računalnikom .
Glavni razlog , da ta prehod ni hitrejši , je nezadostna kakovost razpoznave in sestave govornega signala , ki predvsem ne sme biti vsebinsko omejen .
Razpoznava govora pomeni spreminjanje govornega signala v informacijo v obliki besedila , operacija sestave ( sinteze ) govora pa poteka ravno v obratni smeri in sicer tvori govorni signal iz podanega besedila .
V nadaljevanju se bomo omejili samo na sestavo govora .
Šele dosežki zadnjih nekaj let in velik porast računalniških zmogljivosti so omogočili izdelavo sistemov za sestavo govornega signala , ki se po kakovosti že lahko kosa z naravnim govorom .
1.1 Značilnosti sistemov za sestavo govora Pri sistemih za umetno sestavo govora nas zanimajo predvsem naslednje značilnosti , ki hkrati določajo tudi uporabnost takih sistemov : • Kakovost umetnega govornega signala .
2 Uvod 1.1.1 Razumljivost in naravnost umetnega govornega signala Razumljivost govora je merilo kakovosti govornega signala in predstavlja razmerje med pravilno razpoznanimi glasovnimi enotami ( glasovi , besede , stavki ) in vsemi glasovnimi enotami , ki jih zajema slušni test , s katerim razumljivost govora merimo .
Sistem MITalk-79 [ 19 ] je na testih , kjer so razumljivost ocenjevali s pomočjo spremenjenih rim ( modified ryme test ) , dosegal 93% razumljivost , samo nekaj let novejši sistem DECtalk [ 20 ] pa kar 97% razumljivost .
Za primerjavo povejmo , da so v istih testih z naravnim govorom dosegli 99% razumljivost .
Ker človek govorni signal v veliki meri razpoznava tako , da slabše razumljene besede naveže na vsebino pogovora , 100% razumljivost posameznih glasovnih enot za normalno sporazumevanje sploh ni potrebna .
Čeprav so poslušalci pri poslušanju signala sistema DECtalk na testu spremenjenih rim zabeležili trikrat večjo napako , kot pri poslušanju naravnega govora , lahko ravno zaradi človekovega načina razpoznave govora trdimo , da sistem DECtalk tvori govorni signal enakovredne razumljivosti , kot je naravni govorni signal .
Če bi torej ocenjevali kakovost računalniških govornih sistemov samo z merilom razumljivosti , bi lahko zaključili , da je problem računalniške sestave govora že rešen , saj najboljši sodobni sistemi dosegajo na testih razumljivosti le malenkost boljše rezultate .
Podatek o tem , ali ljudje umetni govor razlikujejo od naravnega , lahko pridobimo hitro in na sorazmerno preprost način .
Težje pa s slušnimi testi natančneje opredelimo stopnjo naravnosti umetnega govora , ker so rezultati takih testov še bolj odvisni od razpoloženja ocenjevalcev kot pri določanju razumljivosti .
Na tem mestu si vsekakor lahko zastavimo vprašanje , ali ljudje želijo , da bi stroj ( računalnik ) proizvajal naravno zveneč govorni signal , ali pa so zadovoljni tudi z " robotsko " zvenečim govorom .
Raziskave [ 18 ] so pokazale , da ljudje mnogo raje sprejemajo umetni govorni signal , ki zveni čim bolj naravno .
Uvod 3 1.1.2 Zmožnosti pri tvorbi govornega signala Glede na nabor besed , ki jih sistemi za sestavo govora lahko tvorijo , ločimo sisteme z omejenim in neomejenim naborom besed .
Sistemi z omejenim naborom hranijo posnetke vnaprej določenih besed ali celih sporočil , ki jih nato lahko še kombinirajo med seboj za sestavo daljših sporočil .
Ti sistemi so preprosti , tvorijo govorni signal zelo visoke kakovosti ( naravni govor ) , njihova glavna pomanjkljivost , ki zelo omejuje področja njihove uporabe , pa je ravno omejenost v naboru besed oziroma sporočil , ki jih lahko tvorijo .
Sistemi z neomejenim naborom lahko v govor pretvorijo poljubno besedilo in so zapleteni .
Sposobnost tvorbe tekočega govora je zelo visoka , saj lahko poljubno besedilo izgovorijo z različnimi glasovi , naglasi in hitrostmi .
Pri pretvorbi poljubnega besedila v umetni govorni signal moramo opraviti tri glavne korake : 1.
Razne okrajšave , številke in oznake moramo v vhodnem besedilu nadomestiti z ustreznimi besedami .
Običajne zapise besed nato zamenjamo z glasovnimi zapisi , ki verno ustrezajo dejanski izgovarjavi vsake besede .
Glasovne zapise iz prvega koraka dodatno dopolnimo z informacijami , ki določajo osnovno višino glasu , podajajo krivulje naglaševanja ter druge podatke o prozodiji1 in so odvisne od modela , ki ga uporabimo pri tvorbi govornega signala .
Iz podrobnih glasovnih določil , ki smo jih dobili v drugem koraku , tvorimo časovno odvisne funkcije krmilnih parametrov akustičnega modela , s katerim nazadnje tvorimo vzorce umetnega govornega signala .
1.2 Razvoj sistemov za sestavo govora Sisteme za sestavo govora lahko razporedimo v tri glavne generacije .
Najbolj znane metode druge generacije so PSOLA ( Pitch Synchronous OverLap and Add ) [ 23 ] in različni sinusni modeli [ 21 ] , [ 31 ] .
V zadnjo - tretjo - generacijo sistemov za sestavo govora spadajo metode , ki modelirajo govorni signal s pomočjo prikritih modelov Markova ( HMM – Hidden Markov Model ) [ 2 ] , [ 36 ] in pa predvsem metode , ki govorni signal tvorijo z izbiranjem in lepljenjem glasovnih enot naravnega govornega signala ( Unit Selection Synthesis ) [ 16 ] , [ 35 ] , [ 28 ] .
1.3 Namen disertacije in pregled vsebine Osnovni namen te doktorske disertacije je raziskati možnosti za izdelavo sistema , ki bi ga lahko naučil govoriti " skoraj " vsak uporabnik , pri tem pa bi uporabnik moral samo posneti govorni signal določenega nabora besedil , ki bi mu ga posredoval računalnik .
Govorni signal , ki ga tvorijo , ne dosega stopnje naravnosti in razumljivosti , ki jo imajo " ročno nastavljeni " sistemi .
Področje sestave govora zahteva poleg znanj o procesiranju signalov tudi znanja s področja avtomatskega učenja , jezikoslovja in glasoslovja , zato je izgradnja sistema , ki se nauči govoriti sam in hkrati tvori govorni signal visoke stopnje razumljivosti in naravnosti zelo težka naloga .
Akustični model , ki je podlaga za večino raziskav na tem področju , je opisan v poglavju 2 v poglavju 3 pa so nato dodane še metode in opisi sistemov za sestavo govornega signala , ki vsak za svoje obdobje predstavlja vrh dosežkov sestave govora .
Zgradbo sistema NGS ali Nauči se Govoriti Sam , ki je plod raziskav te disertacije , opisuje poglavje 4 , v poglavju 5 pa so podani rezultati raziskav , ki so vodili k izgradnji sistema NGS .
Zaključki in smernice za nadaljnje delo so na koncu zapisani v poglavju 6.
Akustični model sestave govora 5 2 Akustični model sestave govora Pri izdelavi modela , ki opisuje proces tvorbe govornega signala v človeškem govornem sistemu , smo prisiljeni narediti kompromis med natančnostjo in zahtevnostjo .
Tudi , če bi z meritvami lahko prišli do podatkov , ki bi dovolj natančno določali vse želene značilke govornega sistema , bi bil model , ki bi vse povezal v neko celoto , zelo verjetno preveč obsežen in zapleten , da bi bil tudi uporaben .
Model temelji na človeškem govornem sistemu , ki ga prikazuje slika 1 ( povzeto po [ 37 ] ) , poenostavljen mehanski model , ki ga modelira , pa slika 2 ( povzeto po [ 7 ] ) .
Če glasilke v tem procesu zanihajo , tvorijo osnovni ton govornega signala in zveneče glasove , sicer pa se v govorni cevi3 ( vocal-tract ) tvorijo ostali nezveneči glasovi , ki so Govorna cev je votli prostor od grla navzven do ustnic oziroma nosnic .
Akustični model sestave govora 7 podobni različno obarvanemu šumu .
S tem ko predpostavimo linearnost modela , omogočimo , da odziv celotnega modela izračunamo kot preprosto linearno kombinacijo odzivov posameznih sestavnih delov .
Dodatna zahteva po časovni nespremenljivosti nam skupaj z linearnostjo omogoča , da pri matematičnem modeliranju uporabimo teorijo linearnih časovno nespremenljivih sistemov in s tem posledično teorijo digitalnih filtrov .
Oblika govorne cevi se med govorjenjem neprestano spreminja , vendar so meritve pokazale , da lahko za časovne intervale , ki so krajši od 10 ms , privzamemo , da se znotraj tega intervala oblika govorne cevi ne spreminja in so posledično značilke , ki jo opisujejo , konstantne .
Posamezna komponenta lahko predstavlja izvor zvoka , ali pa filter , ki ta zvok preoblikuje .
To je ena od večjih pomanjkljivosti modela , saj je popolnoma jasno da , ko na primer govorimo z različnimi višinami glasu , z mišicami ne spreminjamo samo napetosti glasilk in s tem frekvence osnovnega tona , ampak spreminjamo tudi napetost in obliko drugih delov govornega sistema ( slika 1 ) , kar vpliva na značilnosti filtra , ki ga ti drugi deli govornega sistema predstavljajo .
2.1 Prenosna funkcija govorne cevi Poglejmo si obnašanje človekovega govornega sistema pri izgovorjavi samoglasnikov .
Nosna votlina je v tem primeru ločena od ostalih delov govorne cevi in bistveno ne vpliva na oblikovanje zvoka .
Vsaka oblika drugače vpliva na zvočni val in pri določenih oblikah govorne cevi dobimo na izhodu iz ust zvok , ki ga razpoznamo kot enega od samoglasnikov .
Modeliranje cevi , ki se stalno spreminja , je zapleteno , vendar lahko dober približek izvedemo z zaporedno vezavo kratkih cevi različnih presekov , kot to prikazuje slika 3.
Z večanjem števila cevi lahko dosežemo poljubno natančnost modela , kar je eden od pomembnih rezultatov , ki so tam navedeni .
8 Akustični model sestave govora glasilke ustnice pljuča Slika 3 : Model govorne cevi , sestavljen iz krajših odsekov cevi s konstantnim presekom .
Ko tvorbo samoglasnikov modeliramo z digitalnimi filtri , lahko enačbo govornega sistema po [ 26 ] zapišemo v obliki z-transformacije kot = U , 2.1 kjer U ( z ) predstavlja prenosno funkcijo ( z-transformacijo odziva na enotin impulz ) izvora signala – v našem primeru glasilk , V ( z ) prenosno funkcijo govorne cevi , R ( z ) pa prenosno funkcijo ( sevalno karakteristiko ) ustnic .
Prenosno funkcijo govorne cevi V ( z ) izpeljemo iz modela govorne cevi , ki je , kot smo prej omenili , sestavljen iz krajših odsekov cevi s konstantnim presekom .
Poenostavljen model govorne cevi , sestavljen le iz dveh cevi , prikazuje slika 4.
Koeficienti r v enačbi ( 2.2 ) predstavljajo odbojne koeficiente med spoji večcevnega modela , koeficient r je odbojni koeficient na izvoru zvoka ( glasilke ) , koeficient r = r pa predstavlja odbojni koeficient na izhodu govorne cevi – ustnicah .
.
Prenosno funkcijo ( enačba 2.2 ) lahko nadalje razstavimo na filtre drugega reda , s katerimi verno modeliramo posamezne formante4 , ki sestavljajo samoglasnik .
ustnice glasilke CEV1 pljuča rG r1 odbojni koeficienti Slika 4 : Model govorne cevi , sestavljen iz dveh krajših cevi s konstantnim presekom .
Natančno modeliranje sevalnih značilnosti ustnic R ( z ) je precej zahtevno , v večini primerov Formant je okrepljen snop harmoničnih tonov in je posledica resonanc govorne cevi .
Učinek filtra je , da ojači 2.3 Modeliranje izvora govornega signala Osnovni izvor signala pri zvenečih glasovih predstavljajo glasilke , ki odpirajo in zapirajo pretok zraka iz pljuč na poti proti ostalim delom govorne cevi .
Pri moških se frekvenca osnovnega tona tipično giblje med 80 Hz in 250 Hz , pri ženskah in otrocih pa se tipične frekvence osnovnega tona nahajajo med 120 Hz in 400 Hz. Na sliki 5 lahko vidimo tri faze delovanja glasilk v procesu tvorbe osnovnega tona in sicer kot na eni periodi osnovnega tona .
Akustični model sestave govora 11 znotraj periode osnovnega tona se spreminja , kot primer pa navedimo meritve iz [ 30 ] , po katerih prva faza traja med 0,2 in 0,4 periode osnovnega tona , druga med 0,18 do 0,3 periode osnovnega tona , tretja pa med 0,3 in 0,5 periode osnovnega tona .
Rosenbergov model v vzorčeni obliki podaja enačba 0,5 1 - cos kjer je n indeks vzorca , N število vzorcev v prvi fazi delovanja glasilk ( faza odpiranja ) , N pa število vzorcev v drugi fazi delovanja glasilk ( faza zapiranja ) .
2.4 Izboljšave akustičnega govornega modela Pri tvorbi osnovnega modela smo se naslonili predvsem na proces tvorbe ne-nosnih samoglasnikov in zanemarili ostale glasove .
S tem smo se izognili vplivom nosne votline in upoštevali kot izvor zvoka le glasilke .
Izvori šuma so turbulence zraka v govorni cevi , ki nastanejo ob zožitvah .
Pri nezvenečih soglasnikih so to edini izvori zvoka , saj pri tvorbi teh glasov glasilke ne sodelujejo .
Morebitno delovanje glasilk med tvorbo teh glasov je le posledica vpliva zvenečih glasov , ki so nastali neposredno pred nezvenečim glasom , ali pa bodo nastali tik za njim .
Prenosna funkcija filtra govorne cevi V ( z ) je tu razdeljena na prenosno funkcijo goltne votline VG ( z ) in ustne votline VM ( z ) , RL ( z ) pa predstavlja prenosno funkcijo filtra , ki posnema sevalne značilnosti na izhodu ustne votline oziroma ustnicah .
Ker nezveneči glasovi v bistvu predstavljajo neke vrste obarvan šum , je najbolje , če za izvor signala U ( z ) uporabimo kar generator šuma .
Sistemi za sestavo govora 13 3 Sistemi za sestavo govora Skozi zgodovino lahko sisteme za sestavo govora razporedimo v tri generacije .
Na razvoj vsake generacije so bistveno vplivale računalniške zmogljivosti , ki so bile v danem času na razpolago in sicer procesorska moč ter cenovno dostopna zadostna količina pomnilnika .
3.1 Prva generacija sistemov za sestavo govora Prva generacija sistemov za sestavo govora , ki so prevladovali vse do konca 80-tih let dvajsetega stoletja , je temeljila na modelu govorne cevi , ki je opisan v poglavju 2.
Poleg samega glasovnega zapisa besedila potrebujejo še podatke o dolžinah posameznih glasov ter vsaj še podatke o poteku osnovnega tona za celoten stavek .
Velikokrat se imenuje tudi sestava s pomočjo pravil .
Formantna sestava uporablja modularen , akustično - fonetični pristop , ki sloni na modelu govorne cevi .
Metoda uporablja model na poseben način , tako da so značilke cevi preprosto povezljive z akustično-fonetičnimi lastnostmi , ki jih zlahka opazujemo , recimo s pomočjo spektrograma .
Blokovni prikaz tipične osnovne izvedbe formantnega sestavljalnika prikazuje slika 7. 14 Sistemi za sestavo govora govorni signal Slika 7 : Blokovni prikaz tipiČnega formantnega sestavljalnika .
Enega najbolj popolnih formantnih sestavljalnikov je razvil Denis Klatt [ 19 ] in ga prikazuje slika 8 , dodatno razlago oznak na sestavnih blokih sestavljalnika pa podaja tabela 1.
Ta seznam pravil je mogoče uporabiti v vseh sestavljalnikih umetnega govora , ki dolžino trajanja posameznih fonemov določajo s pomočjo pravil in ne samo pri formantnih sestavljalnikih .
Drugi izvor signala v sestavljalniku predstavlja generator šuma , ki je sestavljen iz generatorja naključnih števil , iz modulatorja , ki ga krmilimo s frekvenco osnovnega tona , in iz nizko-propustnega filtra .
Navedene izvore signala lahko vodimo v vejo zaporedno vezanih resonatorjev , kot tudi v vejo vzporedno vezanih resonatorjev .
Zaporedna vezava je najprimernejša za sestavo samoglasnikov , medtem ko je vzporedna vezava potrebna za sestavo pripornikov in zapornikov .
Klattov formantni sestavljalnik torej ni natančen model govorne cevi .
Ločen nadzor nad formanti pri formantnem Sistemi za sestavo govora 15 sestavljalniku je narejen zato , ker je iz spektrogramov mnogo lažje razbrati realne značilke formantov , ki jih potem uporabimo za krmiljenje sestavljalnika , kot pa določiti realne oblike govorne cevi , katere model bi potem uporabili za tvorbo formantov govornega signala .
Umetni govorni signal , ki ga tvori formantni sestavljalnik , je le malenkost slabše razumljiv od naravnega govora , zveni pa precej nenaravno , kar je posledica vseh pomanjkljivosti uporabljenega modela .
3.1.2 Sestava govora s pomočjo klasične metode linearnega napovedovanja Značilk za krmiljenje formantnega sestavljalnika ne moremo vedno zlahka in neposredno pridobiti iz govornega signala .
Govorna cev ima takrat takšno obliko , da govorni signal nima izrazitih spektralnih vrhov .
Slika 9 prikazuje preprost model sestave govora , ki sloni na akustičnem modelu opisanem v poglavju 2 in upošteva obe navedeni predpostavki .
Model , postopki analize Sistemi za sestavo govora 17 govornega signala , kodiranje ter postopki sestave govornega signala s pomočjo linearnega napovedovanja ( Linear Predictive Analysis , Linear Predictive Coding , Linear Predictice Sytnhesis ) so v literaturi obširno opisani .
značilke govorne cevi stikalo zveneč / nezveneč govor y [ n ] govorni signal G ( ojačenje ) Slika 9 : Blokovni prikaz preprostega LP modela sestave govora .
Osnovni model LP sestave govora , ki ga prikazuje slika 9 , uporablja dva izvora signala in sicer generator zaporedij impulzov , ki ga krmilimo z želeno periodo osnovnega tona govornega signala , ter generator šuma , ki ga običajno izvedemo z generatorjem psevdonaključnih števil .
Izbran izvor signala ustrezno ojačimo ( množenje s koeficientom ojačenja G ) in vodimo v digitalni filter , ki ima samo pole v z-ravnini .
Vse navedene značilke ( perioda osnovnega tona , izbor zveneč / nezveneč glas , koeficient ojačenja G , koeficienti digitalnega filtra ) se počasi spreminjajo , pridobimo pa jih z analizo naravnega govornega signala .
Informacija o tem , ali gre za zveneč ali nezveneč glas ( prisotnost / odsotnost osnovnega tona ) , je največkrat dodaten stranski rezultat omenjenih algoritmov .
18 Sistemi za sestavo govora = - + , 3.1 oziroma v obliki z-transformacije = = , 3.2 kjer so koeficienti digitalnega filtra , s pa smo označili prenosno funkcijo modela .
3.3 Število P imenujemo red linearne napovedi , z n pa smo označili indeks vzorca .
3.7 postopku analize govornega signala , s pa tako imenovani sestavni filter modela , ki ga govornega signala tako , da kar najbolje zajamemo spektralne značilnosti signala .
3.8 Pri obeh metodah rešujemo sistem P linearnih enačb s P neznankami .
Metodi se razlikujeta v načinu določanja odseka signala nad katerim izvajamo analizo .
Pri avtokorelacijski metodi moramo zaporedje vzorcev najprej množiti z ustreznim N-točkovnim oknom , kjer je N število vzorcev v odseku signala na katerem želimo izvesti analizo .
V praksi se največkrat uporablja 20 Sistemi za sestavo govora avtokorelacijska metoda , ker je filter s koeficienti , ki jih izračunamo po tej metodi , vedno stabilen , medtem , ko to za filter s koeficienti , ki jih izračunamo po kovariančni metodi , ne velja vedno .
3.10 Pri primerjanju prenosnih funkcij zaporednega formantnega sestavljalnika in modela , kjer prenosno funkcijo določimo s pomočjo linearnega napovedovanja ( LP model ) , so v [ 35 ] navedene naslednje pomembne ugotovitve : • Oba modela imata enak tip prenosne funkcije in tvorita enak obseg frekvenčnih odzivov .
• Prenosno funkcijo sestavljeno iz samih polov lahko za poljuben govorni signal natančno ocenimo , ne moremo je pa vedno razstaviti na posamezne formante .
• Pri LP modelu za vse glasove uporabimo prenosno funkcijo sestavljeno iz samih polov , kar pri splošnem formantnem sestavljalniku , kot je na primer Klattov , ne velja .
• Pri splošnem formantnem sestavljalniku posebej modeliramo ustno in nosno votlino , česar pri LP modelu ne storimo .
• Pri LP modelu so značilnosti filtra izvora signala že vključene v filter govorne cevi .
Najpreprostejša rešitev je , da posnamemo množico odsekov naravnega govora , ki predstavljajo en glas , ali pa kratka zaporedja glasov naravnega govora .
S tem , ko LP analizo izvajamo nad odseki naravnega govornega signala , zajamemo tudi dinamiko govorne cevi .
V posnetkih moramo zajeti vse tipe prehodov med glasovi , ki nas zanimajo in katerih število je pri normalnem človeškem govoru končno .
Ta način uporabe LP modela nas vodi k tako imenovani sestavi z lepljenjem , ki pa že predstavlja naslednjo generacijo sestave govora .
Glavni razlog , ki upravičuje uporabo dvoglasnikov je , da lahko uporabimo model tarča-prehod , kjer nam stabilno področje " tarče " predstavlja sredina glasu8 , ki ima zatem prehodno področje do sredine naslednjega glasu .
Model tarča-prehod predpostavlja , da ima na sredini glasov govorna cev za kratek čas stabilno obliko , ostalo dogajanje v govorni cevi pa so prehodi med temi stanji .
Hkrati moramo tudi preveriti , ali ima govor , ki ga tvorimo , ustrezen čas trajanja in ustrezno periodo osnovnega tona .
Čas trajanja lahko prilagodimo na dva načina .
Če je dolžina posameznega okvirja 10 ms , to pomeni , da je odsek sestavljen iz 15 okvirjev .
Drugi pristop , ki ga lahko uporabimo , je ta , da pri skrajševanju ohranimo dolžino okvirjev nespremenjeno in preprosto izpustimo vsak k-ti okvir ( v našem primeru vsak peti okvir ) .
Za zveneče glasove uporabimo zaporedje impulzov , za nezveneče pa generator šuma .
Govorni signal , ki ga dobimo s pomočjo klasičnega LP modela , ljudje opisujejo kot kovinski ali brneč .
V slovenščini na primer glasniku / v / ustrezajo štirje glasovi : zobnoustnični v , dvoglasni u ter zveneči in nezveneči ustničnoustnični w. 22 Sistemi za sestavo govora Če ga analiziramo , vidimo večje špice ( krajši odsek signala z veliko amplitudo ) v intervalih , ki ustrezajo periodi osnovnega tona .
3.2 Druga generacija sistemov za sestavo govora Kot smo omenili že v poglavju 1.1.1 , lahko s prvo generacijo sistemov za sestavo govora tvorimo umetni govorni signal tako visoke razumljivosti ( 97% ), da je le malo manjša od razumljivosti naravnega govornega signala ( 99% ).
Naravnost umetnega govornega signala teh sistemov pa je prenizka , da bi se njih uporaba razširila med povprečne uporabnike , ki poleg visoke razumljivosti umetnega govora zahtevajo tudi visoko stopnjo naravnosti .
Omejitve formantne sestave govora so predvsem v tvorbi ustreznih značilk za krmiljenje sestavljalnika .
Preslikovalne funkcije iz vhodnega glasovnega zapisa besedila v značilke , ki so potrebne za krmiljenje sestavljalnika , ostajajo zelo zapletene in jih ne znamo izraziti s pomočjo pravil , ki jih je sposoben sestaviti človek , ne glede na to kako dober strokovnjak je .
Izvor signala pa je pri klasični LP sestavi še vedno preveč preprost ( zaporedje impulzov oziroma generator šuma ) , da bi z njo dobili naravno zveneč govor .
Metode druge generacije sistemov za sestavo govora skušajo odpraviti slabosti , ki izvirajo iz preveč preprostega modeliranja izvora signala .
Vhodne podatke za krmiljenje izvora signala , ki zajemajo vrsto in trajanje posameznega glasu ter vsaj še periodo osnovnega tona , pa še vedno nadzoruje eksplicitni model .
Na primer : za tvorbo poteka osnovnega tona potrebujemo model , ki izračuna frekvenco osnovnega tona na vsakih nekaj milisekund .
Metode prve in druge generacije potem izvornemu signalu spreminjajo trajanje in periodo osnovnega tona v skladu z vrednosti , ki jih model izračuna .
Sistemi za sestavo govora 23 Razlike med metodami druge generacije izvirajo v glavnem iz načina izračunavanja značilk , ki so potrebne za tvorbo govornega signala .
Tipičen proces analize oziroma sestave govornega signala prikazuje slika 10.
Na metode druge generacije sistemov za sestavo govora lahko pogledamo tudi z drugačnega vidika .
Standardni sistem druge generacije krmilimo z zaporedjem glasovnih določil , kjer vsako določilo zajema znakovni zapis odseka govora , ki ga imenujemo glasovna enota , višino osnovnega tona in čas trajanja .
V govorni bazi za vsak znakovni zapis glasovne enote hranimo vzorce naravnega govornega signala v surovi obliki ali v obliki značilk .
Med sestavo govora v govorni bazi samo poiščemo značilke oziroma vzorce govornega signala , ki ustrezajo znakovnim zapisom vhodnega zaporedja glasovnih določil in jih zlepimo skupaj .
Ključna naloga pri izgradnji sistema je pazljiva izbira polnega nabora mogočih dvoglasnikov .
V naravnem govoru se vse možne glasovne kombinacije seveda ne pojavijo , zato lahko že tu izbiro omejimo in izločimo vse nemogoče ( nerealne ) kombinacije , ki se v jeziku , za katerega gradimo sistem , ne pojavijo .
V sistemih druge generacije običajno potrebujemo samo po eno zaporedje vzorcev naravnega govora za vsak dvoglasnik iz nabora .
Sosednji dvoglasniki pa so tisti , ki imajo enak levi oziroma desni glas in jih lahko prilepimo z leve oziroma z desne strani .
Kratke enote običajno nimajo jasno določenih ciljnih ( osrednjih ) delov glasov , kot jih imajo daljše enote .
Če pa skrajšujemo daljše enote , sicer zaznamo glasovna popačenja ( over-articulation ) , so pa slušni rezultati največkrat bolj sprejemljivi .
Spreminjanje periode osnovnega tona in trajanja posameznih glasov sta edina parametra prozodije , ki ju sistemi za sestavo govora druge generacije upoštevajo .
Metode iz te družine ne spadajo neposredno med metode za sestavo govora , saj omogočajo le " gladko " lepljenje vnaprej posnetih glasovnih enot govora .
Posnetek naravnega govora razbijemo na okvirje , ki jih množimo s Hannovim oknom časovno usklajeno z osnovnim tonom .
Koeficiente Hannovega okna podaja enačba = 0,1 , …
Sistemi za sestavo govora 25 Namesto Hannovega okna bi lahko uporabili tudi katero izmed ostalih oken , pri katerih se koeficienti na robovih okna spustijo do vrednosti nič , ker s tem dosežemo najbolj gladko lepljenje .
Po množenju s Hannovim oknom okvirje zlijemo skupaj v umetni govorni signal .
Periodo osnovnega tona pri PSOLA metodah spreminjamo tako , da pred zlivanjem okvirje postavimo bliže skupaj ( skrajšamo periodo ) , ali pa jih nekoliko razmaknemo ( podaljšamo periodo ) .
Osnovni prikaz PSOLA metod prikazuje slika 11.
Slika 11 : Osnovni prikaz delovanja PSOLA metod .
26 Sistemi za sestavo govora TD-PSOLA deluje usklajeno ( sinhrono ) s periodo osnovnega tona , kar pomeni , da imamo en analizni okvir na periodo osnovnega tona govora .
Sredino analiznega okvirja običajno postavimo tako , da ustreza trenutku , ko so glasilke zaprte .
Okvir vzorcev govora množimo s Hannovim oknom , pri čemer je dolžina okna dve periodi osnovnega tona .
Pri sestavi govora okvirje postavimo tako , da se njihove sredine ujemajo s ciljnimi periodami osnovnega tona in dele , ki se prekrivajo , preprosto seštejemo .
Sistemi za sestavo govora 27 Drugi tip spremembe govornega signala , ki jo PSOLA algoritem omogoča , je sprememba periode osnovnega tona .
Vzemimo za primer govorni signal , ki ima povprečno frekvenco osnovnega tona enako 100 Hz. Sredine analiznih okvirjev bodo v tem primeru 10 ms vsaksebi .
Na koncu bi radi proizvedli govor z višjo frekvenco osnovnega tona , zato sredine okvirjev postavimo 8 ms narazen .
Tu lahko pojasnimo zakaj potrebujemo okvirje v 28 Sistemi za sestavo govora 3.2.2 Sinusni modeli Pri klasični sestavi govora z LP modelom smo videli , da je glavni vzrok sorazmerno slabe kakovosti govornega signala v preveč preprostem izvornem signalu , saj model kot izvor signala uporablja zaporedje impulzov in / ali generator belega šuma .
Sinusni modeli skušajo to pomanjkljivost odpraviti .
Izvorni signal , ali vsaj njegove periodične komponente , sestavijo kot vsoto sinusov , v splošnem poljubnih amplitud , frekvenc in faz .
Govorni signal dobimo s konvolucijo enačba = ?
Impulzni odziv govorne cevi si poglejmo s pomočjo Fourierjeve transformacije Sistemi za sestavo govora 29 kjer , označuje amplitudo , , pa fazo .
Naj = , označujeta amplitudo in fazo impulznega odziva govorne cevi v odvisnosti od posamezne nespremenljivi med trajanjem impulznega odziva filtra govorne cevi , dobimo po izračunu konvolucije ( 3.7 ) sinusno predstavitev govornega modela = ?
Mnogo večji problem predstavlja ločitev tako dobljenih amplitud in faz na prispevke vzbujevalnega signala ( 3.8 ) in na učinke filtra , ki ponazarja značilnosti govorne cevi ( 3.10 ) .
Postopek ločitve je opisan v [ 25 ] , ločeno predstavitev amplitud , frekvenc in faz za vzbujevalni signal in za filter govorne cevi pa potrebujemo , če želimo spreminjati periodo osnovnega tona oziroma čas trajanja govornega signala .
Če želimo na primer simulirati učinek hitrejšega govorjenja , ( ) 30 Sistemi za sestavo govora VZBUJANJE GOVORNA CEV ( ) ( ) , Slika 14 : Sestava govornega signala s pomoČjo sinusnega modela tipa izvor-filter .
Sestavljene amplitude in faze frekvenčnih komponent v ( 3.11 ) smo v tem modelu razstavili na prispevke vzbujevalnega signala in na učinke filtra , ki ponazarja značilnosti govorne cevi .
Če ta korak izpustimo , dobimo nov preprostejši tip modela , ki ga imenujemo čisti sinusni govorni model .
Model ne ločuje več vzbujevalnega signala in vplivov filtra govorne cevi , zato ni več tipa izvor-filter .
Govorni signal spada namreč v skupino signalov ( končna energija v poljubnem končnem intervalu ) , ki jih lahko bolj ali manj natančno razstavimo na vsoto sinusnih komponent in s tem predstavimo v frekvenčnem prostoru .
Delovanje čistega sinusnega modela nam podaja slika 15 , bolj podrobno pa smo sestavo govornega signala s tem modelom opisali v podpoglavju 4.3.2 s ( t ) ( ) Slika 15 : Sestava govornega signala s pomoČjo Čistega sinusnega modela .
Z njim je skušal odpraviti eno izmed glavnih pomanjkljivosti sinusnih modelov in to je velika količina značilk ( sinusnih komponent ) , ki so potrebne za krmiljenje sinusnega generatorja .
Veliko število sinusnih komponent potrebujemo predvsem za modeliranje delov govornega signala , ki imajo značilnosti šuma .
Frekvenčni spekter govornega signala po tem modelu razstavimo na harmonični del , ki ga predstavimo kot vsoto osnovnega tona in njegovih harmonskih komponent do vključno neke maksimalne zgornje harmonske komponente .
Preostali del spektra model obravnava kot šumni preostanek in ga modelira z generatorjem šuma .
HNM model uporablja kompleksne amplitude frekvenčnih komponent govornega signala , ki vsebujejo tudi fazno informacijo in jih izračunamo z = , ( 3.13 ) kjer so ( ) koeficienti Hammingovega okna , so vzorci naravnega govora , je Zaradi tega je pri HNM modelu prvi korak pri analizi ravno določitev osnovne frekvence .
Tvorbo šumnega dela signala prikazuje slika 16. šum v intervalu ocenjena varianca signala beli šum ( dve periodi f0 , sicer 20ms ) [ , ] Slika 16 : Blokovni prikaz tvorbe šumnega signala pri HNM modelu .
Osnovni vir šumnega dela signala je generator Gaussovega belega šuma z enotsko varianco .
Sistemi za sestavo govora 33 Signal iz generatorja potuje skozi mrežni filter p-tega reda , katerega koeficiente izračunamo v postopku analize naravnega govornega signala , nato ga pa še množimo z varianco , ki smo jo tudi izračunali pri analizi naravnega govornega signala .
Za vsak okvir vzorcev končnega umetnega govornega signala tvorimo dva okvirja vzorcev šuma .
Pri zvenečih glasovih je okvir dolg eno periodo osnovnega tona , pri nezvenečih pa je dolžina postavljena na 10 ms .
Pri zvenečih glasovih signal pred seštevanjem še dodatno filtriramo z visoko prepustnim filtrom , ki iz šumnega signala odstrani vse frekvence do meje , ki ustreza frekvenci najvišje harmonske komponente iz harmoničnega dela govornega signala .
S je na grafu označen čas sredinskega vzorca i-tega analiznega okvirja , časovna razlika do sredinskega vzorca i+1-ega analiznega okvirja pa je 3.3 Tretja generacija sistemov za sestavo govora Tretjo generacijo sistemov za sestavo govora označujeta dva pristopa .
• Procese , ki so prisotni pri sestavi govora , modeliramo s pomočjo statističnih metod , v glavnem s pomočjo prikritih modelov Markova .
Pri sestavi poskušamo izkoristiti statistične informacije o govornem signalu , ki jih zberemo v procesu učenja razpoznavalnika .
• Govorni signal sestavljamo s pomočjo izbire glasovnih enot .
Metode tretje generacije sistemov za sestavo govora uporabljajo signalno procesne algoritme druge generacije ( npr. TD-PSOLA ali algoritmi sinusnih modelov ) le za gladko lepljenje pri sestavi , ne pa tudi za spreminjanje prozodičnih lastnosti govora .
Prozodične lastnosti skušajo zajeti z velikim številom posnetkov glasovnih enot , izmed katerih potem v procesu sestave izberejo tako zaporedje glasovnih enot , ki najbolj ustreza specifikacijam želenega govornega signala .
Vse variacije posamezne glasovne sestavne enote , ki jo uporabljamo v procesu lepljenja , lahko obvladamo samo s spremembo trajanja in s spremembo periode osnovnega tona enote .
Ti dve predpostavki sta se uveljavili predvsem zaradi inženirskih razlogov , saj ju je izmed vseh značilnosti govornega signala , ki vplivajo na naravnost , najlaže določiti in spreminjati , hkrati pa predstavljata glavno omejitev za doseganje višje kakovosti umetnega govornega signala .
Ker imamo pri sestavi govora z izbiro glasovnih enot v zbirki podatkov zajetih več informacij o prozodiji , kot pri sestavi s pomočjo lepljenja , se morajo razlikovati tudi opisi enot v zbirki podatkov .
Tipičen opis določil dvoglasnika " na " v zbirki za sestavo s pomočjo lepljenja glasovnih enot je podan z 0 122 75 v zbirki za sestavo s pomočjo izbire glasovne enote pa z Sistemi za sestavo govora 35 0 122 0 125 Z dodatki v zapisu želimo pokriti večji del prozodije , kot to lahko storimo , če spreminjamo le hitrost izgovorjave in periodo osnovnega tona .
V primeru podanem z enačbo ( 3.17 ) sta tako tudi podatka o tem , ali je dvoglasnik del naglašenega zloga ali ne in ali je bil dvoglasnik del končnega zloga v izrazu oziroma stavku .
Med najbolj znanimi tipi glasovnih enot so : polglasovi , glasovi , dvoglasniki , triglasniki , polzlogi , zlogi , dvozlogi , besede , stavki , ali tudi okvirji vzorcev govornega signala konstantne dolžine .
Cilj iskanja je najti tako zaporedje enot v zbirki , ki nam da najmanjšo možno ceno oziroma minimalno vrednost funkcije = min , + , .
Pri natančnejšem določanju funkcije cene zadetka sta se uveljavila dva različna pristopa in sicer : • izračun cene pri predpostavki o neodvisnosti značilk in • izračun cene kot razdalje v akustičnem prostoru .
Po prvem pristopu predstavlja vsaka kombinacija značilk eno oglišče hiperkocke , razdalja med ogliščem , kateremu ustreza nabor določil , in med najbližjim ogliščem , v katerem imamo enoto iz zbirke , pa predstavlja ceno zadetka .
Na sliki 17 lahko vidimo primer dvorazsežnega prostora značilk , ki ga uporabimo pri računanju cene zadetka .
naglas da konec izraza da naglas ne konec izraza da konec izraza 1 Slika 17 : Prikaz prostora znaČilk za izraČun funkcije cene zadetka razsežnosti 2.
Poleg Evklidske metrike , ki jo podaja enačba ( - ) , lahko uporabimo tudi metriko Manhattan , ki je podana z enačbo = ( - ) , ( 3.22 ) Sistemi za sestavo govora 37 ali pa tudi Mahalanobisovo metriko , ki razdaljo med posameznimi komponentami dodatno uteži z obratno vrednostjo standardnega odstopanja komponente v vzorcu in jo podaja enačba = .
Prostor značilk v bazi naj bo enak kot na sliki 17.
Izračunati moramo razdaljo med točko ( 0 , 0 ) , ki je v bazi in točko ( 1 , 1 ) , ki jo iščemo .
38 Sistemi za sestavo govora značilnih lastnosti ležita zelo blizu skupaj v akustičnem prostoru , kar po prvem pristopu ni bilo mogoče .
Ko računamo ceno zadetka po drugem pristopu , s pomočjo porazdelitvene funkcije najprej postavimo nabor določil v neko predvideno točko v akustičnem prostoru , nato pa računamo ceno zadetka kot Evklidsko razdaljo do najbližjih točk v akustičnem prostoru , ki jih predstavljajo enote iz zbirke .
Poleg cene zadetka moramo pri računanju cene sestave govornega signala upoštevati in izračunati tudi ceno lepljenja glasovnih enot .
Rezultati raziskav [ 16 ] so pokazali , da samo velikost razlike med zadnjim vektorjem značilk glasovne enote i in prvim vektorjem značilk glasovne enote i+1 , ni dovolj zanesljivo merilo o slušni kakovosti spoja .
Funkcija za računanje cene spajanja mora upoštevati tudi opažanja , da se nekateri glasovi bolj neopazno lepijo kot drugi in temu primerno obtežiti ceno lepljenja .
Algoritem za računanje optimalne cene v splošnem zahteva računanje cene za vse mogoče kombinacije enot iz zbirke , kar je že pri majhnem številu enot neizvedljivo .
Zato se pri iskanju uporablja algoritme za bolj usmerjeno iskanje , med drugimi pogosto tudi znan Viterbijev algoritem [ 17 ] .
Poleg tega mora omogočati tvorbo govornega signala za neomejen nabor besed in za poljuben jezik .
Te zahteve , ki določajo tudi merila , narekujejo uporabniki .
To merilo zajema tako potrebno količino človeškega dela različne zahtevnosti , kot tudi vrsto in količino opreme , ki je potrebna pri izdelavi in kasneje pri uporabi sistema .
Tako naučen sistem bi moral seveda proizvajati umetni govorni signal visoke stopnje naravnosti ter razumljivosti in to za poljubno besedilo .
Danes namreč še ne obstaja sistem za sestavo govora , ki ne bi zahteval precejšnje količine strokovnega človeškega dela in sicer predvsem pri izgradnji ustrezne zbirke govornih enot iz katerih lahko potem sistem tvori govorni signal iz poljubnega besedila .
V tem poglavju je opisana izvedba sistema Nauči se Govoriti Sam ( NGS ) , ki je glavni dosežek doktorske disertacije .
Izjema so metode , ki uporabljajo eksplicitni model za tvorbo vzorcev govora .
V to skupino spadata formantna sestava govora , ki spada v prvo generacijo sistemov , in sistemi , ki tvorijo govorni signal s pomočjo prikritih modelov Markova ( HMM ) , ki pa spadajo že v tretjo generacijo sistemov .
Metode , ki tvorijo govorni signal s pomočjo lepljenja , pa po drugi strani zahtevajo precej prostora v pomnilniku za hranjenje posnetkov .
Glavno pomanjkljivost metod , ki uporabljajo eksplicitni model za tvorbo vzorcev govora , predstavlja premajhna stopnja naravnosti govornega signala , ki ga tvorijo .
Vse dosedanje raziskave kažejo na to , da je modeliranje vseh podrobnosti govorne cevi , ki so potrebne , da dosežemo visoko stopnjo naravnosti , zelo težak problem .
Noben obstoječ sistem ne dosega take stopnje naravnosti govora , kot jo sistemi , ki tvorijo govorni signal z lepljenjem glasovnih enot .
Osrednji del glavnega toka raziskav je zato danes usmerjen v metode , ki v taki ali drugačni obliki uporabljajo značilke naravnega govornega signala ali kar neposredno vzorce krajših odsekov naravnega govornega signala .
Izbira modela , ki tvori govorni signal s pomočjo prikritih modelov Markova , bi bila po eni strani dobra izbira , saj ravno na področju statističnih metod učenja HMM metode dosegajo najboljše rezultate .
Osnovo sistema NGS tako predstavlja metoda tretje generacije sistemov za sestavo govora , ki temelji na izbiri enot .
4.2 Določitev glasovne enote Glasovna enota , ki bi bila primerna za izgradnjo zbirke posnetkov NGS sistema , mora nujno zadostiti vsaj dvema meriloma : • v povprečju mora biti sestavljena iz dovolj majhnega števila glasov , da je število različnih realnih kombinacij , ki se pojavijo v živem jeziku , obvladljivo , se pravi , da lahko zbirko vseh potrebnih enot shranimo vsaj na diskovnem pomnilniku povprečnega računalnika ; • zbirko enot je mogoče pridobiti iz posnetkov naravnega govora s pomočjo algoritma za samodejni razrez .
Dvoglasniki , kot enota lepljenja , ki se najbolj pogosto uporablja v sistemih za sestavo govora , niso najbolj primerni gradniki zbirke glasovnih enot NGS sistema , predvsem zaradi tega , ker ne obstaja algoritem za dovolj zanesljiv samodejni razrez oziroma samodejno označevanje dvoglasnikov .
Položaj določenih vrst glasov v dvoglasnikih je zelo težko določiti in bo ustrezen algoritem zaradi tega razloga tudi zelo težavno razviti .
Oba pristopa povzročata težave pri izdelavi NGS sistema , ker mora imeti snovalec na voljo dovolj kakovosten razpoznavalnik ali sestavljalnik .
Natančna in zanesljiva določitev položaja poljubnega glasu v govornem signalu je v splošnem izredno težak problem , ki mogoče sploh ni rešljiv .
Najboljši razpoznavalniki govora na nivoju glasov namreč dosegajo 75% natančnost razpoznave [ 5 ] .
Lažje rešljiv problem je zanesljivo določiti položaj skupin glasov , ki jih imenujmo kar značilni glasovi , saj imajo take spektralne značilnosti , da se dovolj razlikujejo od ostalih glasov .
Pri takih glasovih je oblika govorne cevi stabilna dalj časa in niso posledica prehodnih pojavov .
Tudi skupna energija zvočnega signala je pri samoglasnikih običajno višja od ostalih glasov .
Vse navedene glasove ( samoglasniki , polglasnik ?
Iz zaporedja glasov v vhodnem besedilu pa potem lahko določimo katere glasove dejansko predstavljajo vzorci signala .
Poglejmo si postopek prirejanja še na primeru .
Algoritem za določanje značilnih glasov nam vrne naslednje zaporedje zs-sa-zs - zs-sa-zs-sa ( zs - značilni soglasnik , sa – samoglasnik ) skupaj s časi pojavitve posameznega značilnega glasu .
Kot začetni glas v glasovni enoti se lahko pojavi poljuben glas jezika , ki je prvi v 42 NGS ali Nauči se Govoriti Sam neprekinjenem zaporedju glasov od začetka govorjenja , ali po premoru v izgovorjavi .
Kot končni glas lahko tudi nastopa poljuben glas , ki je zadnji v neprekinjenem zaporedju glasov od začetka govorjenja , ali pa zadnji glas pred premorom v izgovorjavi .
Kot začetni glas v glasovni enoti se lahko pojavi poljuben glas jezika , ki je prvi v neprekinjenem zaporedju glasov od začetka govorjenja , ali po premoru v izgovorjavi .
Če je začetni ali končni glas že samoglasnik , so v govorno enoto vključeni še glasovi do naslednjega oziroma od prejšnjega samoglasnika .
Z rezanjem govora na značilnih glasovih lahko dosežemo dovolj visoko zanesljivost samodejnega rezanja s pomočjo računalnika , kar je razvidno iz rezultatov v poglavju 5.
Tudi dolžina enot je po predvidevanjih obvladljiva , saj spada v skupino značilnih 14 od 29 fonemov slovenskega jezika .
Statistike o številu tako določenih enot v slovenskem jeziku sicer ni , jo bo pa mogoče sčasoma pridobiti s pomočjo rezultatov projekta Fida oziroma FidaPLUS [ 6 ] .
Ker spadajo med značilne glasove vsi samoglasniki in šest soglasnikov , predpostavljamo , da je najkrajša dolžina glasovne enote , ki smo jo določili , primerljiva vsaj s triglasniki , ki se pojavljajo v slovenskem jeziku .
Podrobnejši opis preizkusa prototipne različice smo podali v nadaljevanju v poglavju 5.2.
Vhodno besedilo se najprej obdela v modulu , ki znakovni zapis pretvori v glasovni zapis ( grapheme-to-phoneme conversion ) .
Ta del se nanaša na jezikovna znanja in ni obdelan v doktorski disertaciji .
Glasovni zapis se v naslednjem modulu razreže na zapise sestavnih glasovnih enot , katerih obliko smo podrobneje opisali v poglavju 4.2.
V bazi posnetkov hranimo vzorce od začetka prvega do konca zadnjega glasu glasovne enote .
Te dodatne vzorce hranimo zato , da lažje določimo točko lepljenja , kjer je akustična razdalja med sosednjimi enotami v končnem zaporedju najmanjša .
Zapisi določil glasovnih enot v bazi prototipne različice sistema NGS vsebujejo naslednje podatke : • število glasov v enoti , • niz znakov kot glasovni zapis vseh glasov govorne enote , • frekvenco osnovnega tona za prvi in zadnji glas , • dolžino trajanja za prvi in zadnji glas , • dvojiško označbo , ali je bila posneta govorna enota začetna enota stavka , ali ne , • dvojiško označbo , ali je bila posneta govorna enota končna enota stavka , ali ne , • kazalec na besedilo celega stavka iz katerega je bila enota izrezana in • zaporedno številko enote v stavku iz katerega je bila izrezana .
Pri izračunu cene lepljenja ( enačba 3.18 ) smo uporabili prvi pristop , ki je opisan v poglavju 3.3.1.
Kot funkcijo za izračun cene zadetka T smo uporabili enačbo ( 3.24 ) .
Utež za glasovni zapis in utež za število glasov v enoti smo postavili na visoko konstantno vrednost , tako da funkcija že v primeru , da ni ujemanja na enem glasu , vrne vrednost , ki je za velikostni razred večja od maksimalne možne celotne cene lepljenja v primeru popolnega ujemanja glasovnega zapisa .
Pri frekvenci osnovnega tona , dolžini glasu ter pri oznakah za začetno oziroma končno enoto so uteži v prototipni različici postavljene na 1 , v splošnem pa so učljive .
V primeru , da sta zaporedni govorni enoti hkrati tudi zaporedni govorni enoti v učnem posnetku naravnega govornega signala , kar lahko razberemo iz zadnjih dveh podatkov v zapisu določil , se cena spoja J postavi na 0.
Del sistema , ki je na desni strani slike 18 prikazan s črtkanimi črtami , je aktiven le v procesu učenja , ko v sistem dodajamo nove posnetke glasovnih enot .
Bistven del sistema predstavlja modul za samodejni razrez vzorcev naravnega govornega signala na glasovne enote , ki jih potem uporabljamo v procesu sestave govora .
V bazo posnetkov v procesu učenja dodamo samo tiste glasovne enote , brez katerih bi bila akustična razdalja med naravnim in umetnim govorom večja od maksimalne napake , ki jo v sistem vnese sinusni generator , oziroma primerke glasovnih enot za zaporedja glasov , za katera v bazi še ni nobenega posnetka .
vzorci naravnega govornega signala Samodejni razrez vzorcev naravnega govornega signala na zaporedje glasovnih enot .
Slika 18 : Zgradba in prikaz delovanja sistema NGS .
NGS ali Nauči se Govoriti Sam 45 V nadaljevanju tega podpoglavja je najprej podrobneje opisan algoritem za samodejni razrez , zatem algoritem učenja sistema , nato pa še postopek tvorjenja vzorcev umetnega govornega signala s pomočjo sinusnega generatorja , ki ga uporabljamo tudi za lepljenje glasovnih enot .
Tak nabor značilk narekuje sinusni generator , ki ga uporabljamo za tvorbo vzorcev umetnega govornega signala .
V drugem delu algoritma značilnim glasovom priredimo ustrezne točke na časovni osi in jih tako poravnamo z vzorci govornega signala .
Potencialnih točk na časovni osi , ki jih dobimo v prvem delu algoritma , je v splošnem več kot je značilnih glasov v vhodnem besedilu , zato v drugem delu algoritma značilnim glasovom priredimo tiste točke na časovni osi , ki padejo v časovni interval , ki ustreza mestu glasu v besedilu .
Primer rezultatov algoritma prikazuje slika 19 , ki prikazuje samodejni razrez za besedi " čez cesto " .
V nadaljnji analizi uporabimo samo zaporedja značilk , ki presežejo navedeni energijski prag .
Korak 2 : Za vsak nabor značilk i izračunaj vrednost funkcije po enačbi = - , ( 4.1 ) kjer je S dolžina okvirja , ki predstavlja zaporedno število vektorjev značilk , ki jih uporabimo značilk , vektor značilk , ki predstavlja približek amplitudnega spektra dela govornega signala , je v našem primeru 393 , ker imamo toliko filtrov v naboru , za dolžino okvirja S pa smo vzeli 51 , tako da pokriva 250 ms govornega signala .
znotraj okna dolžine S , kjer je i-ti vektor značilk srednji vektor znotraj okvirja .
Zapis besedila je skupaj z vzorci govora vhodni podatek algoritma .
Korak 2 : za 2 , sicer povečaj dolžino iskalnega intervala ?
Pri računu upoštevaj preostali čas od trenutne časovne meje do konca dela posnetka nad nivojem šuma in preostale glasove besedila .
NGS ali Nauči se Govoriti Sam 49 4.3.2 Sinusni generator Pri tvorbi vzorcev govornega signala sistem NGS uporablja sinusni generator , ki je primer čistega sinusnega modela ( poglavje 3.2.2 ) .
Za sinusni generator smo se odločili , ker umetnega govornega signala , ki ga z njim tvorimo z značilkami pridobljenimi iz naravnega govornega signala ( analizno-sestavni sistem ) , ne moremo ločiti od naravnega govora .
Z izbiro sinusnega generatorja smo zmanjšali vpliv nizkonivojske sestave govornega signala pod prag človeške zaznave , tako da lahko vzroke za morebitni nenaravno zveneč ali celo nerazumljiv umetni govor , ki bi ga tvoril sistem NGS , iščemo v drugih gradnikih sistema .
Z rešitvijo tega problema rešimo tudi problem zlivanja okvirjev .
Rešiti je potrebno tudi " rojevanje " in " umiranje " frekvenc , to sta primera , ko je število frekvenc v predhodnem okvirju manjše oziroma večje kot v naslednjem okvirju .
Največ sprememb nastane v hitro spreminjajočih se delih govornega signala , kot so na primer prehodi med zvenečimi in nezvenečimi glasovi .
Postopek prirejanja frekvenc lahko zapišemo v naslednjih treh Predpostavimo , da smo frekvence , , …
za frekvenco V tem primeru frekvenca " umre " in ima v okvirju + 1 amplitudo 0.
Širina ujemalnega intervala b ) Posreči se nam najti frekvenco v okvirju + 1 , ki leži v ujemalnem intervalu ?
k n+1 k n k n-1 frekvenca " umre " V tem koraku dokončno potrdimo vse izbire , narejene v prvem koraku .
Ker je frekvenca odvod faze po času , mora vrednost 52 NGS ali Nauči se Govoriti Sam Odvod kubične fazne funkcije je enak = + 2 + 3 .
Dobimo dve enačbi s tremi neznankami ?
Taka funkcija nakazuje na enakomerne fazne spremembe brez velikih skokov , kar posredno pogojuje majhne in enakomerne spremembe frekvence , ki je prvi odvod faze po času .
Tako za določitev vrednosti X poiščemo minimum funkcije = [ ( , )] = 4 ( ) + 12 + 12 ( ) , ( 4.13 ) NGS ali Nauči se Govoriti Sam 53 vrednost tisto celo število , ki je najbližje minimumu funkcije f ( x ) , kjer je x zvezna spremenljivka .
( 4.15 ) Tako dobljena fazna funkcija zadovolji postavljene začetne pogoje in da zahtevano maksimalno gladko odvito fazo .
Določiti moramo le še začetno fazo pri tistih frekvenčnih stezah , ki se v okvirju šele rodijo ( amplituda 0 ) in za njih neka izmerjena vrednost obstaja = - , ( 4.16 ) trenutno fazo za vsako frekvenčno stezo , ki sledi hitrejšim spremembam , ki so posledica spreminjanja frekvence in počasnim spremembam , ki so posledica faznih sprememb .
Izhod iz sinusnega generatorja lahko končno zapišemo kot = ( ) cos , ( 4.17 ) ki predstavlja govorni signal sestavljen z NGS .
4.3.3 Učni algoritem Postopek učenja sistema lahko poteka v sprotnem sodelovanju z uporabnikom .
Vsaj v začetnem delu pa je proces hitrejši , če uporabnik vnaprej posname človeški glas pri branju določene količine besedil .
Raziskave [ 35 ] so pokazale , da je za visoko kakovost umetnega 54 NGS ali Nauči se Govoriti Sam govornega signala potrebno posneti vsaj za eno uro naravnega govornega signala iz besedil , ki pokrijejo čim večji del glasovnih značilnosti jezika .
Uporabnik v procesu učenja vnese v sistem besedilo in zatem posluša umetno sestavljen govorni signal .
V postopek učenja vstopajo znakovni zapis besedila in vzorci govornega signala .
Amplitudni spekter izračunaj na vsakih 5 ms s frekvenčno ločljivostjo 20 Hz. Korak 6 : Ta korak ima dve možni izvedbi glede na to , ali človeški uporabnik sproti sodeluje v procesu učenja , ali ne .
Če uporabnik ne sodeluje , se v bazo posnetkov dodajo tiste glasovne enote , kjer razlika med naravnim in umetnim govornim signalom presega maksimalno napako sinusnega NGS ali Nauči se Govoriti Sam 55 generatorja .
V primeru , če uporabnik sodeluje , je dopustna napaka lahko večja , če uporabnik s poslušanjem oceni , da je umetni govorni signal kljub napaki , ki je večja od napake sinusnega generatorja , dovolj kakovosten .
Korak 7 : Če so v bazo posnetkov dodani novi posnetki glasovnih enot , izvedi korak učenja odločitvenega drevesa , ki ustrezno popravi uteži pri funkciji za izračun cene .
Cena sestave posnetka , ki smo ga ravnokar obdelali , mora biti po tem koraku učenja najnižja , če uporabimo na novo dodane posnetke govornih enot .
Korak 8 : Če želimo sistem še naprej učiti z dodatnimi zapisi besedil in posnetki ustreznih govornih signalov , potem ponovimo korak 1 , sicer se učni algoritem konča .
4.4 Zmanjšanje števila značilk za krmiljenje sinusnega generatorja Del raziskav je bil namenjen tudi zmanjšanju števila potrebnih značilk za krmiljenje sinusnega generatorja .
Značilke , ki jih uporablja sinusni generator , niso primerne za zapis govornega signala v zbirki glasovnih enot , ker bi bili zapisi skoraj dvajsetkrat daljši od običajnega PCM zapisa govornega signala .
Glavni razlog za zmanjšanje števila značilk ob ohranitvi enake kakovosti umetnega govornega signala je predvsem v tem , da bi se s tem zmanjšala tudi računska zahtevnost postopka zlivanja .
Za znižanje števila značilk predlagamo nov model sinusnega generatorja , ki deloma sloni na modelu , ki je opisan v [ 29 ] kot determinističen plus stohastičen model ( DSM ) .
Prvi del postopka do pridobitve podatkov o naboru frekvenc , amplitud in faz govornega signala je pri obeh modelih enak – uporabimo kratko časovno Fourierjevo transformacijo oziroma nabor filtrov .
Iz teh komponent sestavimo umetni govorni signal , katerega amplitudni spekter odštejemo od amplitudnega spektra naravnega signala in dobljeni preostanek potem 56 NGS ali Nauči se Govoriti Sam obravnavamo kot šum oziroma stohastični del signala .
Cel postopek analize in sestave govora sinusnega generatorja po zgledu na DSM model prikazujeta sliki 21 in 22.
frekvence , amplitude faze govorni signal spektralna ovojnica ( amplitudni spekter ) fazni spekter okno Slika 21 : Sestavljalnik sinusnega generatorja , ki je predelan po vzoru na DSM model .
Iz vrhov funkcije Ev so položaji glasov s in c v besedi jasno določljivi , ravno tako tudi položaji samoglasnikov a , o in samoglasniškega para ia .
Glas j na koncu besede se pri izgovorjavi zlije z i , tako da imamo v besedi v bistvu dva samoglasniška para ia .
Posamezne samoglasnike znotraj samoglasniškega para določimo kot lokalne minimume Evklidske razdalje med amplitudnimi spektri dveh vektorjev značilk , ki sta razmaknjena za 40 ms , kar lahko vidimo na sliki 24.
Slika 25 prikazuje spektrograme in vrhove funkcij W in Ev za skupino besed " v Stožce po rožce " .
Na določene težave naletimo v primerih , ki ju prikazujeta sliki 27 in 28.
V besedni zvezi " z zažigalnico " se glas v predlogu zlije skupaj s prvim glasom besede , kar je seveda običajno pravilo pri izgovorjavi besed in to moramo pri našem iskalnem algoritmu značilnih glasov tudi upoštevati .
Večjo težavo povzroča zelo neizrazit maksimum funkcije W pri zadnjem samoglasniku e. Pri dovolj nerazločni izgovorjavi se lahko zgodi , da za določen samoglasnik v zadnjih zlogih besed v stavku sploh ni ustreznega vrha funkcije W. V tem primeru mora aplikacija , ki uporablja algoritem , od uporabnika preprosto zahtevati , da stavek še enkrat izgovori .
64 Rezultati Kakovost algoritma za samodejni razrez smo preverili na ročno označenih oziroma razrezanih primerih posnetkov besedil .
Pri napakah gre za napačno prireditev vrha funkcij W oziroma E , kar ima za posledico , da se del glasu , ali tudi cel glas pri razrezu premakne v skupino v katero ne spada .
5.1 Slušni testi metode za lepljenje glasovnih enot Glavno merilo pri izboru ustrezne metode za lepljenje glasovnih enot je vpliv metode na kakovost govornega signala , ki ga dobimo .
V postopku sestave govora se vsa popačenja , ki jih v tem postopku vnašamo , seštevajo in če metoda , s katero na koncu tvorimo vzorce govornega signala tudi pri optimalnem naboru vhodnih vrednosti ne more proizvesti vzorcev kakovostnega govornega signala , je rezultat , kjer so prisotne tudi ne-optimalne vrednosti , še slabši .
Pri velikem številu metod so avtorji zapisali , da tvorijo umetni govorni signal , ki je skoraj neločljiv , ali povsem neločljiv od naravnega .
Za sinusni generator ( SG ) , ki je primer čistega sinusnega modela pa opravljeni slušni testi kažejo , da lahko tvori govorni signal , ki je neločljiv od naravnega .
Slušni preizkus kakovosti govornega signala SG modela je potekal na naslednji način .
Najprej je poslušal nekaj stavkov umetnega govora različne kakovosti ter nekaj stavkov naravnega govora , da je dobil slušni vtis , kakšne so razlike med umetnim in naravnim govorom .
Vsako dvojno predvajanje stavka je poslušalec lahko slišal le enkrat – brez ponavljanj .
Umetni govorni signal je bil sestavljen iz zaporedja značilk , ki smo jih pridobili iz posnetka naravnega govora in sicer smo uporabili izhode 393 parov KEO filtrov s faznim zamikom ?
Zaporedja značilk , ki smo jih pridobili pri analizi , smo v enakem vrstnem redu takoj uporabili v postopku sestave .
Slušni preizkus je vsak poslušalec ponovil za štiri različne čase osveževanja filtrov ( 5ms , 10ms , 15ms in 20ms ) in štiri različne vrednosti energijskega prispevka ?
Pri vrednostih parametrov za katere so področja na sliki 28 označena z najtemnejšim sivim odtenkom , so imeli vsi poslušalci precej težav pri razločevanju , je pa vsak pravilno razločil kakšen stavek .
Poslušalca , ki je dosegel najboljše rezultate , smo prosili naj še natančneje posluša in če se mu kakorkoli zazdi , da je en posnetek zveni bolj umetno od drugega , naj to označi .
Prikazani rezultati raziskav dodatno potrjujejo hipotezo modela govorne cevi , da lahko obliko govorne cevi pri človeku obravnavamo kot nespremenljivo za čase , ki so krajši od 10 ms .
Enak slušni test [ 34 ] smo opravili tudi s HNM modelom , ki je bil razvit prav posebej za sisteme za sestavo govora z lepljenjem .
Model smo želeli uporabiti namesto SG modela , ker je za njegovo krmiljenje potrebno mnogo manjše število značilk .
Zaradi tega smo se odločili , da izmerimo s kakšno zanesljivostjo lahko ločimo naravni in umetni govor in kako vpliva spreminjanje števila uporabljenih harmonskih komponent osnovne frekvence na kakovost govora .
Za slušni test smo sestavili vzorce umetnega govora , ki so vsebovali različen energijski prispevek najmočnejših harmonskih 68 Rezultati Slika 30 : Napaka SG in HNM modelov po posameznih okvirih v Časovnem prostoru ; pri obeh modelih smo uporabili znaČilke , ki dajo najkakovostnejši govor .
Slika 31 : Napaka SG in HNM modelov po posameznih okvirjih v frekvenČnem prostoru ; pri obeh modelih smo uporabili parametre , ki dajo najkakovostnejši govor .
Napaka je podana kot kvadrat razlike amplitudnih spektrov Rezultati 69 Glede na rezultate raziskav je glavna pomanjkljivost SG modela veliko število značilk , ki so potrebne za doseganje naravne kakovosti govornega signala .
Na slikah od 32 do 34 lahko vidimo porazdelitve števila značilk , ki so potrebne , da zajamemo različne energijske prispevke ( ?
Analizirali smo 390 sekund govornega signala ( 78000 okvirjev govornega signala po 5 ms ) , grafi na slikah pa prikazujejo števila okvirjev , kjer smo posamezen energijski prispevek ?
dosegli s številom značilk , ki se je gibalo med 1 in 392.
Večji del energije signala pri zvenečih glasovih je namreč porazdeljen na manjše število frekvenčnih komponent , ki sestavljajo formante , pri nezvenečih glasovih , ki so podobni obarvanemu šumu , pa je energija bolj enakomerno porazdeljena čez celo frekvenčno področje posnetkov govornega signala ( od 70 Hz do 7930 Hz ) , ki smo jih uporabili pri meritvah .
Če želimo pri sestavi govora uporabiti toliko frekvenčnih komponent , da skupaj dosegajo 99% energije signala , s čimer tudi dosežemo takšno kakovost umetnega govora , da ga ne moremo več ločiti od naravnega , lahko na podlagi grafa na sliki 34 sklepamo , da mora umetni govorni signal , ki dosega visoko stopnjo naravnosti , vsebovati tudi zaznaven delež različno obarvanega šuma .
Osnovna glasovna enota baze je bilo glasovno zaporedje samoglasnik – neznačilni glasovi – samoglasnik .
Učna baza je skupno vsebovala 22 različnih posnetkov v skupni dolžini 34 sekund , ki jih je sistem razrezal v 139 glasovnih enot .
Po učenju sistema z zapisi besedil in posnetki govornega signala smo sestavili umetni govorni signal za testno zloženo poved : " Nekaj časa je naporno premišljal , nato pa se je domislil sijajne razlage .
Umetni govor , ki ga je sistem NGS tvoril , je bil dobro razumljiv .
WAV datoteka z vzorci umetnega govora se nahaja v datoteki ' NGS.WAV ' na CD-ju v prilogi .
Bistvena prednost predstavljenega sistema pred ostalimi učljivimi sistemi za sestavo govora je , da za njegovo učenje ne potrebujemo že naučenih razpoznavalnikov ali drugih delujočih sestavljalnikov govornega signala .
Za samodejni razrez govornega signala smo razvili nov algoritem , ki ne skuša določiti položaja vseh glasov v govornem signalu , ampak le položaj značilnih glasov jezika .
Kot nizkonivojski generator vzorcev govornega signala sistem uporablja sinusni generator , ki sicer glede procesorskih in pomnilniških zahtev ni optimalen , smo pa s slušnimi testi uspeli pokazati , da lahko tvori govorni signal , ki ga ni mogoče ločiti od naravnega govornega signala .
Predvidevamo , da bomo pri nadaljnjih raziskavah lahko uporabljali bazo 4000 posnetih stavkov slovenskega jezika , ki naj bi bila predvidoma dokončana v letu 2011 in ki pokriva večino glasovnih značilnosti slovenskega jezika .
Nadaljnje raziskave bomo posvetili iskanju prozodičnih značilk , ki najbolj vplivajo na kakovost umetnega govornega signala .
Če bo v razrezanih glasovnih enotah kakšen glas premalo ali preveč , glede na znakovni zapis glasovne enote , bo od neke točke naprej razlika med naravnim in umetnim govorom skokovito porasla in na podlagi te informacije bo mogoče ustrezno popraviti meje razreza .
Razdelali smo postopke za izgradnjo sistema NGS , ki se samodejno nauči govoriti iz besedil in pripadajočih posnetkov govora , ter pri tem kot bistveni del uporablja algoritem iz točke 1.
Postopki izgradnje sistema ne potrebujejo že naučenih razpoznavalnikov , ali že zgrajenih sestavljalnikov govora in omogočajo izgradnjo sistema tako rekoč iz nič , kar pomeni novost na področju računalniške sestave govora .
Kot stranski rezultat izgradnje sistema NGS smo s pomočjo statističnih testov pokazali , da lahko s čistim sinusnim modelom tvorimo umeten govorni signal , ki ga ne moremo ločiti od naravnega govora .
DIDAKTIČNA ANALIZA SLOVENSKEGA BESEDIŠČA IN ELEKTRONSKIH VIROV NA PODROČJU RAČUNALNIŠTVA PROGRAM DIPLOMSKEGA DELA V diplomskem delu pokažite , kako si lahko pri iskanju slovenskega besedišča za besede in besedne zveze s področja računalništva in informatike pomagamo z informacijsko komunikacijsko tehnologijo .
V diplomskem delu odgovorite na vprašanja : kako in kam usmeriti učitelja računalništva in informatike pri iskanju slovenskega besedišča , kje iskati ustrezne sopomenke v tujem jeziku , kako izrabiti informacijsko komunikacijsko tehnologijo pri prevajanju strokovnih besedil s področja računalništva in informatike , ki nimajo slovenskih prevodov , kje in kako poiskati orodja za prevajanje teh strokovnih izrazov , kako čim bolje uporabiti računalnik v procesih prevajanja in tolmačenja in si olajšati delo v izobraževanju .
Izdelajte slovensko-angleški slovarček besed in besednih zvez iz srednješolskega učbenika Informatika in pokažite , da lahko na enostavni način izdelamo uporabni pripomoček .
Izpostavite elektronska orodja in svetovni splet in poiščite čim več spletnih orodij in pripomočkov , ki so uporabni in koristni za učitelje računalništva in informatike .
Manchester , Northampton .
• Vintar , Š. , Program s pomnilnikom prevodov s stališča morebitnega uporabnika , www2.arnes.si / ~ svinta / jt.rtf .
Primerjala sem različne elektronske vire , od spletnih slovarjev , elektronskih enciklopedij in drugih virov , ki so nam v pomoč pri iskanju pomenov novih besed .
Kot primer analize postopkov zbiranja strokovnih izrazov na področju računalništva in informatike sem s pomočjo Microsoft Accessa izdelala interni slovarček .
S pomočjo slovarčka lahko uporabnik brska po izrazih , ki so izpostavljeni v posameznem poglavju srednješolske Informatike ali pa dodaja nova gesla in tako polni že obstoječo bazo podatkov .
Ključne besede : • elektronski slovar , • program s pomnilnikom prevodov , • korpus , • glosar , • procesi prevajanja , • strojno prevajanje , • lokalizacija , • konkordančnik , • podatkovna baza .
Ni dovolj le , da učitelj brezhibno obvlada svoje področje , dobro mora poznati tudi jezik .
Velikokrat se zgodi , da v slovenskem jeziku nimamo ekvivalentne besede , zato uporabljamo tujke .
Učitelji zaradi pomanjkanja gradiv v slovenskem jeziku težimo k izdelovanju svojih gradiv , ki bodo v pomoč ne le učencem in učiteljem ampak vsem ljudem , ki se ukvarjajo z računalništvom in informatiko .
Sama najbolje poznam delo prevajalca , saj sem se pri študiju prevajanja in tolmačenja velikokrat morala znajti in poiskati še neobstoječo rešitev za zahtevani prevod .
Podobno nalogo ima tudi učitelj računalništva in informatike .
Za iskanje besed in njihovih razlag lahko posežemo po literaturi , še lažje pa je , da si pomagamo z uporabo računalnika .
Elektronski slovarji so tisti , ki nam danes še najbolj olajšajo delo .
Uporabniku prijazno je tisto orodje , ki je hitro , vsebuje veliko terminov in je enostavno za uporabo .
V ozadju pa sem dodala skripto , pisano v programskem jeziku Visual Basic , ki proži dejanja med uporabnikom in podatkovno bazo .
Leta 1980 so , na primer , uporabljali elektronski pisalni stroj podjetja IBM .
Produktivnost in donosnost se je povečala za tri - do štirikrat .
Današnji računalniki nam omogočajo tudi , da iščemo odgovore po svetovnem spletu , komuniciramo z drugimi po svetu , s tem pa prihranimo veliko dragocenega časa in truda .
Računalnik ni priljubljen le pri naravoslovnih predmetih , kot sta računalništvo in tehnika , ampak tudi pri družboslovnih , kot je prevajanje in tolmačenje jezika .
Kot navaja dr. Ivan Gerlič [ 6 ] , lahko izpeljemo tri področja uporabe računalnika v izobraževanju : področje računalniškega izobraževanja , področje uporabe računalnika v izobraževalnem procesu in področje uporabe računalnika v dejavnostih , ki spremljajo izobraževanje .
Model loči tri področja , kot prikazuje Slika 1 : primarno , sekundarno in terciarno področje uporabe računalnika v izobraževanju .
Procese prevajanja in tolmačenja iz izvirnega jezika v ciljni jezik in iskanje informacij , ki se med samim procesom prevajanja pojavijo , bi uvrstila med Ekspertne sisteme I. generacije , saj sistemi prevajanja in tolmačenja temeljijo na uporabi baz znanja in umetne inteligence .
Ne le da imamo elektronske slovarje in programe , ki prevajajo namesto nas , razvija se tudi prepoznavanje govora in drugi procesi , ki zahtevajo od računalnika » človeško « razmišljanje .
Pozorni moramo biti na to , da se besedna zveza elektronska prevajalska orodja ne nanaša le na strojno prevajanje ( ang. Machine Translation ) .
Slika 2 : Proces prevajanja besedila Strojno prevajanje zapostavlja komunikacijo , kulturne in enciklopedične dimenzije , zato je vprašljivo , če sploh omogočajo prevajanje .
Sam proces prevajanja besedila prikazuje Slika 2. 3.1 Vpliv digitalizacije in avtomatizacije na prevajanje Živimo v svetu nenehnih sprememb in hitrega tempa življenja , zato težimo k temu , da si delo čim bolj poenostavimo .
Z avtomatizacijo1 procesa prevajanja največ prihranimo na času in seveda s tem znižujemo tudi stroške dela .
Zavedati se moramo , da v veliki meri razbremenimo in olajšamo delo posameznikov le pri opravljanju standardnih del .
Širjenje svetovnega spleta je glavni vzrok višanja stopnje avtomatizacije in digitalizacije na področju prevajanja .
Kot ugotavlja avtorica Christa Hauenschild [ 7 ] , predstavlja pomemben del razvoja internacionalnega trga uvedba brezplačnih spletnih računov , predvsem v Evropi .
2. uporaba računalniške tehnologije v filmski produkciji v začetku 70. let 20. stol .
Globalna računalniška omrežja in svetovni splet nam omogočajo dostop do podatkov kadarkoli in kjerkoli .
Ključni uspeh ekonomskega napredka so informacije .
Zato potrebujemo dobra orodja , s katerimi ločimo dobre in koristne informacije od balasta .
Uporaba informacijsko komunikacijske tehnologije ( IKT ) v prevajanju je danes « fait accompli « 4 vsakega jezikovnega strokovnjaka .
« ( Frank Austerműhl , 2001 , str. 7 ) Z uporabo sodobnih tehnologij dosežemo boljšo kvaliteto in večjo produktivnost , s pravilno uporabo elektronskih orodij pa povečamo avtomatizacijo .
Produktivnost lahko izboljšamo le z uporabo sodobnih metod informacijsko-komunikacijske tehnologije .
Vsak dan nastajajo nove besede , še posebej na področju IKT , biotehnologije , imunologije ali katerega koli drugega hitro razvijajočega se pogoj , brez katerega ne gre ( Angleško-angleški slovar : [ fetakompli ] m neskl .
Elektronske slovarje lahko izdamo na različnih elektronskih medijih ali jih postavimo na svetovni splet brez zakasnitev , hkrati pa jih lahko nadgrajujemo z najnovejšimi besedami in informacijami .
Veliko založniških hiš je zato spremenilo strategije izdajanja virov .
Dober primer tega je enciklopedija Britanika ( ang. Britannica ) ( http://www.britannica.com/ , obiskano 17. marca 2008 ) .
Večina enciklopedij in znanstvenih revij , ki so dragoceni viri za prevajalce , ne izhajajo v knjižni , ampak izhajajo v digitalni obliki .
Tiskane izdaje zato preprosto ne morejo tekmovati z digitalnimi , ker moramo prelistati celotno knjigo , da najdemo iskani podatek .
Slika 3 : Enciklopedija Britanika 8 3.3 Strojno prevajanje 3.3.1 Kaj je strojno prevajanje ?
Svetovni splet je postal vsakdanje orodje prevajalcev .
Za boljšo razumljivost poglejmo zgradbo ekspertnega sistema , ki jo prikazuje Slika 4. 9 Slika 4 : Zgradba ekspertnega sistema [ 6 ] Namen razvijalcev programske opreme je , da ustvarijo takšno programsko opremo , ki bo reševala probleme ustvarjalno in ne bo izvrševala le golih ukazov , pri tem pa bo nastajalo čim manj napak .
Takrat so bili programerji v organizaciji , kot so Ameriške letalske sile , prepričani , da bodo ustvarili takšno programsko opremo , ki bo človeški jezik prevedla v angleški ali kateri koli drugi jezik .
Vendar pa so bili rezultati drugačni od pričakovanih , kar se je zgodilo zaradi dveh poglavitnih razlogov : a ) Računalniki so imeli navidezno neomejeno količino pomnilnika za obdelavo podatkov , vendar je bilo nemogoče vključiti ustvarjalnost človeškega mišljenja .
b ) Človeški jezik ni sestavljen le iz znakov in simbolov , ki jih lahko programiramo , priredimo in jih obdelamo z računalnikom .
Jezik je veliko bolj kompleksna stvar kot seštevanje dveh števil , naj si gre za poezijo , filozofijo ali tehnične predmete .
Med večpomenskost pojma kot sta homonimija5 in homonima je beseda miška .
Miška je lahko žival , lahko je ocvrto pecivo ali računalniška miška .
Hauenschild-ova in Heizmann-ova sta v svojem delu zapisala [ 7 ] , da je leta 1966 odbor ameriške vlade ALPAC na podlagi poročila ukinil finančno pomoč vsem projektom na tem področju .
Težišče razvijanja strojnega prevajanja se je nato preselilo v Evropo , kjer je imela vodilno vlogo Evropska gospodarska skupnost .
Prvi sistem , ki so ga podprli , je bil sistem za angleško-francoske prevode Systran .
Prevajanje je potekalo tako , da se je posamezna beseda zamenjala z besedo iz dvojezičnega slovarja .
Pri projektu Systran so kot rešitev ponudili takšno prevajanje , ki temelji na analiziranju povedi .
V prvi fazi se analizira izhodiščna stavčna struktura , v drugi fazi poteka prevajanje iz izhodiščnega jezika v ciljni jezik , v zadnji fazi pa se ponovno sestavi poved .
Strokovnjaki so razvijali svoj pristop , ki se je imenoval interlingva7 .
Vzporedni korpus vsebuje izvirno besedilo in eno ali več prevodov istega besedila .
Prevodne enote , kot so stavki ali odstavki , so med seboj vzporedno poravnane .
lingua jezik ] pomožni jezik , ki sloni na latinščini in romanskih jezikih LINGV .
( Slovar tujk , 2002 , str. 508 ) 12 frekvence pojavitve besede ali besedne zveze in se na podlagi te odločijo , katera beseda bo ustrezala prevodu .
Ta programska oprema se razlikuje od najbolj enostavnih iskalnikov besed za turiste do kompleksnih programov za prevajanje tehničnih in znanstvenih podatkov .
Popolno natančnost lahko dosežemo le , če besedilo po strojnem prevajanju uredi še prevajalec .
Boljši sistemi strojnega prevajanja imajo vgrajene strokovne leksikone , ki pomagajo pri pravilnem odločanju o večpomenskosti besed in besednih zvez .
Nekateri programi nam omogočajo , da shranimo prevedena in popravljena besedila .
Ta besedila lahko uporabimo pri novih prevodih in iz njih črpamo iskano besedišče .
Da bi lahko izdelali sodobni sistem strojnega prevajanja v slovenskem jeziku , potrebujemo zbrano terminologijo .
Kot ugotavlja Vladimir Batagelj [ 3 ] , je v 1. polovici 60-ih let v zbirki Sigma izšlo več knjižic , ki so v slovenski prostor vnašale nova področja matematike , povezana z računalništvom .
Profesor Križanič je med svojim študijem v Moskvi napisal knjigo o elektronskih računalnikih , ki je leta 1960 izšla v zbirki Sigma .
V njej je opisal osnove številskih sestavov , vezij , programiranja in uporabe računalnikov .
Na področju računalništva se je začelo razvijati izrazje z delovanjem računalnika ZUSE Z-32 .
Pomembna spodbuda nadaljnjemu razvoju računalništva pri nas je bil kongres mednarodnega računalniškega združenja IFIP , ki je bil leta 1971 v Ljubljani .
Okoli leta 1970 so se začele priprave za uvajanje računalništva v srednje šole .
Pomembno vlogo pri skrbi za slovensko računalniško izrazje v osemdesetih in devetdesetih imata reviji Moj mikro in Monitor .
V letih Operacijski sistem na Mac računalnikih 14 1993/1994 za baze podatkov , kot so slovarji v računalniški obliki , ni bilo ustreznih programov in formatov , ki bi ustrezali specifičnim zahtevam .
Klasične baze podatkov , ki so bile na voljo , niso zadostile vsem zahtevam .
15 3.3.3 Spletni prevajalniki Za nas koristni so predvsem prevajalniki , ki jih najdemo na svetovnem spletu .
Ponekod so integrirani tudi v spletne iskalnike , tako kot je Babelfish integriran v spletni iskalnik Alta Vista .
Nam najbolj poznani so najpogosteje uporabljeni spletni prevajalniki , ki jih prikazuje Tabela 1. http://babelfish.yahoo.com/ , obiskano 17. marec 2008 16 Tabela 1 : Seznam nekaj najpogosteje uporabljenih spletnih prevajalnikov Spletni Spletni naslov Kratka razlaga prevajalniki Spletni prevajalnik lahko http://babelfish.altavi prevede odsek besedila ali Babel sta.com / ( obiskano celotno spletno stran v največje 17. marec 2008 ) jezike sveta .
Enostavni spletni prevajalnik http://www.systran.co lahko prevede besedilo ali Systran .
Na izbiro je : prevajanje besedil , www.worldlingo.com/e dokumentov , spletne strani in n / websites / url _ transla World Lingo elektronskega sporočila .
Uporaba prevajalnika je marec 2008 ) brezplačna .
17. marec 2008 ) http://www.word2wor d.com / dictionary.html Portal , kjer so izbrani Word2word ( obiskano 17. marec prevajalniki različnih jezikov .
marec 2008 ) Uporaba je brezplačna .
17. marec 2008 ) http://www.translatio Prevajanje fraz ali besed , n-services - Translation identificiranje jezika , prevod usa.com / free.shtml Services USA posamezne besede , spletne ( obiskano 17. marec strani .
2008 ) http://www.quickfoun Uporabniku omogoča prevajanje d.net / webdev / languag besedila ali spletne strani v Free Language e _ translation _ tools.ht največje svetovne jezike .
http://translate.googl Ponuja prevajanje besedila ali e.com / translate _ t spletne strani v večje svetovne Google ( obiskano 17. marec jezike .
18 Kot navaja Morry Sofer [ 10 ] , so nam spletni prevajalniki velikokrat v pomoč , ko hitro potrebujemo pomen besede ali besedne zveze , če nismo vešči v tujem jeziku .
Človek lahko veliko bolje prevede besedilo iz enega v drugi jezik , saj ima lahko določena beseda različne pomene v različnih kontekstih .
Spletni prevajalnik se ne ozira na kontekste besedil in ne loči odtenkov .
Njihova kvaliteta je slaba , saj vsebujejo izredno malo besed .
Napake pa se pojavljajo ne le pri izbiri besed ampak tudi v sami slovnični pravilnosti besedila , saj vemo , da je slovnica slovenskega jezika poleg pravil še polna posebnosti , ki jih moramo upoštevati pri pisanju in prevajanju besedil .
3.3.4 Uporaba strojnega prevajanja Določena jezikovna okolja omogočajo uporabo strojnega prevajanja .
Gre za takšna besedila , katerim je skupno ponavljanje izrazov .
Število besed v dnevni vremenski napovedi je omejeno in ga lahko prevedemo z 19 računalnikom iz enega jezika v drug jezik .
( Spletna stran kanadskega urada za vreme http://www.weatheroffice.gc.ca/canada_e.html , obiskano 18. maj 2008 ) b ) Drugi primer so uradna poročila , ki vsebujejo enostavna vprašanja .
Organizacija , kot je NATO , lahko s pomočjo strojnega prevajanja samodejno prevede poročila v 10 različnih jezikov .
( Spletna stran organizacije NATO , http://www.nato.int/ , obiskano 18. maj 2008 ) c ) Strojno prevajanje uporablja tudi podjetje iz zvezne države Illinois , ki prodaja kmetijsko mehanizacijo .
Za uspešnost prodaje potrebujejo navodila za uporabo strojev v številnih jezikih .
( Spletna stran Urada za kmetijstvo , http://www.ilfb.org/default.asp , obiskano 18. maj 2008 ) Frank Austerműhl [ 1 ] opozarja , da prevajalci ne marajo urejanja besedil po tem , ko so besedila že prevedena s strojnimi prevajalniki , saj je delo težje in vzame veliko več časa , kot če bi sami prevajali neposredno iz izvirnega v ciljni jezik .
Največjo korist strojnega prevajanja imajo razvijalci programske opreme in prevajalci , ki delajo s temi programi , ali pa tisti , ki urejajo besedila po samem postopku prevajanja .
Strojno prevajanje prevoda torej ni pocenilo , zato ne predstavlja grožnje prevajalcem .
Računalniška orodja nam omogočajo kakovostnejše prevajanje nekaterih besedil , sodobne informacijske in 20 komunikacijske tehnologije pa nam nudijo dostop do podatkov z vsega sveta .
3.3.5 Strojni prevajalniki za slovenski jezik Za slovenski jezik imamo nekaj poskusnih strojnih prevajalnikov .
Na tem področju se trudijo jezikoslovci , ki razvijajo jezikovne tehnologije .
Orodja , ki jih potrebujemo za uporabni strojni prevajalnik so naslednja : • programi za analizo oblikoslovnih lastnosti besed in besednih zvez , • korpusi , • dvojezični leksikoni itd.
Korpusi vsebujejo dele besedil ali celotna besedila , kar je uporabniku v veliko pomoč , saj lahko poišče besedo in razbere ne le njen pomen ampak tudi sobesedilo , v katerem se pojavlja .
Za razliko od korpusa vsebujeta tezaver in slovar zgolj besede ali besedne zveze .
Tezaver11 je seznam deskriptorjev12 in dodatnih informacij , ki določajo njihovo uporabo .
Osnova tezavra je natančen in kontroliran besednjak deskriptorjev .
Deskriptorjem so dodane informacije o sinonimih , sorodnih izrazih , rabi v preteklosti , omejitvah pri povezovanju z ostalimi deskriptorji ali drugačnimi Spletna enciklopedija Britanika , http://www.britannica.com/ , obiskano 20. maj Filozofska fakulteta Ljubljana , Informatika 1 , http://www.mf.uni- Deskriptorji so dogovorjene in standardizirane ključne besede ali ključne fraze .
Posamezen deskriptor opisuje točno določeno vsebino in samo ta deskriptor opisuje to vsebino .
Projekt ELAN vsebuje korpus , ki je največji slovenski dvojezični korpus .
Polovico besedila ima zapisanega v slovenskem jeziku , drugo polovico pa v izbranem tujem jeziku .
Besedila so komentirana in poravnana po povedih .
( Slovensko-angleški vzporedni korpus , http://nl.ijs.si/elan/ , obiskano 15. april 2008 ) Elan vsebuje besedila s področij : • zakonodaje Evropske Unije ( kmetijstvo , ekologija , strategija za vključevanje itd. ) , • gospodarstva , • računalništva , • farmakologije , • leposlovja .
Namenjen je prevajanju besedil iz slovenskega jezika v tuje jezike in obratno .
Kot je iz podatkov podjetja Amebis razvidno , je zaradi upoštevanja slovničnih pravil slovenskega in drugih jezikov Amebis Presis 22 učinkovitejši od klasičnih prevajalskih orodij , še posebej v kombinaciji z elektronskimi slovarji , ki jih je razvilo podjetje Amebis .
Slika 6 prikazuje poskusno aplikacijo prevajalnega sistema Amebis Presis .
Slika 6 : Poskusna aplikacija prevajalnega sistema Amebis Presis13 Nemogoče je pričakovati , da bo Amebis Presis vsako besedilo vedno in v celoti pravilno prevedel , saj je to zaradi spreminjajočih se jezikov , pomenskih odtenkov in različnih želja uporabnikov skoraj nemogoče .
http://presis.amebis.si/ , obiskano 5. maj 2008 23 Slovensko besedilo pretvori v govor .
Digitalne zbirke časopisnih člankov služijo prevajalcu kot dragocen vir podatkov , videokonferenčne sisteme pa uporabljajo kot komunikacijsko sredstvo .
Osnovna funkcija programskega dela je preveriti , ali beseda v slovarju obstaja ali ne .
Slika 7 : Diagram delovanja črkovalnika 25 Slovarski del je abecedno urejen seznam besed .
To so predvsem nove besede , ki jih ustvarjalci slovarja zbirajo iz besedil ali pa besede , ki jih uporabljamo najpogosteje .
V slovenskem črkovalniku so vse besede preverjene v slovarju slovenskega knjižnega jezika ali v slovenskem pravopisu in so vnesene v vseh morfoloških oblikah .
Črkovalniki so vgrajeni tudi v urejevalnike besedil .
• Novi aspell : priporočeni prosti črkovalnik prostih programov ( http://www.mail-archive.com/aspell- announce@gnu.org / msg00052.html , obiskano 2. avgust 2008 ) .
Pri obvestilih o napakah prikaže razlago , kaj naj bi bilo narobe .
To je še posebej pogost pojav , ko beremo svoje besedilo .
3.4.3 Urejevalnik besedil Popravljanje natipkanega besedila , ki je bilo shranjeno na magnetnem traku , je bilo zelo zapleteno .
Prvi računalniški program , ki je bil namenjen urejanju besedil , je ugledal luč sveta leta 1977.
Danes je pisanje in urejanje besedil najbolj 27 razširjeno opravilo , ki ga opravljamo z računalnikom .
Poleg pisanja , popravljanja , urejanja in oblikovanja lahko z urejevalnikom besedil sprotno preverjamo besedila s črkovalnikom , spajamo več sestavkov v enoten zapis , prenašamo dele besedila iz enega odstavka v drugega itd.
3.4.4 Urejevalnik spletnih strani Če prevajamo spletne vsebine in želimo prevedeno besedilo objaviti na spletu , je zaželeno , da poznamo tudi osnove spletnega urejanja .
Za delo s sodobnimi urejevalniki ni potrebno predznanje računalništva , zaželeno je le poznavanje katerega koli urejevalnika besedil , saj se urejevalniki spletnih strani uporabljajo podobno kot urejevalniki besedila .
Dokler pri delu uporabljamo en sam slovar in je iskanje omejeno le na iskanje po geslih , je delo z običajnim slovarjem v knjižni obliki enostavno , vendar zamudno .
Slika 8 : Delitev slovarjev Prvi elektronski slovarji so se pri nas pojavili že pred letom 1990 , ko so bili osebni računalniki v primerjavi z današnjimi še zelo počasne in okorne naprave .
http://www.zrc- Angleški slovarji različnih Katalog OKO sazu.si / oko / Slovarji.htm področij : moda , okolje , ( obiskano 25. junij 2008 ) popotništvo , …
25. junij 2008 ) 30 Angleški slovar , ki omogoča http://www.onelook.com/ Onelook iskanje besed ali besednih ( obiskano 25. junij 2008 ) zvez .
http://www.islovar.org/is Islovar kanje _ enostavno.asp ( obiskano 25. junij 2008 ) http://www.computeruser .
Za elektronsko enciklopedijo so značilne hiperpovezave , ki nam omogočajo hitro listanje med povezanimi informacijami .
Boljše in obsežnejše elektronske enciklopedije vsebujejo še večpredstavnostne vsebine , kot je film , animacija , zvočna datoteka in druge večpredstavnostne vsebine , ki uporabnika pritegnejo in ga vključijo v dvosmerno komunikacijo .
Kako poteka iskanje po elektronski enciklopediji , prikazuje Slika 9.
Prvo knjižno izdajo je doživela leta 1768 v Edinburgu na Škotskem .
Še pred dobrim desetletjem je bilo moč enciklopedijo dobiti le kot zbirko 32-ih debelih knjig .
Ko se je pojavila zgoščenka , so v začetku 90-ih let pričeli z izdajo v elektronski obliki .
Poskusna uporaba enciklopedije je brezplačna , nadaljnja uporaba se plača .
http://www.howstuff Spletna enciklopedija se osredotoča How stuff works.com / na delovanje predmetov ali stvari .
works ( obiskano 15. april Pokriva področja od živalstva do 2008 ) popotništva .
Uporabniku ponuja dostop do http://www.answers različnih svetovnih tem svetovnih Answer .
Uporaba enciklopedije je april 2008 ) brezplačna .
Uporaba je ( obiskano 15. april brezplačna .
Uporaba enciklopedije je ( obiskano 15. april brezplačna .
2008 ) Če iščemo strokovne izraze točno določenega področja , nam bodo v največjo pomoč strokovne enciklopedije .
Tabela 4 : Nekaj najpogosteje uporabljenih spletnih enciklopedij računalništva in informatike Enciklopedija Spletni naslov Opis Ko iščemo opis določene osebe , lahko že sami omejimo , za katero http://www.webope področje računalništva gre .
Spletna Webopedia dia.com / ( obiskano stran vsebuje tudi članke 20. april 2008 ) najnovejših tehnologij in novosti na področju računalništva in informatike .
Spletna stran 20. april 2008 ) prikaže tudi besedo dneva z razlago .
Računalniške revije so Computer rlanguage.com / spletno stran označile za eno language ( obiskano 20. april boljših , ki pokriva terminologijo 2008 ) računalništva in informatike .
Spletna stran je razdeljena na teme http://www.webkeys računalništva in informatike , vsaka oft.com / en / encyclop Web key soft tema pa vsebuje še po abecedi edia / ( obiskano 20. urejena gesla .
Uporaba je april 2008 ) brezplačna .
Na http://www.softpedi spletni strani najdemo članke s Softpedia a.com / ( obiskano področja tehnologije , varnosti , 20. april 2008 ) znanosti , poleg člankov pa najdemo tudi kritične razprave , preizkuse programov in podobno .
Originalna izdaja je vsebovala 15 000 besed .
Vsak sklop se je delil še na manjše enote in te na še manjše dele .
Znanstveno urejeni zbirki besed so dodane še informacije o sinonimih , sorodnih izrazih , rabi besede v preteklosti , omejitve pri povezovanju z ostalimi besedami ali druge informacije .
Osnovni glosarji vsebujejo pomen besede v določenem sobesedilu ali prevod , napredni glosarji pa vsebujejo poleg razlage besede še slovarske značilnosti in prevod besede .
slovar sploh ; tudi glosarij – a m ( Slovar tujk , 2002 , str. 402 ) 37 Tabela 5 : Nekaj spletnih tezavrov in spletnih glosarjev Tezaver / glosar Spletni naslov Opis Ta angleški tezaver spada med splošni tezaver .
Poleg pomena besede lahko poiščemo še širši pomen , na http://www.wordsmyth .
Tezaver je kombiniran s slovarjem .
Uporaba glosarja tehnologije 2008 ) je brezplačna .
Spletna stran vsebuje http://www.music.vt.ed besedišče s področja glasbe .
Uporaba glosarja je avgust 2008 ) brezplačna .
Program razdeli besedilo na odseke , ki jim pravimo prevodne enote .
Kako poteka proces prevajanja v programu s pomnilnikom prevodov , prikazuje Slika 10.
Ujemanje poteka tako , da program preveri , koliko besed v novi enoti se ujema z enoto v pomnilniku in na podlagi tega določi procent podobnosti in ujemanja .
Pomnilnik prevodov deluje na jezikovno neodvisni ravni , saj nima lastnih leksikonov in morfoloških ali sintaktičnih orodij , s pomočjo katerih bi se izdelala analiza besedila .
• Če imamo besedila izvirnega in ciljnega jezika v elektronski obliki in bi nam pri prevajanju pomagala , pomnilnik prevodov ustvarimo s pomočjo programa za vzporejanje .
Program za vzporejanje razdeli besedili na prevodne enote in jih vzporedno poravna v prevodne pare .
Pravila za deljenje besedila se od jezika do jezika razlikujejo , zato se pogostokrat pojavijo napake , ki jih popravi prevajalec sam ali 41 pa pusti besedilo nepopravljeno .
• Pomnilnik prevodov lahko izdelamo s pomočjo programa za strojno prevajanje .
Prevajanje področij , kot so pravo , medicina ali računalništvo , je lahko zelo naporno , saj je iskanje pravih besed dolgotrajno in neuspešno .
Vsi strokovni in tehnični prevajalci se vsakodnevno srečujejo s termini , ki jih v splošnih , specialnih in področnih slovarjih ne najdemo .
Veliko strokovnih izrazov najdemo na svetovnem spletu in v drugih javnih medijih , vendar nam računalnik ponudi različne zadetke iskanja .
Velikokrat terminologija nastane zaradi potrebe posameznika ali pa jo pripravi podjetje .
Takrat gre za terminologijo , ki je zaščitena z avtorskimi pravicami .
Prevajalci , ki prevajajo neko strokovno področje , si zato sami ustvarijo terminološko banko izrazov .
Na primer , če pogledamo besedo okno ( ang. window ) : 1 ) Poglej skozi okno na severni strani hiše .
2 ) Pogovorno okno se odpre ob zagonu aplikacije .
Iz primerov je razvidno , da ima besedo okno v različnem kontekstu različne pomene .
Pod točko 1 ) mislimo na okno kot na odprtino v 43 steni stavbe , pod točko 2 ) mislimo na okno , ki se prikaže na prikazovalniku , ko zaženemo aplikacijo in pod točko 3 ) imamo v mislih operacijski sistem .
Terminološko banko lahko ustvarimo pred pričetkom prevajanja .
Poleg terminov in prevodnih ustreznic ciljnega jezika lahko terminološka banka vsebuje še opise vnosov in primere uporabe , grafične prikaze , klasifikacijo vnosov po področjih .
Tehnike shranjevanja in prikazovanja izrazov pa se razlikujejo od programa do programa .
Z uporabo orodij lahko samodejno vnašamo izraze v urejevalnik besedil .
Orodja lahko vključujejo tudi slovarsko upravljanje terminologije , podatkovno bazo pa lahko izvozijo in uvozijo v druge aplikacije .
Uporabnik lahko išče izraze bodisi po delih izraza bodisi po kriterijih , ki jih določi uporabnik sam .
Terminološka baza [ 45 ] je ob nakupu prazna in neuporabna , dokler ne vnesemo terminologije .
Večina podjetij , ki se ukvarja s strojno in programsko opremo , razvija področje prevajanja za namene lokalizacije .
Tudi velika podjetja , kot sta IBM ( http://www.ibm.com/si/ , obiskano 10. avgust 2008 ) in Microsoft 45 ( http://www.microsoft.com/slovenija/ , obiskano 10. avgust 2008 ) , pošiljajo na trg prevedene izdelke .
Za prevajanje programov , programskih paketov in dokumentacije se uporabljajo programi s pomnilnikom prevodov in terminološke banke .
Tabela 6 : Lokalizacijka programska orodja Lokalizacijsko programsko Spletni naslov Opis orodje http://ftp.isu.edu.tw/pu Občutno pospeši lokalizacijo .
http://www.worldlingo.c om / en / solutions / softwar Enostavno orodje za lokalizacijo WorldLingo e _ translation.html programske opreme .
( obiskano 5. maj 2008 ) 47 4 UPORABA SVETOVNEGA SPLETA PRI ISKANJU BESEDIŠČA Svetovni splet je v komuniciranje in delo vnesel radikalne spremembe .
Zato moramo znati ločiti uporabne od neuporabnih informacij , saj kot vemo , vsakemu podatku na svetovnemu spletu ne gre zaupati .
Na svetovnem spletu je več milijard dokumentov .
Zato si moramo za kakovosten prevod razširiti strokovno in jezikovno besedišče določenega strokovnega področja .
Iščemo lahko izraze in njihove pomene , podobna besedila in članke , preko spletne pošte lahko komuniciramo s strokovnjaki ali spremljamo razvoj določenega strokovnega področja itd.
Slika 11 prikazuje spletni iskalnik Google , katerega najpogosteje uporablja večina uporabnikov svetovnega spleta .
48 Slika 11 : Spletni iskalnik Google17 4.1 Iskanje besedišča in terminologije Na svetovnem spletu imamo na voljo veliko enojezičnih ali večjezičnih splošnih ali strokovnih elektronskih slovarjev , enciklopedij in drugih elektronskih virov , ki sem jih navedla v poglavju 3.4.
V veliko pomoč pa so nam tudi iskalniki , kot sta Google ( www.google.com , obiskano 15. marec 2008 ) ali Yahoo ( www.yahoo.com , obiskano 15. marec 2008 ) , s katerimi lahko poiščemo določeno terminologijo in izvemo veliko novih informacij o strokovnem področju .
Seznam spletnih iskalnikov prikazuje Tabela 7. http://www.google.si/ , obiskano 5. avgust 2008 49 Tabela 7 : Nekaj najpogosteje uporabljenih spletnih iskalnikov Opis Pokriva področja v tujem in slovenskem jeziku .
AltaVista ima poleg funkcij spletnega iskanja vgrajen še spletni prevajalnik besedil .
Hkrati je največji projekt na slovenskem internetu v zadnjih letih , tako po obsegu na novo razvite programske opreme kot tudi po vloženih sredstvih : znanju , delu , denarju , opremi in času .
Leta 2006 so dodali še nia ( obiskano 5. spletni iskalnik za Slovenijo ter tako avgust 2008 ) nadgradili imenik , v katerem so zbrani podatki o slovenskih spletnih straneh od leta 1998 dalje .
4.2 Primerljiva besedila Če nam tematika , ki jo prevajamo , ni dovolj poznana , potem posegamo po sorodnih besedilih v ciljnem jeziku .
Za iskanje sorodnih besedil si pomagamo s priljubljenimi iskalniki , ki sem jih naštela pod točko 4.1.
Na primer , navežemo lahko stike s strokovnjaki določenega podjetja ali organizacije .
Če iščemo 51 besedišče s področja računalništva in informatike , lahko za pomoč prosimo strokovnjake pri podjetju Microsoft ( http://www.microsoft.com/slovenija/ , obiskano 10. maj 2008 ) , če gre za terminologijo s področja vzgoje in izobraževanja , prosimo za pomoč Ministrstvo za šolstvo in šport ( http://www.mss.gov.si/ , obiskano 10. maj 2008 ) ali se obrnemo na Eurydice Slovenija ( http://www.mszs.si/eurydice/term/term.htm , obiskano 10. maj 2008 ) , kjer najdemo pojmovnike izrazov s področja vzgoje in izobraževanja .
4.4 Poštni seznami , novičarske skupine , forumi Še vedno so uporabni poštni seznami ( ang. mailing lists ) in novičarske skupine ( ang. newsgroups ) .
Poštni seznam najdemo tako , da v iskalnik vnesemo besedno zvezo mailing list v angleškem jeziku ali poštni seznam v slovenskem jeziku .
Tabela 8 : Nekaj spletnih strani , kjer najdemo poštne sezname Poštni Spletni naslov Opis seznam Spletna stran ponuja nedavne Univerza http://www.usm.edu/com informacije s področja inovativnih Severni puting / cs / mailing _ list.php tekmovanj iz programiranja in Misisipi ( obiskano 10. maj 2008 ) druge pomembne objave .
https : / / lists.cs.columbia.e Spletna stran ponuja seznam Columbia du / mailman / listinfo poštnih seznamov s področja ( obiskano 10. maj 2008 ) računalništva in informatike .
52 http://www.cs.uchicago.e Spletna stran ponuja seznam Univerza du / info / services / mailing _ l poštnih seznamov s področja Chicago ists ( obiskano 10. maj računalništva in informatike , na 2008 ) katere se lahko prijavimo .
http://www.cs.dal.ca/stud Spletna stran pokriva poštne Univerza entservices / faq / technical _ sezname računalništva in Dalhousie services / e-mail / lists.php informatike .
V vnosno vrstico vnesemo besedo newsgroup v angleškem jeziku ali besedno zvezo novičarska skupina v slovenskem jeziku .
Tabela 9 : Nekaj spletnih strani , kjer najdemo novičarske skupine Novičarske Spletni naslov Opis skupine http://groups.google.com Spletna stran nam ponuja seznam / group / prevajalci - Microsoft vseh novičarskih skupin , ki jih mojster / ( obiskano 10. imamo na voljo kot uporabnik .
Na spletni strani je seznam vseh http://www.cyberfiber.co novičarskih skupin , ki so Cyberfiber m / ( obiskano 10. maj uporabniku na voljo .
http://support.codegear.c Zakladnica novičarskih skupin za Code Gear om / newsgroups / directory programerje .
Tabela 10 : Nekaj spletnih naslovov računalniških forumov Forum Spletna stran Opis http://www.racunalnis Forum pokriva novice tako Računalniške ke-novice.com / forum / strokovnjakov kot tudi laikov s novice ( obiskano 12. maj področja računalništva in 2008 ) informatike .
Tabela 11 prikazuje nekaj spletnih naslovov spletnih revij .
Svetovni splet je tudi bogat zaklad novih programov .
Tabela 11 : Najpopularnejše računalniške revije na spletu Spletna Spletni naslov Opis revija Slovenska računalniška revija Joker je bila ob svojem nastanku leta 1992 namenjena opisovanju računalniških in http://www.joker.s video iger ter opreme , povezane s tem Joker i / ( obiskano 12. področjem .
55 Slovenska računalniška revija , ki http://www.mojmi pokriva področja računalništva in Moj mikro kro.si / ( obiskano informatike : tehnologije , strojna 12. maj 2008 ) oprema , programska oprema , igre in še veliko več .
2008 ) Angleška računalniška revija , ki pokriva http://www.byte.c področja računalništva in informatike .
Angleška računalniška revija Pc magazin pokriva področje računalništva http://www.pcmag in informatike .
Članki so namenjeni Pc magazin .
Angleška računalniška revija Pc world http://www.pcworl vsebuje članke , strokovne opise , ocene , Pc world d.com / ( obiskano teste , preizkusne programe , svetovanja 12. maj 2008 ) in drugo .
Uporabnika obvesti o vseh novostih na http://www.techw področju računalništva in informatike : Tech web eb.com / ( obiskano programska oprema , strojna oprema , 12. maj 2008 ) testiranja , ocene , blogi in drugo .
Ostale računalniške revije : • Seznam računalniških revij , ki izhajajo v Sloveniji ali pred letom 1981 v Jugoslaviji : http://sl.wikipedia.org/wiki/Seznam_ra%C4%8Dunalni%C5% A1kih _ revij _ v _ Sloveniji ( obiskano 10. maj 2008 ) in • Seznam stotih angleških računalniških revij : http://www.netvalley.com/top100mag.html ( obiskano 10. maj 2008 ) .
Besedila so v elektronski obliki , kar nam omogoča , da jih raziskujemo ter obdelujemo z raznovrstnimi programskimi orodji .
Računalniki postajajo zmogljivejši , veča se tako velikost diska kot tudi velikost navideznega pomnilnika , zato lahko gradimo velike računalniške korpuse , ki vsebujejo več sto milijonov besed .
Orodje za iskanje konkordanc v korpusu nam za vsako poizvedbo prikaže zadetek v korpusu skupaj z neposrednim kontekstom v besedilu .
Na Sliki 12 je prikazan del spletne strani korpusa Nova beseda .
Poleg iskalnega niza sem določila še naslednje parametre : • kakšen naj bo iskalni razpon : besedna zveza naj se išče po celotnem korpusu , • koliko črk naj bo na levi strani prikaza rezultata : 22 črk , • koliko črk naj bo na desni strani prikaza rezultata : 22 črk , • koliko skritih besed : 0 , Korpus Nova beseda , http://bos.zrc-sazu.si/s_beseda.html , obiskano 31. maj 2008. 59 • izpis : naj bo največ 100 izpisov hkrati prikazanih na spletni strani , • kakšen naj bo postopek : iskanje konkordanc .
Rezultat iskanja prikazuje Slika 13.
Slika 13 : Rezultati poizvedbe v korpusu Nova beseda20 Ko prevajamo v tuj jezik in iščemo določeno terminologijo , nas pogostokrat zanima , v kakšnem sobesedilu se pojavlja določena beseda ali besedna zveza .
Če imamo dovolj velik korpus ciljnega jezika , si lahko ogledamo primere rabe besede , ki jo želimo Iskalni pojem je LCD zaslon , http://bos.zrc- sazu.si / c / ada.exe ?
To se izkaže kot posebej pomembno pri neologizmih , sposojenkah in tistih besedah , ki jih v slovarjih ni mogoče najti .
Seznam le-teh prikazuje Tabela 12. 61 Tabela 12 : Referenčni korpusi za slovenski jezik Referenčni Spletni naslov Opis korpus http://www.fida.net/slo/index.html Referenčni korpus za Fida ( obiskano 31. maj 2008 ) slovenski jezik .
Nova http://bos.zrc-sazu.si/s_beseda.html Referenčni korpus za beseda ( obiskano 31. maj 2008 ) slovenski jezik .
Takšni korpusi so avtentični , saj so nastali skozi govor in ne skozi pisano besedo .
62 5.2.3 Korpusi podjezikov Korpusi podjezikov so omejeni in specializirani , saj zajemajo jezik v točno določeni funkciji .
Korpusi takšne vrste so izdelani s točno določenim namenom za določeno strokovno področje .
Seznam korpusov podjezikov prikazuje Tabela 14.
Tabela 14 : Korpusi , prilagojeni posameznemu strokovnemu področju Korpusi Spletni naslov Opis podjezikov Strokovni korpus vsebuje besedila s področja prava , Zbirka http://sli.uvigo.es/CTG/c računalništva in telekomunikacij , strokovnih orpus _ en.html ( obiskano ekologije in varovanja okolja , korpusov 31. maj 2008 ) ekonomije , sociologije , medicine .
5.2.4 Vzorčni korpusi So sestavljeni zgolj iz fragmentov besedil .
Dober primer so predvsem časopisni članki iz evropskih časopisov v nekem obdobju .
Tabela 15 : Večjezični korpusi Večjezični Spletni naslov Opis korpus Seznam http://tcc.itc.it/people/forne Spletna stran zajema seznam večjezičnih r / multilingualcorpora.html večjezičnih korpusov .
korpusov ( obiskano 31. maj 2008 ) Korpus je namenjen http://www.elsnet.org/eci.h znanstvenim raziskavam .
Slika 14 : Vzporedni korpus Evrokorpus21 Poleg Evrokorpusa ima slovenski jezik še nekaj vzporednih korpusov , ki jih prikazuje Tabela 16. http://evrokorpus.gov.si/index.php , obiskano 31. maj 2008 65 Tabela 16 : Vzporedni korpusi Vzporedni Spletni naslov Opis korpus Zbirka vzporednih http://evrokorpus.gov.si/index.p Evrokorpus dvojezičnih korpusov hp ( obiskano 25. junij 2008 ) prevodov .
http://nl.ijs.si/svez/ ( obiskano Vsebuje besedila Svez 25. junij 2008 ) zakonodaje Evropske unije .
Programi za skladenjsko analizo so sicer lahko razčlenili točno določen stavek , vendar so dosegali slabe rezultate pri odprtem besedilu .
Razlog za to je bil predvsem v premajhnem pokritju njihovih slovarjev in pravil , pri čemer pa je bila izdelava teh podatkov izjemno zamudna in zahtevna .
V 50-ih letih [ 4 ] so bila besedila zbrana za povsem določen namen in v formatu , ki ga je podpirala programska oprema , ki naj bi besedilo obdelala .
Bliskovit dvig količine in kvalitete računalniških korpusov lahko pripišemo tehnološkemu napredku na področju računalništva .
Uporaba korpusov pri prevajanju se uveljavlja šele zadnja leta , ko imamo na razpolago vse več korpusov .
Korpusi za večje jezike so dostopni tudi na svetovnem spletu .
Za lastne potrebe si lahko prevajalec ustvari tudi svoj manjši korpus , ki ga nato uporablja s pomočjo orodij , ki jih nudijo programi s pomnilniki prevodov ali s pomočjo orodij za iskanje po korpusih .
Količina jezikovnih virov je še vedno največja za angleški jezik .
V zadnjih letih se jezikovni viri množijo tudi na področju Evropske unije .
5.4 Tuji korpusi Na razpolago imamo veliko raznovrstnih korpusov , vendar še vedno velja pravilo , da imamo za večje svetovne jezike več ponudbe , torej imamo največ jezikovnih virov za področje angleškega jezika .
Nekaj korpusov najdemo tudi na svetovnem spletu , kar prikazuje Tabela 17. 67 Tabela 17 : Korpusi na svetovnem spletu Korpus Spletni naslov Opis British http://www.natcorp.ox .
Vsebuje 100 milijonov besed National ac.uk / ( obiskano 25. pisanega in govorjenega jezika Corpus junij 2008 ) širokega spektra virov .
Vsebuje 524 milijonov Bank of / books.aspx ?
http://www.ids- Je zbirka besedil v elektronski COSMAS II mannheim.de / cosmas2 / obliki .
http://devoted.to/corpo Spletna stran vsebuje seznam Korpusi ra ( obiskano 25. junij povezav na več sto korpusov 2008 ) različnih svetovnih jezikov .
Vnesemo iskalni niz in izberemo , s http://www.webcorp.or katerim iskalnikom bomo iskali , g.uk / index.html WebCorp koliko besed naj bo pred in za ( obiskano 25. junij iskalnim nizom ter določimo 2008 ) občutljivost na veliko začetnico .
5.5 Slovenski korpusi Kot navaja Špela Vintar v svoji raziskavi [ 12 ] , za slovenski jezik še nimamo večjih enojezičnih ali vzporednih korpusov .
Veliko slovenskih besedil , ki bi lahko bila osnova za korpuse , obstaja seveda tudi v računalniški obliki , vendar pa niso standardizirana , predvsem pa je njihova uporabnost omejena na organizacije , ki jih proizvajajo , ali na tiste , ki so sodelovale pri pripravi besedil .
Vendar pa se na področju 68 slovenskega jezika kljub temu v zadnjem času uveljavljajo trije besedilni korpusi : Fida , FidaPlus in Nova beseda .
Projekt so začeli graditi leta 1997 in ga dokončali leta 2000.
Kako izgleda uvodna spletna stran korpusa FIDA , prikazuje Slika 15.
Njegov osnovni namen je , da omogoča temeljit vpogled v jezik na najrazličnejših ravneh in http://www.fida.net/ , obiskano 30. maj 2008 69 področjih .
• Enojezični korpus ; Enojezični korpus vključuje sodobna slovenska besedila .
Tujejezični elementi se v korpusu pojavijo le kot sestavni del slovenskega besedila , izključena pa so vsa tujejezična besedila .
• Sinhroni korpus ; Zajema besedila sodobne slovenščine .
Transkripcije govora , kot so na primer parlamentarne razprave , so edina govorna sestavina korpusa .
To pomeni , da je obsežna elektronska besedilna zbirka , ki obsega vzorce besedil slovenskega jezika .
Osnovni namen takega korpusa je , da omogoča temeljit vpogled v jezik na različnih ravneh , tako kot korpus Fida .
Slika 16 prikazuje spletno stran korpusa FidaPlus .
Ker je korpus FidaPlus prosto dostopen , ga lahko uporablja vsakdo , ki se pri svojem delu srečuje z jezikovnimi vprašanji ( npr. lektorji , novinarji , učitelji itd. ) , oziroma vsakdo , ki ga jezik zanima .
Referenčni korpus nam daje odgovore na vsa mogoča jezikovna vprašanja , če jih le znamo pravilno postaviti .
Je ena izmed postaj na poti do Slovenskega nacionalnega korpusa , idealne zbirke elektronskih besedil , namenjene najširši raziskovalni in izobraževalni uporabi , ki bo med drugim obsegala vsa novejša besedila , zapisana v slovenskem jeziku , in vsa starejša , ki so se ohranila .
Slika 17 prikazuje spletno stran korpusa slovenskega jezika Nova beseda .
Slika 17 : Korpus slovenskega jezika Nova beseda25 Korpus se je začel pojavljati s spletno postavitvijo elektronske zbirke leposlovnih besedil v letu 1999 , skupaj je vseboval 3 milijone besed .
Poleti leta 2000 se je obseg korpusa z dodatki novih besedil , predvsem časopisa Delo , povečal na 48 milijonov besed .
Slika 19 prikazuje spletno stran islovarja .
Slovar ne vsebuje besed splošnega pomena .
Za lažje spremljanje izrazov ima vsak vnos podatek o ureditvi : • predlog , • pregledano , • strokovno pregledano in • urejeno .
75 Slika 19 : Računalniški slovar27 Besede , ki jih uporabnik išče in jih ni v slovarju , se vnašajo v posebno zbirko nenajdenih izrazov , tako da se lahko kasneje vnesejo v islovar .
• Uporabnik lahko brska po naključnih izrazih , novih izrazih in izrazih dneva .
http://www.islovar.org/iskanje_enostavno.asp , obiskano 31. maj 2008 76 • Spletna stran nam ponuja tudi forum , zato se lahko uporabnik udeležuje tudi spletnih klepetov in razprav na forumu .
Pri prispevkih sta urednikom vidna ime in priimek avtorja , pri razpravah v forumu pa sta ime in priimek vidna tudi uporabnikom .
Urednica slovarja je tista , ki po potrebi pregleduje in popravlja nove izraze .
Največja prednost slovarja je , da so sodelavci , uredniki , strokovni sodelavci in strokovni svetovalci številni strokovnjaki na področju informatike in jezikoslovja , zato lahko v pravilnost pregledanih vnosov še toliko bolj zaupamo .
77 7 SMERI E-ORODIJ ZA PREVAJANJE Špela Vintar [ 12 ] v svojih raziskavah navaja , da je poglavitna prednost samodejnega prevajanja torej možnost hitrejšega , cenejšega in bolj učinkovitega prevajanja gradiva , v katerem se besede ponavljajo .
Učinkovitost je odvisna od tega , koliko se besedilo ponavlja , kakšno je to ponavljanje , kako dolgo je besedilo in drugih dejavnikov , ki so že opisani v diplomi .
Namen uporabe računalnikov v prevajalskem procesu ni le tekmovati s prevajalci ali jih nadomestiti , ampak ustvariti grobe prevode , ki bi služili kot bistvo zbiranja informacij in kot komunikacija med različnimi jezikovnimi področji .
Sistemi proizvedejo grob prevod različnih kvalitet , ki ga morajo prevajalci pregledati in popraviti .
Po navedbah Johna Hutchinsa [ 50 ] , je bil svetovni splet tisti , ki je vzpodbudil razvoj spletnih prevajalnikov v dejanskem času ( ang. real-time on-line translation tools ) .
Mnogi računalniški sistemi ponujajo prevajanje spletnih strani in 78 druge spletne storitve , ki podpirajo strojno prevajanje .
Hkrati pa je svetovni splet tisti , ki poskrbi za izredno hiter prenos in dostavo podatkov do uporabnikov .
Večina programske opreme strojnega prevajanja izvira iz Japonske in Združenih držav Amerike , vendar je nekaj takih podjetij , ki se ukvarjajo s programiranjem te vrste programske opreme , tudi v Evropi .
Največ pozornosti ji posvečajo akademske raziskovalne skupine .
Najnovejše raziskave potekajo na področju samodejnega prevajanja govorjenega jezika , ki nadgrajuje raziskave tehnik govora iz leta 1980.
Glavni centri raziskave so : • ATR na Japonskem ( http://www.his.atr.jp/index_e.html , obiskano 20. avgust 2008 ) , • Univerza Carnegie-Mellon v Združenih državah Amerike ( http://www.cmu.edu/index.shtml , obiskano 20. avgust 2008 ) , • Univerza Karlsruhe v Nemčiji ( http://www.uni- karlsruhe.de / , obiskano 20. avgust 2008 ) .
Strokovnjaki pričakujejo velik preobrat na področju razvoja prevajanja govora .
Podjetja so programski opremi za strojno prevajanje dodala tudi vmesnik za vhod in izhod govora .
Programska oprema izvede prevajanje tako , da govor pretvori v besedilo , besedilo prevede in nato besedilo pretvori nazaj v govor .
V Srednji in Vzhodni Evropi se Evropska Unija [ 52 ] trudi vzpodbujati raziskave strojnega prevajanja in orodij za prevajanje češčine , poljščine , madžarščine , slovenščine , estonščine in bolgarščine .
Večina informacij je oblikovanih za spletne aplikacije , ki so uporabnikom dostopne kadarkoli in kjerkoli .
Svetovni splet vpliva na prihodnost programske opreme .
Uporabniki svetovnega spleta iščejo podatke v katerem koli jeziku , zato želijo prevedene spletne strani .
Kot pravi Vintarjeva [ 12 ] , strokovnjaki napovedujejo , da bo v prihodnjih letih manj programske opreme na področju samih sistemov strojnega prevajanja , veliko bolj se bodo razvijala programska orodja za 80 prevajanje in aplikacije , kjer bo samodejno prevajanje le ena od komponent .
Prevajalska orodja bodo postala uporabnikom dostopna na računalnikih , mobilnih telefonih ali televiziji in prijazna za uporabo .
Računalnike bomo še naprej uporabljali za prevajanje tehničnih besedil in dokumentacije , kjer gre za velik procent ponavljajočih se besed ali besednih zvez in za lokalizacijo programske opreme .
Za prevod besedil , pri katerih ni pomembna kvaliteta izdelka , je strojno prevajanje idealna rešitev ali včasih edina rešitev .
Strojno prevajanje je odprlo nova področja : nastanek povzetka za avtorje , ki pišejo v neznanem jeziku , podnaslavljanje v dejanskem času na televiziji , prevajanje informacij iz podatkovnih baz , spletno prevajanje spletnih strani itd.
81 8 RAČUNALNIŠKI SLOVARČEK 8.1 Pristop Kot praktični izdelek diplomske naloge sem izdelala slovensko - angleški računalniški slovarček .
Ob listanju učbenika sem ugotovila , da se na koncu vsakega poglavja pojavijo najpomembnejši izrazi .
Vsaki besedi v slovenskem jeziku sem poiskala krajši opis v slovenskem jeziku in tako besedo kot tudi opis besede prevedla v angleški jezik .
Literaturo sem skrbno pregledala in na koncu napisala prevode besed in opisov besed .
Poudarek je torej na terminologiji sami , saj kot vemo , večina računalniških izrazov izhaja iz angleškega jezika in se slovenski pripadajoči prevodi šele uveljavljajo .
Z uporabo besede v komuniciranju se poveča potreba po slovenskih izrazih , zato nastajajo prevodi , eni boljši , drugi slabši .
Pomensko močnejše besede so se v jeziku obdržale , drugi prevodi pa tonejo v pozabo .
Potrebujemo torej tako orodje , ki bo enostavno za uporabo in bo imelo možnost oblikovanja pogovornega okna .
82 Aplikacija mora imeti okvirčke z besedilom in gumbe , v ozadju pa skripto , ki bo prožila akcije .
Slovar bo torej deloval na principu brskanja po podatkovni bazi besed .
Po kliku na gumb Išči bo aplikacija zagnala iskanje po bazi .
Katere parametre vsebuje tabela , kakšnega tipa so parametri in kakšen je njihov opis , prikazuje Slika 21.
Slika 21 : Ustvarjanje podatkovne baze Baza _ terminov Tabela vsebuje 5 stolpcev , in sicer : • ID : primarni ključ , ki enoznačno določa , za katero besedo po vrsti gre .
• Geslo : vsaki besedi pripada geslo v slovenskem jeziku .
Slika 22 prikazuje dejansko tabelo podatkovne baze , ki sem jo napolnila s terminologijo s področja računalništva in informatike .
84 Slika 22 : Podatkovna baza v obliki tabele Poleg podatkovne baze potrebujemo še obrazec , s katerim bo uporabnik prišel do želenih podatkov .
V pogledu Načrt obrazca lahko na obrazec vstavimo orodja iz Orodjarne ( npr. gumbi , okvirček z besedilom , sliko , …).
85 Slika 24 : Obrazec v pogledu Načrt V programskem jeziku Visual Basic napišemo sintakso , ki bo izvedla določeno operacijo .
Nato se geslo primerja s pripadajočim geslom v podatkovni bazi in vrne opis gesla , prevod gesla in prevod opisa .
Da lahko program izvede vse prej napisano , mora v ozadju vsebovati še tako imenovano skripto , napisano v programskem jeziku Visual Basic .
Del programske kode prikazuje Slika 25. 86 Slika 25 : Programska koda , pisana v programskem jeziku Visual Basic Po končanem delu sem datoteko shranila .
8.3 Strojna oprema in programska oprema Pri delu sem uporabljala svoj prenosnik Sony Vaio z naslednjo konfiguracijo : • Intel 1 , 73GHz procesor , • 512 MB , • 80 GB .
Pri svojem delu sem uporabljala naslednjo programsko opremo : • Microsoft Word 2003 , • Microsoft Access 2003 , • Microsoft Visio 2003 , • Microsoft Visual Basic 2003 , 87 • Internet Explorer 7.0. 8.4 Navodila za uporabo Ko odpremo slovar.mdb , ne blokiramo nevarnih izrazov in odpremo datoteko .
Slika 27 : Odprimo obrazec Kurzor je postavljen v vnosni vrstici Vnesi iskano geslo , kjer vnesemo iskano besedo .
S klikom na gumb Išči sprožimo iskanje gesla po tabeli v podatkovni bazi .
S klikom na gumb Dodaj zapis se nam odpre pogovorno okno , kamor vnesemo geslo , prevod gesla , opis gesla in prevod opisa ter s klikom na gumb Dodaj potrdimo vnos .
Potek dodajanja novega slovarskega gesla prikazuje Slika 30.
S klikom na gumb Počisti 89 počistimo vsebino v poljih z vsebino , z gumbom Zapri pa zapremo pogovorno okno .
Slika 30 : Dodajanje novega gesla Vizitka slovarja ponuja osnovne informacije o izdelku .
Slika 31 : Vizitka 90 9 ZAKLJUČNE MISLI Vse pogosteje tradicionalno tiskano literaturo nadomeščajo elektronski viri , kot so elektronska besedila , elektronski slovarji , elektronske enciklopedije itd.
Danes si delo olajšajo z računalniki .
Tudi razvoj umetne inteligence se vrtoglavo razvija .
V diplomski nalogi sem naredila pregled orodij in spletnih strani , ki so učitelju računalništva in informatike v pomoč .
Predstavila sem vsa poglavitne značilnosti uporabe informacijsko komunikacijske tehnologije pri prevajanju besedil iz izvirnega v ciljni jezik za področje računalništva in informatike .
Kot praktični izdelek je nastal enostavni slovensko - angleški slovarček izrazov , ki se lahko v nadaljevanju še dopolni z novimi gesli in opisi besed .
Če ne uporabljamo ravno spletnega iskalnika , smo gotovo že uporabili katerega drugega , saj vsaka večja količina predmetov potrebuje indeks , ki nam omogoča iskanje , pa naj si bo to le kazalo v knjigi .
Predlagani sistem skuša narediti iskanje še bolj presonalizirano .
Sistem iCORE želi uporabnika spremljati do takšne mere , da mu bo prikazoval strukturirane rezultate poizvedbe brez da bi mu jih eksplicitno podal .
Uporabnik mora imeti možnost ročnega nastavljanja preferenc , usmerjenega iskanja in navigacije med vrnjenimi en - titetami , ki so med seboj relacijsko povezane .
Komponente lahko zato testiramo po znanih postopkih , celotni sistem iCORE lahko najbolje ocenimo z njegovo uporabo v realnem svetu .
Torej bo sistem iCORE , ki ni zgolj metaiskalnik , temveč še mnogo drugega , gotovo izboljšal celostno uporabniško izkušnjo in rezultate .
Ključne besede : priklic podatkov , iskalnik , kontekst , personalizacija , iCORE 1 Uvod Motivacija Odkar je človek začel zbirati podatke in jih hraniti v informacijah , je vedno skušal poskrbeti , da so bili čim enostavneje dosegljivi .
Čeprav so vam spletni iskalniki gotovo najbližje , so avtomatski ali polav - tomatski sistemi za pridobivanje podatkov že dolgo med nami .
Iskalni sistem je vsak , ki poizveduje nad podatkovno bazo .
Gotovo ste se že znašli v primeru , ko vas je uradnik vprašal : " Ali mi poveste vaše ime in priimek , da najdem vaše podatke ?
V tem primeru mu je sistem omogočal poizvedovanje do podatkov le po imenu in priimku .
V raziskovalnih krogih so se porodile zamisli o semantičnem svetovnem spletu ( ang. semantic web ) , a je iluzorno pričakovati , da bo do množične uporabo sploh kdaj prišlo .
V tretjem poglavju bomo obdelali vsako komponento sistema posebej , opisali njeno delovanje in predlagali metode za njeno implementacijo .
Poglavje 1 Priklic podatkov 1.1 Razvoj sistemov 1.1.1 Zgodovina Vizionar Vannevar Bush si je v sredini prejšnjega stoletja zamislil koncept hran - jenja dokumentov [ 26 ] .
Prvi sistemi za priklic podatkov so se pojavili v knjižnicah , kjer so čutili največjo potrebo po njih .
Uporabljal je vektorski model priklica podatkov ( glej razdelek 1.2 ) , Rocchio algoritem ( glej razdelek 3.1.1 ) in TF-IDF uteži ( glej enačbo 1.5 ) za besede .
7 8 Poglavje 1 : Priklic podatkov 1.1.2 Uporaba Učinkovit priklic podatkov je odvisen od uporabnika in sistema .
Uporab - nik mora znati pravilno oblikovati poizvedbo , ki jo lahko poda na način , kot to omogoča sistem .
Način shranjevanja je odvisen od modela za priklic podatkov in ob - delave dokumentov ( za razlago glej naslednja razdelka ) .
Sistem iCORE skrbi , da uporabnikovo nalogo minimizira , kolikor se le da .
Navadno je pravilen rezultat poizvedbe le eden .
Primer : Kot rezultat iskalnega niza " učilnica fri " želim dostopati do strani " ucilnica.fri.uni-lj.si " .
Transakcijski : Uporabnik želi najti strani , kjer bi opravil transakcijo ( nakup , ogled videa , prenos dokumentov , .
Poseben primer iskalnika je metaiskalnik ( Slika 1.2 ) , ki uporablja druge iskalnike , rangira njihove rezultate in jih prikaže kot svoje .
Iskalniki so se razvijali sledeče [ 29 , 30 ] : Traditional Search 1.0 ( 1996 ) : Sestavni deli iskalnikov so bili t.i. pajki ( glej razdelek 1.4 ) , ki so obiskovali strani in jih kopirali v zasebni indeks .
Področju , ki se še vedno ukvarja z zviševanjem ocen določene strani v iskalnikih , pravimo optimizacija is - kalnikov ( ang. SEO - Search Engine Optimization ) .
Znan algoritem za računanje takšnih ocen je PageRank ( glej razdelek 3.2.1 ) .
.
Iskalniki so omogočili združevanje rezultatov in primeren prikaz za vsako kategorijo rezultata .
Razvoj iskalnikov je bil posvečen učenju klasifikator - jev glede na uporabnikove prijatelje .
V razširjenih socialnih omrežjih lahko določene dokumente oceni veliko uporabnikov , kar so uporabili tudi iskalniki .
Naj mu predstavi ne le podatkov , ampak tudi informacije v strukturirani obliki .
Semantični splet ( glej razdelek 3.5 ) ne obstaja , zato je naloga iCORE-a , da ga virtualizira ( več o našem sistemu v naslednjih poglavjih ) .
Sistem iCORE uporablja postopke spletnega rudarjenja ( ang. web min - ing ) .
Naučene vzorce nato uporabljamo za predstavitev ali klasificiranje novih pri - merov .
V nadaljevanju bomo predstavili najbolj uporabljane modele .
Število dfi predstavlja število dokumentov , kjer se beseda ti pojavi vsaj enkrat .
Naj bo 12 Poglavje 1 : Priklic podatkov fij število pojavitev besede ti v dj in je tfij njena normalizirana vrednost .
Pri logičnem modelu smo dobili kot rezultat le vrednost 0 ali 1 , pri vek - torskem modelu pa lahko dobimo katerokoli realno število , glede na katero lahko rangiramo rezultate in prikažemo le najboljših k. 1.2.3 Jezikovni model Jezikovni modeli izhajajo iz teorije verjetnosti .
Vrednost fiq naj predstavlja število pojavitev besede ti v poizvedbi q. Za vsak dokument dj ?
Predpostavimo , da imamo v sistemu natanko en dokument , ki vsebuje skoraj vse besede iz poizvedbe , ostali pa nobene .
Latentno semantično indeksiranje ( ang. latent semantic indexing ) upošteva še sopomenke oz. besede , ki se uporabljajo v podobnih besedilih .
Predpostavimo , da imamo n dokumentov in m možnih besed .
Matrika A bo dimenzije m × n. Običajno je takšna matrika velika , zato jo zaradi lažjega računanja razcepimo po postopku singularnega razcepa .
, V je Ak precej lažje izračunati .
Spremenjeno poizvedbo qk si predstavljamo kot dokument v V .
Glavna slabost latentnega semantičnega indeksiranja je njegova časovna zahtevnost O ( m2n ) .
Kot splošno pravilo velja , da manj dimenzij pomeni bolj splošno primerjavo poizvedbe in dokumentov , več pa bolj specifično .
Dodajanje dokumenta v lokalno strukturo sistema ( indeks ) Z uporabo spodnjega primera bomo podrobneje opisali celoten postopek ob - delave : Kak težka , bridka ura je slovesa !
Za besede , za katere vemo , da predstavljajo natanko en pomen , izberemo le en zapis ( Opozorilo : S tem ne mislimo na sopomenke , vendar na iste besede , ki se drugače zapišejo .
Znan hevrističen način za angleški jezik je Porterjev algoritem [ 28 ] .
Drugi način upošteva pravila jezikoslovcev in morfološke analize ( ang. lemmatization ) .
Del indeksa za naš primer si lahko ogledate v tabeli 1.1. biti : ( 1 , 1 , 5 ) , ( 3 , 1 , 4 ) težak : ( 1 , 1 , [ 2 ] ) bridek : ( 1 , 1 , [ 3 ] ) ura : ( 1 , 1 , [ 4 ] ) sloves : ( 1 , 1 , [ 6 ] ) žnabel : ( 4 , 2 , [ 3 , 4 ] ) oko : ( 5 , 2 , [ 4 , 6 ] ) .
Tabela 1.1 : Inverzni indeks .
16 Poglavje 1 : Priklic podatkov Enak postopek , kot smo ga opisali zgoraj , izvedemo tudi na poizvedbi in nato poiščemo ustrezne dokumente glede na model priklica podatkov .
Težava se lahko delno reši tako , da pajek avtomatsko poizveduje z obrazci , ki so na voljo v dokumentih .
Ta ukaz je posledica poskusa reševanja problema globokega spleta .
lahko prenese 1 stran na 10s Visit-time : 0000-0600 # dovoli obiske le med 00:00 in 06:00 UTC Sitemap : http://zitnik.si/sitemap.xml Poglavje 2 Sistem iCORE V prejšnjem poglavju smo spoznali osnove priklica podatkov in sisteme , ki so se gradili in uporabljali do sedaj .
Sistem iCORE je zasnovan na ideji , da razume uporabnika in njegove namere .
Uporabimo ga lahko za pridobivanje informacij iz poljubnih zbirk podatkov , kot so svetovni splet ali zasebne zbirke podatkov .
Sistem deluje kot skupina storitev , ki jih lahko uporabljajo odjemalci kjerkoli in kadarkoli .
Uporabnik ni omejen , da uporablja sistem le na enem tipu naprave .
Sistem želi delovati v čim večjem kontekstu za posameznega uporabnika , kot mu odjemalec omogoča .
Odgovor ni le seznam najbolj relevantnih dokumentov , ampak že strukturirano pred - stavljene informacije .
Nato sistem ustrezno preoblikuje poizvedbo in izračuna , katere iskalnike se izplača uporabiti s pomočjo modula za obdelavo poizvedb .
Ključne podkomponente modula za zlivanje so združevanje duplikatov , preverjanje stopnje zaupanja virov v določenem kontekstu in spletno rudarjenje .
Uporabniku sistem načeloma vrne več rezultatov , od katerih uporabnik izbere pravilnega oz. tistega , po katerem naj bi poizvedoval .
V zadnjem delu mora sistem še posodobiti modele za nadaljno uporabo .
Modeli vsebujejo ocene virov , metapodatke o virih , stopnje zaupanja , po - datke o uporabniku , bazo znanja , .
Metapodatki o virih so navodila modulu zlivanja , ki določajo tipe podatkov v določenih poljih dokumenta .
Pravilnost in stalna posodobljenost modelov je ključni del za uspešno delovanje sistema .
Ostale storitve , ki so na voljo uporabniku , so še dostop do baze znanja in modelov .
Odjemalci uporabljajo varno komunikacijo in prenašajo sporočila v standardiziranih formatih , kot sta XML ali JSON .
2.3 Odjemalci Glavna naloga odjemalskih programov je , da izkoristijo svoje značilnosti za iz - gradnjo ustreznega uporabniškega vmesnika .
Odjemalec v spletnem brskalniku nadzoruje brskanje po spletnih straneh , uporabo anonimnega načina in s tem ustvarjanje dodatnega uporabnikovega konteksta , .
Uporabniku moramo torej ponuditi , da ga bo sistem prepoznal ne glede na to , kje ga uporablja .
Trenutno sistemi za priklic podatkov še vedno uporabljajo vnosno polje za podajanje poizvedbe .
22 Poglavje 2 : Sistem iCORE Sistem iCORE bo poskušal uporabiti vse zgornje načine za zajem uporab - nikovega obnašanja .
Sistem iCORE bo uporabniku prikazal že zgrajene informacije v primerni obliki .
Pri iskanju oseb bo osebo pokazal z vsemi atributi , ki jih bo našel ( ime , priimek , datum rojstva , naslov , zaposlitev , .
Odjemalec je najbližje uporabniku in z beleženjem njegovih dejanj lahko pomaga sistemu povečevati uporabnikov kontekst .
V kontekst spadajo vsi podatki , ki jih sistem iCORE lahko uporabi za izboljšanje priklica podatkov .
2.4 Primeri uporabe Poslovna uporaba : Nenapisano pravilo pravi , da je v poslovnih okoljih 80% informacij pridobljenih iz nestrukturiranih virov .
Sistem iCORE bo omogočal enostavno pridobivanje in prikazovanje rezultatov iz intraneta , različnih dokumentnih sistemov , e-poštnih sporočil in dokumentov na pomnilnih medijih .
Zaposleni bodo lahko hitreje izdelovali poročila , predstavitve , saj jim bo dostop do ustreznih informacij zelo olajšan .
Organi pregona , odkrivanje goljufij : Storilci kaznivih dejanj uporablja - jo svetovni splet in priljubljena socialna omrežja .
Prosil je prebivalstvo , da so bili na spletu pozorni na sumljive osebe , statuse na socialnih omrežij , s takšnim načinom so uspešno našli nekaj iskanih oseb .
V primeru avtomobilskih nesreč bi sistem iCORE lahko ugo - tovil , če je osumljenec objavljal kakšne slike , javno komentiral dogodek ali pa se nesreča dejansko sploh ni zgodila .
Osebna uporaba : Sistem iCORE bo predstavil nov način iskanja .
Nad delovno površino se nahaja zaslon na dotik .
Na tem zaslonu lahko izbiramo recepte , kaj želimo jesti in podobno .
Sistem iCORE bi uporabili tako , da bi uporabnika obveščali o potencialnih novostih pri receptih .
Iz recepta bi razbral postopek in nas vodil ter opozarjal med pripravo hrane .
http://www.marklogic.com Poglavje 3 Komponente sistema iCORE V prejšnjem poglavju smo na kratko predstavili osnovni koncept delovanja sistema iCORE .
V tem poglavju bomo podrobneje pregledali vse komponente sistema , predstavili njihovo delovanje in predlagali primerne izvedbe .
3.1 Modul za obdelavo poizvedb Poizvedba v splošnem predstavlja uporabnikovo izražanje zahteve po informa - ciji .
Formalni poizvedovalni jeziki zahtevajo , da se uporabniki držijo sintaktičnih pravil .
Sistem iCORE s svojim vmesnikom ponuja odjemalcem več načinov vnosa poizvedb .
Poizvedbe glede na način podajanja delimo na : Poizvedovanje s ključnimi besedami : Je najlažje in med uporabniki najbolj uporabljan način .
Da bi uporabnika popolnoma razbremenili , lahko vnese besede tudi v naravnem jeziku .
25 26 Poglavje 3 : Komponente sistema iCORE Ujemanje z vzorci : Uporabnik poda poizvedbo kot regularni izraz ali določi omejitve .
Rezultate lahko omejimo s podnizi , obsegom , določimo razdaljo maksimalne napake ali definiramo natančen vzorec .
Strukturirane poizvedbe : Nekatere zbirke podatkov vsebujejo doku - mente , ki so določene oblike .
Knjižničarski sistemi uporabljajo ta način za iskanje knjig , saj so za vsako publikacijo določeni ustrezni metapodatki .
Slika 3.1 : Prikaz dvoumnosti poizvedbe .
Uporabnik je podal niz panda , ki ima lahko več pomenov .
Sistem mora avtomatsko ugotoviti ali je mislil na žival , vozilo , programsko opremo ali kaj drugega ter mu to prednostno ponuditi .
Sistem mora ugotoviti , da vrnjeni dokumenti niso dovolj primerni za poizvedbo .
Sistem mora ugotoviti , katero skupino je uporabnik mislil in mu jo prednostno predstaviti ( primer na sliki 3.1 ) .
Pravilno formuli - ranje ali uporaba ključnih besed je za uporabnika zahtevno opravilo .
Če sistem ne zna ugotoviti uporabnikovega namena , mu lahko poleg rezultatov ponudi več različnih poizvedb , katere so morda prave ( primer na sliki 3.2 ) .
Vsak sistem za priklic podatkov mora upoštevati sopomenke v poizvedbi .
Uporabniku v interaktivno pomoč moramo ponuditi tudi avtomatsko samodokončevanje poizvedbe ( primer na sliki 3.3 ) .
Metode , ki se uporabljajo za prilagajanje poizvedb , delimo na lokalne in globalne .
Cilj modula za obdelavo poizvedb v sistemu iCORE je ustrezna prilagoditev poizvedb .
Postopek lahko poteka v več iteracijah , dokler uporabnik ni zadovoljen z rezultatom .
Takšnemu načinu lahko rečemo tudi usmerjeno iskanje , saj uporabnik vodi sistem , metodam pa metode za odziv ustreznosti ( ang. relevance feed - back ) .
Uporabnik vnese kratko , enostavno poizvedbo .
Če Cr predstavlja množico relevantnih dokumentov in Cnr množico nerelevantnih v celotni zbirki dokumentov sistema , lahko zapišemo enačbo za optimalen vektor opt .
določamo kateri del se bolj upošteva .
0 + ß dj - ?
V praksi so se za pametno izbiro izkazale vrednosti ?
Na sliki 3.4 lahko vidimo delovanje algoritma na enostavnem primeru .
Algoritem predlaga bolj primeren vektor glede označene dokumente .
Najlažja rešitev je psevdo-odziv ustreznosti , kjer proglasimo najtežjih k dokumentov kot rele - 30 Poglavje 3 : Komponente sistema iCORE vantnih .
Z nenadzorovanim učenjem lahko rezultate razdelimo v skupine ( ang. clus - tering ) .
Podoben primer ročne analize je storitev SearchPoint [ 2 ] .
Ob premiku točke se znova izračunajo razdalje do skupin in rezultati poizvedbe se ponovno razvrstijo po relevantnosti .
Pri avtomatski gradnji slovarja sistem pregleda celotno zbirko vsebovanih dokumentov in zbere vse uporabljene besede .
Ko uporabnik v sistem vnese poizvedbo , jo sistem poskuša razširjati z besedami , ki so v bližini .
3.1.3 Metode v iCORE V sistemu iCORE je izbran drugačen način , sicer podoben globalnim meto - dam .
Če sistem ugotovi , 3.1 Modul za obdelavo poizvedb 31 da uporabnik išče film iz leta 1901 , v katerem nastopa igralec A in B , lahko to uporabi za izpolnjevanje polj v strukturiranem iskalniku filmov .
Sistem iCORE uporablja dve bazi znanja .
Druga baza znanja hrani le shemo .
Za izbiro sorodnih pojmov sistem izbere nekaj ključnih besed in poskuša zgraditi graf , kjer so te besede predstavljene v vozliščih in povezane s sorodnimi glede na povezave med članki na Wikipediji .
Slika 3.5 : Pomeni besede panda na Wikipediji .
32 Poglavje 3 : Komponente sistema iCORE Druga baza znanja je ontologija , ki ne vsebuje podatkov , ampak le shemo , t.j. entitne tipe , njihove atribute in relacije med njimi .
Za priklic podatkov je to uporabno , ker želimo uporabniku rezultate predstaviti strukturirano in ne le kot zbirko relevantnih dokumentov .
Sistem iCORE bo spremljal uporabnika in omogočal čimbolj personaliziran pristop .
Osnovni koncept izgradnje je prikazan na sliki 3.6.
Cilj vseh je izboljšanje rezultatov in izboljšanje pristranosti ( ang. bias ) .
Shemo njenega de - lovanje si lahko ogledamo na sliki 3.7.
Komponenta od modula za obdelavo poizvedb dobi s seznamov poizvedb za vsako skupino posebej in tudi vrne s seznamov zadetkov .
Med dokumenti se lahko pojavljajo tudi du - plikati , ki jih moramo odstraniti .
Modul za obdelavo poizvedb bo že vedel ciljno skupino , zato se bo zanjo pridobilo več dokumentov in za ostale manj .
Nabori dokumentov 34 Poglavje 3 : Komponente sistema iCORE za vsako skupino se bodo posredovali modulu za zlivanje na sliki 3.3.
Slika 3.7 : iCORE metaiskalnik .
3.2.1 Postopki za rangiranje dokumentov Prvotni iskalni sistemi so uporabljali le relevantnost dokumentov za vračanje rezultatov .
Raziskave izvirajo iz analize socialnih omrežij , ki jih lahko predstavimo z grafi .
Ta princip uporablja večina znanih algoritmov za statično ocenjevanje .
To v boju proti zavajujočim dokumentom uspešno izkorišča algoritem PageRank [ 8 ] , ki ga bomo predstavili .
Ker v izpeljavi prevedemo problem na iskanje stacionarne porazdelitve v markovski verigi , mora biti naš graf krepko povezan .
Stacionarno porazdelitev iščemo z naključnim sprehodom po grafu .
Obema omejitvama bomo zadostili tako , da dodamo povezave med vsemi dokumenti , med katerimi ne obstajajo .
Prehodna matrika markovske verige , je oblike : | I ( i ) | = Ř obstaja povezava od i do j sicer Sedaj uporabimo enačbo 3.5 s prehodno matriko P in faktorjem d. S tem faktorjem nadziramo odločitev , ali uporabnik nadaljuje pot po povezavah ali odide na naključno spletno stran .
V ( i ) Slika 3.8 : PageRank primer .
50 0,371 2,940 0,706 3,021 2,981 0,529 0,406 0,406 Tabela 3.1 : Računanje PageRank ocen .
Primer iz slike 3.8 s faktorjem d = 0 , 85. Pomembnost dokumentov v padajočem vrstnem redu : D , E , B , C , F , G , H , A. Primer računanja PageRank ocen za primer s slike 3.8 si lahko ogledamo v tabeli 3.1.
Iteriranje se konča , ko se vrednosti ocen ne spreminjajo več veliko ali skonvergirajo .
Predlagatelji [ 8 ] algoritma poročajo , da je za 322 milijonov povezav velik graf potrebnih približno 52 iteracij .
Njegova glavna slabost je neodpornost proti zavajujočim dokumentom .
S stališča uporabnika je rangiranje razporeditev dokumentov v zanj pomembnem vrstnem redu .
38 Poglavje 3 : Komponente sistema iCORE Parno ( ang. pairwise ) : Za vsak par dokumentov določimo , kateri dokument je boljši .
Okoli leta 2000 so se iskalniki razvili in so poleg ujemanja besed med poizvedbo uporabljali še ostale atribute .
Če uporabnik izbere med rezultati npr. 4. dokument pred prvimi štirimi , pomeni , da je algoritem pare ( 4 , 1 ) , ( 4 , 2 ) in ( 4 , 3 ) klasificiral napačno .
Učni podatki za Ranking SVM so podani v obliki trojic ( y , q , kjer y predstavlja oceno rangiranja iz 1 , 2 , 3 , .
Primeri atributov so npr. ali je iskani niz drugačne barve , ali se pojavi v url naslovu , število povezav na strani , PageRank ocena , dolžina URL naslova , .
3.2 Metaiskalnik 39 Slika 3.9 : Ranking SVM primer .
1. podatki za tri poizvedbe predstavljeni v ravnini , 2. pretvorba podatkov in izračun ločitvene premice , 3. ločitvena premica med prvotnimi podatki z mejami 3.2.2 Združevanje ocen Sistem iCORE uporablja metaiskalnik , ki dokumente rangira znotraj skupin in jih posreduje modulu za zlivanje .
Nepodvojene dokumente znotraj skupin moramo rangirati v čimbolj ustreznem vrstnem redu .
MI ( D ) D predstavlja ocenjevan dokument , q podano poizvedbo , ki je bila lahko avtomatsko spremenjena , MI ( D ) vse iskalnike , ki so D vrnili med rezultati in RD , I rang dokumenta D , ki mu ga je dodelil iskalnik I. ICORERank ( q , D ) je ocena algoritma za rangiranje sistema iCORE , ki je izračunana z eno izmed metod dinamičnega ocenjevanja , ki smo jih omenili v razdelku 3.2.1.
Bolj uporabne enostavne metode izvirajo iz volitev .
Na primeru si bomo pogledali tri postopke .
Primer : ocena ( a ) = 3+4+1+2+1 = 11 ocena ( b ) = 1+1,5+2+1+4 = 9,5 ocena ( c ) = 4+1,5+3+4+3 = 15,5 ocena ( d ) = 2+3+4+3+2 = 14 Končni vrstni red : c , d , a , b Condorcet rangiranje : Zmagovalni kandidat je tisti , ki premaga vse druge v primerjanju po parih .
ocena ( a ) = 1/2+1+1/4+1/3 = 2,08 ocena ( b ) = 1/4+1/3+1 = 1,58 ocena ( c ) = 1+1/2+1+1/2 = 3 ocena ( d ) = 1/3+1/2+1+1/2+1/3 = 2,66 Končni vrstni red : d , a , c , b 3.3 Modul za zlivanje Modul za zlivanje v sistemu iCORE predstavlja zadnjo enoto pred posredovan - jem podatkov uporabniku .
Kot rezultat naprej posreduje ustvarjene entitete z rezultati metaiskalnika .
Če modeli še ne vsebujejo navodil za pridobitev podatkov iz določenega dokumenta ali se je njegova struktura spre - menila , dokument pregledamo z označevalnikom podatkov / entitet ( ang. data / entity extractor ) .
Uporabni deli so imena oseb , krajev , datumi .
Uporabnikov kon - tekst nam je znan že od analize poizvedbe in ga poskušamo izkoriščati ves čas .
Ko imamo dele dokumentov ustrezno označene , iz rezultatov iz - 42 Poglavje 3 : Komponente sistema iCORE Slika 3.10 : Modul za zlivanje .
gradimo graf , kjer povezave predstavljajo relacije med označenimi deli .
Označevalniki entitet delujejo kot samostojni sistemi nad poznano domeno , ki jo hranimo v bazi znanja .
Pri uporabi spletnih dokumentov lahko označevanje izboljšamo s pregledovanjem imen oblikovnih stilov CSS1 .
Poleg baze znanja potrebujemo še vzorce , v katerih se entitete pojavljajo , da jih lahko hitro označimo [ 20 ] .
Vzorce hranimo v obliki trojic .
Prvi element predstavlja besedilo levo od entitete , drugi element entiteto in tretji besedilo na desni strani entitete .
Vsak element lahko zapišemo v obliki regularnega izraza in pomnimo seznam potencialnih besed oz. besednih zvez , ki se lahko pojavijo .
Sistemu lahko vzorce podamo ročno ali pa se jih poskuša naučiti s pomočjo metod strojnega učenja .
Za učenje ne potrebujemo ročno označenih primerov , ker lahko samostojne entitete označimo le s pomočjo baze znanja in se nato naučimo relacij .
Primer vzorca za zgornji primer bi bil ( OSEBA , * rojena ?
Za sistem iCORE vzorci niso pomembni samo za hitrejše označevanje , ampak jih potrebujemo tudi za lažje vsebinsko rudarjenje , predvsem pa za ustrezno izgradnjo grafa , ki ga podamo podkomponenti za združevanje entitet ( glej razdelek 3.3.3 ) .
Sistem iCORE želi ponuditi nekaj več , zato lahko vzorce izkoristi za odgovarjanje na vprašanja uporabnika .
Cilj je doseči povratno inženirstvo ( ang. reverse engineering ) , da iz dokumentov pridobimo nazaj informacije v strukturirani obliki .
Avtomatični ( ang. automatic ) : Z nenadzorovanim učenjem poiščemo vzorce v dokumentih in poskusimo izluščiti podatke .
Ročni način za sistem iCORE ni uporaben , saj bomo imeli mnogo različnih dokumentov .
Ker bomo v dokumentu že imeli označene entitete , kar je naloga pred - hodne podkomponente , in bomo iz baze znanja poznali zgradbo entitetnega tipa , smo si nalogo olajšali .
Primer delovanja lahko vidimo na sliki 3.11.
Pozitivne in nega - tivne primere pa lahko pridobimo iz ostalih modelov za dokumente .
Tudi , ko bo uporabnik že dobil končne rezultate , bo moral imeti možnost , da označi spuščene atribute ali odstrani napačne .
Zaradi zasnove sistema iCORE smo pokazali , kako lahko algoritem s pri - stopom ovojnice uporabljamo kot avtomatskega .
3.3.3 Združevanje entitet in odprava duplikatov Podkomponenta za vsebinsko rudarjenje nam vrne hierarhično predstavljene entitete z atributi .
Primer delovanja si lahko ogledamo na sliki 3.12.
simN ( ri , rj ) Celostno relacijski ( ang. collective relational ) : Celostni pristop za razliko od relacijskega upošteva še spremembe med fazo združevanja .
simS ( ri , rj ) Za računanje podobnosti atributov lahko uporabimo kar nekaj različnih razdalj kot so kosinusna ( glej enačbo 3.1 ) , Jaro , Jaro Winkler , Soundex , Leven - shteinova , .
Atributi v sistemu iCORE so lahko še zvok , slike , video ali drugi tipi podatkov .
Zelo enostavna in z dobrimi rezultati v praksi [ 22 ] je Jaccard-ov koeficient .
Vzpostavitev začetnega stanja : Celostno relacijski pristop združuje reference po skupinah glede na soseščino in ena združitev vpliva na nadaljne .
Če pa že tu ugotovimo , da se referenci popolnoma ujemata , jih lahko takoj združimo v skupino .
Iterativno združevanje : V tem koraku združujemo potencialne pare skupin glede na celostni relacijski pristop , dokler maksimalna podobnost med različnima skupinama ne pade pod določeno mejo .
Pri združevanju entitet se lahko zgodi , da imamo v skupini vrednost atributa , ki je pomensko različna od drugih .
V sistemu iCORE za dokument Di izberemo naslednjo oceno : trust ( q , Di ) = ( 1 - ?
Sedaj izberemo vrednost vj , ko velja : j = arg max trust ( q , Di ) ( 3.12 ) i 3.4 Modul za post-procesiranje Naloga modula za post-procesiranje je , da po vsaki izvedeni poizvedbi posodobi morebitne spremembe v modelih .
vključno z dokumenti in odziv uporabnika , če je implementiran v odjemalcu .
3.4 Modul za post-procesiranje 49 Za vsakega uporabnika posebej si shranjuje zgodovino poizvedb v obliki ( rank , uid poizvedbe , ocene atributov ) ( glej razdelek 3.2.1 ) .
Naslednja možnost je , da klasifikator posodobimo , ko pridobimo primer , ki ga trenutni napačno klasificira .
Pri procesiranju dokumentov smo že v modulu za zlivanje pridobili struk - turo zapisa .
Na tem koraku moramo za dokumente določenega vira posodobiti stopnjo zaupanja .
Pri pregledovanju spletnih dokumentov moramo pregle - dovati spletne obrazce , če vsebujejo nove iskalnike .
Naslednja pomembna komponenta modelov je baza znanja , ki jo moramo vzdrževati .
Pri opisovanju modula za obdelavo poizvedb ( razdelek 3.1 ) smo se odločili , da bomo ločeno uporabljali bazo znanja za predstavitev strukture entitet in za podatke .
Poleg tega bomo hranili še vzorce , ki jih potrebujemo za uspešno označevanje entitet .
Bazo znanja strukture entitet ne posodabljamo avtomatsko , vendar le predlagamo spremembe , ki jih lahko vnese domenski ekspert ali zanje glasujejo uporabniki sistema .
Npr. za relacijo igralec igra v ekipi poznamo vzorce IgraV = { [ igralec ] igra v [ ekipa ] , najboljši v [ ekipa ] je [ igralec ] } .
V našem primeru so dokumenti kar vsi relevantni rezultati .
Hranijo obe bazi znanja ( prva namenjena strukturi entitet , druga vsebuje še podatke ) , kontekste uporabnikov , metapodatke o dokumentih , vzorce za označevanje en - titet , seznam in uteži iskalnikov za določeno skupino poizvedb , ocene virov in njihovo zaupanje , naučene modele klasifikatorjev sistema .
Vse komponente sistema iCORE uporabljajo modele , spreminjata jih le modul za zlivanje ( glej 3.3 ) in modul za post-procesiranje ( glej 3.4 ) .
Izglede posameznih modelov smo predstavili v zgornjih razdelkih ob vsaki metodi posebej .
Zaradi tega v sistemu iCORE avtomatsko obdelujemo dokumente in pol-avtomatsko posodabljamo bazo znanja entitet .
Za poizvedovanje lahko uporabimo jezik SPARQL ( ang. Protocol and RDF Query Language ) .
Primer poizvedbe , ki vrne osebe , ki živijo v Zgornjem Dupleku : PREFIX xonto : < http://zitnik.si/druzbenaOntologija/0.1/ > SELECT ?
3.6 Evaluacija Sistem iCORE ni običajen sistem za priklic podatkov .
Običajni sistemi kot rezultat vračajo le relevantne dokumente in krajše izvlečke , medtem ko mi iz njih izluščimo tudi informacije .
Podobne sisteme ocenjujemo glede na časovni odziv na poizvedbo in najbolj pomembno z uporabnikovim zadovoljstvom .
Uporabnik je zadovoljen , če so njemu ljube informacije prednostno prikazane .
Sistem iCORE je sestavljen iz več dodatnih komponent , zato lahko tudi vsako izmed njih posebej testiramo kot v strojnem učenju .
Dejanske vrednosti Napovedani pozitivni Napovedani negativni Vsi TP ( ang. true positive ) : število pravilno klasificiranih pozitivnih primerov FP ( ang. false positive ) : število napačno klasificiranih pozitivnih primerov TN ( ang. true negative ) : število pravilno klasificiranih negativnih primerov FN ( ang. false negative ) : število napačno klasificiranih negativnih primerov Tabela 3.5 : Tabela rezultatov .
Število pravilno klasificiranih T P + T N T P + F P + T N + F N Sistemi za priklic podatkov vsebujejo ogromno dokumentov .
Zaradi tega merjenje uspešnosti sistemov za priklic podatkov s klasifikacijsko natančnostjo ni primerno .
3.6.1 Ocenjevanje nerangiranih rezultatov Od sistema za priklic podatkov pričakujemo , da nam bo vrnil čimveč relevant - nih rezultatov .
Natančnost = = ( 3.14 ) število vrnjenih relevantnih T P število relevantnih v sistemu T P + F N Vedno lahko dosežemo priklic enak 1 tako , da vrnemo vse dokumente iz sis - tema , vendar bo natančnost nizka .
Van Rijsbergen je predlagal E oceno , ki s parametrom ?
= 1 - Natančnost P riklic Na podlagi E ocene se je oblikovala F ocena : Natančnost · P riklic ß2Natančnost + P riklic Splošno se uporablja F1 ocena , ki predstavlja harmonično sredino natančno - sti in priklica .
Za natančnost in priklic lahko izrišemo krivuljo natančnost-priklic ( ang. precision-recall curve ) .
Te vrednosti za i smo izračunali tako , da smo upoštevali , da sistem vrne dokumente z oceno od 1 do i. Krivuljo dobimo tako , da te vrednosti vnesemo v ravnino , kjer na abscisni osi vnašamo priklic in na ordinatni natančnost .
Za vsak priklic natančnost izračunamo : p ( ri ) = max p ( r ) ( 3.18 ) 54 Poglavje 3 : Komponente sistema iCORE Interpolirane vrednosti za primer so izračunane v Dodatku B v tabeli 4.
Različne sisteme primerjamo tako , da za rezultate poizvedbe na sistemih izrišemo krivulje in jih primerjamo med seboj .
Q in je množica relevantnih dokumentov za qj označena z { d1 , d2 , .
p DCGp = rel1 + i = 2 DCGp IdealniDCGp 3 + 4 + 0 , 63 + 1 , 5 + 0 , 86 + 0 + 0 , 36 10 , 35 4 + 3 + 1 , 89 + 1 + 0 , 43 + 0 , 39 + 0 10 , 71 3.6.3 Testni nabori podatkov Za kakršnokoli testiranje metod ali sistemov potrebujemo nabor označenih učnih in testnih podatkov .
V nekaterih primerih lahko uporabimo tudi podatkovne baze , ki že vsebujejo označene podatke in jih samo pretvorimo v želeni format .
Iz dnevnikov je računal odziv uporab - nikov glede na to , kateri dokument so izbrali pri določeni poizvedbi .
Pri združevanju entitet uporabljamo : CiteSeer : Vsebuje 2892 referenc za 1165 avtorjev za 1504 dokumentov .
Vsebuje 29,555 člankov z 58,515 referencami za 9200 avtorjev .
Za testiranje celot - nega sistema iCORE smo se odločili za nekajmesečno testno obdobje uporabe znotraj raziskovalne skupine .
Poglavje 4 Ugotovitve in nadaljne delo V diplomskem delu smo na kratko predstavili delovanje iskalnikov .
Sistem smo razdelali po komponentah , jim določili funkcije ter predlagali način izvedbe .
Pri vsaki komponenti ali njenem delu smo poskušali najti primerne rešitve , ki lahko služijo kot izhodišče za implementacijo sistema .
V današnjem času bi se zdelo nesmiselno graditi nov iskalnik s svojim indeksom , saj je konkurenca premočna .
Trdimo , da trenutnim sistemom manjkajo alternativni načini podajanja poizvedb , ki se lahko kreirajo avtomatsko .